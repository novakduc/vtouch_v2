

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 23 17:22:27 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=4,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=4,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=4,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=4,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=4,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=4,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=4,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=4,class=CODE,delta=1
   165                           	psect	text144,global,reloc=4,class=CODE,delta=1
   166                           	psect	text145,global,reloc=4,class=CODE,delta=1
   167                           	psect	text146,global,reloc=4,class=CODE,delta=1
   168                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   169                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   170                           	psect	text147,global,reloc=4,class=CODE,delta=1
   171                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   172                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   173  0000                     
   174                           ; Version 2.10
   175                           ; Generated 31/07/2019 GMT
   176                           ; 
   177                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   178                           ; All rights reserved.
   179                           ; 
   180                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   181                           ; 
   182                           ; Redistribution and use in source and binary forms, with or without modification, are
   183                           ; permitted provided that the following conditions are met:
   184                           ; 
   185                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   186                           ;        conditions and the following disclaimer.
   187                           ; 
   188                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   189                           ;        of conditions and the following disclaimer in the documentation and/or other
   190                           ;        materials provided with the distribution.
   191                           ; 
   192                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   193                           ;        software without specific prior written permission.
   194                           ; 
   195                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   196                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   197                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   198                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   199                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   200                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   201                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   202                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   203                           ; 
   204                           ; 
   205                           ; Code-generator required, PIC18F57K42 Definitions
   206                           ; 
   207                           ; SFR Addresses
   208  0000                     
   209 ;;_mode	offset	0
   210 ;;_channel	offset=-1 (param)
   211 ;;_s	offset=-2 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_cmd	offset=-1 (param)
   214 ;;_data	offset=-1 (param)
   215 ;;__this	offset=-2 (param)
   216 ;;_i	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_i	offset	0
   219 ;;_lp_speed	offset	0
   220 ;;_new	offset=-4 (param)
   221 ;;_bn	offset=-5 (param)
   222 ;;_slow	offset=-6 (param)
   223 ;;_chan	offset=-1 (param)
   224 ;;_to_what	offset=-2 (param)
   225 ;;_u	offset	0
   226 ;;_s	offset=-2 (param)
   227 ;;_index	offset=-1 (param)
   228 ;;_arg	offset	0
   229 ;;_exp	offset	4
   230 ;;_sign	offset=-1 (param)
   231 ;;_val	offset=-5 (param)
   232 ;;_flipper	offset=-1 (param)
   233 ;;_f	offset	0
   234 ;;_ap	offset	6
   235 ;;_s	offset=-3 (param)
   236 ;;_fmt	offset=-5 (param)
   237 ;;_line	offset=-1 (param)
   238 ;;_vterm	offset=-2 (param)
   239 ;;_numMilliseconds	offset=-2 (param)
   240 ;;_vterm	offset=-1 (param)
   241 ;;_r	offset=-1 (param)
   242 ;;_c	offset=-2 (param)
   243 ;;_strPtr	offset=-4 (param)
   244 ;;_strPtr	offset=-1 (param)
   245 ;;_delay	offset=-4 (param)
   246 ;;_strPtr	offset=-2 (param)
   247 ;;__this	offset=-2 (param)
   248 ;;_clearBuffer	offset=-3 (param)
   249 ;;_s	offset	0
   250 ;;_k	offset	2
   251 ;;_dest	offset=-2 (param)
   252 ;;_c	offset=-4 (param)
   253 ;;_n	offset=-6 (param)
   254 ;;_ap	offset	0
   255 ;;_fmt	offset=-3 (param)
   256 ;;_cfmt	offset	0
   257 ;;_fp	offset=-2 (param)
   258 ;;_fmt	offset=-4 (param)
   259 ;;_ap	offset=-6 (param)
   260 ;;_vfpfcnvrt$4446	offset	0
   261 ;;_vfpfcnvrt$4452	offset	2
   262 ;;_vfpfcnvrt$4445	offset	4
   263 ;;_llu	offset	6
   264 ;;_ll	offset	14
   265 ;;_f	offset	22
   266 ;;_ct	offset	26
   267 ;;_cp	offset	29
   268 ;;_c	offset	31
   269 ;;_fp	offset=-2 (param)
   270 ;;_fmt	offset=-4 (param)
   271 ;;_ap	offset=-6 (param)
   272 ;;_xtoa$4431	offset	0
   273 ;;_xtoa$4430	offset	2
   274 ;;_n	offset	4
   275 ;;_c	offset	12
   276 ;;_i	offset	14
   277 ;;_w	offset	16
   278 ;;_p	offset	18
   279 ;;_fp	offset=-2 (param)
   280 ;;_d	offset=-10 (param)
   281 ;;_x	offset=-11 (param)
   282 ;;_toupper$5091	offset	0
   283 ;;_c	offset=-2 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_r	offset	0
   287 ;;_l	offset	2
   288 ;;__l	offset=-2 (param)
   289 ;;__r	offset=-4 (param)
   290 ;;_n	offset=-6 (param)
   291 ;;_nuls	offset	0
   292 ;;_l	offset	7
   293 ;;_p	offset	9
   294 ;;_cp	offset	11
   295 ;;_w	offset	13
   296 ;;_i	offset	15
   297 ;;_fp	offset=-2 (param)
   298 ;;_s	offset=-4 (param)
   299 ;;_efgtoa$4410	offset	0
   300 ;;_efgtoa$4409	offset	2
   301 ;;_efgtoa$4408	offset	4
   302 ;;_efgtoa$4404	offset	6
   303 ;;_efgtoa$4400	offset	8
   304 ;;_efgtoa$4399	offset	10
   305 ;;_u	offset	12
   306 ;;_g	offset	16
   307 ;;_l	offset	20
   308 ;;_h	offset	24
   309 ;;_ou	offset	28
   310 ;;_n	offset	32
   311 ;;_e	offset	34
   312 ;;_i	offset	36
   313 ;;_w	offset	38
   314 ;;_p	offset	40
   315 ;;_sign	offset	42
   316 ;;_d	offset	44
   317 ;;_ne	offset	46
   318 ;;_m	offset	48
   319 ;;_pp	offset	50
   320 ;;_t	offset	52
   321 ;;_mode	offset	54
   322 ;;_nmode	offset	55
   323 ;;_fp	offset=-2 (param)
   324 ;;_f	offset=-6 (param)
   325 ;;_c	offset=-7 (param)
   326 ;;_tolower$5076	offset	0
   327 ;;_c	offset=-2 (param)
   328 ;;_c	offset=-2 (param)
   329 ;;_d	offset	0
   330 ;;_s	offset	2
   331 ;;_dest	offset=-2 (param)
   332 ;;_src	offset=-4 (param)
   333 ;;_u	offset	0
   334 ;;_m	offset	4
   335 ;;_e	offset	8
   336 ;;_x	offset=-4 (param)
   337 ;;_u	offset	0
   338 ;;_e	offset	4
   339 ;;_x	offset=-4 (param)
   340 ;;_exp1	offset	0
   341 ;;_sign1	offset	1
   342 ;;_f1	offset=-4 (param)
   343 ;;_b	offset=-4 (param)
   344 ;;_a	offset=-8 (param)
   345 ;;_grs	offset	0
   346 ;;_bexp	offset	1
   347 ;;_aexp	offset	2
   348 ;;_signs	offset	3
   349 ;;_b	offset=-4 (param)
   350 ;;_a	offset=-8 (param)
   351 ;;_f1	offset=-4 (param)
   352 ;;_prod	offset	0
   353 ;;_grs	offset	4
   354 ;;_temp	offset	8
   355 ;;_bexp	offset	10
   356 ;;_aexp	offset	11
   357 ;;_sign	offset	12
   358 ;;_b	offset=-4 (param)
   359 ;;_a	offset=-8 (param)
   360 ;;_ff1	offset=-4 (param)
   361 ;;_ff2	offset=-8 (param)
   362 ;;_ff1	offset=-4 (param)
   363 ;;_ff2	offset=-8 (param)
   364 ;;_grs	offset	0
   365 ;;_rem	offset	4
   366 ;;_new_exp	offset	8
   367 ;;_aexp	offset	10
   368 ;;_bexp	offset	11
   369 ;;_sign	offset	12
   370 ;;_b	offset=-4 (param)
   371 ;;_a	offset=-8 (param)
   372 ;;_sign	offset	0
   373 ;;_counter	offset	1
   374 ;;_dividend	offset=-2 (param)
   375 ;;_divisor	offset=-4 (param)
   376 ;;_quotient	offset	0
   377 ;;_sign	offset	2
   378 ;;_counter	offset	3
   379 ;;_dividend	offset=-2 (param)
   380 ;;_divisor	offset=-4 (param)
   381 ;;_dtoa$4376	offset	0
   382 ;;_n	offset	2
   383 ;;_i	offset	10
   384 ;;_s	offset	12
   385 ;;_w	offset	14
   386 ;;_p	offset	16
   387 ;;_fp	offset=-2 (param)
   388 ;;_d	offset=-10 (param)
   389 ;;_a	offset=-2 (param)
   390 ;;_sign	offset	0
   391 ;;_counter	offset	1
   392 ;;_dividend	offset=-8 (param)
   393 ;;_divisor	offset=-16 (param)
   394 ;;_quotient	offset	0
   395 ;;_sign	offset	8
   396 ;;_counter	offset	9
   397 ;;_dividend	offset=-8 (param)
   398 ;;_divisor	offset=-16 (param)
   399 ;;_w	offset	0
   400 ;;_fp	offset=-2 (param)
   401 ;;_c	offset=-3 (param)
   402 ;;_w	offset	0
   403 ;;_i	offset	2
   404 ;;_fp	offset=-2 (param)
   405 ;;_buf	offset=-4 (param)
   406 ;;_p	offset=-6 (param)
   407 ;;_a	offset	0
   408 ;;_s	offset=-2 (param)
   409 ;;_i	offset	0
   410 ;;_c	offset	2
   411 ;;_s	offset=-2 (param)
   412 ;;_fp	offset=-4 (param)
   413 ;;_c	offset=-2 (param)
   414 ;;_fp	offset=-4 (param)
   415 ;;_c	offset=-1 (param)
   416 ;;__this	offset=-2 (param)
   417 ;;_c	offset=-3 (param)
   418 ;;_atoi$4929	offset	0
   419 ;;_atoi$4927	offset	2
   420 ;;_atoi$4928	offset	4
   421 ;;_n	offset	5
   422 ;;_neg	offset	7
   423 ;;_s	offset=-2 (param)
   424 ;;_isspace$4967	offset	0
   425 ;;_c	offset=-2 (param)
   426 ;;_c	offset=-2 (param)
   427 ;;_vterm	offset=-1 (param)
   428 ;;_new_response_info	offset=-1 (param)
   429 ;;_new_response_info	offset=-1 (param)
   430 ;;_level	offset=-2 (param)
   431 ;;_dutyValue	offset=-2 (param)
   432 ;;_timer	offset=-1 (param)
   433 ;;_timer	offset=-1 (param)
   434 ;;_count	offset=-3 (param)
   435 ;;_InterruptHandler	offset=-3 (param)
   436 ;;_InterruptHandler	offset=-3 (param)
   437 ;;_InterruptHandler	offset=-3 (param)
   438 ;;_InterruptHandler	offset=-3 (param)
   439 ;;_InterruptHandler	offset=-3 (param)
   440 ;;_InterruptHandler	offset=-3 (param)
   441 ;;_state	offset	0
   442 ;;_InterruptHandler	offset=-3 (param)
   443 ;;_InterruptHandler	offset=-3 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_InterruptHandler	offset=-3 (param)
   446 ;;_i	offset	0
   447 ;;_sw_value	offset	1
   448 ;;_timerVal	offset=-2 (param)
   449 ;;_channel	offset=-1 (param)
   450 ;;_i	offset	0
   451                           
   452                           	psect	idataBANK0
   453  017CF4                     __pidataBANK0:
   454                           	opt callstack 0
   455                           
   456                           ;initializer for _R
   457  017CF4  0000               	dw	0
   458  017CF6  0000               	dw	0
   459  017CF8  0000               	dw	0
   460  017CFA  0000               	dw	0
   461  017CFC  0000               	dw	0
   462  017CFE  0000               	dw	0
   463  017D00  0000               	dw	0
   464  017D02  0000               	dw	0
   465  017D04  0000               	dw	0
   466  017D06  0000               	dw	0
   467  017D08  0000               	dw	0
   468  017D0A  0000               	dw	0
   469  017D0C  0000               	dw	0
   470  017D0E  0000               	dw	0
   471  017D10  0000               	dw	0
   472  017D12  0000               	dw	0
   473  017D14  0F5B               	dw	3931
   474  017D16  0F88               	dw	3976
   475  017D18  00                 	db	0
   476  017D19  0000               	dw	0
   477  017D1B  00                 	db	0
   478                           
   479                           ;initializer for stoa@F1166
   480  017D1C  28                 	db	40
   481  017D1D  6E                 	db	110
   482  017D1E  75                 	db	117
   483  017D1F  6C                 	db	108
   484  017D20  6C                 	db	108
   485  017D21  29                 	db	41
   486  017D22  00                 	db	0
   487                           
   488                           ;initializer for _port_data
   489  017D23  FF                 	db	255
   490  017D24  00                 	db	0
   491  017D25  FF                 	db	255
   492  017D26  00                 	db	0
   493  017D27  FF                 	db	255
   494  017D28  00                 	db	0
   495  017D29  FF                 	db	255
   496  017D2A  00                 	db	0
   497  017D2B  FF                 	db	255
   498  017D2C  00                 	db	0
   499  017D2D  FF                 	db	255
   500  017D2E  00                 	db	0
   501  017D2F  FF                 	db	255
   502  017D30  00                 	db	0
   503  017D31  FF                 	db	255
   504  017D32  00                 	db	0
   505                           
   506                           	psect	idataBANK1
   507  016B28                     __pidataBANK1:
   508                           	opt callstack 0
   509                           
   510                           ;initializer for _V
   511  016B28  00                 	db	0
   512  016B29  00                 	db	0
   513  016B2A  00                 	db	0
   514  016B2B  00                 	db	0
   515  016B2C  00                 	db	0
   516  016B2D  00                 	db	0
   517  016B2E  00                 	db	0
   518  016B2F  00                 	db	0
   519  016B30  00                 	db	0
   520  016B31  00                 	db	0
   521  016B32  00                 	db	0
   522  016B33  00                 	db	0
   523  016B34  00                 	db	0
   524  016B35  00                 	db	0
   525  016B36  00                 	db	0
   526  016B37  00                 	db	0
   527  016B38  00                 	db	0
   528  016B39  00                 	db	0
   529  016B3A  00                 	db	0
   530  016B3B  00                 	db	0
   531  016B3C  00                 	db	0
   532  016B3D  00                 	db	0
   533  016B3E  00                 	db	0
   534  016B3F  00                 	db	0
   535  016B40  00                 	db	0
   536  016B41  00                 	db	0
   537  016B42  00                 	db	0
   538  016B43  00                 	db	0
   539  016B44  00                 	db	0
   540  016B45  00                 	db	0
   541  016B46  00                 	db	0
   542  016B47  00                 	db	0
   543  016B48  00                 	db	0
   544  016B49  00                 	db	0
   545  016B4A  00                 	db	0
   546  016B4B  00                 	db	0
   547  016B4C  00                 	db	0
   548  016B4D  00                 	db	0
   549  016B4E  00                 	db	0
   550  016B4F  00                 	db	0
   551  016B50  00                 	db	0
   552  016B51  00                 	db	0
   553  016B52  00                 	db	0
   554  016B53  00                 	db	0
   555  016B54  00                 	db	0
   556  016B55  00                 	db	0
   557  016B56  00                 	db	0
   558  016B57  00                 	db	0
   559  016B58  00                 	db	0
   560  016B59  00                 	db	0
   561  016B5A  00                 	db	0
   562  016B5B  00                 	db	0
   563  016B5C  00                 	db	0
   564  016B5D  00                 	db	0
   565  016B5E  00                 	db	0
   566  016B5F  00                 	db	0
   567  016B60  00                 	db	0
   568  016B61  00                 	db	0
   569  016B62  00                 	db	0
   570  016B63  00                 	db	0
   571  016B64  00                 	db	0
   572  016B65  00                 	db	0
   573  016B66  00                 	db	0
   574  016B67  00                 	db	0
   575  016B68  00                 	db	0
   576  016B69  00                 	db	0
   577  016B6A  00                 	db	0
   578  016B6B  00                 	db	0
   579  016B6C  00                 	db	0
   580  016B6D  00                 	db	0
   581  016B6E  00                 	db	0
   582  016B6F  00                 	db	0
   583  016B70  00                 	db	0
   584  016B71  00                 	db	0
   585  016B72  00                 	db	0
   586  016B73  00                 	db	0
   587  016B74  00                 	db	0
   588  016B75  00                 	db	0
   589  016B76  00                 	db	0
   590  016B77  00                 	db	0
   591  016B78  00                 	db	0
   592  016B79  00                 	db	0
   593  016B7A  00                 	db	0
   594  016B7B  00                 	db	0
   595  016B7C  00                 	db	0
   596  016B7D  00                 	db	0
   597  016B7E  00                 	db	0
   598  016B7F  00                 	db	0
   599  016B80  00                 	db	0
   600  016B81  00                 	db	0
   601  016B82  00                 	db	0
   602  016B83  00                 	db	0
   603  016B84  00                 	db	0
   604  016B85  00                 	db	0
   605  016B86  00                 	db	0
   606  016B87  00                 	db	0
   607  016B88  00                 	db	0
   608  016B89  00                 	db	0
   609  016B8A  00                 	db	0
   610  016B8B  00                 	db	0
   611  016B8C  00                 	db	0
   612  016B8D  00                 	db	0
   613  016B8E  00                 	db	0
   614  016B8F  00                 	db	0
   615  016B90  00                 	db	0
   616  016B91  00                 	db	0
   617  016B92  00                 	db	0
   618  016B93  00                 	db	0
   619  016B94  00                 	db	0
   620  016B95  00                 	db	0
   621  016B96  00                 	db	0
   622  016B97  00                 	db	0
   623  016B98  00                 	db	0
   624  016B99  00                 	db	0
   625  016B9A  00                 	db	0
   626  016B9B  00                 	db	0
   627  016B9C  00                 	db	0
   628  016B9D  00                 	db	0
   629  016B9E  00                 	db	0
   630  016B9F  00                 	db	0
   631  016BA0  00                 	db	0
   632  016BA1  00                 	db	0
   633  016BA2  00                 	db	0
   634  016BA3  00                 	db	0
   635  016BA4  00                 	db	0
   636  016BA5  00                 	db	0
   637  016BA6  00                 	db	0
   638  016BA7  00                 	db	0
   639  016BA8  00                 	db	0
   640  016BA9  0000               	dw	0
   641  016BAB  0000               	dw	0
   642  016BAD  0000               	dw	0
   643  016BAF  0000               	dw	0
   644  016BB1  00                 	db	0
   645  016BB2  00                 	db	0
   646  016BB3  00                 	db	0
   647  016BB4  00                 	db	0
   648  016BB5  00                 	db	0
   649  016BB6  00                 	db	0
   650  016BB7  0000               	dw	0
   651  016BB9  0000               	dw	0
   652  016BBB  0000               	dw	0
   653  016BBD  0000               	dw	0
   654  016BBF  0000               	dw	0
   655  016BC1  0000               	dw	0
   656  016BC3  00                 	db	0
   657  016BC4  00                 	db	0
   658  016BC5  00                 	db	0
   659  016BC6  00                 	db	0
   660  016BC7  00                 	db	0
   661  016BC8  00                 	db	0
   662  016BC9  00                 	db	0
   663  016BCA  00                 	db	0
   664  016BCB  00                 	db	0
   665  016BCC  00                 	db	0
   666  016BCD  0000               	dw	0
   667  016BCF  0000               	dw	0
   668  016BD1  2D                 	db	45
   669  016BD2  00                 	db	0
   670  016BD3  0000               	dw	0
   671  016BD5  0000               	dw	0
   672  016BD7  0000               	dw	0
   673  016BD9  0000               	dw	0
   674  016BDB  0000               	dw	0
   675  016BDD  0000               	dw	0
   676  016BDF  0000               	dw	0
   677  016BE1  0000               	dw	0
   678  016BE3  00                 	db	0
   679  016BE4  00                 	db	0
   680  016BE5  00                 	db	0
   681  016BE6  00                 	db	0
   682  016BE7  00                 	db	0
   683  016BE8  00                 	db	0
   684  016BE9  00                 	db	0
   685  016BEA  00                 	db	0
   686  016BEB  00                 	db	0
   687  016BEC  00                 	db	0
   688  016BED  00                 	db	0
   689  016BEE  00                 	db	0
   690  016BEF  00                 	db	0
   691  016BF0  00                 	db	0
   692  016BF1  00                 	db	0
   693  016BF2  00                 	db	0
   694  016BF3  00                 	db	0
   695  016BF4  00                 	db	0
   696  016BF5  00                 	db	0
   697  016BF6  00                 	db	0
   698  016BF7  00                 	db	0
   699  016BF8  00                 	db	0
   700  016BF9  00                 	db	0
   701  016BFA  00                 	db	0
   702  016BFB  00                 	db	0
   703  016BFC  00                 	db	0
   704  016BFD  00                 	db	0
   705  016BFE  00                 	db	0
   706  016BFF  00                 	db	0
   707  016C00  00                 	db	0
   708  016C01  00                 	db	0
   709  016C02  00                 	db	0
   710  016C03  00                 	db	0
   711  016C04  00                 	db	0
   712  016C05  00                 	db	0
   713  016C06  00                 	db	0
   714  016C07  00                 	db	0
   715  016C08  00                 	db	0
   716  016C09  00                 	db	0
   717  016C0A  00                 	db	0
   718  016C0B  00                 	db	0
   719                           
   720                           	psect	mediumconst
   721  00FE5E                     __pmediumconst:
   722                           	opt callstack 0
   723  00FE5E  00                 	db	0
   724  00FE5F                     _T:
   725                           	opt callstack 0
   726  00FE5F  63                 	db	99
   727  00FE60  6F                 	db	111
   728  00FE61  6D                 	db	109
   729  00FE62  6D                 	db	109
   730  00FE63  61                 	db	97
   731  00FE64  6E                 	db	110
   732  00FE65  64                 	db	100
   733  00FE66  73                 	db	115
   734  00FE67  20                 	db	32
   735  00FE68  31                 	db	49
   736  00FE69  00                 	db	0
   737  00FE6A  00                 	db	0
   738  00FE6B  00                 	db	0
   739  00FE6C  00                 	db	0
   740  00FE6D  00                 	db	0
   741  00FE6E  00                 	db	0
   742  00FE6F  00                 	db	0
   743  00FE70  00                 	db	0
   744  00FE71  64                 	db	100
   745  00FE72  69                 	db	105
   746  00FE73  73                 	db	115
   747  00FE74  70                 	db	112
   748  00FE75  6C                 	db	108
   749  00FE76  61                 	db	97
   750  00FE77  79                 	db	121
   751  00FE78  73                 	db	115
   752  00FE79  20                 	db	32
   753  00FE7A  31                 	db	49
   754  00FE7B  00                 	db	0
   755  00FE7C  00                 	db	0
   756  00FE7D  00                 	db	0
   757  00FE7E  00                 	db	0
   758  00FE7F  00                 	db	0
   759  00FE80  00                 	db	0
   760  00FE81  00                 	db	0
   761  00FE82  00                 	db	0
   762  00FE83  63                 	db	99
   763  00FE84  6F                 	db	111
   764  00FE85  6D                 	db	109
   765  00FE86  6D                 	db	109
   766  00FE87  61                 	db	97
   767  00FE88  6E                 	db	110
   768  00FE89  64                 	db	100
   769  00FE8A  73                 	db	115
   770  00FE8B  20                 	db	32
   771  00FE8C  32                 	db	50
   772  00FE8D  00                 	db	0
   773  00FE8E  00                 	db	0
   774  00FE8F  00                 	db	0
   775  00FE90  00                 	db	0
   776  00FE91  00                 	db	0
   777  00FE92  00                 	db	0
   778  00FE93  00                 	db	0
   779  00FE94  00                 	db	0
   780  00FE95  64                 	db	100
   781  00FE96  69                 	db	105
   782  00FE97  73                 	db	115
   783  00FE98  70                 	db	112
   784  00FE99  6C                 	db	108
   785  00FE9A  61                 	db	97
   786  00FE9B  79                 	db	121
   787  00FE9C  73                 	db	115
   788  00FE9D  20                 	db	32
   789  00FE9E  32                 	db	50
   790  00FE9F  00                 	db	0
   791  00FEA0  00                 	db	0
   792  00FEA1  00                 	db	0
   793  00FEA2  00                 	db	0
   794  00FEA3  00                 	db	0
   795  00FEA4  00                 	db	0
   796  00FEA5  00                 	db	0
   797  00FEA6  00                 	db	0
   798  00FEA7  63                 	db	99
   799  00FEA8  6F                 	db	111
   800  00FEA9  6D                 	db	109
   801  00FEAA  6D                 	db	109
   802  00FEAB  61                 	db	97
   803  00FEAC  6E                 	db	110
   804  00FEAD  64                 	db	100
   805  00FEAE  73                 	db	115
   806  00FEAF  20                 	db	32
   807  00FEB0  33                 	db	51
   808  00FEB1  00                 	db	0
   809  00FEB2  00                 	db	0
   810  00FEB3  00                 	db	0
   811  00FEB4  00                 	db	0
   812  00FEB5  00                 	db	0
   813  00FEB6  00                 	db	0
   814  00FEB7  00                 	db	0
   815  00FEB8  00                 	db	0
   816  00FEB9  64                 	db	100
   817  00FEBA  69                 	db	105
   818  00FEBB  73                 	db	115
   819  00FEBC  70                 	db	112
   820  00FEBD  6C                 	db	108
   821  00FEBE  61                 	db	97
   822  00FEBF  79                 	db	121
   823  00FEC0  73                 	db	115
   824  00FEC1  20                 	db	32
   825  00FEC2  33                 	db	51
   826  00FEC3  00                 	db	0
   827  00FEC4  00                 	db	0
   828  00FEC5  00                 	db	0
   829  00FEC6  00                 	db	0
   830  00FEC7  00                 	db	0
   831  00FEC8  00                 	db	0
   832  00FEC9  00                 	db	0
   833  00FECA  00                 	db	0
   834  00FECB  63                 	db	99
   835  00FECC  6F                 	db	111
   836  00FECD  6D                 	db	109
   837  00FECE  6D                 	db	109
   838  00FECF  61                 	db	97
   839  00FED0  6E                 	db	110
   840  00FED1  64                 	db	100
   841  00FED2  73                 	db	115
   842  00FED3  20                 	db	32
   843  00FED4  34                 	db	52
   844  00FED5  00                 	db	0
   845  00FED6  00                 	db	0
   846  00FED7  00                 	db	0
   847  00FED8  00                 	db	0
   848  00FED9  00                 	db	0
   849  00FEDA  00                 	db	0
   850  00FEDB  00                 	db	0
   851  00FEDC  00                 	db	0
   852  00FEDD  64                 	db	100
   853  00FEDE  69                 	db	105
   854  00FEDF  73                 	db	115
   855  00FEE0  70                 	db	112
   856  00FEE1  6C                 	db	108
   857  00FEE2  61                 	db	97
   858  00FEE3  79                 	db	121
   859  00FEE4  73                 	db	115
   860  00FEE5  20                 	db	32
   861  00FEE6  34                 	db	52
   862  00FEE7  00                 	db	0
   863  00FEE8  00                 	db	0
   864  00FEE9  00                 	db	0
   865  00FEEA  00                 	db	0
   866  00FEEB  00                 	db	0
   867  00FEEC  00                 	db	0
   868  00FEED  00                 	db	0
   869  00FEEE  00                 	db	0
   870  00FEEF                     __end_of_T:
   871                           	opt callstack 0
   872  0000                     _IVTADL	set	14493
   873  0000                     _IVTADH	set	14494
   874  0000                     _IVTADU	set	14495
   875  0000                     _PIR4bits	set	14756
   876  0000                     _PIE8bits	set	14744
   877  0000                     _PIR8bits	set	14760
   878  0000                     _SCANPR	set	14839
   879  0000                     _DMA2PR	set	14836
   880  0000                     _DMA1PR	set	14835
   881  0000                     _MAINPR	set	14834
   882  0000                     _ISRPR	set	14833
   883  0000                     _PIE2bits	set	14738
   884  0000                     _PIR2bits	set	14754
   885  0000                     _PIE9bits	set	14745
   886  0000                     _PIR9bits	set	14761
   887  0000                     _PIE6bits	set	14742
   888  0000                     _PIE3bits	set	14739
   889  0000                     _PMD7	set	14791
   890  0000                     _PMD6	set	14790
   891  0000                     _PMD5	set	14789
   892  0000                     _PMD4	set	14788
   893  0000                     _PMD3	set	14787
   894  0000                     _PMD2	set	14786
   895  0000                     _PMD1	set	14785
   896  0000                     _PMD0	set	14784
   897  0000                     _OSCTUNE	set	14814
   898  0000                     _OSCFRQ	set	14815
   899  0000                     _OSCEN	set	14813
   900  0000                     _OSCCON3	set	14811
   901  0000                     _OSCCON1	set	14809
   902  0000                     _IPR8bits	set	14728
   903  0000                     _IPR9bits	set	14729
   904  0000                     _IPR5bits	set	14725
   905  0000                     _IPR1bits	set	14721
   906  0000                     _IPR3bits	set	14723
   907  0000                     _IPR6bits	set	14726
   908  0000                     _IPR2bits	set	14722
   909  0000                     _PIE5bits	set	14741
   910  0000                     _PIE1bits	set	14737
   911  0000                     _PIR5bits	set	14757
   912  0000                     _PIR1bits	set	14753
   913  0000                     _PLLR	set	118496
   914  0000                     _SPI1SDIPPS	set	15071
   915  0000                     _U1RXPPS	set	15077
   916  0000                     _RC6PPS	set	14870
   917  0000                     _RC5PPS	set	14869
   918  0000                     _INT1PPS	set	15041
   919  0000                     _RD1PPS	set	14873
   920  0000                     _INT0PPS	set	15040
   921  0000                     _RC3PPS	set	14867
   922  0000                     _RB6PPS	set	14862
   923  0000                     _SPI1SCKPPS	set	15070
   924  0000                     _U2RXPPS	set	15080
   925  0000                     _SLRCONF	set	14995
   926  0000                     _SLRCONE	set	14979
   927  0000                     _SLRCOND	set	14963
   928  0000                     _SLRCONC	set	14947
   929  0000                     _SLRCONB	set	14931
   930  0000                     _SLRCONA	set	14915
   931  0000                     _ODCOND	set	14962
   932  0000                     _ODCONC	set	14946
   933  0000                     _ODCONB	set	14930
   934  0000                     _ODCONA	set	14914
   935  0000                     _ODCONF	set	14994
   936  0000                     _ODCONE	set	14978
   937  0000                     _WPUC	set	14945
   938  0000                     _WPUA	set	14913
   939  0000                     _WPUB	set	14929
   940  0000                     _WPUE	set	14977
   941  0000                     _WPUF	set	14993
   942  0000                     _WPUD	set	14961
   943  0000                     _ANSELA	set	14912
   944  0000                     _ANSELF	set	14992
   945  0000                     _ANSELE	set	14976
   946  0000                     _ANSELB	set	14928
   947  0000                     _ANSELC	set	14944
   948  0000                     _ANSELD	set	14960
   949  0000                     _DMA2SSA	set	15321
   950  0000                     _DMA1SSA	set	15353
   951  0000                     _DMA2DSZ	set	15310
   952  0000                     _DMA2SSZ	set	15319
   953  0000                     _DMA2DSA	set	15312
   954  0000                     _DMA1DSZ	set	15342
   955  0000                     _DMA1SSZ	set	15351
   956  0000                     _DMA1DSA	set	15344
   957  0000                     _DMA1CON0bits	set	15356
   958  0000                     _DMA1CON1bits	set	15357
   959  0000                     _DMA2CON0	set	15324
   960  0000                     _DMA2AIRQ	set	15326
   961  0000                     _DMA2SIRQ	set	15327
   962  0000                     _DMA2CON1	set	15325
   963  0000                     _DMA1CON0	set	15356
   964  0000                     _DMA1AIRQ	set	15358
   965  0000                     _DMA1SIRQ	set	15359
   966  0000                     _DMA1CON1	set	15357
   967  0000                     _CLKRCON	set	15589
   968  0000                     _CLKRCLK	set	15590
   969  0000                     _SPI1INTFbits	set	15642
   970  0000                     _SPI1RXB	set	15632
   971  0000                     _SPI1TXB	set	15633
   972  0000                     _SPI1TCNTL	set	15634
   973  0000                     _SPI1CON0	set	15636
   974  0000                     _SPI1CLK	set	15644
   975  0000                     _SPI1BAUD	set	15641
   976  0000                     _SPI1CON2	set	15638
   977  0000                     _SPI1CON1	set	15637
   978  0000                     _U2RXB	set	15824
   979  0000                     _U2TXB	set	15826
   980  0000                     _U2ERRIE	set	15842
   981  0000                     _U2ERRIR	set	15841
   982  0000                     _U2UIR	set	15840
   983  0000                     _U2FIFO	set	15839
   984  0000                     _U2BRGH	set	15838
   985  0000                     _U2BRGL	set	15837
   986  0000                     _U2CON2	set	15836
   987  0000                     _U2CON1	set	15835
   988  0000                     _U2CON0	set	15834
   989  0000                     _U2P3L	set	15832
   990  0000                     _U2P2L	set	15830
   991  0000                     _U2P1L	set	15828
   992  0000                     _U1RXB	set	15848
   993  0000                     _U1TXB	set	15850
   994  0000                     _U1ERRIE	set	15866
   995  0000                     _U1ERRIR	set	15865
   996  0000                     _U1UIR	set	15864
   997  0000                     _U1FIFO	set	15863
   998  0000                     _U1BRGH	set	15862
   999  0000                     _U1BRGL	set	15861
  1000  0000                     _U1CON2	set	15860
  1001  0000                     _U1CON1	set	15859
  1002  0000                     _U1CON0	set	15858
  1003  0000                     _U1P3H	set	15857
  1004  0000                     _U1P3L	set	15856
  1005  0000                     _U1P2H	set	15855
  1006  0000                     _U1P2L	set	15854
  1007  0000                     _U1P1H	set	15853
  1008  0000                     _U1P1L	set	15852
  1009  0000                     _FVRCON	set	16065
  1010  0000                     _ADFLTRL	set	16102
  1011  0000                     _ADFLTRH	set	16103
  1012  0000                     _ADCON0bits	set	16120
  1013  0000                     _ADCON0	set	16120
  1014  0000                     _ADCLK	set	16127
  1015  0000                     _ADACT	set	16126
  1016  0000                     _ADREF	set	16125
  1017  0000                     _ADSTAT	set	16124
  1018  0000                     _ADCON3	set	16123
  1019  0000                     _ADCON2	set	16122
  1020  0000                     _ADCON1	set	16121
  1021  0000                     _ADPREH	set	16119
  1022  0000                     _ADPREL	set	16118
  1023  0000                     _ADCAP	set	16117
  1024  0000                     _ADACQH	set	16116
  1025  0000                     _ADACQL	set	16115
  1026  0000                     _ADPCH	set	16113
  1027  0000                     _ADRPT	set	16108
  1028  0000                     _ADACCU	set	16106
  1029  0000                     _ADSTPTH	set	16101
  1030  0000                     _ADSTPTL	set	16100
  1031  0000                     _ADUTHH	set	16097
  1032  0000                     _ADUTHL	set	16096
  1033  0000                     _ADLTHH	set	16095
  1034  0000                     _ADLTHL	set	16094
  1035  0000                     _CCPTMRS1bits	set	16223
  1036  0000                     _PORTFbits	set	16335
  1037  0000                     _LATCbits	set	16316
  1038  0000                     _LATDbits	set	16317
  1039  0000                     _PORTBbits	set	16331
  1040  0000                     _T2CON	set	16300
  1041  0000                     _T2TMR	set	16298
  1042  0000                     _T2PR	set	16299
  1043  0000                     _T2RST	set	16303
  1044  0000                     _T2HLT	set	16301
  1045  0000                     _T2CLKCON	set	16302
  1046  0000                     _PWM8DCL	set	16224
  1047  0000                     _PWM8DCH	set	16225
  1048  0000                     _PWM8CON	set	16226
  1049  0000                     _LATEbits	set	16318
  1050  0000                     _T5CONbits	set	16282
  1051  0000                     _T5CON	set	16282
  1052  0000                     _TMR5L	set	16280
  1053  0000                     _TMR5H	set	16281
  1054  0000                     _T5CLK	set	16285
  1055  0000                     _T5GATE	set	16284
  1056  0000                     _T5GCON	set	16283
  1057  0000                     _T6CON	set	16276
  1058  0000                     _T6TMR	set	16274
  1059  0000                     _T6PR	set	16275
  1060  0000                     _T6RST	set	16279
  1061  0000                     _T6HLT	set	16277
  1062  0000                     _T6CLKCON	set	16278
  1063  0000                     _TRISD	set	16325
  1064  0000                     _TRISC	set	16324
  1065  0000                     _TRISB	set	16323
  1066  0000                     _TRISA	set	16322
  1067  0000                     _TRISF	set	16327
  1068  0000                     _TRISE	set	16326
  1069  0000                     _LATC	set	16316
  1070  0000                     _LATB	set	16315
  1071  0000                     _LATF	set	16319
  1072  0000                     _LATA	set	16314
  1073  0000                     _LATD	set	16317
  1074  0000                     _LATE	set	16318
  1075  0000                     _IVTLOCKbits	set	16340
  1076  0000                     _IVTLOCK	set	16340
  1077  0000                     _INTCON0bits	set	16338
  1078  0000                     _GIE	set	130711
  1079  00FEEF                     
  1080                           ; BSR set to: 57
  1081  00FEEF  20                 	db	32
  1082  00FEF0  4D                 	db	77	;'M'
  1083  00FEF1  65                 	db	101	;'e'
  1084  00FEF2  73                 	db	115	;'s'
  1085  00FEF3  67                 	db	103	;'g'
  1086  00FEF4  20                 	db	32
  1087  00FEF5  25                 	db	37
  1088  00FEF6  64                 	db	100	;'d'
  1089  00FEF7  20                 	db	32
  1090  00FEF8  53                 	db	83	;'S'
  1091  00FEF9  74                 	db	116	;'t'
  1092  00FEFA  61                 	db	97	;'a'
  1093  00FEFB  63                 	db	99	;'c'
  1094  00FEFC  6B                 	db	107	;'k'
  1095  00FEFD  20                 	db	32
  1096  00FEFE  25                 	db	37
  1097  00FEFF  64                 	db	100	;'d'
  1098  00FF00  20                 	db	32
  1099  00FF01  20                 	db	32
  1100  00FF02  20                 	db	32
  1101  00FF03  20                 	db	32
  1102  00FF04  20                 	db	32
  1103  00FF05  20                 	db	32
  1104  00FF06  00                 	db	0
  1105  00FF07                     STR_27:
  1106                           
  1107                           ; BSR set to: 57
  1108  00FF07  20                 	db	32
  1109  00FF08  20                 	db	32
  1110  00FF09  20                 	db	32
  1111  00FF0A  20                 	db	32
  1112  00FF0B  20                 	db	32
  1113  00FF0C  20                 	db	32
  1114  00FF0D  20                 	db	32
  1115  00FF0E  20                 	db	32
  1116  00FF0F  20                 	db	32
  1117  00FF10  20                 	db	32
  1118  00FF11  20                 	db	32
  1119  00FF12  20                 	db	32
  1120  00FF13  20                 	db	32
  1121  00FF14  20                 	db	32
  1122  00FF15  20                 	db	32
  1123  00FF16  20                 	db	32
  1124  00FF17  20                 	db	32
  1125  00FF18  20                 	db	32
  1126  00FF19  00                 	db	0
  1127  00FF1A                     STR_17:
  1128                           
  1129                           ; BSR set to: 57
  1130  00FF1A  48                 	db	72	;'H'
  1131  00FF1B  45                 	db	69	;'E'
  1132  00FF1C  4C                 	db	76	;'L'
  1133  00FF1D  50                 	db	80	;'P'
  1134  00FF1E  20                 	db	32
  1135  00FF1F  25                 	db	37
  1136  00FF20  73                 	db	115	;'s'
  1137  00FF21  20                 	db	32
  1138  00FF22  20                 	db	32
  1139  00FF23  20                 	db	32
  1140  00FF24  20                 	db	32
  1141  00FF25  20                 	db	32
  1142  00FF26  20                 	db	32
  1143  00FF27  20                 	db	32
  1144  00FF28  20                 	db	32
  1145  00FF29  20                 	db	32
  1146  00FF2A  20                 	db	32
  1147  00FF2B  20                 	db	32
  1148  00FF2C  00                 	db	0
  1149  00FF2D                     
  1150                           ; BSR set to: 57
  1151  00FF2D  44                 	db	68	;'D'
  1152  00FF2E  49                 	db	73	;'I'
  1153  00FF2F  53                 	db	83	;'S'
  1154  00FF30  50                 	db	80	;'P'
  1155  00FF31  4C                 	db	76	;'L'
  1156  00FF32  41                 	db	65	;'A'
  1157  00FF33  59                 	db	89	;'Y'
  1158  00FF34  20                 	db	32
  1159  00FF35  25                 	db	37
  1160  00FF36  73                 	db	115	;'s'
  1161  00FF37  20                 	db	32
  1162  00FF38  20                 	db	32
  1163  00FF39  20                 	db	32
  1164  00FF3A  20                 	db	32
  1165  00FF3B  20                 	db	32
  1166  00FF3C  20                 	db	32
  1167  00FF3D  20                 	db	32
  1168  00FF3E  20                 	db	32
  1169  00FF3F  00                 	db	0
  1170  00FF40                     STR_8:
  1171                           
  1172                           ; BSR set to: 57
  1173  00FF40  20                 	db	32
  1174  00FF41  56                 	db	86	;'V'
  1175  00FF42  54                 	db	84	;'T'
  1176  00FF43  45                 	db	69	;'E'
  1177  00FF44  52                 	db	82	;'R'
  1178  00FF45  4D                 	db	77	;'M'
  1179  00FF46  20                 	db	32
  1180  00FF47  23                 	db	35
  1181  00FF48  32                 	db	50	;'2'
  1182  00FF49  20                 	db	32
  1183  00FF4A  20                 	db	32
  1184  00FF4B  20                 	db	32
  1185  00FF4C  20                 	db	32
  1186  00FF4D  20                 	db	32
  1187  00FF4E  20                 	db	32
  1188  00FF4F  20                 	db	32
  1189  00FF50  00                 	db	0
  1190  00FF51                     STR_4:
  1191                           
  1192                           ; BSR set to: 57
  1193  00FF51  20                 	db	32
  1194  00FF52  4E                 	db	78	;'N'
  1195  00FF53  53                 	db	83	;'S'
  1196  00FF54  41                 	db	65	;'A'
  1197  00FF55  53                 	db	83	;'S'
  1198  00FF56  50                 	db	80	;'P'
  1199  00FF57  4F                 	db	79	;'O'
  1200  00FF58  4F                 	db	79	;'O'
  1201  00FF59  4B                 	db	75	;'K'
  1202  00FF5A  20                 	db	32
  1203  00FF5B  20                 	db	32
  1204  00FF5C  20                 	db	32
  1205  00FF5D  20                 	db	32
  1206  00FF5E  20                 	db	32
  1207  00FF5F  20                 	db	32
  1208  00FF60  20                 	db	32
  1209  00FF61  00                 	db	0
  1210  00FF62                     STR_1:
  1211                           
  1212                           ; BSR set to: 57
  1213  00FF62  20                 	db	32
  1214  00FF63  4D                 	db	77	;'M'
  1215  00FF64  42                 	db	66	;'B'
  1216  00FF65  4D                 	db	77	;'M'
  1217  00FF66  43                 	db	67	;'C'
  1218  00FF67  20                 	db	32
  1219  00FF68  53                 	db	83	;'S'
  1220  00FF69  4F                 	db	79	;'O'
  1221  00FF6A  4C                 	db	76	;'L'
  1222  00FF6B  41                 	db	65	;'A'
  1223  00FF6C  52                 	db	82	;'R'
  1224  00FF6D  4D                 	db	77	;'M'
  1225  00FF6E  4F                 	db	79	;'O'
  1226  00FF6F  4E                 	db	78	;'N'
  1227  00FF70  20                 	db	32
  1228  00FF71  20                 	db	32
  1229  00FF72  00                 	db	0
  1230  00FF73                     STR_5:
  1231                           
  1232                           ; BSR set to: 57
  1233  00FF73  20                 	db	32
  1234  00FF74  53                 	db	83	;'S'
  1235  00FF75  45                 	db	69	;'E'
  1236  00FF76  51                 	db	81	;'Q'
  1237  00FF77  55                 	db	85	;'U'
  1238  00FF78  45                 	db	69	;'E'
  1239  00FF79  4E                 	db	78	;'N'
  1240  00FF7A  43                 	db	67	;'C'
  1241  00FF7B  45                 	db	69	;'E'
  1242  00FF7C  20                 	db	32
  1243  00FF7D  54                 	db	84	;'T'
  1244  00FF7E  45                 	db	69	;'E'
  1245  00FF7F  53                 	db	83	;'S'
  1246  00FF80  54                 	db	84	;'T'
  1247  00FF81  20                 	db	32
  1248  00FF82  20                 	db	32
  1249  00FF83  00                 	db	0
  1250  00FF84                     STR_11:
  1251                           
  1252                           ; BSR set to: 57
  1253  00FF84  25                 	db	37
  1254  00FF85  64                 	db	100	;'d'
  1255  00FF86  20                 	db	32
  1256  00FF87  25                 	db	37
  1257  00FF88  32                 	db	50	;'2'
  1258  00FF89  2E                 	db	46
  1259  00FF8A  34                 	db	52	;'4'
  1260  00FF8B  66                 	db	102	;'f'
  1261  00FF8C  2C                 	db	44
  1262  00FF8D  20                 	db	32
  1263  00FF8E  25                 	db	37
  1264  00FF8F  64                 	db	100	;'d'
  1265  00FF90  20                 	db	32
  1266  00FF91  20                 	db	32
  1267  00FF92  20                 	db	32
  1268  00FF93  23                 	db	35
  1269  00FF94  00                 	db	0
  1270  00FF95                     STR_21:
  1271                           
  1272                           ; BSR set to: 57
  1273  00FF95  76                 	db	118	;'v'
  1274  00FF96  74                 	db	116	;'t'
  1275  00FF97  65                 	db	101	;'e'
  1276  00FF98  72                 	db	114	;'r'
  1277  00FF99  6D                 	db	109	;'m'
  1278  00FF9A  20                 	db	32
  1279  00FF9B  25                 	db	37
  1280  00FF9C  78                 	db	120	;'x'
  1281  00FF9D  3A                 	db	58	;':'
  1282  00FF9E  25                 	db	37
  1283  00FF9F  78                 	db	120	;'x'
  1284  00FFA0  20                 	db	32
  1285  00FFA1  20                 	db	32
  1286  00FFA2  20                 	db	32
  1287  00FFA3  00                 	db	0
  1288  00FFA4                     STR_2:
  1289                           
  1290                           ; BSR set to: 57
  1291  00FFA4  20                 	db	32
  1292  00FFA5  56                 	db	86	;'V'
  1293  00FFA6  65                 	db	101	;'e'
  1294  00FFA7  72                 	db	114	;'r'
  1295  00FFA8  73                 	db	115	;'s'
  1296  00FFA9  69                 	db	105	;'i'
  1297  00FFAA  6F                 	db	111	;'o'
  1298  00FFAB  6E                 	db	110	;'n'
  1299  00FFAC  20                 	db	32
  1300  00FFAD  25                 	db	37
  1301  00FFAE  73                 	db	115	;'s'
  1302  00FFAF  20                 	db	32
  1303  00FFB0  20                 	db	32
  1304  00FFB1  20                 	db	32
  1305  00FFB2  00                 	db	0
  1306  00FFB3                     STR_9:
  1307                           
  1308                           ; BSR set to: 57
  1309  00FFB3  25                 	db	37
  1310  00FFB4  64                 	db	100	;'d'
  1311  00FFB5  20                 	db	32
  1312  00FFB6  25                 	db	37
  1313  00FFB7  32                 	db	50	;'2'
  1314  00FFB8  2E                 	db	46
  1315  00FFB9  34                 	db	52	;'4'
  1316  00FFBA  66                 	db	102	;'f'
  1317  00FFBB  20                 	db	32
  1318  00FFBC  20                 	db	32
  1319  00FFBD  20                 	db	32
  1320  00FFBE  25                 	db	37
  1321  00FFBF  64                 	db	100	;'d'
  1322  00FFC0  00                 	db	0
  1323  00FFC1                     STR_15:
  1324                           
  1325                           ; BSR set to: 57
  1326  00FFC1  4E                 	db	78	;'N'
  1327  00FFC2  6F                 	db	111	;'o'
  1328  00FFC3  76                 	db	118	;'v'
  1329  00FFC4  20                 	db	32
  1330  00FFC5  32                 	db	50	;'2'
  1331  00FFC6  33                 	db	51	;'3'
  1332  00FFC7  20                 	db	32
  1333  00FFC8  32                 	db	50	;'2'
  1334  00FFC9  30                 	db	48	;'0'
  1335  00FFCA  31                 	db	49	;'1'
  1336  00FFCB  39                 	db	57	;'9'
  1337  00FFCC  00                 	db	0
  1338  00FFCD                     STR_19:
  1339                           
  1340                           ; BSR set to: 57
  1341  00FFCD  25                 	db	37
  1342  00FFCE  73                 	db	115	;'s'
  1343  00FFCF  20                 	db	32
  1344  00FFD0  20                 	db	32
  1345  00FFD1  20                 	db	32
  1346  00FFD2  20                 	db	32
  1347  00FFD3  20                 	db	32
  1348  00FFD4  20                 	db	32
  1349  00FFD5  20                 	db	32
  1350  00FFD6  00                 	db	0
  1351  00FFD7                     STR_16:
  1352                           
  1353                           ; BSR set to: 57
  1354  00FFD7  30                 	db	48	;'0'
  1355  00FFD8  39                 	db	57	;'9'
  1356  00FFD9  3A                 	db	58	;':'
  1357  00FFDA  30                 	db	48	;'0'
  1358  00FFDB  33                 	db	51	;'3'
  1359  00FFDC  3A                 	db	58	;':'
  1360  00FFDD  30                 	db	48	;'0'
  1361  00FFDE  32                 	db	50	;'2'
  1362  00FFDF  00                 	db	0
  1363  00FFE0                     STR_3:
  1364                           
  1365                           ; BSR set to: 57
  1366  00FFE0  30                 	db	48	;'0'
  1367  00FFE1  2E                 	db	46
  1368  00FFE2  39                 	db	57	;'9'
  1369  00FFE3  36                 	db	54	;'6'
  1370  00FFE4  00                 	db	0
  1371  00FFE5                     STR_34:
  1372                           
  1373                           ; BSR set to: 57
  1374  00FFE5  49                 	db	73	;'I'
  1375  00FFE6  4E                 	db	78	;'N'
  1376  00FFE7  46                 	db	70	;'F'
  1377  00FFE8  00                 	db	0
  1378  00FFE9                     STR_38:
  1379                           
  1380                           ; BSR set to: 57
  1381  00FFE9  4E                 	db	78	;'N'
  1382  00FFEA  41                 	db	65	;'A'
  1383  00FFEB  4E                 	db	78	;'N'
  1384  00FFEC  00                 	db	0
  1385  00FFED                     STR_35:
  1386                           
  1387                           ; BSR set to: 57
  1388  00FFED  69                 	db	105	;'i'
  1389  00FFEE  6E                 	db	110	;'n'
  1390  00FFEF  66                 	db	102	;'f'
  1391  00FFF0  00                 	db	0
  1392  00FFF1                     STR_39:
  1393                           
  1394                           ; BSR set to: 57
  1395  00FFF1  6E                 	db	110	;'n'
  1396  00FFF2  61                 	db	97	;'a'
  1397  00FFF3  6E                 	db	110	;'n'
  1398  00FFF4  00                 	db	0
  1399  00FFF5                     STR_42:
  1400                           
  1401                           ; BSR set to: 57
  1402  00FFF5  6C                 	db	108	;'l'
  1403  00FFF6  66                 	db	102	;'f'
  1404  00FFF7  00                 	db	0
  1405  00FFF8                     STR_13:
  1406                           
  1407                           ; BSR set to: 57
  1408  00FFF8  25                 	db	37
  1409  00FFF9  63                 	db	99	;'c'
  1410  00FFFA  00                 	db	0
  1411  00FFFB                     STR_12:
  1412                           
  1413                           ; BSR set to: 57
  1414  00FFFB  25                 	db	37
  1415  00FFFC  73                 	db	115	;'s'
  1416  00FFFD  00                 	db	0
  1417  0000                     
  1418                           ; #config settings
  1419  00FFFE  00                 	db	0	; dummy byte at the end
  1420  0000                     
  1421                           	psect	cinit
  1422  016CE0                     __pcinit:
  1423                           	opt callstack 0
  1424  016CE0                     start_initialization:
  1425                           	opt callstack 0
  1426  016CE0                     __initialization:
  1427                           	opt callstack 0
  1428                           
  1429                           ; Initialize objects allocated to BANK1 (228 bytes)
  1430                           ; load TBLPTR registers with __pidataBANK1
  1431  016CE0  0E28               	movlw	low __pidataBANK1
  1432  016CE2  6EF6               	movwf	tblptrl,c
  1433  016CE4  0E6B               	movlw	high __pidataBANK1
  1434  016CE6  6EF7               	movwf	tblptrh,c
  1435  016CE8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1436  016CEA  6EF8               	movwf	tblptru,c
  1437  016CEC  EE00  F100         	lfsr	0,__pdataBANK1
  1438  016CF0  EE20 F0E4          	lfsr	2,228
  1439  016CF4                     copy_data0:
  1440  016CF4  0009               	tblrd		*+
  1441  016CF6  006F FFD7 FFEE     	movff	tablat,postinc0
  1442  016CFC  50DD               	movf	postdec2,w,c
  1443  016CFE  50D9               	movf	fsr2l,w,c
  1444  016D00  E1F9               	bnz	copy_data0
  1445                           
  1446                           ; Initialize objects allocated to BANK0 (63 bytes)
  1447                           ; load TBLPTR registers with __pidataBANK0
  1448  016D02  0EF4               	movlw	low __pidataBANK0
  1449  016D04  6EF6               	movwf	tblptrl,c
  1450  016D06  0E7C               	movlw	high __pidataBANK0
  1451  016D08  6EF7               	movwf	tblptrh,c
  1452  016D0A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1453  016D0C  6EF8               	movwf	tblptru,c
  1454  016D0E  EE00  F0A6         	lfsr	0,__pdataBANK0
  1455  016D12  EE20 F03F          	lfsr	2,63
  1456  016D16                     copy_data1:
  1457  016D16  0009               	tblrd		*+
  1458  016D18  006F FFD7 FFEE     	movff	tablat,postinc0
  1459  016D1E  50DD               	movf	postdec2,w,c
  1460  016D20  50D9               	movf	fsr2l,w,c
  1461  016D22  E1F9               	bnz	copy_data1
  1462                           
  1463                           ; Clear objects allocated to BANK7 (255 bytes)
  1464  016D24  EE01  F300         	lfsr	0,__pbssBANK7
  1465  016D28  EE20 F0FF          	lfsr	2,255
  1466  016D2C                     clear_0:
  1467  016D2C  6AEE               	clrf	postinc0,c
  1468  016D2E  50DD               	movf	postdec2,w,c
  1469  016D30  50D9               	movf	fsr2l,w,c
  1470  016D32  E1FC               	bnz	clear_0
  1471  016D34  50DA               	movf	fsr2h,w,c
  1472  016D36  E1FA               	bnz	clear_0
  1473                           
  1474                           ; Clear objects allocated to BANK6 (255 bytes)
  1475  016D38  EE01  F200         	lfsr	0,__pbssBANK6
  1476  016D3C  EE20 F0FF          	lfsr	2,255
  1477  016D40                     clear_1:
  1478  016D40  6AEE               	clrf	postinc0,c
  1479  016D42  50DD               	movf	postdec2,w,c
  1480  016D44  50D9               	movf	fsr2l,w,c
  1481  016D46  E1FC               	bnz	clear_1
  1482  016D48  50DA               	movf	fsr2h,w,c
  1483  016D4A  E1FA               	bnz	clear_1
  1484                           
  1485                           ; Clear objects allocated to BANK5 (218 bytes)
  1486  016D4C  EE01  F100         	lfsr	0,__pbssBANK5
  1487  016D50  0EDA               	movlw	218
  1488  016D52                     clear_2:
  1489  016D52  6AEE               	clrf	postinc0,c
  1490  016D54  06E8               	decf	wreg,f,c
  1491  016D56  E1FD               	bnz	clear_2
  1492                           
  1493                           ; Clear objects allocated to BANK4 (67 bytes)
  1494  016D58  EE01  F000         	lfsr	0,__pbssBANK4
  1495  016D5C  0E43               	movlw	67
  1496  016D5E                     clear_3:
  1497  016D5E  6AEE               	clrf	postinc0,c
  1498  016D60  06E8               	decf	wreg,f,c
  1499  016D62  E1FD               	bnz	clear_3
  1500                           
  1501                           ; Clear objects allocated to BANK3 (195 bytes)
  1502  016D64  EE00  F300         	lfsr	0,__pbssBANK3
  1503  016D68  0EC3               	movlw	195
  1504  016D6A                     clear_4:
  1505  016D6A  6AEE               	clrf	postinc0,c
  1506  016D6C  06E8               	decf	wreg,f,c
  1507  016D6E  E1FD               	bnz	clear_4
  1508                           
  1509                           ; Clear objects allocated to BANK2 (252 bytes)
  1510  016D70  EE00  F200         	lfsr	0,__pbssBANK2
  1511  016D74  0EFC               	movlw	252
  1512  016D76                     clear_5:
  1513  016D76  6AEE               	clrf	postinc0,c
  1514  016D78  06E8               	decf	wreg,f,c
  1515  016D7A  E1FD               	bnz	clear_5
  1516                           
  1517                           ; Clear objects allocated to BANK0 (70 bytes)
  1518  016D7C  EE00  F060         	lfsr	0,__pbssBANK0
  1519  016D80  0E46               	movlw	70
  1520  016D82                     clear_6:
  1521  016D82  6AEE               	clrf	postinc0,c
  1522  016D84  06E8               	decf	wreg,f,c
  1523  016D86  E1FD               	bnz	clear_6
  1524                           
  1525                           ; Clear objects allocated to COMRAM (49 bytes)
  1526  016D88  EE00  F001         	lfsr	0,__pbssCOMRAM
  1527  016D8C  0E31               	movlw	49
  1528  016D8E                     clear_7:
  1529  016D8E  6AEE               	clrf	postinc0,c
  1530  016D90  06E8               	decf	wreg,f,c
  1531  016D92  E1FD               	bnz	clear_7
  1532                           
  1533                           ;
  1534                           ; Setup IVTBASE
  1535                           ;
  1536  016D94  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1537  016D96  6ED5               	movwf	213,c
  1538  016D98  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1539  016D9A  6ED6               	movwf	214,c
  1540  016D9C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1541  016D9E  6ED7               	movwf	215,c
  1542  016DA0                     end_of_initialization:
  1543                           	opt callstack 0
  1544  016DA0                     __end_of__initialization:
  1545                           	opt callstack 0
  1546  016DA0  0100               	movlb	0
  1547  016DA2  EF74  F09E         	goto	_main	;jump to C main() function
  1548                           
  1549                           	psect	bssCOMRAM
  1550  000001                     __pbssCOMRAM:
  1551                           	opt callstack 0
  1552  000001                     _ADCC_ADTI_InterruptHandler:
  1553                           	opt callstack 0
  1554  000001                     	ds	3
  1555  000004                     _ADCC_ADI_InterruptHandler:
  1556                           	opt callstack 0
  1557  000004                     	ds	3
  1558  000007                     _UART1_TxInterruptHandler:
  1559                           	opt callstack 0
  1560  000007                     	ds	3
  1561  00000A                     _UART1_RxInterruptHandler:
  1562                           	opt callstack 0
  1563  00000A                     	ds	3
  1564  00000D                     _UART2_TxInterruptHandler:
  1565                           	opt callstack 0
  1566  00000D                     	ds	3
  1567  000010                     _UART2_RxInterruptHandler:
  1568                           	opt callstack 0
  1569  000010                     	ds	3
  1570  000013                     _INT1_InterruptHandler:
  1571                           	opt callstack 0
  1572  000013                     	ds	3
  1573  000016                     _INT0_InterruptHandler:
  1574                           	opt callstack 0
  1575  000016                     	ds	3
  1576  000019                     _nout:
  1577                           	opt callstack 0
  1578  000019                     	ds	2
  1579  00001B                     _width:
  1580                           	opt callstack 0
  1581  00001B                     	ds	2
  1582  00001D                     _prec:
  1583                           	opt callstack 0
  1584  00001D                     	ds	2
  1585  00001F                     _flags:
  1586                           	opt callstack 0
  1587  00001F                     	ds	2
  1588  000021                     TMR5_ISR@CountCallBack:
  1589                           	opt callstack 0
  1590  000021                     	ds	2
  1591  000023                     _timer5ReloadVal:
  1592                           	opt callstack 0
  1593  000023                     	ds	2
  1594  000025                     _mode_sw:
  1595                           	opt callstack 0
  1596  000025                     	ds	1
  1597  000026                     _uart2RxCount:
  1598                           	opt callstack 0
  1599  000026                     	ds	1
  1600  000027                     _uart2RxTail:
  1601                           	opt callstack 0
  1602  000027                     	ds	1
  1603  000028                     _uart2RxHead:
  1604                           	opt callstack 0
  1605  000028                     	ds	1
  1606  000029                     _uart2TxBufferRemaining:
  1607                           	opt callstack 0
  1608  000029                     	ds	1
  1609  00002A                     _uart2TxTail:
  1610                           	opt callstack 0
  1611  00002A                     	ds	1
  1612  00002B                     _uart2TxHead:
  1613                           	opt callstack 0
  1614  00002B                     	ds	1
  1615  00002C                     _uart1RxCount:
  1616                           	opt callstack 0
  1617  00002C                     	ds	1
  1618  00002D                     _uart1RxTail:
  1619                           	opt callstack 0
  1620  00002D                     	ds	1
  1621  00002E                     _uart1RxHead:
  1622                           	opt callstack 0
  1623  00002E                     	ds	1
  1624  00002F                     _uart1TxBufferRemaining:
  1625                           	opt callstack 0
  1626  00002F                     	ds	1
  1627  000030                     _uart1TxTail:
  1628                           	opt callstack 0
  1629  000030                     	ds	1
  1630  000031                     _uart1TxHead:
  1631                           	opt callstack 0
  1632  000031                     	ds	1
  1633                           
  1634                           	psect	bssBANK0
  1635  000060                     __pbssBANK0:
  1636                           	opt callstack 0
  1637  000060                     _tickCount:
  1638                           	opt callstack 0
  1639  000060                     	ds	24
  1640  000078                     _spi_link:
  1641                           	opt callstack 0
  1642  000078                     	ds	12
  1643  000084                     floorf@F524:
  1644                           	opt callstack 0
  1645  000084                     	ds	4
  1646  000088                     ___fpclassifyf@F463:
  1647                           	opt callstack 0
  1648  000088                     	ds	4
  1649  00008C                     _utctime:
  1650                           	opt callstack 0
  1651  00008C                     	ds	4
  1652  000090                     wdtdelay@dcount:
  1653                           	opt callstack 0
  1654  000090                     	ds	4
  1655  000094                     _P:
  1656                           	opt callstack 0
  1657  000094                     	ds	4
  1658  000098                     _TMR5_InterruptHandler:
  1659                           	opt callstack 0
  1660  000098                     	ds	3
  1661  00009B                     _TMR6_InterruptHandler:
  1662                           	opt callstack 0
  1663  00009B                     	ds	3
  1664  00009E                     _seed:
  1665                           	opt callstack 0
  1666  00009E                     	ds	8
  1667                           
  1668                           	psect	dataBANK0
  1669  0000A6                     __pdataBANK0:
  1670                           	opt callstack 0
  1671  0000A6                     _R:
  1672                           	opt callstack 0
  1673  0000A6                     	ds	40
  1674  0000CE                     stoa@F1166:
  1675                           	opt callstack 0
  1676  0000CE                     	ds	7
  1677  0000D5                     _port_data:
  1678                           	opt callstack 0
  1679  0000D5                     	ds	16
  1680                           
  1681                           	psect	dataBANK1
  1682  000100                     __pdataBANK1:
  1683                           	opt callstack 0
  1684  000100                     _V:
  1685                           	opt callstack 0
  1686  000100                     	ds	228
  1687                           
  1688                           	psect	bssBANK2
  1689  000200                     __pbssBANK2:
  1690                           	opt callstack 0
  1691  000200                     _C:
  1692                           	opt callstack 0
  1693  000200                     	ds	108
  1694  00026C                     lp_filter@smooth:
  1695                           	opt callstack 0
  1696  00026C                     	ds	64
  1697  0002AC                     _dbuf:
  1698                           	opt callstack 0
  1699  0002AC                     	ds	80
  1700                           
  1701                           	psect	bssBANK3
  1702  000300                     __pbssBANK3:
  1703                           	opt callstack 0
  1704  000300                     _uart2TxBuffer:
  1705                           	opt callstack 0
  1706  000300                     	ds	64
  1707  000340                     _uart1TxBuffer:
  1708                           	opt callstack 0
  1709  000340                     	ds	64
  1710  000380                     _ring_buf1:
  1711                           	opt callstack 0
  1712  000380                     	ds	67
  1713                           
  1714                           	psect	bssBANK4
  1715  000400                     __pbssBANK4:
  1716                           	opt callstack 0
  1717  000400                     _ring_buf2:
  1718                           	opt callstack 0
  1719  000400                     	ds	67
  1720                           
  1721                           	psect	bssBANK5
  1722  000500                     __pbssBANK5:
  1723                           	opt callstack 0
  1724  000500                     _D:
  1725                           	opt callstack 0
  1726  000500                     	ds	218
  1727                           
  1728                           	psect	bssBANK6
  1729  000600                     __pbssBANK6:
  1730                           	opt callstack 0
  1731  000600                     _uart1RxBuffer:
  1732                           	opt callstack 0
  1733  000600                     	ds	255
  1734                           
  1735                           	psect	bssBANK7
  1736  000700                     __pbssBANK7:
  1737                           	opt callstack 0
  1738  000700                     _uart2RxBuffer:
  1739                           	opt callstack 0
  1740  000700                     	ds	255
  1741                           
  1742                           	psect	cstackBANK0
  1743  0000E5                     __pcstackBANK0:
  1744                           	opt callstack 0
  1745  0000E5                     ??_INT1_ISR:
  1746                           
  1747                           ; 1 bytes @ 0x0
  1748  0000E5                     	ds	4
  1749  0000E9                     ??_TMR5_ISR:
  1750                           
  1751                           ; 1 bytes @ 0x4
  1752  0000E9                     	ds	4
  1753                           
  1754                           	psect	cstackCOMRAM
  1755  000052                     __pcstackCOMRAM:
  1756                           	opt callstack 0
  1757  000052                     ??_ADCC_ThresholdISR:
  1758  000052                     
  1759                           ; 1 bytes @ 0x0
  1760  000052                     	ds	5
  1761  000057                     ??_TMR6_ISR:
  1762                           
  1763                           ; 1 bytes @ 0x5
  1764  000057                     	ds	1
  1765  000058                     
  1766                           ; 1 bytes @ 0x6
  1767 ;;
  1768 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1769 ;;
  1770 ;; *************** function _main *****************
  1771 ;; Defined at:
  1772 ;;		line 157 in file "main.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  mode            1  [STACK] enum E17005
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1  [STACK] void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 1/1
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels required when called:   19
  1792 ;; This function calls:
  1793 ;;		_SYSTEM_Initialize
  1794 ;;		_StartTimer
  1795 ;;		_TimerDone
  1796 ;;		_WaitMs
  1797 ;;		_check_adc_scan
  1798 ;;		_check_help
  1799 ;;		_check_switches
  1800 ;;		_clear_adc_scan
  1801 ;;		_convert_adc_data
  1802 ;;		_eaDogM_WriteCommand
  1803 ;;		_get_raw_result
  1804 ;;		_get_switch
  1805 ;;		_get_vterm_ptr
  1806 ;;		_init_display
  1807 ;;		_mode_lamp_dim
  1808 ;;		_set_display_info
  1809 ;;		_set_vterm
  1810 ;;		_sprintf
  1811 ;;		_srand
  1812 ;;		_start_adc_scan
  1813 ;;		_start_switch_handler
  1814 ;;		_update_lcd
  1815 ;; This function is called by:
  1816 ;;		Startup code after reset
  1817 ;; This function uses a reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text0
  1821  013CE8                     __ptext0:
  1822                           	opt callstack 0
  1823  013CE8                     _main:
  1824                           	opt callstack 0
  1825                           
  1826                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1827  013CE8  52E6               	movf	postinc1,f,c
  1828                           
  1829                           ;main.c: 159:  UI_STATES mode;;main.c: 162:  SYSTEM_Initialize();
  1830                           
  1831                           ;incstack = 0
  1832  013CEA  ECAE  F0BD         	call	_SYSTEM_Initialize	;wreg free
  1833                           
  1834                           ; BSR set to: 60
  1835                           ;main.c: 165:  (INTCON0bits.GIEH = 1);
  1836  013CEE  8ED2               	bsf	210,7,c	;volatile
  1837                           
  1838                           ; BSR set to: 60
  1839                           ;main.c: 168:  (INTCON0bits.GIEL = 1);
  1840  013CF0  8CD2               	bsf	210,6,c	;volatile
  1841                           
  1842                           ; BSR set to: 60
  1843                           ;main.c: 170:  V.ui_state = UI_STATE_INIT;
  1844  013CF2  0101               	movlb	1	; () banked
  1845  013CF4  6B00               	clrf	_V& (0+255),b	;volatile
  1846                           
  1847                           ; BSR set to: 1
  1848                           ;main.c: 175:  WaitMs(300);
  1849  013CF6  0E2C               	movlw	44
  1850  013CF8  6EE6               	movwf	postinc1,c
  1851  013CFA  0E01               	movlw	1
  1852  013CFC  6EE6               	movwf	postinc1,c
  1853  013CFE  ECF3  F0BE         	call	_WaitMs	;wreg free
  1854                           
  1855                           ;main.c: 176:  if (PORTBbits.RB0) {
  1856  013D02  A0CB               	btfss	203,0,c	;volatile
  1857  013D04  D004               	goto	l10219
  1858                           
  1859                           ;main.c: 177:   mode = UI_STATE_HOST;
  1860                           ;stkvar	_mode @ sp[(-1)+0]
  1861  013D06  0EFF               	movlw	-1
  1862  013D08  6AE3               	clrf	plusw1,c
  1863  013D0A  2AE3               	incf	plusw1,f,c
  1864                           
  1865                           ;main.c: 178:  } else {
  1866  013D0C  D004               	goto	l10221
  1867  013D0E                     l10219:
  1868                           
  1869                           ;main.c: 179:   mode = UI_STATE_LOG;
  1870                           ;stkvar	_mode @ sp[(-1)+0]
  1871  013D0E  0EFF               	movlw	-1
  1872  013D10  6AE3               	clrf	plusw1,c
  1873  013D12  80E3               	bsf	plusw1,0,c
  1874  013D14  82E3               	bsf	plusw1,1,c	;indir
  1875  013D16                     l10221:
  1876                           
  1877                           ;main.c: 182:  if (mode == UI_STATE_HOST) {
  1878                           ;stkvar	_mode @ sp[(-1)+0]
  1879  013D16  0EFF               	movlw	-1
  1880  013D18  04E3               	decf	plusw1,w,c
  1881  013D1A  A4D8               	btfss	status,2,c
  1882  013D1C  D007               	goto	l1248
  1883                           
  1884                           ;main.c: 183:   do { LATDbits.LATD0 = 1; } while(0);
  1885  013D1E  80BD               	bsf	189,0,c	;volatile
  1886                           
  1887                           ;main.c: 184:   V.mode_pwm = 70;
  1888  013D20  0E00               	movlw	0
  1889  013D22  0101               	movlb	1	; () banked
  1890  013D24  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1891  013D26  0E46               	movlw	70
  1892  013D28  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1893                           
  1894                           ;main.c: 185:  } else {
  1895  013D2A  D004               	goto	l10225
  1896  013D2C                     l1248:
  1897  013D2C  90BD               	bcf	189,0,c	;volatile
  1898                           
  1899                           ;main.c: 187:   V.mode_pwm = 0;
  1900  013D2E  0101               	movlb	1	; () banked
  1901  013D30  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1902  013D32  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1903  013D34                     l10225:
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;main.c: 189:  mode_lamp_dim(V.mode_pwm);
  1907  013D34  0060  F657  FFE6   	movff	_V+149,postinc1
  1908  013D3A  0060  F65B  FFE6   	movff	_V+150,postinc1
  1909  013D40  EC7B  F0C2         	call	_mode_lamp_dim	;wreg free
  1910  013D44  D0D0               	goto	l10269
  1911  013D46                     l10227:
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;main.c: 200:    init_display();
  1915  013D46  EC1F  F0B5         	call	_init_display	;wreg free
  1916                           
  1917                           ; BSR set to: 61
  1918                           ;main.c: 201:    eaDogM_WriteCommand(0b00001100);
  1919  013D4A  0E0C               	movlw	12
  1920  013D4C  6EE6               	movwf	postinc1,c
  1921  013D4E  ECCF  F0C2         	call	_eaDogM_WriteCommand	;wreg free
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;main.c: 203:    V.ui_state = mode;
  1925                           ;stkvar	_mode @ sp[(-1)+0]
  1926  013D52  0EFF               	movlw	-1
  1927  013D54  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;main.c: 204:    srand(1957);
  1931  013D5A  0EA5               	movlw	165
  1932  013D5C  6EE6               	movwf	postinc1,c
  1933  013D5E  0E07               	movlw	7
  1934  013D60  6EE6               	movwf	postinc1,c
  1935  013D62  EC29  F0BF         	call	_srand	;wreg free
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;main.c: 205:    set_vterm(0);
  1939  013D66  0E00               	movlw	0
  1940  013D68  6EE6               	movwf	postinc1,c
  1941  013D6A  EC52  F0C2         	call	_set_vterm	;wreg free
  1942                           
  1943                           ; BSR set to: 5
  1944                           ;main.c: 206:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1945  013D6E  0E62               	movlw	low STR_1
  1946  013D70  6EE6               	movwf	postinc1,c
  1947  013D72  0EFF               	movlw	high STR_1
  1948  013D74  6EE6               	movwf	postinc1,c
  1949  013D76  0E00               	movlw	0
  1950  013D78  6EE6               	movwf	postinc1,c
  1951  013D7A  0E00               	movlw	0
  1952  013D7C  6EE6               	movwf	postinc1,c
  1953  013D7E  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  1954  013D82  0060  F0CB  FFE6   	movff	btemp,postinc1
  1955  013D88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1956  013D8E  0E04               	movlw	4
  1957  013D90  6EE6               	movwf	postinc1,c
  1958  013D92  EC9A  F0B4         	call	_sprintf	;wreg free
  1959                           
  1960                           ;main.c: 207:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.96");
  1961  013D96  0EE0               	movlw	low STR_3
  1962  013D98  6EE6               	movwf	postinc1,c
  1963  013D9A  0EFF               	movlw	high STR_3
  1964  013D9C  6EE6               	movwf	postinc1,c
  1965  013D9E  0EA4               	movlw	low STR_2
  1966  013DA0  6EE6               	movwf	postinc1,c
  1967  013DA2  0EFF               	movlw	high STR_2
  1968  013DA4  6EE6               	movwf	postinc1,c
  1969  013DA6  0E00               	movlw	0
  1970  013DA8  6EE6               	movwf	postinc1,c
  1971  013DAA  0E01               	movlw	1
  1972  013DAC  6EE6               	movwf	postinc1,c
  1973  013DAE  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  1974  013DB2  0060  F0CB  FFE6   	movff	btemp,postinc1
  1975  013DB8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1976  013DBE  0E06               	movlw	6
  1977  013DC0  6EE6               	movwf	postinc1,c
  1978  013DC2  EC9A  F0B4         	call	_sprintf	;wreg free
  1979                           
  1980                           ;main.c: 208:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1981  013DC6  0E51               	movlw	low STR_4
  1982  013DC8  6EE6               	movwf	postinc1,c
  1983  013DCA  0EFF               	movlw	high STR_4
  1984  013DCC  6EE6               	movwf	postinc1,c
  1985  013DCE  0E00               	movlw	0
  1986  013DD0  6EE6               	movwf	postinc1,c
  1987  013DD2  0E02               	movlw	2
  1988  013DD4  6EE6               	movwf	postinc1,c
  1989  013DD6  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  1990  013DDA  0060  F0CB  FFE6   	movff	btemp,postinc1
  1991  013DE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1992  013DE6  0E04               	movlw	4
  1993  013DE8  6EE6               	movwf	postinc1,c
  1994  013DEA  EC9A  F0B4         	call	_sprintf	;wreg free
  1995                           
  1996                           ;main.c: 209:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1997  013DEE  0E73               	movlw	low STR_5
  1998  013DF0  6EE6               	movwf	postinc1,c
  1999  013DF2  0EFF               	movlw	high STR_5
  2000  013DF4  6EE6               	movwf	postinc1,c
  2001  013DF6  0E02               	movlw	2
  2002  013DF8  6EE6               	movwf	postinc1,c
  2003  013DFA  0E00               	movlw	0
  2004  013DFC  6EE6               	movwf	postinc1,c
  2005  013DFE  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  2006  013E02  0060  F0CB  FFE6   	movff	btemp,postinc1
  2007  013E08  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2008  013E0E  0E04               	movlw	4
  2009  013E10  6EE6               	movwf	postinc1,c
  2010  013E12  EC9A  F0B4         	call	_sprintf	;wreg free
  2011                           
  2012                           ;main.c: 210:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.96");
  2013  013E16  0EE0               	movlw	low STR_3
  2014  013E18  6EE6               	movwf	postinc1,c
  2015  013E1A  0EFF               	movlw	high STR_3
  2016  013E1C  6EE6               	movwf	postinc1,c
  2017  013E1E  0EA4               	movlw	low STR_2
  2018  013E20  6EE6               	movwf	postinc1,c
  2019  013E22  0EFF               	movlw	high STR_2
  2020  013E24  6EE6               	movwf	postinc1,c
  2021  013E26  0E02               	movlw	2
  2022  013E28  6EE6               	movwf	postinc1,c
  2023  013E2A  0E01               	movlw	1
  2024  013E2C  6EE6               	movwf	postinc1,c
  2025  013E2E  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  2026  013E32  0060  F0CB  FFE6   	movff	btemp,postinc1
  2027  013E38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2028  013E3E  0E06               	movlw	6
  2029  013E40  6EE6               	movwf	postinc1,c
  2030  013E42  EC9A  F0B4         	call	_sprintf	;wreg free
  2031                           
  2032                           ;main.c: 211:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2033  013E46  0E40               	movlw	low STR_8
  2034  013E48  6EE6               	movwf	postinc1,c
  2035  013E4A  0EFF               	movlw	high STR_8
  2036  013E4C  6EE6               	movwf	postinc1,c
  2037  013E4E  0E02               	movlw	2
  2038  013E50  6EE6               	movwf	postinc1,c
  2039  013E52  0E02               	movlw	2
  2040  013E54  6EE6               	movwf	postinc1,c
  2041  013E56  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  2042  013E5A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2043  013E60  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2044  013E66  0E04               	movlw	4
  2045  013E68  6EE6               	movwf	postinc1,c
  2046  013E6A  EC9A  F0B4         	call	_sprintf	;wreg free
  2047                           
  2048                           ;main.c: 212:    update_lcd(0);
  2049  013E6E  0E00               	movlw	0
  2050  013E70  6EE6               	movwf	postinc1,c
  2051  013E72  EC13  F0B4         	call	_update_lcd	;wreg free
  2052                           
  2053                           ;main.c: 213:    WaitMs(3000);
  2054  013E76  0EB8               	movlw	184
  2055  013E78  6EE6               	movwf	postinc1,c
  2056  013E7A  0E0B               	movlw	11
  2057  013E7C  6EE6               	movwf	postinc1,c
  2058  013E7E  ECF3  F0BE         	call	_WaitMs	;wreg free
  2059                           
  2060                           ;main.c: 214:    StartTimer(TMR_DISPLAY, 250);
  2061  013E82  0EFA               	movlw	250
  2062  013E84  6EE6               	movwf	postinc1,c
  2063  013E86  0E00               	movlw	0
  2064  013E88  6EE6               	movwf	postinc1,c
  2065  013E8A  0E0A               	movlw	10
  2066  013E8C  6EE6               	movwf	postinc1,c
  2067  013E8E  ECB9  F0BE         	call	_StartTimer	;wreg free
  2068                           
  2069                           ;main.c: 215:    StartTimer(TMR_ADC, 500);
  2070  013E92  0EF4               	movlw	244
  2071  013E94  6EE6               	movwf	postinc1,c
  2072  013E96  0E01               	movlw	1
  2073  013E98  6EE6               	movwf	postinc1,c
  2074  013E9A  0E01               	movlw	1
  2075  013E9C  6EE6               	movwf	postinc1,c
  2076  013E9E  ECB9  F0BE         	call	_StartTimer	;wreg free
  2077                           
  2078                           ;main.c: 216:    StartTimer(TMR_INFO, 3000);
  2079  013EA2  0EB8               	movlw	184
  2080  013EA4  6EE6               	movwf	postinc1,c
  2081  013EA6  0E0B               	movlw	11
  2082  013EA8  6EE6               	movwf	postinc1,c
  2083  013EAA  0E07               	movlw	7
  2084  013EAC  6EE6               	movwf	postinc1,c
  2085  013EAE  ECB9  F0BE         	call	_StartTimer	;wreg free
  2086                           
  2087                           ;main.c: 217:    StartTimer(TMR_FLIPPER, 1500);
  2088  013EB2  0EDC               	movlw	220
  2089  013EB4  6EE6               	movwf	postinc1,c
  2090  013EB6  0E05               	movlw	5
  2091  013EB8  6EE6               	movwf	postinc1,c
  2092  013EBA  0E0B               	movlw	11
  2093  013EBC  6EE6               	movwf	postinc1,c
  2094  013EBE  ECB9  F0BE         	call	_StartTimer	;wreg free
  2095                           
  2096                           ;main.c: 218:    StartTimer(TMR_HELPDIS, 3000);
  2097  013EC2  0EB8               	movlw	184
  2098  013EC4  6EE6               	movwf	postinc1,c
  2099  013EC6  0E0B               	movlw	11
  2100  013EC8  6EE6               	movwf	postinc1,c
  2101  013ECA  0E09               	movlw	9
  2102  013ECC  6EE6               	movwf	postinc1,c
  2103  013ECE  ECB9  F0BE         	call	_StartTimer	;wreg free
  2104                           
  2105                           ;main.c: 220:    start_adc_scan();
  2106  013ED2  EC75  F0BB         	call	_start_adc_scan	;wreg free
  2107                           
  2108                           ;main.c: 221:    start_switch_handler();
  2109  013ED6  ECE9  F0C1         	call	_start_switch_handler	;wreg free
  2110                           
  2111                           ;main.c: 223:    break;
  2112  013EDA  D01C               	goto	l10271
  2113  013EDC                     l1256:
  2114                           
  2115                           ; BSR set to: 1
  2116                           ;main.c: 229:    P.SYSTEM_STABLE = 1;
  2117  013EDC  0100               	movlb	0	; () banked
  2118  013EDE  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  2119                           
  2120                           ;main.c: 230:    break;
  2121  013EE0  D019               	goto	l10271
  2122  013EE2                     l1258:
  2123                           
  2124                           ; BSR set to: 1
  2125                           ;main.c: 233:    V.ui_state = UI_STATE_INIT;
  2126  013EE2  6B00               	clrf	_V& (0+255),b	;volatile
  2127                           
  2128                           ;main.c: 234:    break;
  2129  013EE4  D017               	goto	l10271
  2130  013EE6                     l10269:
  2131  013EE6  0101               	movlb	1	; () banked
  2132  013EE8  5100               	movf	_V& (0+255),w,b	;volatile
  2133  013EEA  6E3C               	movwf	(btemp+10)^0,c
  2134  013EEC  6A3D               	clrf	(btemp+11)^0,c
  2135                           
  2136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2137                           ; Switch size 1, requested type "simple"
  2138                           ; Number of cases is 1, Range of values is 0 to 0
  2139                           ; switch strategies available:
  2140                           ; Name         Instructions Cycles
  2141                           ; simple_byte            4     3 (average)
  2142                           ;	Chosen strategy is simple_byte
  2143  013EEE  503D               	movf	(btemp+11)^0,w,c
  2144  013EF0  0A00               	xorlw	0	; case 0
  2145  013EF2  A4D8               	btfss	status,2,c
  2146  013EF4  D7F6               	goto	l1258
  2147                           
  2148                           ; BSR set to: 1
  2149                           ; Switch size 1, requested type "simple"
  2150                           ; Number of cases is 5, Range of values is 0 to 5
  2151                           ; switch strategies available:
  2152                           ; Name         Instructions Cycles
  2153                           ; simple_byte           16     9 (average)
  2154                           ;	Chosen strategy is simple_byte
  2155  013EF6  503C               	movf	(btemp+10)^0,w,c
  2156  013EF8  0A00               	xorlw	0	; case 0
  2157  013EFA  B4D8               	btfsc	status,2,c
  2158  013EFC  D724               	goto	l10227
  2159  013EFE  0A01               	xorlw	1	; case 1
  2160  013F00  B4D8               	btfsc	status,2,c
  2161  013F02  D008               	goto	l10271
  2162  013F04  0A02               	xorlw	2	; case 3
  2163  013F06  B4D8               	btfsc	status,2,c
  2164  013F08  D005               	goto	l10271
  2165  013F0A  0A07               	xorlw	7	; case 4
  2166  013F0C  B4D8               	btfsc	status,2,c
  2167  013F0E  D7E6               	goto	l1256
  2168  013F10  0A01               	xorlw	1	; case 5
  2169  013F12  D7E7               	goto	l1258
  2170  013F14                     l10271:
  2171                           
  2172                           ;main.c: 237:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2173  013F14  0E01               	movlw	1
  2174  013F16  6EE6               	movwf	postinc1,c
  2175  013F18  EC91  F0C1         	call	_TimerDone	;wreg free
  2176  013F1C  5032               	movf	btemp^0,w,c
  2177  013F1E  B4D8               	btfsc	status,2,c
  2178  013F20  D013               	goto	l10283
  2179  013F22  EC13  F0C3         	call	_check_adc_scan	;wreg free
  2180  013F26  5032               	movf	btemp^0,w,c
  2181  013F28  B4D8               	btfsc	status,2,c
  2182  013F2A  D00E               	goto	l10283
  2183                           
  2184                           ;main.c: 241:    convert_adc_data();
  2185  013F2C  EC67  F0BA         	call	_convert_adc_data	;wreg free
  2186                           
  2187                           ;main.c: 245:    clear_adc_scan();
  2188  013F30  EC1B  F0C3         	call	_clear_adc_scan	;wreg free
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;main.c: 246:    start_adc_scan();
  2192  013F34  EC75  F0BB         	call	_start_adc_scan	;wreg free
  2193                           
  2194                           ;main.c: 247:    StartTimer(TMR_ADC, 500);
  2195  013F38  0EF4               	movlw	244
  2196  013F3A  6EE6               	movwf	postinc1,c
  2197  013F3C  0E01               	movlw	1
  2198  013F3E  6EE6               	movwf	postinc1,c
  2199  013F40  0E01               	movlw	1
  2200  013F42  6EE6               	movwf	postinc1,c
  2201  013F44  ECB9  F0BE         	call	_StartTimer	;wreg free
  2202  013F48                     l10283:
  2203                           
  2204                           ;main.c: 254:   if (TimerDone(TMR_DISPLAY)) {
  2205                           
  2206                           ;main.c: 250:   if (V.ticks) {
  2207  013F48  0E0A               	movlw	10
  2208  013F4A  6EE6               	movwf	postinc1,c
  2209  013F4C  EC91  F0C1         	call	_TimerDone	;wreg free
  2210  013F50  5032               	movf	btemp^0,w,c
  2211  013F52  B4D8               	btfsc	status,2,c
  2212  013F54  D0AB               	goto	l10301
  2213                           
  2214                           ;main.c: 255:    if (TimerDone(TMR_HELPDIS)) {
  2215  013F56  0E09               	movlw	9
  2216  013F58  6EE6               	movwf	postinc1,c
  2217  013F5A  EC91  F0C1         	call	_TimerDone	;wreg free
  2218  013F5E  5032               	movf	btemp^0,w,c
  2219  013F60  B4D8               	btfsc	status,2,c
  2220  013F62  D004               	goto	l10291
  2221                           
  2222                           ;main.c: 256:     set_display_info(DIS_STR);
  2223  013F64  0E00               	movlw	0
  2224  013F66  6EE6               	movwf	postinc1,c
  2225  013F68  EC17  F0C2         	call	_set_display_info	;wreg free
  2226  013F6C                     l10291:
  2227                           
  2228                           ;main.c: 258:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d", get_raw_result(C_BATT), C
      +                          .calc[C_BATT], get_switch(SSELECT));
  2229  013F6C  0E02               	movlw	2
  2230  013F6E  6EE6               	movwf	postinc1,c
  2231  013F70  ECBC  F0BF         	call	_get_switch	;wreg free
  2232  013F74  5032               	movf	btemp^0,w,c
  2233  013F76  6EE6               	movwf	postinc1,c
  2234  013F78  0E00               	movlw	0
  2235  013F7A  6EE6               	movwf	postinc1,c
  2236  013F7C  0060  F803  FFE6   	movff	_C,postinc1
  2237  013F82  0060  F807  FFE6   	movff	_C+1,postinc1
  2238  013F88  0060  F80B  FFE6   	movff	_C+2,postinc1
  2239  013F8E  0060  F80F  FFE6   	movff	_C+3,postinc1
  2240  013F94  0E00               	movlw	0
  2241  013F96  6EE6               	movwf	postinc1,c
  2242  013F98  EC08  F0C2         	call	_get_raw_result	;wreg free
  2243  013F9C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2244  013FA2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2245  013FA8  0EB3               	movlw	low STR_9
  2246  013FAA  6EE6               	movwf	postinc1,c
  2247  013FAC  0EFF               	movlw	high STR_9
  2248  013FAE  6EE6               	movwf	postinc1,c
  2249  013FB0  0E00               	movlw	0
  2250  013FB2  6EE6               	movwf	postinc1,c
  2251  013FB4  0E00               	movlw	0
  2252  013FB6  6EE6               	movwf	postinc1,c
  2253  013FB8  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  2254  013FBC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2255  013FC2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2256  013FC8  0E0C               	movlw	12
  2257  013FCA  6EE6               	movwf	postinc1,c
  2258  013FCC  EC9A  F0B4         	call	_sprintf	;wreg free
  2259                           
  2260                           ;main.c: 259:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d", get_raw_result(C_PV), C.c
      +                          alc[C_PV], get_switch(SENTER));
  2261  013FD0  0E03               	movlw	3
  2262  013FD2  6EE6               	movwf	postinc1,c
  2263  013FD4  ECBC  F0BF         	call	_get_switch	;wreg free
  2264  013FD8  5032               	movf	btemp^0,w,c
  2265  013FDA  6EE6               	movwf	postinc1,c
  2266  013FDC  0E00               	movlw	0
  2267  013FDE  6EE6               	movwf	postinc1,c
  2268  013FE0  0060  F813  FFE6   	movff	_C+4,postinc1
  2269  013FE6  0060  F817  FFE6   	movff	_C+5,postinc1
  2270  013FEC  0060  F81B  FFE6   	movff	_C+6,postinc1
  2271  013FF2  0060  F81F  FFE6   	movff	_C+7,postinc1
  2272  013FF8  0E01               	movlw	1
  2273  013FFA  6EE6               	movwf	postinc1,c
  2274  013FFC  EC08  F0C2         	call	_get_raw_result	;wreg free
  2275  014000  0060  F0CB  FFE6   	movff	btemp,postinc1
  2276  014006  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2277  01400C  0EB3               	movlw	low STR_9
  2278  01400E  6EE6               	movwf	postinc1,c
  2279  014010  0EFF               	movlw	high STR_9
  2280  014012  6EE6               	movwf	postinc1,c
  2281  014014  0E00               	movlw	0
  2282  014016  6EE6               	movwf	postinc1,c
  2283  014018  0E01               	movlw	1
  2284  01401A  6EE6               	movwf	postinc1,c
  2285  01401C  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  2286  014020  0060  F0CB  FFE6   	movff	btemp,postinc1
  2287  014026  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2288  01402C  0E0C               	movlw	12
  2289  01402E  6EE6               	movwf	postinc1,c
  2290  014030  EC9A  F0B4         	call	_sprintf	;wreg free
  2291                           
  2292                           ;main.c: 261:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(V_CC), 
      +                          C.calc[V_CC], check_switches());
  2293  014034  EC07  F0C3         	call	_check_switches	;wreg free
  2294  014038  5032               	movf	btemp^0,w,c
  2295  01403A  6EE6               	movwf	postinc1,c
  2296  01403C  0E00               	movlw	0
  2297  01403E  6EE6               	movwf	postinc1,c
  2298  014040  0060  F823  FFE6   	movff	_C+8,postinc1
  2299  014046  0060  F827  FFE6   	movff	_C+9,postinc1
  2300  01404C  0060  F82B  FFE6   	movff	_C+10,postinc1
  2301  014052  0060  F82F  FFE6   	movff	_C+11,postinc1
  2302  014058  0E02               	movlw	2
  2303  01405A  6EE6               	movwf	postinc1,c
  2304  01405C  EC08  F0C2         	call	_get_raw_result	;wreg free
  2305  014060  0060  F0CB  FFE6   	movff	btemp,postinc1
  2306  014066  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2307  01406C  0E84               	movlw	low STR_11
  2308  01406E  6EE6               	movwf	postinc1,c
  2309  014070  0EFF               	movlw	high STR_11
  2310  014072  6EE6               	movwf	postinc1,c
  2311  014074  0E00               	movlw	0
  2312  014076  6EE6               	movwf	postinc1,c
  2313  014078  0E02               	movlw	2
  2314  01407A  6EE6               	movwf	postinc1,c
  2315  01407C  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  2316  014080  0060  F0CB  FFE6   	movff	btemp,postinc1
  2317  014086  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2318  01408C  0E0C               	movlw	12
  2319  01408E  6EE6               	movwf	postinc1,c
  2320  014090  EC9A  F0B4         	call	_sprintf	;wreg free
  2321                           
  2322                           ;main.c: 262:    StartTimer(TMR_DISPLAY, 250);
  2323  014094  0EFA               	movlw	250
  2324  014096  6EE6               	movwf	postinc1,c
  2325  014098  0E00               	movlw	0
  2326  01409A  6EE6               	movwf	postinc1,c
  2327  01409C  0E0A               	movlw	10
  2328  01409E  6EE6               	movwf	postinc1,c
  2329  0140A0  ECB9  F0BE         	call	_StartTimer	;wreg free
  2330                           
  2331                           ;main.c: 263:    update_lcd(0);
  2332  0140A4  0E00               	movlw	0
  2333  0140A6  6EE6               	movwf	postinc1,c
  2334  0140A8  EC13  F0B4         	call	_update_lcd	;wreg free
  2335  0140AC                     l10301:
  2336                           
  2337                           ;main.c: 269:   check_help(V.flipper);
  2338  0140AC  0101               	movlb	1	; () banked
  2339  0140AE  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2340  0140B0  6EE6               	movwf	postinc1,c
  2341  0140B2  EC7B  F0AA         	call	_check_help	;wreg free
  2342                           
  2343                           ;main.c: 274:   if (V.set_sequ) {
  2344  0140B6  0101               	movlb	1	; () banked
  2345  0140B8  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2346  0140BA  D715               	goto	l10269
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;main.c: 275:    if (TimerDone(TMR_INFO)) {
  2350  0140BC  0E07               	movlw	7
  2351  0140BE  6EE6               	movwf	postinc1,c
  2352  0140C0  EC91  F0C1         	call	_TimerDone	;wreg free
  2353  0140C4  5032               	movf	btemp^0,w,c
  2354  0140C6  B4D8               	btfsc	status,2,c
  2355  0140C8  D00B               	goto	l10313
  2356                           
  2357                           ;main.c: 276:     V.set_sequ = 0;
  2358  0140CA  0101               	movlb	1	; () banked
  2359  0140CC  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2360                           
  2361                           ; BSR set to: 1
  2362                           ;main.c: 277:     set_vterm(0);
  2363  0140CE  0E00               	movlw	0
  2364  0140D0  6EE6               	movwf	postinc1,c
  2365  0140D2  EC52  F0C2         	call	_set_vterm	;wreg free
  2366                           
  2367                           ; BSR set to: 5
  2368                           ;main.c: 278:     update_lcd(0);
  2369  0140D6  0E00               	movlw	0
  2370  0140D8  6EE6               	movwf	postinc1,c
  2371  0140DA  EC13  F0B4         	call	_update_lcd	;wreg free
  2372                           
  2373                           ;main.c: 279:    } else {
  2374  0140DE  D703               	goto	l10269
  2375  0140E0                     l10313:
  2376                           
  2377                           ;main.c: 280:     set_vterm(2);
  2378  0140E0  0E02               	movlw	2
  2379  0140E2  6EE6               	movwf	postinc1,c
  2380  0140E4  EC52  F0C2         	call	_set_vterm	;wreg free
  2381                           
  2382                           ; BSR set to: 5
  2383                           ;main.c: 281:     update_lcd(2);
  2384  0140E8  0E02               	movlw	2
  2385  0140EA  6EE6               	movwf	postinc1,c
  2386  0140EC  EC13  F0B4         	call	_update_lcd	;wreg free
  2387  0140F0  D6FA               	goto	l10269
  2388  0140F2                     __end_of_main:
  2389                           	opt callstack 0
  2390                           
  2391 ;; *************** function _start_switch_handler *****************
  2392 ;; Defined at:
  2393 ;;		line 158 in file "mbmc.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1  [STACK] void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2402 ;; Tracked objects:
  2403 ;;		On entry : 1/4
  2404 ;;		On exit  : 3F/39
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    7
  2414 ;; This function calls:
  2415 ;;		_INT1_SetInterruptHandler
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;; This function uses a reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text1
  2422  0183D2                     __ptext1:
  2423                           	opt callstack 0
  2424  0183D2                     _start_switch_handler:
  2425                           	opt callstack 23
  2426                           
  2427                           ;mbmc.c: 160:  (PIE5bits.INT1IE = 0);
  2428                           
  2429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2430                           ;incstack = 0
  2431  0183D2  0139               	movlb	57	; () banked
  2432  0183D4  9195               	bcf	149,0,b	;volatile
  2433                           
  2434                           ; BSR set to: 57
  2435                           ;mbmc.c: 161:  INT1_SetInterruptHandler(switch_handler);
  2436  0183D6  0EFE               	movlw	low _switch_handler
  2437  0183D8  6EE6               	movwf	postinc1,c
  2438  0183DA  0E60               	movlw	high _switch_handler
  2439  0183DC  6EE6               	movwf	postinc1,c
  2440  0183DE  0E01               	movlw	low (_switch_handler shr (0+16))
  2441  0183E0  6EE6               	movwf	postinc1,c
  2442  0183E2  ECDD  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
  2443                           
  2444                           ;mbmc.c: 162:  V.button[SNULL].sw = SW_INVALID;
  2445  0183E6  0E02               	movlw	2
  2446  0183E8  0101               	movlb	1	; () banked
  2447  0183EA  6FDE               	movwf	(_V+222)& (0+255),b	;volatile
  2448                           
  2449                           ; BSR set to: 1
  2450                           ;mbmc.c: 163:  (PIE5bits.INT1IE = 1);
  2451  0183EC  0139               	movlb	57	; () banked
  2452  0183EE  8195               	bsf	149,0,b	;volatile
  2453                           
  2454                           ; BSR set to: 57
  2455                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2456  0183F0  0012               	return		;funcret
  2457  0183F2                     __end_of_start_switch_handler:
  2458                           	opt callstack 0
  2459                           
  2460 ;; *************** function _start_adc_scan *****************
  2461 ;; Defined at:
  2462 ;;		line 33 in file "daq.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1  [STACK] _Bool 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/5
  2473 ;;		On exit  : 1/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    7
  2483 ;; This function calls:
  2484 ;;		_ADCC_DischargeSampleCapacitor
  2485 ;;		_ADCC_SetADIInterruptHandler
  2486 ;;		_ADCC_SetADTIInterruptHandler
  2487 ;;		_ADCC_StartConversion
  2488 ;; This function is called by:
  2489 ;;		_main
  2490 ;; This function uses a reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text2
  2494  0176EA                     __ptext2:
  2495                           	opt callstack 0
  2496  0176EA                     _start_adc_scan:
  2497                           	opt callstack 23
  2498                           
  2499                           ;daq.c: 35:  if (R.done)
  2500                           
  2501                           ; BSR set to: 57
  2502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2503                           ;incstack = 0
  2504  0176EA  0100               	movlb	0	; () banked
  2505  0176EC  51CD               	movf	(_R+39)& (0+255),w,b	;volatile
  2506  0176EE  A4D8               	btfss	status,2,c
  2507  0176F0  0012               	return	
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;daq.c: 38:  R.scan_index = 0;
  2511  0176F2  6BCA               	clrf	(_R+36)& (0+255),b	;volatile
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2515  0176F4  013A               	movlb	58	; () banked
  2516  0176F6  5140               	movf	64,w,b	;volatile
  2517  0176F8  006E F940  F032    	movff	14928,btemp	;volatile
  2518  0176FE  6A33               	clrf	(btemp+1)^0,c
  2519  017700  0060  F0C8  F033   	movff	btemp,btemp+1
  2520  017706  6A32               	clrf	btemp^0,c
  2521  017708  2632               	addwf	btemp^0,f,c
  2522  01770A  0E00               	movlw	0
  2523  01770C  2233               	addwfc	(btemp+1)^0,f,c
  2524  01770E  0E77               	movlw	119
  2525  017710  1432               	andwf	btemp^0,w,c
  2526  017712  0100               	movlb	0	; () banked
  2527  017714  6FCB               	movwf	(_R+37)& (0+255),b	;volatile
  2528  017716  0E3C               	movlw	60
  2529  017718  1433               	andwf	(btemp+1)^0,w,c
  2530  01771A  6FCC               	movwf	(_R+38)& (0+255),b	;volatile
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2534  01771C  0E54               	movlw	low _adc_int_handler
  2535  01771E  6EE6               	movwf	postinc1,c
  2536  017720  0E86               	movlw	high _adc_int_handler
  2537  017722  6EE6               	movwf	postinc1,c
  2538  017724  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2539  017726  6EE6               	movwf	postinc1,c
  2540  017728  EC19  F0C1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2541                           
  2542                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2543  01772C  0E50               	movlw	low _adc_int_t_handler
  2544  01772E  6EE6               	movwf	postinc1,c
  2545  017730  0E74               	movlw	high _adc_int_t_handler
  2546  017732  6EE6               	movwf	postinc1,c
  2547  017734  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2548  017736  6EE6               	movwf	postinc1,c
  2549  017738  EC05  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2550                           
  2551                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2552  01773C  EC03  F0C3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2553                           
  2554                           ; BSR set to: 62
  2555                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2556  017740  0100               	movlb	0	; () banked
  2557  017742  51CA               	movf	(_R+36)& (0+255),w,b	;volatile
  2558  017744  0B0F               	andlw	15
  2559  017746  6EE6               	movwf	postinc1,c
  2560  017748  ECBE  F0C2         	call	_ADCC_StartConversion	;wreg free
  2561                           
  2562                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2563  01774C  0012               	return		;funcret
  2564  01774E                     __end_of_start_adc_scan:
  2565                           	opt callstack 0
  2566                           
  2567 ;; *************** function _ADCC_StartConversion *****************
  2568 ;; Defined at:
  2569 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  channel         1  [STACK] enum E16136
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1  [STACK] void 
  2576 ;; Registers used:
  2577 ;;		fsr1l, fsr1h
  2578 ;; Tracked objects:
  2579 ;;		On entry : 3F/0
  2580 ;;		On exit  : 3F/3E
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    6
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_start_adc_scan
  2594 ;;		_adc_int_t_handler
  2595 ;; This function uses a reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text3
  2599  01857C                     __ptext3:
  2600                           	opt callstack 0
  2601  01857C                     _ADCC_StartConversion:
  2602                           	opt callstack 6
  2603                           
  2604                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2605                           ;stkvar	_channel @ sp[(0)+-1]
  2606                           
  2607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2608                           ;incstack = 0
  2609  01857C  0EFF               	movlw	-1
  2610  01857E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2611                           
  2612                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2613  018584  013E               	movlb	62	; () banked
  2614  018586  8FF8               	bsf	248,7,b	;volatile
  2615                           
  2616                           ; BSR set to: 62
  2617                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2618  018588  81F8               	bsf	248,0,b	;volatile
  2619                           
  2620                           ; BSR set to: 62
  2621                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2622  01858A  52E5               	movf	postdec1,f,c
  2623  01858C  0012               	return		;funcret
  2624  01858E                     __end_of_ADCC_StartConversion:
  2625                           	opt callstack 0
  2626                           
  2627 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2628 ;; Defined at:
  2629 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1  [STACK] void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 3F/3E
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    6
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_start_adc_scan
  2654 ;;		_adc_int_t_handler
  2655 ;; This function uses a reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text4
  2659  018606                     __ptext4:
  2660                           	opt callstack 0
  2661  018606                     _ADCC_DischargeSampleCapacitor:
  2662                           	opt callstack 6
  2663                           
  2664                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2665                           
  2666                           ; BSR set to: 62
  2667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2668                           ;incstack = 0
  2669  018606  0E3B               	movlw	59
  2670  018608  013E               	movlb	62	; () banked
  2671  01860A  6FF1               	movwf	241,b	;volatile
  2672                           
  2673                           ; BSR set to: 62
  2674                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2675  01860C  0012               	return		;funcret
  2676  01860E                     __end_of_ADCC_DischargeSampleCapacitor:
  2677                           	opt callstack 0
  2678                           
  2679 ;; *************** function _srand *****************
  2680 ;; Defined at:
  2681 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  s               2  [STACK] unsigned int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1  [STACK] void 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2690 ;; Tracked objects:
  2691 ;;		On entry : 3F/0
  2692 ;;		On exit  : 3F/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    6
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text5
  2710  017E52                     __ptext5:
  2711                           	opt callstack 0
  2712  017E52                     _srand:
  2713                           	opt callstack 24
  2714                           
  2715                           ;stkvar	_s @ sp[(0)+-2]
  2716                           
  2717                           ; BSR set to: 62
  2718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2719                           ;incstack = 0
  2720  017E52  0EFE               	movlw	-2
  2721  017E54  50E3               	movf	plusw1,w,c
  2722  017E56  0FFF               	addlw	255
  2723  017E58  6E3C               	movwf	(btemp+10)^0,c
  2724  017E5A  0EFF               	movlw	-1
  2725  017E5C  006F FF8C  F03D    	movff	plusw1,btemp+11
  2726  017E62  0EFF               	movlw	255
  2727  017E64  223D               	addwfc	(btemp+11)^0,f,c
  2728  017E66  0060  F0F0  F09E   	movff	btemp+10,_seed
  2729  017E6C  0060  F0F4  F09F   	movff	btemp+11,_seed+1
  2730  017E72  0100               	movlb	0	; () banked
  2731  017E74  6BA0               	clrf	(_seed+2)& (0+255),b
  2732  017E76  6BA1               	clrf	(_seed+3)& (0+255),b
  2733  017E78  6BA2               	clrf	(_seed+4)& (0+255),b
  2734  017E7A  6BA3               	clrf	(_seed+5)& (0+255),b
  2735  017E7C  6BA4               	clrf	(_seed+6)& (0+255),b
  2736  017E7E  6BA5               	clrf	(_seed+7)& (0+255),b
  2737                           
  2738                           ; BSR set to: 0
  2739                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2740  017E80  52E5               	movf	postdec1,f,c
  2741  017E82  52E5               	movf	postdec1,f,c
  2742  017E84  0012               	return		;funcret
  2743  017E86                     __end_of_srand:
  2744                           	opt callstack 0
  2745                           
  2746 ;; *************** function _init_display *****************
  2747 ;; Defined at:
  2748 ;;		line 37 in file "eadog.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1  [STACK] void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/1
  2759 ;;		On exit  : 3F/3D
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    8
  2769 ;; This function calls:
  2770 ;;		_ringBufS_init
  2771 ;;		_send_lcd_cmd
  2772 ;;		_send_lcd_cmd_long
  2773 ;;		_wdtdelay
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text6
  2780  016A3E                     __ptext6:
  2781                           	opt callstack 0
  2782  016A3E                     _init_display:
  2783                           	opt callstack 22
  2784                           
  2785                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2786                           
  2787                           ; BSR set to: 0
  2788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2789                           ;incstack = 0
  2790  016A3E  0E80               	movlw	low _ring_buf1
  2791  016A40  0100               	movlb	0	; () banked
  2792  016A42  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2793  016A44  0E03               	movlw	high _ring_buf1
  2794  016A46  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2795                           
  2796                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2797  016A48  0E00               	movlw	low _ring_buf2
  2798  016A4A  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2799  016A4C  0E04               	movlw	high _ring_buf2
  2800  016A4E  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2804  016A50  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  2805  016A56  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  2806  016A5C  EC51  F0C0         	call	_ringBufS_init	;wreg free
  2807                           
  2808                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2809  016A60  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  2810  016A66  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  2811  016A6C  EC51  F0C0         	call	_ringBufS_init	;wreg free
  2812                           
  2813                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2814  016A70  84BE               	bsf	190,2,c	;volatile
  2815  016A72  84BC               	bsf	188,2,c	;volatile
  2816                           
  2817                           ;eadog.c: 46:  wdtdelay(350000);
  2818  016A74  0E30               	movlw	48
  2819  016A76  6EE6               	movwf	postinc1,c
  2820  016A78  0E57               	movlw	87
  2821  016A7A  6EE6               	movwf	postinc1,c
  2822  016A7C  0E05               	movlw	5
  2823  016A7E  6EE6               	movwf	postinc1,c
  2824  016A80  0E00               	movlw	0
  2825  016A82  6EE6               	movwf	postinc1,c
  2826  016A84  EC98  F0BC         	call	_wdtdelay	;wreg free
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2830  016A88  0E39               	movlw	57
  2831  016A8A  6EE6               	movwf	postinc1,c
  2832  016A8C  EC3D  F0C0         	call	_send_lcd_cmd	;wreg free
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2836  016A90  0E1D               	movlw	29
  2837  016A92  6EE6               	movwf	postinc1,c
  2838  016A94  EC3D  F0C0         	call	_send_lcd_cmd	;wreg free
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2842  016A98  0E50               	movlw	80
  2843  016A9A  6EE6               	movwf	postinc1,c
  2844  016A9C  EC3D  F0C0         	call	_send_lcd_cmd	;wreg free
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2848  016AA0  0E6C               	movlw	108
  2849  016AA2  6EE6               	movwf	postinc1,c
  2850  016AA4  EC3D  F0C0         	call	_send_lcd_cmd	;wreg free
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2854  016AA8  0E76               	movlw	118
  2855  016AAA  6EE6               	movwf	postinc1,c
  2856  016AAC  EC3D  F0C0         	call	_send_lcd_cmd	;wreg free
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2860  016AB0  0E38               	movlw	56
  2861  016AB2  6EE6               	movwf	postinc1,c
  2862  016AB4  EC29  F0C0         	call	_send_lcd_cmd_long	;wreg free
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2866  016AB8  0E0F               	movlw	15
  2867  016ABA  6EE6               	movwf	postinc1,c
  2868  016ABC  EC3D  F0C0         	call	_send_lcd_cmd	;wreg free
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2872  016AC0  0E01               	movlw	1
  2873  016AC2  6EE6               	movwf	postinc1,c
  2874  016AC4  EC29  F0C0         	call	_send_lcd_cmd_long	;wreg free
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2878  016AC8  0E02               	movlw	2
  2879  016ACA  6EE6               	movwf	postinc1,c
  2880  016ACC  EC3D  F0C0         	call	_send_lcd_cmd	;wreg free
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2884  016AD0  0E06               	movlw	6
  2885  016AD2  6EE6               	movwf	postinc1,c
  2886  016AD4  EC3D  F0C0         	call	_send_lcd_cmd	;wreg free
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;eadog.c: 57:  wdtdelay(30);
  2890  016AD8  0E1E               	movlw	30
  2891  016ADA  6EE6               	movwf	postinc1,c
  2892  016ADC  0E00               	movlw	0
  2893  016ADE  6EE6               	movwf	postinc1,c
  2894  016AE0  0E00               	movlw	0
  2895  016AE2  6EE6               	movwf	postinc1,c
  2896  016AE4  0E00               	movlw	0
  2897  016AE6  6EE6               	movwf	postinc1,c
  2898  016AE8  EC98  F0BC         	call	_wdtdelay	;wreg free
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2902  016AEC  0E02               	movlw	2
  2903  016AEE  013D               	movlb	61	; () banked
  2904  016AF0  6F16               	movwf	22,b	;volatile
  2905                           
  2906                           ; BSR set to: 61
  2907                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2908  016AF2  0E40               	movlw	64
  2909  016AF4  6F15               	movwf	21,b	;volatile
  2910                           
  2911                           ; BSR set to: 61
  2912                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2913  016AF6  0E83               	movlw	131
  2914  016AF8  6F14               	movwf	20,b	;volatile
  2915                           
  2916                           ; BSR set to: 61
  2917                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2918  016AFA  931A               	bcf	26,1,b	;volatile
  2919                           
  2920                           ; BSR set to: 61
  2921                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2922  016AFC  0E3F               	movlw	-193
  2923  016AFE  013B               	movlb	59	; () banked
  2924  016B00  17FD               	andwf	253,f,b	;volatile
  2925                           
  2926                           ; BSR set to: 59
  2927                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2928  016B02  9BFD               	bcf	253,5,b	;volatile
  2929                           
  2930                           ; BSR set to: 59
  2931                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2932  016B04  51FD               	movf	253,w,b	;volatile
  2933  016B06  0BF9               	andlw	-7
  2934  016B08  0902               	iorlw	2
  2935  016B0A  6FFD               	movwf	253,b	;volatile
  2936                           
  2937                           ; BSR set to: 59
  2938                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2939  016B0C  0EE7               	movlw	-25
  2940  016B0E  17FD               	andwf	253,f,b	;volatile
  2941                           
  2942                           ; BSR set to: 59
  2943                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2944  016B10  81FD               	bsf	253,0,b	;volatile
  2945                           
  2946                           ; BSR set to: 59
  2947                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2948  016B12  0E80               	movlw	low _ring_buf1
  2949  016B14  6FF9               	movwf	249,b	;volatile
  2950  016B16  0E03               	movlw	high _ring_buf1
  2951  016B18  6FFA               	movwf	250,b	;volatile
  2952  016B1A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2953  016B1C  6FFB               	movwf	251,b	;volatile
  2954                           
  2955                           ; BSR set to: 59
  2956                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2957  016B1E  9BFC               	bcf	252,5,b	;volatile
  2958                           
  2959                           ; BSR set to: 59
  2960                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2961  016B20  013D               	movlb	61	; () banked
  2962  016B22  831A               	bsf	26,1,b	;volatile
  2963                           
  2964                           ; BSR set to: 61
  2965                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2966  016B24  94BE               	bcf	190,2,c	;volatile
  2967                           
  2968                           ; BSR set to: 61
  2969                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2970  016B26  0012               	return		;funcret
  2971  016B28                     __end_of_init_display:
  2972                           	opt callstack 0
  2973                           
  2974 ;; *************** function _send_lcd_cmd_long *****************
  2975 ;; Defined at:
  2976 ;;		line 114 in file "eadog.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  cmd             1  [STACK] const unsigned char 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1  [STACK] void 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2985 ;; Tracked objects:
  2986 ;;		On entry : 3F/0
  2987 ;;		On exit  : 3F/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    7
  2997 ;; This function calls:
  2998 ;;		_SPI1_Exchange8bit
  2999 ;;		_wdtdelay
  3000 ;; This function is called by:
  3001 ;;		_init_display
  3002 ;; This function uses a reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text7
  3006  018052                     __ptext7:
  3007                           	opt callstack 0
  3008  018052                     _send_lcd_cmd_long:
  3009                           	opt callstack 22
  3010                           
  3011                           ; BSR set to: 61
  3012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3013                           ;incstack = 0
  3014                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3015  018052  92BC               	bcf	188,1,c	;volatile
  3016                           
  3017                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3018  018054  94BC               	bcf	188,2,c	;volatile
  3019                           
  3020                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3021                           ;stkvar	_cmd @ sp[(0)+-1]
  3022  018056  0EFF               	movlw	-1
  3023  018058  50E3               	movf	plusw1,w,c
  3024  01805A  6EE6               	movwf	postinc1,c
  3025  01805C  ECF9  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3026                           
  3027                           ; BSR set to: 57
  3028                           ;eadog.c: 119:  wdtdelay(800);
  3029  018060  0E20               	movlw	32
  3030  018062  6EE6               	movwf	postinc1,c
  3031  018064  0E03               	movlw	3
  3032  018066  6EE6               	movwf	postinc1,c
  3033  018068  0E00               	movlw	0
  3034  01806A  6EE6               	movwf	postinc1,c
  3035  01806C  0E00               	movlw	0
  3036  01806E  6EE6               	movwf	postinc1,c
  3037  018070  EC98  F0BC         	call	_wdtdelay	;wreg free
  3038                           
  3039                           ; BSR set to: 0
  3040  018074  82BC               	bsf	188,1,c	;volatile
  3041                           
  3042                           ; BSR set to: 0
  3043                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3044  018076  52E5               	movf	postdec1,f,c
  3045  018078  0012               	return		;funcret
  3046  01807A                     __end_of_send_lcd_cmd_long:
  3047                           	opt callstack 0
  3048                           
  3049 ;; *************** function _send_lcd_cmd *****************
  3050 ;; Defined at:
  3051 ;;		line 102 in file "eadog.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  cmd             1  [STACK] const unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1  [STACK] void 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3060 ;; Tracked objects:
  3061 ;;		On entry : 3F/0
  3062 ;;		On exit  : 3F/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    7
  3072 ;; This function calls:
  3073 ;;		_SPI1_Exchange8bit
  3074 ;;		_wdtdelay
  3075 ;; This function is called by:
  3076 ;;		_init_display
  3077 ;; This function uses a reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text8
  3081  01807A                     __ptext8:
  3082                           	opt callstack 0
  3083  01807A                     _send_lcd_cmd:
  3084                           	opt callstack 22
  3085                           
  3086                           ; BSR set to: 0
  3087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3088                           ;incstack = 0
  3089                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3090  01807A  92BC               	bcf	188,1,c	;volatile
  3091                           
  3092                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3093  01807C  94BC               	bcf	188,2,c	;volatile
  3094                           
  3095                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3096                           ;stkvar	_cmd @ sp[(0)+-1]
  3097  01807E  0EFF               	movlw	-1
  3098  018080  50E3               	movf	plusw1,w,c
  3099  018082  6EE6               	movwf	postinc1,c
  3100  018084  ECF9  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3101                           
  3102                           ; BSR set to: 57
  3103                           ;eadog.c: 107:  wdtdelay(30);
  3104  018088  0E1E               	movlw	30
  3105  01808A  6EE6               	movwf	postinc1,c
  3106  01808C  0E00               	movlw	0
  3107  01808E  6EE6               	movwf	postinc1,c
  3108  018090  0E00               	movlw	0
  3109  018092  6EE6               	movwf	postinc1,c
  3110  018094  0E00               	movlw	0
  3111  018096  6EE6               	movwf	postinc1,c
  3112  018098  EC98  F0BC         	call	_wdtdelay	;wreg free
  3113                           
  3114                           ; BSR set to: 0
  3115  01809C  82BC               	bsf	188,1,c	;volatile
  3116                           
  3117                           ; BSR set to: 0
  3118                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3119  01809E  52E5               	movf	postdec1,f,c
  3120  0180A0  0012               	return		;funcret
  3121  0180A2                     __end_of_send_lcd_cmd:
  3122                           	opt callstack 0
  3123                           
  3124 ;; *************** function _SPI1_Exchange8bit *****************
  3125 ;; Defined at:
  3126 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  data            1  [STACK] unsigned char 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1  [STACK] unsigned char 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 3F/39
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    6
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_send_lcd_cmd
  3151 ;;		_send_lcd_cmd_long
  3152 ;; This function uses a reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text9
  3156  0183F2                     __ptext9:
  3157                           	opt callstack 0
  3158  0183F2                     _SPI1_Exchange8bit:
  3159                           	opt callstack 22
  3160                           
  3161                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3162                           
  3163                           ; BSR set to: 0
  3164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3165                           ;incstack = 0
  3166  0183F2  0E01               	movlw	1
  3167  0183F4  013D               	movlb	61	; () banked
  3168  0183F6  6F12               	movwf	18,b	;volatile
  3169                           
  3170                           ; BSR set to: 61
  3171                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3172                           ;stkvar	_data @ sp[(0)+-1]
  3173  0183F8  0EFF               	movlw	-1
  3174  0183FA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3175  018400                     l835:
  3176                           
  3177                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3178  018400  0139               	movlb	57	; () banked
  3179  018402  A9A2               	btfss	162,4,b	;volatile
  3180  018404  D7FD               	goto	l835
  3181                           
  3182                           ; BSR set to: 57
  3183                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3184  018406  006F F440  F032    	movff	15632,btemp	;volatile
  3185                           
  3186                           ; BSR set to: 57
  3187                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3188  01840C  52E5               	movf	postdec1,f,c
  3189  01840E  0012               	return		;funcret
  3190  018410                     __end_of_SPI1_Exchange8bit:
  3191                           	opt callstack 0
  3192                           
  3193 ;; *************** function _ringBufS_init *****************
  3194 ;; Defined at:
  3195 ;;		line 22 in file "ringbufs.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  _this           2  [STACK] PTR volatile struct ring
  3198 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1  [STACK] void 
  3203 ;; Registers used:
  3204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    7
  3217 ;; This function calls:
  3218 ;;		_memset
  3219 ;; This function is called by:
  3220 ;;		_init_display
  3221 ;; This function uses a reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text10
  3225  0180A2                     __ptext10:
  3226                           	opt callstack 0
  3227  0180A2                     _ringBufS_init:
  3228                           	opt callstack 22
  3229                           
  3230                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3231                           
  3232                           ; BSR set to: 57
  3233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3234                           ;incstack = 0
  3235  0180A2  0E43               	movlw	67
  3236  0180A4  6EE6               	movwf	postinc1,c
  3237  0180A6  0E00               	movlw	0
  3238  0180A8  6EE6               	movwf	postinc1,c
  3239  0180AA  0E00               	movlw	0
  3240  0180AC  6EE6               	movwf	postinc1,c
  3241  0180AE  0E00               	movlw	0
  3242  0180B0  6EE6               	movwf	postinc1,c
  3243                           
  3244                           ;stkvar	__this @ sp[(-4)+-2]
  3245  0180B2  0EFA               	movlw	-6
  3246  0180B4  006F FF8F FFE6     	movff	plusw1,postinc1
  3247  0180BA  006F FF8F FFE6     	movff	plusw1,postinc1
  3248  0180C0  EC0C  F0A4         	call	_memset	;wreg free
  3249                           
  3250                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3251  0180C4  52E5               	movf	postdec1,f,c
  3252  0180C6  52E5               	movf	postdec1,f,c
  3253  0180C8  0012               	return		;funcret
  3254  0180CA                     __end_of_ringBufS_init:
  3255                           	opt callstack 0
  3256                           
  3257 ;; *************** function _get_switch *****************
  3258 ;; Defined at:
  3259 ;;		line 58 in file "mbmc.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  i               1  [STACK] unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1  [STACK] enum E17013
  3266 ;; Registers used:
  3267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/39
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    6
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text11
  3288  017F78                     __ptext11:
  3289                           	opt callstack 0
  3290  017F78                     _get_switch:
  3291                           	opt callstack 24
  3292                           
  3293                           ;mbmc.c: 58: SW_STATES get_switch(uint8_t i);mbmc.c: 59: {;mbmc.c: 60:  if (i >= 4)
  3294                           ;stkvar	_i @ sp[(0)+-1]
  3295                           
  3296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3297                           ;incstack = 0
  3298  017F78  0EFF               	movlw	-1
  3299  017F7A  006F FF8C  F032    	movff	plusw1,btemp
  3300  017F80  0E03               	movlw	3
  3301  017F82  6432               	cpfsgt	btemp^0,c
  3302  017F84  D002               	goto	l8877
  3303                           
  3304                           ;mbmc.c: 61:   return SW_OFF;
  3305  017F86  0E00               	movlw	0
  3306  017F88  D00A               	goto	L1
  3307  017F8A                     l8877:
  3308                           
  3309                           ;mbmc.c: 63:  return V.button[i].sw;
  3310                           ;stkvar	_i @ sp[(0)+-1]
  3311  017F8A  0EFF               	movlw	-1
  3312  017F8C  50E3               	movf	plusw1,w,c
  3313  017F8E  0D05               	mullw	5
  3314  017F90  0EBB               	movlw	low (_V+187)
  3315  017F92  24F3               	addwf	243,w,c
  3316  017F94  6ED9               	movwf	fsr2l,c
  3317  017F96  0E01               	movlw	high (_V+187)
  3318  017F98  20F4               	addwfc	prodh,w,c
  3319  017F9A  6EDA               	movwf	fsr2h,c
  3320  017F9C  50DF               	movf	indf2,w,c
  3321  017F9E                     L1:
  3322  017F9E  6E32               	movwf	btemp^0,c
  3323                           
  3324                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3325  017FA0  52E5               	movf	postdec1,f,c
  3326  017FA2  0012               	return		;funcret
  3327  017FA4                     __end_of_get_switch:
  3328                           	opt callstack 0
  3329                           
  3330 ;; *************** function _eaDogM_WriteCommand *****************
  3331 ;; Defined at:
  3332 ;;		line 160 in file "eadog.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  cmd             1  [STACK] const unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1  [STACK] void 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3341 ;; Tracked objects:
  3342 ;;		On entry : 3F/3D
  3343 ;;		On exit  : 3F/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:   16
  3353 ;; This function calls:
  3354 ;;		_send_lcd_cmd_dma
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text12
  3361  01859E                     __ptext12:
  3362                           	opt callstack 0
  3363  01859E                     _eaDogM_WriteCommand:
  3364                           	opt callstack 14
  3365                           
  3366                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3367                           ;stkvar	_cmd @ sp[(0)+-1]
  3368                           
  3369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3370                           ;incstack = 0
  3371  01859E  0EFF               	movlw	-1
  3372  0185A0  50E3               	movf	plusw1,w,c
  3373  0185A2  6EE6               	movwf	postinc1,c
  3374  0185A4  ECF2  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  3375                           
  3376                           ; BSR set to: 0
  3377                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3378  0185A8  52E5               	movf	postdec1,f,c
  3379  0185AA  0012               	return		;funcret
  3380  0185AC                     __end_of_eaDogM_WriteCommand:
  3381                           	opt callstack 0
  3382                           
  3383 ;; *************** function _convert_adc_data *****************
  3384 ;; Defined at:
  3385 ;;		line 41 in file "mbmc.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  i               1  [STACK] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1  [STACK] void 
  3392 ;; Registers used:
  3393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/39
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3403 ;;Total ram usage:        0 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    9
  3406 ;; This function calls:
  3407 ;;		_conv_raw_result
  3408 ;;		_lp_filter
  3409 ;; This function is called by:
  3410 ;;		_main
  3411 ;; This function uses a reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text13
  3415  0174CE                     __ptext13:
  3416                           	opt callstack 0
  3417  0174CE                     _convert_adc_data:
  3418                           	opt callstack 0
  3419                           
  3420                           ; BSR set to: 0
  3421                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3422  0174CE  52E6               	movf	postinc1,f,c
  3423                           
  3424                           ;mbmc.c: 43:  uint8_t i = 0;
  3425                           ;stkvar	_i @ sp[(-1)+0]
  3426                           
  3427                           ;incstack = 0
  3428  0174D0  0EFF               	movlw	-1
  3429  0174D2  6AE3               	clrf	plusw1,c
  3430  0174D4                     l8865:
  3431                           
  3432                           ;mbmc.c: 47:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3433  0174D4  0E01               	movlw	1
  3434  0174D6  6EE6               	movwf	postinc1,c
  3435                           
  3436                           ;stkvar	_i @ sp[(-2)+0]
  3437  0174D8  0EFE               	movlw	-2
  3438  0174DA  50E3               	movf	plusw1,w,c
  3439  0174DC  6EE6               	movwf	postinc1,c
  3440  0174DE  0E01               	movlw	1
  3441  0174E0  6EE6               	movwf	postinc1,c
  3442                           
  3443                           ;stkvar	_i @ sp[(-4)+0]
  3444  0174E2  0EFC               	movlw	-4
  3445  0174E4  50E3               	movf	plusw1,w,c
  3446  0174E6  6EE6               	movwf	postinc1,c
  3447  0174E8  ECB4  F096         	call	_conv_raw_result	;wreg free
  3448  0174EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  3449  0174F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3450  0174F8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3451  0174FE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3452  017504  EC6A  F0AD         	call	_lp_filter	;wreg free
  3453                           
  3454                           ;stkvar	_i @ sp[(-1)+0]
  3455  017508  0EFF               	movlw	-1
  3456  01750A  50E3               	movf	plusw1,w,c
  3457  01750C  0D04               	mullw	4
  3458  01750E  0E00               	movlw	low _C
  3459  017510  24F3               	addwf	243,w,c
  3460  017512  6ED9               	movwf	fsr2l,c
  3461  017514  0E02               	movlw	high _C
  3462  017516  20F4               	addwfc	prodh,w,c
  3463  017518  6EDA               	movwf	fsr2h,c
  3464  01751A  0060  F0CB  FFDE   	movff	btemp,postinc2
  3465  017520  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3466  017526  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3467  01752C  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3468                           
  3469                           ;mbmc.c: 51:  } while (++i < 16);
  3470                           ;stkvar	_i @ sp[(-1)+0]
  3471  017532  0EFF               	movlw	-1
  3472  017534  2AE3               	incf	plusw1,f,c
  3473  017536  0EFF               	movlw	-1
  3474  017538  006F FF8C  F032    	movff	plusw1,btemp
  3475  01753E  0E0F               	movlw	15
  3476  017540  6432               	cpfsgt	btemp^0,c
  3477  017542  D7C8               	goto	l8865
  3478                           
  3479                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3480  017544  52E5               	movf	postdec1,f,c
  3481  017546  0012               	return		;funcret
  3482  017548                     __end_of_convert_adc_data:
  3483                           	opt callstack 0
  3484                           
  3485 ;; *************** function _lp_filter *****************
  3486 ;; Defined at:
  3487 ;;		line 19 in file "mbmc.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  new             4  [STACK] const float 
  3490 ;;  bn              1  [STACK] const unsigned char 
  3491 ;;  slow            1  [STACK] const char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  lp_speed        4  [STACK] float 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  4  [STACK] float 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/39
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    8
  3510 ;; This function calls:
  3511 ;;		___fladd
  3512 ;;		___flmul
  3513 ;;		___flsub
  3514 ;; This function is called by:
  3515 ;;		_convert_adc_data
  3516 ;; This function uses a reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text14
  3520  015AD4                     __ptext14:
  3521                           	opt callstack 0
  3522  015AD4                     _lp_filter:
  3523                           	opt callstack 0
  3524                           
  3525                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3526  015AD4  52E6               	movf	postinc1,f,c
  3527  015AD6  52E6               	movf	postinc1,f,c
  3528  015AD8  52E6               	movf	postinc1,f,c
  3529  015ADA  52E6               	movf	postinc1,f,c
  3530                           
  3531                           ;mbmc.c: 19: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 20: {;mbmc.c: 21:  static float smooth[16];;mbmc.c: 22:  float lp_speed;;mbmc.c: 24: 
      +                           if (bn >= 16)
  3532                           ;stkvar	_bn @ sp[(-4)+-5]
  3533                           
  3534                           ;incstack = 0
  3535  015ADC  0EF7               	movlw	-9
  3536  015ADE  006F FF8C  F032    	movff	plusw1,btemp
  3537  015AE4  0E0F               	movlw	15
  3538  015AE6  6432               	cpfsgt	btemp^0,c
  3539  015AE8  D011               	goto	l8599
  3540  015AEA                     u8160:
  3541                           
  3542                           ;mbmc.c: 25:   return new;
  3543                           ;stkvar	_new @ sp[(-4)+-4]
  3544  015AEA  0EF8               	movlw	-8
  3545  015AEC  006F FF8C  F032    	movff	plusw1,btemp
  3546  015AF2  0EF9               	movlw	-7
  3547  015AF4  006F FF8C  F033    	movff	plusw1,btemp+1
  3548  015AFA  0EFA               	movlw	-6
  3549  015AFC  006F FF8C  F034    	movff	plusw1,btemp+2
  3550  015B02  0EFB               	movlw	-5
  3551  015B04  006F FF8C  F035    	movff	plusw1,btemp+3
  3552  015B0A  D0BF               	goto	l1707
  3553  015B0C                     l8599:
  3554                           
  3555                           ;mbmc.c: 27:  if (slow == (-1)) {
  3556                           ;stkvar	_slow @ sp[(-4)+-6]
  3557  015B0C  0EF6               	movlw	-10
  3558  015B0E  28E3               	incf	plusw1,w,c
  3559  015B10  A4D8               	btfss	status,2,c
  3560  015B12  D012               	goto	l8607
  3561                           
  3562                           ;mbmc.c: 28:   smooth[bn] = 0.0;
  3563                           ;stkvar	_bn @ sp[(-4)+-5]
  3564  015B14  0EF7               	movlw	-9
  3565  015B16  50E3               	movf	plusw1,w,c
  3566  015B18  0D04               	mullw	4
  3567  015B1A  0E6C               	movlw	low lp_filter@smooth
  3568  015B1C  24F3               	addwf	243,w,c
  3569  015B1E  6ED9               	movwf	fsr2l,c
  3570  015B20  0E02               	movlw	high lp_filter@smooth
  3571  015B22  20F4               	addwfc	prodh,w,c
  3572  015B24  6EDA               	movwf	fsr2h,c
  3573  015B26  0E00               	movlw	0
  3574  015B28  6EDE               	movwf	postinc2,c
  3575  015B2A  0E00               	movlw	0
  3576  015B2C  6EDE               	movwf	postinc2,c
  3577  015B2E  0E00               	movlw	0
  3578  015B30  6EDE               	movwf	postinc2,c
  3579  015B32  0E00               	movlw	0
  3580  015B34  6EDD               	movwf	postdec2,c
  3581  015B36  D7D9               	goto	u8160
  3582  015B38                     l8607:
  3583                           
  3584                           ;mbmc.c: 32:  if (slow) {
  3585                           ;stkvar	_slow @ sp[(-4)+-6]
  3586  015B38  0EF6               	movlw	-10
  3587  015B3A  50E3               	movf	plusw1,w,c
  3588  015B3C  B4D8               	btfsc	status,2,c
  3589  015B3E  D008               	goto	l8611
  3590                           
  3591                           ;mbmc.c: 33:   lp_speed = 0.066;
  3592  015B40  0E02               	movlw	2
  3593  015B42  6E3A               	movwf	(btemp+8)^0,c
  3594  015B44  0E2B               	movlw	43
  3595  015B46  6E3B               	movwf	(btemp+9)^0,c
  3596  015B48  0E87               	movlw	135
  3597  015B4A  6E3C               	movwf	(btemp+10)^0,c
  3598  015B4C  0E3D               	movlw	61
  3599  015B4E  D007               	goto	L2
  3600  015B50                     l8611:
  3601                           
  3602                           ;mbmc.c: 35:   lp_speed = 0.125;
  3603  015B50  0E00               	movlw	0
  3604  015B52  6E3A               	movwf	(btemp+8)^0,c
  3605  015B54  0E00               	movlw	0
  3606  015B56  6E3B               	movwf	(btemp+9)^0,c
  3607  015B58  0E00               	movlw	0
  3608  015B5A  6E3C               	movwf	(btemp+10)^0,c
  3609  015B5C  0E3E               	movlw	62
  3610  015B5E                     L2:
  3611  015B5E  6E3D               	movwf	(btemp+11)^0,c
  3612                           
  3613                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3614  015B60  0EFC               	movlw	-4
  3615  015B62  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  3616  015B68  0EFD               	movlw	-3
  3617  015B6A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  3618  015B70  0EFE               	movlw	-2
  3619  015B72  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  3620  015B78  0EFF               	movlw	-1
  3621  015B7A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3622                           
  3623                           ;mbmc.c: 38:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3624                           ;stkvar	_bn @ sp[(-4)+-5]
  3625  015B80  0EF7               	movlw	-9
  3626  015B82  50E3               	movf	plusw1,w,c
  3627  015B84  0D04               	mullw	4
  3628  015B86  0E6C               	movlw	low lp_filter@smooth
  3629  015B88  24F3               	addwf	243,w,c
  3630  015B8A  6ED9               	movwf	fsr2l,c
  3631  015B8C  0E02               	movlw	high lp_filter@smooth
  3632  015B8E  20F4               	addwfc	prodh,w,c
  3633  015B90  6EDA               	movwf	fsr2h,c
  3634  015B92  006F FF7B FFE6     	movff	postinc2,postinc1
  3635  015B98  006F FF7B FFE6     	movff	postinc2,postinc1
  3636  015B9E  006F FF7B FFE6     	movff	postinc2,postinc1
  3637  015BA4  006F FF7B FFE6     	movff	postinc2,postinc1
  3638                           
  3639                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3640  015BAA  0EF8               	movlw	-8
  3641  015BAC  006F FF8F FFE6     	movff	plusw1,postinc1
  3642  015BB2  006F FF8F FFE6     	movff	plusw1,postinc1
  3643  015BB8  006F FF8F FFE6     	movff	plusw1,postinc1
  3644  015BBE  006F FF8F FFE6     	movff	plusw1,postinc1
  3645                           
  3646                           ;stkvar	_bn @ sp[(-12)+-5]
  3647  015BC4  0EEF               	movlw	-17
  3648  015BC6  50E3               	movf	plusw1,w,c
  3649  015BC8  0D04               	mullw	4
  3650  015BCA  0E6C               	movlw	low lp_filter@smooth
  3651  015BCC  24F3               	addwf	243,w,c
  3652  015BCE  6ED9               	movwf	fsr2l,c
  3653  015BD0  0E02               	movlw	high lp_filter@smooth
  3654  015BD2  20F4               	addwfc	prodh,w,c
  3655  015BD4  6EDA               	movwf	fsr2h,c
  3656  015BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  3657  015BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  3658  015BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  3659  015BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  3660                           
  3661                           ;stkvar	_new @ sp[(-16)+-4]
  3662  015BEE  0EEC               	movlw	-20
  3663  015BF0  006F FF8F FFE6     	movff	plusw1,postinc1
  3664  015BF6  006F FF8F FFE6     	movff	plusw1,postinc1
  3665  015BFC  006F FF8F FFE6     	movff	plusw1,postinc1
  3666  015C02  006F FF8F FFE6     	movff	plusw1,postinc1
  3667  015C08  EC68  F0BD         	call	___flsub	;wreg free
  3668  015C0C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3669  015C12  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3670  015C18  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3671  015C1E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3672  015C24  ECC1  F08E         	call	___flmul	;wreg free
  3673  015C28  0060  F0CB  FFE6   	movff	btemp,postinc1
  3674  015C2E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3675  015C34  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3676  015C3A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3677  015C40  ECD6  F092         	call	___fladd	;wreg free
  3678                           
  3679                           ;stkvar	_bn @ sp[(-4)+-5]
  3680  015C44  0EF7               	movlw	-9
  3681  015C46  50E3               	movf	plusw1,w,c
  3682  015C48  0D04               	mullw	4
  3683  015C4A  0E6C               	movlw	low lp_filter@smooth
  3684  015C4C  24F3               	addwf	243,w,c
  3685  015C4E  6ED9               	movwf	fsr2l,c
  3686  015C50  0E02               	movlw	high lp_filter@smooth
  3687  015C52  20F4               	addwfc	prodh,w,c
  3688  015C54  6EDA               	movwf	fsr2h,c
  3689  015C56  0060  F0CB  FFDE   	movff	btemp,postinc2
  3690  015C5C  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3691  015C62  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3692  015C68  0060  F0D7  FFDD   	movff	btemp+3,postdec2
  3693  015C6E  52DD               	movf	postdec2,f,c
  3694  015C70  52DD               	movf	postdec2,f,c
  3695  015C72  006F FF78  F032    	movff	postinc2,btemp
  3696  015C78  006F FF78  F033    	movff	postinc2,btemp+1
  3697  015C7E  006F FF78  F034    	movff	postinc2,btemp+2
  3698  015C84  006F FF78  F035    	movff	postinc2,btemp+3
  3699  015C8A                     l1707:
  3700                           
  3701                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3702  015C8A  0EF6               	movlw	246
  3703  015C8C  26E1               	addwf	fsr1l,f,c
  3704  015C8E  0EFF               	movlw	255
  3705  015C90  22E2               	addwfc	fsr1h,f,c
  3706  015C92  0012               	return		;funcret
  3707  015C94                     __end_of_lp_filter:
  3708                           	opt callstack 0
  3709                           
  3710 ;; *************** function _conv_raw_result *****************
  3711 ;; Defined at:
  3712 ;;		line 80 in file "daq.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  chan            1  [STACK] const enum E16136
  3715 ;;  to_what         1  [STACK] const enum E16198
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  4  [STACK] float 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/39
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    8
  3734 ;; This function calls:
  3735 ;;		___fldiv
  3736 ;;		___flmul
  3737 ;;		___flsub
  3738 ;;		___xxtofl
  3739 ;;		_get_raw_result
  3740 ;;		_nanf
  3741 ;; This function is called by:
  3742 ;;		_convert_adc_data
  3743 ;; This function uses a reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text15
  3747  012D68                     __ptext15:
  3748                           	opt callstack 0
  3749  012D68                     _conv_raw_result:
  3750                           	opt callstack 21
  3751                           
  3752                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3753                           ;stkvar	_chan @ sp[(0)+-1]
  3754                           
  3755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3756                           ;incstack = 0
  3757  012D68  0EFF               	movlw	-1
  3758  012D6A  006F FF8C  F03D    	movff	plusw1,btemp+11
  3759  012D70  0E77               	movlw	119
  3760  012D72  6E3A               	movwf	(btemp+8)^0,c
  3761  012D74  0E3C               	movlw	60
  3762  012D76  6E3B               	movwf	(btemp+9)^0,c
  3763  012D78  2A3D               	incf	(btemp+11)^0,f,c
  3764  012D7A  D003               	goto	u8044
  3765  012D7C                     u8045:
  3766  012D7C  343B               	rlcf	(btemp+9)^0,w,c
  3767  012D7E  323B               	rrcf	(btemp+9)^0,f,c
  3768  012D80  323A               	rrcf	(btemp+8)^0,f,c
  3769  012D82                     u8044:
  3770  012D82  2E3D               	decfsz	(btemp+11)^0,f,c
  3771  012D84  D7FB               	goto	u8045
  3772  012D86  B03A               	btfsc	(btemp+8)^0,0,c
  3773  012D88  D29F               	goto	l8583
  3774                           
  3775                           ;daq.c: 83:   return nanf("");
  3776  012D8A  0E19               	movlw	low (STR_27+18)
  3777  012D8C  6EE6               	movwf	postinc1,c
  3778  012D8E  0EFF               	movlw	high (STR_27+18)
  3779  012D90  6EE6               	movwf	postinc1,c
  3780  012D92  ECD9  F0BB         	call	_nanf	;wreg free
  3781  012D96  D2A8               	goto	l1654
  3782  012D98                     l8535:
  3783                           
  3784                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3785                           ;stkvar	_chan @ sp[(0)+-1]
  3786  012D98  0EFF               	movlw	-1
  3787  012D9A  006F FF8C  F03D    	movff	plusw1,btemp+11
  3788  012DA0  0E03               	movlw	3
  3789  012DA2  6E3A               	movwf	(btemp+8)^0,c
  3790  012DA4  0E00               	movlw	0
  3791  012DA6  6E3B               	movwf	(btemp+9)^0,c
  3792  012DA8  2A3D               	incf	(btemp+11)^0,f,c
  3793  012DAA  D003               	goto	u8064
  3794  012DAC                     u8065:
  3795  012DAC  343B               	rlcf	(btemp+9)^0,w,c
  3796  012DAE  323B               	rrcf	(btemp+9)^0,f,c
  3797  012DB0  323A               	rrcf	(btemp+8)^0,f,c
  3798  012DB2                     u8064:
  3799  012DB2  2E3D               	decfsz	(btemp+11)^0,f,c
  3800  012DB4  D7FB               	goto	u8065
  3801  012DB6  A03A               	btfss	(btemp+8)^0,0,c
  3802  012DB8  D117               	goto	l8549
  3803                           
  3804                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3805                           ;stkvar	_chan @ sp[(0)+-1]
  3806  012DBA  0EFF               	movlw	-1
  3807  012DBC  006F FF8C  F03D    	movff	plusw1,btemp+11
  3808  012DC2  0E01               	movlw	1
  3809  012DC4  6E3A               	movwf	(btemp+8)^0,c
  3810  012DC6  0E00               	movlw	0
  3811  012DC8  6E3B               	movwf	(btemp+9)^0,c
  3812  012DCA  2A3D               	incf	(btemp+11)^0,f,c
  3813  012DCC  D003               	goto	u8084
  3814  012DCE                     u8085:
  3815  012DCE  343B               	rlcf	(btemp+9)^0,w,c
  3816  012DD0  323B               	rrcf	(btemp+9)^0,f,c
  3817  012DD2  323A               	rrcf	(btemp+8)^0,f,c
  3818  012DD4                     u8084:
  3819  012DD4  2E3D               	decfsz	(btemp+11)^0,f,c
  3820  012DD6  D7FB               	goto	u8085
  3821  012DD8  A03A               	btfss	(btemp+8)^0,0,c
  3822  012DDA  D083               	goto	l8545
  3823                           
  3824                           ;daq.c: 89:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 143.85/
      +                          1000.0;
  3825  012DDC  0E00               	movlw	0
  3826  012DDE  6EE6               	movwf	postinc1,c
  3827  012DE0  0E00               	movlw	0
  3828  012DE2  6EE6               	movwf	postinc1,c
  3829  012DE4  0E7A               	movlw	122
  3830  012DE6  6EE6               	movwf	postinc1,c
  3831  012DE8  0E44               	movlw	68
  3832  012DEA  6EE6               	movwf	postinc1,c
  3833  012DEC  0E9A               	movlw	154
  3834  012DEE  6EE6               	movwf	postinc1,c
  3835  012DF0  0ED9               	movlw	217
  3836  012DF2  6EE6               	movwf	postinc1,c
  3837  012DF4  0E0F               	movlw	15
  3838  012DF6  6EE6               	movwf	postinc1,c
  3839  012DF8  0E43               	movlw	67
  3840  012DFA  6EE6               	movwf	postinc1,c
  3841  012DFC  0060  F318  F03A   	movff	_R+32,btemp+8	;volatile
  3842  012E02  0060  F31C  F03B   	movff	_R+33,btemp+9	;volatile
  3843  012E08  0E00               	movlw	0
  3844  012E0A  BE3B               	btfsc	(btemp+9)^0,7,c
  3845  012E0C  0EFF               	movlw	255
  3846  012E0E  6E3C               	movwf	(btemp+10)^0,c
  3847  012E10  6E3D               	movwf	(btemp+11)^0,c
  3848  012E12  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3849  012E18  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3850  012E1E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3851  012E24  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3852  012E2A  0E01               	movlw	1
  3853  012E2C  6EE6               	movwf	postinc1,c
  3854  012E2E  EC84  F0AB         	call	___xxtofl	;wreg free
  3855  012E32  0060  F0CB  FFE6   	movff	btemp,postinc1
  3856  012E38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3857  012E3E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3858  012E44  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3859                           
  3860                           ;stkvar	_chan @ sp[(-12)+-1]
  3861  012E4A  0EF3               	movlw	-13
  3862  012E4C  50E3               	movf	plusw1,w,c
  3863  012E4E  6EE6               	movwf	postinc1,c
  3864  012E50  EC08  F0C2         	call	_get_raw_result	;wreg free
  3865  012E54  0060  F0C8  F03C   	movff	btemp,btemp+10
  3866  012E5A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3867  012E60  503C               	movf	(btemp+10)^0,w,c
  3868  012E62  6E36               	movwf	(btemp+4)^0,c
  3869  012E64  503D               	movf	(btemp+11)^0,w,c
  3870  012E66  6E37               	movwf	(btemp+5)^0,c
  3871  012E68  6A38               	clrf	(btemp+6)^0,c
  3872  012E6A  6A39               	clrf	(btemp+7)^0,c
  3873  012E6C  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3874  012E72  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3875  012E78  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3876  012E7E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3877  012E84  0E00               	movlw	0
  3878  012E86  6EE6               	movwf	postinc1,c
  3879  012E88  EC84  F0AB         	call	___xxtofl	;wreg free
  3880  012E8C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3881  012E92  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3882  012E98  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3883  012E9E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3884  012EA4  EC68  F0BD         	call	___flsub	;wreg free
  3885  012EA8  0060  F0CB  FFE6   	movff	btemp,postinc1
  3886  012EAE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3887  012EB4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3888  012EBA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3889  012EC0  ECC1  F08E         	call	___flmul	;wreg free
  3890  012EC4  0060  F0CB  FFE6   	movff	btemp,postinc1
  3891  012ECA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3892  012ED0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3893  012ED6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3894  012EDC  EC77  F099         	call	___fldiv	;wreg free
  3895  012EE0  D203               	goto	l1654
  3896  012EE2                     l8545:
  3897                           
  3898                           ;daq.c: 91:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 60.1/10
      +                          00.0;
  3899  012EE2  0E00               	movlw	0
  3900  012EE4  6EE6               	movwf	postinc1,c
  3901  012EE6  0E00               	movlw	0
  3902  012EE8  6EE6               	movwf	postinc1,c
  3903  012EEA  0E7A               	movlw	122
  3904  012EEC  6EE6               	movwf	postinc1,c
  3905  012EEE  0E44               	movlw	68
  3906  012EF0  6EE6               	movwf	postinc1,c
  3907  012EF2  0E66               	movlw	102
  3908  012EF4  6EE6               	movwf	postinc1,c
  3909  012EF6  0E66               	movlw	102
  3910  012EF8  6EE6               	movwf	postinc1,c
  3911  012EFA  0E70               	movlw	112
  3912  012EFC  6EE6               	movwf	postinc1,c
  3913  012EFE  0E42               	movlw	66
  3914  012F00  6EE6               	movwf	postinc1,c
  3915  012F02  0060  F320  F03A   	movff	_R+34,btemp+8	;volatile
  3916  012F08  0060  F324  F03B   	movff	_R+35,btemp+9	;volatile
  3917  012F0E  0E00               	movlw	0
  3918  012F10  BE3B               	btfsc	(btemp+9)^0,7,c
  3919  012F12  0EFF               	movlw	255
  3920  012F14  6E3C               	movwf	(btemp+10)^0,c
  3921  012F16  6E3D               	movwf	(btemp+11)^0,c
  3922  012F18  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3923  012F1E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3924  012F24  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3925  012F2A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3926  012F30  0E01               	movlw	1
  3927  012F32  6EE6               	movwf	postinc1,c
  3928  012F34  EC84  F0AB         	call	___xxtofl	;wreg free
  3929  012F38  0060  F0CB  FFE6   	movff	btemp,postinc1
  3930  012F3E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3931  012F44  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3932  012F4A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3933                           
  3934                           ;stkvar	_chan @ sp[(-12)+-1]
  3935  012F50  0EF3               	movlw	-13
  3936  012F52  50E3               	movf	plusw1,w,c
  3937  012F54  6EE6               	movwf	postinc1,c
  3938  012F56  EC08  F0C2         	call	_get_raw_result	;wreg free
  3939  012F5A  0060  F0C8  F03C   	movff	btemp,btemp+10
  3940  012F60  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3941  012F66  503C               	movf	(btemp+10)^0,w,c
  3942  012F68  6E36               	movwf	(btemp+4)^0,c
  3943  012F6A  503D               	movf	(btemp+11)^0,w,c
  3944  012F6C  6E37               	movwf	(btemp+5)^0,c
  3945  012F6E  6A38               	clrf	(btemp+6)^0,c
  3946  012F70  6A39               	clrf	(btemp+7)^0,c
  3947  012F72  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3948  012F78  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3949  012F7E  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3950  012F84  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3951  012F8A  0E00               	movlw	0
  3952  012F8C  6EE6               	movwf	postinc1,c
  3953  012F8E  EC84  F0AB         	call	___xxtofl	;wreg free
  3954  012F92  0060  F0CB  FFE6   	movff	btemp,postinc1
  3955  012F98  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3956  012F9E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3957  012FA4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3958  012FAA  EC68  F0BD         	call	___flsub	;wreg free
  3959  012FAE  0060  F0CB  FFE6   	movff	btemp,postinc1
  3960  012FB4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3961  012FBA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3962  012FC0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3963  012FC6  ECC1  F08E         	call	___flmul	;wreg free
  3964  012FCA  0060  F0CB  FFE6   	movff	btemp,postinc1
  3965  012FD0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3966  012FD6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3967  012FDC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3968  012FE2  EC77  F099         	call	___fldiv	;wreg free
  3969  012FE6  D180               	goto	l1654
  3970  012FE8                     l8549:
  3971                           
  3972                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3973                           ;stkvar	_chan @ sp[(0)+-1]
  3974  012FE8  0EFF               	movlw	-1
  3975  012FEA  006F FF8C  F03D    	movff	plusw1,btemp+11
  3976  012FF0  0E00               	movlw	0
  3977  012FF2  6E3A               	movwf	(btemp+8)^0,c
  3978  012FF4  0E08               	movlw	8
  3979  012FF6  6E3B               	movwf	(btemp+9)^0,c
  3980  012FF8  2A3D               	incf	(btemp+11)^0,f,c
  3981  012FFA  D003               	goto	u8104
  3982  012FFC                     u8105:
  3983  012FFC  343B               	rlcf	(btemp+9)^0,w,c
  3984  012FFE  323B               	rrcf	(btemp+9)^0,f,c
  3985  013000  323A               	rrcf	(btemp+8)^0,f,c
  3986  013002                     u8104:
  3987  013002  2E3D               	decfsz	(btemp+11)^0,f,c
  3988  013004  D7FB               	goto	u8105
  3989  013006  A03A               	btfss	(btemp+8)^0,0,c
  3990  013008  D008               	goto	l8557
  3991                           
  3992                           ;daq.c: 95:     return 25.0;
  3993  01300A  0E00               	movlw	0
  3994  01300C  6E32               	movwf	btemp^0,c
  3995  01300E  0E00               	movlw	0
  3996  013010  6E33               	movwf	(btemp+1)^0,c
  3997  013012  0EC8               	movlw	200
  3998  013014  6E34               	movwf	(btemp+2)^0,c
  3999  013016  0E41               	movlw	65
  4000  013018  D155               	goto	L3
  4001  01301A                     l8557:
  4002                           
  4003                           ;daq.c: 97:     return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4004  01301A  0E00               	movlw	0
  4005  01301C  6EE6               	movwf	postinc1,c
  4006  01301E  0E00               	movlw	0
  4007  013020  6EE6               	movwf	postinc1,c
  4008  013022  0E7A               	movlw	122
  4009  013024  6EE6               	movwf	postinc1,c
  4010  013026  0E44               	movlw	68
  4011  013028  6EE6               	movwf	postinc1,c
  4012  01302A  0E00               	movlw	0
  4013  01302C  6EE6               	movwf	postinc1,c
  4014  01302E  0E00               	movlw	0
  4015  013030  6EE6               	movwf	postinc1,c
  4016  013032  0E00               	movlw	0
  4017  013034  6EE6               	movwf	postinc1,c
  4018  013036  0E40               	movlw	64
  4019  013038  6EE6               	movwf	postinc1,c
  4020  01303A  0E61               	movlw	97
  4021  01303C  6EE6               	movwf	postinc1,c
  4022  01303E  0E03               	movlw	3
  4023  013040  6EE6               	movwf	postinc1,c
  4024  013042  0E04               	movlw	4
  4025  013044  6EE6               	movwf	postinc1,c
  4026  013046  0E41               	movlw	65
  4027  013048  6EE6               	movwf	postinc1,c
  4028                           
  4029                           ;stkvar	_chan @ sp[(-12)+-1]
  4030  01304A  0EF3               	movlw	-13
  4031  01304C  50E3               	movf	plusw1,w,c
  4032  01304E  6EE6               	movwf	postinc1,c
  4033  013050  EC08  F0C2         	call	_get_raw_result	;wreg free
  4034  013054  0060  F0C8  F03C   	movff	btemp,btemp+10
  4035  01305A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4036  013060  503C               	movf	(btemp+10)^0,w,c
  4037  013062  6E36               	movwf	(btemp+4)^0,c
  4038  013064  503D               	movf	(btemp+11)^0,w,c
  4039  013066  6E37               	movwf	(btemp+5)^0,c
  4040  013068  6A38               	clrf	(btemp+6)^0,c
  4041  01306A  6A39               	clrf	(btemp+7)^0,c
  4042  01306C  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4043  013072  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4044  013078  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4045  01307E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4046  013084  0E00               	movlw	0
  4047  013086  6EE6               	movwf	postinc1,c
  4048  013088  EC84  F0AB         	call	___xxtofl	;wreg free
  4049  01308C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4050  013092  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4051  013098  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4052  01309E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4053  0130A4  ECC1  F08E         	call	___flmul	;wreg free
  4054  0130A8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4055  0130AE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4056  0130B4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4057  0130BA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4058  0130C0  EC77  F099         	call	___fldiv	;wreg free
  4059  0130C4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4060  0130CA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4061  0130D0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4062  0130D6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4063  0130DC  EC77  F099         	call	___fldiv	;wreg free
  4064  0130E0  D103               	goto	l1654
  4065  0130E2                     l8561:
  4066                           
  4067                           ;daq.c: 102:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4068                           ;stkvar	_chan @ sp[(0)+-1]
  4069  0130E2  0EFF               	movlw	-1
  4070  0130E4  006F FF8C  F03D    	movff	plusw1,btemp+11
  4071  0130EA  0E03               	movlw	3
  4072  0130EC  6E3A               	movwf	(btemp+8)^0,c
  4073  0130EE  0E00               	movlw	0
  4074  0130F0  6E3B               	movwf	(btemp+9)^0,c
  4075  0130F2  2A3D               	incf	(btemp+11)^0,f,c
  4076  0130F4  D003               	goto	u8124
  4077  0130F6                     u8125:
  4078  0130F6  343B               	rlcf	(btemp+9)^0,w,c
  4079  0130F8  323B               	rrcf	(btemp+9)^0,f,c
  4080  0130FA  323A               	rrcf	(btemp+8)^0,f,c
  4081  0130FC                     u8124:
  4082  0130FC  2E3D               	decfsz	(btemp+11)^0,f,c
  4083  0130FE  D7FB               	goto	u8125
  4084  013100  B03A               	btfsc	(btemp+8)^0,0,c
  4085  013102  D011               	goto	u8150
  4086                           
  4087                           ;stkvar	_chan @ sp[(0)+-1]
  4088  013104  0EFF               	movlw	-1
  4089  013106  006F FF8C  F03D    	movff	plusw1,btemp+11
  4090  01310C  0E00               	movlw	0
  4091  01310E  6E3A               	movwf	(btemp+8)^0,c
  4092  013110  0E08               	movlw	8
  4093  013112  6E3B               	movwf	(btemp+9)^0,c
  4094  013114  2A3D               	incf	(btemp+11)^0,f,c
  4095  013116  D003               	goto	u8144
  4096  013118                     u8145:
  4097  013118  343B               	rlcf	(btemp+9)^0,w,c
  4098  01311A  323B               	rrcf	(btemp+9)^0,f,c
  4099  01311C  323A               	rrcf	(btemp+8)^0,f,c
  4100  01311E                     u8144:
  4101  01311E  2E3D               	decfsz	(btemp+11)^0,f,c
  4102  013120  D7FB               	goto	u8145
  4103  013122  A03A               	btfss	(btemp+8)^0,0,c
  4104  013124  D064               	goto	l8569
  4105  013126                     u8150:
  4106                           
  4107                           ;daq.c: 103:    return((float) get_raw_result(chan) * 1.25/2.0) / 1000.0;
  4108  013126  0E00               	movlw	0
  4109  013128  6EE6               	movwf	postinc1,c
  4110  01312A  0E00               	movlw	0
  4111  01312C  6EE6               	movwf	postinc1,c
  4112  01312E  0E7A               	movlw	122
  4113  013130  6EE6               	movwf	postinc1,c
  4114  013132  0E44               	movlw	68
  4115  013134  6EE6               	movwf	postinc1,c
  4116  013136  0E00               	movlw	0
  4117  013138  6EE6               	movwf	postinc1,c
  4118  01313A  0E00               	movlw	0
  4119  01313C  6EE6               	movwf	postinc1,c
  4120  01313E  0E00               	movlw	0
  4121  013140  6EE6               	movwf	postinc1,c
  4122  013142  0E40               	movlw	64
  4123  013144  6EE6               	movwf	postinc1,c
  4124  013146  0E00               	movlw	0
  4125  013148  6EE6               	movwf	postinc1,c
  4126  01314A  0E00               	movlw	0
  4127  01314C  6EE6               	movwf	postinc1,c
  4128  01314E  0EA0               	movlw	160
  4129  013150  6EE6               	movwf	postinc1,c
  4130  013152  0E3F               	movlw	63
  4131  013154  6EE6               	movwf	postinc1,c
  4132                           
  4133                           ;stkvar	_chan @ sp[(-12)+-1]
  4134  013156  0EF3               	movlw	-13
  4135  013158  50E3               	movf	plusw1,w,c
  4136  01315A  6EE6               	movwf	postinc1,c
  4137  01315C  EC08  F0C2         	call	_get_raw_result	;wreg free
  4138  013160  0060  F0C8  F03C   	movff	btemp,btemp+10
  4139  013166  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4140  01316C  503C               	movf	(btemp+10)^0,w,c
  4141  01316E  6E36               	movwf	(btemp+4)^0,c
  4142  013170  503D               	movf	(btemp+11)^0,w,c
  4143  013172  6E37               	movwf	(btemp+5)^0,c
  4144  013174  6A38               	clrf	(btemp+6)^0,c
  4145  013176  6A39               	clrf	(btemp+7)^0,c
  4146  013178  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4147  01317E  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4148  013184  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4149  01318A  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4150  013190  0E00               	movlw	0
  4151  013192  6EE6               	movwf	postinc1,c
  4152  013194  EC84  F0AB         	call	___xxtofl	;wreg free
  4153  013198  0060  F0CB  FFE6   	movff	btemp,postinc1
  4154  01319E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4155  0131A4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4156  0131AA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4157  0131B0  ECC1  F08E         	call	___flmul	;wreg free
  4158  0131B4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4159  0131BA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4160  0131C0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4161  0131C6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4162  0131CC  EC77  F099         	call	___fldiv	;wreg free
  4163  0131D0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4164  0131D6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4165  0131DC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4166  0131E2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4167  0131E8  EC77  F099         	call	___fldiv	;wreg free
  4168  0131EC  D07D               	goto	l1654
  4169  0131EE                     l8569:
  4170                           
  4171                           ;daq.c: 105:   return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4172  0131EE  0E00               	movlw	0
  4173  0131F0  6EE6               	movwf	postinc1,c
  4174  0131F2  0E00               	movlw	0
  4175  0131F4  6EE6               	movwf	postinc1,c
  4176  0131F6  0E7A               	movlw	122
  4177  0131F8  6EE6               	movwf	postinc1,c
  4178  0131FA  0E44               	movlw	68
  4179  0131FC  6EE6               	movwf	postinc1,c
  4180  0131FE  0E00               	movlw	0
  4181  013200  6EE6               	movwf	postinc1,c
  4182  013202  0E00               	movlw	0
  4183  013204  6EE6               	movwf	postinc1,c
  4184  013206  0E00               	movlw	0
  4185  013208  6EE6               	movwf	postinc1,c
  4186  01320A  0E40               	movlw	64
  4187  01320C  6EE6               	movwf	postinc1,c
  4188  01320E  0E61               	movlw	97
  4189  013210  6EE6               	movwf	postinc1,c
  4190  013212  0E03               	movlw	3
  4191  013214  6EE6               	movwf	postinc1,c
  4192  013216  0E04               	movlw	4
  4193  013218  6EE6               	movwf	postinc1,c
  4194  01321A  0E41               	movlw	65
  4195  01321C  6EE6               	movwf	postinc1,c
  4196                           
  4197                           ;stkvar	_chan @ sp[(-12)+-1]
  4198  01321E  0EF3               	movlw	-13
  4199  013220  50E3               	movf	plusw1,w,c
  4200  013222  6EE6               	movwf	postinc1,c
  4201  013224  EC08  F0C2         	call	_get_raw_result	;wreg free
  4202  013228  0060  F0C8  F03C   	movff	btemp,btemp+10
  4203  01322E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4204  013234  503C               	movf	(btemp+10)^0,w,c
  4205  013236  6E36               	movwf	(btemp+4)^0,c
  4206  013238  503D               	movf	(btemp+11)^0,w,c
  4207  01323A  6E37               	movwf	(btemp+5)^0,c
  4208  01323C  6A38               	clrf	(btemp+6)^0,c
  4209  01323E  6A39               	clrf	(btemp+7)^0,c
  4210  013240  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4211  013246  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4212  01324C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4213  013252  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4214  013258  0E00               	movlw	0
  4215  01325A  6EE6               	movwf	postinc1,c
  4216  01325C  EC84  F0AB         	call	___xxtofl	;wreg free
  4217  013260  0060  F0CB  FFE6   	movff	btemp,postinc1
  4218  013266  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4219  01326C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4220  013272  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4221  013278  ECC1  F08E         	call	___flmul	;wreg free
  4222  01327C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4223  013282  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4224  013288  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4225  01328E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4226  013294  EC77  F099         	call	___fldiv	;wreg free
  4227  013298  0060  F0CB  FFE6   	movff	btemp,postinc1
  4228  01329E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4229  0132A4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4230  0132AA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4231  0132B0  EC77  F099         	call	___fldiv	;wreg free
  4232  0132B4  D019               	goto	l1654
  4233  0132B6                     l8575:
  4234                           
  4235                           ;daq.c: 108:   return 0.0;
  4236  0132B6  0E00               	movlw	0
  4237  0132B8  6E32               	movwf	btemp^0,c
  4238  0132BA  0E00               	movlw	0
  4239  0132BC  6E33               	movwf	(btemp+1)^0,c
  4240  0132BE  0E00               	movlw	0
  4241  0132C0  6E34               	movwf	(btemp+2)^0,c
  4242  0132C2  0E00               	movlw	0
  4243  0132C4                     L3:
  4244  0132C4  6E35               	movwf	(btemp+3)^0,c
  4245  0132C6  D010               	goto	l1654
  4246  0132C8                     l8583:
  4247                           
  4248                           ;stkvar	_to_what @ sp[(0)+-2]
  4249  0132C8  0EFE               	movlw	-2
  4250  0132CA  50E3               	movf	plusw1,w,c
  4251  0132CC  6E3C               	movwf	(btemp+10)^0,c
  4252  0132CE  6A3D               	clrf	(btemp+11)^0,c
  4253                           
  4254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4255                           ; Switch size 1, requested type "simple"
  4256                           ; Number of cases is 1, Range of values is 0 to 0
  4257                           ; switch strategies available:
  4258                           ; Name         Instructions Cycles
  4259                           ; simple_byte            4     3 (average)
  4260                           ;	Chosen strategy is simple_byte
  4261  0132D0  503D               	movf	(btemp+11)^0,w,c
  4262  0132D2  0A00               	xorlw	0	; case 0
  4263  0132D4  A4D8               	btfss	status,2,c
  4264  0132D6  D7EF               	goto	l8575
  4265                           
  4266                           ; Switch size 1, requested type "simple"
  4267                           ; Number of cases is 2, Range of values is 0 to 1
  4268                           ; switch strategies available:
  4269                           ; Name         Instructions Cycles
  4270                           ; simple_byte            7     4 (average)
  4271                           ;	Chosen strategy is simple_byte
  4272  0132D8  503C               	movf	(btemp+10)^0,w,c
  4273  0132DA  0A00               	xorlw	0	; case 0
  4274  0132DC  B4D8               	btfsc	status,2,c
  4275  0132DE  D55C               	goto	l8535
  4276  0132E0  0A01               	xorlw	1	; case 1
  4277  0132E2  B4D8               	btfsc	status,2,c
  4278  0132E4  D6FE               	goto	l8561
  4279  0132E6  D7E7               	goto	l8575
  4280  0132E8                     l1654:
  4281                           
  4282                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4283  0132E8  52E5               	movf	postdec1,f,c
  4284  0132EA  52E5               	movf	postdec1,f,c
  4285  0132EC  0012               	return		;funcret
  4286  0132EE                     __end_of_conv_raw_result:
  4287                           	opt callstack 0
  4288                           
  4289 ;; *************** function _nanf *****************
  4290 ;; Defined at:
  4291 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  s               2  [STACK] PTR const unsigned char 
  4294 ;;		 -> STR_33(1), 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  u               4  [STACK] struct .
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  4  [STACK] float 
  4299 ;; Registers used:
  4300 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/39
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    6
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_conv_raw_result
  4317 ;; This function uses a reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text16
  4321  0177B2                     __ptext16:
  4322                           	opt callstack 0
  4323  0177B2                     _nanf:
  4324                           	opt callstack 0
  4325                           
  4326                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4327  0177B2  52E6               	movf	postinc1,f,c
  4328  0177B4  52E6               	movf	postinc1,f,c
  4329  0177B6  52E6               	movf	postinc1,f,c
  4330  0177B8  52E6               	movf	postinc1,f,c
  4331                           
  4332                           ;incstack = 0
  4333  0177BA  0EFF               	movlw	255
  4334  0177BC  6E3A               	movwf	(btemp+8)^0,c
  4335  0177BE  0EFF               	movlw	255
  4336  0177C0  6E3B               	movwf	(btemp+9)^0,c
  4337  0177C2  0EFF               	movlw	255
  4338  0177C4  6E3C               	movwf	(btemp+10)^0,c
  4339  0177C6  0E7F               	movlw	127
  4340  0177C8  6E3D               	movwf	(btemp+11)^0,c
  4341                           
  4342                           ;stkvar	_u @ sp[(-4)+0]
  4343  0177CA  0EFC               	movlw	-4
  4344  0177CC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4345  0177D2  0EFD               	movlw	-3
  4346  0177D4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4347  0177DA  0EFE               	movlw	-2
  4348  0177DC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4349  0177E2  0EFF               	movlw	-1
  4350  0177E4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4351                           
  4352                           ;stkvar	_u @ sp[(-4)+0]
  4353  0177EA  0EFC               	movlw	-4
  4354  0177EC  006F FF8C  F032    	movff	plusw1,btemp
  4355  0177F2  0EFD               	movlw	-3
  4356  0177F4  006F FF8C  F033    	movff	plusw1,btemp+1
  4357  0177FA  0EFE               	movlw	-2
  4358  0177FC  006F FF8C  F034    	movff	plusw1,btemp+2
  4359  017802  0EFF               	movlw	-1
  4360  017804  006F FF8C  F035    	movff	plusw1,btemp+3
  4361                           
  4362                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4363  01780A  0EFA               	movlw	250
  4364  01780C  26E1               	addwf	fsr1l,f,c
  4365  01780E  0EFF               	movlw	255
  4366  017810  22E2               	addwfc	fsr1h,f,c
  4367  017812  0012               	return		;funcret
  4368  017814                     __end_of_nanf:
  4369                           	opt callstack 0
  4370                           
  4371 ;; *************** function _get_raw_result *****************
  4372 ;; Defined at:
  4373 ;;		line 72 in file "daq.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  index           1  [STACK] const enum E16136
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  2  [STACK] unsigned short 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/39
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    6
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_main
  4398 ;;		_conv_raw_result
  4399 ;; This function uses a reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text17
  4403  018410                     __ptext17:
  4404                           	opt callstack 0
  4405  018410                     _get_raw_result:
  4406                           	opt callstack 24
  4407                           
  4408                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4409                           ;stkvar	_index @ sp[(0)+-1]
  4410                           
  4411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4412                           ;incstack = 0
  4413  018410  0EFF               	movlw	-1
  4414  018412  50E3               	movf	plusw1,w,c
  4415  018414  0D02               	mullw	2
  4416  018416  50F3               	movf	243,w,c
  4417  018418  0FA6               	addlw	low _R
  4418  01841A  6ED9               	movwf	fsr2l,c
  4419  01841C  6ADA               	clrf	fsr2h,c
  4420  01841E  006F FF78  F032    	movff	postinc2,btemp
  4421  018424  006F FF74  F033    	movff	postdec2,btemp+1
  4422                           
  4423                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4424  01842A  52E5               	movf	postdec1,f,c
  4425  01842C  0012               	return		;funcret
  4426  01842E                     __end_of_get_raw_result:
  4427                           	opt callstack 0
  4428                           
  4429 ;; *************** function ___xxtofl *****************
  4430 ;; Defined at:
  4431 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  sign            1  [STACK] unsigned char 
  4434 ;;  val             4  [STACK] long 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  arg             4  [STACK] unsigned long 
  4437 ;;  exp             1  [STACK] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  4  [STACK] unsigned char 
  4440 ;; Registers used:
  4441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/39
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4451 ;;Total ram usage:        0 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:    6
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_conv_raw_result
  4458 ;; This function uses a reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text18
  4462  015708                     __ptext18:
  4463                           	opt callstack 0
  4464  015708                     ___xxtofl:
  4465                           	opt callstack 0
  4466                           
  4467                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4468  015708  0E05               	movlw	5
  4469  01570A  26E1               	addwf	fsr1l,f,c
  4470  01570C  0E00               	movlw	0
  4471  01570E  22E2               	addwfc	fsr1h,f,c
  4472                           
  4473                           ;stkvar	_sign @ sp[(-5)+-1]
  4474                           
  4475                           ;incstack = 0
  4476  015710  0EFA               	movlw	-6
  4477  015712  50E3               	movf	plusw1,w,c
  4478  015714  B4D8               	btfsc	status,2,c
  4479  015716  D01D               	goto	l8009
  4480                           
  4481                           ;stkvar	_val @ sp[(-5)+-5]
  4482  015718  0EF9               	movlw	-7
  4483  01571A  AEE3               	btfss	plusw1,7,c
  4484  01571C  D01A               	goto	l8009
  4485                           
  4486                           ;stkvar	_val @ sp[(-5)+-5]
  4487  01571E  0EF6               	movlw	-10
  4488  015720  006F FF8C  F03A    	movff	plusw1,btemp+8
  4489  015726  0EF7               	movlw	-9
  4490  015728  006F FF8C  F03B    	movff	plusw1,btemp+9
  4491  01572E  0EF8               	movlw	-8
  4492  015730  006F FF8C  F03C    	movff	plusw1,btemp+10
  4493  015736  0EF9               	movlw	-7
  4494  015738  006F FF8C  F03D    	movff	plusw1,btemp+11
  4495  01573E  1E3A               	comf	(btemp+8)^0,f,c
  4496  015740  1E3B               	comf	(btemp+9)^0,f,c
  4497  015742  1E3C               	comf	(btemp+10)^0,f,c
  4498  015744  1E3D               	comf	(btemp+11)^0,f,c
  4499  015746  2A3A               	incf	(btemp+8)^0,f,c
  4500  015748  0E00               	movlw	0
  4501  01574A  223B               	addwfc	(btemp+9)^0,f,c
  4502  01574C  223C               	addwfc	(btemp+10)^0,f,c
  4503  01574E  223D               	addwfc	(btemp+11)^0,f,c
  4504  015750  D010               	goto	L4
  4505  015752                     l8009:
  4506                           
  4507                           ;stkvar	_val @ sp[(-5)+-5]
  4508  015752  0EF6               	movlw	-10
  4509  015754  006F FF8C  F03A    	movff	plusw1,btemp+8
  4510  01575A  0EF7               	movlw	-9
  4511  01575C  006F FF8C  F03B    	movff	plusw1,btemp+9
  4512  015762  0EF8               	movlw	-8
  4513  015764  006F FF8C  F03C    	movff	plusw1,btemp+10
  4514  01576A  0EF9               	movlw	-7
  4515  01576C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4516  015772                     L4:
  4517                           
  4518                           ;stkvar	_arg @ sp[(-5)+0]
  4519  015772  0EFB               	movlw	-5
  4520  015774  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4521  01577A  0EFC               	movlw	-4
  4522  01577C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4523  015782  0EFD               	movlw	-3
  4524  015784  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4525  01578A  0EFE               	movlw	-2
  4526  01578C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4527                           
  4528                           ;stkvar	_val @ sp[(-5)+-5]
  4529  015792  0EF6               	movlw	-10
  4530  015794  50E3               	movf	plusw1,w,c
  4531  015796  E113               	bnz	l8017
  4532  015798  0EF7               	movlw	-9
  4533  01579A  50E3               	movf	plusw1,w,c
  4534  01579C  E110               	bnz	l8017
  4535  01579E  0EF8               	movlw	-8
  4536  0157A0  50E3               	movf	plusw1,w,c
  4537  0157A2  E10D               	bnz	l8017
  4538  0157A4  0EF9               	movlw	-7
  4539  0157A6  50E3               	movf	plusw1,w,c
  4540  0157A8  A4D8               	btfss	status,2,c
  4541  0157AA  D009               	goto	l8017
  4542  0157AC  0E00               	movlw	0
  4543  0157AE  6E32               	movwf	btemp^0,c
  4544  0157B0  0E00               	movlw	0
  4545  0157B2  6E33               	movwf	(btemp+1)^0,c
  4546  0157B4  0E00               	movlw	0
  4547  0157B6  6E34               	movwf	(btemp+2)^0,c
  4548  0157B8  0E00               	movlw	0
  4549  0157BA  6E35               	movwf	(btemp+3)^0,c
  4550  0157BC  D0A2               	goto	l2698
  4551  0157BE                     l8017:
  4552  0157BE  0E96               	movlw	150
  4553  0157C0  6E3D               	movwf	(btemp+11)^0,c
  4554                           
  4555                           ;stkvar	_exp @ sp[(-5)+4]
  4556  0157C2  0EFF               	movlw	-1
  4557  0157C4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4558  0157CA  D00B               	goto	l8021
  4559  0157CC                     l8019:
  4560                           
  4561                           ;stkvar	_exp @ sp[(-5)+4]
  4562  0157CC  0EFF               	movlw	-1
  4563  0157CE  2AE3               	incf	plusw1,f,c
  4564                           
  4565                           ;stkvar	_arg @ sp[(-5)+0]
  4566  0157D0  90D8               	bcf	status,0,c
  4567  0157D2  0EFE               	movlw	-2
  4568  0157D4  32E3               	rrcf	plusw1,f,c
  4569  0157D6  0EFD               	movlw	-3
  4570  0157D8  32E3               	rrcf	plusw1,f,c
  4571  0157DA  0EFC               	movlw	-4
  4572  0157DC  32E3               	rrcf	plusw1,f,c
  4573  0157DE  0EFB               	movlw	-5
  4574  0157E0  32E3               	rrcf	plusw1,f,c
  4575  0157E2                     l8021:
  4576                           
  4577                           ;stkvar	_arg @ sp[(-5)+0]
  4578  0157E2  50E1               	movf	fsr1l,w,c
  4579  0157E4  0FFB               	addlw	-5
  4580  0157E6  6ED9               	movwf	fsr2l,c
  4581  0157E8  50E2               	movf	fsr1h,w,c
  4582  0157EA  6EDA               	movwf	fsr2h,c
  4583  0157EC  0EFF               	movlw	255
  4584  0157EE  22DA               	addwfc	fsr2h,f,c
  4585  0157F0  52DE               	movf	postinc2,f,c
  4586  0157F2  52DE               	movf	postinc2,f,c
  4587  0157F4  52DE               	movf	postinc2,f,c
  4588  0157F6  0EFE               	movlw	254
  4589  0157F8  14DD               	andwf	postdec2,w,c
  4590  0157FA  B4D8               	btfsc	status,2,c
  4591  0157FC  D018               	goto	l8029
  4592  0157FE  D7E6               	goto	l8019
  4593  015800                     l8023:
  4594                           
  4595                           ;stkvar	_exp @ sp[(-5)+4]
  4596  015800  0EFF               	movlw	-1
  4597  015802  2AE3               	incf	plusw1,f,c
  4598                           
  4599                           ;stkvar	_arg @ sp[(-5)+0]
  4600  015804  50E1               	movf	fsr1l,w,c
  4601  015806  0FFB               	addlw	-5
  4602  015808  6ED9               	movwf	fsr2l,c
  4603  01580A  50E2               	movf	fsr1h,w,c
  4604  01580C  6EDA               	movwf	fsr2h,c
  4605  01580E  0EFF               	movlw	255
  4606  015810  22DA               	addwfc	fsr2h,f,c
  4607  015812  2ADE               	incf	postinc2,f,c
  4608  015814  0E00               	movlw	0
  4609  015816  22DE               	addwfc	postinc2,f,c
  4610  015818  22DE               	addwfc	postinc2,f,c
  4611  01581A  22DE               	addwfc	postinc2,f,c
  4612                           
  4613                           ;stkvar	_arg @ sp[(-5)+0]
  4614  01581C  90D8               	bcf	status,0,c
  4615  01581E  0EFE               	movlw	-2
  4616  015820  32E3               	rrcf	plusw1,f,c
  4617  015822  0EFD               	movlw	-3
  4618  015824  32E3               	rrcf	plusw1,f,c
  4619  015826  0EFC               	movlw	-4
  4620  015828  32E3               	rrcf	plusw1,f,c
  4621  01582A  0EFB               	movlw	-5
  4622  01582C  32E3               	rrcf	plusw1,f,c
  4623  01582E                     l8029:
  4624                           
  4625                           ;stkvar	_arg @ sp[(-5)+0]
  4626  01582E  50E1               	movf	fsr1l,w,c
  4627  015830  0FFB               	addlw	-5
  4628  015832  6ED9               	movwf	fsr2l,c
  4629  015834  50E2               	movf	fsr1h,w,c
  4630  015836  6EDA               	movwf	fsr2h,c
  4631  015838  0EFF               	movlw	255
  4632  01583A  22DA               	addwfc	fsr2h,f,c
  4633  01583C  52DE               	movf	postinc2,f,c
  4634  01583E  52DE               	movf	postinc2,f,c
  4635  015840  52DE               	movf	postinc2,f,c
  4636  015842  0EFF               	movlw	255
  4637  015844  14DD               	andwf	postdec2,w,c
  4638  015846  B4D8               	btfsc	status,2,c
  4639  015848  D00C               	goto	l8033
  4640  01584A  D7DA               	goto	l8023
  4641  01584C                     l8031:
  4642                           
  4643                           ;stkvar	_exp @ sp[(-5)+4]
  4644  01584C  0EFF               	movlw	-1
  4645  01584E  06E3               	decf	plusw1,f,c
  4646                           
  4647                           ;stkvar	_arg @ sp[(-5)+0]
  4648  015850  90D8               	bcf	status,0,c
  4649  015852  0EFB               	movlw	-5
  4650  015854  36E3               	rlcf	plusw1,f,c
  4651  015856  0EFC               	movlw	-4
  4652  015858  36E3               	rlcf	plusw1,f,c
  4653  01585A  0EFD               	movlw	-3
  4654  01585C  36E3               	rlcf	plusw1,f,c
  4655  01585E  0EFE               	movlw	-2
  4656  015860  36E3               	rlcf	plusw1,f,c
  4657  015862                     l8033:
  4658                           
  4659                           ;stkvar	_arg @ sp[(-5)+0]
  4660  015862  0EFD               	movlw	-3
  4661  015864  BEE3               	btfsc	plusw1,7,c
  4662  015866  D007               	goto	u7870
  4663                           
  4664                           ;stkvar	_exp @ sp[(-5)+4]
  4665  015868  0EFF               	movlw	-1
  4666  01586A  006F FF8C  F032    	movff	plusw1,btemp
  4667  015870  0E02               	movlw	2
  4668  015872  6032               	cpfslt	btemp^0,c
  4669  015874  D7EB               	goto	l8031
  4670  015876                     u7870:
  4671                           
  4672                           ;stkvar	_exp @ sp[(-5)+4]
  4673  015876  0EFF               	movlw	-1
  4674  015878  B0E3               	btfsc	plusw1,0,c
  4675  01587A  D002               	goto	l8041
  4676                           
  4677                           ;stkvar	_arg @ sp[(-5)+0]
  4678  01587C  0EFD               	movlw	-3
  4679  01587E  9EE3               	bcf	plusw1,7,c
  4680  015880                     l8041:
  4681                           
  4682                           ;stkvar	_exp @ sp[(-5)+4]
  4683  015880  50E1               	movf	fsr1l,w,c
  4684  015882  0FFF               	addlw	-1
  4685  015884  6ED9               	movwf	fsr2l,c
  4686  015886  50E2               	movf	fsr1h,w,c
  4687  015888  6EDA               	movwf	fsr2h,c
  4688  01588A  0EFF               	movlw	255
  4689  01588C  22DA               	addwfc	fsr2h,f,c
  4690  01588E  90D8               	bcf	status,0,c
  4691  015890  32DF               	rrcf	indf2,f,c
  4692                           
  4693                           ;stkvar	_exp @ sp[(-5)+4]
  4694  015892  0EFF               	movlw	-1
  4695  015894  006F FF8C  F03D    	movff	plusw1,btemp+11
  4696  01589A  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4697  0158A0  6A37               	clrf	(btemp+5)^0,c
  4698  0158A2  6A38               	clrf	(btemp+6)^0,c
  4699  0158A4  6A39               	clrf	(btemp+7)^0,c
  4700  0158A6  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4701  0158AC  6A38               	clrf	(btemp+6)^0,c
  4702  0158AE  6A37               	clrf	(btemp+5)^0,c
  4703  0158B0  6A36               	clrf	(btemp+4)^0,c
  4704                           
  4705                           ;stkvar	_arg @ sp[(-5)+0]
  4706  0158B2  50E1               	movf	fsr1l,w,c
  4707  0158B4  0FFB               	addlw	-5
  4708  0158B6  6ED9               	movwf	fsr2l,c
  4709  0158B8  50E2               	movf	fsr1h,w,c
  4710  0158BA  6EDA               	movwf	fsr2h,c
  4711  0158BC  0EFF               	movlw	255
  4712  0158BE  22DA               	addwfc	fsr2h,f,c
  4713  0158C0  5036               	movf	(btemp+4)^0,w,c
  4714  0158C2  12DE               	iorwf	postinc2,f,c
  4715  0158C4  5037               	movf	(btemp+5)^0,w,c
  4716  0158C6  12DE               	iorwf	postinc2,f,c
  4717  0158C8  5038               	movf	(btemp+6)^0,w,c
  4718  0158CA  12DE               	iorwf	postinc2,f,c
  4719  0158CC  5039               	movf	(btemp+7)^0,w,c
  4720  0158CE  12DE               	iorwf	postinc2,f,c
  4721                           
  4722                           ;stkvar	_sign @ sp[(-5)+-1]
  4723  0158D0  0EFA               	movlw	-6
  4724  0158D2  50E3               	movf	plusw1,w,c
  4725  0158D4  B4D8               	btfsc	status,2,c
  4726  0158D6  D005               	goto	l8051
  4727                           
  4728                           ;stkvar	_val @ sp[(-5)+-5]
  4729  0158D8  0EF9               	movlw	-7
  4730  0158DA  AEE3               	btfss	plusw1,7,c
  4731  0158DC  D002               	goto	l8051
  4732                           
  4733                           ;stkvar	_arg @ sp[(-5)+0]
  4734  0158DE  0EFE               	movlw	-2
  4735  0158E0  8EE3               	bsf	plusw1,7,c
  4736  0158E2                     l8051:
  4737                           
  4738                           ;stkvar	_arg @ sp[(-5)+0]
  4739  0158E2  0EFB               	movlw	-5
  4740  0158E4  006F FF8C  F032    	movff	plusw1,btemp
  4741  0158EA  0EFC               	movlw	-4
  4742  0158EC  006F FF8C  F033    	movff	plusw1,btemp+1
  4743  0158F2  0EFD               	movlw	-3
  4744  0158F4  006F FF8C  F034    	movff	plusw1,btemp+2
  4745  0158FA  0EFE               	movlw	-2
  4746  0158FC  006F FF8C  F035    	movff	plusw1,btemp+3
  4747  015902                     l2698:
  4748                           
  4749                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4750  015902  0EF6               	movlw	246
  4751  015904  26E1               	addwf	fsr1l,f,c
  4752  015906  0EFF               	movlw	255
  4753  015908  22E2               	addwfc	fsr1h,f,c
  4754  01590A  0012               	return		;funcret
  4755  01590C                     __end_of___xxtofl:
  4756                           	opt callstack 0
  4757                           
  4758 ;; *************** function _clear_adc_scan *****************
  4759 ;; Defined at:
  4760 ;;		line 64 in file "daq.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1  [STACK] void 
  4767 ;; Registers used:
  4768 ;;		None
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/39
  4771 ;;		On exit  : 3F/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4778 ;;Total ram usage:        0 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    6
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_main
  4785 ;; This function uses a reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text19
  4789  018636                     __ptext19:
  4790                           	opt callstack 0
  4791  018636                     _clear_adc_scan:
  4792                           	opt callstack 24
  4793                           
  4794                           ;daq.c: 66:  R.done = 0;
  4795                           
  4796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4797                           ;incstack = 0
  4798  018636  0100               	movlb	0	; () banked
  4799  018638  6BCD               	clrf	(_R+39)& (0+255),b	;volatile
  4800                           
  4801                           ; BSR set to: 0
  4802                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4803  01863A  0012               	return		;funcret
  4804  01863C                     __end_of_clear_adc_scan:
  4805                           	opt callstack 0
  4806                           
  4807 ;; *************** function _check_switches *****************
  4808 ;; Defined at:
  4809 ;;		line 80 in file "mbmc.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1  [STACK] unsigned char 
  4816 ;; Registers used:
  4817 ;;		btemp
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/39
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4827 ;;Total ram usage:        0 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    6
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_main
  4834 ;; This function uses a reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text20
  4838  01860E                     __ptext20:
  4839                           	opt callstack 0
  4840  01860E                     _check_switches:
  4841                           	opt callstack 24
  4842                           
  4843                           ;mbmc.c: 82:  return V.sw_bitmap;
  4844                           
  4845                           ; BSR set to: 0
  4846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4847                           ;incstack = 0
  4848  01860E  0060  F78C  F032   	movff	_V+227,btemp	;volatile
  4849                           
  4850                           ; _check_switches: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4851  018614  0012               	return		;funcret
  4852  018616                     __end_of_check_switches:
  4853                           	opt callstack 0
  4854                           
  4855 ;; *************** function _check_help *****************
  4856 ;; Defined at:
  4857 ;;		line 40 in file "mconfig.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  flipper         1  [STACK] const _Bool 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1  [STACK] void 
  4864 ;; Registers used:
  4865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4866 ;; Tracked objects:
  4867 ;;		On entry : 3F/1
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:   18
  4878 ;; This function calls:
  4879 ;;		_StartTimer
  4880 ;;		_TimerDone
  4881 ;;		_display_help
  4882 ;;		_display_info
  4883 ;;		_get_vterm_ptr
  4884 ;;		_help_button
  4885 ;;		_mode_lamp_bright
  4886 ;;		_mode_lamp_dim
  4887 ;;		_set_display_info
  4888 ;;		_set_temp_display_help
  4889 ;;		_set_vterm
  4890 ;;		_sprintf
  4891 ;;		_update_lcd
  4892 ;;		_vterm_dump
  4893 ;; This function is called by:
  4894 ;;		_main
  4895 ;; This function uses a reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text21
  4899  0154F6                     __ptext21:
  4900                           	opt callstack 0
  4901  0154F6                     _check_help:
  4902                           	opt callstack 12
  4903                           
  4904                           ;mconfig.c: 40: void check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if
      +                           (help_button() && display_info() != DIS_HELP) {
  4905                           
  4906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4907                           ;incstack = 0
  4908  0154F6  ECD7  F0BE         	call	_help_button	;wreg free
  4909  0154FA  5032               	movf	btemp^0,w,c
  4910  0154FC  B4D8               	btfsc	status,2,c
  4911  0154FE  D0D0               	goto	l10175
  4912  015500  EC0B  F0C3         	call	_display_info	;wreg free
  4913  015504  0432               	decf	btemp^0,w,c
  4914  015506  B4D8               	btfsc	status,2,c
  4915  015508  D0CB               	goto	l10175
  4916                           
  4917                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4918  01550A  0EDC               	movlw	220
  4919  01550C  6EE6               	movwf	postinc1,c
  4920  01550E  0E05               	movlw	5
  4921  015510  6EE6               	movwf	postinc1,c
  4922  015512  0E0B               	movlw	11
  4923  015514  6EE6               	movwf	postinc1,c
  4924  015516  ECB9  F0BE         	call	_StartTimer	;wreg free
  4925                           
  4926                           ;mconfig.c: 47:   if (V.debug)
  4927  01551A  0101               	movlb	1	; () banked
  4928  01551C  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4929                           
  4930                           ; BSR set to: 1
  4931                           ;mconfig.c: 48:    vterm_dump();
  4932  01551E  ECD4  F0B1         	call	_vterm_dump	;wreg free
  4933                           
  4934                           ;mconfig.c: 50:   set_vterm(1);
  4935  015522  0E01               	movlw	1
  4936  015524  6EE6               	movwf	postinc1,c
  4937  015526  EC52  F0C2         	call	_set_vterm	;wreg free
  4938                           
  4939                           ; BSR set to: 5
  4940                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4941  01552A  EC0B  F0C3         	call	_display_info	;wreg free
  4942  01552E  5032               	movf	btemp^0,w,c
  4943  015530  6EE6               	movwf	postinc1,c
  4944  015532  ECC7  F0C2         	call	_set_temp_display_help	;wreg free
  4945                           
  4946                           ; BSR set to: 1
  4947                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4948  015536  0E01               	movlw	1
  4949  015538  6EE6               	movwf	postinc1,c
  4950  01553A  EC17  F0C2         	call	_set_display_info	;wreg free
  4951                           
  4952                           ;mconfig.c: 53:   if (flipper) {
  4953                           ;stkvar	_flipper @ sp[(0)+-1]
  4954  01553E  0EFF               	movlw	-1
  4955  015540  50E3               	movf	plusw1,w,c
  4956  015542  B4D8               	btfsc	status,2,c
  4957  015544  D019               	goto	l10163
  4958                           
  4959                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4960  015546  0EC1               	movlw	low STR_15
  4961  015548  6EE6               	movwf	postinc1,c
  4962  01554A  0EFF               	movlw	high STR_15
  4963  01554C  6EE6               	movwf	postinc1,c
  4964  01554E  0E1A               	movlw	low STR_17
  4965  015550  6EE6               	movwf	postinc1,c
  4966  015552  0EFF               	movlw	high STR_17
  4967  015554  6EE6               	movwf	postinc1,c
  4968  015556  0E01               	movlw	1
  4969  015558  6EE6               	movwf	postinc1,c
  4970  01555A  0E00               	movlw	0
  4971  01555C  6EE6               	movwf	postinc1,c
  4972  01555E  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  4973  015562  0060  F0CB  FFE6   	movff	btemp,postinc1
  4974  015568  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4975  01556E  0E06               	movlw	6
  4976  015570  6EE6               	movwf	postinc1,c
  4977  015572  EC9A  F0B4         	call	_sprintf	;wreg free
  4978                           
  4979                           ;mconfig.c: 55:   } else {
  4980  015576  D018               	goto	l1560
  4981  015578                     l10163:
  4982                           
  4983                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4984  015578  0ED7               	movlw	low STR_16
  4985  01557A  6EE6               	movwf	postinc1,c
  4986  01557C  0EFF               	movlw	high STR_16
  4987  01557E  6EE6               	movwf	postinc1,c
  4988  015580  0E1A               	movlw	low STR_17
  4989  015582  6EE6               	movwf	postinc1,c
  4990  015584  0EFF               	movlw	high STR_17
  4991  015586  6EE6               	movwf	postinc1,c
  4992  015588  0E01               	movlw	1
  4993  01558A  6EE6               	movwf	postinc1,c
  4994  01558C  0E00               	movlw	0
  4995  01558E  6EE6               	movwf	postinc1,c
  4996  015590  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  4997  015594  0060  F0CB  FFE6   	movff	btemp,postinc1
  4998  01559A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4999  0155A0  0E06               	movlw	6
  5000  0155A2  6EE6               	movwf	postinc1,c
  5001  0155A4  EC9A  F0B4         	call	_sprintf	;wreg free
  5002  0155A8                     l1560:
  5003                           
  5004                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5005  0155A8  0101               	movlb	1	; () banked
  5006  0155AA  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5007  0155AC  32E8               	rrcf	wreg,f,c
  5008  0155AE  32E8               	rrcf	wreg,f,c
  5009  0155B0  0B03               	andlw	3
  5010  0155B2  0D24               	mullw	36
  5011  0155B4  0E12               	movlw	18
  5012  0155B6  26F3               	addwf	243,f,c
  5013  0155B8  0E00               	movlw	0
  5014  0155BA  22F4               	addwfc	244,f,c
  5015  0155BC  0E5F               	movlw	low _T
  5016  0155BE  6E3C               	movwf	(btemp+10)^0,c
  5017  0155C0  0EFE               	movlw	high _T
  5018  0155C2  6E3D               	movwf	(btemp+11)^0,c
  5019  0155C4  50F3               	movf	243,w,c
  5020  0155C6  263C               	addwf	(btemp+10)^0,f,c
  5021  0155C8  50F4               	movf	244,w,c
  5022  0155CA  223D               	addwfc	(btemp+11)^0,f,c
  5023  0155CC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5024  0155D2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5025  0155D8  0ECD               	movlw	low STR_19
  5026  0155DA  6EE6               	movwf	postinc1,c
  5027  0155DC  0EFF               	movlw	high STR_19
  5028  0155DE  6EE6               	movwf	postinc1,c
  5029  0155E0  0E01               	movlw	1
  5030  0155E2  6EE6               	movwf	postinc1,c
  5031  0155E4  0E01               	movlw	1
  5032  0155E6  6EE6               	movwf	postinc1,c
  5033  0155E8  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  5034  0155EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5035  0155F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5036  0155F8  0E06               	movlw	6
  5037  0155FA  6EE6               	movwf	postinc1,c
  5038  0155FC  EC9A  F0B4         	call	_sprintf	;wreg free
  5039                           
  5040                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5041  015600  0101               	movlb	1	; () banked
  5042  015602  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5043  015604  32E8               	rrcf	wreg,f,c
  5044  015606  32E8               	rrcf	wreg,f,c
  5045  015608  0B03               	andlw	3
  5046  01560A  0D24               	mullw	36
  5047  01560C  0E5F               	movlw	low _T
  5048  01560E  6E3C               	movwf	(btemp+10)^0,c
  5049  015610  0EFE               	movlw	high _T
  5050  015612  6E3D               	movwf	(btemp+11)^0,c
  5051  015614  50F3               	movf	243,w,c
  5052  015616  263C               	addwf	(btemp+10)^0,f,c
  5053  015618  50F4               	movf	244,w,c
  5054  01561A  223D               	addwfc	(btemp+11)^0,f,c
  5055  01561C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5056  015622  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5057  015628  0ECD               	movlw	low STR_19
  5058  01562A  6EE6               	movwf	postinc1,c
  5059  01562C  0EFF               	movlw	high STR_19
  5060  01562E  6EE6               	movwf	postinc1,c
  5061  015630  0E01               	movlw	1
  5062  015632  6EE6               	movwf	postinc1,c
  5063  015634  0E02               	movlw	2
  5064  015636  6EE6               	movwf	postinc1,c
  5065  015638  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  5066  01563C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5067  015642  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5068  015648  0E06               	movlw	6
  5069  01564A  6EE6               	movwf	postinc1,c
  5070  01564C  EC9A  F0B4         	call	_sprintf	;wreg free
  5071                           
  5072                           ;mconfig.c: 60:   V.help_id++;
  5073  015650  EE20  F19B         	lfsr	2,_V+155	;volatile
  5074  015654  38DF               	swapf	223,w,c
  5075  015656  6E3D               	movwf	(btemp+11)^0,c
  5076  015658  323D               	rrcf	(btemp+11)^0,f,c
  5077  01565A  303D               	rrcf	(btemp+11)^0,w,c
  5078  01565C  0B03               	andlw	3
  5079  01565E  6E3D               	movwf	(btemp+11)^0,c
  5080  015660  2A3D               	incf	(btemp+11)^0,f,c
  5081  015662  3A3D               	swapf	(btemp+11)^0,f,c
  5082  015664  363D               	rlcf	(btemp+11)^0,f,c
  5083  015666  363D               	rlcf	(btemp+11)^0,f,c
  5084  015668  50DF               	movf	223,w,c
  5085  01566A  183D               	xorwf	(btemp+11)^0,w,c
  5086  01566C  0B3F               	andlw	-193
  5087  01566E  183D               	xorwf	(btemp+11)^0,w,c
  5088  015670  6EDF               	movwf	223,c
  5089                           
  5090                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  5091  015672  0EB8               	movlw	184
  5092  015674  6EE6               	movwf	postinc1,c
  5093  015676  0E0B               	movlw	11
  5094  015678  6EE6               	movwf	postinc1,c
  5095  01567A  0E09               	movlw	9
  5096  01567C  6EE6               	movwf	postinc1,c
  5097  01567E  ECB9  F0BE         	call	_StartTimer	;wreg free
  5098                           
  5099                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  5100  015682  0EB8               	movlw	184
  5101  015684  6EE6               	movwf	postinc1,c
  5102  015686  0E0B               	movlw	11
  5103  015688  6EE6               	movwf	postinc1,c
  5104  01568A  0E07               	movlw	7
  5105  01568C  6EE6               	movwf	postinc1,c
  5106  01568E  ECB9  F0BE         	call	_StartTimer	;wreg free
  5107                           
  5108                           ;mconfig.c: 63:   mode_lamp_bright();
  5109  015692  ECD6  F0C2         	call	_mode_lamp_bright	;wreg free
  5110                           
  5111                           ;mconfig.c: 64:   update_lcd(1);
  5112  015696  0E01               	movlw	1
  5113  015698  6EE6               	movwf	postinc1,c
  5114  01569A  EC13  F0B4         	call	_update_lcd	;wreg free
  5115                           
  5116                           ;mconfig.c: 65:  } else {
  5117  01569E  D032               	goto	l1564
  5118  0156A0                     l10175:
  5119                           
  5120                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  5121  0156A0  0E09               	movlw	9
  5122  0156A2  6EE6               	movwf	postinc1,c
  5123  0156A4  EC91  F0C1         	call	_TimerDone	;wreg free
  5124  0156A8  5032               	movf	btemp^0,w,c
  5125  0156AA  B4D8               	btfsc	status,2,c
  5126  0156AC  D02B               	goto	l1564
  5127                           
  5128                           ;mconfig.c: 67:    set_vterm(0);
  5129  0156AE  0E00               	movlw	0
  5130  0156B0  6EE6               	movwf	postinc1,c
  5131  0156B2  EC52  F0C2         	call	_set_vterm	;wreg free
  5132                           
  5133                           ; BSR set to: 5
  5134                           ;mconfig.c: 68:    V.help = 0;
  5135  0156B6  0101               	movlb	1	; () banked
  5136  0156B8  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5137                           
  5138                           ; BSR set to: 1
  5139                           ;mconfig.c: 69:    set_display_info(display_help());
  5140  0156BA  EC0F  F0C3         	call	_display_help	;wreg free
  5141  0156BE  5032               	movf	btemp^0,w,c
  5142  0156C0  6EE6               	movwf	postinc1,c
  5143  0156C2  EC17  F0C2         	call	_set_display_info	;wreg free
  5144                           
  5145                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  5146  0156C6  0060  F657  FFE6   	movff	_V+149,postinc1
  5147  0156CC  0060  F65B  FFE6   	movff	_V+150,postinc1
  5148  0156D2  EC7B  F0C2         	call	_mode_lamp_dim	;wreg free
  5149                           
  5150                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  5151  0156D6  0E0B               	movlw	11
  5152  0156D8  6EE6               	movwf	postinc1,c
  5153  0156DA  EC91  F0C1         	call	_TimerDone	;wreg free
  5154  0156DE  5032               	movf	btemp^0,w,c
  5155  0156E0  B4D8               	btfsc	status,2,c
  5156  0156E2  D010               	goto	l1564
  5157                           
  5158                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  5159  0156E4  0101               	movlb	1	; () banked
  5160  0156E6  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5161  0156E8  A4D8               	btfss	status,2,c
  5162  0156EA  D002               	goto	u10260
  5163  0156EC  0E01               	movlw	1
  5164  0156EE  D001               	goto	u10270
  5165  0156F0                     u10260:
  5166  0156F0  0E00               	movlw	0
  5167  0156F2                     u10270:
  5168  0156F2  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5169                           
  5170                           ; BSR set to: 1
  5171                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  5172  0156F4  0EDC               	movlw	220
  5173  0156F6  6EE6               	movwf	postinc1,c
  5174  0156F8  0E05               	movlw	5
  5175  0156FA  6EE6               	movwf	postinc1,c
  5176  0156FC  0E0B               	movlw	11
  5177  0156FE  6EE6               	movwf	postinc1,c
  5178  015700  ECB9  F0BE         	call	_StartTimer	;wreg free
  5179  015704                     l1564:
  5180                           
  5181                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5182  015704  52E5               	movf	postdec1,f,c
  5183  015706  0012               	return		;funcret
  5184  015708                     __end_of_check_help:
  5185                           	opt callstack 0
  5186                           
  5187 ;; *************** function _vterm_dump *****************
  5188 ;; Defined at:
  5189 ;;		line 118 in file "mconfig.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1  [STACK] void 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5198 ;; Tracked objects:
  5199 ;;		On entry : 3F/1
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:   17
  5210 ;; This function calls:
  5211 ;;		_WaitMs
  5212 ;;		_eaDogM_WriteStringAtPos
  5213 ;;		_get_vterm_ptr
  5214 ;;		_sprintf
  5215 ;;		_wait_lcd_done
  5216 ;; This function is called by:
  5217 ;;		_check_help
  5218 ;; This function uses a reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text22
  5222  0163A8                     __ptext22:
  5223                           	opt callstack 0
  5224  0163A8                     _vterm_dump:
  5225                           	opt callstack 12
  5226                           
  5227                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5228                           
  5229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5230                           ;incstack = 0
  5231  0163A8  0E01               	movlw	1
  5232  0163AA  6EE6               	movwf	postinc1,c
  5233  0163AC  0E00               	movlw	0
  5234  0163AE  6EE6               	movwf	postinc1,c
  5235  0163B0  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  5236  0163B4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5237  0163BA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5238  0163C0  0E00               	movlw	0
  5239  0163C2  6EE6               	movwf	postinc1,c
  5240  0163C4  0E00               	movlw	0
  5241  0163C6  6EE6               	movwf	postinc1,c
  5242  0163C8  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  5243  0163CC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5244  0163D2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5245  0163D8  0E95               	movlw	low STR_21
  5246  0163DA  6EE6               	movwf	postinc1,c
  5247  0163DC  0EFF               	movlw	high STR_21
  5248  0163DE  6EE6               	movwf	postinc1,c
  5249  0163E0  0E01               	movlw	low (_V+1)
  5250  0163E2  6EE6               	movwf	postinc1,c
  5251  0163E4  0E01               	movlw	high (_V+1)
  5252  0163E6  6EE6               	movwf	postinc1,c
  5253  0163E8  0E08               	movlw	8
  5254  0163EA  6EE6               	movwf	postinc1,c
  5255  0163EC  EC9A  F0B4         	call	_sprintf	;wreg free
  5256                           
  5257                           ;mconfig.c: 121:  wait_lcd_done();
  5258  0163F0  EC44  F0C2         	call	_wait_lcd_done	;wreg free
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5262  0163F4  0E01               	movlw	low (_V+1)
  5263  0163F6  6EE6               	movwf	postinc1,c
  5264  0163F8  0E01               	movlw	high (_V+1)
  5265  0163FA  6EE6               	movwf	postinc1,c
  5266  0163FC  0E00               	movlw	0
  5267  0163FE  6EE6               	movwf	postinc1,c
  5268  016400  0E00               	movlw	0
  5269  016402  6EE6               	movwf	postinc1,c
  5270  016404  EC0E  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5271                           
  5272                           ; BSR set to: 59
  5273                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5274  016408  0E01               	movlw	1
  5275  01640A  6EE6               	movwf	postinc1,c
  5276  01640C  0E01               	movlw	1
  5277  01640E  6EE6               	movwf	postinc1,c
  5278  016410  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  5279  016414  0060  F0CB  FFE6   	movff	btemp,postinc1
  5280  01641A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5281  016420  0E00               	movlw	0
  5282  016422  6EE6               	movwf	postinc1,c
  5283  016424  0E01               	movlw	1
  5284  016426  6EE6               	movwf	postinc1,c
  5285  016428  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  5286  01642C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5287  016432  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5288  016438  0E95               	movlw	low STR_21
  5289  01643A  6EE6               	movwf	postinc1,c
  5290  01643C  0EFF               	movlw	high STR_21
  5291  01643E  6EE6               	movwf	postinc1,c
  5292  016440  0E01               	movlw	low (_V+1)
  5293  016442  6EE6               	movwf	postinc1,c
  5294  016444  0E01               	movlw	high (_V+1)
  5295  016446  6EE6               	movwf	postinc1,c
  5296  016448  0E08               	movlw	8
  5297  01644A  6EE6               	movwf	postinc1,c
  5298  01644C  EC9A  F0B4         	call	_sprintf	;wreg free
  5299                           
  5300                           ;mconfig.c: 124:  wait_lcd_done();
  5301  016450  EC44  F0C2         	call	_wait_lcd_done	;wreg free
  5302                           
  5303                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5304  016454  0E01               	movlw	low (_V+1)
  5305  016456  6EE6               	movwf	postinc1,c
  5306  016458  0E01               	movlw	high (_V+1)
  5307  01645A  6EE6               	movwf	postinc1,c
  5308  01645C  0E00               	movlw	0
  5309  01645E  6EE6               	movwf	postinc1,c
  5310  016460  0E01               	movlw	1
  5311  016462  6EE6               	movwf	postinc1,c
  5312  016464  EC0E  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5313                           
  5314                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5315  016468  0E01               	movlw	1
  5316  01646A  6EE6               	movwf	postinc1,c
  5317  01646C  0E02               	movlw	2
  5318  01646E  6EE6               	movwf	postinc1,c
  5319  016470  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  5320  016474  0060  F0CB  FFE6   	movff	btemp,postinc1
  5321  01647A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5322  016480  0E00               	movlw	0
  5323  016482  6EE6               	movwf	postinc1,c
  5324  016484  0E02               	movlw	2
  5325  016486  6EE6               	movwf	postinc1,c
  5326  016488  ECA5  F0BF         	call	_get_vterm_ptr	;wreg free
  5327  01648C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5328  016492  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5329  016498  0E95               	movlw	low STR_21
  5330  01649A  6EE6               	movwf	postinc1,c
  5331  01649C  0EFF               	movlw	high STR_21
  5332  01649E  6EE6               	movwf	postinc1,c
  5333  0164A0  0E01               	movlw	low (_V+1)
  5334  0164A2  6EE6               	movwf	postinc1,c
  5335  0164A4  0E01               	movlw	high (_V+1)
  5336  0164A6  6EE6               	movwf	postinc1,c
  5337  0164A8  0E08               	movlw	8
  5338  0164AA  6EE6               	movwf	postinc1,c
  5339  0164AC  EC9A  F0B4         	call	_sprintf	;wreg free
  5340                           
  5341                           ;mconfig.c: 127:  wait_lcd_done();
  5342  0164B0  EC44  F0C2         	call	_wait_lcd_done	;wreg free
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5346  0164B4  0E01               	movlw	low (_V+1)
  5347  0164B6  6EE6               	movwf	postinc1,c
  5348  0164B8  0E01               	movlw	high (_V+1)
  5349  0164BA  6EE6               	movwf	postinc1,c
  5350  0164BC  0E00               	movlw	0
  5351  0164BE  6EE6               	movwf	postinc1,c
  5352  0164C0  0E02               	movlw	2
  5353  0164C2  6EE6               	movwf	postinc1,c
  5354  0164C4  EC0E  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5355                           
  5356                           ; BSR set to: 59
  5357                           ;mconfig.c: 129:  WaitMs(3000);
  5358  0164C8  0EB8               	movlw	184
  5359  0164CA  6EE6               	movwf	postinc1,c
  5360  0164CC  0E0B               	movlw	11
  5361  0164CE  6EE6               	movwf	postinc1,c
  5362  0164D0  ECF3  F0BE         	call	_WaitMs	;wreg free
  5363                           
  5364                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5365  0164D4  0012               	return		;funcret
  5366  0164D6                     __end_of_vterm_dump:
  5367                           	opt callstack 0
  5368                           
  5369 ;; *************** function _sprintf *****************
  5370 ;; Defined at:
  5371 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  s               2  [STACK] PTR unsigned char 
  5374 ;;		 -> D.lcd(216), D(218), V(228), 
  5375 ;;  fmt             2  [STACK] PTR const unsigned char 
  5376 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5377 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5378 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5379 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5380 ;;		 -> STR_11(17), STR_10(14), STR_9(14), STR_8(17), 
  5381 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5382 ;;		 -> STR_1(17), 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  f               6  [STACK] struct _IO_FILE
  5385 ;;  ap              2  [STACK] PTR void [1]
  5386 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5387 ;;  ret             2    0        int 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2  [STACK] int 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/5
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5401 ;;Total ram usage:        0 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:   14
  5404 ;; This function calls:
  5405 ;;		_vfprintf
  5406 ;; This function is called by:
  5407 ;;		_main
  5408 ;;		_check_help
  5409 ;;		_vterm_dump
  5410 ;; This function uses a reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text23
  5414  016934                     __ptext23:
  5415                           	opt callstack 0
  5416  016934                     _sprintf:
  5417                           	opt callstack 0
  5418                           
  5419                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5420  016934  0E08               	movlw	8
  5421  016936  26E1               	addwf	fsr1l,f,c
  5422  016938  0E00               	movlw	0
  5423  01693A  22E2               	addwfc	fsr1h,f,c
  5424                           
  5425                           ;incstack = 0
  5426  01693C  0EFE               	movlw	254
  5427  01693E  6E3C               	movwf	(btemp+10)^0,c
  5428  016940  0EFF               	movlw	255
  5429  016942  6E3D               	movwf	(btemp+11)^0,c
  5430                           
  5431                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5432  016944  0EF5               	movlw	245
  5433  016946  24E1               	addwf	fsr1l,w,c
  5434  016948  6E3A               	movwf	(btemp+8)^0,c
  5435  01694A  0EFF               	movlw	255
  5436  01694C  20E2               	addwfc	fsr1h,w,c
  5437  01694E  6E3B               	movwf	(btemp+9)^0,c
  5438  016950  503C               	movf	(btemp+10)^0,w,c
  5439  016952  263A               	addwf	(btemp+8)^0,f,c
  5440  016954  503D               	movf	(btemp+11)^0,w,c
  5441  016956  223B               	addwfc	(btemp+9)^0,f,c
  5442                           
  5443                           ;stkvar	_ap @ sp[(-8)+6]
  5444  016958  0EFF               	movlw	-1
  5445  01695A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5446  016960  0EFE               	movlw	-2
  5447  016962  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5448                           
  5449                           ;stkvar	_s @ sp[(-8)+-3]
  5450  016968  0EF5               	movlw	-11
  5451  01696A  006F FF8C  F03C    	movff	plusw1,btemp+10
  5452  016970  0EF6               	movlw	-10
  5453  016972  006F FF8C  F03D    	movff	plusw1,btemp+11
  5454                           
  5455                           ;stkvar	_f @ sp[(-8)+0]
  5456  016978  0EF9               	movlw	-7
  5457  01697A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5458  016980  0EF8               	movlw	-8
  5459  016982  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5460                           
  5461                           ;stkvar	_f @ sp[(-8)+0]
  5462  016988  0EFA               	movlw	250
  5463  01698A  24E1               	addwf	fsr1l,w,c
  5464  01698C  6ED9               	movwf	fsr2l,c
  5465  01698E  0EFF               	movlw	255
  5466  016990  20E2               	addwfc	fsr1h,w,c
  5467  016992  6EDA               	movwf	fsr2h,c
  5468  016994  0E00               	movlw	0
  5469  016996  6EDE               	movwf	postinc2,c
  5470  016998  0E00               	movlw	0
  5471  01699A  6EDD               	movwf	postdec2,c
  5472                           
  5473                           ;stkvar	_f @ sp[(-8)+0]
  5474  01699C  0EFC               	movlw	252
  5475  01699E  24E1               	addwf	fsr1l,w,c
  5476  0169A0  6ED9               	movwf	fsr2l,c
  5477  0169A2  0EFF               	movlw	255
  5478  0169A4  20E2               	addwfc	fsr1h,w,c
  5479  0169A6  6EDA               	movwf	fsr2h,c
  5480  0169A8  0E00               	movlw	0
  5481  0169AA  6EDE               	movwf	postinc2,c
  5482  0169AC  0E00               	movlw	0
  5483  0169AE  6EDD               	movwf	postdec2,c
  5484                           
  5485                           ;stkvar	_ap @ sp[(-8)+6]
  5486  0169B0  0EFE               	movlw	254
  5487  0169B2  24E1               	addwf	fsr1l,w,c
  5488  0169B4  6E32               	movwf	btemp^0,c
  5489  0169B6  0EFF               	movlw	255
  5490  0169B8  20E2               	addwfc	fsr1h,w,c
  5491  0169BA  6E33               	movwf	(btemp+1)^0,c
  5492  0169BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5493  0169C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5494                           
  5495                           ;stkvar	_fmt @ sp[(-10)+-5]
  5496  0169C8  0EF1               	movlw	-15
  5497  0169CA  006F FF8F FFE6     	movff	plusw1,postinc1
  5498  0169D0  006F FF8F FFE6     	movff	plusw1,postinc1
  5499                           
  5500                           ;stkvar	_f @ sp[(-12)+0]
  5501  0169D6  0EF4               	movlw	244
  5502  0169D8  24E1               	addwf	fsr1l,w,c
  5503  0169DA  6E32               	movwf	btemp^0,c
  5504  0169DC  0EFF               	movlw	255
  5505  0169DE  20E2               	addwfc	fsr1h,w,c
  5506  0169E0  6E33               	movwf	(btemp+1)^0,c
  5507  0169E2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5508  0169E8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5509  0169EE  EC8A  F0B7         	call	_vfprintf	;wreg free
  5510                           
  5511                           ;stkvar	_f @ sp[(-8)+0]
  5512  0169F2  0EFA               	movlw	250
  5513  0169F4  24E1               	addwf	fsr1l,w,c
  5514  0169F6  6ED9               	movwf	fsr2l,c
  5515  0169F8  0EFF               	movlw	255
  5516  0169FA  20E2               	addwfc	fsr1h,w,c
  5517  0169FC  6EDA               	movwf	fsr2h,c
  5518  0169FE  006F FF78  F03C    	movff	postinc2,btemp+10
  5519  016A04  006F FF74  F03D    	movff	postdec2,btemp+11
  5520                           
  5521                           ;stkvar	_s @ sp[(-8)+-3]
  5522  016A0A  0EF5               	movlw	-11
  5523  016A0C  006F FF8C  F03A    	movff	plusw1,btemp+8
  5524  016A12  0EF6               	movlw	-10
  5525  016A14  006F FF8C  F03B    	movff	plusw1,btemp+9
  5526  016A1A  503C               	movf	(btemp+10)^0,w,c
  5527  016A1C  243A               	addwf	(btemp+8)^0,w,c
  5528  016A1E  6ED9               	movwf	fsr2l,c
  5529  016A20  503D               	movf	(btemp+11)^0,w,c
  5530  016A22  203B               	addwfc	(btemp+9)^0,w,c
  5531  016A24  6EDA               	movwf	fsr2h,c
  5532  016A26  0E00               	movlw	0
  5533  016A28  6EDF               	movwf	indf2,c
  5534                           
  5535                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5536  016A2A  0EF8               	movlw	248
  5537  016A2C  26E1               	addwf	fsr1l,f,c
  5538  016A2E  0EFF               	movlw	255
  5539  016A30  22E2               	addwfc	fsr1h,f,c
  5540  016A32  52E5               	movf	postdec1,f,c
  5541  016A34  50E7               	movf	indf1,w,c
  5542  016A36  5EE1               	subwf	fsr1l,f,c
  5543  016A38  0E00               	movlw	0
  5544  016A3A  5AE2               	subwfb	fsr1h,f,c
  5545  016A3C  0012               	return		;funcret
  5546  016A3E                     __end_of_sprintf:
  5547                           	opt callstack 0
  5548                           
  5549 ;; *************** function _get_vterm_ptr *****************
  5550 ;; Defined at:
  5551 ;;		line 113 in file "mconfig.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  line            1  [STACK] const unsigned char 
  5554 ;;  vterm           1  [STACK] const unsigned char 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  2  [STACK] PTR unsigned char 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/5
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    6
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;;		_check_help
  5578 ;;		_vterm_dump
  5579 ;; This function uses a reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text24
  5583  017F4A                     __ptext24:
  5584                           	opt callstack 0
  5585  017F4A                     _get_vterm_ptr:
  5586                           	opt callstack 24
  5587                           
  5588                           ;mconfig.c: 113: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 114: {;mconfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5589                           ;stkvar	_vterm @ sp[(0)+-2]
  5590                           
  5591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5592                           ;incstack = 0
  5593  017F4A  0EFE               	movlw	-2
  5594  017F4C  50E3               	movf	plusw1,w,c
  5595  017F4E  0B03               	andlw	3
  5596  017F50  0D36               	mullw	54
  5597  017F52  0E00               	movlw	low _D
  5598  017F54  6E32               	movwf	btemp^0,c
  5599  017F56  0E05               	movlw	high _D
  5600  017F58  6E33               	movwf	(btemp+1)^0,c
  5601  017F5A  50F3               	movf	243,w,c
  5602  017F5C  2632               	addwf	btemp^0,f,c
  5603  017F5E  50F4               	movf	244,w,c
  5604  017F60  2233               	addwfc	(btemp+1)^0,f,c
  5605                           
  5606                           ;stkvar	_line @ sp[(0)+-1]
  5607  017F62  0EFF               	movlw	-1
  5608  017F64  50E3               	movf	plusw1,w,c
  5609  017F66  0B03               	andlw	3
  5610  017F68  0D12               	mullw	18
  5611  017F6A  50F3               	movf	243,w,c
  5612  017F6C  2632               	addwf	btemp^0,f,c
  5613  017F6E  50F4               	movf	244,w,c
  5614  017F70  2233               	addwfc	(btemp+1)^0,f,c
  5615                           
  5616                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5617  017F72  52E5               	movf	postdec1,f,c
  5618  017F74  52E5               	movf	postdec1,f,c
  5619  017F76  0012               	return		;funcret
  5620  017F78                     __end_of_get_vterm_ptr:
  5621                           	opt callstack 0
  5622                           
  5623 ;; *************** function _WaitMs *****************
  5624 ;; Defined at:
  5625 ;;		line 32 in file "timers.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  numMilliseco    2  [STACK] const unsigned short 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1  [STACK] void 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5634 ;; Tracked objects:
  5635 ;;		On entry : 1/1
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5643 ;;Total ram usage:        0 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    7
  5646 ;; This function calls:
  5647 ;;		_StartTimer
  5648 ;;		_TimerDone
  5649 ;; This function is called by:
  5650 ;;		_main
  5651 ;;		_vterm_dump
  5652 ;; This function uses a reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text25
  5656  017DE6                     __ptext25:
  5657                           	opt callstack 0
  5658  017DE6                     _WaitMs:
  5659                           	opt callstack 21
  5660                           
  5661                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5662                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5663                           
  5664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5665                           ;incstack = 0
  5666  017DE6  0EFE               	movlw	-2
  5667  017DE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5668  017DEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5669  017DF4  0E00               	movlw	0
  5670  017DF6  6EE6               	movwf	postinc1,c
  5671  017DF8  ECB9  F0BE         	call	_StartTimer	;wreg free
  5672                           
  5673                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5674  017DFC  D005               	goto	l7971
  5675  017DFE                     l1490:
  5676                           
  5677                           ;timers.c: 36:   __nop();
  5678  017DFE  F000               	nop	
  5679                           
  5680                           ;timers.c: 37:   __nop();
  5681  017E00  F000               	nop	
  5682                           
  5683                           ;timers.c: 38:   __nop();
  5684  017E02  F000               	nop	
  5685                           
  5686                           ;timers.c: 39:   __nop();
  5687  017E04  F000               	nop	
  5688  017E06  0004               	clrwdt		;# 
  5689  017E08                     l7971:
  5690                           
  5691                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5692  017E08  0E00               	movlw	0
  5693  017E0A  6EE6               	movwf	postinc1,c
  5694  017E0C  EC91  F0C1         	call	_TimerDone	;wreg free
  5695  017E10  5032               	movf	btemp^0,w,c
  5696  017E12  B4D8               	btfsc	status,2,c
  5697  017E14  D7F4               	goto	l1490
  5698                           
  5699                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5700  017E16  52E5               	movf	postdec1,f,c
  5701  017E18  52E5               	movf	postdec1,f,c
  5702  017E1A  0012               	return		;funcret
  5703  017E1C                     __end_of_WaitMs:
  5704                           	opt callstack 0
  5705                           
  5706 ;; *************** function _update_lcd *****************
  5707 ;; Defined at:
  5708 ;;		line 82 in file "mconfig.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  vterm           1  [STACK] unsigned char 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1  [STACK] unsigned char 
  5715 ;; Registers used:
  5716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/5
  5719 ;;		On exit  : 1/1
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:   17
  5729 ;; This function calls:
  5730 ;;		_eaDogM_WriteStringAtPos
  5731 ;;		_wait_lcd_done
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;;		_check_help
  5735 ;; This function uses a reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text26
  5739  016826                     __ptext26:
  5740                           	opt callstack 0
  5741  016826                     _update_lcd:
  5742                           	opt callstack 13
  5743                           
  5744                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5745                           ;stkvar	_vterm @ sp[(0)+-1]
  5746                           
  5747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5748                           ;incstack = 0
  5749  016826  0EFF               	movlw	-1
  5750  016828  006F FF8C  F032    	movff	plusw1,btemp
  5751  01682E  0E03               	movlw	3
  5752  016830  1632               	andwf	btemp^0,f,c
  5753  016832  0EFF               	movlw	-1
  5754  016834  0060  F0CB  FFE3   	movff	btemp,plusw1
  5755                           
  5756                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5757  01683A  0105               	movlb	5	; () banked
  5758  01683C  A1D8               	btfss	(_D+216)& (0+255),0,b
  5759  01683E  D004               	goto	l10047
  5760                           
  5761                           ; BSR set to: 5
  5762                           ;stkvar	_vterm @ sp[(0)+-1]
  5763  016840  0EFF               	movlw	-1
  5764  016842  50E3               	movf	plusw1,w,c
  5765  016844  B4D8               	btfsc	status,2,c
  5766  016846  D074               	goto	l1568
  5767  016848                     l10047:
  5768                           
  5769                           ; BSR set to: 5
  5770                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5771                           ;stkvar	_vterm @ sp[(0)+-1]
  5772  016848  0EFF               	movlw	-1
  5773  01684A  50E3               	movf	plusw1,w,c
  5774  01684C  0D36               	mullw	54
  5775  01684E  0E10               	movlw	low (_D+16)
  5776  016850  24F3               	addwf	243,w,c
  5777  016852  6ED9               	movwf	fsr2l,c
  5778  016854  0E05               	movlw	high (_D+16)
  5779  016856  20F4               	addwfc	prodh,w,c
  5780  016858  6EDA               	movwf	fsr2h,c
  5781  01685A  0E00               	movlw	0
  5782  01685C  6EDF               	movwf	indf2,c
  5783                           
  5784                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5785                           ;stkvar	_vterm @ sp[(0)+-1]
  5786  01685E  0EFF               	movlw	-1
  5787  016860  50E3               	movf	plusw1,w,c
  5788  016862  0D36               	mullw	54
  5789  016864  0E22               	movlw	low (_D+34)
  5790  016866  24F3               	addwf	243,w,c
  5791  016868  6ED9               	movwf	fsr2l,c
  5792  01686A  0E05               	movlw	high (_D+34)
  5793  01686C  20F4               	addwfc	prodh,w,c
  5794  01686E  6EDA               	movwf	fsr2h,c
  5795  016870  0E00               	movlw	0
  5796  016872  6EDF               	movwf	indf2,c
  5797                           
  5798                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5799                           ;stkvar	_vterm @ sp[(0)+-1]
  5800  016874  0EFF               	movlw	-1
  5801  016876  50E3               	movf	plusw1,w,c
  5802  016878  0D36               	mullw	54
  5803  01687A  0E34               	movlw	low (_D+52)
  5804  01687C  24F3               	addwf	243,w,c
  5805  01687E  6ED9               	movwf	fsr2l,c
  5806  016880  0E05               	movlw	high (_D+52)
  5807  016882  20F4               	addwfc	prodh,w,c
  5808  016884  6EDA               	movwf	fsr2h,c
  5809  016886  0E00               	movlw	0
  5810  016888  6EDF               	movwf	indf2,c
  5811                           
  5812                           ; BSR set to: 5
  5813                           ;mconfig.c: 92:  wait_lcd_done();
  5814  01688A  EC44  F0C2         	call	_wait_lcd_done	;wreg free
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5818                           ;stkvar	_vterm @ sp[(0)+-1]
  5819  01688E  0EFF               	movlw	-1
  5820  016890  50E3               	movf	plusw1,w,c
  5821  016892  0D36               	mullw	54
  5822  016894  0E00               	movlw	low _D
  5823  016896  6E3C               	movwf	(btemp+10)^0,c
  5824  016898  0E05               	movlw	high _D
  5825  01689A  6E3D               	movwf	(btemp+11)^0,c
  5826  01689C  50F3               	movf	243,w,c
  5827  01689E  263C               	addwf	(btemp+10)^0,f,c
  5828  0168A0  50F4               	movf	244,w,c
  5829  0168A2  223D               	addwfc	(btemp+11)^0,f,c
  5830  0168A4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5831  0168AA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5832  0168B0  0E00               	movlw	0
  5833  0168B2  6EE6               	movwf	postinc1,c
  5834  0168B4  0E00               	movlw	0
  5835  0168B6  6EE6               	movwf	postinc1,c
  5836  0168B8  EC0E  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5837                           
  5838                           ; BSR set to: 59
  5839                           ;mconfig.c: 94:  wait_lcd_done();
  5840  0168BC  EC44  F0C2         	call	_wait_lcd_done	;wreg free
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5844                           ;stkvar	_vterm @ sp[(0)+-1]
  5845  0168C0  0EFF               	movlw	-1
  5846  0168C2  50E3               	movf	plusw1,w,c
  5847  0168C4  0D36               	mullw	54
  5848  0168C6  0E00               	movlw	low _D
  5849  0168C8  6E3C               	movwf	(btemp+10)^0,c
  5850  0168CA  0E05               	movlw	high _D
  5851  0168CC  6E3D               	movwf	(btemp+11)^0,c
  5852  0168CE  0E12               	movlw	18
  5853  0168D0  263C               	addwf	(btemp+10)^0,f,c
  5854  0168D2  0E00               	movlw	0
  5855  0168D4  223D               	addwfc	(btemp+11)^0,f,c
  5856  0168D6  50F3               	movf	243,w,c
  5857  0168D8  263C               	addwf	(btemp+10)^0,f,c
  5858  0168DA  50F4               	movf	244,w,c
  5859  0168DC  223D               	addwfc	(btemp+11)^0,f,c
  5860  0168DE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5861  0168E4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5862  0168EA  0E00               	movlw	0
  5863  0168EC  6EE6               	movwf	postinc1,c
  5864  0168EE  0E01               	movlw	1
  5865  0168F0  6EE6               	movwf	postinc1,c
  5866  0168F2  EC0E  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5867                           
  5868                           ; BSR set to: 59
  5869                           ;mconfig.c: 96:  wait_lcd_done();
  5870  0168F6  EC44  F0C2         	call	_wait_lcd_done	;wreg free
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5874                           ;stkvar	_vterm @ sp[(0)+-1]
  5875  0168FA  0EFF               	movlw	-1
  5876  0168FC  50E3               	movf	plusw1,w,c
  5877  0168FE  0D36               	mullw	54
  5878  016900  0E00               	movlw	low _D
  5879  016902  6E3C               	movwf	(btemp+10)^0,c
  5880  016904  0E05               	movlw	high _D
  5881  016906  6E3D               	movwf	(btemp+11)^0,c
  5882  016908  0E24               	movlw	36
  5883  01690A  263C               	addwf	(btemp+10)^0,f,c
  5884  01690C  0E00               	movlw	0
  5885  01690E  223D               	addwfc	(btemp+11)^0,f,c
  5886  016910  50F3               	movf	243,w,c
  5887  016912  263C               	addwf	(btemp+10)^0,f,c
  5888  016914  50F4               	movf	244,w,c
  5889  016916  223D               	addwfc	(btemp+11)^0,f,c
  5890  016918  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5891  01691E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5892  016924  0E00               	movlw	0
  5893  016926  6EE6               	movwf	postinc1,c
  5894  016928  0E02               	movlw	2
  5895  01692A  6EE6               	movwf	postinc1,c
  5896  01692C  EC0E  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5897  016930                     l1568:
  5898                           
  5899                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5900  016930  52E5               	movf	postdec1,f,c
  5901  016932  0012               	return		;funcret
  5902  016934                     __end_of_update_lcd:
  5903                           	opt callstack 0
  5904                           
  5905 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5906 ;; Defined at:
  5907 ;;		line 252 in file "eadog.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  r               1  [STACK] const unsigned char 
  5910 ;;  c               1  [STACK] const unsigned char 
  5911 ;;  strPtr          2  [STACK] PTR unsigned char 
  5912 ;;		 -> D.lcd(216), D(218), V(228), 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1  [STACK] void 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5919 ;; Tracked objects:
  5920 ;;		On entry : 3F/0
  5921 ;;		On exit  : 3F/3B
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5928 ;;Total ram usage:        0 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:   16
  5931 ;; This function calls:
  5932 ;;		_eaDogM_WriteString
  5933 ;;		_send_lcd_cmd_dma
  5934 ;; This function is called by:
  5935 ;;		_update_lcd
  5936 ;;		_vterm_dump
  5937 ;; This function uses a reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text27
  5941  017E1C                     __ptext27:
  5942                           	opt callstack 0
  5943  017E1C                     _eaDogM_WriteStringAtPos:
  5944                           	opt callstack 13
  5945                           
  5946                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5947                           ;stkvar	_c @ sp[(0)+-2]
  5948                           
  5949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5950                           ;incstack = 0
  5951  017E1C  0EFE               	movlw	-2
  5952  017E1E  006F FF8C  F03D    	movff	plusw1,btemp+11
  5953                           
  5954                           ;stkvar	_r @ sp[(0)+-1]
  5955  017E24  0EFF               	movlw	-1
  5956  017E26  50E3               	movf	plusw1,w,c
  5957  017E28  0D10               	mullw	16
  5958  017E2A  50F3               	movf	243,w,c
  5959  017E2C  243D               	addwf	(btemp+11)^0,w,c
  5960  017E2E  0F80               	addlw	128
  5961  017E30  6EE6               	movwf	postinc1,c
  5962  017E32  ECF2  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  5963                           
  5964                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5965                           ;stkvar	_strPtr @ sp[(0)+-4]
  5966  017E36  0EFC               	movlw	-4
  5967  017E38  006F FF8F FFE6     	movff	plusw1,postinc1
  5968  017E3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5969  017E44  ECDE  F0B7         	call	_eaDogM_WriteString	;wreg free
  5970                           
  5971                           ; BSR set to: 59
  5972                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5973  017E48  52E5               	movf	postdec1,f,c
  5974  017E4A  52E5               	movf	postdec1,f,c
  5975  017E4C  52E5               	movf	postdec1,f,c
  5976  017E4E  52E5               	movf	postdec1,f,c
  5977  017E50  0012               	return		;funcret
  5978  017E52                     __end_of_eaDogM_WriteStringAtPos:
  5979                           	opt callstack 0
  5980                           
  5981 ;; *************** function _send_lcd_cmd_dma *****************
  5982 ;; Defined at:
  5983 ;;		line 205 in file "eadog.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  strPtr          1  [STACK] unsigned char 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;		None
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1  [STACK] void 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/3D
  5994 ;;		On exit  : 3F/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6001 ;;Total ram usage:        0 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:   15
  6004 ;; This function calls:
  6005 ;;		_printf
  6006 ;;		_ringBufS_flush
  6007 ;;		_start_lcd
  6008 ;;		_wait_lcd_done
  6009 ;;		_wait_lcd_set
  6010 ;; This function is called by:
  6011 ;;		_eaDogM_WriteCommand
  6012 ;;		_eaDogM_WriteStringAtPos
  6013 ;; This function uses a reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text28
  6017  0179E4                     __ptext28:
  6018                           	opt callstack 0
  6019  0179E4                     _send_lcd_cmd_dma:
  6020                           	opt callstack 13
  6021                           
  6022                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6023                           
  6024                           ; BSR set to: 59
  6025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6026                           ;incstack = 0
  6027  0179E4  EC1E  F0C3         	call	_wait_lcd_set	;wreg free
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6031  0179E8  0E00               	movlw	0
  6032  0179EA  6EE6               	movwf	postinc1,c
  6033  0179EC  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  6034  0179F2  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  6035  0179F8  ECCE  F0B8         	call	_ringBufS_flush	;wreg free
  6036  0179FC  92BC               	bcf	188,1,c	;volatile
  6037  0179FE  94BC               	bcf	188,2,c	;volatile
  6038                           
  6039                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6040  017A00  013B               	movlb	59	; () banked
  6041  017A02  9FFC               	bcf	252,7,b	;volatile
  6042                           
  6043                           ; BSR set to: 59
  6044                           ;eadog.c: 214:  DMA1SSZ = 1;
  6045  017A04  0E00               	movlw	0
  6046  017A06  6FF8               	movwf	248,b	;volatile
  6047  017A08  0E01               	movlw	1
  6048  017A0A  6FF7               	movwf	247,b	;volatile
  6049                           
  6050                           ; BSR set to: 59
  6051                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6052  017A0C  8FFC               	bsf	252,7,b	;volatile
  6053                           
  6054                           ; BSR set to: 59
  6055                           ;eadog.c: 216:  printf("%c", strPtr);
  6056                           ;stkvar	_strPtr @ sp[(0)+-1]
  6057  017A0E  0EFF               	movlw	-1
  6058  017A10  50E3               	movf	plusw1,w,c
  6059  017A12  6EE6               	movwf	postinc1,c
  6060  017A14  0E00               	movlw	0
  6061  017A16  6EE6               	movwf	postinc1,c
  6062  017A18  0EF8               	movlw	low STR_13
  6063  017A1A  6EE6               	movwf	postinc1,c
  6064  017A1C  0EFF               	movlw	high STR_13
  6065  017A1E  6EE6               	movwf	postinc1,c
  6066  017A20  0E04               	movlw	4
  6067  017A22  6EE6               	movwf	postinc1,c
  6068  017A24  EC0A  F0BC         	call	_printf	;wreg free
  6069                           
  6070                           ;eadog.c: 217:  start_lcd();
  6071  017A28  EC21  F0C3         	call	_start_lcd	;wreg free
  6072                           
  6073                           ; BSR set to: 59
  6074                           ;eadog.c: 218:  wait_lcd_done();
  6075  017A2C  EC44  F0C2         	call	_wait_lcd_done	;wreg free
  6076                           
  6077                           ; BSR set to: 0
  6078  017A30  82BC               	bsf	188,1,c	;volatile
  6079                           
  6080                           ; BSR set to: 0
  6081                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6082  017A32  52E5               	movf	postdec1,f,c
  6083  017A34  0012               	return		;funcret
  6084  017A36                     __end_of_send_lcd_cmd_dma:
  6085                           	opt callstack 0
  6086                           
  6087 ;; *************** function _wait_lcd_done *****************
  6088 ;; Defined at:
  6089 ;;		line 141 in file "eadog.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1  [STACK] void 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/1
  6100 ;;		On exit  : 3F/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6107 ;;Total ram usage:        0 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    7
  6110 ;; This function calls:
  6111 ;;		_wdtdelay
  6112 ;; This function is called by:
  6113 ;;		_send_lcd_cmd_dma
  6114 ;;		_update_lcd
  6115 ;;		_vterm_dump
  6116 ;; This function uses a reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text29
  6120  018488                     __ptext29:
  6121                           	opt callstack 0
  6122  018488                     _wait_lcd_done:
  6123                           	opt callstack 22
  6124                           
  6125                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6126                           
  6127                           ; BSR set to: 0
  6128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6129                           ;incstack = 0
  6130  018488  0100               	movlb	0	; () banked
  6131  01848A  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  6132  01848C  D7FD               	goto	_wait_lcd_done
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;eadog.c: 144:  wdtdelay(50);
  6136  01848E  0E32               	movlw	50
  6137  018490  6EE6               	movwf	postinc1,c
  6138  018492  0E00               	movlw	0
  6139  018494  6EE6               	movwf	postinc1,c
  6140  018496  0E00               	movlw	0
  6141  018498  6EE6               	movwf	postinc1,c
  6142  01849A  0E00               	movlw	0
  6143  01849C  6EE6               	movwf	postinc1,c
  6144  01849E  EC98  F0BC         	call	_wdtdelay	;wreg free
  6145                           
  6146                           ; BSR set to: 0
  6147                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6148  0184A2  0012               	return		;funcret
  6149  0184A4                     __end_of_wait_lcd_done:
  6150                           	opt callstack 0
  6151                           
  6152 ;; *************** function _wdtdelay *****************
  6153 ;; Defined at:
  6154 ;;		line 22 in file "eadog.c"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;  delay           4  [STACK] const unsigned long 
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;		None
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  1  [STACK] void 
  6161 ;; Registers used:
  6162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 3F/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6172 ;;Total ram usage:        0 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    6
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_init_display
  6179 ;;		_send_lcd_cmd
  6180 ;;		_send_lcd_cmd_long
  6181 ;;		_wait_lcd_done
  6182 ;; This function uses a reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text30
  6186  017930                     __ptext30:
  6187                           	opt callstack 0
  6188  017930                     _wdtdelay:
  6189                           	opt callstack 22
  6190                           
  6191                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6192                           
  6193                           ; BSR set to: 0
  6194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6195                           ;incstack = 0
  6196  017930  0100               	movlb	0	; () banked
  6197  017932  6B90               	clrf	wdtdelay@dcount& (0+255),b
  6198  017934  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6199  017936  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6200  017938  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6201  01793A                     l1335:
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;eadog.c: 27:   __nop();
  6205  01793A  F000               	nop	
  6206  01793C  0004               	clrwdt		;# 
  6207                           
  6208                           ;eadog.c: 29:  };
  6209  01793E  0E01               	movlw	1
  6210  017940  0100               	movlb	0	; () banked
  6211  017942  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  6212  017944  0E00               	movlw	0
  6213  017946  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6214  017948  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6215  01794A  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;stkvar	_delay @ sp[(0)+-4]
  6219  01794C  0EFC               	movlw	-4
  6220  01794E  006F FF8C  F032    	movff	plusw1,btemp
  6221  017954  5190               	movf	wdtdelay@dcount& (0+255),w,b
  6222  017956  5C32               	subwf	btemp^0,w,c
  6223  017958  0EFD               	movlw	-3
  6224  01795A  006F FF8C  F032    	movff	plusw1,btemp
  6225  017960  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6226  017962  5832               	subwfb	btemp^0,w,c
  6227  017964  0EFE               	movlw	-2
  6228  017966  006F FF8C  F032    	movff	plusw1,btemp
  6229  01796C  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6230  01796E  5832               	subwfb	btemp^0,w,c
  6231  017970  0EFF               	movlw	-1
  6232  017972  006F FF8C  F032    	movff	plusw1,btemp
  6233  017978  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6234  01797A  5832               	subwfb	btemp^0,w,c
  6235  01797C  B0D8               	btfsc	status,0,c
  6236  01797E  D7DD               	goto	l1335
  6237                           
  6238                           ; BSR set to: 0
  6239                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6240  017980  52E5               	movf	postdec1,f,c
  6241  017982  52E5               	movf	postdec1,f,c
  6242  017984  52E5               	movf	postdec1,f,c
  6243  017986  52E5               	movf	postdec1,f,c
  6244  017988  0012               	return		;funcret
  6245  01798A                     __end_of_wdtdelay:
  6246                           	opt callstack 0
  6247                           
  6248 ;; *************** function _eaDogM_WriteString *****************
  6249 ;; Defined at:
  6250 ;;		line 184 in file "eadog.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  strPtr          2  [STACK] PTR unsigned char 
  6253 ;;		 -> D.lcd(216), D(218), V(228), 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1  [STACK] void 
  6258 ;; Registers used:
  6259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6260 ;; Tracked objects:
  6261 ;;		On entry : 3F/0
  6262 ;;		On exit  : 3F/3B
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6269 ;;Total ram usage:        0 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:   15
  6272 ;; This function calls:
  6273 ;;		_printf
  6274 ;;		_ringBufS_flush
  6275 ;;		_start_lcd
  6276 ;;		_strlen
  6277 ;;		_wait_lcd_set
  6278 ;; This function is called by:
  6279 ;;		_eaDogM_WriteStringAtPos
  6280 ;; This function uses a reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text31
  6284  016FBC                     __ptext31:
  6285                           	opt callstack 0
  6286  016FBC                     _eaDogM_WriteString:
  6287                           	opt callstack 13
  6288                           
  6289                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6290                           
  6291                           ; BSR set to: 0
  6292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6293                           ;incstack = 0
  6294  016FBC  EC1E  F0C3         	call	_wait_lcd_set	;wreg free
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6298  016FC0  0E00               	movlw	0
  6299  016FC2  6EE6               	movwf	postinc1,c
  6300  016FC4  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  6301  016FCA  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  6302  016FD0  ECCE  F0B8         	call	_ringBufS_flush	;wreg free
  6303  016FD4  94BC               	bcf	188,2,c	;volatile
  6304                           
  6305                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6306                           ;stkvar	_strPtr @ sp[(0)+-2]
  6307  016FD6  0EFE               	movlw	-2
  6308  016FD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6309  016FDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6310  016FE4  EC31  F0B8         	call	_strlen	;wreg free
  6311  016FE8  5033               	movf	(btemp+1)^0,w,c
  6312  016FEA  E104               	bnz	u10170
  6313  016FEC  0E41               	movlw	65
  6314  016FEE  5C32               	subwf	btemp^0,w,c
  6315  016FF0  A0D8               	btfss	status,0,c
  6316  016FF2  D010               	goto	l10013
  6317  016FF4                     u10170:
  6318                           
  6319                           ;stkvar	_strPtr @ sp[(0)+-2]
  6320  016FF4  0EFE               	movlw	-2
  6321  016FF6  006F FF8C  F03C    	movff	plusw1,btemp+10
  6322  016FFC  0EFF               	movlw	-1
  6323  016FFE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6324  017004  0E40               	movlw	64
  6325  017006  243C               	addwf	(btemp+10)^0,w,c
  6326  017008  6ED9               	movwf	fsr2l,c
  6327  01700A  0E00               	movlw	0
  6328  01700C  203D               	addwfc	(btemp+11)^0,w,c
  6329  01700E  6EDA               	movwf	fsr2h,c
  6330  017010  0E00               	movlw	0
  6331  017012  6EDF               	movwf	indf2,c
  6332  017014                     l10013:
  6333                           
  6334                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6335  017014  013B               	movlb	59	; () banked
  6336  017016  9FFC               	bcf	252,7,b	;volatile
  6337                           
  6338                           ; BSR set to: 59
  6339                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6340                           ;stkvar	_strPtr @ sp[(0)+-2]
  6341  017018  0EFE               	movlw	-2
  6342  01701A  006F FF8F FFE6     	movff	plusw1,postinc1
  6343  017020  006F FF8F FFE6     	movff	plusw1,postinc1
  6344  017026  EC31  F0B8         	call	_strlen	;wreg free
  6345  01702A  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6346  017030  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6347                           
  6348                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6349  017036  013B               	movlb	59	; () banked
  6350  017038  8FFC               	bsf	252,7,b	;volatile
  6351                           
  6352                           ; BSR set to: 59
  6353                           ;eadog.c: 195:  printf("%s", strPtr);
  6354                           ;stkvar	_strPtr @ sp[(0)+-2]
  6355  01703A  0EFE               	movlw	-2
  6356  01703C  006F FF8F FFE6     	movff	plusw1,postinc1
  6357  017042  006F FF8F FFE6     	movff	plusw1,postinc1
  6358  017048  0EFB               	movlw	low STR_12
  6359  01704A  6EE6               	movwf	postinc1,c
  6360  01704C  0EFF               	movlw	high STR_12
  6361  01704E  6EE6               	movwf	postinc1,c
  6362  017050  0E04               	movlw	4
  6363  017052  6EE6               	movwf	postinc1,c
  6364  017054  EC0A  F0BC         	call	_printf	;wreg free
  6365                           
  6366                           ;eadog.c: 196:  start_lcd();
  6367  017058  EC21  F0C3         	call	_start_lcd	;wreg free
  6368                           
  6369                           ; BSR set to: 59
  6370                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6371  01705C  52E5               	movf	postdec1,f,c
  6372  01705E  52E5               	movf	postdec1,f,c
  6373  017060  0012               	return		;funcret
  6374  017062                     __end_of_eaDogM_WriteString:
  6375                           	opt callstack 0
  6376                           
  6377 ;; *************** function _wait_lcd_set *****************
  6378 ;; Defined at:
  6379 ;;		line 131 in file "eadog.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;		None
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;		None
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  1  [STACK] void 
  6386 ;; Registers used:
  6387 ;;		None
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/3D
  6390 ;;		On exit  : 3F/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6397 ;;Total ram usage:        0 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    6
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_eaDogM_WriteString
  6404 ;;		_send_lcd_cmd_dma
  6405 ;; This function uses a reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text32
  6409  01863C                     __ptext32:
  6410                           	opt callstack 0
  6411  01863C                     _wait_lcd_set:
  6412                           	opt callstack 21
  6413                           
  6414                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6415                           
  6416                           ; BSR set to: 59
  6417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6418                           ;incstack = 0
  6419  01863C  0100               	movlb	0	; () banked
  6420  01863E  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6421                           
  6422                           ; BSR set to: 0
  6423                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6424  018640  0012               	return		;funcret
  6425  018642                     __end_of_wait_lcd_set:
  6426                           	opt callstack 0
  6427                           
  6428 ;; *************** function _start_lcd *****************
  6429 ;; Defined at:
  6430 ;;		line 126 in file "eadog.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1  [STACK] void 
  6437 ;; Registers used:
  6438 ;;		None
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/3B
  6441 ;;		On exit  : 3F/3B
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    6
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_eaDogM_WriteString
  6455 ;;		_send_lcd_cmd_dma
  6456 ;; This function uses a reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text33
  6460  018642                     __ptext33:
  6461                           	opt callstack 0
  6462  018642                     _start_lcd:
  6463                           	opt callstack 21
  6464                           
  6465                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6466                           
  6467                           ; BSR set to: 0
  6468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6469                           ;incstack = 0
  6470  018642  013B               	movlb	59	; () banked
  6471  018644  8DFC               	bsf	252,6,b	;volatile
  6472                           
  6473                           ; BSR set to: 59
  6474                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6475  018646  0012               	return		;funcret
  6476  018648                     __end_of_start_lcd:
  6477                           	opt callstack 0
  6478                           
  6479 ;; *************** function _ringBufS_flush *****************
  6480 ;; Defined at:
  6481 ;;		line 76 in file "ringbufs.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6484 ;;		 -> ring_buf1(67), 
  6485 ;;  clearBuffer     1  [STACK] const char 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1  [STACK] void 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6492 ;; Tracked objects:
  6493 ;;		On entry : 3F/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6501 ;;Total ram usage:        0 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    7
  6504 ;; This function calls:
  6505 ;;		_memset
  6506 ;; This function is called by:
  6507 ;;		_eaDogM_WriteString
  6508 ;;		_send_lcd_cmd_dma
  6509 ;; This function uses a reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text34
  6513  01719C                     __ptext34:
  6514                           	opt callstack 0
  6515  01719C                     _ringBufS_flush:
  6516                           	opt callstack 20
  6517                           
  6518                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6519                           ;stkvar	__this @ sp[(0)+-2]
  6520                           
  6521                           ; BSR set to: 59
  6522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6523                           ;incstack = 0
  6524  01719C  0EFE               	movlw	-2
  6525  01719E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6526  0171A4  0EFF               	movlw	-1
  6527  0171A6  006F FF8C  F03D    	movff	plusw1,btemp+11
  6528  0171AC  0E42               	movlw	66
  6529  0171AE  243C               	addwf	(btemp+10)^0,w,c
  6530  0171B0  6ED9               	movwf	fsr2l,c
  6531  0171B2  0E00               	movlw	0
  6532  0171B4  203D               	addwfc	(btemp+11)^0,w,c
  6533  0171B6  6EDA               	movwf	fsr2h,c
  6534  0171B8  0E00               	movlw	0
  6535  0171BA  6EDF               	movwf	indf2,c
  6536                           
  6537                           ;ringbufs.c: 79:  _this->head = 0;
  6538                           ;stkvar	__this @ sp[(0)+-2]
  6539  0171BC  0EFE               	movlw	-2
  6540  0171BE  006F FF8C  F03C    	movff	plusw1,btemp+10
  6541  0171C4  0EFF               	movlw	-1
  6542  0171C6  006F FF8C  F03D    	movff	plusw1,btemp+11
  6543  0171CC  0E40               	movlw	64
  6544  0171CE  243C               	addwf	(btemp+10)^0,w,c
  6545  0171D0  6ED9               	movwf	fsr2l,c
  6546  0171D2  0E00               	movlw	0
  6547  0171D4  203D               	addwfc	(btemp+11)^0,w,c
  6548  0171D6  6EDA               	movwf	fsr2h,c
  6549  0171D8  0E00               	movlw	0
  6550  0171DA  6EDF               	movwf	indf2,c
  6551                           
  6552                           ;ringbufs.c: 80:  _this->tail = 0;
  6553                           ;stkvar	__this @ sp[(0)+-2]
  6554  0171DC  0EFE               	movlw	-2
  6555  0171DE  006F FF8C  F03C    	movff	plusw1,btemp+10
  6556  0171E4  0EFF               	movlw	-1
  6557  0171E6  006F FF8C  F03D    	movff	plusw1,btemp+11
  6558  0171EC  0E41               	movlw	65
  6559  0171EE  243C               	addwf	(btemp+10)^0,w,c
  6560  0171F0  6ED9               	movwf	fsr2l,c
  6561  0171F2  0E00               	movlw	0
  6562  0171F4  203D               	addwfc	(btemp+11)^0,w,c
  6563  0171F6  6EDA               	movwf	fsr2h,c
  6564  0171F8  0E00               	movlw	0
  6565  0171FA  6EDF               	movwf	indf2,c
  6566                           
  6567                           ;ringbufs.c: 81:  if (clearBuffer) {
  6568                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6569  0171FC  0EFD               	movlw	-3
  6570  0171FE  50E3               	movf	plusw1,w,c
  6571  017200  B4D8               	btfsc	status,2,c
  6572  017202  D011               	goto	l1475
  6573                           
  6574                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6575  017204  0E40               	movlw	64
  6576  017206  6EE6               	movwf	postinc1,c
  6577  017208  0E00               	movlw	0
  6578  01720A  6EE6               	movwf	postinc1,c
  6579  01720C  0E00               	movlw	0
  6580  01720E  6EE6               	movwf	postinc1,c
  6581  017210  0E00               	movlw	0
  6582  017212  6EE6               	movwf	postinc1,c
  6583                           
  6584                           ;stkvar	__this @ sp[(-4)+-2]
  6585  017214  0EFA               	movlw	-6
  6586  017216  006F FF8F FFE6     	movff	plusw1,postinc1
  6587  01721C  006F FF8F FFE6     	movff	plusw1,postinc1
  6588  017222  EC0C  F0A4         	call	_memset	;wreg free
  6589  017226                     l1475:
  6590                           
  6591                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6592  017226  52E5               	movf	postdec1,f,c
  6593  017228  52E5               	movf	postdec1,f,c
  6594  01722A  52E5               	movf	postdec1,f,c
  6595  01722C  0012               	return		;funcret
  6596  01722E                     __end_of_ringBufS_flush:
  6597                           	opt callstack 0
  6598                           
  6599 ;; *************** function _memset *****************
  6600 ;; Defined at:
  6601 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  dest            2  [STACK] PTR void 
  6604 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6605 ;;  c               2  [STACK] int 
  6606 ;;  n               2  [STACK] unsigned int 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;  s               2  [STACK] PTR unsigned char 
  6609 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6610 ;;  k               2  [STACK] unsigned int 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2  [STACK] PTR void 
  6613 ;; Registers used:
  6614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    6
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_ringBufS_init
  6631 ;;		_ringBufS_flush
  6632 ;; This function uses a reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text35
  6636  014818                     __ptext35:
  6637                           	opt callstack 0
  6638  014818                     _memset:
  6639                           	opt callstack 0
  6640                           
  6641                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6642  014818  52E6               	movf	postinc1,f,c
  6643  01481A  52E6               	movf	postinc1,f,c
  6644  01481C  52E6               	movf	postinc1,f,c
  6645  01481E  52E6               	movf	postinc1,f,c
  6646                           
  6647                           ;stkvar	_dest @ sp[(-4)+-2]
  6648                           
  6649                           ;incstack = 0
  6650  014820  0EFA               	movlw	-6
  6651  014822  006F FF8C  F03C    	movff	plusw1,btemp+10
  6652  014828  0EFB               	movlw	-5
  6653  01482A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6654                           
  6655                           ;stkvar	_s @ sp[(-4)+0]
  6656  014830  0EFD               	movlw	-3
  6657  014832  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6658  014838  0EFC               	movlw	-4
  6659  01483A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6660                           
  6661                           ;stkvar	_n @ sp[(-4)+-6]
  6662  014840  0EF6               	movlw	-10
  6663  014842  006F FF8C  F032    	movff	plusw1,btemp
  6664  014848  0EF7               	movlw	-9
  6665  01484A  50E3               	movf	plusw1,w,c
  6666  01484C  1032               	iorwf	btemp^0,w,c
  6667  01484E  B4D8               	btfsc	status,2,c
  6668  014850  D154               	goto	u10140
  6669                           
  6670                           ;stkvar	_c @ sp[(-4)+-4]
  6671                           ;stkvar	_s @ sp[(-4)+0]
  6672  014852  0EFC               	movlw	-4
  6673  014854  006F FF8F FFD9     	movff	plusw1,fsr2l
  6674  01485A  0EFD               	movlw	-3
  6675  01485C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6676  014862  0EF8               	movlw	-8
  6677  014864  006F FF8F FFDF     	movff	plusw1,indf2
  6678                           
  6679                           ;stkvar	_c @ sp[(-4)+-4]
  6680                           ;stkvar	_n @ sp[(-4)+-6]
  6681                           ;stkvar	_s @ sp[(-4)+0]
  6682  01486A  0EFC               	movlw	-4
  6683  01486C  006F FF8C  F03C    	movff	plusw1,btemp+10
  6684  014872  0EFD               	movlw	-3
  6685  014874  006F FF8C  F03D    	movff	plusw1,btemp+11
  6686  01487A  0EF6               	movlw	-10
  6687  01487C  50E3               	movf	plusw1,w,c
  6688  01487E  263C               	addwf	(btemp+10)^0,f,c
  6689  014880  0EF7               	movlw	-9
  6690  014882  50E3               	movf	plusw1,w,c
  6691  014884  223D               	addwfc	(btemp+11)^0,f,c
  6692  014886  0EFF               	movlw	255
  6693  014888  243C               	addwf	(btemp+10)^0,w,c
  6694  01488A  6ED9               	movwf	fsr2l,c
  6695  01488C  0EFF               	movlw	255
  6696  01488E  203D               	addwfc	(btemp+11)^0,w,c
  6697  014890  6EDA               	movwf	fsr2h,c
  6698  014892  0EF8               	movlw	-8
  6699  014894  006F FF8F FFDF     	movff	plusw1,indf2
  6700                           
  6701                           ;stkvar	_n @ sp[(-4)+-6]
  6702  01489A  0EF7               	movlw	-9
  6703  01489C  50E3               	movf	plusw1,w,c
  6704  01489E  E108               	bnz	l9929
  6705  0148A0  0EF6               	movlw	-10
  6706  0148A2  006F FF8C  F032    	movff	plusw1,btemp
  6707  0148A8  0E03               	movlw	3
  6708  0148AA  5E32               	subwf	btemp^0,f,c
  6709  0148AC  A0D8               	btfss	status,0,c
  6710  0148AE  D125               	goto	u10140
  6711  0148B0                     l9929:
  6712                           
  6713                           ;stkvar	_c @ sp[(-4)+-4]
  6714                           ;stkvar	_s @ sp[(-4)+0]
  6715  0148B0  0EFC               	movlw	-4
  6716  0148B2  006F FF8C  F03C    	movff	plusw1,btemp+10
  6717  0148B8  0EFD               	movlw	-3
  6718  0148BA  006F FF8C  F03D    	movff	plusw1,btemp+11
  6719  0148C0  0E01               	movlw	1
  6720  0148C2  243C               	addwf	(btemp+10)^0,w,c
  6721  0148C4  6ED9               	movwf	fsr2l,c
  6722  0148C6  0E00               	movlw	0
  6723  0148C8  203D               	addwfc	(btemp+11)^0,w,c
  6724  0148CA  6EDA               	movwf	fsr2h,c
  6725  0148CC  0EF8               	movlw	-8
  6726  0148CE  006F FF8F FFDF     	movff	plusw1,indf2
  6727                           
  6728                           ;stkvar	_c @ sp[(-4)+-4]
  6729                           ;stkvar	_s @ sp[(-4)+0]
  6730  0148D4  0EFC               	movlw	-4
  6731  0148D6  006F FF8C  F03C    	movff	plusw1,btemp+10
  6732  0148DC  0EFD               	movlw	-3
  6733  0148DE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6734  0148E4  0E02               	movlw	2
  6735  0148E6  243C               	addwf	(btemp+10)^0,w,c
  6736  0148E8  6ED9               	movwf	fsr2l,c
  6737  0148EA  0E00               	movlw	0
  6738  0148EC  203D               	addwfc	(btemp+11)^0,w,c
  6739  0148EE  6EDA               	movwf	fsr2h,c
  6740  0148F0  0EF8               	movlw	-8
  6741  0148F2  006F FF8F FFDF     	movff	plusw1,indf2
  6742                           
  6743                           ;stkvar	_c @ sp[(-4)+-4]
  6744                           ;stkvar	_n @ sp[(-4)+-6]
  6745                           ;stkvar	_s @ sp[(-4)+0]
  6746  0148F8  0EFC               	movlw	-4
  6747  0148FA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6748  014900  0EFD               	movlw	-3
  6749  014902  006F FF8C  F03D    	movff	plusw1,btemp+11
  6750  014908  0EF6               	movlw	-10
  6751  01490A  50E3               	movf	plusw1,w,c
  6752  01490C  263C               	addwf	(btemp+10)^0,f,c
  6753  01490E  0EF7               	movlw	-9
  6754  014910  50E3               	movf	plusw1,w,c
  6755  014912  223D               	addwfc	(btemp+11)^0,f,c
  6756  014914  0EFE               	movlw	254
  6757  014916  243C               	addwf	(btemp+10)^0,w,c
  6758  014918  6ED9               	movwf	fsr2l,c
  6759  01491A  0EFF               	movlw	255
  6760  01491C  203D               	addwfc	(btemp+11)^0,w,c
  6761  01491E  6EDA               	movwf	fsr2h,c
  6762  014920  0EF8               	movlw	-8
  6763  014922  006F FF8F FFDF     	movff	plusw1,indf2
  6764                           
  6765                           ;stkvar	_c @ sp[(-4)+-4]
  6766                           ;stkvar	_n @ sp[(-4)+-6]
  6767                           ;stkvar	_s @ sp[(-4)+0]
  6768  014928  0EFC               	movlw	-4
  6769  01492A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6770  014930  0EFD               	movlw	-3
  6771  014932  006F FF8C  F03D    	movff	plusw1,btemp+11
  6772  014938  0EF6               	movlw	-10
  6773  01493A  50E3               	movf	plusw1,w,c
  6774  01493C  263C               	addwf	(btemp+10)^0,f,c
  6775  01493E  0EF7               	movlw	-9
  6776  014940  50E3               	movf	plusw1,w,c
  6777  014942  223D               	addwfc	(btemp+11)^0,f,c
  6778  014944  0EFD               	movlw	253
  6779  014946  243C               	addwf	(btemp+10)^0,w,c
  6780  014948  6ED9               	movwf	fsr2l,c
  6781  01494A  0EFF               	movlw	255
  6782  01494C  203D               	addwfc	(btemp+11)^0,w,c
  6783  01494E  6EDA               	movwf	fsr2h,c
  6784  014950  0EF8               	movlw	-8
  6785  014952  006F FF8F FFDF     	movff	plusw1,indf2
  6786                           
  6787                           ;stkvar	_n @ sp[(-4)+-6]
  6788  014958  0EF7               	movlw	-9
  6789  01495A  50E3               	movf	plusw1,w,c
  6790  01495C  E108               	bnz	l9935
  6791  01495E  0EF6               	movlw	-10
  6792  014960  006F FF8C  F032    	movff	plusw1,btemp
  6793  014966  0E07               	movlw	7
  6794  014968  5E32               	subwf	btemp^0,f,c
  6795  01496A  A0D8               	btfss	status,0,c
  6796  01496C  D0C6               	goto	u10140
  6797  01496E                     l9935:
  6798                           
  6799                           ;stkvar	_c @ sp[(-4)+-4]
  6800                           ;stkvar	_s @ sp[(-4)+0]
  6801  01496E  0EFC               	movlw	-4
  6802  014970  006F FF8C  F03C    	movff	plusw1,btemp+10
  6803  014976  0EFD               	movlw	-3
  6804  014978  006F FF8C  F03D    	movff	plusw1,btemp+11
  6805  01497E  0E03               	movlw	3
  6806  014980  243C               	addwf	(btemp+10)^0,w,c
  6807  014982  6ED9               	movwf	fsr2l,c
  6808  014984  0E00               	movlw	0
  6809  014986  203D               	addwfc	(btemp+11)^0,w,c
  6810  014988  6EDA               	movwf	fsr2h,c
  6811  01498A  0EF8               	movlw	-8
  6812  01498C  006F FF8F FFDF     	movff	plusw1,indf2
  6813                           
  6814                           ;stkvar	_c @ sp[(-4)+-4]
  6815                           ;stkvar	_n @ sp[(-4)+-6]
  6816                           ;stkvar	_s @ sp[(-4)+0]
  6817  014992  0EFC               	movlw	-4
  6818  014994  006F FF8C  F03C    	movff	plusw1,btemp+10
  6819  01499A  0EFD               	movlw	-3
  6820  01499C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6821  0149A2  0EF6               	movlw	-10
  6822  0149A4  50E3               	movf	plusw1,w,c
  6823  0149A6  263C               	addwf	(btemp+10)^0,f,c
  6824  0149A8  0EF7               	movlw	-9
  6825  0149AA  50E3               	movf	plusw1,w,c
  6826  0149AC  223D               	addwfc	(btemp+11)^0,f,c
  6827  0149AE  0EFC               	movlw	252
  6828  0149B0  243C               	addwf	(btemp+10)^0,w,c
  6829  0149B2  6ED9               	movwf	fsr2l,c
  6830  0149B4  0EFF               	movlw	255
  6831  0149B6  203D               	addwfc	(btemp+11)^0,w,c
  6832  0149B8  6EDA               	movwf	fsr2h,c
  6833  0149BA  0EF8               	movlw	-8
  6834  0149BC  006F FF8F FFDF     	movff	plusw1,indf2
  6835                           
  6836                           ;stkvar	_n @ sp[(-4)+-6]
  6837  0149C2  0EF7               	movlw	-9
  6838  0149C4  50E3               	movf	plusw1,w,c
  6839  0149C6  E108               	bnz	l9941
  6840  0149C8  0EF6               	movlw	-10
  6841  0149CA  006F FF8C  F032    	movff	plusw1,btemp
  6842  0149D0  0E09               	movlw	9
  6843  0149D2  5E32               	subwf	btemp^0,f,c
  6844  0149D4  A0D8               	btfss	status,0,c
  6845  0149D6  D091               	goto	u10140
  6846  0149D8                     l9941:
  6847                           
  6848                           ;stkvar	_s @ sp[(-4)+0]
  6849  0149D8  0EFC               	movlw	-4
  6850  0149DA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6851  0149E0  1E3C               	comf	(btemp+10)^0,f,c
  6852  0149E2  0EFD               	movlw	-3
  6853  0149E4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6854  0149EA  1E3D               	comf	(btemp+11)^0,f,c
  6855  0149EC  2A3C               	incf	(btemp+10)^0,f,c
  6856  0149EE  B4D8               	btfsc	status,2,c
  6857  0149F0  2A3D               	incf	(btemp+11)^0,f,c
  6858  0149F2  0E03               	movlw	3
  6859  0149F4  163C               	andwf	(btemp+10)^0,f,c
  6860  0149F6  0E00               	movlw	0
  6861  0149F8  163D               	andwf	(btemp+11)^0,f,c
  6862                           
  6863                           ;stkvar	_k @ sp[(-4)+2]
  6864  0149FA  0EFE               	movlw	-2
  6865  0149FC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6866  014A02  0EFF               	movlw	-1
  6867  014A04  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6868                           
  6869                           ;stkvar	_k @ sp[(-4)+2]
  6870                           ;stkvar	_s @ sp[(-4)+0]
  6871  014A0A  0EFC               	movlw	-4
  6872  014A0C  50E3               	movf	plusw1,w,c
  6873  014A0E  6E32               	movwf	btemp^0,c
  6874  014A10  0EFE               	movlw	-2
  6875  014A12  50E3               	movf	plusw1,w,c
  6876  014A14  2632               	addwf	btemp^0,f,c
  6877  014A16  0EFC               	movlw	-4
  6878  014A18  0060  F0CB  FFE3   	movff	btemp,plusw1
  6879  014A1E  0EFD               	movlw	-3
  6880  014A20  50E3               	movf	plusw1,w,c
  6881  014A22  6E32               	movwf	btemp^0,c
  6882  014A24  0EFF               	movlw	-1
  6883  014A26  50E3               	movf	plusw1,w,c
  6884  014A28  2232               	addwfc	btemp^0,f,c
  6885  014A2A  0EFD               	movlw	-3
  6886  014A2C  0060  F0CB  FFE3   	movff	btemp,plusw1
  6887                           
  6888                           ;stkvar	_k @ sp[(-4)+2]
  6889                           ;stkvar	_n @ sp[(-4)+-6]
  6890  014A32  0EF6               	movlw	-10
  6891  014A34  50E3               	movf	plusw1,w,c
  6892  014A36  6E32               	movwf	btemp^0,c
  6893  014A38  0EFE               	movlw	-2
  6894  014A3A  50E3               	movf	plusw1,w,c
  6895  014A3C  5E32               	subwf	btemp^0,f,c
  6896  014A3E  0EF6               	movlw	-10
  6897  014A40  0060  F0CB  FFE3   	movff	btemp,plusw1
  6898  014A46  0EF7               	movlw	-9
  6899  014A48  50E3               	movf	plusw1,w,c
  6900  014A4A  6E32               	movwf	btemp^0,c
  6901  014A4C  0EFF               	movlw	-1
  6902  014A4E  50E3               	movf	plusw1,w,c
  6903  014A50  5A32               	subwfb	btemp^0,f,c
  6904  014A52  0EF7               	movlw	-9
  6905  014A54  0060  F0CB  FFE3   	movff	btemp,plusw1
  6906  014A5A  0EFC               	movlw	252
  6907  014A5C  6E3C               	movwf	(btemp+10)^0,c
  6908  014A5E  0EFF               	movlw	255
  6909  014A60  6E3D               	movwf	(btemp+11)^0,c
  6910                           
  6911                           ;stkvar	_n @ sp[(-4)+-6]
  6912  014A62  0EF6               	movlw	-10
  6913  014A64  006F FF8C  F032    	movff	plusw1,btemp
  6914  014A6A  503C               	movf	(btemp+10)^0,w,c
  6915  014A6C  1632               	andwf	btemp^0,f,c
  6916  014A6E  0EF6               	movlw	-10
  6917  014A70  0060  F0CB  FFE3   	movff	btemp,plusw1
  6918  014A76  0EF7               	movlw	-9
  6919  014A78  006F FF8C  F032    	movff	plusw1,btemp
  6920  014A7E  503D               	movf	(btemp+11)^0,w,c
  6921  014A80  1632               	andwf	btemp^0,f,c
  6922  014A82  0EF7               	movlw	-9
  6923  014A84  D02E               	goto	L5
  6924  014A86                     l9949:
  6925                           
  6926                           ;stkvar	_c @ sp[(-4)+-4]
  6927                           ;stkvar	_s @ sp[(-4)+0]
  6928  014A86  0EFC               	movlw	-4
  6929  014A88  006F FF8F FFD9     	movff	plusw1,fsr2l
  6930  014A8E  0EFD               	movlw	-3
  6931  014A90  006F FF8F FFDA     	movff	plusw1,fsr2h
  6932  014A96  0EF8               	movlw	-8
  6933  014A98  006F FF8F FFDF     	movff	plusw1,indf2
  6934                           
  6935                           ;stkvar	_n @ sp[(-4)+-6]
  6936  014A9E  0EF6               	movlw	-10
  6937  014AA0  006F FF8C  F032    	movff	plusw1,btemp
  6938  014AA6  0E01               	movlw	1
  6939  014AA8  5E32               	subwf	btemp^0,f,c
  6940  014AAA  0EF6               	movlw	-10
  6941  014AAC  0060  F0CB  FFE3   	movff	btemp,plusw1
  6942  014AB2  0EF7               	movlw	-9
  6943  014AB4  006F FF8C  F032    	movff	plusw1,btemp
  6944  014ABA  0E00               	movlw	0
  6945  014ABC  5A32               	subwfb	btemp^0,f,c
  6946  014ABE  0EF7               	movlw	-9
  6947  014AC0  0060  F0CB  FFE3   	movff	btemp,plusw1
  6948                           
  6949                           ;stkvar	_s @ sp[(-4)+0]
  6950  014AC6  0EFC               	movlw	-4
  6951  014AC8  50E3               	movf	plusw1,w,c
  6952  014ACA  0F01               	addlw	1
  6953  014ACC  6E32               	movwf	btemp^0,c
  6954  014ACE  0EFC               	movlw	-4
  6955  014AD0  0060  F0CB  FFE3   	movff	btemp,plusw1
  6956  014AD6  6A32               	clrf	btemp^0,c
  6957  014AD8  0EFD               	movlw	-3
  6958  014ADA  50E3               	movf	plusw1,w,c
  6959  014ADC  2032               	addwfc	btemp^0,w,c
  6960  014ADE  6E32               	movwf	btemp^0,c
  6961  014AE0  0EFD               	movlw	-3
  6962  014AE2                     L5:
  6963  014AE2  0060  F0CB  FFE3   	movff	btemp,plusw1
  6964                           
  6965                           ;stkvar	_n @ sp[(-4)+-6]
  6966  014AE8  0EF6               	movlw	-10
  6967  014AEA  006F FF8C  F032    	movff	plusw1,btemp
  6968  014AF0  0EF7               	movlw	-9
  6969  014AF2  50E3               	movf	plusw1,w,c
  6970  014AF4  1032               	iorwf	btemp^0,w,c
  6971  014AF6  A4D8               	btfss	status,2,c
  6972  014AF8  D7C6               	goto	l9949
  6973  014AFA                     u10140:
  6974                           
  6975                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6976  014AFA  0EF6               	movlw	246
  6977  014AFC  26E1               	addwf	fsr1l,f,c
  6978  014AFE  0EFF               	movlw	255
  6979  014B00  22E2               	addwfc	fsr1h,f,c
  6980  014B02  0012               	return		;funcret
  6981  014B04                     __end_of_memset:
  6982                           	opt callstack 0
  6983                           
  6984 ;; *************** function _printf *****************
  6985 ;; Defined at:
  6986 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  fmt             2  [STACK] PTR const unsigned char 
  6989 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  ap              2  [STACK] PTR void [1]
  6992 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6993 ;;  ret             2    0        int 
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  2  [STACK] int 
  6996 ;; Registers used:
  6997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6998 ;; Tracked objects:
  6999 ;;		On entry : 3F/3B
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7007 ;;Total ram usage:        0 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:   14
  7010 ;; This function calls:
  7011 ;;		_vfprintf
  7012 ;; This function is called by:
  7013 ;;		_eaDogM_WriteString
  7014 ;;		_send_lcd_cmd_dma
  7015 ;; This function uses a reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text36
  7019  017814                     __ptext36:
  7020                           	opt callstack 0
  7021  017814                     _printf:
  7022                           	opt callstack 0
  7023                           
  7024                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7025  017814  52E6               	movf	postinc1,f,c
  7026  017816  52E6               	movf	postinc1,f,c
  7027                           
  7028                           ;stkvar	?_printf @ sp[(-2)+-3]
  7029                           
  7030                           ;incstack = 0
  7031  017818  0EFB               	movlw	251
  7032  01781A  24E1               	addwf	fsr1l,w,c
  7033  01781C  6E3C               	movwf	(btemp+10)^0,c
  7034  01781E  0EFF               	movlw	255
  7035  017820  20E2               	addwfc	fsr1h,w,c
  7036  017822  6E3D               	movwf	(btemp+11)^0,c
  7037                           
  7038                           ;stkvar	_ap @ sp[(-2)+0]
  7039  017824  0EFF               	movlw	-1
  7040  017826  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7041  01782C  0EFE               	movlw	-2
  7042  01782E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7043                           
  7044                           ;stkvar	_ap @ sp[(-2)+0]
  7045  017834  0EFE               	movlw	254
  7046  017836  24E1               	addwf	fsr1l,w,c
  7047  017838  6E32               	movwf	btemp^0,c
  7048  01783A  0EFF               	movlw	255
  7049  01783C  20E2               	addwfc	fsr1h,w,c
  7050  01783E  6E33               	movwf	(btemp+1)^0,c
  7051  017840  0060  F0CB  FFE6   	movff	btemp,postinc1
  7052  017846  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7053                           
  7054                           ;stkvar	_fmt @ sp[(-4)+-3]
  7055  01784C  0EF9               	movlw	-7
  7056  01784E  006F FF8F FFE6     	movff	plusw1,postinc1
  7057  017854  006F FF8F FFE6     	movff	plusw1,postinc1
  7058  01785A  0E00               	movlw	0
  7059  01785C  6EE6               	movwf	postinc1,c
  7060  01785E  0E00               	movlw	0
  7061  017860  6EE6               	movwf	postinc1,c
  7062  017862  EC8A  F0B7         	call	_vfprintf	;wreg free
  7063                           
  7064                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7065  017866  52E5               	movf	postdec1,f,c
  7066  017868  52E5               	movf	postdec1,f,c
  7067  01786A  52E5               	movf	postdec1,f,c
  7068  01786C  50E7               	movf	indf1,w,c
  7069  01786E  5EE1               	subwf	fsr1l,f,c
  7070  017870  0E00               	movlw	0
  7071  017872  5AE2               	subwfb	fsr1h,f,c
  7072  017874  0012               	return		;funcret
  7073  017876                     __end_of_printf:
  7074                           	opt callstack 0
  7075                           
  7076 ;; *************** function _vfprintf *****************
  7077 ;; Defined at:
  7078 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7081 ;;		 -> f(6), NULL(0), 
  7082 ;;  fmt             2  [STACK] PTR const unsigned char 
  7083 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7084 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7085 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7086 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7087 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7088 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7089 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7090 ;;  ap              2  [STACK] PTR PTR void 
  7091 ;;		 -> ap(2), ap(2), 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;  cfmt            2  [STACK] PTR unsigned char 
  7094 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7095 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7096 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7097 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7098 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7099 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7100 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  2  [STACK] int 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/5
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:   13
  7117 ;; This function calls:
  7118 ;;		_vfpfcnvrt
  7119 ;; This function is called by:
  7120 ;;		_sprintf
  7121 ;;		_printf
  7122 ;; This function uses a reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text37
  7126  016F14                     __ptext37:
  7127                           	opt callstack 0
  7128  016F14                     _vfprintf:
  7129                           	opt callstack 0
  7130                           
  7131                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7132  016F14  52E6               	movf	postinc1,f,c
  7133  016F16  52E6               	movf	postinc1,f,c
  7134                           
  7135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7136                           ;stkvar	_fmt @ sp[(-2)+-4]
  7137                           
  7138                           ;incstack = 0
  7139  016F18  0EFA               	movlw	-6
  7140  016F1A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7141  016F20  0EFB               	movlw	-5
  7142  016F22  006F FF8C  F03D    	movff	plusw1,btemp+11
  7143                           
  7144                           ;stkvar	_cfmt @ sp[(-2)+0]
  7145  016F28  0EFF               	movlw	-1
  7146  016F2A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7147  016F30  0EFE               	movlw	-2
  7148  016F32  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7149                           
  7150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7151  016F38  6A19               	clrf	_nout^0,c
  7152  016F3A  6A1A               	clrf	(_nout+1)^0,c
  7153                           
  7154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7155  016F3C  D020               	goto	l9963
  7156  016F3E                     l9961:
  7157                           
  7158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7159                           ;stkvar	_ap @ sp[(-2)+-6]
  7160  016F3E  0EF8               	movlw	-8
  7161  016F40  006F FF8F FFE6     	movff	plusw1,postinc1
  7162  016F46  006F FF8F FFE6     	movff	plusw1,postinc1
  7163                           
  7164                           ;stkvar	_cfmt @ sp[(-4)+0]
  7165  016F4C  0EFC               	movlw	252
  7166  016F4E  24E1               	addwf	fsr1l,w,c
  7167  016F50  6E32               	movwf	btemp^0,c
  7168  016F52  0EFF               	movlw	255
  7169  016F54  20E2               	addwfc	fsr1h,w,c
  7170  016F56  6E33               	movwf	(btemp+1)^0,c
  7171  016F58  0060  F0CB  FFE6   	movff	btemp,postinc1
  7172  016F5E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7173                           
  7174                           ;stkvar	_fp @ sp[(-6)+-2]
  7175  016F64  0EF8               	movlw	-8
  7176  016F66  006F FF8F FFE6     	movff	plusw1,postinc1
  7177  016F6C  006F FF8F FFE6     	movff	plusw1,postinc1
  7178  016F72  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7179  016F76  5032               	movf	btemp^0,w,c
  7180  016F78  2619               	addwf	_nout^0,f,c
  7181  016F7A  5033               	movf	(btemp+1)^0,w,c
  7182  016F7C  221A               	addwfc	(_nout+1)^0,f,c
  7183  016F7E                     l9963:
  7184                           
  7185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7186                           ;stkvar	_cfmt @ sp[(-2)+0]
  7187  016F7E  50E1               	movf	fsr1l,w,c
  7188  016F80  0FFE               	addlw	-2
  7189  016F82  6ED9               	movwf	fsr2l,c
  7190  016F84  50E2               	movf	fsr1h,w,c
  7191  016F86  6EDA               	movwf	fsr2h,c
  7192  016F88  0EFF               	movlw	255
  7193  016F8A  22DA               	addwfc	fsr2h,f,c
  7194  016F8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7195  016F92  006F FF77 FFF7     	movff	postdec2,tblptrh
  7196  016F98                     	if	0	;tblptru may be non-zero
  7197  016F98                     	endif
  7198  016F98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7199  016F98  0E00               	movlw	low (__mediumconst shr (0+16))
  7200  016F9A  6EF8               	movwf	tblptru,c
  7201  016F9C                     	endif
  7202  016F9C  0008               	tblrd		*
  7203  016F9E  50F5               	movf	tablat,w,c
  7204  016FA0  0900               	iorlw	0
  7205  016FA2  A4D8               	btfss	status,2,c
  7206  016FA4  D7CC               	goto	l9961
  7207                           
  7208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7209  016FA6  0060  F064  F032   	movff	_nout,btemp
  7210  016FAC  0060  F068  F033   	movff	_nout+1,btemp+1
  7211                           
  7212                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7213  016FB2  0EF8               	movlw	248
  7214  016FB4  26E1               	addwf	fsr1l,f,c
  7215  016FB6  0EFF               	movlw	255
  7216  016FB8  22E2               	addwfc	fsr1h,f,c
  7217  016FBA  0012               	return		;funcret
  7218  016FBC                     __end_of_vfprintf:
  7219                           	opt callstack 0
  7220                           
  7221 ;; *************** function _vfpfcnvrt *****************
  7222 ;; Defined at:
  7223 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7226 ;;		 -> f(6), NULL(0), 
  7227 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7228 ;;		 -> cfmt(2), 
  7229 ;;  ap              2  [STACK] PTR PTR void 
  7230 ;;		 -> ap(2), ap(2), 
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  llu             8  [STACK] unsigned long long 
  7233 ;;  ll              8  [STACK] long long 
  7234 ;;  f               4  [STACK] long long 
  7235 ;;  ct              3  [STACK] unsigned char [3]
  7236 ;;  vp              3    0        PTR void 
  7237 ;;  cp              2  [STACK] PTR unsigned char 
  7238 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7239 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7240 ;;		 -> STR_3(5), V(228), 
  7241 ;;  i               2    0        int 
  7242 ;;  done            2    0        int 
  7243 ;;  c               1  [STACK] unsigned char 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  2  [STACK] int 
  7246 ;; Registers used:
  7247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/5
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7257 ;;Total ram usage:        0 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:   12
  7260 ;; This function calls:
  7261 ;;		_atoi
  7262 ;;		_ctoa
  7263 ;;		_dtoa
  7264 ;;		_efgtoa
  7265 ;;		_fputc
  7266 ;;		_isdigit
  7267 ;;		_isupper
  7268 ;;		_stoa
  7269 ;;		_strncmp
  7270 ;;		_tolower
  7271 ;;		_xtoa
  7272 ;; This function is called by:
  7273 ;;		_vfprintf
  7274 ;; This function uses a reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text38
  7278  011244                     __ptext38:
  7279                           	opt callstack 0
  7280  011244                     _vfpfcnvrt:
  7281                           	opt callstack 0
  7282                           
  7283                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7284  011244  0E20               	movlw	32
  7285  011246  26E1               	addwf	fsr1l,f,c
  7286  011248  0E00               	movlw	0
  7287  01124A  22E2               	addwfc	fsr1h,f,c
  7288                           
  7289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7290                           ;stkvar	_fmt @ sp[(-32)+-4]
  7291                           
  7292                           ;incstack = 0
  7293  01124C  0EDC               	movlw	-36
  7294  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7295  011254  0EDD               	movlw	-35
  7296  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7297  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7298  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7299  011268                     	if	0	;tblptru may be non-zero
  7300  011268                     	endif
  7301  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7302  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7303  01126A  6EF8               	movwf	tblptru,c
  7304  01126C                     	endif
  7305  01126C  0008               	tblrd		*
  7306  01126E  50F5               	movf	tablat,w,c
  7307  011270  0A25               	xorlw	37
  7308  011272  A4D8               	btfss	status,2,c
  7309  011274  EF92  F08E         	goto	l9907
  7310                           
  7311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7312                           ;stkvar	_fmt @ sp[(-32)+-4]
  7313  011278  0EDC               	movlw	-36
  7314  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7315  011280  0EDD               	movlw	-35
  7316  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7317  011288  2ADE               	incf	postinc2,f,c
  7318  01128A  0E00               	movlw	0
  7319  01128C  22DD               	addwfc	postdec2,f,c
  7320                           
  7321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7322  01128E  6A1B               	clrf	_width^0,c
  7323  011290  6A1C               	clrf	(_width+1)^0,c
  7324  011292  6A1F               	clrf	_flags^0,c
  7325  011294  6A20               	clrf	(_flags+1)^0,c
  7326                           
  7327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7328  011296  681D               	setf	_prec^0,c
  7329  011298  681E               	setf	(_prec+1)^0,c
  7330                           
  7331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7332                           ;stkvar	_fmt @ sp[(-32)+-4]
  7333  01129A  0EDC               	movlw	-36
  7334  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7335  0112A2  0EDD               	movlw	-35
  7336  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7337  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7338  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7339  0112B6                     	if	0	;tblptru may be non-zero
  7340  0112B6                     	endif
  7341  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7342  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7343  0112B8  6EF8               	movwf	tblptru,c
  7344  0112BA                     	endif
  7345  0112BA  0008               	tblrd		*
  7346  0112BC  50F5               	movf	tablat,w,c
  7347  0112BE  0A2A               	xorlw	42
  7348  0112C0  A4D8               	btfss	status,2,c
  7349  0112C2  D031               	goto	l9771
  7350                           
  7351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7352                           ;stkvar	_fmt @ sp[(-32)+-4]
  7353  0112C4  0EDC               	movlw	-36
  7354  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7355  0112CC  0EDD               	movlw	-35
  7356  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7357  0112D4  2ADE               	incf	postinc2,f,c
  7358  0112D6  0E00               	movlw	0
  7359  0112D8  22DD               	addwfc	postdec2,f,c
  7360                           
  7361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7362                           ;stkvar	_ap @ sp[(-32)+-6]
  7363  0112DA  0EDA               	movlw	-38
  7364  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7365  0112E2  0EDB               	movlw	-37
  7366  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7367  0112EA  0E02               	movlw	2
  7368  0112EC  5EDE               	subwf	postinc2,f,c
  7369  0112EE  0E00               	movlw	0
  7370  0112F0  5ADD               	subwfb	postdec2,f,c
  7371  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7372  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7373  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7374  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7375  01130A  006F FF78  F01B    	movff	postinc2,_width
  7376  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7377                           
  7378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7379  011316  AE1C               	btfss	(_width+1)^0,7,c
  7380  011318  D066               	goto	u9900
  7381                           
  7382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7383  01131A  801F               	bsf	_flags^0,0,c
  7384                           
  7385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7386  01131C  6C1B               	negf	_width^0,c
  7387  01131E  1E1C               	comf	(_width+1)^0,f,c
  7388  011320  B0D8               	btfsc	status,0,c
  7389  011322  2A1C               	incf	(_width+1)^0,f,c
  7390  011324  D060               	goto	u9900
  7391  011326                     l9771:
  7392                           
  7393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7394                           ;stkvar	_fmt @ sp[(-32)+-4]
  7395  011326  0EDC               	movlw	-36
  7396  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7397  01132E  0EDD               	movlw	-35
  7398  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7399  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7400  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7401  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7402  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7403  01134E  EC21  F0A8         	call	_atoi	;wreg free
  7404  011352  0060  F0C8  F01B   	movff	btemp,_width
  7405  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7406                           
  7407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7408  01135E  D00B               	goto	l9775
  7409  011360                     l9773:
  7410                           
  7411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7412                           ;stkvar	_fmt @ sp[(-32)+-4]
  7413  011360  0EDC               	movlw	-36
  7414  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7415  011368  0EDD               	movlw	-35
  7416  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7417  011370  2ADE               	incf	postinc2,f,c
  7418  011372  0E00               	movlw	0
  7419  011374  22DD               	addwfc	postdec2,f,c
  7420  011376                     l9775:
  7421  011376  0ED0               	movlw	208
  7422  011378  6E3C               	movwf	(btemp+10)^0,c
  7423  01137A  0EFF               	movlw	255
  7424  01137C  6E3D               	movwf	(btemp+11)^0,c
  7425                           
  7426                           ;stkvar	_fmt @ sp[(-32)+-4]
  7427  01137E  0EDC               	movlw	-36
  7428  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7429  011386  0EDD               	movlw	-35
  7430  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7431  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7432  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7433  01139A                     	if	0	;tblptru may be non-zero
  7434  01139A                     	endif
  7435  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7436  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7437  01139C  6EF8               	movwf	tblptru,c
  7438  01139E                     	endif
  7439  01139E  0008               	tblrd		*
  7440  0113A0  50F5               	movf	tablat,w,c
  7441  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7442  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7443  0113A6  503C               	movf	(btemp+10)^0,w,c
  7444  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7445  0113AA  503D               	movf	(btemp+11)^0,w,c
  7446  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7447  0113AE  503B               	movf	(btemp+9)^0,w,c
  7448  0113B0  E106               	bnz	u9880
  7449  0113B2  0E0A               	movlw	10
  7450  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7451  0113B6  B0D8               	btfsc	status,0,c
  7452  0113B8  D002               	goto	u9880
  7453  0113BA  0E01               	movlw	1
  7454  0113BC  D001               	goto	u9890
  7455  0113BE                     u9880:
  7456  0113BE  0E00               	movlw	0
  7457  0113C0                     u9890:
  7458  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7459  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7460                           
  7461                           ;stkvar	_vfpfcnvrt$4445 @ sp[(-32)+4]
  7462  0113C4  0EE4               	movlw	-28
  7463  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7464  0113CC  0EE5               	movlw	-27
  7465  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7466                           
  7467                           ;stkvar	_vfpfcnvrt$4445 @ sp[(-32)+4]
  7468  0113D4  0EE4               	movlw	-28
  7469  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7470  0113DC  0EE5               	movlw	-27
  7471  0113DE  50E3               	movf	plusw1,w,c
  7472  0113E0  1032               	iorwf	btemp^0,w,c
  7473  0113E2  A4D8               	btfss	status,2,c
  7474  0113E4  D7BD               	goto	l9773
  7475  0113E6                     u9900:
  7476                           
  7477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7478                           ;stkvar	_fmt @ sp[(-32)+-4]
  7479  0113E6  0EDC               	movlw	-36
  7480  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7481  0113EE  0EDD               	movlw	-35
  7482  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7483  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7484  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7485  011402                     	if	0	;tblptru may be non-zero
  7486  011402                     	endif
  7487  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7488  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7489  011404  6EF8               	movwf	tblptru,c
  7490  011406                     	endif
  7491  011406  0008               	tblrd		*
  7492  011408  50F5               	movf	tablat,w,c
  7493  01140A  0A2E               	xorlw	46
  7494  01140C  A4D8               	btfss	status,2,c
  7495  01140E  D0AC               	goto	u9950
  7496                           
  7497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7498  011410  6A1D               	clrf	_prec^0,c
  7499  011412  6A1E               	clrf	(_prec+1)^0,c
  7500                           
  7501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7502                           ;stkvar	_fmt @ sp[(-32)+-4]
  7503  011414  0EDC               	movlw	-36
  7504  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7505  01141C  0EDD               	movlw	-35
  7506  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7507  011424  2ADE               	incf	postinc2,f,c
  7508  011426  0E00               	movlw	0
  7509  011428  22DD               	addwfc	postdec2,f,c
  7510                           
  7511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7512                           ;stkvar	_fmt @ sp[(-32)+-4]
  7513  01142A  0EDC               	movlw	-36
  7514  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7515  011432  0EDD               	movlw	-35
  7516  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7517  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7518  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7519  011446                     	if	0	;tblptru may be non-zero
  7520  011446                     	endif
  7521  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7522  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7523  011448  6EF8               	movwf	tblptru,c
  7524  01144A                     	endif
  7525  01144A  0008               	tblrd		*
  7526  01144C  50F5               	movf	tablat,w,c
  7527  01144E  0A2A               	xorlw	42
  7528  011450  A4D8               	btfss	status,2,c
  7529  011452  D02A               	goto	l9793
  7530                           
  7531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7532                           ;stkvar	_fmt @ sp[(-32)+-4]
  7533  011454  0EDC               	movlw	-36
  7534  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7535  01145C  0EDD               	movlw	-35
  7536  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7537  011464  2ADE               	incf	postinc2,f,c
  7538  011466  0E00               	movlw	0
  7539  011468  22DD               	addwfc	postdec2,f,c
  7540                           
  7541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7542                           ;stkvar	_ap @ sp[(-32)+-6]
  7543  01146A  0EDA               	movlw	-38
  7544  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7545  011472  0EDB               	movlw	-37
  7546  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7547  01147A  0E02               	movlw	2
  7548  01147C  5EDE               	subwf	postinc2,f,c
  7549  01147E  0E00               	movlw	0
  7550  011480  5ADD               	subwfb	postdec2,f,c
  7551  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7552  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7553  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7554  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7555  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7556  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7557                           
  7558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7559  0114A6  D060               	goto	u9950
  7560  0114A8                     l9793:
  7561                           
  7562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7563                           ;stkvar	_fmt @ sp[(-32)+-4]
  7564  0114A8  0EDC               	movlw	-36
  7565  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7566  0114B0  0EDD               	movlw	-35
  7567  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7568  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7569  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7570  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7571  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7572  0114D0  EC21  F0A8         	call	_atoi	;wreg free
  7573  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7574  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7575                           
  7576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7577  0114E0  D00B               	goto	l9797
  7578  0114E2                     l9795:
  7579                           
  7580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7581                           ;stkvar	_fmt @ sp[(-32)+-4]
  7582  0114E2  0EDC               	movlw	-36
  7583  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7584  0114EA  0EDD               	movlw	-35
  7585  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7586  0114F2  2ADE               	incf	postinc2,f,c
  7587  0114F4  0E00               	movlw	0
  7588  0114F6  22DD               	addwfc	postdec2,f,c
  7589  0114F8                     l9797:
  7590  0114F8  0ED0               	movlw	208
  7591  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7592  0114FC  0EFF               	movlw	255
  7593  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7594                           
  7595                           ;stkvar	_fmt @ sp[(-32)+-4]
  7596  011500  0EDC               	movlw	-36
  7597  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7598  011508  0EDD               	movlw	-35
  7599  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7600  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7601  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7602  01151C                     	if	0	;tblptru may be non-zero
  7603  01151C                     	endif
  7604  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7605  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7606  01151E  6EF8               	movwf	tblptru,c
  7607  011520                     	endif
  7608  011520  0008               	tblrd		*
  7609  011522  50F5               	movf	tablat,w,c
  7610  011524  6E3A               	movwf	(btemp+8)^0,c
  7611  011526  6A3B               	clrf	(btemp+9)^0,c
  7612  011528  503C               	movf	(btemp+10)^0,w,c
  7613  01152A  263A               	addwf	(btemp+8)^0,f,c
  7614  01152C  503D               	movf	(btemp+11)^0,w,c
  7615  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7616  011530  503B               	movf	(btemp+9)^0,w,c
  7617  011532  E106               	bnz	u9930
  7618  011534  0E0A               	movlw	10
  7619  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7620  011538  B0D8               	btfsc	status,0,c
  7621  01153A  D002               	goto	u9930
  7622  01153C  0E01               	movlw	1
  7623  01153E  D001               	goto	u9940
  7624  011540                     u9930:
  7625  011540  0E00               	movlw	0
  7626  011542                     u9940:
  7627  011542  6E3C               	movwf	(btemp+10)^0,c
  7628  011544  6A3D               	clrf	(btemp+11)^0,c
  7629                           
  7630                           ;stkvar	_vfpfcnvrt$4446 @ sp[(-32)+0]
  7631  011546  0EE0               	movlw	-32
  7632  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7633  01154E  0EE1               	movlw	-31
  7634  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7635                           
  7636                           ;stkvar	_vfpfcnvrt$4446 @ sp[(-32)+0]
  7637  011556  0EE0               	movlw	-32
  7638  011558  006F FF8C  F032    	movff	plusw1,btemp
  7639  01155E  0EE1               	movlw	-31
  7640  011560  50E3               	movf	plusw1,w,c
  7641  011562  1032               	iorwf	btemp^0,w,c
  7642  011564  A4D8               	btfss	status,2,c
  7643  011566  D7BD               	goto	l9795
  7644  011568                     u9950:
  7645                           
  7646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7647                           ;stkvar	_fmt @ sp[(-32)+-4]
  7648  011568  0EDC               	movlw	-36
  7649  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7650  011570  0EDD               	movlw	-35
  7651  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7652  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7653  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7654  011584                     	if	0	;tblptru may be non-zero
  7655  011584                     	endif
  7656  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7657  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7658  011586  6EF8               	movwf	tblptru,c
  7659  011588                     	endif
  7660  011588  0008               	tblrd		*
  7661  01158A  50F5               	movf	tablat,w,c
  7662  01158C  6EE6               	movwf	postinc1,c
  7663  01158E  0E00               	movlw	0
  7664  011590  6EE6               	movwf	postinc1,c
  7665  011592  ECE6  F0B9         	call	_tolower	;wreg free
  7666                           
  7667                           ;stkvar	_ct @ sp[(-32)+26]
  7668  011596  0EFA               	movlw	-6
  7669  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7670                           
  7671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7672                           ;stkvar	_ct @ sp[(-32)+26]
  7673  01159E  0EFA               	movlw	-6
  7674  0115A0  50E3               	movf	plusw1,w,c
  7675  0115A2  B4D8               	btfsc	status,2,c
  7676  0115A4  D05B               	goto	l9813
  7677                           
  7678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7679                           ;stkvar	_ct @ sp[(-32)+26]
  7680  0115A6  0EFB               	movlw	251
  7681  0115A8  24E1               	addwf	fsr1l,w,c
  7682  0115AA  6ED9               	movwf	fsr2l,c
  7683  0115AC  0EFF               	movlw	255
  7684  0115AE  20E2               	addwfc	fsr1h,w,c
  7685  0115B0  6EDA               	movwf	fsr2h,c
  7686                           
  7687                           ;stkvar	_fmt @ sp[(-32)+-4]
  7688  0115B2  0EDC               	movlw	-36
  7689  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7690  0115BA  0EDD               	movlw	-35
  7691  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7692  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7693  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7694  0115CE  0E01               	movlw	1
  7695  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7696  0115D2  0E00               	movlw	0
  7697  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7698  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7699  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7700  0115E2                     	if	0	;tblptru may be non-zero
  7701  0115E2                     	endif
  7702  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7703  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7704  0115E4  6EF8               	movwf	tblptru,c
  7705  0115E6                     	endif
  7706  0115E6  0008               	tblrd		*
  7707  0115E8  50F5               	movf	tablat,w,c
  7708  0115EA  6EE6               	movwf	postinc1,c
  7709  0115EC  0E00               	movlw	0
  7710  0115EE  6EE6               	movwf	postinc1,c
  7711  0115F0  ECE6  F0B9         	call	_tolower	;wreg free
  7712  0115F4  5032               	movf	btemp^0,w,c
  7713  0115F6  6EDF               	movwf	indf2,c
  7714                           
  7715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7716                           ;stkvar	_ct @ sp[(-32)+26]
  7717  0115F8  0EFB               	movlw	251
  7718  0115FA  24E1               	addwf	fsr1l,w,c
  7719  0115FC  6ED9               	movwf	fsr2l,c
  7720  0115FE  0EFF               	movlw	255
  7721  011600  20E2               	addwfc	fsr1h,w,c
  7722  011602  6EDA               	movwf	fsr2h,c
  7723  011604  50DF               	movf	indf2,w,c
  7724  011606  B4D8               	btfsc	status,2,c
  7725  011608  D029               	goto	l9813
  7726                           
  7727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7728                           ;stkvar	_ct @ sp[(-32)+26]
  7729  01160A  0EFC               	movlw	252
  7730  01160C  24E1               	addwf	fsr1l,w,c
  7731  01160E  6ED9               	movwf	fsr2l,c
  7732  011610  0EFF               	movlw	255
  7733  011612  20E2               	addwfc	fsr1h,w,c
  7734  011614  6EDA               	movwf	fsr2h,c
  7735                           
  7736                           ;stkvar	_fmt @ sp[(-32)+-4]
  7737  011616  0EDC               	movlw	-36
  7738  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7739  01161E  0EDD               	movlw	-35
  7740  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7741  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7742  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7743  011632  0E02               	movlw	2
  7744  011634  263C               	addwf	(btemp+10)^0,f,c
  7745  011636  0E00               	movlw	0
  7746  011638  223D               	addwfc	(btemp+11)^0,f,c
  7747  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7748  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7749  011646                     	if	0	;tblptru may be non-zero
  7750  011646                     	endif
  7751  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7752  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7753  011648  6EF8               	movwf	tblptru,c
  7754  01164A                     	endif
  7755  01164A  0008               	tblrd		*
  7756  01164C  50F5               	movf	tablat,w,c
  7757  01164E  6EE6               	movwf	postinc1,c
  7758  011650  0E00               	movlw	0
  7759  011652  6EE6               	movwf	postinc1,c
  7760  011654  ECE6  F0B9         	call	_tolower	;wreg free
  7761  011658  5032               	movf	btemp^0,w,c
  7762  01165A  6EDF               	movwf	indf2,c
  7763  01165C                     l9813:
  7764                           
  7765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7766                           ;stkvar	_fmt @ sp[(-32)+-4]
  7767  01165C  0EDC               	movlw	-36
  7768  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7769  011664  0EDD               	movlw	-35
  7770  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7771  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7772  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7773  011678                     	if	0	;tblptru may be non-zero
  7774  011678                     	endif
  7775  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7776  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7777  01167A  6EF8               	movwf	tblptru,c
  7778  01167C                     	endif
  7779  01167C  0008               	tblrd		*
  7780  01167E  50F5               	movf	tablat,w,c
  7781  011680  0A63               	xorlw	99
  7782  011682  A4D8               	btfss	status,2,c
  7783  011684  D036               	goto	l9823
  7784                           
  7785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7786                           ;stkvar	_fmt @ sp[(-32)+-4]
  7787  011686  0EDC               	movlw	-36
  7788  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7789  01168E  0EDD               	movlw	-35
  7790  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7791  011696  2ADE               	incf	postinc2,f,c
  7792  011698  0E00               	movlw	0
  7793  01169A  22DD               	addwfc	postdec2,f,c
  7794                           
  7795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7796                           ;stkvar	_ap @ sp[(-32)+-6]
  7797  01169C  0EDA               	movlw	-38
  7798  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7799  0116A4  0EDB               	movlw	-37
  7800  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7801  0116AC  0E02               	movlw	2
  7802  0116AE  5EDE               	subwf	postinc2,f,c
  7803  0116B0  0E00               	movlw	0
  7804  0116B2  5ADD               	subwfb	postdec2,f,c
  7805  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7806  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7807  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7808  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7809  0116CC  50DF               	movf	indf2,w,c
  7810  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7811                           
  7812                           ;stkvar	_c @ sp[(-32)+31]
  7813  0116D0  0EFF               	movlw	-1
  7814  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7815                           
  7816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7817                           ;stkvar	_c @ sp[(-32)+31]
  7818  0116D8  0EFF               	movlw	-1
  7819  0116DA  50E3               	movf	plusw1,w,c
  7820  0116DC  6EE6               	movwf	postinc1,c
  7821                           
  7822                           ;stkvar	_fp @ sp[(-33)+-2]
  7823  0116DE  0EDD               	movlw	-35
  7824  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7825  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7826  0116EC  EC60  F0B9         	call	_ctoa	;wreg free
  7827  0116F0  D343               	goto	l2015
  7828  0116F2                     l9823:
  7829                           
  7830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7831                           ;stkvar	_fmt @ sp[(-32)+-4]
  7832  0116F2  0EDC               	movlw	-36
  7833  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7834  0116FA  0EDD               	movlw	-35
  7835  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7836  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7837  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7838  01170E                     	if	0	;tblptru may be non-zero
  7839  01170E                     	endif
  7840  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7841  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7842  011710  6EF8               	movwf	tblptru,c
  7843  011712                     	endif
  7844  011712  0008               	tblrd		*
  7845  011714  50F5               	movf	tablat,w,c
  7846  011716  0A64               	xorlw	100
  7847  011718  B4D8               	btfsc	status,2,c
  7848  01171A  D015               	goto	u10000
  7849                           
  7850                           ;stkvar	_fmt @ sp[(-32)+-4]
  7851  01171C  0EDC               	movlw	-36
  7852  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7853  011724  0EDD               	movlw	-35
  7854  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7855  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7856  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7857  011738                     	if	0	;tblptru may be non-zero
  7858  011738                     	endif
  7859  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7860  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7861  01173A  6EF8               	movwf	tblptru,c
  7862  01173C                     	endif
  7863  01173C  0008               	tblrd		*
  7864  01173E  50F5               	movf	tablat,w,c
  7865  011740  0A69               	xorlw	105
  7866  011742  A4D8               	btfss	status,2,c
  7867  011744  D075               	goto	l9835
  7868  011746                     u10000:
  7869                           
  7870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7871                           ;stkvar	_fmt @ sp[(-32)+-4]
  7872  011746  0EDC               	movlw	-36
  7873  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7874  01174E  0EDD               	movlw	-35
  7875  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7876  011756  2ADE               	incf	postinc2,f,c
  7877  011758  0E00               	movlw	0
  7878  01175A  22DD               	addwfc	postdec2,f,c
  7879                           
  7880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7881                           ;stkvar	_ap @ sp[(-32)+-6]
  7882  01175C  0EDA               	movlw	-38
  7883  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7884  011764  0EDB               	movlw	-37
  7885  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7886  01176C  0E02               	movlw	2
  7887  01176E  5EDE               	subwf	postinc2,f,c
  7888  011770  0E00               	movlw	0
  7889  011772  5ADD               	subwfb	postdec2,f,c
  7890  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  7891  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  7892  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7893  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7894  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  7895  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  7896                           
  7897                           ;stkvar	_ll @ sp[(-32)+14]
  7898  011798  0EEE               	movlw	-18
  7899  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7900  0117A0  0EEF               	movlw	-17
  7901  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7902  0117A8  6A32               	clrf	btemp^0,c
  7903  0117AA  BEE3               	btfsc	plusw1,7,c
  7904  0117AC  6832               	setf	btemp^0,c
  7905  0117AE  0EF0               	movlw	-16
  7906  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7907  0117B6  0EF1               	movlw	-15
  7908  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7909  0117BE  0EF2               	movlw	-14
  7910  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7911  0117C6  0EF3               	movlw	-13
  7912  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7913  0117CE  0EF4               	movlw	-12
  7914  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7915  0117D6  0EF5               	movlw	-11
  7916  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7917                           
  7918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7919                           ;stkvar	_ll @ sp[(-32)+14]
  7920  0117DE  50E1               	movf	fsr1l,w,c
  7921  0117E0  0FEE               	addlw	-18
  7922  0117E2  6ED9               	movwf	fsr2l,c
  7923  0117E4  50E2               	movf	fsr1h,w,c
  7924  0117E6  6EDA               	movwf	fsr2h,c
  7925  0117E8  0EFF               	movlw	255
  7926  0117EA  22DA               	addwfc	fsr2h,f,c
  7927  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7928  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7929  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7930  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7931  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7932  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7933  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7934  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7935                           
  7936                           ;stkvar	_fp @ sp[(-40)+-2]
  7937  01181C  0ED6               	movlw	-42
  7938  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7939  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7940  01182A  EC34  F09C         	call	_dtoa	;wreg free
  7941  01182E  D2A4               	goto	l2015
  7942  011830                     l9835:
  7943                           
  7944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7945                           ;stkvar	_ct @ sp[(-32)+26]
  7946  011830  0EFA               	movlw	-6
  7947  011832  006F FF8C  F032    	movff	plusw1,btemp
  7948  011838  0E66               	movlw	102
  7949  01183A  1832               	xorwf	btemp^0,w,c
  7950  01183C  A4D8               	btfss	status,2,c
  7951  01183E  D06E               	goto	l9847
  7952                           
  7953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7954                           ;stkvar	_fmt @ sp[(-32)+-4]
  7955  011840  0EDC               	movlw	-36
  7956  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7957  011848  0EDD               	movlw	-35
  7958  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7959  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7960  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7961  01185C                     	if	0	;tblptru may be non-zero
  7962  01185C                     	endif
  7963  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7964  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7965  01185E  6EF8               	movwf	tblptru,c
  7966  011860                     	endif
  7967                           
  7968                           ;stkvar	_c @ sp[(-32)+31]
  7969  011860  0008               	tblrd		*
  7970  011862  0EFF               	movlw	-1
  7971  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7972                           
  7973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7974                           ;stkvar	_fmt @ sp[(-32)+-4]
  7975  01186A  0EDC               	movlw	-36
  7976  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7977  011872  0EDD               	movlw	-35
  7978  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7979  01187A  2ADE               	incf	postinc2,f,c
  7980  01187C  0E00               	movlw	0
  7981  01187E  22DD               	addwfc	postdec2,f,c
  7982                           
  7983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7984                           ;stkvar	_ap @ sp[(-32)+-6]
  7985  011880  0EDA               	movlw	-38
  7986  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7987  011888  0EDB               	movlw	-37
  7988  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7989  011890  0E04               	movlw	4
  7990  011892  5EDE               	subwf	postinc2,f,c
  7991  011894  0E00               	movlw	0
  7992  011896  5ADD               	subwfb	postdec2,f,c
  7993  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  7994  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  7995  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7996  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7997  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  7998  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  7999  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8000  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8001                           
  8002                           ;stkvar	_f @ sp[(-32)+22]
  8003  0118C8  0EF6               	movlw	-10
  8004  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8005  0118D0  0EF7               	movlw	-9
  8006  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8007  0118D8  0EF8               	movlw	-8
  8008  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8009  0118E0  0EF9               	movlw	-7
  8010  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8011  0118E8                     l9843:
  8012                           
  8013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8014                           ;stkvar	_c @ sp[(-32)+31]
  8015  0118E8  0EFF               	movlw	-1
  8016  0118EA  50E3               	movf	plusw1,w,c
  8017  0118EC  6EE6               	movwf	postinc1,c
  8018                           
  8019                           ;stkvar	_f @ sp[(-33)+22]
  8020  0118EE  0EF5               	movlw	-11
  8021  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8022  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8023  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8024  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8025                           
  8026                           ;stkvar	_fp @ sp[(-37)+-2]
  8027  011908  0ED9               	movlw	-39
  8028  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8029  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8030  011916  EC00  F080         	call	_efgtoa	;wreg free
  8031  01191A  D22E               	goto	l2015
  8032  01191C                     l9847:
  8033                           
  8034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8035  01191C  0E02               	movlw	2
  8036  01191E  6EE6               	movwf	postinc1,c
  8037  011920  0E00               	movlw	0
  8038  011922  6EE6               	movwf	postinc1,c
  8039  011924  0EF5               	movlw	low STR_42
  8040  011926  6EE6               	movwf	postinc1,c
  8041  011928  0EFF               	movlw	high STR_42
  8042  01192A  6EE6               	movwf	postinc1,c
  8043                           
  8044                           ;stkvar	_ct @ sp[(-36)+26]
  8045  01192C  0EF6               	movlw	246
  8046  01192E  24E1               	addwf	fsr1l,w,c
  8047  011930  6E32               	movwf	btemp^0,c
  8048  011932  0EFF               	movlw	255
  8049  011934  20E2               	addwfc	fsr1h,w,c
  8050  011936  6E33               	movwf	(btemp+1)^0,c
  8051  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8052  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8053  011944  EC86  F0AC         	call	_strncmp	;wreg free
  8054  011948  5032               	movf	btemp^0,w,c
  8055  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8056  01194C  A4D8               	btfss	status,2,c
  8057  01194E  D096               	goto	l9867
  8058                           
  8059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8060                           ;stkvar	_fmt @ sp[(-32)+-4]
  8061  011950  0EDC               	movlw	-36
  8062  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8063  011958  0EDD               	movlw	-35
  8064  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8065  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8066  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8067  01196C  0E01               	movlw	1
  8068  01196E  263C               	addwf	(btemp+10)^0,f,c
  8069  011970  0E00               	movlw	0
  8070  011972  223D               	addwfc	(btemp+11)^0,f,c
  8071  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8072  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8073  011980                     	if	0	;tblptru may be non-zero
  8074  011980                     	endif
  8075  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8076  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8077  011982  6EF8               	movwf	tblptru,c
  8078  011984                     	endif
  8079                           
  8080                           ;stkvar	_c @ sp[(-32)+31]
  8081  011984  0008               	tblrd		*
  8082  011986  0EFF               	movlw	-1
  8083  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8084  01198E  0EBF               	movlw	191
  8085  011990  6E3C               	movwf	(btemp+10)^0,c
  8086  011992  0EFF               	movlw	255
  8087  011994  6E3D               	movwf	(btemp+11)^0,c
  8088                           
  8089                           ;stkvar	_fmt @ sp[(-32)+-4]
  8090  011996  0EDC               	movlw	-36
  8091  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8092  01199E  0EDD               	movlw	-35
  8093  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8094  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8095  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8096  0119B2                     	if	0	;tblptru may be non-zero
  8097  0119B2                     	endif
  8098  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8099  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8100  0119B4  6EF8               	movwf	tblptru,c
  8101  0119B6                     	endif
  8102  0119B6  0008               	tblrd		*
  8103  0119B8  50F5               	movf	tablat,w,c
  8104  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8105  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8106  0119BE  503C               	movf	(btemp+10)^0,w,c
  8107  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8108  0119C2  503D               	movf	(btemp+11)^0,w,c
  8109  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8110  0119C6  503B               	movf	(btemp+9)^0,w,c
  8111  0119C8  E106               	bnz	u10030
  8112  0119CA  0E1A               	movlw	26
  8113  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8114  0119CE  B0D8               	btfsc	status,0,c
  8115  0119D0  D002               	goto	u10030
  8116  0119D2  0E01               	movlw	1
  8117  0119D4  D001               	goto	u10040
  8118  0119D6                     u10030:
  8119  0119D6  0E00               	movlw	0
  8120  0119D8                     u10040:
  8121  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8122  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8123                           
  8124                           ;stkvar	_vfpfcnvrt$4452 @ sp[(-32)+2]
  8125  0119DC  0EE2               	movlw	-30
  8126  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8127  0119E4  0EE3               	movlw	-29
  8128  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8129                           
  8130                           ;stkvar	_vfpfcnvrt$4452 @ sp[(-32)+2]
  8131  0119EC  0EE2               	movlw	-30
  8132  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8133  0119F4  0EE3               	movlw	-29
  8134  0119F6  50E3               	movf	plusw1,w,c
  8135  0119F8  1032               	iorwf	btemp^0,w,c
  8136                           
  8137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8138                           ;stkvar	_ap @ sp[(-32)+-6]
  8139                           
  8140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8141                           
  8142                           ;stkvar	_f @ sp[(-32)+22]
  8143                           
  8144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8145                           ;stkvar	_ap @ sp[(-32)+-6]
  8146  0119FA  0EDA               	movlw	-38
  8147  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8148  011A02  0EDB               	movlw	-37
  8149  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8150  011A0A  0E04               	movlw	4
  8151  011A0C  5EDE               	subwf	postinc2,f,c
  8152  011A0E  0E00               	movlw	0
  8153  011A10  5ADD               	subwfb	postdec2,f,c
  8154  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8155  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8156  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8157  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8158  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8159  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8160  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8161  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8162                           
  8163                           ;stkvar	_f @ sp[(-32)+22]
  8164  011A42  0EF6               	movlw	-10
  8165  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8166  011A4A  0EF7               	movlw	-9
  8167  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8168  011A52  0EF8               	movlw	-8
  8169  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8170  011A5A  0EF9               	movlw	-7
  8171  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8172                           
  8173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8174                           ;stkvar	_fmt @ sp[(-32)+-4]
  8175  011A62  0EDC               	movlw	-36
  8176  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8177  011A6A  0EDD               	movlw	-35
  8178  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8179  011A72  0E02               	movlw	2
  8180  011A74  26DE               	addwf	postinc2,f,c
  8181  011A76  0E00               	movlw	0
  8182  011A78  22DD               	addwfc	postdec2,f,c
  8183  011A7A  D736               	goto	l9843
  8184  011A7C                     l9867:
  8185                           
  8186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8187                           ;stkvar	_fmt @ sp[(-32)+-4]
  8188  011A7C  0EDC               	movlw	-36
  8189  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8190  011A84  0EDD               	movlw	-35
  8191  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8192  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8193  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8194  011A98                     	if	0	;tblptru may be non-zero
  8195  011A98                     	endif
  8196  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8197  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8198  011A9A  6EF8               	movwf	tblptru,c
  8199  011A9C                     	endif
  8200  011A9C  0008               	tblrd		*
  8201  011A9E  50F5               	movf	tablat,w,c
  8202  011AA0  0A73               	xorlw	115
  8203  011AA2  A4D8               	btfss	status,2,c
  8204  011AA4  D042               	goto	l9877
  8205                           
  8206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8207                           ;stkvar	_fmt @ sp[(-32)+-4]
  8208  011AA6  0EDC               	movlw	-36
  8209  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8210  011AAE  0EDD               	movlw	-35
  8211  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8212  011AB6  2ADE               	incf	postinc2,f,c
  8213  011AB8  0E00               	movlw	0
  8214  011ABA  22DD               	addwfc	postdec2,f,c
  8215                           
  8216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8217                           ;stkvar	_ap @ sp[(-32)+-6]
  8218  011ABC  0EDA               	movlw	-38
  8219  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8220  011AC4  0EDB               	movlw	-37
  8221  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8222  011ACC  0E02               	movlw	2
  8223  011ACE  5EDE               	subwf	postinc2,f,c
  8224  011AD0  0E00               	movlw	0
  8225  011AD2  5ADD               	subwfb	postdec2,f,c
  8226  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8227  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8228  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8229  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8230  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8231  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8232                           
  8233                           ;stkvar	_cp @ sp[(-32)+29]
  8234  011AF8  0EFE               	movlw	-2
  8235  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8236  011B00  0EFD               	movlw	-3
  8237  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8238                           
  8239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8240                           ;stkvar	_cp @ sp[(-32)+29]
  8241  011B08  0EFD               	movlw	-3
  8242  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8243  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8244                           
  8245                           ;stkvar	_fp @ sp[(-34)+-2]
  8246  011B16  0EDC               	movlw	-36
  8247  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8248  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8249  011B24  EC82  F0A5         	call	_stoa	;wreg free
  8250  011B28  D127               	goto	l2015
  8251  011B2A                     l9877:
  8252                           
  8253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8254                           ;stkvar	_fmt @ sp[(-32)+-4]
  8255  011B2A  0EDC               	movlw	-36
  8256  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8257  011B32  0EDD               	movlw	-35
  8258  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8259  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8260  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8261  011B46                     	if	0	;tblptru may be non-zero
  8262  011B46                     	endif
  8263  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8264  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8265  011B48  6EF8               	movwf	tblptru,c
  8266  011B4A                     	endif
  8267  011B4A  0008               	tblrd		*
  8268  011B4C  50F5               	movf	tablat,w,c
  8269  011B4E  0A78               	xorlw	120
  8270  011B50  B4D8               	btfsc	status,2,c
  8271  011B52  D015               	goto	u10080
  8272                           
  8273                           ;stkvar	_fmt @ sp[(-32)+-4]
  8274  011B54  0EDC               	movlw	-36
  8275  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8276  011B5C  0EDD               	movlw	-35
  8277  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8278  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8279  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8280  011B70                     	if	0	;tblptru may be non-zero
  8281  011B70                     	endif
  8282  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8283  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8284  011B72  6EF8               	movwf	tblptru,c
  8285  011B74                     	endif
  8286  011B74  0008               	tblrd		*
  8287  011B76  50F5               	movf	tablat,w,c
  8288  011B78  0A58               	xorlw	88
  8289  011B7A  A4D8               	btfss	status,2,c
  8290  011B7C  D094               	goto	l9891
  8291  011B7E                     u10080:
  8292                           
  8293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8294                           ;stkvar	_fmt @ sp[(-32)+-4]
  8295  011B7E  0EDC               	movlw	-36
  8296  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8297  011B86  0EDD               	movlw	-35
  8298  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8299  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8300  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8301  011B9A                     	if	0	;tblptru may be non-zero
  8302  011B9A                     	endif
  8303  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8304  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8305  011B9C  6EF8               	movwf	tblptru,c
  8306  011B9E                     	endif
  8307                           
  8308                           ;stkvar	_c @ sp[(-32)+31]
  8309  011B9E  0008               	tblrd		*
  8310  011BA0  0EFF               	movlw	-1
  8311  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8312                           
  8313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8314                           ;stkvar	_fmt @ sp[(-32)+-4]
  8315  011BA8  0EDC               	movlw	-36
  8316  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8317  011BB0  0EDD               	movlw	-35
  8318  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8319  011BB8  2ADE               	incf	postinc2,f,c
  8320  011BBA  0E00               	movlw	0
  8321  011BBC  22DD               	addwfc	postdec2,f,c
  8322                           
  8323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8324                           ;stkvar	_ap @ sp[(-32)+-6]
  8325  011BBE  0EDA               	movlw	-38
  8326  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8327  011BC6  0EDB               	movlw	-37
  8328  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8329  011BCE  0E02               	movlw	2
  8330  011BD0  5EDE               	subwf	postinc2,f,c
  8331  011BD2  0E00               	movlw	0
  8332  011BD4  5ADD               	subwfb	postdec2,f,c
  8333  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8334  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8335  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8336  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8337  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8338  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8339  011BFA  503C               	movf	(btemp+10)^0,w,c
  8340  011BFC  6E42               	movwf	(btemp+16)^0,c
  8341  011BFE  503D               	movf	(btemp+11)^0,w,c
  8342  011C00  6E43               	movwf	(btemp+17)^0,c
  8343  011C02  6A44               	clrf	(btemp+18)^0,c
  8344  011C04  6A45               	clrf	(btemp+19)^0,c
  8345  011C06  6A46               	clrf	(btemp+20)^0,c
  8346  011C08  6A47               	clrf	(btemp+21)^0,c
  8347  011C0A  6A48               	clrf	(btemp+22)^0,c
  8348  011C0C  6A49               	clrf	(btemp+23)^0,c
  8349                           
  8350                           ;stkvar	_llu @ sp[(-32)+6]
  8351  011C0E  0EE6               	movlw	-26
  8352  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8353  011C16  0EE7               	movlw	-25
  8354  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8355  011C1E  0EE8               	movlw	-24
  8356  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8357  011C26  0EE9               	movlw	-23
  8358  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8359  011C2E  0EEA               	movlw	-22
  8360  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8361  011C36  0EEB               	movlw	-21
  8362  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8363  011C3E  0EEC               	movlw	-20
  8364  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8365  011C46  0EED               	movlw	-19
  8366  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8367                           
  8368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8369                           ;stkvar	_c @ sp[(-32)+31]
  8370  011C4E  0EFF               	movlw	-1
  8371  011C50  50E3               	movf	plusw1,w,c
  8372  011C52  6EE6               	movwf	postinc1,c
  8373                           
  8374                           ;stkvar	_llu @ sp[(-33)+6]
  8375  011C54  50E1               	movf	fsr1l,w,c
  8376  011C56  0FE5               	addlw	-27
  8377  011C58  6ED9               	movwf	fsr2l,c
  8378  011C5A  50E2               	movf	fsr1h,w,c
  8379  011C5C  6EDA               	movwf	fsr2h,c
  8380  011C5E  0EFF               	movlw	255
  8381  011C60  22DA               	addwfc	fsr2h,f,c
  8382  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8383  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8384  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8385  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8386  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8387  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8388  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8389  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8390                           
  8391                           ;stkvar	_fp @ sp[(-41)+-2]
  8392  011C92  0ED5               	movlw	-43
  8393  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8394  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8395  011CA0  EC79  F0A0         	call	_xtoa	;wreg free
  8396  011CA4  D069               	goto	l2015
  8397  011CA6                     l9891:
  8398                           
  8399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8400                           ;stkvar	_fmt @ sp[(-32)+-4]
  8401  011CA6  0EDC               	movlw	-36
  8402  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8403  011CAE  0EDD               	movlw	-35
  8404  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8405  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8406  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8407  011CC2                     	if	0	;tblptru may be non-zero
  8408  011CC2                     	endif
  8409  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8410  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8411  011CC4  6EF8               	movwf	tblptru,c
  8412  011CC6                     	endif
  8413  011CC6  0008               	tblrd		*
  8414  011CC8  50F5               	movf	tablat,w,c
  8415  011CCA  0A25               	xorlw	37
  8416  011CCC  A4D8               	btfss	status,2,c
  8417  011CCE  D01A               	goto	l9901
  8418                           
  8419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8420                           ;stkvar	_fmt @ sp[(-32)+-4]
  8421  011CD0  0EDC               	movlw	-36
  8422  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8423  011CD8  0EDD               	movlw	-35
  8424  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8425  011CE0  2ADE               	incf	postinc2,f,c
  8426  011CE2  0E00               	movlw	0
  8427  011CE4  22DD               	addwfc	postdec2,f,c
  8428                           
  8429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8430                           ;stkvar	_fp @ sp[(-32)+-2]
  8431  011CE6  0EDE               	movlw	-34
  8432  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8433  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8434  011CF4  0E25               	movlw	37
  8435  011CF6  6EE6               	movwf	postinc1,c
  8436  011CF8  0E00               	movlw	0
  8437  011CFA  6EE6               	movwf	postinc1,c
  8438  011CFC  EC6B  F0B2         	call	_fputc	;wreg free
  8439  011D00                     l9897:
  8440                           
  8441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8442  011D00  0E01               	movlw	1
  8443  011D02  D00C               	goto	L6
  8444  011D04                     l9901:
  8445                           
  8446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8447                           ;stkvar	_fmt @ sp[(-32)+-4]
  8448  011D04  0EDC               	movlw	-36
  8449  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8450  011D0C  0EDD               	movlw	-35
  8451  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8452  011D14  2ADE               	incf	postinc2,f,c
  8453  011D16  0E00               	movlw	0
  8454  011D18  22DD               	addwfc	postdec2,f,c
  8455                           
  8456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8457  011D1A  0E00               	movlw	0
  8458  011D1C                     L6:
  8459  011D1C  6E32               	movwf	btemp^0,c
  8460  011D1E  0E00               	movlw	0
  8461  011D20  6E33               	movwf	(btemp+1)^0,c
  8462  011D22  D02A               	goto	l2015
  8463  011D24                     l9907:
  8464                           
  8465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8466                           ;stkvar	_fp @ sp[(-32)+-2]
  8467  011D24  0EDE               	movlw	-34
  8468  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8469  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8470                           
  8471                           ;stkvar	_fmt @ sp[(-34)+-4]
  8472  011D32  0EDA               	movlw	-38
  8473  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8474  011D3A  0EDB               	movlw	-37
  8475  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8476  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8477  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8478  011D4E                     	if	0	;tblptru may be non-zero
  8479  011D4E                     	endif
  8480  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8481  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8482  011D50  6EF8               	movwf	tblptru,c
  8483  011D52                     	endif
  8484  011D52  0008               	tblrd		*
  8485  011D54  50F5               	movf	tablat,w,c
  8486  011D56  6EE6               	movwf	postinc1,c
  8487  011D58  0E00               	movlw	0
  8488  011D5A  6EE6               	movwf	postinc1,c
  8489  011D5C  EC6B  F0B2         	call	_fputc	;wreg free
  8490                           
  8491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8492                           ;stkvar	_fmt @ sp[(-32)+-4]
  8493  011D60  0EDC               	movlw	-36
  8494  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8495  011D68  0EDD               	movlw	-35
  8496  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8497  011D70  2ADE               	incf	postinc2,f,c
  8498  011D72  0E00               	movlw	0
  8499  011D74  22DD               	addwfc	postdec2,f,c
  8500  011D76  D7C4               	goto	l9897
  8501  011D78                     l2015:
  8502                           
  8503                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8504  011D78  0EDA               	movlw	218
  8505  011D7A  26E1               	addwf	fsr1l,f,c
  8506  011D7C  0EFF               	movlw	255
  8507  011D7E  22E2               	addwfc	fsr1h,f,c
  8508  011D80  0012               	return		;funcret
  8509  011D82                     __end_of_vfpfcnvrt:
  8510                           	opt callstack 0
  8511                           
  8512 ;; *************** function _xtoa *****************
  8513 ;; Defined at:
  8514 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8517 ;;		 -> f(6), NULL(0), 
  8518 ;;  d               8  [STACK] unsigned long long 
  8519 ;;  x               1  [STACK] unsigned char 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  n               8  [STACK] unsigned long long 
  8522 ;;  c               2  [STACK] int 
  8523 ;;  i               2  [STACK] int 
  8524 ;;  w               2  [STACK] int 
  8525 ;;  p               2  [STACK] int 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  2  [STACK] int 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/5
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8539 ;;Total ram usage:        0 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; Hardware stack levels required when called:   11
  8542 ;; This function calls:
  8543 ;;		_isalpha
  8544 ;;		_isupper
  8545 ;;		_pad
  8546 ;;		_toupper
  8547 ;; This function is called by:
  8548 ;;		_vfpfcnvrt
  8549 ;; This function uses a reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text39
  8553  0140F2                     __ptext39:
  8554                           	opt callstack 0
  8555  0140F2                     _xtoa:
  8556                           	opt callstack 0
  8557                           
  8558                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8559  0140F2  0E14               	movlw	20
  8560  0140F4  26E1               	addwf	fsr1l,f,c
  8561  0140F6  0E00               	movlw	0
  8562  0140F8  22E2               	addwfc	fsr1h,f,c
  8563                           
  8564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8565                           
  8566                           ;incstack = 0
  8567  0140FA  AE1E               	btfss	(_prec+1)^0,7,c
  8568                           
  8569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8570  0140FC  921F               	bcf	_flags^0,1,c
  8571                           
  8572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8573  0140FE  BE1E               	btfsc	(_prec+1)^0,7,c
  8574  014100  D005               	goto	u9680
  8575  014102  501E               	movf	(_prec+1)^0,w,c
  8576  014104  E110               	bnz	l9689
  8577  014106  041D               	decf	_prec^0,w,c
  8578  014108  B0D8               	btfsc	status,0,c
  8579  01410A  D00D               	goto	l9689
  8580  01410C                     u9680:
  8581  01410C  0E01               	movlw	1
  8582  01410E  6E3C               	movwf	(btemp+10)^0,c
  8583  014110  0E00               	movlw	0
  8584  014112  6E3D               	movwf	(btemp+11)^0,c
  8585                           
  8586                           ;stkvar	_p @ sp[(-20)+18]
  8587  014114  0EFE               	movlw	-2
  8588  014116  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8589  01411C  0EFF               	movlw	-1
  8590  01411E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8591  014124  D008               	goto	l1965
  8592  014126                     l9689:
  8593                           
  8594                           ;stkvar	_p @ sp[(-20)+18]
  8595  014126  0EFE               	movlw	-2
  8596  014128  0060  F077  FFE3   	movff	_prec,plusw1
  8597  01412E  0EFF               	movlw	-1
  8598  014130  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8599  014136                     l1965:
  8600                           
  8601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8602                           ;stkvar	_w @ sp[(-20)+16]
  8603  014136  0EFC               	movlw	-4
  8604  014138  0060  F06F  FFE3   	movff	_width,plusw1
  8605  01413E  0EFD               	movlw	-3
  8606  014140  0060  F073  FFE3   	movff	_width+1,plusw1
  8607                           
  8608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8609  014146  A81F               	btfss	_flags^0,4,c
  8610  014148  D00B               	goto	l9695
  8611                           
  8612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8613                           ;stkvar	_w @ sp[(-20)+16]
  8614  01414A  50E1               	movf	fsr1l,w,c
  8615  01414C  0FFC               	addlw	-4
  8616  01414E  6ED9               	movwf	fsr2l,c
  8617  014150  50E2               	movf	fsr1h,w,c
  8618  014152  6EDA               	movwf	fsr2h,c
  8619  014154  0EFF               	movlw	255
  8620  014156  22DA               	addwfc	fsr2h,f,c
  8621  014158  0EFE               	movlw	254
  8622  01415A  26DE               	addwf	postinc2,f,c
  8623  01415C  0EFF               	movlw	255
  8624  01415E  22DD               	addwfc	postdec2,f,c
  8625  014160                     l9695:
  8626                           
  8627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8628                           ;stkvar	_d @ sp[(-20)+-10]
  8629  014160  0EE2               	movlw	226
  8630  014162  24E1               	addwf	fsr1l,w,c
  8631  014164  6ED9               	movwf	fsr2l,c
  8632  014166  0EFF               	movlw	255
  8633  014168  20E2               	addwfc	fsr1h,w,c
  8634  01416A  6EDA               	movwf	fsr2h,c
  8635                           
  8636                           ;stkvar	_n @ sp[(-20)+4]
  8637  01416C  0E08               	movlw	8
  8638  01416E  6E32               	movwf	btemp^0,c
  8639  014170  0EF0               	movlw	-16
  8640  014172                     us970999:
  8641  014172  006F FF7B FFE3     	movff	postinc2,plusw1
  8642  014178  28E8               	incf	wreg,w,c
  8643  01417A  2E32               	decfsz	btemp^0,f,c
  8644  01417C  D7FA               	bra	us970999
  8645                           
  8646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8647  01417E  0E4F               	movlw	79
  8648  014180  6E3C               	movwf	(btemp+10)^0,c
  8649  014182  0E00               	movlw	0
  8650  014184  6E3D               	movwf	(btemp+11)^0,c
  8651                           
  8652                           ;stkvar	_i @ sp[(-20)+14]
  8653  014186  0EFA               	movlw	-6
  8654  014188  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8655  01418E  0EFB               	movlw	-5
  8656  014190  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8657                           
  8658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8659  014196  0102               	movlb	2	; () banked
  8660  014198  6BFB               	clrf	(_dbuf+79)& (0+255),b
  8661                           
  8662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8663  01419A  D0EE               	goto	l9733
  8664  01419C                     l9701:
  8665                           
  8666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8667                           ;stkvar	_i @ sp[(-20)+14]
  8668  01419C  50E1               	movf	fsr1l,w,c
  8669  01419E  0FFA               	addlw	-6
  8670  0141A0  6ED9               	movwf	fsr2l,c
  8671  0141A2  50E2               	movf	fsr1h,w,c
  8672  0141A4  6EDA               	movwf	fsr2h,c
  8673  0141A6  0EFF               	movlw	255
  8674  0141A8  22DA               	addwfc	fsr2h,f,c
  8675  0141AA  06DE               	decf	postinc2,f,c
  8676  0141AC  0E00               	movlw	0
  8677  0141AE  5ADD               	subwfb	postdec2,f,c
  8678                           
  8679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8680                           ;stkvar	_n @ sp[(-20)+4]
  8681  0141B0  0EF0               	movlw	-16
  8682  0141B2  006F FF8C  F03C    	movff	plusw1,btemp+10
  8683  0141B8  0EF1               	movlw	-15
  8684  0141BA  006F FF8C  F03D    	movff	plusw1,btemp+11
  8685  0141C0  0E0F               	movlw	15
  8686  0141C2  163C               	andwf	(btemp+10)^0,f,c
  8687  0141C4  0E00               	movlw	0
  8688  0141C6  163D               	andwf	(btemp+11)^0,f,c
  8689                           
  8690                           ;stkvar	_c @ sp[(-20)+12]
  8691  0141C8  0EF8               	movlw	-8
  8692  0141CA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8693  0141D0  0EF9               	movlw	-7
  8694  0141D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8695                           
  8696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8697                           ;stkvar	_c @ sp[(-20)+12]
  8698  0141D8  0EF9               	movlw	-7
  8699  0141DA  BEE3               	btfsc	plusw1,7,c
  8700  0141DC  D00F               	goto	l9709
  8701  0141DE  0EF9               	movlw	-7
  8702  0141E0  50E3               	movf	plusw1,w,c
  8703  0141E2  E108               	bnz	u9710
  8704  0141E4  0EF8               	movlw	-8
  8705  0141E6  006F FF8C  F032    	movff	plusw1,btemp
  8706  0141EC  0E0A               	movlw	10
  8707  0141EE  5E32               	subwf	btemp^0,f,c
  8708  0141F0  A0D8               	btfss	status,0,c
  8709  0141F2  D004               	goto	l9709
  8710  0141F4                     u9710:
  8711                           
  8712                           ;stkvar	_c @ sp[(-20)+12]
  8713  0141F4  0EF8               	movlw	-8
  8714  0141F6  50E3               	movf	plusw1,w,c
  8715  0141F8  0F57               	addlw	87
  8716  0141FA  D003               	goto	L7
  8717  0141FC                     l9709:
  8718                           
  8719                           ;stkvar	_c @ sp[(-20)+12]
  8720  0141FC  0EF8               	movlw	-8
  8721  0141FE  50E3               	movf	plusw1,w,c
  8722  014200  0F30               	addlw	48
  8723  014202                     L7:
  8724  014202  6E3C               	movwf	(btemp+10)^0,c
  8725  014204  0EF9               	movlw	-7
  8726  014206  006F FF8C  F03D    	movff	plusw1,btemp+11
  8727  01420C  0E00               	movlw	0
  8728  01420E  223D               	addwfc	(btemp+11)^0,f,c
  8729                           
  8730                           ;stkvar	_c @ sp[(-20)+12]
  8731  014210  0EF8               	movlw	-8
  8732  014212  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8733  014218  0EF9               	movlw	-7
  8734  01421A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8735  014220  0EBF               	movlw	191
  8736  014222  6E3C               	movwf	(btemp+10)^0,c
  8737  014224  0EFF               	movlw	255
  8738  014226  6E3D               	movwf	(btemp+11)^0,c
  8739                           
  8740                           ;stkvar	_x @ sp[(-20)+-11]
  8741  014228  0EE1               	movlw	-31
  8742  01422A  50E3               	movf	plusw1,w,c
  8743  01422C  6E3A               	movwf	(btemp+8)^0,c
  8744  01422E  6A3B               	clrf	(btemp+9)^0,c
  8745  014230  503C               	movf	(btemp+10)^0,w,c
  8746  014232  263A               	addwf	(btemp+8)^0,f,c
  8747  014234  503D               	movf	(btemp+11)^0,w,c
  8748  014236  223B               	addwfc	(btemp+9)^0,f,c
  8749  014238  503B               	movf	(btemp+9)^0,w,c
  8750  01423A  E106               	bnz	u9720
  8751  01423C  0E1A               	movlw	26
  8752  01423E  5C3A               	subwf	(btemp+8)^0,w,c
  8753  014240  B0D8               	btfsc	status,0,c
  8754  014242  D002               	goto	u9720
  8755  014244  0E01               	movlw	1
  8756  014246  D001               	goto	u9730
  8757  014248                     u9720:
  8758  014248  0E00               	movlw	0
  8759  01424A                     u9730:
  8760  01424A  6E3C               	movwf	(btemp+10)^0,c
  8761  01424C  6A3D               	clrf	(btemp+11)^0,c
  8762                           
  8763                           ;stkvar	_xtoa$4430 @ sp[(-20)+2]
  8764  01424E  0EEE               	movlw	-18
  8765  014250  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8766  014256  0EEF               	movlw	-17
  8767  014258  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8768                           
  8769                           ;stkvar	_xtoa$4430 @ sp[(-20)+2]
  8770  01425E  0EEE               	movlw	-18
  8771  014260  006F FF8C  F032    	movff	plusw1,btemp
  8772  014266  0EEF               	movlw	-17
  8773  014268  50E3               	movf	plusw1,w,c
  8774  01426A  1032               	iorwf	btemp^0,w,c
  8775  01426C  B4D8               	btfsc	status,2,c
  8776  01426E  D041               	goto	l9725
  8777  014270  0E9F               	movlw	159
  8778  014272  6E3C               	movwf	(btemp+10)^0,c
  8779  014274  0EFF               	movlw	255
  8780  014276  6E3D               	movwf	(btemp+11)^0,c
  8781                           
  8782                           ;stkvar	_c @ sp[(-20)+12]
  8783  014278  0EF8               	movlw	-8
  8784  01427A  006F FF8C  F03A    	movff	plusw1,btemp+8
  8785  014280  0EF9               	movlw	-7
  8786  014282  006F FF8C  F03B    	movff	plusw1,btemp+9
  8787  014288  0E20               	movlw	32
  8788  01428A  123A               	iorwf	(btemp+8)^0,f,c
  8789  01428C  0E00               	movlw	0
  8790  01428E  123B               	iorwf	(btemp+9)^0,f,c
  8791  014290  503C               	movf	(btemp+10)^0,w,c
  8792  014292  263A               	addwf	(btemp+8)^0,f,c
  8793  014294  503D               	movf	(btemp+11)^0,w,c
  8794  014296  223B               	addwfc	(btemp+9)^0,f,c
  8795  014298  503B               	movf	(btemp+9)^0,w,c
  8796  01429A  E106               	bnz	u9750
  8797  01429C  0E1A               	movlw	26
  8798  01429E  5C3A               	subwf	(btemp+8)^0,w,c
  8799  0142A0  B0D8               	btfsc	status,0,c
  8800  0142A2  D002               	goto	u9750
  8801  0142A4  0E01               	movlw	1
  8802  0142A6  D001               	goto	u9760
  8803  0142A8                     u9750:
  8804  0142A8  0E00               	movlw	0
  8805  0142AA                     u9760:
  8806  0142AA  6E3C               	movwf	(btemp+10)^0,c
  8807  0142AC  6A3D               	clrf	(btemp+11)^0,c
  8808                           
  8809                           ;stkvar	_xtoa$4431 @ sp[(-20)+0]
  8810  0142AE  0EEC               	movlw	-20
  8811  0142B0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8812  0142B6  0EED               	movlw	-19
  8813  0142B8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8814                           
  8815                           ;stkvar	_xtoa$4431 @ sp[(-20)+0]
  8816  0142BE  0EEC               	movlw	-20
  8817  0142C0  006F FF8C  F032    	movff	plusw1,btemp
  8818  0142C6  0EED               	movlw	-19
  8819  0142C8  50E3               	movf	plusw1,w,c
  8820  0142CA  1032               	iorwf	btemp^0,w,c
  8821  0142CC  B4D8               	btfsc	status,2,c
  8822  0142CE  D011               	goto	l9725
  8823                           
  8824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8825                           ;stkvar	_c @ sp[(-20)+12]
  8826  0142D0  0EF8               	movlw	-8
  8827  0142D2  006F FF8F FFE6     	movff	plusw1,postinc1
  8828  0142D8  006F FF8F FFE6     	movff	plusw1,postinc1
  8829  0142DE  ECA4  F0B9         	call	_toupper	;wreg free
  8830                           
  8831                           ;stkvar	_c @ sp[(-20)+12]
  8832  0142E2  0EF8               	movlw	-8
  8833  0142E4  0060  F0CB  FFE3   	movff	btemp,plusw1
  8834  0142EA  0EF9               	movlw	-7
  8835  0142EC  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8836  0142F2                     l9725:
  8837                           
  8838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8839                           ;stkvar	_c @ sp[(-20)+12]
  8840                           ;stkvar	_i @ sp[(-20)+14]
  8841  0142F2  0EFA               	movlw	-6
  8842  0142F4  006F FF8C  F03C    	movff	plusw1,btemp+10
  8843  0142FA  0EFB               	movlw	-5
  8844  0142FC  006F FF8C  F03D    	movff	plusw1,btemp+11
  8845  014302  0EAC               	movlw	low _dbuf
  8846  014304  243C               	addwf	(btemp+10)^0,w,c
  8847  014306  6ED9               	movwf	fsr2l,c
  8848  014308  0E02               	movlw	high _dbuf
  8849  01430A  203D               	addwfc	(btemp+11)^0,w,c
  8850  01430C  6EDA               	movwf	fsr2h,c
  8851  01430E  0EF8               	movlw	-8
  8852  014310  006F FF8F FFDF     	movff	plusw1,indf2
  8853                           
  8854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8855                           ;stkvar	_p @ sp[(-20)+18]
  8856  014316  50E1               	movf	fsr1l,w,c
  8857  014318  0FFE               	addlw	-2
  8858  01431A  6ED9               	movwf	fsr2l,c
  8859  01431C  50E2               	movf	fsr1h,w,c
  8860  01431E  6EDA               	movwf	fsr2h,c
  8861  014320  0EFF               	movlw	255
  8862  014322  22DA               	addwfc	fsr2h,f,c
  8863  014324  06DE               	decf	postinc2,f,c
  8864  014326  0E00               	movlw	0
  8865  014328  5ADD               	subwfb	postdec2,f,c
  8866                           
  8867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8868                           ;stkvar	_w @ sp[(-20)+16]
  8869  01432A  50E1               	movf	fsr1l,w,c
  8870  01432C  0FFC               	addlw	-4
  8871  01432E  6ED9               	movwf	fsr2l,c
  8872  014330  50E2               	movf	fsr1h,w,c
  8873  014332  6EDA               	movwf	fsr2h,c
  8874  014334  0EFF               	movlw	255
  8875  014336  22DA               	addwfc	fsr2h,f,c
  8876  014338  06DE               	decf	postinc2,f,c
  8877  01433A  0E00               	movlw	0
  8878  01433C  5ADD               	subwfb	postdec2,f,c
  8879                           
  8880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8881  01433E  0E04               	movlw	4
  8882  014340  6E3D               	movwf	(btemp+11)^0,c
  8883                           
  8884                           ;stkvar	_n @ sp[(-20)+4]
  8885  014342  50E1               	movf	fsr1l,w,c
  8886  014344  0FF0               	addlw	-16
  8887  014346  6ED9               	movwf	fsr2l,c
  8888  014348  50E2               	movf	fsr1h,w,c
  8889  01434A  6EDA               	movwf	fsr2h,c
  8890  01434C  0EFF               	movlw	255
  8891  01434E  22DA               	addwfc	fsr2h,f,c
  8892  014350  283D               	incf	(btemp+11)^0,w,c
  8893  014352  52DE               	movf	postinc2,f,c
  8894  014354  D00F               	goto	u9780
  8895  014356                     u9785:
  8896  014356  52DE               	movf	postinc2,f,c
  8897  014358  52DE               	movf	postinc2,f,c
  8898  01435A  52DE               	movf	postinc2,f,c
  8899  01435C  52DE               	movf	postinc2,f,c
  8900  01435E  52DE               	movf	postinc2,f,c
  8901  014360  52DE               	movf	postinc2,f,c
  8902  014362  90D8               	bcf	status,0,c
  8903  014364  32DD               	rrcf	postdec2,f,c
  8904  014366  32DD               	rrcf	postdec2,f,c
  8905  014368  32DD               	rrcf	postdec2,f,c
  8906  01436A  32DD               	rrcf	postdec2,f,c
  8907  01436C  32DD               	rrcf	postdec2,f,c
  8908  01436E  32DD               	rrcf	postdec2,f,c
  8909  014370  32DD               	rrcf	postdec2,f,c
  8910  014372  32DE               	rrcf	postinc2,f,c
  8911  014374                     u9780:
  8912  014374  2EE8               	decfsz	wreg,f,c
  8913  014376  D7EF               	goto	u9785
  8914  014378                     l9733:
  8915                           
  8916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8917                           ;stkvar	_i @ sp[(-20)+14]
  8918  014378  0EFB               	movlw	-5
  8919  01437A  BEE3               	btfsc	plusw1,7,c
  8920  01437C  D03A               	goto	u9830
  8921  01437E  0EFB               	movlw	-5
  8922  014380  50E3               	movf	plusw1,w,c
  8923  014382  E108               	bnz	u9790
  8924  014384  0EFA               	movlw	-6
  8925  014386  006F FF8C  F032    	movff	plusw1,btemp
  8926  01438C  0E02               	movlw	2
  8927  01438E  5E32               	subwf	btemp^0,f,c
  8928  014390  A0D8               	btfss	status,0,c
  8929  014392  D02F               	goto	u9830
  8930  014394                     u9790:
  8931                           
  8932                           ;stkvar	_n @ sp[(-20)+4]
  8933  014394  0EF0               	movlw	-16
  8934  014396  50E3               	movf	plusw1,w,c
  8935  014398  E115               	bnz	u9801
  8936  01439A  0EF1               	movlw	-15
  8937  01439C  50E3               	movf	plusw1,w,c
  8938  01439E  E112               	bnz	u9801
  8939  0143A0  0EF2               	movlw	-14
  8940  0143A2  50E3               	movf	plusw1,w,c
  8941  0143A4  E10F               	bnz	u9801
  8942  0143A6  0EF3               	movlw	-13
  8943  0143A8  50E3               	movf	plusw1,w,c
  8944  0143AA  E10C               	bnz	u9801
  8945  0143AC  0EF4               	movlw	-12
  8946  0143AE  50E3               	movf	plusw1,w,c
  8947  0143B0  E109               	bnz	u9801
  8948  0143B2  0EF5               	movlw	-11
  8949  0143B4  50E3               	movf	plusw1,w,c
  8950  0143B6  E106               	bnz	u9801
  8951  0143B8  0EF6               	movlw	-10
  8952  0143BA  50E3               	movf	plusw1,w,c
  8953  0143BC  E103               	bnz	u9801
  8954  0143BE  0EF7               	movlw	-9
  8955  0143C0  50E3               	movf	plusw1,w,c
  8956  0143C2  A4D8               	btfss	status,2,c
  8957  0143C4                     u9801:
  8958  0143C4  D6EB               	goto	l9701
  8959                           
  8960                           ;stkvar	_p @ sp[(-20)+18]
  8961  0143C6  0EFF               	movlw	-1
  8962  0143C8  BEE3               	btfsc	plusw1,7,c
  8963  0143CA  D007               	goto	u9810
  8964  0143CC  0EFF               	movlw	-1
  8965  0143CE  50E3               	movf	plusw1,w,c
  8966  0143D0  E103               	bnz	u9811
  8967  0143D2  0EFE               	movlw	-2
  8968  0143D4  04E3               	decf	plusw1,w,c
  8969  0143D6  B0D8               	btfsc	status,0,c
  8970  0143D8                     u9811:
  8971  0143D8  D6E1               	goto	l9701
  8972  0143DA                     u9810:
  8973                           
  8974                           ;stkvar	_w @ sp[(-20)+16]
  8975  0143DA  0EFD               	movlw	-3
  8976  0143DC  BEE3               	btfsc	plusw1,7,c
  8977  0143DE  D009               	goto	u9830
  8978  0143E0  0EFD               	movlw	-3
  8979  0143E2  50E3               	movf	plusw1,w,c
  8980  0143E4  E104               	bnz	u9820
  8981  0143E6  0EFC               	movlw	-4
  8982  0143E8  04E3               	decf	plusw1,w,c
  8983  0143EA  A0D8               	btfss	status,0,c
  8984  0143EC  D002               	goto	u9830
  8985  0143EE                     u9820:
  8986  0143EE  B21F               	btfsc	_flags^0,1,c
  8987  0143F0  D6D5               	goto	l9701
  8988  0143F2                     u9830:
  8989                           
  8990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8991  0143F2  A81F               	btfss	_flags^0,4,c
  8992  0143F4  D036               	goto	l9749
  8993                           
  8994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8995                           ;stkvar	_i @ sp[(-20)+14]
  8996  0143F6  50E1               	movf	fsr1l,w,c
  8997  0143F8  0FFA               	addlw	-6
  8998  0143FA  6ED9               	movwf	fsr2l,c
  8999  0143FC  50E2               	movf	fsr1h,w,c
  9000  0143FE  6EDA               	movwf	fsr2h,c
  9001  014400  0EFF               	movlw	255
  9002  014402  22DA               	addwfc	fsr2h,f,c
  9003  014404  06DE               	decf	postinc2,f,c
  9004  014406  0E00               	movlw	0
  9005  014408  5ADD               	subwfb	postdec2,f,c
  9006                           
  9007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9008                           ;stkvar	_x @ sp[(-20)+-11]
  9009                           ;stkvar	_i @ sp[(-20)+14]
  9010  01440A  0EFA               	movlw	-6
  9011  01440C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9012  014412  0EFB               	movlw	-5
  9013  014414  006F FF8C  F03D    	movff	plusw1,btemp+11
  9014  01441A  0EAC               	movlw	low _dbuf
  9015  01441C  243C               	addwf	(btemp+10)^0,w,c
  9016  01441E  6ED9               	movwf	fsr2l,c
  9017  014420  0E02               	movlw	high _dbuf
  9018  014422  203D               	addwfc	(btemp+11)^0,w,c
  9019  014424  6EDA               	movwf	fsr2h,c
  9020  014426  0EE1               	movlw	-31
  9021  014428  006F FF8F FFDF     	movff	plusw1,indf2
  9022                           
  9023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9024                           ;stkvar	_i @ sp[(-20)+14]
  9025  01442E  50E1               	movf	fsr1l,w,c
  9026  014430  0FFA               	addlw	-6
  9027  014432  6ED9               	movwf	fsr2l,c
  9028  014434  50E2               	movf	fsr1h,w,c
  9029  014436  6EDA               	movwf	fsr2h,c
  9030  014438  0EFF               	movlw	255
  9031  01443A  22DA               	addwfc	fsr2h,f,c
  9032  01443C  06DE               	decf	postinc2,f,c
  9033  01443E  0E00               	movlw	0
  9034  014440  5ADD               	subwfb	postdec2,f,c
  9035                           
  9036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9037                           ;stkvar	_i @ sp[(-20)+14]
  9038  014442  0EFA               	movlw	-6
  9039  014444  006F FF8C  F03C    	movff	plusw1,btemp+10
  9040  01444A  0EFB               	movlw	-5
  9041  01444C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9042  014452  0EAC               	movlw	low _dbuf
  9043  014454  243C               	addwf	(btemp+10)^0,w,c
  9044  014456  6ED9               	movwf	fsr2l,c
  9045  014458  0E02               	movlw	high _dbuf
  9046  01445A  203D               	addwfc	(btemp+11)^0,w,c
  9047  01445C  6EDA               	movwf	fsr2h,c
  9048  01445E  0E30               	movlw	48
  9049  014460  6EDF               	movwf	indf2,c
  9050  014462                     l9749:
  9051                           
  9052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9053                           ;stkvar	_w @ sp[(-20)+16]
  9054  014462  0EFC               	movlw	-4
  9055  014464  006F FF8F FFE6     	movff	plusw1,postinc1
  9056  01446A  006F FF8F FFE6     	movff	plusw1,postinc1
  9057                           
  9058                           ;stkvar	_i @ sp[(-22)+14]
  9059  014470  0EAC               	movlw	low _dbuf
  9060  014472  6E3C               	movwf	(btemp+10)^0,c
  9061  014474  0E02               	movlw	high _dbuf
  9062  014476  6E3D               	movwf	(btemp+11)^0,c
  9063  014478  0EF8               	movlw	-8
  9064  01447A  50E3               	movf	plusw1,w,c
  9065  01447C  263C               	addwf	(btemp+10)^0,f,c
  9066  01447E  0EF9               	movlw	-7
  9067  014480  50E3               	movf	plusw1,w,c
  9068  014482  223D               	addwfc	(btemp+11)^0,f,c
  9069  014484  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9070  01448A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9071                           
  9072                           ;stkvar	_fp @ sp[(-24)+-2]
  9073  014490  0EE6               	movlw	-26
  9074  014492  006F FF8F FFE6     	movff	plusw1,postinc1
  9075  014498  006F FF8F FFE6     	movff	plusw1,postinc1
  9076  01449E  EC89  F0B3         	call	_pad	;wreg free
  9077                           
  9078                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9079  0144A2  0EE1               	movlw	225
  9080  0144A4  26E1               	addwf	fsr1l,f,c
  9081  0144A6  0EFF               	movlw	255
  9082  0144A8  22E2               	addwfc	fsr1h,f,c
  9083  0144AA  0012               	return		;funcret
  9084  0144AC                     __end_of_xtoa:
  9085                           	opt callstack 0
  9086                           
  9087 ;; *************** function _toupper *****************
  9088 ;; Defined at:
  9089 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;  c               2  [STACK] int 
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;		None
  9094 ;; Return value:  Size  Location     Type
  9095 ;;                  2  [STACK] int 
  9096 ;; Registers used:
  9097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9098 ;; Tracked objects:
  9099 ;;		On entry : 0/2
  9100 ;;		On exit  : 0/0
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9107 ;;Total ram usage:        0 bytes
  9108 ;; Hardware stack levels used:    1
  9109 ;; Hardware stack levels required when called:    7
  9110 ;; This function calls:
  9111 ;;		_islower
  9112 ;; This function is called by:
  9113 ;;		_xtoa
  9114 ;; This function uses a reentrant model
  9115 ;;
  9116                           
  9117                           	psect	text40
  9118  017348                     __ptext40:
  9119                           	opt callstack 0
  9120  017348                     _toupper:
  9121                           	opt callstack 0
  9122                           
  9123                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9124  017348  52E6               	movf	postinc1,f,c
  9125  01734A  52E6               	movf	postinc1,f,c
  9126                           
  9127                           ;stkvar	_c @ sp[(-2)+-2]
  9128                           
  9129                           ;incstack = 0
  9130  01734C  0EFC               	movlw	-4
  9131  01734E  50E3               	movf	plusw1,w,c
  9132  017350  0F9F               	addlw	159
  9133  017352  6E3C               	movwf	(btemp+10)^0,c
  9134  017354  0EFD               	movlw	-3
  9135  017356  006F FF8C  F03D    	movff	plusw1,btemp+11
  9136  01735C  0EFF               	movlw	255
  9137  01735E  223D               	addwfc	(btemp+11)^0,f,c
  9138  017360  503D               	movf	(btemp+11)^0,w,c
  9139  017362  E106               	bnz	u5230
  9140  017364  0E1A               	movlw	26
  9141  017366  5C3C               	subwf	(btemp+10)^0,w,c
  9142  017368  B0D8               	btfsc	status,0,c
  9143  01736A  D002               	goto	u5230
  9144  01736C  0E01               	movlw	1
  9145  01736E  D001               	goto	u5240
  9146  017370                     u5230:
  9147  017370  0E00               	movlw	0
  9148  017372                     u5240:
  9149  017372  6E3C               	movwf	(btemp+10)^0,c
  9150  017374  6A3D               	clrf	(btemp+11)^0,c
  9151                           
  9152                           ;stkvar	_toupper$5091 @ sp[(-2)+0]
  9153  017376  0EFE               	movlw	-2
  9154  017378  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9155  01737E  0EFF               	movlw	-1
  9156  017380  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9157                           
  9158                           ;stkvar	_toupper$5091 @ sp[(-2)+0]
  9159  017386  0EFE               	movlw	-2
  9160  017388  006F FF8C  F032    	movff	plusw1,btemp
  9161  01738E  0EFF               	movlw	-1
  9162  017390  50E3               	movf	plusw1,w,c
  9163  017392  1032               	iorwf	btemp^0,w,c
  9164  017394  B4D8               	btfsc	status,2,c
  9165  017396  D00D               	goto	l6465
  9166                           
  9167                           ;stkvar	_c @ sp[(-2)+-2]
  9168  017398  0EFC               	movlw	-4
  9169  01739A  006F FF8C  F032    	movff	plusw1,btemp
  9170  0173A0  0EFD               	movlw	-3
  9171  0173A2  006F FF8C  F033    	movff	plusw1,btemp+1
  9172  0173A8  0E5F               	movlw	95
  9173  0173AA  1632               	andwf	btemp^0,f,c
  9174  0173AC  0E00               	movlw	0
  9175  0173AE  1633               	andwf	(btemp+1)^0,f,c
  9176  0173B0  D008               	goto	l2898
  9177  0173B2                     l6465:
  9178                           
  9179                           ;stkvar	_c @ sp[(-2)+-2]
  9180  0173B2  0EFC               	movlw	-4
  9181  0173B4  006F FF8C  F032    	movff	plusw1,btemp
  9182  0173BA  0EFD               	movlw	-3
  9183  0173BC  006F FF8C  F033    	movff	plusw1,btemp+1
  9184  0173C2                     l2898:
  9185                           
  9186                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9187  0173C2  52E5               	movf	postdec1,f,c
  9188  0173C4  52E5               	movf	postdec1,f,c
  9189  0173C6  52E5               	movf	postdec1,f,c
  9190  0173C8  52E5               	movf	postdec1,f,c
  9191  0173CA  0012               	return		;funcret
  9192  0173CC                     __end_of_toupper:
  9193                           	opt callstack 0
  9194                           
  9195 ;; *************** function _islower *****************
  9196 ;; Defined at:
  9197 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  c               2  [STACK] int 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;		None
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  2  [STACK] int 
  9204 ;; Registers used:
  9205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9215 ;;Total ram usage:        0 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    6
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_toupper
  9222 ;; This function uses a reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text41
  9226  017EBA                     __ptext41:
  9227                           	opt callstack 0
  9228  017EBA                     _islower:
  9229                           	opt callstack 16
  9230                           
  9231                           ;stkvar	_c @ sp[(0)+-2]
  9232                           
  9233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9234                           ;incstack = 0
  9235  017EBA  0EFE               	movlw	-2
  9236  017EBC  50E3               	movf	plusw1,w,c
  9237  017EBE  0F9F               	addlw	159
  9238  017EC0  6E3C               	movwf	(btemp+10)^0,c
  9239  017EC2  0EFF               	movlw	-1
  9240  017EC4  006F FF8C  F03D    	movff	plusw1,btemp+11
  9241  017ECA  0EFF               	movlw	255
  9242  017ECC  223D               	addwfc	(btemp+11)^0,f,c
  9243  017ECE  503D               	movf	(btemp+11)^0,w,c
  9244  017ED0  E106               	bnz	u4920
  9245  017ED2  0E1A               	movlw	26
  9246  017ED4  5C3C               	subwf	(btemp+10)^0,w,c
  9247  017ED6  B0D8               	btfsc	status,0,c
  9248  017ED8  D002               	goto	u4920
  9249  017EDA  0E01               	movlw	1
  9250  017EDC  D001               	goto	u4930
  9251  017EDE                     u4920:
  9252  017EDE  0E00               	movlw	0
  9253  017EE0                     u4930:
  9254  017EE0  6E32               	movwf	btemp^0,c
  9255  017EE2  6A33               	clrf	(btemp+1)^0,c
  9256                           
  9257                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9258  017EE4  52E5               	movf	postdec1,f,c
  9259  017EE6  52E5               	movf	postdec1,f,c
  9260  017EE8  0012               	return		;funcret
  9261  017EEA                     __end_of_islower:
  9262                           	opt callstack 0
  9263                           
  9264 ;; *************** function _isalpha *****************
  9265 ;; Defined at:
  9266 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  c               2  [STACK] int 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  2  [STACK] int 
  9273 ;; Registers used:
  9274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9284 ;;Total ram usage:        0 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    6
  9287 ;; This function calls:
  9288 ;;		Nothing
  9289 ;; This function is called by:
  9290 ;;		_xtoa
  9291 ;; This function uses a reentrant model
  9292 ;;
  9293                           
  9294                           	psect	text42
  9295  017C2E                     __ptext42:
  9296                           	opt callstack 0
  9297  017C2E                     _isalpha:
  9298                           	opt callstack 17
  9299                           
  9300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9301                           ;incstack = 0
  9302  017C2E  0E9F               	movlw	159
  9303  017C30  6E3C               	movwf	(btemp+10)^0,c
  9304  017C32  0EFF               	movlw	255
  9305  017C34  6E3D               	movwf	(btemp+11)^0,c
  9306                           
  9307                           ;stkvar	_c @ sp[(0)+-2]
  9308  017C36  0EFE               	movlw	-2
  9309  017C38  006F FF8C  F03A    	movff	plusw1,btemp+8
  9310  017C3E  0EFF               	movlw	-1
  9311  017C40  006F FF8C  F03B    	movff	plusw1,btemp+9
  9312  017C46  0E20               	movlw	32
  9313  017C48  123A               	iorwf	(btemp+8)^0,f,c
  9314  017C4A  0E00               	movlw	0
  9315  017C4C  123B               	iorwf	(btemp+9)^0,f,c
  9316  017C4E  503C               	movf	(btemp+10)^0,w,c
  9317  017C50  263A               	addwf	(btemp+8)^0,f,c
  9318  017C52  503D               	movf	(btemp+11)^0,w,c
  9319  017C54  223B               	addwfc	(btemp+9)^0,f,c
  9320  017C56  503B               	movf	(btemp+9)^0,w,c
  9321  017C58  E106               	bnz	u5210
  9322  017C5A  0E1A               	movlw	26
  9323  017C5C  5C3A               	subwf	(btemp+8)^0,w,c
  9324  017C5E  B0D8               	btfsc	status,0,c
  9325  017C60  D002               	goto	u5210
  9326  017C62  0E01               	movlw	1
  9327  017C64  D001               	goto	u5220
  9328  017C66                     u5210:
  9329  017C66  0E00               	movlw	0
  9330  017C68                     u5220:
  9331  017C68  6E32               	movwf	btemp^0,c
  9332  017C6A  6A33               	clrf	(btemp+1)^0,c
  9333                           
  9334                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9335  017C6C  52E5               	movf	postdec1,f,c
  9336  017C6E  52E5               	movf	postdec1,f,c
  9337  017C70  0012               	return		;funcret
  9338  017C72                     __end_of_isalpha:
  9339                           	opt callstack 0
  9340                           
  9341 ;; *************** function _strncmp *****************
  9342 ;; Defined at:
  9343 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;  _l              2  [STACK] PTR const unsigned char 
  9346 ;;		 -> ct(3), 
  9347 ;;  _r              2  [STACK] PTR const unsigned char 
  9348 ;;		 -> STR_44(3), 
  9349 ;;  n               2  [STACK] unsigned int 
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;  r               2  [STACK] PTR const unsigned char 
  9352 ;;		 -> STR_44(3), 
  9353 ;;  l               2  [STACK] PTR const unsigned char 
  9354 ;;		 -> ct(3), 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  2  [STACK] int 
  9357 ;; Registers used:
  9358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/5
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;Total ram usage:        0 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    6
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_vfpfcnvrt
  9375 ;; This function uses a reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text43
  9379  01590C                     __ptext43:
  9380                           	opt callstack 0
  9381  01590C                     _strncmp:
  9382                           	opt callstack 0
  9383                           
  9384                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9385  01590C  52E6               	movf	postinc1,f,c
  9386  01590E  52E6               	movf	postinc1,f,c
  9387  015910  52E6               	movf	postinc1,f,c
  9388  015912  52E6               	movf	postinc1,f,c
  9389                           
  9390                           ;stkvar	__l @ sp[(-4)+-2]
  9391                           
  9392                           ;incstack = 0
  9393  015914  0EFA               	movlw	-6
  9394  015916  006F FF8C  F03C    	movff	plusw1,btemp+10
  9395  01591C  0EFB               	movlw	-5
  9396  01591E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9397                           
  9398                           ;stkvar	_l @ sp[(-4)+2]
  9399  015924  0EFF               	movlw	-1
  9400  015926  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9401  01592C  0EFE               	movlw	-2
  9402  01592E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9403                           
  9404                           ;stkvar	__r @ sp[(-4)+-4]
  9405  015934  0EF8               	movlw	-8
  9406  015936  006F FF8C  F03C    	movff	plusw1,btemp+10
  9407  01593C  0EF9               	movlw	-7
  9408  01593E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9409                           
  9410                           ;stkvar	_r @ sp[(-4)+0]
  9411  015944  0EFD               	movlw	-3
  9412  015946  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9413  01594C  0EFC               	movlw	-4
  9414  01594E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9415                           
  9416                           ;stkvar	_n @ sp[(-4)+-6]
  9417  015954  0EF6               	movlw	-10
  9418  015956  006F FF8C  F032    	movff	plusw1,btemp
  9419  01595C  0E01               	movlw	1
  9420  01595E  5E32               	subwf	btemp^0,f,c
  9421  015960  0EF6               	movlw	-10
  9422  015962  0060  F0CB  FFE3   	movff	btemp,plusw1
  9423  015968  0EF7               	movlw	-9
  9424  01596A  006F FF8C  F032    	movff	plusw1,btemp
  9425  015970  0E00               	movlw	0
  9426  015972  5A32               	subwfb	btemp^0,f,c
  9427  015974  0EF7               	movlw	-9
  9428  015976  0060  F0CB  FFE3   	movff	btemp,plusw1
  9429  01597C  0EF6               	movlw	-10
  9430  01597E  28E3               	incf	plusw1,w,c
  9431  015980  E13F               	bnz	l7623
  9432  015982  0EF7               	movlw	-9
  9433  015984  28E3               	incf	plusw1,w,c
  9434  015986  A4D8               	btfss	status,2,c
  9435  015988  D03B               	goto	l7623
  9436  01598A  0E00               	movlw	0
  9437  01598C  6E32               	movwf	btemp^0,c
  9438  01598E  0E00               	movlw	0
  9439  015990  6E33               	movwf	(btemp+1)^0,c
  9440  015992  D09B               	goto	l2870
  9441  015994                     l7621:
  9442                           
  9443                           ;stkvar	_l @ sp[(-4)+2]
  9444  015994  0EFE               	movlw	-2
  9445  015996  50E3               	movf	plusw1,w,c
  9446  015998  0F01               	addlw	1
  9447  01599A  6E32               	movwf	btemp^0,c
  9448  01599C  0EFE               	movlw	-2
  9449  01599E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9450  0159A4  6A32               	clrf	btemp^0,c
  9451  0159A6  0EFF               	movlw	-1
  9452  0159A8  50E3               	movf	plusw1,w,c
  9453  0159AA  2032               	addwfc	btemp^0,w,c
  9454  0159AC  6E32               	movwf	btemp^0,c
  9455  0159AE  0EFF               	movlw	-1
  9456  0159B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9457                           
  9458                           ;stkvar	_r @ sp[(-4)+0]
  9459  0159B6  0EFC               	movlw	-4
  9460  0159B8  50E3               	movf	plusw1,w,c
  9461  0159BA  0F01               	addlw	1
  9462  0159BC  6E32               	movwf	btemp^0,c
  9463  0159BE  0EFC               	movlw	-4
  9464  0159C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9465  0159C6  6A32               	clrf	btemp^0,c
  9466  0159C8  0EFD               	movlw	-3
  9467  0159CA  50E3               	movf	plusw1,w,c
  9468  0159CC  2032               	addwfc	btemp^0,w,c
  9469  0159CE  6E32               	movwf	btemp^0,c
  9470  0159D0  0EFD               	movlw	-3
  9471  0159D2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9472                           
  9473                           ;stkvar	_n @ sp[(-4)+-6]
  9474  0159D8  0EF6               	movlw	-10
  9475  0159DA  006F FF8C  F032    	movff	plusw1,btemp
  9476  0159E0  0E01               	movlw	1
  9477  0159E2  5E32               	subwf	btemp^0,f,c
  9478  0159E4  0EF6               	movlw	-10
  9479  0159E6  0060  F0CB  FFE3   	movff	btemp,plusw1
  9480  0159EC  0EF7               	movlw	-9
  9481  0159EE  006F FF8C  F032    	movff	plusw1,btemp
  9482  0159F4  0E00               	movlw	0
  9483  0159F6  5A32               	subwfb	btemp^0,f,c
  9484  0159F8  0EF7               	movlw	-9
  9485  0159FA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9486  015A00                     l7623:
  9487                           
  9488                           ;stkvar	_l @ sp[(-4)+2]
  9489  015A00  0EFE               	movlw	-2
  9490  015A02  006F FF8F FFD9     	movff	plusw1,fsr2l
  9491  015A08  0EFF               	movlw	-1
  9492  015A0A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9493  015A10  50DF               	movf	indf2,w,c
  9494  015A12  B4D8               	btfsc	status,2,c
  9495  015A14  D03B               	goto	u7410
  9496                           
  9497                           ;stkvar	_r @ sp[(-4)+0]
  9498  015A16  50E1               	movf	fsr1l,w,c
  9499  015A18  0FFC               	addlw	-4
  9500  015A1A  6ED9               	movwf	fsr2l,c
  9501  015A1C  50E2               	movf	fsr1h,w,c
  9502  015A1E  6EDA               	movwf	fsr2h,c
  9503  015A20  0EFF               	movlw	255
  9504  015A22  22DA               	addwfc	fsr2h,f,c
  9505  015A24  006F FF7B FFF6     	movff	postinc2,tblptrl
  9506  015A2A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9507  015A30                     	if	0	;tblptru may be non-zero
  9508  015A30                     	endif
  9509  015A30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9510  015A30  0E00               	movlw	low (__mediumconst shr (0+16))
  9511  015A32  6EF8               	movwf	tblptru,c
  9512  015A34                     	endif
  9513  015A34  0008               	tblrd		*
  9514  015A36  50F5               	movf	tablat,w,c
  9515  015A38  0900               	iorlw	0
  9516  015A3A  B4D8               	btfsc	status,2,c
  9517  015A3C  D027               	goto	u7410
  9518                           
  9519                           ;stkvar	_n @ sp[(-4)+-6]
  9520  015A3E  0EF6               	movlw	-10
  9521  015A40  006F FF8C  F032    	movff	plusw1,btemp
  9522  015A46  0EF7               	movlw	-9
  9523  015A48  50E3               	movf	plusw1,w,c
  9524  015A4A  1032               	iorwf	btemp^0,w,c
  9525  015A4C  B4D8               	btfsc	status,2,c
  9526  015A4E  D01E               	goto	u7410
  9527                           
  9528                           ;stkvar	_l @ sp[(-4)+2]
  9529  015A50  0EFE               	movlw	-2
  9530  015A52  006F FF8F FFD9     	movff	plusw1,fsr2l
  9531  015A58  0EFF               	movlw	-1
  9532  015A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9533  015A60  50DF               	movf	indf2,w,c
  9534  015A62  6E3D               	movwf	(btemp+11)^0,c
  9535                           
  9536                           ;stkvar	_r @ sp[(-4)+0]
  9537  015A64  50E1               	movf	fsr1l,w,c
  9538  015A66  0FFC               	addlw	-4
  9539  015A68  6ED9               	movwf	fsr2l,c
  9540  015A6A  50E2               	movf	fsr1h,w,c
  9541  015A6C  6EDA               	movwf	fsr2h,c
  9542  015A6E  0EFF               	movlw	255
  9543  015A70  22DA               	addwfc	fsr2h,f,c
  9544  015A72  006F FF7B FFF6     	movff	postinc2,tblptrl
  9545  015A78  006F FF77 FFF7     	movff	postdec2,tblptrh
  9546  015A7E                     	if	0	;tblptru may be non-zero
  9547  015A7E                     	endif
  9548  015A7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9549  015A7E  0E00               	movlw	low (__mediumconst shr (0+16))
  9550  015A80  6EF8               	movwf	tblptru,c
  9551  015A82                     	endif
  9552  015A82  0008               	tblrd		*
  9553  015A84  50F5               	movf	tablat,w,c
  9554  015A86  183D               	xorwf	(btemp+11)^0,w,c
  9555  015A88  B4D8               	btfsc	status,2,c
  9556  015A8A  D784               	goto	l7621
  9557  015A8C                     u7410:
  9558                           
  9559                           ;stkvar	_l @ sp[(-4)+2]
  9560  015A8C  0EFE               	movlw	-2
  9561  015A8E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9562  015A94  0EFF               	movlw	-1
  9563  015A96  006F FF8F FFDA     	movff	plusw1,fsr2h
  9564  015A9C  50DF               	movf	indf2,w,c
  9565  015A9E  6E32               	movwf	btemp^0,c
  9566  015AA0  6A33               	clrf	(btemp+1)^0,c
  9567                           
  9568                           ;stkvar	_r @ sp[(-4)+0]
  9569  015AA2  50E1               	movf	fsr1l,w,c
  9570  015AA4  0FFC               	addlw	-4
  9571  015AA6  6ED9               	movwf	fsr2l,c
  9572  015AA8  50E2               	movf	fsr1h,w,c
  9573  015AAA  6EDA               	movwf	fsr2h,c
  9574  015AAC  0EFF               	movlw	255
  9575  015AAE  22DA               	addwfc	fsr2h,f,c
  9576  015AB0  006F FF7B FFF6     	movff	postinc2,tblptrl
  9577  015AB6  006F FF77 FFF7     	movff	postdec2,tblptrh
  9578  015ABC                     	if	0	;tblptru may be non-zero
  9579  015ABC                     	endif
  9580  015ABC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9581  015ABC  0E00               	movlw	low (__mediumconst shr (0+16))
  9582  015ABE  6EF8               	movwf	tblptru,c
  9583  015AC0                     	endif
  9584  015AC0  0008               	tblrd		*
  9585  015AC2  50F5               	movf	tablat,w,c
  9586  015AC4  5E32               	subwf	btemp^0,f,c
  9587  015AC6  0E00               	movlw	0
  9588  015AC8  5A33               	subwfb	(btemp+1)^0,f,c
  9589  015ACA                     l2870:
  9590                           
  9591                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9592  015ACA  0EF6               	movlw	246
  9593  015ACC  26E1               	addwf	fsr1l,f,c
  9594  015ACE  0EFF               	movlw	255
  9595  015AD0  22E2               	addwfc	fsr1h,f,c
  9596  015AD2  0012               	return		;funcret
  9597  015AD4                     __end_of_strncmp:
  9598                           	opt callstack 0
  9599                           
  9600 ;; *************** function _stoa *****************
  9601 ;; Defined at:
  9602 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9605 ;;		 -> f(6), NULL(0), 
  9606 ;;  s               2  [STACK] PTR unsigned char 
  9607 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  9608 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9609 ;;		 -> STR_3(5), V(228), 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  nuls            7  [STACK] unsigned char [7]
  9612 ;;  l               2  [STACK] int 
  9613 ;;  p               2  [STACK] int 
  9614 ;;  cp              2  [STACK] PTR unsigned char 
  9615 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
  9616 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
  9617 ;;		 -> STR_7(5), STR_3(5), V(228), 
  9618 ;;  w               2  [STACK] int 
  9619 ;;  i               2  [STACK] int 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  2  [STACK] int 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/5
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9633 ;;Total ram usage:        0 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:    9
  9636 ;; This function calls:
  9637 ;;		_fputc
  9638 ;;		_strlen
  9639 ;; This function is called by:
  9640 ;;		_vfpfcnvrt
  9641 ;; This function uses a reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text44
  9645  014B04                     __ptext44:
  9646                           	opt callstack 0
  9647  014B04                     _stoa:
  9648                           	opt callstack 0
  9649                           
  9650                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9651  014B04  0E11               	movlw	17
  9652  014B06  26E1               	addwf	fsr1l,f,c
  9653  014B08  0E00               	movlw	0
  9654  014B0A  22E2               	addwfc	fsr1h,f,c
  9655                           
  9656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9657                           
  9658                           ;incstack = 0
  9659  014B0C  EE20  F0CE         	lfsr	2,stoa@F1166
  9660                           
  9661                           ;stkvar	_nuls @ sp[(-17)+0]
  9662  014B10  0E07               	movlw	7
  9663  014B12  6E32               	movwf	btemp^0,c
  9664  014B14  0EEF               	movlw	-17
  9665  014B16                     us957999:
  9666  014B16  006F FF7B FFE3     	movff	postinc2,plusw1
  9667  014B1C  28E8               	incf	wreg,w,c
  9668  014B1E  2E32               	decfsz	btemp^0,f,c
  9669  014B20  D7FA               	bra	us957999
  9670                           
  9671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9672                           ;stkvar	_s @ sp[(-17)+-4]
  9673  014B22  0EEB               	movlw	-21
  9674  014B24  006F FF8C  F03C    	movff	plusw1,btemp+10
  9675  014B2A  0EEC               	movlw	-20
  9676  014B2C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9677                           
  9678                           ;stkvar	_cp @ sp[(-17)+11]
  9679  014B32  0EFB               	movlw	-5
  9680  014B34  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9681  014B3A  0EFA               	movlw	-6
  9682  014B3C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9683                           
  9684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9685                           ;stkvar	_cp @ sp[(-17)+11]
  9686  014B42  0EFA               	movlw	-6
  9687  014B44  006F FF8C  F032    	movff	plusw1,btemp
  9688  014B4A  0EFB               	movlw	-5
  9689  014B4C  50E3               	movf	plusw1,w,c
  9690  014B4E  1032               	iorwf	btemp^0,w,c
  9691  014B50  A4D8               	btfss	status,2,c
  9692  014B52  D00E               	goto	l9637
  9693                           
  9694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9695                           ;stkvar	_nuls @ sp[(-17)+0]
  9696  014B54  0EEF               	movlw	239
  9697  014B56  24E1               	addwf	fsr1l,w,c
  9698  014B58  6E3C               	movwf	(btemp+10)^0,c
  9699  014B5A  0EFF               	movlw	255
  9700  014B5C  20E2               	addwfc	fsr1h,w,c
  9701  014B5E  6E3D               	movwf	(btemp+11)^0,c
  9702                           
  9703                           ;stkvar	_cp @ sp[(-17)+11]
  9704  014B60  0EFB               	movlw	-5
  9705  014B62  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9706  014B68  0EFA               	movlw	-6
  9707  014B6A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9708  014B70                     l9637:
  9709                           
  9710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9711                           ;stkvar	_cp @ sp[(-17)+11]
  9712  014B70  0EFA               	movlw	-6
  9713  014B72  006F FF8F FFE6     	movff	plusw1,postinc1
  9714  014B78  006F FF8F FFE6     	movff	plusw1,postinc1
  9715  014B7E  EC31  F0B8         	call	_strlen	;wreg free
  9716                           
  9717                           ;stkvar	_l @ sp[(-17)+7]
  9718  014B82  0EF6               	movlw	-10
  9719  014B84  0060  F0CB  FFE3   	movff	btemp,plusw1
  9720  014B8A  0EF7               	movlw	-9
  9721  014B8C  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9722                           
  9723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9724                           ;stkvar	_p @ sp[(-17)+9]
  9725  014B92  0EF8               	movlw	-8
  9726  014B94  0060  F077  FFE3   	movff	_prec,plusw1
  9727  014B9A  0EF9               	movlw	-7
  9728  014B9C  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9729                           
  9730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9731                           ;stkvar	_p @ sp[(-17)+9]
  9732  014BA2  0EF9               	movlw	-7
  9733  014BA4  BEE3               	btfsc	plusw1,7,c
  9734  014BA6  D023               	goto	l1944
  9735                           
  9736                           ;stkvar	_l @ sp[(-17)+7]
  9737                           ;stkvar	_p @ sp[(-17)+9]
  9738  014BA8  50E1               	movf	fsr1l,w,c
  9739  014BAA  0FF8               	addlw	-8
  9740  014BAC  6ED9               	movwf	fsr2l,c
  9741  014BAE  50E2               	movf	fsr1h,w,c
  9742  014BB0  6EDA               	movwf	fsr2h,c
  9743  014BB2  0EFF               	movlw	255
  9744  014BB4  22DA               	addwfc	fsr2h,f,c
  9745  014BB6  0EF6               	movlw	-10
  9746  014BB8  50E3               	movf	plusw1,w,c
  9747  014BBA  5CDE               	subwf	postinc2,w,c
  9748  014BBC  50DE               	movf	postinc2,w,c
  9749  014BBE  0A80               	xorlw	128
  9750  014BC0  6E32               	movwf	btemp^0,c
  9751  014BC2  0EF7               	movlw	-9
  9752  014BC4  50E3               	movf	plusw1,w,c
  9753  014BC6  0A80               	xorlw	128
  9754  014BC8  5832               	subwfb	btemp^0,w,c
  9755  014BCA  B0D8               	btfsc	status,0,c
  9756  014BCC  D010               	goto	l1944
  9757                           
  9758                           ;stkvar	_p @ sp[(-17)+9]
  9759                           ;stkvar	_l @ sp[(-17)+7]
  9760  014BCE  0EF8               	movlw	-8
  9761  014BD0  006F FF8C  F032    	movff	plusw1,btemp
  9762  014BD6  0EF6               	movlw	-10
  9763  014BD8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9764  014BDE  0EF9               	movlw	-7
  9765  014BE0  006F FF8C  F032    	movff	plusw1,btemp
  9766  014BE6  0EF7               	movlw	-9
  9767  014BE8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9768  014BEE                     l1944:
  9769                           
  9770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9771                           ;stkvar	_l @ sp[(-17)+7]
  9772                           ;stkvar	_p @ sp[(-17)+9]
  9773  014BEE  0EF6               	movlw	-10
  9774  014BF0  006F FF8C  F032    	movff	plusw1,btemp
  9775  014BF6  0EF8               	movlw	-8
  9776  014BF8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9777  014BFE  0EF7               	movlw	-9
  9778  014C00  006F FF8C  F032    	movff	plusw1,btemp
  9779  014C06  0EF9               	movlw	-7
  9780  014C08  0060  F0CB  FFE3   	movff	btemp,plusw1
  9781                           
  9782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9783                           ;stkvar	_w @ sp[(-17)+13]
  9784  014C0E  0EFC               	movlw	-4
  9785  014C10  0060  F06F  FFE3   	movff	_width,plusw1
  9786  014C16  0EFD               	movlw	-3
  9787  014C18  0060  F073  FFE3   	movff	_width+1,plusw1
  9788                           
  9789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9790  014C1E  A01F               	btfss	_flags^0,0,c
  9791  014C20  D01F               	goto	l9657
  9792  014C22  D031               	goto	u9620
  9793  014C24                     l9653:
  9794                           
  9795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9796                           ;stkvar	_fp @ sp[(-17)+-2]
  9797  014C24  0EED               	movlw	-19
  9798  014C26  006F FF8F FFE6     	movff	plusw1,postinc1
  9799  014C2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9800  014C32  0E20               	movlw	32
  9801  014C34  6EE6               	movwf	postinc1,c
  9802  014C36  0E00               	movlw	0
  9803  014C38  6EE6               	movwf	postinc1,c
  9804  014C3A  EC6B  F0B2         	call	_fputc	;wreg free
  9805                           
  9806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9807                           ;stkvar	_l @ sp[(-17)+7]
  9808  014C3E  0EF6               	movlw	-10
  9809  014C40  50E3               	movf	plusw1,w,c
  9810  014C42  0F01               	addlw	1
  9811  014C44  6E32               	movwf	btemp^0,c
  9812  014C46  0EF6               	movlw	-10
  9813  014C48  0060  F0CB  FFE3   	movff	btemp,plusw1
  9814  014C4E  6A32               	clrf	btemp^0,c
  9815  014C50  0EF7               	movlw	-9
  9816  014C52  50E3               	movf	plusw1,w,c
  9817  014C54  2032               	addwfc	btemp^0,w,c
  9818  014C56  6E32               	movwf	btemp^0,c
  9819  014C58  0EF7               	movlw	-9
  9820  014C5A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9821  014C60                     l9657:
  9822                           
  9823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9824                           ;stkvar	_w @ sp[(-17)+13]
  9825                           ;stkvar	_l @ sp[(-17)+7]
  9826  014C60  50E1               	movf	fsr1l,w,c
  9827  014C62  0FF6               	addlw	-10
  9828  014C64  6ED9               	movwf	fsr2l,c
  9829  014C66  50E2               	movf	fsr1h,w,c
  9830  014C68  6EDA               	movwf	fsr2h,c
  9831  014C6A  0EFF               	movlw	255
  9832  014C6C  22DA               	addwfc	fsr2h,f,c
  9833  014C6E  0EFC               	movlw	-4
  9834  014C70  50E3               	movf	plusw1,w,c
  9835  014C72  5CDE               	subwf	postinc2,w,c
  9836  014C74  50DE               	movf	postinc2,w,c
  9837  014C76  0A80               	xorlw	128
  9838  014C78  6E32               	movwf	btemp^0,c
  9839  014C7A  0EFD               	movlw	-3
  9840  014C7C  50E3               	movf	plusw1,w,c
  9841  014C7E  0A80               	xorlw	128
  9842  014C80  5832               	subwfb	btemp^0,w,c
  9843  014C82  A0D8               	btfss	status,0,c
  9844  014C84  D7CF               	goto	l9653
  9845  014C86                     u9620:
  9846                           
  9847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9848                           ;stkvar	_i @ sp[(-17)+15]
  9849  014C86  0EFE               	movlw	-2
  9850  014C88  6AE3               	clrf	plusw1,c
  9851  014C8A  0EFF               	movlw	-1
  9852  014C8C  6AE3               	clrf	plusw1,c
  9853                           
  9854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9855  014C8E  D045               	goto	l9667
  9856  014C90                     l9661:
  9857                           
  9858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9859                           ;stkvar	_fp @ sp[(-17)+-2]
  9860  014C90  0EED               	movlw	-19
  9861  014C92  006F FF8F FFE6     	movff	plusw1,postinc1
  9862  014C98  006F FF8F FFE6     	movff	plusw1,postinc1
  9863                           
  9864                           ;stkvar	_cp @ sp[(-19)+11]
  9865  014C9E  0EF8               	movlw	-8
  9866  014CA0  006F FF8F FFF6     	movff	plusw1,tblptrl
  9867  014CA6  0EF9               	movlw	-7
  9868  014CA8  006F FF8F FFF7     	movff	plusw1,tblptrh
  9869  014CAE  0E00               	movlw	low (__mediumconst shr (0+16))
  9870  014CB0  6EF8               	movwf	tblptru,c
  9871  014CB2  0E1F               	movlw	(high __ramtop+-1)
  9872  014CB4  64F7               	cpfsgt	tblptrh,c
  9873  014CB6  D003               	bra	u9637
  9874  014CB8  0008               	tblrd		*
  9875  014CBA  50F5               	movf	tablat,w,c
  9876  014CBC  D007               	bra	u9630
  9877  014CBE                     u9637:
  9878  014CBE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9879  014CC4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9880  014CCA  50EF               	movf	indf0,w,c
  9881  014CCC                     u9630:
  9882  014CCC  6EE6               	movwf	postinc1,c
  9883  014CCE  0E00               	movlw	0
  9884  014CD0  6EE6               	movwf	postinc1,c
  9885  014CD2  EC6B  F0B2         	call	_fputc	;wreg free
  9886                           
  9887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9888                           ;stkvar	_cp @ sp[(-17)+11]
  9889  014CD6  0EFA               	movlw	-6
  9890  014CD8  50E3               	movf	plusw1,w,c
  9891  014CDA  0F01               	addlw	1
  9892  014CDC  6E32               	movwf	btemp^0,c
  9893  014CDE  0EFA               	movlw	-6
  9894  014CE0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9895  014CE6  6A32               	clrf	btemp^0,c
  9896  014CE8  0EFB               	movlw	-5
  9897  014CEA  50E3               	movf	plusw1,w,c
  9898  014CEC  2032               	addwfc	btemp^0,w,c
  9899  014CEE  6E32               	movwf	btemp^0,c
  9900  014CF0  0EFB               	movlw	-5
  9901  014CF2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9902                           
  9903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9904                           ;stkvar	_i @ sp[(-17)+15]
  9905  014CF8  0EFE               	movlw	-2
  9906  014CFA  50E3               	movf	plusw1,w,c
  9907  014CFC  0F01               	addlw	1
  9908  014CFE  6E32               	movwf	btemp^0,c
  9909  014D00  0EFE               	movlw	-2
  9910  014D02  0060  F0CB  FFE3   	movff	btemp,plusw1
  9911  014D08  6A32               	clrf	btemp^0,c
  9912  014D0A  0EFF               	movlw	-1
  9913  014D0C  50E3               	movf	plusw1,w,c
  9914  014D0E  2032               	addwfc	btemp^0,w,c
  9915  014D10  6E32               	movwf	btemp^0,c
  9916  014D12  0EFF               	movlw	-1
  9917  014D14  0060  F0CB  FFE3   	movff	btemp,plusw1
  9918  014D1A                     l9667:
  9919                           
  9920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9921                           ;stkvar	_p @ sp[(-17)+9]
  9922                           ;stkvar	_i @ sp[(-17)+15]
  9923  014D1A  50E1               	movf	fsr1l,w,c
  9924  014D1C  0FFE               	addlw	-2
  9925  014D1E  6ED9               	movwf	fsr2l,c
  9926  014D20  50E2               	movf	fsr1h,w,c
  9927  014D22  6EDA               	movwf	fsr2h,c
  9928  014D24  0EFF               	movlw	255
  9929  014D26  22DA               	addwfc	fsr2h,f,c
  9930  014D28  0EF8               	movlw	-8
  9931  014D2A  50E3               	movf	plusw1,w,c
  9932  014D2C  5CDE               	subwf	postinc2,w,c
  9933  014D2E  50DE               	movf	postinc2,w,c
  9934  014D30  0A80               	xorlw	128
  9935  014D32  6E32               	movwf	btemp^0,c
  9936  014D34  0EF9               	movlw	-7
  9937  014D36  50E3               	movf	plusw1,w,c
  9938  014D38  0A80               	xorlw	128
  9939  014D3A  5832               	subwfb	btemp^0,w,c
  9940  014D3C  A0D8               	btfss	status,0,c
  9941  014D3E  D7A8               	goto	l9661
  9942                           
  9943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9944  014D40  B01F               	btfsc	_flags^0,0,c
  9945  014D42  D01F               	goto	l9675
  9946  014D44  D031               	goto	u9660
  9947  014D46                     l9671:
  9948                           
  9949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9950                           ;stkvar	_fp @ sp[(-17)+-2]
  9951  014D46  0EED               	movlw	-19
  9952  014D48  006F FF8F FFE6     	movff	plusw1,postinc1
  9953  014D4E  006F FF8F FFE6     	movff	plusw1,postinc1
  9954  014D54  0E20               	movlw	32
  9955  014D56  6EE6               	movwf	postinc1,c
  9956  014D58  0E00               	movlw	0
  9957  014D5A  6EE6               	movwf	postinc1,c
  9958  014D5C  EC6B  F0B2         	call	_fputc	;wreg free
  9959                           
  9960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9961                           ;stkvar	_l @ sp[(-17)+7]
  9962  014D60  0EF6               	movlw	-10
  9963  014D62  50E3               	movf	plusw1,w,c
  9964  014D64  0F01               	addlw	1
  9965  014D66  6E32               	movwf	btemp^0,c
  9966  014D68  0EF6               	movlw	-10
  9967  014D6A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9968  014D70  6A32               	clrf	btemp^0,c
  9969  014D72  0EF7               	movlw	-9
  9970  014D74  50E3               	movf	plusw1,w,c
  9971  014D76  2032               	addwfc	btemp^0,w,c
  9972  014D78  6E32               	movwf	btemp^0,c
  9973  014D7A  0EF7               	movlw	-9
  9974  014D7C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9975  014D82                     l9675:
  9976                           
  9977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9978                           ;stkvar	_w @ sp[(-17)+13]
  9979                           ;stkvar	_l @ sp[(-17)+7]
  9980  014D82  50E1               	movf	fsr1l,w,c
  9981  014D84  0FF6               	addlw	-10
  9982  014D86  6ED9               	movwf	fsr2l,c
  9983  014D88  50E2               	movf	fsr1h,w,c
  9984  014D8A  6EDA               	movwf	fsr2h,c
  9985  014D8C  0EFF               	movlw	255
  9986  014D8E  22DA               	addwfc	fsr2h,f,c
  9987  014D90  0EFC               	movlw	-4
  9988  014D92  50E3               	movf	plusw1,w,c
  9989  014D94  5CDE               	subwf	postinc2,w,c
  9990  014D96  50DE               	movf	postinc2,w,c
  9991  014D98  0A80               	xorlw	128
  9992  014D9A  6E32               	movwf	btemp^0,c
  9993  014D9C  0EFD               	movlw	-3
  9994  014D9E  50E3               	movf	plusw1,w,c
  9995  014DA0  0A80               	xorlw	128
  9996  014DA2  5832               	subwfb	btemp^0,w,c
  9997  014DA4  A0D8               	btfss	status,0,c
  9998  014DA6  D7CF               	goto	l9671
  9999  014DA8                     u9660:
 10000                           
 10001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10002                           ;stkvar	_l @ sp[(-17)+7]
 10003  014DA8  0EF6               	movlw	-10
 10004  014DAA  006F FF8C  F032    	movff	plusw1,btemp
 10005  014DB0  0EF7               	movlw	-9
 10006  014DB2  006F FF8C  F033    	movff	plusw1,btemp+1
 10007                           
 10008                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10009  014DB8  0EEB               	movlw	235
 10010  014DBA  26E1               	addwf	fsr1l,f,c
 10011  014DBC  0EFF               	movlw	255
 10012  014DBE  22E2               	addwfc	fsr1h,f,c
 10013  014DC0  0012               	return		;funcret
 10014  014DC2                     __end_of_stoa:
 10015                           	opt callstack 0
 10016                           
 10017 ;; *************** function _efgtoa *****************
 10018 ;; Defined at:
 10019 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10022 ;;		 -> f(6), NULL(0), 
 10023 ;;  f               4  [STACK] PTR struct _IO_FILE
 10024 ;;  c               1  [STACK] unsigned char 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  u               4  [STACK] unsigned char 
 10027 ;;  g               4  [STACK] unsigned char 
 10028 ;;  l               4  [STACK] unsigned char 
 10029 ;;  h               4  [STACK] unsigned char 
 10030 ;;  ou              4  [STACK] unsigned char 
 10031 ;;  n               2  [STACK] int 
 10032 ;;  e               2  [STACK] int 
 10033 ;;  i               2  [STACK] int 
 10034 ;;  w               2  [STACK] int 
 10035 ;;  p               2  [STACK] int 
 10036 ;;  sign            2  [STACK] int 
 10037 ;;  d               2  [STACK] int 
 10038 ;;  ne              2  [STACK] int 
 10039 ;;  m               2  [STACK] int 
 10040 ;;  pp              2  [STACK] int 
 10041 ;;  t               2  [STACK] int 
 10042 ;;  mode            1  [STACK] unsigned char 
 10043 ;;  nmode           1  [STACK] unsigned char 
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  2  [STACK] int 
 10046 ;; Registers used:
 10047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/5
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10057 ;;Total ram usage:        0 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; Hardware stack levels required when called:   11
 10060 ;; This function calls:
 10061 ;;		___awdiv
 10062 ;;		___awmod
 10063 ;;		___fladd
 10064 ;;		___fldiv
 10065 ;;		___fleq
 10066 ;;		___flge
 10067 ;;		___flmul
 10068 ;;		___flneg
 10069 ;;		___flsub
 10070 ;;		___fltol
 10071 ;;		___fpclassifyf
 10072 ;;		_floorf
 10073 ;;		_isupper
 10074 ;;		_pad
 10075 ;;		_strcpy
 10076 ;;		_tolower
 10077 ;; This function is called by:
 10078 ;;		_vfpfcnvrt
 10079 ;; This function uses a reentrant model
 10080 ;;
 10081                           
 10082                           	psect	text45
 10083  010000                     __ptext45:
 10084                           	opt callstack 0
 10085  010000                     _efgtoa:
 10086                           	opt callstack 0
 10087                           
 10088                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10089  010000  0E38               	movlw	56
 10090  010002  26E1               	addwf	fsr1l,f,c
 10091  010004  0E00               	movlw	0
 10092  010006  22E2               	addwfc	fsr1h,f,c
 10093                           
 10094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10095                           ;stkvar	_sign @ sp[(-56)+42]
 10096                           
 10097                           ;incstack = 0
 10098  010008  0EF2               	movlw	-14
 10099  01000A  6AE3               	clrf	plusw1,c
 10100  01000C  0EF3               	movlw	-13
 10101  01000E  6AE3               	clrf	plusw1,c
 10102                           
 10103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10104                           ;stkvar	_f @ sp[(-56)+-6]
 10105  010010  0EC2               	movlw	-62
 10106  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10107  010018  0EC3               	movlw	-61
 10108  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10109  010020  0EC4               	movlw	-60
 10110  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10111  010028  0EC5               	movlw	-59
 10112  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10113                           
 10114                           ;stkvar	_g @ sp[(-56)+16]
 10115  010030  0ED8               	movlw	-40
 10116  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10117  010038  0ED9               	movlw	-39
 10118  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10119  010040  0EDA               	movlw	-38
 10120  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10121  010048  0EDB               	movlw	-37
 10122  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10123                           
 10124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10125                           ;stkvar	_g @ sp[(-56)+16]
 10126  010050  0EDB               	movlw	-37
 10127  010052  AEE3               	btfss	plusw1,7,c
 10128  010054  D02B               	goto	l9335
 10129                           
 10130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10131  010056  0E01               	movlw	1
 10132  010058  6E3C               	movwf	(btemp+10)^0,c
 10133  01005A  0E00               	movlw	0
 10134  01005C  6E3D               	movwf	(btemp+11)^0,c
 10135                           
 10136                           ;stkvar	_sign @ sp[(-56)+42]
 10137  01005E  0EF2               	movlw	-14
 10138  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10139  010066  0EF3               	movlw	-13
 10140  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10141                           
 10142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10143                           ;stkvar	_g @ sp[(-56)+16]
 10144  01006E  0ED8               	movlw	-40
 10145  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10146  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10147  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10148  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10149  010088  EC44  F0BD         	call	___flneg	;wreg free
 10150                           
 10151                           ;stkvar	_g @ sp[(-56)+16]
 10152  01008C  0ED8               	movlw	-40
 10153  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10154  010094  0ED9               	movlw	-39
 10155  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10156  01009C  0EDA               	movlw	-38
 10157  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10158  0100A4  0EDB               	movlw	-37
 10159  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10160  0100AC                     l9335:
 10161                           
 10162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10163                           ;stkvar	_n @ sp[(-56)+32]
 10164  0100AC  0EE8               	movlw	-24
 10165  0100AE  6AE3               	clrf	plusw1,c
 10166  0100B0  0EE9               	movlw	-23
 10167  0100B2  6AE3               	clrf	plusw1,c
 10168                           
 10169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10170                           ;stkvar	_w @ sp[(-56)+38]
 10171  0100B4  0EEE               	movlw	-18
 10172  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10173  0100BC  0EEF               	movlw	-17
 10174  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10175                           
 10176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10177                           ;stkvar	_sign @ sp[(-56)+42]
 10178  0100C4  0EF2               	movlw	-14
 10179  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10180  0100CC  0EF3               	movlw	-13
 10181  0100CE  50E3               	movf	plusw1,w,c
 10182  0100D0  1032               	iorwf	btemp^0,w,c
 10183  0100D2  A4D8               	btfss	status,2,c
 10184  0100D4  D002               	goto	u9070
 10185  0100D6  A41F               	btfss	_flags^0,2,c
 10186  0100D8  D036               	goto	l9355
 10187  0100DA                     u9070:
 10188                           
 10189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10190                           ;stkvar	_sign @ sp[(-56)+42]
 10191  0100DA  0EF2               	movlw	-14
 10192  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10193  0100E2  0EF3               	movlw	-13
 10194  0100E4  50E3               	movf	plusw1,w,c
 10195  0100E6  1032               	iorwf	btemp^0,w,c
 10196  0100E8  A4D8               	btfss	status,2,c
 10197  0100EA  D002               	goto	l9347
 10198  0100EC  0E2B               	movlw	43
 10199  0100EE  D001               	goto	L8
 10200  0100F0                     l9347:
 10201  0100F0  0E2D               	movlw	45
 10202  0100F2                     L8:
 10203  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10204  0100F4  0E00               	movlw	0
 10205  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10206                           
 10207                           ;stkvar	_efgtoa$4399 @ sp[(-56)+10]
 10208  0100F8  0ED2               	movlw	-46
 10209  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10210  010100  0ED3               	movlw	-45
 10211  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10212                           
 10213                           ;stkvar	_efgtoa$4399 @ sp[(-56)+10]
 10214  010108  0ED2               	movlw	-46
 10215  01010A  006F FF8C  F2AC    	movff	plusw1,_dbuf
 10216                           
 10217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10218                           ;stkvar	_n @ sp[(-56)+32]
 10219  010110  0EE8               	movlw	-24
 10220  010112  50E3               	movf	plusw1,w,c
 10221  010114  0F01               	addlw	1
 10222  010116  6E32               	movwf	btemp^0,c
 10223  010118  0EE8               	movlw	-24
 10224  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10225  010120  6A32               	clrf	btemp^0,c
 10226  010122  0EE9               	movlw	-23
 10227  010124  50E3               	movf	plusw1,w,c
 10228  010126  2032               	addwfc	btemp^0,w,c
 10229  010128  6E32               	movwf	btemp^0,c
 10230  01012A  0EE9               	movlw	-23
 10231  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10232                           
 10233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10234                           ;stkvar	_w @ sp[(-56)+38]
 10235  010132  50E1               	movf	fsr1l,w,c
 10236  010134  0FEE               	addlw	-18
 10237  010136  6ED9               	movwf	fsr2l,c
 10238  010138  50E2               	movf	fsr1h,w,c
 10239  01013A  6EDA               	movwf	fsr2h,c
 10240  01013C  0EFF               	movlw	255
 10241  01013E  22DA               	addwfc	fsr2h,f,c
 10242  010140  06DE               	decf	postinc2,f,c
 10243  010142  0E00               	movlw	0
 10244  010144  5ADD               	subwfb	postdec2,f,c
 10245  010146                     l9355:
 10246                           
 10247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10248                           ;stkvar	_g @ sp[(-56)+16]
 10249  010146  0ED8               	movlw	-40
 10250  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10251  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10252  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10253  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10254  010160  EC4A  F0AE         	call	___fpclassifyf	;wreg free
 10255  010164  0432               	decf	btemp^0,w,c
 10256  010166  1033               	iorwf	(btemp+1)^0,w,c
 10257  010168  A4D8               	btfss	status,2,c
 10258  01016A  D076               	goto	l9373
 10259  01016C  0EBF               	movlw	191
 10260  01016E  6E3C               	movwf	(btemp+10)^0,c
 10261  010170  0EFF               	movlw	255
 10262  010172  6E3D               	movwf	(btemp+11)^0,c
 10263                           
 10264                           ;stkvar	_c @ sp[(-56)+-7]
 10265  010174  0EC1               	movlw	-63
 10266  010176  50E3               	movf	plusw1,w,c
 10267  010178  6E3A               	movwf	(btemp+8)^0,c
 10268  01017A  6A3B               	clrf	(btemp+9)^0,c
 10269  01017C  503C               	movf	(btemp+10)^0,w,c
 10270  01017E  263A               	addwf	(btemp+8)^0,f,c
 10271  010180  503D               	movf	(btemp+11)^0,w,c
 10272  010182  223B               	addwfc	(btemp+9)^0,f,c
 10273  010184  503B               	movf	(btemp+9)^0,w,c
 10274  010186  E106               	bnz	u9100
 10275  010188  0E1A               	movlw	26
 10276  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10277  01018C  B0D8               	btfsc	status,0,c
 10278  01018E  D002               	goto	u9100
 10279  010190  0E01               	movlw	1
 10280  010192  D001               	goto	u9110
 10281  010194                     u9100:
 10282  010194  0E00               	movlw	0
 10283  010196                     u9110:
 10284  010196  6E3C               	movwf	(btemp+10)^0,c
 10285  010198  6A3D               	clrf	(btemp+11)^0,c
 10286                           
 10287                           ;stkvar	_efgtoa$4400 @ sp[(-56)+8]
 10288  01019A  0ED0               	movlw	-48
 10289  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10290  0101A2  0ED1               	movlw	-47
 10291  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10292                           
 10293                           ;stkvar	_efgtoa$4400 @ sp[(-56)+8]
 10294  0101AA  0ED0               	movlw	-48
 10295  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10296  0101B2  0ED1               	movlw	-47
 10297  0101B4  50E3               	movf	plusw1,w,c
 10298  0101B6  1032               	iorwf	btemp^0,w,c
 10299  0101B8  B4D8               	btfsc	status,2,c
 10300  0101BA  D017               	goto	l9365
 10301                           
 10302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10303  0101BC  0EE5               	movlw	low STR_34
 10304  0101BE  6EE6               	movwf	postinc1,c
 10305  0101C0  0EFF               	movlw	high STR_34
 10306  0101C2  6EE6               	movwf	postinc1,c
 10307                           
 10308                           ;stkvar	_n @ sp[(-58)+32]
 10309  0101C4  0EAC               	movlw	low _dbuf
 10310  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10311  0101C8  0E02               	movlw	high _dbuf
 10312  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10313  0101CC  0EE6               	movlw	-26
 10314  0101CE  50E3               	movf	plusw1,w,c
 10315  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10316  0101D2  0EE7               	movlw	-25
 10317  0101D4  50E3               	movf	plusw1,w,c
 10318  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10319  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10320  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10321  0101E4  EC06  F0B6         	call	_strcpy	;wreg free
 10322                           
 10323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10324  0101E8  D016               	goto	l9367
 10325  0101EA                     l9365:
 10326                           
 10327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10328  0101EA  0EED               	movlw	low STR_35
 10329  0101EC  6EE6               	movwf	postinc1,c
 10330  0101EE  0EFF               	movlw	high STR_35
 10331  0101F0  6EE6               	movwf	postinc1,c
 10332                           
 10333                           ;stkvar	_n @ sp[(-58)+32]
 10334  0101F2  0EAC               	movlw	low _dbuf
 10335  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10336  0101F6  0E02               	movlw	high _dbuf
 10337  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10338  0101FA  0EE6               	movlw	-26
 10339  0101FC  50E3               	movf	plusw1,w,c
 10340  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10341  010200  0EE7               	movlw	-25
 10342  010202  50E3               	movf	plusw1,w,c
 10343  010204  223D               	addwfc	(btemp+11)^0,f,c
 10344  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10345  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10346  010212  EC06  F0B6         	call	_strcpy	;wreg free
 10347  010216                     l9367:
 10348                           
 10349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10350                           ;stkvar	_w @ sp[(-56)+38]
 10351  010216  50E1               	movf	fsr1l,w,c
 10352  010218  0FEE               	addlw	-18
 10353  01021A  6ED9               	movwf	fsr2l,c
 10354  01021C  50E2               	movf	fsr1h,w,c
 10355  01021E  6EDA               	movwf	fsr2h,c
 10356  010220  0EFF               	movlw	255
 10357  010222  22DA               	addwfc	fsr2h,f,c
 10358  010224  0EFD               	movlw	253
 10359  010226  26DE               	addwf	postinc2,f,c
 10360  010228  0EFF               	movlw	255
 10361  01022A  22DD               	addwfc	postdec2,f,c
 10362  01022C                     l9369:
 10363                           
 10364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10365                           ;stkvar	_w @ sp[(-56)+38]
 10366  01022C  0EEE               	movlw	-18
 10367  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10368  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10369  01023A  0EAC               	movlw	low _dbuf
 10370  01023C  6EE6               	movwf	postinc1,c
 10371  01023E  0E02               	movlw	high _dbuf
 10372  010240  6EE6               	movwf	postinc1,c
 10373                           
 10374                           ;stkvar	_fp @ sp[(-60)+-2]
 10375  010242  0EC2               	movlw	-62
 10376  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10377  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10378  010250  EC89  F0B3         	call	_pad	;wreg free
 10379  010254  EF1D  F089         	goto	l1862
 10380  010258                     l9373:
 10381                           
 10382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10383                           ;stkvar	_g @ sp[(-56)+16]
 10384  010258  0ED8               	movlw	-40
 10385  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10386  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10387  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10388  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10389  010272  EC4A  F0AE         	call	___fpclassifyf	;wreg free
 10390  010276  5032               	movf	btemp^0,w,c
 10391  010278  1033               	iorwf	(btemp+1)^0,w,c
 10392  01027A  A4D8               	btfss	status,2,c
 10393  01027C  D056               	goto	l9391
 10394  01027E  0EBF               	movlw	191
 10395  010280  6E3C               	movwf	(btemp+10)^0,c
 10396  010282  0EFF               	movlw	255
 10397  010284  6E3D               	movwf	(btemp+11)^0,c
 10398                           
 10399                           ;stkvar	_c @ sp[(-56)+-7]
 10400  010286  0EC1               	movlw	-63
 10401  010288  50E3               	movf	plusw1,w,c
 10402  01028A  6E3A               	movwf	(btemp+8)^0,c
 10403  01028C  6A3B               	clrf	(btemp+9)^0,c
 10404  01028E  503C               	movf	(btemp+10)^0,w,c
 10405  010290  263A               	addwf	(btemp+8)^0,f,c
 10406  010292  503D               	movf	(btemp+11)^0,w,c
 10407  010294  223B               	addwfc	(btemp+9)^0,f,c
 10408  010296  503B               	movf	(btemp+9)^0,w,c
 10409  010298  E106               	bnz	u9140
 10410  01029A  0E1A               	movlw	26
 10411  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10412  01029E  B0D8               	btfsc	status,0,c
 10413  0102A0  D002               	goto	u9140
 10414  0102A2  0E01               	movlw	1
 10415  0102A4  D001               	goto	u9150
 10416  0102A6                     u9140:
 10417  0102A6  0E00               	movlw	0
 10418  0102A8                     u9150:
 10419  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10420  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10421                           
 10422                           ;stkvar	_efgtoa$4404 @ sp[(-56)+6]
 10423  0102AC  0ECE               	movlw	-50
 10424  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10425  0102B4  0ECF               	movlw	-49
 10426  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10427                           
 10428                           ;stkvar	_efgtoa$4404 @ sp[(-56)+6]
 10429  0102BC  0ECE               	movlw	-50
 10430  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10431  0102C4  0ECF               	movlw	-49
 10432  0102C6  50E3               	movf	plusw1,w,c
 10433  0102C8  1032               	iorwf	btemp^0,w,c
 10434  0102CA  B4D8               	btfsc	status,2,c
 10435  0102CC  D017               	goto	l9383
 10436                           
 10437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10438  0102CE  0EE9               	movlw	low STR_38
 10439  0102D0  6EE6               	movwf	postinc1,c
 10440  0102D2  0EFF               	movlw	high STR_38
 10441  0102D4  6EE6               	movwf	postinc1,c
 10442                           
 10443                           ;stkvar	_n @ sp[(-58)+32]
 10444  0102D6  0EAC               	movlw	low _dbuf
 10445  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10446  0102DA  0E02               	movlw	high _dbuf
 10447  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10448  0102DE  0EE6               	movlw	-26
 10449  0102E0  50E3               	movf	plusw1,w,c
 10450  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10451  0102E4  0EE7               	movlw	-25
 10452  0102E6  50E3               	movf	plusw1,w,c
 10453  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10454  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10455  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10456  0102F6  EC06  F0B6         	call	_strcpy	;wreg free
 10457                           
 10458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10459  0102FA  D78D               	goto	l9367
 10460  0102FC                     l9383:
 10461                           
 10462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10463  0102FC  0EF1               	movlw	low STR_39
 10464  0102FE  6EE6               	movwf	postinc1,c
 10465  010300  0EFF               	movlw	high STR_39
 10466  010302  6EE6               	movwf	postinc1,c
 10467                           
 10468                           ;stkvar	_n @ sp[(-58)+32]
 10469  010304  0EAC               	movlw	low _dbuf
 10470  010306  6E3C               	movwf	(btemp+10)^0,c
 10471  010308  0E02               	movlw	high _dbuf
 10472  01030A  6E3D               	movwf	(btemp+11)^0,c
 10473  01030C  0EE6               	movlw	-26
 10474  01030E  50E3               	movf	plusw1,w,c
 10475  010310  263C               	addwf	(btemp+10)^0,f,c
 10476  010312  0EE7               	movlw	-25
 10477  010314  50E3               	movf	plusw1,w,c
 10478  010316  223D               	addwfc	(btemp+11)^0,f,c
 10479  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10480  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10481  010324  EC06  F0B6         	call	_strcpy	;wreg free
 10482  010328  D776               	goto	l9367
 10483  01032A                     l9391:
 10484                           
 10485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10486  01032A  0E00               	movlw	0
 10487  01032C  6E3A               	movwf	(btemp+8)^0,c
 10488  01032E  0E00               	movlw	0
 10489  010330  6E3B               	movwf	(btemp+9)^0,c
 10490  010332  0E80               	movlw	128
 10491  010334  6E3C               	movwf	(btemp+10)^0,c
 10492  010336  0E3F               	movlw	63
 10493  010338  6E3D               	movwf	(btemp+11)^0,c
 10494                           
 10495                           ;stkvar	_u @ sp[(-56)+12]
 10496  01033A  0ED4               	movlw	-44
 10497  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10498  010342  0ED5               	movlw	-43
 10499  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10500  01034A  0ED6               	movlw	-42
 10501  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10502  010352  0ED7               	movlw	-41
 10503  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10504                           
 10505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10506                           ;stkvar	_e @ sp[(-56)+34]
 10507  01035A  0EEA               	movlw	-22
 10508  01035C  6AE3               	clrf	plusw1,c
 10509  01035E  0EEB               	movlw	-21
 10510  010360  6AE3               	clrf	plusw1,c
 10511                           
 10512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10513  010362  0E00               	movlw	0
 10514  010364  6EE6               	movwf	postinc1,c
 10515  010366  0E00               	movlw	0
 10516  010368  6EE6               	movwf	postinc1,c
 10517  01036A  0E00               	movlw	0
 10518  01036C  6EE6               	movwf	postinc1,c
 10519  01036E  0E00               	movlw	0
 10520  010370  6EE6               	movwf	postinc1,c
 10521                           
 10522                           ;stkvar	_g @ sp[(-60)+16]
 10523  010372  0ED4               	movlw	-44
 10524  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10525  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10526  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10527  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10528  01038C  ECD3  F0B6         	call	___fleq	;wreg free
 10529  010390  A032               	btfss	btemp& (0+255),0,c
 10530  010392  D039               	goto	l9403
 10531  010394  D0BC               	goto	u9190
 10532  010396                     l9399:
 10533                           
 10534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10535  010396  0E00               	movlw	0
 10536  010398  6EE6               	movwf	postinc1,c
 10537  01039A  0E00               	movlw	0
 10538  01039C  6EE6               	movwf	postinc1,c
 10539  01039E  0E20               	movlw	32
 10540  0103A0  6EE6               	movwf	postinc1,c
 10541  0103A2  0E41               	movlw	65
 10542  0103A4  6EE6               	movwf	postinc1,c
 10543                           
 10544                           ;stkvar	_u @ sp[(-60)+12]
 10545  0103A6  0ED0               	movlw	-48
 10546  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10547  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10548  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10549  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10550  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10551                           
 10552                           ;stkvar	_u @ sp[(-56)+12]
 10553  0103C4  0ED4               	movlw	-44
 10554  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10555  0103CC  0ED5               	movlw	-43
 10556  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10557  0103D4  0ED6               	movlw	-42
 10558  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10559  0103DC  0ED7               	movlw	-41
 10560  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10561                           
 10562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10563                           ;stkvar	_e @ sp[(-56)+34]
 10564  0103E4  0EEA               	movlw	-22
 10565  0103E6  50E3               	movf	plusw1,w,c
 10566  0103E8  0F01               	addlw	1
 10567  0103EA  6E32               	movwf	btemp^0,c
 10568  0103EC  0EEA               	movlw	-22
 10569  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10570  0103F4  6A32               	clrf	btemp^0,c
 10571  0103F6  0EEB               	movlw	-21
 10572  0103F8  50E3               	movf	plusw1,w,c
 10573  0103FA  2032               	addwfc	btemp^0,w,c
 10574  0103FC  6E32               	movwf	btemp^0,c
 10575  0103FE  0EEB               	movlw	-21
 10576  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10577  010406                     l9403:
 10578                           
 10579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10580  010406  0E00               	movlw	0
 10581  010408  6EE6               	movwf	postinc1,c
 10582  01040A  0E00               	movlw	0
 10583  01040C  6EE6               	movwf	postinc1,c
 10584  01040E  0E20               	movlw	32
 10585  010410  6EE6               	movwf	postinc1,c
 10586  010412  0E41               	movlw	65
 10587  010414  6EE6               	movwf	postinc1,c
 10588                           
 10589                           ;stkvar	_u @ sp[(-60)+12]
 10590  010416  0ED0               	movlw	-48
 10591  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10592  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10593  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10594  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10595  010430  ECC1  F08E         	call	___flmul	;wreg free
 10596  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10597  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10598  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10599  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10600                           
 10601                           ;stkvar	_g @ sp[(-60)+16]
 10602  01044C  0ED4               	movlw	-44
 10603  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10604  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10605  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10606  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10607  010466  ECCE  F0AF         	call	___flge	;wreg free
 10608  01046A  A032               	btfss	btemp& (0+255),0,c
 10609  01046C  D032               	goto	l9409
 10610  01046E  D793               	goto	l9399
 10611  010470                     l9405:
 10612                           
 10613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10614  010470  0E00               	movlw	0
 10615  010472  6EE6               	movwf	postinc1,c
 10616  010474  0E00               	movlw	0
 10617  010476  6EE6               	movwf	postinc1,c
 10618  010478  0E20               	movlw	32
 10619  01047A  6EE6               	movwf	postinc1,c
 10620  01047C  0E41               	movlw	65
 10621  01047E  6EE6               	movwf	postinc1,c
 10622                           
 10623                           ;stkvar	_u @ sp[(-60)+12]
 10624  010480  0ED0               	movlw	-48
 10625  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10626  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10627  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10628  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10629  01049A  EC77  F099         	call	___fldiv	;wreg free
 10630                           
 10631                           ;stkvar	_u @ sp[(-56)+12]
 10632  01049E  0ED4               	movlw	-44
 10633  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10634  0104A6  0ED5               	movlw	-43
 10635  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10636  0104AE  0ED6               	movlw	-42
 10637  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10638  0104B6  0ED7               	movlw	-41
 10639  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10640                           
 10641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10642                           ;stkvar	_e @ sp[(-56)+34]
 10643  0104BE  50E1               	movf	fsr1l,w,c
 10644  0104C0  0FEA               	addlw	-22
 10645  0104C2  6ED9               	movwf	fsr2l,c
 10646  0104C4  50E2               	movf	fsr1h,w,c
 10647  0104C6  6EDA               	movwf	fsr2h,c
 10648  0104C8  0EFF               	movlw	255
 10649  0104CA  22DA               	addwfc	fsr2h,f,c
 10650  0104CC  06DE               	decf	postinc2,f,c
 10651  0104CE  0E00               	movlw	0
 10652  0104D0  5ADD               	subwfb	postdec2,f,c
 10653  0104D2                     l9409:
 10654                           
 10655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10656                           ;stkvar	_u @ sp[(-56)+12]
 10657  0104D2  0ED4               	movlw	-44
 10658  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10659  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10660  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10661  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10662                           
 10663                           ;stkvar	_g @ sp[(-60)+16]
 10664  0104EC  0ED4               	movlw	-44
 10665  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10666  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10667  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10668  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10669  010506  ECCE  F0AF         	call	___flge	;wreg free
 10670  01050A  A032               	btfss	btemp& (0+255),0,c
 10671  01050C  D7B1               	goto	l9405
 10672  01050E                     u9190:
 10673                           
 10674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10675                           ;stkvar	_c @ sp[(-56)+-7]
 10676  01050E  0EC1               	movlw	-63
 10677  010510  50E3               	movf	plusw1,w,c
 10678  010512  6EE6               	movwf	postinc1,c
 10679  010514  0E00               	movlw	0
 10680  010516  6EE6               	movwf	postinc1,c
 10681  010518  ECE6  F0B9         	call	_tolower	;wreg free
 10682                           
 10683                           ;stkvar	_mode @ sp[(-56)+54]
 10684  01051C  0EFE               	movlw	-2
 10685  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10686                           
 10687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10688                           ;stkvar	_mode @ sp[(-56)+54]
 10689                           ;stkvar	_nmode @ sp[(-56)+55]
 10690  010524  0EFE               	movlw	-2
 10691  010526  006F FF8C  F032    	movff	plusw1,btemp
 10692  01052C  0EFF               	movlw	-1
 10693  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10694                           
 10695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10696                           ;stkvar	_mode @ sp[(-56)+54]
 10697  010534  0EFE               	movlw	-2
 10698  010536  006F FF8C  F032    	movff	plusw1,btemp
 10699  01053C  0E67               	movlw	103
 10700  01053E  1832               	xorwf	btemp^0,w,c
 10701  010540  A4D8               	btfss	status,2,c
 10702  010542  D025               	goto	l9427
 10703                           
 10704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10705  010544  501D               	movf	_prec^0,w,c
 10706  010546  101E               	iorwf	(_prec+1)^0,w,c
 10707  010548  A4D8               	btfss	status,2,c
 10708  01054A  D004               	goto	l9421
 10709                           
 10710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10711  01054C  0E00               	movlw	0
 10712  01054E  6E1E               	movwf	(_prec+1)^0,c
 10713  010550  0E01               	movlw	1
 10714  010552  6E1D               	movwf	_prec^0,c
 10715  010554                     l9421:
 10716                           
 10717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10718  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10719  010556  D005               	goto	u9220
 10720  010558  501E               	movf	(_prec+1)^0,w,c
 10721  01055A  E110               	bnz	l9425
 10722  01055C  041D               	decf	_prec^0,w,c
 10723  01055E  B0D8               	btfsc	status,0,c
 10724  010560  D00D               	goto	l9425
 10725  010562                     u9220:
 10726  010562  0E06               	movlw	6
 10727  010564  6E3C               	movwf	(btemp+10)^0,c
 10728  010566  0E00               	movlw	0
 10729  010568  6E3D               	movwf	(btemp+11)^0,c
 10730                           
 10731                           ;stkvar	_p @ sp[(-56)+40]
 10732  01056A  0EF0               	movlw	-16
 10733  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10734  010572  0EF1               	movlw	-15
 10735  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10736  01057A  D00C               	goto	l9433
 10737  01057C                     l9425:
 10738                           
 10739                           ;stkvar	_p @ sp[(-56)+40]
 10740  01057C  0EF0               	movlw	-16
 10741  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10742  010584  0EF1               	movlw	-15
 10743  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10744  01058C  D003               	goto	l9433
 10745  01058E                     l9427:
 10746                           
 10747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10748  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10749  010590  D7F5               	goto	l9425
 10750  010592  D7E7               	goto	u9220
 10751  010594                     l9433:
 10752                           
 10753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10754                           ;stkvar	_mode @ sp[(-56)+54]
 10755  010594  0EFE               	movlw	-2
 10756  010596  006F FF8C  F032    	movff	plusw1,btemp
 10757  01059C  0E67               	movlw	103
 10758  01059E  1832               	xorwf	btemp^0,w,c
 10759  0105A0  A4D8               	btfss	status,2,c
 10760  0105A2  D02F               	goto	l9443
 10761                           
 10762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10763                           ;stkvar	_e @ sp[(-56)+34]
 10764  0105A4  0EEB               	movlw	-21
 10765  0105A6  AEE3               	btfss	plusw1,7,c
 10766  0105A8  D00E               	goto	u9250
 10767  0105AA  0EEA               	movlw	-22
 10768  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10769  0105B2  0EFC               	movlw	252
 10770  0105B4  5E32               	subwf	btemp^0,f,c
 10771  0105B6  0EEB               	movlw	-21
 10772  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10773  0105BE  0EFF               	movlw	255
 10774  0105C0  5A32               	subwfb	btemp^0,f,c
 10775  0105C2  A0D8               	btfss	status,0,c
 10776  0105C4  D018               	goto	l9441
 10777  0105C6                     u9250:
 10778                           
 10779                           ;stkvar	_e @ sp[(-56)+34]
 10780                           ;stkvar	_p @ sp[(-56)+40]
 10781  0105C6  0EF0               	movlw	-16
 10782  0105C8  50E3               	movf	plusw1,w,c
 10783  0105CA  0FFF               	addlw	255
 10784  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10785  0105CE  0EF1               	movlw	-15
 10786  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10787  0105D6  0EFF               	movlw	255
 10788  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10789  0105DA  0EEA               	movlw	-22
 10790  0105DC  50E3               	movf	plusw1,w,c
 10791  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10792  0105E0  503D               	movf	(btemp+11)^0,w,c
 10793  0105E2  0A80               	xorlw	128
 10794  0105E4  6E32               	movwf	btemp^0,c
 10795  0105E6  0EEB               	movlw	-21
 10796  0105E8  50E3               	movf	plusw1,w,c
 10797  0105EA  0A80               	xorlw	128
 10798  0105EC  5832               	subwfb	btemp^0,w,c
 10799  0105EE  A0D8               	btfss	status,0,c
 10800  0105F0  D002               	goto	l9441
 10801                           
 10802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10803  0105F2  0E66               	movlw	102
 10804  0105F4  D001               	goto	L9
 10805  0105F6                     l9441:
 10806                           
 10807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10808  0105F6  0E65               	movlw	101
 10809  0105F8                     L9:
 10810  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10811                           
 10812                           ;stkvar	_nmode @ sp[(-56)+55]
 10813  0105FA  0EFF               	movlw	-1
 10814  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10815  010602                     l9443:
 10816                           
 10817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10818                           ;stkvar	_p @ sp[(-56)+40]
 10819                           ;stkvar	_m @ sp[(-56)+48]
 10820  010602  0EF0               	movlw	-16
 10821  010604  006F FF8C  F032    	movff	plusw1,btemp
 10822  01060A  0EF8               	movlw	-8
 10823  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10824  010612  0EF1               	movlw	-15
 10825  010614  006F FF8C  F032    	movff	plusw1,btemp
 10826  01061A  0EF9               	movlw	-7
 10827  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10828                           
 10829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10830                           ;stkvar	_mode @ sp[(-56)+54]
 10831  010622  0EFE               	movlw	-2
 10832  010624  006F FF8C  F032    	movff	plusw1,btemp
 10833  01062A  0E67               	movlw	103
 10834  01062C  1832               	xorwf	btemp^0,w,c
 10835  01062E  A4D8               	btfss	status,2,c
 10836  010630  D00B               	goto	u9290
 10837                           
 10838                           ;stkvar	_nmode @ sp[(-56)+55]
 10839  010632  0EFF               	movlw	-1
 10840  010634  006F FF8C  F032    	movff	plusw1,btemp
 10841  01063A  0E66               	movlw	102
 10842  01063C  1832               	xorwf	btemp^0,w,c
 10843  01063E  A4D8               	btfss	status,2,c
 10844  010640  D014               	goto	l1891
 10845                           
 10846                           ;stkvar	_e @ sp[(-56)+34]
 10847  010642  0EEB               	movlw	-21
 10848  010644  AEE3               	btfss	plusw1,7,c
 10849  010646  D011               	goto	l1891
 10850  010648                     u9290:
 10851                           
 10852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10853                           ;stkvar	_m @ sp[(-56)+48]
 10854  010648  0EF8               	movlw	-8
 10855  01064A  50E3               	movf	plusw1,w,c
 10856  01064C  0F01               	addlw	1
 10857  01064E  6E32               	movwf	btemp^0,c
 10858  010650  0EF8               	movlw	-8
 10859  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 10860  010658  6A32               	clrf	btemp^0,c
 10861  01065A  0EF9               	movlw	-7
 10862  01065C  50E3               	movf	plusw1,w,c
 10863  01065E  2032               	addwfc	btemp^0,w,c
 10864  010660  6E32               	movwf	btemp^0,c
 10865  010662  0EF9               	movlw	-7
 10866  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 10867  01066A                     l1891:
 10868                           
 10869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10870                           ;stkvar	_nmode @ sp[(-56)+55]
 10871  01066A  0EFF               	movlw	-1
 10872  01066C  006F FF8C  F032    	movff	plusw1,btemp
 10873  010672  0E66               	movlw	102
 10874  010674  1832               	xorwf	btemp^0,w,c
 10875  010676  A4D8               	btfss	status,2,c
 10876  010678  D03B               	goto	l9463
 10877                           
 10878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10879                           ;stkvar	_e @ sp[(-56)+34]
 10880  01067A  0EEB               	movlw	-21
 10881  01067C  AEE3               	btfss	plusw1,7,c
 10882  01067E  D01C               	goto	l9459
 10883                           
 10884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10885  010680  0E00               	movlw	0
 10886  010682  6E3A               	movwf	(btemp+8)^0,c
 10887  010684  0E00               	movlw	0
 10888  010686  6E3B               	movwf	(btemp+9)^0,c
 10889  010688  0E80               	movlw	128
 10890  01068A  6E3C               	movwf	(btemp+10)^0,c
 10891  01068C  0E3F               	movlw	63
 10892  01068E  6E3D               	movwf	(btemp+11)^0,c
 10893                           
 10894                           ;stkvar	_u @ sp[(-56)+12]
 10895  010690  0ED4               	movlw	-44
 10896  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10897  010698  0ED5               	movlw	-43
 10898  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10899  0106A0  0ED6               	movlw	-42
 10900  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10901  0106A8  0ED7               	movlw	-41
 10902  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10903                           
 10904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10905                           ;stkvar	_e @ sp[(-56)+34]
 10906  0106B0  0EEA               	movlw	-22
 10907  0106B2  6AE3               	clrf	plusw1,c
 10908  0106B4  0EEB               	movlw	-21
 10909  0106B6  6AE3               	clrf	plusw1,c
 10910  0106B8                     l9459:
 10911                           
 10912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10913                           ;stkvar	_mode @ sp[(-56)+54]
 10914  0106B8  0EFE               	movlw	-2
 10915  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 10916  0106C0  0E67               	movlw	103
 10917  0106C2  1832               	xorwf	btemp^0,w,c
 10918  0106C4  B4D8               	btfsc	status,2,c
 10919  0106C6  D014               	goto	l9463
 10920                           
 10921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10922                           ;stkvar	_e @ sp[(-56)+34]
 10923                           ;stkvar	_m @ sp[(-56)+48]
 10924  0106C8  0EF8               	movlw	-8
 10925  0106CA  50E3               	movf	plusw1,w,c
 10926  0106CC  6E32               	movwf	btemp^0,c
 10927  0106CE  0EEA               	movlw	-22
 10928  0106D0  50E3               	movf	plusw1,w,c
 10929  0106D2  2632               	addwf	btemp^0,f,c
 10930  0106D4  0EF8               	movlw	-8
 10931  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10932  0106DC  0EF9               	movlw	-7
 10933  0106DE  50E3               	movf	plusw1,w,c
 10934  0106E0  6E32               	movwf	btemp^0,c
 10935  0106E2  0EEB               	movlw	-21
 10936  0106E4  50E3               	movf	plusw1,w,c
 10937  0106E6  2232               	addwfc	btemp^0,f,c
 10938  0106E8  0EF9               	movlw	-7
 10939  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10940  0106F0                     l9463:
 10941                           
 10942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10943                           ;stkvar	_i @ sp[(-56)+36]
 10944  0106F0  0EEC               	movlw	-20
 10945  0106F2  6AE3               	clrf	plusw1,c
 10946  0106F4  0EED               	movlw	-19
 10947  0106F6  6AE3               	clrf	plusw1,c
 10948                           
 10949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10950                           ;stkvar	_g @ sp[(-56)+16]
 10951  0106F8  0ED8               	movlw	-40
 10952  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 10953  010700  0ED9               	movlw	-39
 10954  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 10955  010708  0EDA               	movlw	-38
 10956  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10957  010710  0EDB               	movlw	-37
 10958  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 10959                           
 10960                           ;stkvar	_h @ sp[(-56)+24]
 10961  010718  0EE0               	movlw	-32
 10962  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10963  010720  0EE1               	movlw	-31
 10964  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10965  010728  0EE2               	movlw	-30
 10966  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10967  010730  0EE3               	movlw	-29
 10968  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10969                           
 10970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10971                           ;stkvar	_u @ sp[(-56)+12]
 10972  010738  0ED4               	movlw	-44
 10973  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 10974  010740  0ED5               	movlw	-43
 10975  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 10976  010748  0ED6               	movlw	-42
 10977  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10978  010750  0ED7               	movlw	-41
 10979  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 10980                           
 10981                           ;stkvar	_ou @ sp[(-56)+28]
 10982  010758  0EE4               	movlw	-28
 10983  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10984  010760  0EE5               	movlw	-27
 10985  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10986  010768  0EE6               	movlw	-26
 10987  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10988  010770  0EE7               	movlw	-25
 10989  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10990                           
 10991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10992  010778  D0D6               	goto	l9479
 10993  01077A                     l9469:
 10994                           
 10995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10996                           ;stkvar	_u @ sp[(-56)+12]
 10997  01077A  0ED4               	movlw	-44
 10998  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10999  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11000  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11001  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11002                           
 11003                           ;stkvar	_h @ sp[(-60)+24]
 11004  010794  0EDC               	movlw	-36
 11005  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11006  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11007  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11008  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11009  0107AE  EC77  F099         	call	___fldiv	;wreg free
 11010  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11011  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11012  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11013  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11014  0107CA  EC56  F0A2         	call	_floorf	;wreg free
 11015                           
 11016                           ;stkvar	_l @ sp[(-56)+20]
 11017  0107CE  0EDC               	movlw	-36
 11018  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11019  0107D6  0EDD               	movlw	-35
 11020  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11021  0107DE  0EDE               	movlw	-34
 11022  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11023  0107E6  0EDF               	movlw	-33
 11024  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11025                           
 11026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11027                           ;stkvar	_l @ sp[(-56)+20]
 11028  0107EE  0EDC               	movlw	-36
 11029  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11030  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11031  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11032  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11033  010808  EC15  F0AF         	call	___fltol	;wreg free
 11034  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11035  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11036                           
 11037                           ;stkvar	_d @ sp[(-56)+44]
 11038  010818  0EF4               	movlw	-12
 11039  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11040  010820  0EF5               	movlw	-11
 11041  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11042                           
 11043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11044                           ;stkvar	_u @ sp[(-56)+12]
 11045  010828  0ED4               	movlw	-44
 11046  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11047  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11048  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11049  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11050                           
 11051                           ;stkvar	_l @ sp[(-60)+20]
 11052  010842  0ED8               	movlw	-40
 11053  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11054  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11055  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11056  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11057  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11058  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11059  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11060  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11061  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11062                           
 11063                           ;stkvar	_h @ sp[(-60)+24]
 11064  010878  0EDC               	movlw	-36
 11065  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11066  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11067  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11068  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11069  010892  EC68  F0BD         	call	___flsub	;wreg free
 11070                           
 11071                           ;stkvar	_h @ sp[(-56)+24]
 11072  010896  0EE0               	movlw	-32
 11073  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11074  01089E  0EE1               	movlw	-31
 11075  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11076  0108A6  0EE2               	movlw	-30
 11077  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11078  0108AE  0EE3               	movlw	-29
 11079  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11080                           
 11081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11082  0108B6  0E00               	movlw	0
 11083  0108B8  6EE6               	movwf	postinc1,c
 11084  0108BA  0E00               	movlw	0
 11085  0108BC  6EE6               	movwf	postinc1,c
 11086  0108BE  0E20               	movlw	32
 11087  0108C0  6EE6               	movwf	postinc1,c
 11088  0108C2  0E41               	movlw	65
 11089  0108C4  6EE6               	movwf	postinc1,c
 11090                           
 11091                           ;stkvar	_u @ sp[(-60)+12]
 11092  0108C6  0ED0               	movlw	-48
 11093  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11094  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11095  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11096  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11097  0108E0  EC77  F099         	call	___fldiv	;wreg free
 11098                           
 11099                           ;stkvar	_u @ sp[(-56)+12]
 11100  0108E4  0ED4               	movlw	-44
 11101  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11102  0108EC  0ED5               	movlw	-43
 11103  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11104  0108F4  0ED6               	movlw	-42
 11105  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11106  0108FC  0ED7               	movlw	-41
 11107  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11108                           
 11109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11110                           ;stkvar	_i @ sp[(-56)+36]
 11111  010904  0EEC               	movlw	-20
 11112  010906  50E3               	movf	plusw1,w,c
 11113  010908  0F01               	addlw	1
 11114  01090A  6E32               	movwf	btemp^0,c
 11115  01090C  0EEC               	movlw	-20
 11116  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11117  010914  6A32               	clrf	btemp^0,c
 11118  010916  0EED               	movlw	-19
 11119  010918  50E3               	movf	plusw1,w,c
 11120  01091A  2032               	addwfc	btemp^0,w,c
 11121  01091C  6E32               	movwf	btemp^0,c
 11122  01091E  0EED               	movlw	-19
 11123  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11124  010926                     l9479:
 11125                           
 11126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11127                           ;stkvar	_m @ sp[(-56)+48]
 11128                           ;stkvar	_i @ sp[(-56)+36]
 11129  010926  50E1               	movf	fsr1l,w,c
 11130  010928  0FEC               	addlw	-20
 11131  01092A  6ED9               	movwf	fsr2l,c
 11132  01092C  50E2               	movf	fsr1h,w,c
 11133  01092E  6EDA               	movwf	fsr2h,c
 11134  010930  0EFF               	movlw	255
 11135  010932  22DA               	addwfc	fsr2h,f,c
 11136  010934  0EF8               	movlw	-8
 11137  010936  50E3               	movf	plusw1,w,c
 11138  010938  5CDE               	subwf	postinc2,w,c
 11139  01093A  50DE               	movf	postinc2,w,c
 11140  01093C  0A80               	xorlw	128
 11141  01093E  6E32               	movwf	btemp^0,c
 11142  010940  0EF9               	movlw	-7
 11143  010942  50E3               	movf	plusw1,w,c
 11144  010944  0A80               	xorlw	128
 11145  010946  5832               	subwfb	btemp^0,w,c
 11146  010948  A0D8               	btfss	status,0,c
 11147  01094A  D717               	goto	l9469
 11148                           
 11149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11150  01094C  0E00               	movlw	0
 11151  01094E  6EE6               	movwf	postinc1,c
 11152  010950  0E00               	movlw	0
 11153  010952  6EE6               	movwf	postinc1,c
 11154  010954  0EA0               	movlw	160
 11155  010956  6EE6               	movwf	postinc1,c
 11156  010958  0E40               	movlw	64
 11157  01095A  6EE6               	movwf	postinc1,c
 11158                           
 11159                           ;stkvar	_u @ sp[(-60)+12]
 11160  01095C  0ED0               	movlw	-48
 11161  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11162  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11163  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11164  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11165  010976  ECC1  F08E         	call	___flmul	;wreg free
 11166                           
 11167                           ;stkvar	_l @ sp[(-56)+20]
 11168  01097A  0EDC               	movlw	-36
 11169  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11170  010982  0EDD               	movlw	-35
 11171  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11172  01098A  0EDE               	movlw	-34
 11173  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11174  010992  0EDF               	movlw	-33
 11175  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11176                           
 11177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11178                           ;stkvar	_l @ sp[(-56)+20]
 11179  01099A  0EDC               	movlw	-36
 11180  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11181  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11182  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11183  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11184                           
 11185                           ;stkvar	_h @ sp[(-60)+24]
 11186  0109B4  0EDC               	movlw	-36
 11187  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11188  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11189  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11190  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11191  0109CE  ECCE  F0AF         	call	___flge	;wreg free
 11192  0109D2  A032               	btfss	btemp& (0+255),0,c
 11193  0109D4  D021               	goto	u9360
 11194                           
 11195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11196                           ;stkvar	_l @ sp[(-56)+20]
 11197                           
 11198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11199                           
 11200                           ;stkvar	_l @ sp[(-56)+20]
 11201                           
 11202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11203  0109D6  0EDC               	movlw	-36
 11204  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11205  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11206  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11207  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11208                           
 11209                           ;stkvar	_h @ sp[(-60)+24]
 11210  0109F0  0EDC               	movlw	-36
 11211  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11212  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11213  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11214  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11215  010A0A  ECD3  F0B6         	call	___fleq	;wreg free
 11216  010A0E  A032               	btfss	btemp& (0+255),0,c
 11217  010A10  D01B               	goto	l9493
 11218                           
 11219                           ;stkvar	_d @ sp[(-56)+44]
 11220  010A12  0EF4               	movlw	-12
 11221  010A14  B0E3               	btfsc	plusw1,0,c
 11222  010A16  D018               	goto	l9493
 11223  010A18                     u9360:
 11224                           
 11225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11226  010A18  0E00               	movlw	0
 11227  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11228  010A1C  0E00               	movlw	0
 11229  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11230  010A20  0E00               	movlw	0
 11231  010A22  6E3C               	movwf	(btemp+10)^0,c
 11232  010A24  0E00               	movlw	0
 11233  010A26  6E3D               	movwf	(btemp+11)^0,c
 11234                           
 11235                           ;stkvar	_l @ sp[(-56)+20]
 11236  010A28  0EDC               	movlw	-36
 11237  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11238  010A30  0EDD               	movlw	-35
 11239  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11240  010A38  0EDE               	movlw	-34
 11241  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11242  010A40  0EDF               	movlw	-33
 11243  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11244  010A48                     l9493:
 11245                           
 11246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11247                           ;stkvar	_l @ sp[(-56)+20]
 11248  010A48  0EDC               	movlw	-36
 11249  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11250  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11251  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11252  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11253                           
 11254                           ;stkvar	_g @ sp[(-60)+16]
 11255  010A62  0ED4               	movlw	-44
 11256  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11257  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11258  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11259  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11260  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11261                           
 11262                           ;stkvar	_h @ sp[(-56)+24]
 11263  010A80  0EE0               	movlw	-32
 11264  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11265  010A88  0EE1               	movlw	-31
 11266  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11267  010A90  0EE2               	movlw	-30
 11268  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11269  010A98  0EE3               	movlw	-29
 11270  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11271                           
 11272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11273                           ;stkvar	_ou @ sp[(-56)+28]
 11274  010AA0  0EE4               	movlw	-28
 11275  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11276  010AA8  0EE5               	movlw	-27
 11277  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11278  010AB0  0EE6               	movlw	-26
 11279  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11280  010AB8  0EE7               	movlw	-25
 11281  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11282                           
 11283                           ;stkvar	_u @ sp[(-56)+12]
 11284  010AC0  0ED4               	movlw	-44
 11285  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11286  010AC8  0ED5               	movlw	-43
 11287  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11288  010AD0  0ED6               	movlw	-42
 11289  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11290  010AD8  0ED7               	movlw	-41
 11291  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11292                           
 11293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11294                           ;stkvar	_nmode @ sp[(-56)+55]
 11295  010AE0  0EFF               	movlw	-1
 11296  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11297  010AE8  0E65               	movlw	101
 11298  010AEA  1832               	xorwf	btemp^0,w,c
 11299  010AEC  B4D8               	btfsc	status,2,c
 11300  010AEE  D011               	goto	l9501
 11301                           
 11302                           ;stkvar	_e @ sp[(-56)+34]
 11303                           ;stkvar	_ne @ sp[(-56)+46]
 11304  010AF0  0EEA               	movlw	-22
 11305  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11306  010AF8  0EF6               	movlw	-10
 11307  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11308  010B00  0EEB               	movlw	-21
 11309  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11310  010B08  0EF7               	movlw	-9
 11311  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11312  010B10  D004               	goto	l1906
 11313  010B12                     l9501:
 11314                           
 11315                           ;stkvar	_ne @ sp[(-56)+46]
 11316  010B12  0EF6               	movlw	-10
 11317  010B14  6AE3               	clrf	plusw1,c
 11318  010B16  0EF7               	movlw	-9
 11319  010B18  6AE3               	clrf	plusw1,c
 11320  010B1A                     l1906:
 11321                           
 11322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11323                           ;stkvar	_pp @ sp[(-56)+50]
 11324  010B1A  0EFA               	movlw	-6
 11325  010B1C  6AE3               	clrf	plusw1,c
 11326  010B1E  0EFB               	movlw	-5
 11327  010B20  6AE3               	clrf	plusw1,c
 11328                           
 11329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11330                           ;stkvar	_t @ sp[(-56)+52]
 11331  010B22  0EFC               	movlw	-4
 11332  010B24  6AE3               	clrf	plusw1,c
 11333  010B26  0EFD               	movlw	-3
 11334  010B28  6AE3               	clrf	plusw1,c
 11335                           
 11336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11337                           ;stkvar	_i @ sp[(-56)+36]
 11338  010B2A  0EEC               	movlw	-20
 11339  010B2C  6AE3               	clrf	plusw1,c
 11340  010B2E  0EED               	movlw	-19
 11341  010B30  6AE3               	clrf	plusw1,c
 11342                           
 11343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11344  010B32  D1B7               	goto	l9553
 11345  010B34                     l9503:
 11346                           
 11347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11348                           ;stkvar	_u @ sp[(-56)+12]
 11349  010B34  0ED4               	movlw	-44
 11350  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11351  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11352  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11353  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11354                           
 11355                           ;stkvar	_h @ sp[(-60)+24]
 11356  010B4E  0EDC               	movlw	-36
 11357  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11358  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11359  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11360  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11361  010B68  EC77  F099         	call	___fldiv	;wreg free
 11362  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11363  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11364  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11365  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11366  010B84  EC56  F0A2         	call	_floorf	;wreg free
 11367                           
 11368                           ;stkvar	_l @ sp[(-56)+20]
 11369  010B88  0EDC               	movlw	-36
 11370  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11371  010B90  0EDD               	movlw	-35
 11372  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11373  010B98  0EDE               	movlw	-34
 11374  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11375  010BA0  0EDF               	movlw	-33
 11376  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11377                           
 11378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11379                           ;stkvar	_l @ sp[(-56)+20]
 11380  010BA8  0EDC               	movlw	-36
 11381  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11382  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11383  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11384  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11385  010BC2  EC15  F0AF         	call	___fltol	;wreg free
 11386  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11387  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11388                           
 11389                           ;stkvar	_d @ sp[(-56)+44]
 11390  010BD2  0EF4               	movlw	-12
 11391  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11392  010BDA  0EF5               	movlw	-11
 11393  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11394                           
 11395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11396  010BE2  B81F               	btfsc	_flags^0,4,c
 11397  010BE4  D026               	goto	l9517
 11398                           
 11399                           ;stkvar	_d @ sp[(-56)+44]
 11400  010BE6  0EF4               	movlw	-12
 11401  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11402  010BEE  0EF5               	movlw	-11
 11403  010BF0  50E3               	movf	plusw1,w,c
 11404  010BF2  1032               	iorwf	btemp^0,w,c
 11405  010BF4  A4D8               	btfss	status,2,c
 11406  010BF6  D01D               	goto	l9517
 11407                           
 11408                           ;stkvar	_mode @ sp[(-56)+54]
 11409  010BF8  0EFE               	movlw	-2
 11410  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11411  010C00  0E67               	movlw	103
 11412  010C02  1832               	xorwf	btemp^0,w,c
 11413  010C04  A4D8               	btfss	status,2,c
 11414  010C06  D015               	goto	l9517
 11415                           
 11416                           ;stkvar	_ne @ sp[(-56)+46]
 11417  010C08  0EF7               	movlw	-9
 11418  010C0A  AEE3               	btfss	plusw1,7,c
 11419  010C0C  D012               	goto	l9517
 11420                           
 11421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11422                           ;stkvar	_t @ sp[(-56)+52]
 11423  010C0E  0EFC               	movlw	-4
 11424  010C10  50E3               	movf	plusw1,w,c
 11425  010C12  0F01               	addlw	1
 11426  010C14  6E32               	movwf	btemp^0,c
 11427  010C16  0EFC               	movlw	-4
 11428  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11429  010C1E  6A32               	clrf	btemp^0,c
 11430  010C20  0EFD               	movlw	-3
 11431  010C22  50E3               	movf	plusw1,w,c
 11432  010C24  2032               	addwfc	btemp^0,w,c
 11433  010C26  6E32               	movwf	btemp^0,c
 11434  010C28  0EFD               	movlw	-3
 11435  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11436                           
 11437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11438  010C30  D0AF               	goto	l9545
 11439  010C32                     l9517:
 11440                           
 11441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11442                           ;stkvar	_pp @ sp[(-56)+50]
 11443  010C32  0EFA               	movlw	-6
 11444  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11445  010C3A  0EFB               	movlw	-5
 11446  010C3C  50E3               	movf	plusw1,w,c
 11447  010C3E  1032               	iorwf	btemp^0,w,c
 11448  010C40  A4D8               	btfss	status,2,c
 11449  010C42  D070               	goto	l9537
 11450                           
 11451                           ;stkvar	_ne @ sp[(-56)+46]
 11452  010C44  0EF7               	movlw	-9
 11453  010C46  AEE3               	btfss	plusw1,7,c
 11454  010C48  D06D               	goto	l9537
 11455                           
 11456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11457                           ;stkvar	_n @ sp[(-56)+32]
 11458  010C4A  0EE8               	movlw	-24
 11459  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11460  010C52  0EE9               	movlw	-23
 11461  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11462  010C5A  0EAC               	movlw	low _dbuf
 11463  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11464  010C5E  6ED9               	movwf	fsr2l,c
 11465  010C60  0E02               	movlw	high _dbuf
 11466  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11467  010C64  6EDA               	movwf	fsr2h,c
 11468  010C66  0E2E               	movlw	46
 11469  010C68  6EDF               	movwf	indf2,c
 11470                           
 11471                           ;stkvar	_n @ sp[(-56)+32]
 11472  010C6A  0EE8               	movlw	-24
 11473  010C6C  50E3               	movf	plusw1,w,c
 11474  010C6E  0F01               	addlw	1
 11475  010C70  6E32               	movwf	btemp^0,c
 11476  010C72  0EE8               	movlw	-24
 11477  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11478  010C7A  6A32               	clrf	btemp^0,c
 11479  010C7C  0EE9               	movlw	-23
 11480  010C7E  50E3               	movf	plusw1,w,c
 11481  010C80  2032               	addwfc	btemp^0,w,c
 11482  010C82  6E32               	movwf	btemp^0,c
 11483  010C84  0EE9               	movlw	-23
 11484  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11485                           
 11486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11487                           ;stkvar	_w @ sp[(-56)+38]
 11488  010C8C  50E1               	movf	fsr1l,w,c
 11489  010C8E  0FEE               	addlw	-18
 11490  010C90  6ED9               	movwf	fsr2l,c
 11491  010C92  50E2               	movf	fsr1h,w,c
 11492  010C94  6EDA               	movwf	fsr2h,c
 11493  010C96  0EFF               	movlw	255
 11494  010C98  22DA               	addwfc	fsr2h,f,c
 11495  010C9A  06DE               	decf	postinc2,f,c
 11496  010C9C  0E00               	movlw	0
 11497  010C9E  5ADD               	subwfb	postdec2,f,c
 11498                           
 11499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11500  010CA0  0E01               	movlw	1
 11501  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11502  010CA4  0E00               	movlw	0
 11503  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11504                           
 11505                           ;stkvar	_pp @ sp[(-56)+50]
 11506  010CA8  0EFA               	movlw	-6
 11507  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11508  010CB0  0EFB               	movlw	-5
 11509  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11510  010CB8  D035               	goto	l9537
 11511  010CBA                     l9529:
 11512                           
 11513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11514                           ;stkvar	_n @ sp[(-56)+32]
 11515  010CBA  0EE8               	movlw	-24
 11516  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11517  010CC2  0EE9               	movlw	-23
 11518  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11519  010CCA  0EAC               	movlw	low _dbuf
 11520  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11521  010CCE  6ED9               	movwf	fsr2l,c
 11522  010CD0  0E02               	movlw	high _dbuf
 11523  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11524  010CD4  6EDA               	movwf	fsr2h,c
 11525  010CD6  0E30               	movlw	48
 11526  010CD8  6EDF               	movwf	indf2,c
 11527                           
 11528                           ;stkvar	_n @ sp[(-56)+32]
 11529  010CDA  0EE8               	movlw	-24
 11530  010CDC  50E3               	movf	plusw1,w,c
 11531  010CDE  0F01               	addlw	1
 11532  010CE0  6E32               	movwf	btemp^0,c
 11533  010CE2  0EE8               	movlw	-24
 11534  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11535  010CEA  6A32               	clrf	btemp^0,c
 11536  010CEC  0EE9               	movlw	-23
 11537  010CEE  50E3               	movf	plusw1,w,c
 11538  010CF0  2032               	addwfc	btemp^0,w,c
 11539  010CF2  6E32               	movwf	btemp^0,c
 11540  010CF4  0EE9               	movlw	-23
 11541  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11542                           
 11543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11544                           ;stkvar	_w @ sp[(-56)+38]
 11545  010CFC  50E1               	movf	fsr1l,w,c
 11546  010CFE  0FEE               	addlw	-18
 11547  010D00  6ED9               	movwf	fsr2l,c
 11548  010D02  50E2               	movf	fsr1h,w,c
 11549  010D04  6EDA               	movwf	fsr2h,c
 11550  010D06  0EFF               	movlw	255
 11551  010D08  22DA               	addwfc	fsr2h,f,c
 11552  010D0A  06DE               	decf	postinc2,f,c
 11553  010D0C  0E00               	movlw	0
 11554  010D0E  5ADD               	subwfb	postdec2,f,c
 11555                           
 11556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11557                           ;stkvar	_t @ sp[(-56)+52]
 11558  010D10  50E1               	movf	fsr1l,w,c
 11559  010D12  0FFC               	addlw	-4
 11560  010D14  6ED9               	movwf	fsr2l,c
 11561  010D16  50E2               	movf	fsr1h,w,c
 11562  010D18  6EDA               	movwf	fsr2h,c
 11563  010D1A  0EFF               	movlw	255
 11564  010D1C  22DA               	addwfc	fsr2h,f,c
 11565  010D1E  06DE               	decf	postinc2,f,c
 11566  010D20  0E00               	movlw	0
 11567  010D22  5ADD               	subwfb	postdec2,f,c
 11568  010D24                     l9537:
 11569                           
 11570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11571                           ;stkvar	_t @ sp[(-56)+52]
 11572  010D24  0EFC               	movlw	-4
 11573  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11574  010D2C  0EFD               	movlw	-3
 11575  010D2E  50E3               	movf	plusw1,w,c
 11576  010D30  1032               	iorwf	btemp^0,w,c
 11577  010D32  A4D8               	btfss	status,2,c
 11578  010D34  D7C2               	goto	l9529
 11579                           
 11580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11581                           ;stkvar	_n @ sp[(-56)+32]
 11582  010D36  0EE8               	movlw	-24
 11583  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11584  010D3E  0EE9               	movlw	-23
 11585  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11586  010D46  0EAC               	movlw	low _dbuf
 11587  010D48  243C               	addwf	(btemp+10)^0,w,c
 11588  010D4A  6ED9               	movwf	fsr2l,c
 11589  010D4C  0E02               	movlw	high _dbuf
 11590  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11591  010D50  6EDA               	movwf	fsr2h,c
 11592                           
 11593                           ;stkvar	_d @ sp[(-56)+44]
 11594  010D52  0EF4               	movlw	-12
 11595  010D54  50E3               	movf	plusw1,w,c
 11596  010D56  0F30               	addlw	48
 11597  010D58  6EDF               	movwf	indf2,c
 11598                           
 11599                           ;stkvar	_n @ sp[(-56)+32]
 11600  010D5A  0EE8               	movlw	-24
 11601  010D5C  50E3               	movf	plusw1,w,c
 11602  010D5E  0F01               	addlw	1
 11603  010D60  6E32               	movwf	btemp^0,c
 11604  010D62  0EE8               	movlw	-24
 11605  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11606  010D6A  6A32               	clrf	btemp^0,c
 11607  010D6C  0EE9               	movlw	-23
 11608  010D6E  50E3               	movf	plusw1,w,c
 11609  010D70  2032               	addwfc	btemp^0,w,c
 11610  010D72  6E32               	movwf	btemp^0,c
 11611  010D74  0EE9               	movlw	-23
 11612  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11615                           ;stkvar	_w @ sp[(-56)+38]
 11616  010D7C  50E1               	movf	fsr1l,w,c
 11617  010D7E  0FEE               	addlw	-18
 11618  010D80  6ED9               	movwf	fsr2l,c
 11619  010D82  50E2               	movf	fsr1h,w,c
 11620  010D84  6EDA               	movwf	fsr2h,c
 11621  010D86  0EFF               	movlw	255
 11622  010D88  22DA               	addwfc	fsr2h,f,c
 11623  010D8A  06DE               	decf	postinc2,f,c
 11624  010D8C  0E00               	movlw	0
 11625  010D8E  5ADD               	subwfb	postdec2,f,c
 11626  010D90                     l9545:
 11627                           
 11628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11629                           ;stkvar	_u @ sp[(-56)+12]
 11630  010D90  0ED4               	movlw	-44
 11631  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11632  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11633  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11634  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11635                           
 11636                           ;stkvar	_l @ sp[(-60)+20]
 11637  010DAA  0ED8               	movlw	-40
 11638  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11639  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11640  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11641  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11642  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11643  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11644  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11645  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11646  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11647                           
 11648                           ;stkvar	_h @ sp[(-60)+24]
 11649  010DE0  0EDC               	movlw	-36
 11650  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11651  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11652  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11653  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11654  010DFA  EC68  F0BD         	call	___flsub	;wreg free
 11655                           
 11656                           ;stkvar	_h @ sp[(-56)+24]
 11657  010DFE  0EE0               	movlw	-32
 11658  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11659  010E06  0EE1               	movlw	-31
 11660  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11661  010E0E  0EE2               	movlw	-30
 11662  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11663  010E16  0EE3               	movlw	-29
 11664  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11665                           
 11666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11667  010E1E  0E00               	movlw	0
 11668  010E20  6EE6               	movwf	postinc1,c
 11669  010E22  0E00               	movlw	0
 11670  010E24  6EE6               	movwf	postinc1,c
 11671  010E26  0E20               	movlw	32
 11672  010E28  6EE6               	movwf	postinc1,c
 11673  010E2A  0E41               	movlw	65
 11674  010E2C  6EE6               	movwf	postinc1,c
 11675                           
 11676                           ;stkvar	_u @ sp[(-60)+12]
 11677  010E2E  0ED0               	movlw	-48
 11678  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11679  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11680  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11681  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11682  010E48  EC77  F099         	call	___fldiv	;wreg free
 11683                           
 11684                           ;stkvar	_u @ sp[(-56)+12]
 11685  010E4C  0ED4               	movlw	-44
 11686  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11687  010E54  0ED5               	movlw	-43
 11688  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11689  010E5C  0ED6               	movlw	-42
 11690  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11691  010E64  0ED7               	movlw	-41
 11692  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11693                           
 11694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11695                           ;stkvar	_ne @ sp[(-56)+46]
 11696  010E6C  50E1               	movf	fsr1l,w,c
 11697  010E6E  0FF6               	addlw	-10
 11698  010E70  6ED9               	movwf	fsr2l,c
 11699  010E72  50E2               	movf	fsr1h,w,c
 11700  010E74  6EDA               	movwf	fsr2h,c
 11701  010E76  0EFF               	movlw	255
 11702  010E78  22DA               	addwfc	fsr2h,f,c
 11703  010E7A  06DE               	decf	postinc2,f,c
 11704  010E7C  0E00               	movlw	0
 11705  010E7E  5ADD               	subwfb	postdec2,f,c
 11706                           
 11707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11708                           ;stkvar	_i @ sp[(-56)+36]
 11709  010E80  0EEC               	movlw	-20
 11710  010E82  50E3               	movf	plusw1,w,c
 11711  010E84  0F01               	addlw	1
 11712  010E86  6E32               	movwf	btemp^0,c
 11713  010E88  0EEC               	movlw	-20
 11714  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11715  010E90  6A32               	clrf	btemp^0,c
 11716  010E92  0EED               	movlw	-19
 11717  010E94  50E3               	movf	plusw1,w,c
 11718  010E96  2032               	addwfc	btemp^0,w,c
 11719  010E98  6E32               	movwf	btemp^0,c
 11720  010E9A  0EED               	movlw	-19
 11721  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11722  010EA2                     l9553:
 11723                           
 11724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11725                           ;stkvar	_m @ sp[(-56)+48]
 11726                           ;stkvar	_i @ sp[(-56)+36]
 11727  010EA2  50E1               	movf	fsr1l,w,c
 11728  010EA4  0FEC               	addlw	-20
 11729  010EA6  6ED9               	movwf	fsr2l,c
 11730  010EA8  50E2               	movf	fsr1h,w,c
 11731  010EAA  6EDA               	movwf	fsr2h,c
 11732  010EAC  0EFF               	movlw	255
 11733  010EAE  22DA               	addwfc	fsr2h,f,c
 11734  010EB0  0EF8               	movlw	-8
 11735  010EB2  50E3               	movf	plusw1,w,c
 11736  010EB4  5CDE               	subwf	postinc2,w,c
 11737  010EB6  50DE               	movf	postinc2,w,c
 11738  010EB8  0A80               	xorlw	128
 11739  010EBA  6E32               	movwf	btemp^0,c
 11740  010EBC  0EF9               	movlw	-7
 11741  010EBE  50E3               	movf	plusw1,w,c
 11742  010EC0  0A80               	xorlw	128
 11743  010EC2  5832               	subwfb	btemp^0,w,c
 11744  010EC4  B0D8               	btfsc	status,0,c
 11745  010EC6  D00E               	goto	u9460
 11746                           
 11747                           ;stkvar	_n @ sp[(-56)+32]
 11748  010EC8  0EE9               	movlw	-23
 11749  010ECA  BEE3               	btfsc	plusw1,7,c
 11750  010ECC  D633               	goto	l9503
 11751  010ECE  0EE9               	movlw	-23
 11752  010ED0  50E3               	movf	plusw1,w,c
 11753  010ED2  E108               	bnz	u9460
 11754  010ED4  0EE8               	movlw	-24
 11755  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11756  010EDC  0E4B               	movlw	75
 11757  010EDE  5E32               	subwf	btemp^0,f,c
 11758  010EE0  A0D8               	btfss	status,0,c
 11759  010EE2  D628               	goto	l9503
 11760  010EE4                     u9460:
 11761                           
 11762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11763                           ;stkvar	_pp @ sp[(-56)+50]
 11764  010EE4  0EFA               	movlw	-6
 11765  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11766  010EEC  0EFB               	movlw	-5
 11767  010EEE  50E3               	movf	plusw1,w,c
 11768  010EF0  1032               	iorwf	btemp^0,w,c
 11769  010EF2  B4D8               	btfsc	status,2,c
 11770  010EF4  A81F               	btfss	_flags^0,4,c
 11771  010EF6  D021               	goto	l9565
 11772                           
 11773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11774                           ;stkvar	_n @ sp[(-56)+32]
 11775  010EF8  0EE8               	movlw	-24
 11776  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11777  010F00  0EE9               	movlw	-23
 11778  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11779  010F08  0EAC               	movlw	low _dbuf
 11780  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11781  010F0C  6ED9               	movwf	fsr2l,c
 11782  010F0E  0E02               	movlw	high _dbuf
 11783  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11784  010F12  6EDA               	movwf	fsr2h,c
 11785  010F14  0E2E               	movlw	46
 11786  010F16  6EDF               	movwf	indf2,c
 11787                           
 11788                           ;stkvar	_n @ sp[(-56)+32]
 11789  010F18  0EE8               	movlw	-24
 11790  010F1A  50E3               	movf	plusw1,w,c
 11791  010F1C  0F01               	addlw	1
 11792  010F1E  6E32               	movwf	btemp^0,c
 11793  010F20  0EE8               	movlw	-24
 11794  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11795  010F28  6A32               	clrf	btemp^0,c
 11796  010F2A  0EE9               	movlw	-23
 11797  010F2C  50E3               	movf	plusw1,w,c
 11798  010F2E  2032               	addwfc	btemp^0,w,c
 11799  010F30  6E32               	movwf	btemp^0,c
 11800  010F32  0EE9               	movlw	-23
 11801  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11802  010F3A                     l9565:
 11803                           
 11804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11805                           ;stkvar	_n @ sp[(-56)+32]
 11806  010F3A  0EE8               	movlw	-24
 11807  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11808  010F42  0EE9               	movlw	-23
 11809  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11810  010F4A  0EAC               	movlw	low _dbuf
 11811  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11812  010F4E  6ED9               	movwf	fsr2l,c
 11813  010F50  0E02               	movlw	high _dbuf
 11814  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11815  010F54  6EDA               	movwf	fsr2h,c
 11816  010F56  0E00               	movlw	0
 11817  010F58  6EDF               	movwf	indf2,c
 11818                           
 11819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11820                           ;stkvar	_nmode @ sp[(-56)+55]
 11821  010F5A  0EFF               	movlw	-1
 11822  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11823  010F62  0E65               	movlw	101
 11824  010F64  1832               	xorwf	btemp^0,w,c
 11825  010F66  A4D8               	btfss	status,2,c
 11826  010F68  EF16  F081         	goto	l9369
 11827                           
 11828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11829  010F6C  0E4F               	movlw	79
 11830  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11831  010F70  0E00               	movlw	0
 11832  010F72  6E3D               	movwf	(btemp+11)^0,c
 11833                           
 11834                           ;stkvar	_i @ sp[(-56)+36]
 11835  010F74  0EEC               	movlw	-20
 11836  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11837  010F7C  0EED               	movlw	-19
 11838  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11839                           
 11840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11841                           ;stkvar	_i @ sp[(-56)+36]
 11842  010F84  0EEC               	movlw	-20
 11843  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11844  010F8C  0EED               	movlw	-19
 11845  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11846  010F94  0EAC               	movlw	low _dbuf
 11847  010F96  243C               	addwf	(btemp+10)^0,w,c
 11848  010F98  6ED9               	movwf	fsr2l,c
 11849  010F9A  0E02               	movlw	high _dbuf
 11850  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 11851  010F9E  6EDA               	movwf	fsr2h,c
 11852  010FA0  0E00               	movlw	0
 11853  010FA2  6EDF               	movwf	indf2,c
 11854                           
 11855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11856                           ;stkvar	_sign @ sp[(-56)+42]
 11857  010FA4  0EF2               	movlw	-14
 11858  010FA6  6AE3               	clrf	plusw1,c
 11859  010FA8  0EF3               	movlw	-13
 11860  010FAA  6AE3               	clrf	plusw1,c
 11861                           
 11862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11863                           ;stkvar	_e @ sp[(-56)+34]
 11864  010FAC  0EEB               	movlw	-21
 11865  010FAE  AEE3               	btfss	plusw1,7,c
 11866  010FB0  D012               	goto	l9579
 11867                           
 11868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11869  010FB2  0E01               	movlw	1
 11870  010FB4  6E3C               	movwf	(btemp+10)^0,c
 11871  010FB6  0E00               	movlw	0
 11872  010FB8  6E3D               	movwf	(btemp+11)^0,c
 11873                           
 11874                           ;stkvar	_sign @ sp[(-56)+42]
 11875  010FBA  0EF2               	movlw	-14
 11876  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11877  010FC2  0EF3               	movlw	-13
 11878  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11879                           
 11880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11881                           ;stkvar	_e @ sp[(-56)+34]
 11882                           ;stkvar	_e @ sp[(-56)+34]
 11883  010FCA  0EEA               	movlw	-22
 11884  010FCC  6CE3               	negf	plusw1,c
 11885  010FCE  0EEB               	movlw	-21
 11886  010FD0  1EE3               	comf	plusw1,f,c
 11887  010FD2  B0D8               	btfsc	status,0,c
 11888  010FD4  2AE3               	incf	plusw1,f,c
 11889  010FD6                     l9579:
 11890                           
 11891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11892  010FD6  0E02               	movlw	2
 11893  010FD8  6E3C               	movwf	(btemp+10)^0,c
 11894  010FDA  0E00               	movlw	0
 11895  010FDC  6E3D               	movwf	(btemp+11)^0,c
 11896                           
 11897                           ;stkvar	_p @ sp[(-56)+40]
 11898  010FDE  0EF0               	movlw	-16
 11899  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11900  010FE6  0EF1               	movlw	-15
 11901  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11902                           
 11903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11904  010FEE  D051               	goto	l9591
 11905  010FF0                     l9581:
 11906                           
 11907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11908                           ;stkvar	_i @ sp[(-56)+36]
 11909  010FF0  50E1               	movf	fsr1l,w,c
 11910  010FF2  0FEC               	addlw	-20
 11911  010FF4  6ED9               	movwf	fsr2l,c
 11912  010FF6  50E2               	movf	fsr1h,w,c
 11913  010FF8  6EDA               	movwf	fsr2h,c
 11914  010FFA  0EFF               	movlw	255
 11915  010FFC  22DA               	addwfc	fsr2h,f,c
 11916  010FFE  06DE               	decf	postinc2,f,c
 11917  011000  0E00               	movlw	0
 11918  011002  5ADD               	subwfb	postdec2,f,c
 11919                           
 11920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11921                           ;stkvar	_i @ sp[(-56)+36]
 11922  011004  0EEC               	movlw	-20
 11923  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 11924  01100C  0EED               	movlw	-19
 11925  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11926  011014  0EAC               	movlw	low _dbuf
 11927  011016  243C               	addwf	(btemp+10)^0,w,c
 11928  011018  6ED9               	movwf	fsr2l,c
 11929  01101A  0E02               	movlw	high _dbuf
 11930  01101C  203D               	addwfc	(btemp+11)^0,w,c
 11931  01101E  6EDA               	movwf	fsr2h,c
 11932  011020  0E0A               	movlw	10
 11933  011022  6EE6               	movwf	postinc1,c
 11934  011024  0E00               	movlw	0
 11935  011026  6EE6               	movwf	postinc1,c
 11936                           
 11937                           ;stkvar	_e @ sp[(-58)+34]
 11938  011028  0EE8               	movlw	-24
 11939  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11940  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11941  011036  ECFD  F0B2         	call	___awmod	;wreg free
 11942  01103A  5032               	movf	btemp^0,w,c
 11943  01103C  0F30               	addlw	48
 11944  01103E  6EDF               	movwf	indf2,c
 11945                           
 11946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11947  011040  0E0A               	movlw	10
 11948  011042  6EE6               	movwf	postinc1,c
 11949  011044  0E00               	movlw	0
 11950  011046  6EE6               	movwf	postinc1,c
 11951                           
 11952                           ;stkvar	_e @ sp[(-58)+34]
 11953  011048  0EE8               	movlw	-24
 11954  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11955  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11956  011056  EC2D  F0B1         	call	___awdiv	;wreg free
 11957                           
 11958                           ;stkvar	_e @ sp[(-56)+34]
 11959  01105A  0EEA               	movlw	-22
 11960  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11961  011062  0EEB               	movlw	-21
 11962  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11963                           
 11964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11965                           ;stkvar	_p @ sp[(-56)+40]
 11966  01106A  50E1               	movf	fsr1l,w,c
 11967  01106C  0FF0               	addlw	-16
 11968  01106E  6ED9               	movwf	fsr2l,c
 11969  011070  50E2               	movf	fsr1h,w,c
 11970  011072  6EDA               	movwf	fsr2h,c
 11971  011074  0EFF               	movlw	255
 11972  011076  22DA               	addwfc	fsr2h,f,c
 11973  011078  06DE               	decf	postinc2,f,c
 11974  01107A  0E00               	movlw	0
 11975  01107C  5ADD               	subwfb	postdec2,f,c
 11976                           
 11977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11978                           ;stkvar	_w @ sp[(-56)+38]
 11979  01107E  50E1               	movf	fsr1l,w,c
 11980  011080  0FEE               	addlw	-18
 11981  011082  6ED9               	movwf	fsr2l,c
 11982  011084  50E2               	movf	fsr1h,w,c
 11983  011086  6EDA               	movwf	fsr2h,c
 11984  011088  0EFF               	movlw	255
 11985  01108A  22DA               	addwfc	fsr2h,f,c
 11986  01108C  06DE               	decf	postinc2,f,c
 11987  01108E  0E00               	movlw	0
 11988  011090  5ADD               	subwfb	postdec2,f,c
 11989  011092                     l9591:
 11990                           
 11991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11992                           ;stkvar	_e @ sp[(-56)+34]
 11993  011092  0EEA               	movlw	-22
 11994  011094  006F FF8C  F032    	movff	plusw1,btemp
 11995  01109A  0EEB               	movlw	-21
 11996  01109C  50E3               	movf	plusw1,w,c
 11997  01109E  1032               	iorwf	btemp^0,w,c
 11998  0110A0  A4D8               	btfss	status,2,c
 11999  0110A2  D7A6               	goto	l9581
 12000                           
 12001                           ;stkvar	_p @ sp[(-56)+40]
 12002  0110A4  0EF1               	movlw	-15
 12003  0110A6  BEE3               	btfsc	plusw1,7,c
 12004  0110A8  D007               	goto	u9520
 12005  0110AA  0EF1               	movlw	-15
 12006  0110AC  50E3               	movf	plusw1,w,c
 12007  0110AE  E1A0               	bnz	l9581
 12008  0110B0  0EF0               	movlw	-16
 12009  0110B2  04E3               	decf	plusw1,w,c
 12010  0110B4  B0D8               	btfsc	status,0,c
 12011  0110B6  D79C               	goto	l9581
 12012  0110B8                     u9520:
 12013                           
 12014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12015                           ;stkvar	_i @ sp[(-56)+36]
 12016  0110B8  50E1               	movf	fsr1l,w,c
 12017  0110BA  0FEC               	addlw	-20
 12018  0110BC  6ED9               	movwf	fsr2l,c
 12019  0110BE  50E2               	movf	fsr1h,w,c
 12020  0110C0  6EDA               	movwf	fsr2h,c
 12021  0110C2  0EFF               	movlw	255
 12022  0110C4  22DA               	addwfc	fsr2h,f,c
 12023  0110C6  06DE               	decf	postinc2,f,c
 12024  0110C8  0E00               	movlw	0
 12025  0110CA  5ADD               	subwfb	postdec2,f,c
 12026                           
 12027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12028                           ;stkvar	_sign @ sp[(-56)+42]
 12029  0110CC  0EF2               	movlw	-14
 12030  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12031  0110D4  0EF3               	movlw	-13
 12032  0110D6  50E3               	movf	plusw1,w,c
 12033  0110D8  1032               	iorwf	btemp^0,w,c
 12034  0110DA  A4D8               	btfss	status,2,c
 12035  0110DC  D002               	goto	l9601
 12036  0110DE  0E2B               	movlw	43
 12037  0110E0  D001               	goto	L10
 12038  0110E2                     l9601:
 12039  0110E2  0E2D               	movlw	45
 12040  0110E4                     L10:
 12041  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12042  0110E6  0E00               	movlw	0
 12043  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12044                           
 12045                           ;stkvar	_efgtoa$4408 @ sp[(-56)+4]
 12046  0110EA  0ECC               	movlw	-52
 12047  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12048  0110F2  0ECD               	movlw	-51
 12049  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12050                           
 12051                           ;stkvar	_efgtoa$4408 @ sp[(-56)+4]
 12052                           ;stkvar	_i @ sp[(-56)+36]
 12053  0110FA  0EEC               	movlw	-20
 12054  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12055  011102  0EED               	movlw	-19
 12056  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12057  01110A  0EAC               	movlw	low _dbuf
 12058  01110C  243C               	addwf	(btemp+10)^0,w,c
 12059  01110E  6ED9               	movwf	fsr2l,c
 12060  011110  0E02               	movlw	high _dbuf
 12061  011112  203D               	addwfc	(btemp+11)^0,w,c
 12062  011114  6EDA               	movwf	fsr2h,c
 12063  011116  0ECC               	movlw	-52
 12064  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12065                           
 12066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12067                           ;stkvar	_w @ sp[(-56)+38]
 12068  01111E  50E1               	movf	fsr1l,w,c
 12069  011120  0FEE               	addlw	-18
 12070  011122  6ED9               	movwf	fsr2l,c
 12071  011124  50E2               	movf	fsr1h,w,c
 12072  011126  6EDA               	movwf	fsr2h,c
 12073  011128  0EFF               	movlw	255
 12074  01112A  22DA               	addwfc	fsr2h,f,c
 12075  01112C  06DE               	decf	postinc2,f,c
 12076  01112E  0E00               	movlw	0
 12077  011130  5ADD               	subwfb	postdec2,f,c
 12078                           
 12079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12080                           ;stkvar	_i @ sp[(-56)+36]
 12081  011132  50E1               	movf	fsr1l,w,c
 12082  011134  0FEC               	addlw	-20
 12083  011136  6ED9               	movwf	fsr2l,c
 12084  011138  50E2               	movf	fsr1h,w,c
 12085  01113A  6EDA               	movwf	fsr2h,c
 12086  01113C  0EFF               	movlw	255
 12087  01113E  22DA               	addwfc	fsr2h,f,c
 12088  011140  06DE               	decf	postinc2,f,c
 12089  011142  0E00               	movlw	0
 12090  011144  5ADD               	subwfb	postdec2,f,c
 12091  011146  0EBF               	movlw	191
 12092  011148  6E3C               	movwf	(btemp+10)^0,c
 12093  01114A  0EFF               	movlw	255
 12094  01114C  6E3D               	movwf	(btemp+11)^0,c
 12095                           
 12096                           ;stkvar	_c @ sp[(-56)+-7]
 12097  01114E  0EC1               	movlw	-63
 12098  011150  50E3               	movf	plusw1,w,c
 12099  011152  6E3A               	movwf	(btemp+8)^0,c
 12100  011154  6A3B               	clrf	(btemp+9)^0,c
 12101  011156  503C               	movf	(btemp+10)^0,w,c
 12102  011158  263A               	addwf	(btemp+8)^0,f,c
 12103  01115A  503D               	movf	(btemp+11)^0,w,c
 12104  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12105  01115E  503B               	movf	(btemp+9)^0,w,c
 12106  011160  E106               	bnz	u9540
 12107  011162  0E1A               	movlw	26
 12108  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12109  011166  B0D8               	btfsc	status,0,c
 12110  011168  D002               	goto	u9540
 12111  01116A  0E01               	movlw	1
 12112  01116C  D001               	goto	u9550
 12113  01116E                     u9540:
 12114  01116E  0E00               	movlw	0
 12115  011170                     u9550:
 12116  011170  6E3C               	movwf	(btemp+10)^0,c
 12117  011172  6A3D               	clrf	(btemp+11)^0,c
 12118                           
 12119                           ;stkvar	_efgtoa$4410 @ sp[(-56)+0]
 12120  011174  0EC8               	movlw	-56
 12121  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12122  01117C  0EC9               	movlw	-55
 12123  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12124                           
 12125                           ;stkvar	_efgtoa$4410 @ sp[(-56)+0]
 12126  011184  0EC8               	movlw	-56
 12127  011186  006F FF8C  F032    	movff	plusw1,btemp
 12128  01118C  0EC9               	movlw	-55
 12129  01118E  50E3               	movf	plusw1,w,c
 12130  011190  1032               	iorwf	btemp^0,w,c
 12131  011192  A4D8               	btfss	status,2,c
 12132  011194  D002               	goto	l9617
 12133  011196  0E65               	movlw	101
 12134  011198  D001               	goto	L11
 12135  01119A                     l9617:
 12136  01119A  0E45               	movlw	69
 12137  01119C                     L11:
 12138  01119C  6E3C               	movwf	(btemp+10)^0,c
 12139  01119E  0E00               	movlw	0
 12140  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12141                           
 12142                           ;stkvar	_efgtoa$4409 @ sp[(-56)+2]
 12143  0111A2  0ECA               	movlw	-54
 12144  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12145  0111AA  0ECB               	movlw	-53
 12146  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12147                           
 12148                           ;stkvar	_efgtoa$4409 @ sp[(-56)+2]
 12149                           ;stkvar	_i @ sp[(-56)+36]
 12150  0111B2  0EEC               	movlw	-20
 12151  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12152  0111BA  0EED               	movlw	-19
 12153  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12154  0111C2  0EAC               	movlw	low _dbuf
 12155  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12156  0111C6  6ED9               	movwf	fsr2l,c
 12157  0111C8  0E02               	movlw	high _dbuf
 12158  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12159  0111CC  6EDA               	movwf	fsr2h,c
 12160  0111CE  0ECA               	movlw	-54
 12161  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12162                           
 12163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12164                           ;stkvar	_w @ sp[(-56)+38]
 12165  0111D6  50E1               	movf	fsr1l,w,c
 12166  0111D8  0FEE               	addlw	-18
 12167  0111DA  6ED9               	movwf	fsr2l,c
 12168  0111DC  50E2               	movf	fsr1h,w,c
 12169  0111DE  6EDA               	movwf	fsr2h,c
 12170  0111E0  0EFF               	movlw	255
 12171  0111E2  22DA               	addwfc	fsr2h,f,c
 12172  0111E4  06DE               	decf	postinc2,f,c
 12173  0111E6  0E00               	movlw	0
 12174  0111E8  5ADD               	subwfb	postdec2,f,c
 12175                           
 12176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12177                           ;stkvar	_i @ sp[(-56)+36]
 12178  0111EA  0EEC               	movlw	-20
 12179  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12180  0111F2  0EED               	movlw	-19
 12181  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12182  0111FA  0EAC               	movlw	low _dbuf
 12183  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12184  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12185  011200  0E02               	movlw	high _dbuf
 12186  011202  203D               	addwfc	(btemp+11)^0,w,c
 12187  011204  6E3B               	movwf	(btemp+9)^0,c
 12188  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12189  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12190                           
 12191                           ;stkvar	_n @ sp[(-58)+32]
 12192  011212  0EAC               	movlw	low _dbuf
 12193  011214  6E3C               	movwf	(btemp+10)^0,c
 12194  011216  0E02               	movlw	high _dbuf
 12195  011218  6E3D               	movwf	(btemp+11)^0,c
 12196  01121A  0EE6               	movlw	-26
 12197  01121C  50E3               	movf	plusw1,w,c
 12198  01121E  263C               	addwf	(btemp+10)^0,f,c
 12199  011220  0EE7               	movlw	-25
 12200  011222  50E3               	movf	plusw1,w,c
 12201  011224  223D               	addwfc	(btemp+11)^0,f,c
 12202  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12203  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12204  011232  EC06  F0B6         	call	_strcpy	;wreg free
 12205  011236  EF16  F081         	goto	l9369
 12206  01123A                     l1862:
 12207                           
 12208                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12209  01123A  0EC1               	movlw	193
 12210  01123C  26E1               	addwf	fsr1l,f,c
 12211  01123E  0EFF               	movlw	255
 12212  011240  22E2               	addwfc	fsr1h,f,c
 12213  011242  0012               	return		;funcret
 12214  011244                     __end_of_efgtoa:
 12215                           	opt callstack 0
 12216                           
 12217 ;; *************** function _tolower *****************
 12218 ;; Defined at:
 12219 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12220 ;; Parameters:    Size  Location     Type
 12221 ;;  c               2  [STACK] int 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;		None
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  2  [STACK] int 
 12226 ;; Registers used:
 12227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/5
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12237 ;;Total ram usage:        0 bytes
 12238 ;; Hardware stack levels used:    1
 12239 ;; Hardware stack levels required when called:    7
 12240 ;; This function calls:
 12241 ;;		_isupper
 12242 ;; This function is called by:
 12243 ;;		_efgtoa
 12244 ;;		_vfpfcnvrt
 12245 ;; This function uses a reentrant model
 12246 ;;
 12247                           
 12248                           	psect	text46
 12249  0173CC                     __ptext46:
 12250                           	opt callstack 0
 12251  0173CC                     _tolower:
 12252                           	opt callstack 0
 12253                           
 12254                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12255  0173CC  52E6               	movf	postinc1,f,c
 12256  0173CE  52E6               	movf	postinc1,f,c
 12257                           
 12258                           ;stkvar	_c @ sp[(-2)+-2]
 12259                           
 12260                           ;incstack = 0
 12261  0173D0  0EFC               	movlw	-4
 12262  0173D2  50E3               	movf	plusw1,w,c
 12263  0173D4  0FBF               	addlw	191
 12264  0173D6  6E3C               	movwf	(btemp+10)^0,c
 12265  0173D8  0EFD               	movlw	-3
 12266  0173DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12267  0173E0  0EFF               	movlw	255
 12268  0173E2  223D               	addwfc	(btemp+11)^0,f,c
 12269  0173E4  503D               	movf	(btemp+11)^0,w,c
 12270  0173E6  E106               	bnz	u5080
 12271  0173E8  0E1A               	movlw	26
 12272  0173EA  5C3C               	subwf	(btemp+10)^0,w,c
 12273  0173EC  B0D8               	btfsc	status,0,c
 12274  0173EE  D002               	goto	u5080
 12275  0173F0  0E01               	movlw	1
 12276  0173F2  D001               	goto	u5090
 12277  0173F4                     u5080:
 12278  0173F4  0E00               	movlw	0
 12279  0173F6                     u5090:
 12280  0173F6  6E3C               	movwf	(btemp+10)^0,c
 12281  0173F8  6A3D               	clrf	(btemp+11)^0,c
 12282                           
 12283                           ;stkvar	_tolower$5076 @ sp[(-2)+0]
 12284  0173FA  0EFE               	movlw	-2
 12285  0173FC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12286  017402  0EFF               	movlw	-1
 12287  017404  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12288                           
 12289                           ;stkvar	_tolower$5076 @ sp[(-2)+0]
 12290  01740A  0EFE               	movlw	-2
 12291  01740C  006F FF8C  F032    	movff	plusw1,btemp
 12292  017412  0EFF               	movlw	-1
 12293  017414  50E3               	movf	plusw1,w,c
 12294  017416  1032               	iorwf	btemp^0,w,c
 12295  017418  B4D8               	btfsc	status,2,c
 12296  01741A  D00D               	goto	l6409
 12297                           
 12298                           ;stkvar	_c @ sp[(-2)+-2]
 12299  01741C  0EFC               	movlw	-4
 12300  01741E  006F FF8C  F032    	movff	plusw1,btemp
 12301  017424  0EFD               	movlw	-3
 12302  017426  006F FF8C  F033    	movff	plusw1,btemp+1
 12303  01742C  0E20               	movlw	32
 12304  01742E  1232               	iorwf	btemp^0,f,c
 12305  017430  0E00               	movlw	0
 12306  017432  1233               	iorwf	(btemp+1)^0,f,c
 12307  017434  D008               	goto	l2885
 12308  017436                     l6409:
 12309                           
 12310                           ;stkvar	_c @ sp[(-2)+-2]
 12311  017436  0EFC               	movlw	-4
 12312  017438  006F FF8C  F032    	movff	plusw1,btemp
 12313  01743E  0EFD               	movlw	-3
 12314  017440  006F FF8C  F033    	movff	plusw1,btemp+1
 12315  017446                     l2885:
 12316                           
 12317                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12318  017446  52E5               	movf	postdec1,f,c
 12319  017448  52E5               	movf	postdec1,f,c
 12320  01744A  52E5               	movf	postdec1,f,c
 12321  01744C  52E5               	movf	postdec1,f,c
 12322  01744E  0012               	return		;funcret
 12323  017450                     __end_of_tolower:
 12324                           	opt callstack 0
 12325                           
 12326 ;; *************** function _isupper *****************
 12327 ;; Defined at:
 12328 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12329 ;; Parameters:    Size  Location     Type
 12330 ;;  c               2  [STACK] int 
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;		None
 12333 ;; Return value:  Size  Location     Type
 12334 ;;                  2  [STACK] int 
 12335 ;; Registers used:
 12336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/0
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12346 ;;Total ram usage:        0 bytes
 12347 ;; Hardware stack levels used:    1
 12348 ;; Hardware stack levels required when called:    6
 12349 ;; This function calls:
 12350 ;;		Nothing
 12351 ;; This function is called by:
 12352 ;;		_efgtoa
 12353 ;;		_xtoa
 12354 ;;		_vfpfcnvrt
 12355 ;;		_tolower
 12356 ;; This function uses a reentrant model
 12357 ;;
 12358                           
 12359                           	psect	text47
 12360  017EEA                     __ptext47:
 12361                           	opt callstack 0
 12362  017EEA                     _isupper:
 12363                           	opt callstack 17
 12364                           
 12365                           ;stkvar	_c @ sp[(0)+-2]
 12366                           
 12367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12368                           ;incstack = 0
 12369  017EEA  0EFE               	movlw	-2
 12370  017EEC  50E3               	movf	plusw1,w,c
 12371  017EEE  0FBF               	addlw	191
 12372  017EF0  6E3C               	movwf	(btemp+10)^0,c
 12373  017EF2  0EFF               	movlw	-1
 12374  017EF4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12375  017EFA  0EFF               	movlw	255
 12376  017EFC  223D               	addwfc	(btemp+11)^0,f,c
 12377  017EFE  503D               	movf	(btemp+11)^0,w,c
 12378  017F00  E106               	bnz	u4480
 12379  017F02  0E1A               	movlw	26
 12380  017F04  5C3C               	subwf	(btemp+10)^0,w,c
 12381  017F06  B0D8               	btfsc	status,0,c
 12382  017F08  D002               	goto	u4480
 12383  017F0A  0E01               	movlw	1
 12384  017F0C  D001               	goto	u4490
 12385  017F0E                     u4480:
 12386  017F0E  0E00               	movlw	0
 12387  017F10                     u4490:
 12388  017F10  6E32               	movwf	btemp^0,c
 12389  017F12  6A33               	clrf	(btemp+1)^0,c
 12390                           
 12391                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12392  017F14  52E5               	movf	postdec1,f,c
 12393  017F16  52E5               	movf	postdec1,f,c
 12394  017F18  0012               	return		;funcret
 12395  017F1A                     __end_of_isupper:
 12396                           	opt callstack 0
 12397                           
 12398 ;; *************** function _strcpy *****************
 12399 ;; Defined at:
 12400 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  dest            2  [STACK] PTR unsigned char 
 12403 ;;		 -> dbuf(80), 
 12404 ;;  src             2  [STACK] PTR const unsigned char 
 12405 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12406 ;;		 -> dbuf(80), 
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;  d               2  [STACK] PTR unsigned char 
 12409 ;;		 -> dbuf(80), 
 12410 ;;  s               2  [STACK] PTR const unsigned char 
 12411 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12412 ;;		 -> dbuf(80), 
 12413 ;; Return value:  Size  Location     Type
 12414 ;;                  2  [STACK] PTR unsigned char 
 12415 ;; Registers used:
 12416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12417 ;; Tracked objects:
 12418 ;;		On entry : 0/5
 12419 ;;		On exit  : 0/0
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12426 ;;Total ram usage:        0 bytes
 12427 ;; Hardware stack levels used:    1
 12428 ;; Hardware stack levels required when called:    6
 12429 ;; This function calls:
 12430 ;;		Nothing
 12431 ;; This function is called by:
 12432 ;;		_efgtoa
 12433 ;; This function uses a reentrant model
 12434 ;;
 12435                           
 12436                           	psect	text48
 12437  016C0C                     __ptext48:
 12438                           	opt callstack 0
 12439  016C0C                     _strcpy:
 12440                           	opt callstack 0
 12441                           
 12442                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12443  016C0C  52E6               	movf	postinc1,f,c
 12444  016C0E  52E6               	movf	postinc1,f,c
 12445  016C10  52E6               	movf	postinc1,f,c
 12446  016C12  52E6               	movf	postinc1,f,c
 12447                           
 12448                           ;stkvar	_src @ sp[(-4)+-4]
 12449                           
 12450                           ;incstack = 0
 12451  016C14  0EF8               	movlw	-8
 12452  016C16  006F FF8C  F03C    	movff	plusw1,btemp+10
 12453  016C1C  0EF9               	movlw	-7
 12454  016C1E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12455                           
 12456                           ;stkvar	_s @ sp[(-4)+2]
 12457  016C24  0EFF               	movlw	-1
 12458  016C26  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12459  016C2C  0EFE               	movlw	-2
 12460  016C2E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12461                           
 12462                           ;stkvar	_dest @ sp[(-4)+-2]
 12463  016C34  0EFA               	movlw	-6
 12464  016C36  006F FF8C  F03C    	movff	plusw1,btemp+10
 12465  016C3C  0EFB               	movlw	-5
 12466  016C3E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12467                           
 12468                           ;stkvar	_d @ sp[(-4)+0]
 12469  016C44  0EFD               	movlw	-3
 12470  016C46  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12471  016C4C  0EFC               	movlw	-4
 12472  016C4E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12473  016C54                     l9243:
 12474                           
 12475                           ;stkvar	_s @ sp[(-4)+2]
 12476  016C54  50E1               	movf	fsr1l,w,c
 12477  016C56  0FFE               	addlw	-2
 12478  016C58  6ED9               	movwf	fsr2l,c
 12479  016C5A  50E2               	movf	fsr1h,w,c
 12480  016C5C  6EDA               	movwf	fsr2h,c
 12481  016C5E  0EFF               	movlw	255
 12482  016C60  22DA               	addwfc	fsr2h,f,c
 12483  016C62  006F FF7C  F03C    	movff	indf2,btemp+10
 12484  016C68  0E01               	movlw	1
 12485  016C6A  26DE               	addwf	postinc2,f,c
 12486  016C6C  006F FF7C  F03D    	movff	indf2,btemp+11
 12487  016C72  0E00               	movlw	0
 12488  016C74  22DD               	addwfc	postdec2,f,c
 12489  016C76  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12490  016C7C  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12491  016C82  0E00               	movlw	low (__mediumconst shr (0+16))
 12492  016C84  6EF8               	movwf	tblptru,c
 12493                           
 12494                           ;stkvar	_d @ sp[(-4)+0]
 12495  016C86  50E1               	movf	fsr1l,w,c
 12496  016C88  0FFC               	addlw	-4
 12497  016C8A  6ED9               	movwf	fsr2l,c
 12498  016C8C  50E2               	movf	fsr1h,w,c
 12499  016C8E  6EDA               	movwf	fsr2h,c
 12500  016C90  0EFF               	movlw	255
 12501  016C92  22DA               	addwfc	fsr2h,f,c
 12502  016C94  006F FF7C  F03C    	movff	indf2,btemp+10
 12503  016C9A  0E01               	movlw	1
 12504  016C9C  26DE               	addwf	postinc2,f,c
 12505  016C9E  006F FF7C  F03D    	movff	indf2,btemp+11
 12506  016CA4  0E00               	movlw	0
 12507  016CA6  22DD               	addwfc	postdec2,f,c
 12508  016CA8  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12509  016CAE  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12510  016CB4  0E1F               	movlw	(high __ramtop+-1)
 12511  016CB6  64F7               	cpfsgt	tblptrh,c
 12512  016CB8  D003               	bra	u8857
 12513  016CBA  0008               	tblrd		*
 12514  016CBC  50F5               	movf	tablat,w,c
 12515  016CBE  D007               	bra	u8850
 12516  016CC0                     u8857:
 12517  016CC0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12518  016CC6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12519  016CCC  50EF               	movf	indf0,w,c
 12520  016CCE                     u8850:
 12521  016CCE  6EDF               	movwf	indf2,c
 12522  016CD0  50DF               	movf	indf2,w,c
 12523  016CD2  A4D8               	btfss	status,2,c
 12524  016CD4  D7BF               	goto	l9243
 12525                           
 12526                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12527  016CD6  0EF8               	movlw	248
 12528  016CD8  26E1               	addwf	fsr1l,f,c
 12529  016CDA  0EFF               	movlw	255
 12530  016CDC  22E2               	addwfc	fsr1h,f,c
 12531  016CDE  0012               	return		;funcret
 12532  016CE0                     __end_of_strcpy:
 12533                           	opt callstack 0
 12534                           
 12535 ;; *************** function _floorf *****************
 12536 ;; Defined at:
 12537 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12538 ;; Parameters:    Size  Location     Type
 12539 ;;  x               4  [STACK] float 
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;  u               4  [STACK] struct .
 12542 ;;  m               4  [STACK] unsigned long 
 12543 ;;  e               2  [STACK] int 
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  4  [STACK] float 
 12546 ;; Registers used:
 12547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/5
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12557 ;;Total ram usage:        0 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; Hardware stack levels required when called:    6
 12560 ;; This function calls:
 12561 ;;		Nothing
 12562 ;; This function is called by:
 12563 ;;		_efgtoa
 12564 ;; This function uses a reentrant model
 12565 ;;
 12566                           
 12567                           	psect	text49
 12568  0144AC                     __ptext49:
 12569                           	opt callstack 0
 12570  0144AC                     _floorf:
 12571                           	opt callstack 0
 12572                           
 12573                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12574  0144AC  0E0A               	movlw	10
 12575  0144AE  26E1               	addwf	fsr1l,f,c
 12576  0144B0  0E00               	movlw	0
 12577  0144B2  22E2               	addwfc	fsr1h,f,c
 12578                           
 12579                           ;incstack = 0
 12580  0144B4  0060  F210  F03A   	movff	floorf@F524,btemp+8
 12581  0144BA  0060  F214  F03B   	movff	floorf@F524+1,btemp+9
 12582  0144C0  0060  F218  F03C   	movff	floorf@F524+2,btemp+10
 12583  0144C6  0060  F21C  F03D   	movff	floorf@F524+3,btemp+11
 12584                           
 12585                           ;stkvar	_u @ sp[(-10)+0]
 12586  0144CC  0EF6               	movlw	-10
 12587  0144CE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12588  0144D4  0EF7               	movlw	-9
 12589  0144D6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12590  0144DC  0EF8               	movlw	-8
 12591  0144DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12592  0144E4  0EF9               	movlw	-7
 12593  0144E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12594                           
 12595                           ;stkvar	_x @ sp[(-10)+-4]
 12596  0144EC  0EF2               	movlw	-14
 12597  0144EE  006F FF8C  F03A    	movff	plusw1,btemp+8
 12598  0144F4  0EF3               	movlw	-13
 12599  0144F6  006F FF8C  F03B    	movff	plusw1,btemp+9
 12600  0144FC  0EF4               	movlw	-12
 12601  0144FE  006F FF8C  F03C    	movff	plusw1,btemp+10
 12602  014504  0EF5               	movlw	-11
 12603  014506  006F FF8C  F03D    	movff	plusw1,btemp+11
 12604                           
 12605                           ;stkvar	_u @ sp[(-10)+0]
 12606  01450C  0EF6               	movlw	-10
 12607  01450E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12608  014514  0EF7               	movlw	-9
 12609  014516  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12610  01451C  0EF8               	movlw	-8
 12611  01451E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12612  014524  0EF9               	movlw	-7
 12613  014526  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12614  01452C  0E81               	movlw	129
 12615  01452E  6E3C               	movwf	(btemp+10)^0,c
 12616  014530  0EFF               	movlw	255
 12617  014532  6E3D               	movwf	(btemp+11)^0,c
 12618                           
 12619                           ;stkvar	_u @ sp[(-10)+0]
 12620  014534  0EF6               	movlw	-10
 12621  014536  006F FF8C  F036    	movff	plusw1,btemp+4
 12622  01453C  0EF7               	movlw	-9
 12623  01453E  006F FF8C  F037    	movff	plusw1,btemp+5
 12624  014544  0EF8               	movlw	-8
 12625  014546  006F FF8C  F038    	movff	plusw1,btemp+6
 12626  01454C  0EF9               	movlw	-7
 12627  01454E  006F FF8C  F039    	movff	plusw1,btemp+7
 12628  014554  0E18               	movlw	24
 12629  014556  D005               	goto	u5110
 12630  014558                     u5115:
 12631  014558  90D8               	bcf	status,0,c
 12632  01455A  3239               	rrcf	(btemp+7)^0,f,c
 12633  01455C  3238               	rrcf	(btemp+6)^0,f,c
 12634  01455E  3237               	rrcf	(btemp+5)^0,f,c
 12635  014560  3236               	rrcf	(btemp+4)^0,f,c
 12636  014562                     u5110:
 12637  014562  2EE8               	decfsz	wreg,f,c
 12638  014564  D7F9               	goto	u5115
 12639  014566  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12640  01456C  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12641  014572  0EFF               	movlw	255
 12642  014574  163A               	andwf	(btemp+8)^0,f,c
 12643  014576  0E00               	movlw	0
 12644  014578  163B               	andwf	(btemp+9)^0,f,c
 12645  01457A  503C               	movf	(btemp+10)^0,w,c
 12646  01457C  263A               	addwf	(btemp+8)^0,f,c
 12647  01457E  503D               	movf	(btemp+11)^0,w,c
 12648  014580  223B               	addwfc	(btemp+9)^0,f,c
 12649                           
 12650                           ;stkvar	_e @ sp[(-10)+8]
 12651  014582  0EFE               	movlw	-2
 12652  014584  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12653  01458A  0EFF               	movlw	-1
 12654  01458C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12655                           
 12656                           ;stkvar	_e @ sp[(-10)+8]
 12657  014592  0EFF               	movlw	-1
 12658  014594  BEE3               	btfsc	plusw1,7,c
 12659  014596  D019               	goto	l6423
 12660  014598  0EFF               	movlw	-1
 12661  01459A  50E3               	movf	plusw1,w,c
 12662  01459C  E108               	bnz	u5120
 12663  01459E  0EFE               	movlw	-2
 12664  0145A0  006F FF8C  F032    	movff	plusw1,btemp
 12665  0145A6  0E17               	movlw	23
 12666  0145A8  5E32               	subwf	btemp^0,f,c
 12667  0145AA  A0D8               	btfss	status,0,c
 12668  0145AC  D00E               	goto	l6423
 12669  0145AE                     u5120:
 12670                           
 12671                           ;stkvar	_x @ sp[(-10)+-4]
 12672  0145AE  0EF2               	movlw	-14
 12673  0145B0  006F FF8C  F032    	movff	plusw1,btemp
 12674  0145B6  0EF3               	movlw	-13
 12675  0145B8  006F FF8C  F033    	movff	plusw1,btemp+1
 12676  0145BE  0EF4               	movlw	-12
 12677  0145C0  006F FF8C  F034    	movff	plusw1,btemp+2
 12678  0145C6  0EF5               	movlw	-11
 12679  0145C8  D11F               	goto	L12
 12680  0145CA                     l6423:
 12681                           
 12682                           ;stkvar	_e @ sp[(-10)+8]
 12683  0145CA  0EFF               	movlw	-1
 12684  0145CC  BEE3               	btfsc	plusw1,7,c
 12685  0145CE  D0B4               	goto	l6439
 12686                           
 12687                           ;stkvar	_e @ sp[(-10)+8]
 12688  0145D0  0EFE               	movlw	-2
 12689  0145D2  006F FF8C  F03D    	movff	plusw1,btemp+11
 12690  0145D8  0EFF               	movlw	255
 12691  0145DA  6E36               	movwf	(btemp+4)^0,c
 12692  0145DC  0EFF               	movlw	255
 12693  0145DE  6E37               	movwf	(btemp+5)^0,c
 12694  0145E0  0E7F               	movlw	127
 12695  0145E2  6E38               	movwf	(btemp+6)^0,c
 12696  0145E4  0E00               	movlw	0
 12697  0145E6  6E39               	movwf	(btemp+7)^0,c
 12698  0145E8                     u5145:
 12699  0145E8  663D               	tstfsz	(btemp+11)^0,c
 12700  0145EA  D001               	goto	u5146
 12701  0145EC  D007               	goto	u5147
 12702  0145EE                     u5146:
 12703  0145EE  3439               	rlcf	(btemp+7)^0,w,c
 12704  0145F0  3239               	rrcf	(btemp+7)^0,f,c
 12705  0145F2  3238               	rrcf	(btemp+6)^0,f,c
 12706  0145F4  3237               	rrcf	(btemp+5)^0,f,c
 12707  0145F6  3236               	rrcf	(btemp+4)^0,f,c
 12708  0145F8  2E3D               	decfsz	(btemp+11)^0,f,c
 12709  0145FA  D7F6               	goto	u5145
 12710  0145FC                     u5147:
 12711                           
 12712                           ;stkvar	_m @ sp[(-10)+4]
 12713  0145FC  0EFA               	movlw	-6
 12714  0145FE  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12715  014604  0EFB               	movlw	-5
 12716  014606  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12717  01460C  0EFC               	movlw	-4
 12718  01460E  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12719  014614  0EFD               	movlw	-3
 12720  014616  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12721                           
 12722                           ;stkvar	_m @ sp[(-10)+4]
 12723                           ;stkvar	_u @ sp[(-10)+0]
 12724  01461C  0EF6               	movlw	-10
 12725  01461E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12726  014624  0EF7               	movlw	-9
 12727  014626  006F FF8C  F03B    	movff	plusw1,btemp+9
 12728  01462C  0EF8               	movlw	-8
 12729  01462E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12730  014634  0EF9               	movlw	-7
 12731  014636  006F FF8C  F03D    	movff	plusw1,btemp+11
 12732  01463C  0EFA               	movlw	-6
 12733  01463E  50E3               	movf	plusw1,w,c
 12734  014640  163A               	andwf	(btemp+8)^0,f,c
 12735  014642  0EFB               	movlw	-5
 12736  014644  50E3               	movf	plusw1,w,c
 12737  014646  163B               	andwf	(btemp+9)^0,f,c
 12738  014648  0EFC               	movlw	-4
 12739  01464A  50E3               	movf	plusw1,w,c
 12740  01464C  163C               	andwf	(btemp+10)^0,f,c
 12741  01464E  0EFD               	movlw	-3
 12742  014650  50E3               	movf	plusw1,w,c
 12743  014652  163D               	andwf	(btemp+11)^0,f,c
 12744  014654  503A               	movf	(btemp+8)^0,w,c
 12745  014656  103B               	iorwf	(btemp+9)^0,w,c
 12746  014658  103C               	iorwf	(btemp+10)^0,w,c
 12747  01465A  103D               	iorwf	(btemp+11)^0,w,c
 12748  01465C  B4D8               	btfsc	status,2,c
 12749  01465E  D7A7               	goto	u5120
 12750                           
 12751                           ;stkvar	_u @ sp[(-10)+0]
 12752  014660  0EF6               	movlw	-10
 12753  014662  006F FF8C  F03A    	movff	plusw1,btemp+8
 12754  014668  0EF7               	movlw	-9
 12755  01466A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12756  014670  0EF8               	movlw	-8
 12757  014672  006F FF8C  F03C    	movff	plusw1,btemp+10
 12758  014678  0EF9               	movlw	-7
 12759  01467A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12760  014680  0E20               	movlw	32
 12761  014682  D005               	goto	u5160
 12762  014684                     u5165:
 12763  014684  90D8               	bcf	status,0,c
 12764  014686  323D               	rrcf	(btemp+11)^0,f,c
 12765  014688  323C               	rrcf	(btemp+10)^0,f,c
 12766  01468A  323B               	rrcf	(btemp+9)^0,f,c
 12767  01468C  323A               	rrcf	(btemp+8)^0,f,c
 12768  01468E                     u5160:
 12769  01468E  2EE8               	decfsz	wreg,f,c
 12770  014690  D7F9               	goto	u5165
 12771  014692  503A               	movf	(btemp+8)^0,w,c
 12772  014694  B4D8               	btfsc	status,2,c
 12773  014696  D028               	goto	l6437
 12774                           
 12775                           ;stkvar	_m @ sp[(-10)+4]
 12776                           ;stkvar	_u @ sp[(-10)+0]
 12777  014698  0EF6               	movlw	-10
 12778  01469A  50E3               	movf	plusw1,w,c
 12779  01469C  6E32               	movwf	btemp^0,c
 12780  01469E  0EFA               	movlw	-6
 12781  0146A0  50E3               	movf	plusw1,w,c
 12782  0146A2  2632               	addwf	btemp^0,f,c
 12783  0146A4  0EF6               	movlw	-10
 12784  0146A6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12785  0146AC  0EF7               	movlw	-9
 12786  0146AE  50E3               	movf	plusw1,w,c
 12787  0146B0  6E32               	movwf	btemp^0,c
 12788  0146B2  0EFB               	movlw	-5
 12789  0146B4  50E3               	movf	plusw1,w,c
 12790  0146B6  2232               	addwfc	btemp^0,f,c
 12791  0146B8  0EF7               	movlw	-9
 12792  0146BA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12793  0146C0  0EF8               	movlw	-8
 12794  0146C2  50E3               	movf	plusw1,w,c
 12795  0146C4  6E32               	movwf	btemp^0,c
 12796  0146C6  0EFC               	movlw	-4
 12797  0146C8  50E3               	movf	plusw1,w,c
 12798  0146CA  2232               	addwfc	btemp^0,f,c
 12799  0146CC  0EF8               	movlw	-8
 12800  0146CE  0060  F0CB  FFE3   	movff	btemp,plusw1
 12801  0146D4  0EF9               	movlw	-7
 12802  0146D6  50E3               	movf	plusw1,w,c
 12803  0146D8  6E32               	movwf	btemp^0,c
 12804  0146DA  0EFD               	movlw	-3
 12805  0146DC  50E3               	movf	plusw1,w,c
 12806  0146DE  2232               	addwfc	btemp^0,f,c
 12807  0146E0  0EF9               	movlw	-7
 12808  0146E2  0060  F0CB  FFE3   	movff	btemp,plusw1
 12809  0146E8                     l6437:
 12810                           
 12811                           ;stkvar	_m @ sp[(-10)+4]
 12812  0146E8  0EFA               	movlw	-6
 12813  0146EA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12814  0146F0  0EFB               	movlw	-5
 12815  0146F2  006F FF8C  F03B    	movff	plusw1,btemp+9
 12816  0146F8  0EFC               	movlw	-4
 12817  0146FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12818  014700  0EFD               	movlw	-3
 12819  014702  006F FF8C  F03D    	movff	plusw1,btemp+11
 12820  014708  1C3A               	comf	(btemp+8)^0,w,c
 12821  01470A  6E36               	movwf	(btemp+4)^0,c
 12822  01470C  1C3B               	comf	(btemp+9)^0,w,c
 12823  01470E  6E37               	movwf	(btemp+5)^0,c
 12824  014710  1C3C               	comf	(btemp+10)^0,w,c
 12825  014712  6E38               	movwf	(btemp+6)^0,c
 12826  014714  1C3D               	comf	(btemp+11)^0,w,c
 12827  014716  6E39               	movwf	(btemp+7)^0,c
 12828                           
 12829                           ;stkvar	_u @ sp[(-10)+0]
 12830  014718  50E1               	movf	fsr1l,w,c
 12831  01471A  0FF6               	addlw	-10
 12832  01471C  6ED9               	movwf	fsr2l,c
 12833  01471E  50E2               	movf	fsr1h,w,c
 12834  014720  6EDA               	movwf	fsr2h,c
 12835  014722  0EFF               	movlw	255
 12836  014724  22DA               	addwfc	fsr2h,f,c
 12837  014726  5036               	movf	(btemp+4)^0,w,c
 12838  014728  16DE               	andwf	postinc2,f,c
 12839  01472A  5037               	movf	(btemp+5)^0,w,c
 12840  01472C  16DE               	andwf	postinc2,f,c
 12841  01472E  5038               	movf	(btemp+6)^0,w,c
 12842  014730  16DE               	andwf	postinc2,f,c
 12843  014732  5039               	movf	(btemp+7)^0,w,c
 12844  014734  16DE               	andwf	postinc2,f,c
 12845  014736  D05B               	goto	l6447
 12846  014738                     l6439:
 12847                           
 12848                           ;stkvar	_u @ sp[(-10)+0]
 12849  014738  0EF6               	movlw	-10
 12850  01473A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12851  014740  0EF7               	movlw	-9
 12852  014742  006F FF8C  F03B    	movff	plusw1,btemp+9
 12853  014748  0EF8               	movlw	-8
 12854  01474A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12855  014750  0EF9               	movlw	-7
 12856  014752  006F FF8C  F03D    	movff	plusw1,btemp+11
 12857  014758  0E20               	movlw	32
 12858  01475A  D005               	goto	u5180
 12859  01475C                     u5185:
 12860  01475C  90D8               	bcf	status,0,c
 12861  01475E  323D               	rrcf	(btemp+11)^0,f,c
 12862  014760  323C               	rrcf	(btemp+10)^0,f,c
 12863  014762  323B               	rrcf	(btemp+9)^0,f,c
 12864  014764  323A               	rrcf	(btemp+8)^0,f,c
 12865  014766                     u5180:
 12866  014766  2EE8               	decfsz	wreg,f,c
 12867  014768  D7F9               	goto	u5185
 12868  01476A  663A               	tstfsz	(btemp+8)^0,c
 12869  01476C  D009               	goto	l6443
 12870                           
 12871                           ;stkvar	_u @ sp[(-10)+0]
 12872  01476E  0EF6               	movlw	-10
 12873  014770  6AE3               	clrf	plusw1,c
 12874  014772  0EF7               	movlw	-9
 12875  014774  6AE3               	clrf	plusw1,c
 12876  014776  0EF8               	movlw	-8
 12877  014778  6AE3               	clrf	plusw1,c
 12878  01477A  0EF9               	movlw	-7
 12879  01477C  6AE3               	clrf	plusw1,c
 12880  01477E  D037               	goto	l6447
 12881  014780                     l6443:
 12882                           
 12883                           ;stkvar	_u @ sp[(-10)+0]
 12884  014780  0EF6               	movlw	-10
 12885  014782  006F FF8C  F03A    	movff	plusw1,btemp+8
 12886  014788  0EF7               	movlw	-9
 12887  01478A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12888  014790  0EF8               	movlw	-8
 12889  014792  006F FF8C  F03C    	movff	plusw1,btemp+10
 12890  014798  0EF9               	movlw	-7
 12891  01479A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12892  0147A0  90D8               	bcf	status,0,c
 12893  0147A2  343A               	rlcf	(btemp+8)^0,w,c
 12894  0147A4  6E36               	movwf	(btemp+4)^0,c
 12895  0147A6  343B               	rlcf	(btemp+9)^0,w,c
 12896  0147A8  6E37               	movwf	(btemp+5)^0,c
 12897  0147AA  343C               	rlcf	(btemp+10)^0,w,c
 12898  0147AC  6E38               	movwf	(btemp+6)^0,c
 12899  0147AE  343D               	rlcf	(btemp+11)^0,w,c
 12900  0147B0  6E39               	movwf	(btemp+7)^0,c
 12901  0147B2  5036               	movf	(btemp+4)^0,w,c
 12902  0147B4  1037               	iorwf	(btemp+5)^0,w,c
 12903  0147B6  1038               	iorwf	(btemp+6)^0,w,c
 12904  0147B8  1039               	iorwf	(btemp+7)^0,w,c
 12905  0147BA  B4D8               	btfsc	status,2,c
 12906  0147BC  D018               	goto	l6447
 12907  0147BE  0E00               	movlw	0
 12908  0147C0  6E3A               	movwf	(btemp+8)^0,c
 12909  0147C2  0E00               	movlw	0
 12910  0147C4  6E3B               	movwf	(btemp+9)^0,c
 12911  0147C6  0E80               	movlw	128
 12912  0147C8  6E3C               	movwf	(btemp+10)^0,c
 12913  0147CA  0EBF               	movlw	191
 12914  0147CC  6E3D               	movwf	(btemp+11)^0,c
 12915                           
 12916                           ;stkvar	_u @ sp[(-10)+0]
 12917  0147CE  0EF6               	movlw	-10
 12918  0147D0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12919  0147D6  0EF7               	movlw	-9
 12920  0147D8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12921  0147DE  0EF8               	movlw	-8
 12922  0147E0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12923  0147E6  0EF9               	movlw	-7
 12924  0147E8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12925  0147EE                     l6447:
 12926                           
 12927                           ;stkvar	_u @ sp[(-10)+0]
 12928  0147EE  0EF6               	movlw	-10
 12929  0147F0  006F FF8C  F032    	movff	plusw1,btemp
 12930  0147F6  0EF7               	movlw	-9
 12931  0147F8  006F FF8C  F033    	movff	plusw1,btemp+1
 12932  0147FE  0EF8               	movlw	-8
 12933  014800  006F FF8C  F034    	movff	plusw1,btemp+2
 12934  014806  0EF9               	movlw	-7
 12935  014808                     L12:
 12936  014808  006F FF8C  F035    	movff	plusw1,btemp+3
 12937                           
 12938                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12939  01480E  0EF2               	movlw	242
 12940  014810  26E1               	addwf	fsr1l,f,c
 12941  014812  0EFF               	movlw	255
 12942  014814  22E2               	addwfc	fsr1h,f,c
 12943  014816  0012               	return		;funcret
 12944  014818                     __end_of_floorf:
 12945                           	opt callstack 0
 12946                           
 12947 ;; *************** function ___fpclassifyf *****************
 12948 ;; Defined at:
 12949 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12950 ;; Parameters:    Size  Location     Type
 12951 ;;  x               4  [STACK] float 
 12952 ;; Auto vars:     Size  Location     Type
 12953 ;;  u               4  [STACK] struct .
 12954 ;;  e               2  [STACK] int 
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  2  [STACK] int 
 12957 ;; Registers used:
 12958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/5
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12968 ;;Total ram usage:        0 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:    6
 12971 ;; This function calls:
 12972 ;;		Nothing
 12973 ;; This function is called by:
 12974 ;;		_efgtoa
 12975 ;; This function uses a reentrant model
 12976 ;;
 12977                           
 12978                           	psect	text50
 12979  015C94                     __ptext50:
 12980                           	opt callstack 0
 12981  015C94                     ___fpclassifyf:
 12982                           	opt callstack 0
 12983                           
 12984                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12985  015C94  0E06               	movlw	6
 12986  015C96  26E1               	addwf	fsr1l,f,c
 12987  015C98  0E00               	movlw	0
 12988  015C9A  22E2               	addwfc	fsr1h,f,c
 12989                           
 12990                           ;incstack = 0
 12991  015C9C  0060  F220  F03A   	movff	___fpclassifyf@F463,btemp+8
 12992  015CA2  0060  F224  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 12993  015CA8  0060  F228  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 12994  015CAE  0060  F22C  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 12995                           
 12996                           ;stkvar	_u @ sp[(-6)+0]
 12997  015CB4  0EFA               	movlw	-6
 12998  015CB6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12999  015CBC  0EFB               	movlw	-5
 13000  015CBE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13001  015CC4  0EFC               	movlw	-4
 13002  015CC6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13003  015CCC  0EFD               	movlw	-3
 13004  015CCE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13005                           
 13006                           ;stkvar	_x @ sp[(-6)+-4]
 13007  015CD4  0EF6               	movlw	-10
 13008  015CD6  006F FF8C  F03A    	movff	plusw1,btemp+8
 13009  015CDC  0EF7               	movlw	-9
 13010  015CDE  006F FF8C  F03B    	movff	plusw1,btemp+9
 13011  015CE4  0EF8               	movlw	-8
 13012  015CE6  006F FF8C  F03C    	movff	plusw1,btemp+10
 13013  015CEC  0EF9               	movlw	-7
 13014  015CEE  006F FF8C  F03D    	movff	plusw1,btemp+11
 13015                           
 13016                           ;stkvar	_u @ sp[(-6)+0]
 13017  015CF4  0EFA               	movlw	-6
 13018  015CF6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13019  015CFC  0EFB               	movlw	-5
 13020  015CFE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13021  015D04  0EFC               	movlw	-4
 13022  015D06  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13023  015D0C  0EFD               	movlw	-3
 13024  015D0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13025                           
 13026                           ;stkvar	_u @ sp[(-6)+0]
 13027  015D14  0EFA               	movlw	-6
 13028  015D16  006F FF8C  F03A    	movff	plusw1,btemp+8
 13029  015D1C  0EFB               	movlw	-5
 13030  015D1E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13031  015D24  0EFC               	movlw	-4
 13032  015D26  006F FF8C  F03C    	movff	plusw1,btemp+10
 13033  015D2C  0EFD               	movlw	-3
 13034  015D2E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13035  015D34  0E18               	movlw	24
 13036  015D36  D005               	goto	u4990
 13037  015D38                     u4995:
 13038  015D38  90D8               	bcf	status,0,c
 13039  015D3A  323D               	rrcf	(btemp+11)^0,f,c
 13040  015D3C  323C               	rrcf	(btemp+10)^0,f,c
 13041  015D3E  323B               	rrcf	(btemp+9)^0,f,c
 13042  015D40  323A               	rrcf	(btemp+8)^0,f,c
 13043  015D42                     u4990:
 13044  015D42  2EE8               	decfsz	wreg,f,c
 13045  015D44  D7F9               	goto	u4995
 13046  015D46  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13047  015D4C  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13048  015D52  0EFF               	movlw	255
 13049  015D54  1638               	andwf	(btemp+6)^0,f,c
 13050  015D56  0E00               	movlw	0
 13051  015D58  1639               	andwf	(btemp+7)^0,f,c
 13052                           
 13053                           ;stkvar	_e @ sp[(-6)+4]
 13054  015D5A  0EFE               	movlw	-2
 13055  015D5C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13056  015D62  0EFF               	movlw	-1
 13057  015D64  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13058                           
 13059                           ;stkvar	_e @ sp[(-6)+4]
 13060  015D6A  0EFE               	movlw	-2
 13061  015D6C  006F FF8C  F032    	movff	plusw1,btemp
 13062  015D72  0EFF               	movlw	-1
 13063  015D74  50E3               	movf	plusw1,w,c
 13064  015D76  1032               	iorwf	btemp^0,w,c
 13065  015D78  A4D8               	btfss	status,2,c
 13066  015D7A  D023               	goto	l6385
 13067                           
 13068                           ;stkvar	_u @ sp[(-6)+0]
 13069  015D7C  0EFA               	movlw	-6
 13070  015D7E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13071  015D84  0EFB               	movlw	-5
 13072  015D86  006F FF8C  F03B    	movff	plusw1,btemp+9
 13073  015D8C  0EFC               	movlw	-4
 13074  015D8E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13075  015D94  0EFD               	movlw	-3
 13076  015D96  006F FF8C  F03D    	movff	plusw1,btemp+11
 13077  015D9C  90D8               	bcf	status,0,c
 13078  015D9E  343A               	rlcf	(btemp+8)^0,w,c
 13079  015DA0  6E36               	movwf	(btemp+4)^0,c
 13080  015DA2  343B               	rlcf	(btemp+9)^0,w,c
 13081  015DA4  6E37               	movwf	(btemp+5)^0,c
 13082  015DA6  343C               	rlcf	(btemp+10)^0,w,c
 13083  015DA8  6E38               	movwf	(btemp+6)^0,c
 13084  015DAA  343D               	rlcf	(btemp+11)^0,w,c
 13085  015DAC  6E39               	movwf	(btemp+7)^0,c
 13086  015DAE  5036               	movf	(btemp+4)^0,w,c
 13087  015DB0  1037               	iorwf	(btemp+5)^0,w,c
 13088  015DB2  1038               	iorwf	(btemp+6)^0,w,c
 13089  015DB4  1039               	iorwf	(btemp+7)^0,w,c
 13090  015DB6  A4D8               	btfss	status,2,c
 13091  015DB8  D002               	goto	l6381
 13092  015DBA  0E02               	movlw	2
 13093  015DBC  D02E               	goto	L13
 13094  015DBE                     l6381:
 13095  015DBE  0E03               	movlw	3
 13096  015DC0  D02C               	goto	L13
 13097  015DC2                     l6385:
 13098                           
 13099                           ;stkvar	_e @ sp[(-6)+4]
 13100  015DC2  0EFE               	movlw	-2
 13101  015DC4  28E3               	incf	plusw1,w,c
 13102  015DC6  E128               	bnz	l6391
 13103  015DC8  0EFF               	movlw	-1
 13104  015DCA  50E3               	movf	plusw1,w,c
 13105  015DCC  A4D8               	btfss	status,2,c
 13106  015DCE  D024               	goto	l6391
 13107                           
 13108                           ;stkvar	_u @ sp[(-6)+0]
 13109  015DD0  0EFA               	movlw	-6
 13110  015DD2  006F FF8C  F03A    	movff	plusw1,btemp+8
 13111  015DD8  0EFB               	movlw	-5
 13112  015DDA  006F FF8C  F03B    	movff	plusw1,btemp+9
 13113  015DE0  0EFC               	movlw	-4
 13114  015DE2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13115  015DE8  0EFD               	movlw	-3
 13116  015DEA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13117  015DF0  0E09               	movlw	9
 13118  015DF2                     u5035:
 13119  015DF2  90D8               	bcf	status,0,c
 13120  015DF4  363A               	rlcf	(btemp+8)^0,f,c
 13121  015DF6  363B               	rlcf	(btemp+9)^0,f,c
 13122  015DF8  363C               	rlcf	(btemp+10)^0,f,c
 13123  015DFA  363D               	rlcf	(btemp+11)^0,f,c
 13124  015DFC  2EE8               	decfsz	wreg,f,c
 13125  015DFE  D7F9               	goto	u5035
 13126  015E00  503A               	movf	(btemp+8)^0,w,c
 13127  015E02  103B               	iorwf	(btemp+9)^0,w,c
 13128  015E04  103C               	iorwf	(btemp+10)^0,w,c
 13129  015E06  103D               	iorwf	(btemp+11)^0,w,c
 13130  015E08  A4D8               	btfss	status,2,c
 13131  015E0A  D002               	goto	u5040
 13132  015E0C  0E01               	movlw	1
 13133  015E0E  D001               	goto	u5050
 13134  015E10                     u5040:
 13135  015E10  0E00               	movlw	0
 13136  015E12                     u5050:
 13137  015E12  6E32               	movwf	btemp^0,c
 13138  015E14  6A33               	clrf	(btemp+1)^0,c
 13139  015E16  D004               	goto	l2721
 13140  015E18                     l6391:
 13141  015E18  0E04               	movlw	4
 13142  015E1A                     L13:
 13143  015E1A  6E32               	movwf	btemp^0,c
 13144  015E1C  0E00               	movlw	0
 13145  015E1E  6E33               	movwf	(btemp+1)^0,c
 13146  015E20                     l2721:
 13147                           
 13148                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13149  015E20  0EF6               	movlw	246
 13150  015E22  26E1               	addwf	fsr1l,f,c
 13151  015E24  0EFF               	movlw	255
 13152  015E26  22E2               	addwfc	fsr1h,f,c
 13153  015E28  0012               	return		;funcret
 13154  015E2A                     __end_of___fpclassifyf:
 13155                           	opt callstack 0
 13156                           
 13157 ;; *************** function ___fltol *****************
 13158 ;; Defined at:
 13159 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;  f1              4  [STACK] int 
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;  exp1            1  [STACK] unsigned char 
 13164 ;;  sign1           1  [STACK] unsigned char 
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  4  [STACK] long 
 13167 ;; Registers used:
 13168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/5
 13171 ;;		On exit  : 0/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13178 ;;Total ram usage:        0 bytes
 13179 ;; Hardware stack levels used:    1
 13180 ;; Hardware stack levels required when called:    6
 13181 ;; This function calls:
 13182 ;;		Nothing
 13183 ;; This function is called by:
 13184 ;;		_efgtoa
 13185 ;; This function uses a reentrant model
 13186 ;;
 13187                           
 13188                           	psect	text51
 13189  015E2A                     __ptext51:
 13190                           	opt callstack 0
 13191  015E2A                     ___fltol:
 13192                           	opt callstack 0
 13193                           
 13194                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13195  015E2A  52E6               	movf	postinc1,f,c
 13196  015E2C  52E6               	movf	postinc1,f,c
 13197                           
 13198                           ;stkvar	_f1 @ sp[(-2)+-4]
 13199                           
 13200                           ;incstack = 0
 13201  015E2E  0EFA               	movlw	-6
 13202  015E30  006F FF8C  F03A    	movff	plusw1,btemp+8
 13203  015E36  0EFB               	movlw	-5
 13204  015E38  006F FF8C  F03B    	movff	plusw1,btemp+9
 13205  015E3E  0EFC               	movlw	-4
 13206  015E40  006F FF8C  F03C    	movff	plusw1,btemp+10
 13207  015E46  0EFD               	movlw	-3
 13208  015E48  006F FF8C  F03D    	movff	plusw1,btemp+11
 13209  015E4E  0E18               	movlw	24
 13210  015E50  D005               	goto	u6200
 13211  015E52                     u6205:
 13212  015E52  90D8               	bcf	status,0,c
 13213  015E54  323D               	rrcf	(btemp+11)^0,f,c
 13214  015E56  323C               	rrcf	(btemp+10)^0,f,c
 13215  015E58  323B               	rrcf	(btemp+9)^0,f,c
 13216  015E5A  323A               	rrcf	(btemp+8)^0,f,c
 13217  015E5C                     u6200:
 13218  015E5C  2EE8               	decfsz	wreg,f,c
 13219  015E5E  D7F9               	goto	u6205
 13220                           
 13221                           ;stkvar	_exp1 @ sp[(-2)+0]
 13222  015E60  0EFE               	movlw	-2
 13223  015E62  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13224  015E68  0EFE               	movlw	-2
 13225  015E6A  50E3               	movf	plusw1,w,c
 13226  015E6C  A4D8               	btfss	status,2,c
 13227  015E6E  D006               	goto	l7011
 13228  015E70                     u6210:
 13229  015E70  0E00               	movlw	0
 13230  015E72  6E32               	movwf	btemp^0,c
 13231  015E74  6A33               	clrf	(btemp+1)^0,c
 13232  015E76  6A34               	clrf	(btemp+2)^0,c
 13233  015E78  6A35               	clrf	(btemp+3)^0,c
 13234  015E7A  D08B               	goto	l2337
 13235  015E7C                     l7011:
 13236                           
 13237                           ;stkvar	_f1 @ sp[(-2)+-4]
 13238  015E7C  0EFA               	movlw	-6
 13239  015E7E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13240  015E84  0EFB               	movlw	-5
 13241  015E86  006F FF8C  F03B    	movff	plusw1,btemp+9
 13242  015E8C  0EFC               	movlw	-4
 13243  015E8E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13244  015E94  0EFD               	movlw	-3
 13245  015E96  006F FF8C  F03D    	movff	plusw1,btemp+11
 13246  015E9C  0E20               	movlw	32
 13247  015E9E  D005               	goto	u6220
 13248  015EA0                     u6225:
 13249  015EA0  90D8               	bcf	status,0,c
 13250  015EA2  323D               	rrcf	(btemp+11)^0,f,c
 13251  015EA4  323C               	rrcf	(btemp+10)^0,f,c
 13252  015EA6  323B               	rrcf	(btemp+9)^0,f,c
 13253  015EA8  323A               	rrcf	(btemp+8)^0,f,c
 13254  015EAA                     u6220:
 13255  015EAA  2EE8               	decfsz	wreg,f,c
 13256  015EAC  D7F9               	goto	u6225
 13257                           
 13258                           ;stkvar	_sign1 @ sp[(-2)+1]
 13259  015EAE  0EFF               	movlw	-1
 13260  015EB0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13261                           
 13262                           ;stkvar	_f1 @ sp[(-2)+-4]
 13263  015EB6  0EFC               	movlw	-4
 13264  015EB8  8EE3               	bsf	plusw1,7,c
 13265                           
 13266                           ;stkvar	_f1 @ sp[(-2)+-4]
 13267  015EBA  50E1               	movf	fsr1l,w,c
 13268  015EBC  0FFA               	addlw	-6
 13269  015EBE  6ED9               	movwf	fsr2l,c
 13270  015EC0  50E2               	movf	fsr1h,w,c
 13271  015EC2  6EDA               	movwf	fsr2h,c
 13272  015EC4  0EFF               	movlw	255
 13273  015EC6  22DA               	addwfc	fsr2h,f,c
 13274  015EC8  0EFF               	movlw	255
 13275  015ECA  16DE               	andwf	postinc2,f,c
 13276  015ECC  0EFF               	movlw	255
 13277  015ECE  16DE               	andwf	postinc2,f,c
 13278  015ED0  0EFF               	movlw	255
 13279  015ED2  16DE               	andwf	postinc2,f,c
 13280  015ED4  0E00               	movlw	0
 13281  015ED6  16DE               	andwf	postinc2,f,c
 13282                           
 13283                           ;stkvar	_exp1 @ sp[(-2)+0]
 13284  015ED8  0EFE               	movlw	-2
 13285  015EDA  006F FF8C  F032    	movff	plusw1,btemp
 13286  015EE0  0E96               	movlw	150
 13287  015EE2  5E32               	subwf	btemp^0,f,c
 13288  015EE4  0EFE               	movlw	-2
 13289  015EE6  0060  F0CB  FFE3   	movff	btemp,plusw1
 13290                           
 13291                           ;stkvar	_exp1 @ sp[(-2)+0]
 13292  015EEC  0EFE               	movlw	-2
 13293  015EEE  AEE3               	btfss	plusw1,7,c
 13294  015EF0  D014               	goto	l7029
 13295                           
 13296                           ;stkvar	_exp1 @ sp[(-2)+0]
 13297  015EF2  0EFE               	movlw	-2
 13298  015EF4  50E3               	movf	plusw1,w,c
 13299  015EF6  0A80               	xorlw	128
 13300  015EF8  0F97               	addlw	151
 13301  015EFA  A0D8               	btfss	status,0,c
 13302  015EFC  D7B9               	goto	u6210
 13303  015EFE                     l7027:
 13304                           
 13305                           ;stkvar	_f1 @ sp[(-2)+-4]
 13306  015EFE  90D8               	bcf	status,0,c
 13307  015F00  0EFD               	movlw	-3
 13308  015F02  32E3               	rrcf	plusw1,f,c
 13309  015F04  0EFC               	movlw	-4
 13310  015F06  32E3               	rrcf	plusw1,f,c
 13311  015F08  0EFB               	movlw	-5
 13312  015F0A  32E3               	rrcf	plusw1,f,c
 13313  015F0C  0EFA               	movlw	-6
 13314  015F0E  32E3               	rrcf	plusw1,f,c
 13315                           
 13316                           ;stkvar	_exp1 @ sp[(-2)+0]
 13317  015F10  0EFE               	movlw	-2
 13318  015F12  2AE3               	incf	plusw1,f,c
 13319  015F14  B4D8               	btfsc	status,2,c
 13320  015F16  D018               	goto	u6270
 13321  015F18  D7F2               	goto	l7027
 13322  015F1A                     l7029:
 13323                           
 13324                           ;stkvar	_exp1 @ sp[(-2)+0]
 13325  015F1A  0EFE               	movlw	-2
 13326  015F1C  006F FF8C  F032    	movff	plusw1,btemp
 13327  015F22  0E1F               	movlw	31
 13328  015F24  6432               	cpfsgt	btemp^0,c
 13329  015F26  D00C               	goto	l7037
 13330  015F28  D7A3               	goto	u6210
 13331  015F2A                     l7035:
 13332                           
 13333                           ;stkvar	_f1 @ sp[(-2)+-4]
 13334  015F2A  90D8               	bcf	status,0,c
 13335  015F2C  0EFA               	movlw	-6
 13336  015F2E  36E3               	rlcf	plusw1,f,c
 13337  015F30  0EFB               	movlw	-5
 13338  015F32  36E3               	rlcf	plusw1,f,c
 13339  015F34  0EFC               	movlw	-4
 13340  015F36  36E3               	rlcf	plusw1,f,c
 13341  015F38  0EFD               	movlw	-3
 13342  015F3A  36E3               	rlcf	plusw1,f,c
 13343                           
 13344                           ;stkvar	_exp1 @ sp[(-2)+0]
 13345  015F3C  0EFE               	movlw	-2
 13346  015F3E  06E3               	decf	plusw1,f,c
 13347  015F40                     l7037:
 13348                           
 13349                           ;stkvar	_exp1 @ sp[(-2)+0]
 13350  015F40  0EFE               	movlw	-2
 13351  015F42  50E3               	movf	plusw1,w,c
 13352  015F44  A4D8               	btfss	status,2,c
 13353  015F46  D7F1               	goto	l7035
 13354  015F48                     u6270:
 13355                           
 13356                           ;stkvar	_sign1 @ sp[(-2)+1]
 13357  015F48  0EFF               	movlw	-1
 13358  015F4A  50E3               	movf	plusw1,w,c
 13359  015F4C  B4D8               	btfsc	status,2,c
 13360  015F4E  D011               	goto	u6290
 13361                           
 13362                           ;stkvar	_f1 @ sp[(-2)+-4]
 13363                           ;stkvar	_f1 @ sp[(-2)+-4]
 13364  015F50  0EFA               	movlw	-6
 13365  015F52  6CE3               	negf	plusw1,c
 13366  015F54  0EFB               	movlw	-5
 13367  015F56  1EE3               	comf	plusw1,f,c
 13368  015F58  0EFC               	movlw	-4
 13369  015F5A  1EE3               	comf	plusw1,f,c
 13370  015F5C  0EFD               	movlw	-3
 13371  015F5E  1EE3               	comf	plusw1,f,c
 13372  015F60  E308               	bnc	u6290
 13373  015F62  0EFB               	movlw	-5
 13374  015F64  2AE3               	incf	plusw1,f,c
 13375  015F66  E305               	bnc	u6290
 13376  015F68  0EFC               	movlw	-4
 13377  015F6A  2AE3               	incf	plusw1,f,c
 13378  015F6C  E302               	bnc	u6290
 13379  015F6E  0EFD               	movlw	-3
 13380  015F70  2AE3               	incf	plusw1,f,c
 13381  015F72                     u6290:
 13382                           
 13383                           ;stkvar	_f1 @ sp[(-2)+-4]
 13384  015F72  0EFA               	movlw	-6
 13385  015F74  006F FF8C  F032    	movff	plusw1,btemp
 13386  015F7A  0EFB               	movlw	-5
 13387  015F7C  006F FF8C  F033    	movff	plusw1,btemp+1
 13388  015F82  0EFC               	movlw	-4
 13389  015F84  006F FF8C  F034    	movff	plusw1,btemp+2
 13390  015F8A  0EFD               	movlw	-3
 13391  015F8C  006F FF8C  F035    	movff	plusw1,btemp+3
 13392  015F92                     l2337:
 13393                           
 13394                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13395  015F92  0EFA               	movlw	250
 13396  015F94  26E1               	addwf	fsr1l,f,c
 13397  015F96  0EFF               	movlw	255
 13398  015F98  22E2               	addwfc	fsr1h,f,c
 13399  015F9A  0012               	return		;funcret
 13400  015F9C                     __end_of___fltol:
 13401                           	opt callstack 0
 13402                           
 13403 ;; *************** function ___flsub *****************
 13404 ;; Defined at:
 13405 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13406 ;; Parameters:    Size  Location     Type
 13407 ;;  b               4  [STACK] long 
 13408 ;;  a               4  [STACK] long 
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;		None
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  4  [STACK] long 
 13413 ;; Registers used:
 13414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/39
 13417 ;;		On exit  : 0/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13424 ;;Total ram usage:        0 bytes
 13425 ;; Hardware stack levels used:    1
 13426 ;; Hardware stack levels required when called:    7
 13427 ;; This function calls:
 13428 ;;		___fladd
 13429 ;; This function is called by:
 13430 ;;		_conv_raw_result
 13431 ;;		_lp_filter
 13432 ;;		_efgtoa
 13433 ;; This function uses a reentrant model
 13434 ;;
 13435                           
 13436                           	psect	text52
 13437  017AD0                     __ptext52:
 13438                           	opt callstack 0
 13439  017AD0                     ___flsub:
 13440                           	opt callstack 16
 13441                           
 13442                           ;stkvar	_a @ sp[(0)+-8]
 13443                           
 13444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13445                           ;incstack = 0
 13446  017AD0  0EFB               	movlw	-5
 13447  017AD2  7EE3               	btg	plusw1,7,c
 13448                           
 13449                           ;stkvar	_a @ sp[(0)+-8]
 13450  017AD4  0EF8               	movlw	-8
 13451  017AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 13452  017ADC  006F FF8F FFE6     	movff	plusw1,postinc1
 13453  017AE2  006F FF8F FFE6     	movff	plusw1,postinc1
 13454  017AE8  006F FF8F FFE6     	movff	plusw1,postinc1
 13455                           
 13456                           ;stkvar	_b @ sp[(-4)+-4]
 13457  017AEE  0EF8               	movlw	-8
 13458  017AF0  006F FF8F FFE6     	movff	plusw1,postinc1
 13459  017AF6  006F FF8F FFE6     	movff	plusw1,postinc1
 13460  017AFC  006F FF8F FFE6     	movff	plusw1,postinc1
 13461  017B02  006F FF8F FFE6     	movff	plusw1,postinc1
 13462  017B08  ECD6  F092         	call	___fladd	;wreg free
 13463                           
 13464                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13465  017B0C  0EF8               	movlw	248
 13466  017B0E  26E1               	addwf	fsr1l,f,c
 13467  017B10  0EFF               	movlw	255
 13468  017B12  22E2               	addwfc	fsr1h,f,c
 13469  017B14  0012               	return		;funcret
 13470  017B16                     __end_of___flsub:
 13471                           	opt callstack 0
 13472                           
 13473 ;; *************** function ___fladd *****************
 13474 ;; Defined at:
 13475 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;  b               4  [STACK] long 
 13478 ;;  a               4  [STACK] long 
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;  grs             1  [STACK] unsigned char 
 13481 ;;  bexp            1  [STACK] unsigned char 
 13482 ;;  aexp            1  [STACK] unsigned char 
 13483 ;;  signs           1  [STACK] unsigned char 
 13484 ;; Return value:  Size  Location     Type
 13485 ;;                  4  [STACK] unsigned char 
 13486 ;; Registers used:
 13487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13488 ;; Tracked objects:
 13489 ;;		On entry : 0/39
 13490 ;;		On exit  : 0/0
 13491 ;;		Unchanged: 0/0
 13492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13497 ;;Total ram usage:        0 bytes
 13498 ;; Hardware stack levels used:    1
 13499 ;; Hardware stack levels required when called:    6
 13500 ;; This function calls:
 13501 ;;		Nothing
 13502 ;; This function is called by:
 13503 ;;		_lp_filter
 13504 ;;		_efgtoa
 13505 ;;		___flsub
 13506 ;; This function uses a reentrant model
 13507 ;;
 13508                           
 13509                           	psect	text53
 13510  0125AC                     __ptext53:
 13511                           	opt callstack 0
 13512  0125AC                     ___fladd:
 13513                           	opt callstack 0
 13514                           
 13515                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13516  0125AC  52E6               	movf	postinc1,f,c
 13517  0125AE  52E6               	movf	postinc1,f,c
 13518  0125B0  52E6               	movf	postinc1,f,c
 13519  0125B2  52E6               	movf	postinc1,f,c
 13520                           
 13521                           ;stkvar	_b @ sp[(-4)+-4]
 13522                           
 13523                           ;incstack = 0
 13524  0125B4  0EFB               	movlw	251
 13525  0125B6  24E1               	addwf	fsr1l,w,c
 13526  0125B8  6ED9               	movwf	fsr2l,c
 13527  0125BA  0EFF               	movlw	255
 13528  0125BC  20E2               	addwfc	fsr1h,w,c
 13529  0125BE  6EDA               	movwf	fsr2h,c
 13530  0125C0  50DF               	movf	indf2,w,c
 13531  0125C2  6E3D               	movwf	(btemp+11)^0,c
 13532  0125C4  0E80               	movlw	128
 13533  0125C6  163D               	andwf	(btemp+11)^0,f,c
 13534                           
 13535                           ;stkvar	_signs @ sp[(-4)+3]
 13536  0125C8  0EFF               	movlw	-1
 13537  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13538                           
 13539                           ;stkvar	_b @ sp[(-4)+-4]
 13540  0125D0  0EFB               	movlw	251
 13541  0125D2  24E1               	addwf	fsr1l,w,c
 13542  0125D4  6ED9               	movwf	fsr2l,c
 13543  0125D6  0EFF               	movlw	255
 13544  0125D8  20E2               	addwfc	fsr1h,w,c
 13545  0125DA  6EDA               	movwf	fsr2h,c
 13546  0125DC  50DF               	movf	indf2,w,c
 13547  0125DE  6E3D               	movwf	(btemp+11)^0,c
 13548  0125E0  90D8               	bcf	status,0,c
 13549  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 13550  0125E4  6E3C               	movwf	(btemp+10)^0,c
 13551                           
 13552                           ;stkvar	_bexp @ sp[(-4)+1]
 13553  0125E6  0EFD               	movlw	-3
 13554  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13555                           
 13556                           ;stkvar	_b @ sp[(-4)+-4]
 13557  0125EE  0EFA               	movlw	250
 13558  0125F0  24E1               	addwf	fsr1l,w,c
 13559  0125F2  6ED9               	movwf	fsr2l,c
 13560  0125F4  0EFF               	movlw	255
 13561  0125F6  20E2               	addwfc	fsr1h,w,c
 13562  0125F8  6EDA               	movwf	fsr2h,c
 13563  0125FA  AEDF               	btfss	indf2,7,c
 13564  0125FC  D002               	goto	l6125
 13565                           
 13566                           ;stkvar	_bexp @ sp[(-4)+1]
 13567  0125FE  0EFD               	movlw	-3
 13568  012600  80E3               	bsf	plusw1,0,c
 13569  012602                     l6125:
 13570                           
 13571                           ;stkvar	_bexp @ sp[(-4)+1]
 13572  012602  0EFD               	movlw	-3
 13573  012604  50E3               	movf	plusw1,w,c
 13574  012606  B4D8               	btfsc	status,2,c
 13575  012608  D027               	goto	l6135
 13576                           
 13577                           ;stkvar	_bexp @ sp[(-4)+1]
 13578  01260A  0EFD               	movlw	-3
 13579  01260C  28E3               	incf	plusw1,w,c
 13580  01260E  A4D8               	btfss	status,2,c
 13581  012610  D018               	goto	l6131
 13582  012612  0E00               	movlw	0
 13583  012614  6E3A               	movwf	(btemp+8)^0,c
 13584  012616  0E00               	movlw	0
 13585  012618  6E3B               	movwf	(btemp+9)^0,c
 13586  01261A  0E00               	movlw	0
 13587  01261C  6E3C               	movwf	(btemp+10)^0,c
 13588  01261E  0E00               	movlw	0
 13589  012620  6E3D               	movwf	(btemp+11)^0,c
 13590                           
 13591                           ;stkvar	_b @ sp[(-4)+-4]
 13592  012622  0EF8               	movlw	-8
 13593  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13594  01262A  0EF9               	movlw	-7
 13595  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13596  012632  0EFA               	movlw	-6
 13597  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13598  01263A  0EFB               	movlw	-5
 13599  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13600  012642                     l6131:
 13601                           
 13602                           ;stkvar	_b @ sp[(-4)+-4]
 13603  012642  0EFA               	movlw	-6
 13604  012644  8EE3               	bsf	plusw1,7,c
 13605                           
 13606                           ;stkvar	_b @ sp[(-4)+-4]
 13607  012646  0EFB               	movlw	251
 13608  012648  24E1               	addwf	fsr1l,w,c
 13609  01264A  6ED9               	movwf	fsr2l,c
 13610  01264C  0EFF               	movlw	255
 13611  01264E  20E2               	addwfc	fsr1h,w,c
 13612  012650  6EDA               	movwf	fsr2h,c
 13613  012652  0E00               	movlw	0
 13614  012654  6EDF               	movwf	indf2,c
 13615  012656  D018               	goto	l6137
 13616  012658                     l6135:
 13617  012658  0E00               	movlw	0
 13618  01265A  6E3A               	movwf	(btemp+8)^0,c
 13619  01265C  0E00               	movlw	0
 13620  01265E  6E3B               	movwf	(btemp+9)^0,c
 13621  012660  0E00               	movlw	0
 13622  012662  6E3C               	movwf	(btemp+10)^0,c
 13623  012664  0E00               	movlw	0
 13624  012666  6E3D               	movwf	(btemp+11)^0,c
 13625                           
 13626                           ;stkvar	_b @ sp[(-4)+-4]
 13627  012668  0EF8               	movlw	-8
 13628  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13629  012670  0EF9               	movlw	-7
 13630  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13631  012678  0EFA               	movlw	-6
 13632  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13633  012680  0EFB               	movlw	-5
 13634  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13635  012688                     l6137:
 13636                           
 13637                           ;stkvar	_a @ sp[(-4)+-8]
 13638  012688  0EF7               	movlw	247
 13639  01268A  24E1               	addwf	fsr1l,w,c
 13640  01268C  6ED9               	movwf	fsr2l,c
 13641  01268E  0EFF               	movlw	255
 13642  012690  20E2               	addwfc	fsr1h,w,c
 13643  012692  6EDA               	movwf	fsr2h,c
 13644  012694  50DF               	movf	indf2,w,c
 13645  012696  6E3D               	movwf	(btemp+11)^0,c
 13646  012698  0E80               	movlw	128
 13647  01269A  163D               	andwf	(btemp+11)^0,f,c
 13648                           
 13649                           ;stkvar	_aexp @ sp[(-4)+2]
 13650  01269C  0EFE               	movlw	-2
 13651  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13652                           
 13653                           ;stkvar	_signs @ sp[(-4)+3]
 13654                           ;stkvar	_aexp @ sp[(-4)+2]
 13655  0126A4  50E1               	movf	fsr1l,w,c
 13656  0126A6  0FFE               	addlw	-2
 13657  0126A8  6ED9               	movwf	fsr2l,c
 13658  0126AA  50E2               	movf	fsr1h,w,c
 13659  0126AC  6EDA               	movwf	fsr2h,c
 13660  0126AE  0EFF               	movlw	255
 13661  0126B0  22DA               	addwfc	fsr2h,f,c
 13662  0126B2  0EFF               	movlw	-1
 13663  0126B4  50E3               	movf	plusw1,w,c
 13664  0126B6  18DE               	xorwf	postinc2,w,c
 13665  0126B8  B4D8               	btfsc	status,2,c
 13666  0126BA  D002               	goto	l6143
 13667                           
 13668                           ;stkvar	_signs @ sp[(-4)+3]
 13669  0126BC  0EFF               	movlw	-1
 13670  0126BE  8CE3               	bsf	plusw1,6,c
 13671  0126C0                     l6143:
 13672                           
 13673                           ;stkvar	_a @ sp[(-4)+-8]
 13674  0126C0  0EF7               	movlw	247
 13675  0126C2  24E1               	addwf	fsr1l,w,c
 13676  0126C4  6ED9               	movwf	fsr2l,c
 13677  0126C6  0EFF               	movlw	255
 13678  0126C8  20E2               	addwfc	fsr1h,w,c
 13679  0126CA  6EDA               	movwf	fsr2h,c
 13680  0126CC  50DF               	movf	indf2,w,c
 13681  0126CE  6E3D               	movwf	(btemp+11)^0,c
 13682  0126D0  90D8               	bcf	status,0,c
 13683  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 13684  0126D4  6E3C               	movwf	(btemp+10)^0,c
 13685                           
 13686                           ;stkvar	_aexp @ sp[(-4)+2]
 13687  0126D6  0EFE               	movlw	-2
 13688  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13689                           
 13690                           ;stkvar	_a @ sp[(-4)+-8]
 13691  0126DE  0EF6               	movlw	246
 13692  0126E0  24E1               	addwf	fsr1l,w,c
 13693  0126E2  6ED9               	movwf	fsr2l,c
 13694  0126E4  0EFF               	movlw	255
 13695  0126E6  20E2               	addwfc	fsr1h,w,c
 13696  0126E8  6EDA               	movwf	fsr2h,c
 13697  0126EA  AEDF               	btfss	indf2,7,c
 13698  0126EC  D002               	goto	l6149
 13699                           
 13700                           ;stkvar	_aexp @ sp[(-4)+2]
 13701  0126EE  0EFE               	movlw	-2
 13702  0126F0  80E3               	bsf	plusw1,0,c
 13703  0126F2                     l6149:
 13704                           
 13705                           ;stkvar	_aexp @ sp[(-4)+2]
 13706  0126F2  0EFE               	movlw	-2
 13707  0126F4  50E3               	movf	plusw1,w,c
 13708  0126F6  B4D8               	btfsc	status,2,c
 13709  0126F8  D027               	goto	l6159
 13710                           
 13711                           ;stkvar	_aexp @ sp[(-4)+2]
 13712  0126FA  0EFE               	movlw	-2
 13713  0126FC  28E3               	incf	plusw1,w,c
 13714  0126FE  A4D8               	btfss	status,2,c
 13715  012700  D018               	goto	l6155
 13716  012702  0E00               	movlw	0
 13717  012704  6E3A               	movwf	(btemp+8)^0,c
 13718  012706  0E00               	movlw	0
 13719  012708  6E3B               	movwf	(btemp+9)^0,c
 13720  01270A  0E00               	movlw	0
 13721  01270C  6E3C               	movwf	(btemp+10)^0,c
 13722  01270E  0E00               	movlw	0
 13723  012710  6E3D               	movwf	(btemp+11)^0,c
 13724                           
 13725                           ;stkvar	_a @ sp[(-4)+-8]
 13726  012712  0EF4               	movlw	-12
 13727  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13728  01271A  0EF5               	movlw	-11
 13729  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13730  012722  0EF6               	movlw	-10
 13731  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13732  01272A  0EF7               	movlw	-9
 13733  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13734  012732                     l6155:
 13735                           
 13736                           ;stkvar	_a @ sp[(-4)+-8]
 13737  012732  0EF6               	movlw	-10
 13738  012734  8EE3               	bsf	plusw1,7,c
 13739                           
 13740                           ;stkvar	_a @ sp[(-4)+-8]
 13741  012736  0EF7               	movlw	247
 13742  012738  24E1               	addwf	fsr1l,w,c
 13743  01273A  6ED9               	movwf	fsr2l,c
 13744  01273C  0EFF               	movlw	255
 13745  01273E  20E2               	addwfc	fsr1h,w,c
 13746  012740  6EDA               	movwf	fsr2h,c
 13747  012742  0E00               	movlw	0
 13748  012744  6EDF               	movwf	indf2,c
 13749  012746  D018               	goto	l6161
 13750  012748                     l6159:
 13751  012748  0E00               	movlw	0
 13752  01274A  6E3A               	movwf	(btemp+8)^0,c
 13753  01274C  0E00               	movlw	0
 13754  01274E  6E3B               	movwf	(btemp+9)^0,c
 13755  012750  0E00               	movlw	0
 13756  012752  6E3C               	movwf	(btemp+10)^0,c
 13757  012754  0E00               	movlw	0
 13758  012756  6E3D               	movwf	(btemp+11)^0,c
 13759                           
 13760                           ;stkvar	_a @ sp[(-4)+-8]
 13761  012758  0EF4               	movlw	-12
 13762  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13763  012760  0EF5               	movlw	-11
 13764  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13765  012768  0EF6               	movlw	-10
 13766  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13767  012770  0EF7               	movlw	-9
 13768  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13769  012778                     l6161:
 13770                           
 13771                           ;stkvar	_bexp @ sp[(-4)+1]
 13772                           ;stkvar	_aexp @ sp[(-4)+2]
 13773  012778  50E1               	movf	fsr1l,w,c
 13774  01277A  0FFE               	addlw	-2
 13775  01277C  6ED9               	movwf	fsr2l,c
 13776  01277E  50E2               	movf	fsr1h,w,c
 13777  012780  6EDA               	movwf	fsr2h,c
 13778  012782  0EFF               	movlw	255
 13779  012784  22DA               	addwfc	fsr2h,f,c
 13780  012786  0EFD               	movlw	-3
 13781  012788  50E3               	movf	plusw1,w,c
 13782  01278A  5CDE               	subwf	postinc2,w,c
 13783  01278C  B0D8               	btfsc	status,0,c
 13784  01278E  D0A4               	goto	l6197
 13785                           
 13786                           ;stkvar	_signs @ sp[(-4)+3]
 13787  012790  0EFF               	movlw	-1
 13788  012792  ACE3               	btfss	plusw1,6,c
 13789  012794  D002               	goto	l6167
 13790                           
 13791                           ;stkvar	_signs @ sp[(-4)+3]
 13792  012796  0EFF               	movlw	-1
 13793  012798  7EE3               	btg	plusw1,7,c
 13794  01279A                     l6167:
 13795                           
 13796                           ;stkvar	_bexp @ sp[(-4)+1]
 13797                           ;stkvar	_grs @ sp[(-4)+0]
 13798  01279A  0EFD               	movlw	-3
 13799  01279C  006F FF8C  F032    	movff	plusw1,btemp
 13800  0127A2  0EFC               	movlw	-4
 13801  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13802                           
 13803                           ;stkvar	_aexp @ sp[(-4)+2]
 13804                           ;stkvar	_bexp @ sp[(-4)+1]
 13805  0127AA  0EFE               	movlw	-2
 13806  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 13807  0127B2  0EFD               	movlw	-3
 13808  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13809                           
 13810                           ;stkvar	_grs @ sp[(-4)+0]
 13811                           ;stkvar	_aexp @ sp[(-4)+2]
 13812  0127BA  0EFC               	movlw	-4
 13813  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 13814  0127C2  0EFE               	movlw	-2
 13815  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13816                           
 13817                           ;stkvar	_b @ sp[(-4)+-4]
 13818                           ;stkvar	_grs @ sp[(-4)+0]
 13819  0127CA  0EF8               	movlw	-8
 13820  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 13821  0127D2  0EFC               	movlw	-4
 13822  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13823                           
 13824                           ;stkvar	_a @ sp[(-4)+-8]
 13825                           ;stkvar	_b @ sp[(-4)+-4]
 13826  0127DA  0EF4               	movlw	-12
 13827  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 13828  0127E2  0EF8               	movlw	-8
 13829  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13830                           
 13831                           ;stkvar	_grs @ sp[(-4)+0]
 13832                           ;stkvar	_a @ sp[(-4)+-8]
 13833  0127EA  0EFC               	movlw	-4
 13834  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 13835  0127F2  0EF4               	movlw	-12
 13836  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13837                           
 13838                           ;stkvar	_b @ sp[(-4)+-4]
 13839  0127FA  0EF9               	movlw	249
 13840  0127FC  24E1               	addwf	fsr1l,w,c
 13841  0127FE  6ED9               	movwf	fsr2l,c
 13842  012800  0EFF               	movlw	255
 13843  012802  20E2               	addwfc	fsr1h,w,c
 13844  012804  6EDA               	movwf	fsr2h,c
 13845  012806  50DF               	movf	indf2,w,c
 13846  012808  6E3D               	movwf	(btemp+11)^0,c
 13847                           
 13848                           ;stkvar	_grs @ sp[(-4)+0]
 13849  01280A  0EFC               	movlw	-4
 13850  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13851                           
 13852                           ;stkvar	_a @ sp[(-4)+-8]
 13853  012812  0EF5               	movlw	245
 13854  012814  24E1               	addwf	fsr1l,w,c
 13855  012816  6ED9               	movwf	fsr2l,c
 13856  012818  0EFF               	movlw	255
 13857  01281A  20E2               	addwfc	fsr1h,w,c
 13858  01281C  6EDA               	movwf	fsr2h,c
 13859                           
 13860                           ;stkvar	_b @ sp[(-4)+-4]
 13861  01281E  0EF9               	movlw	249
 13862  012820  24E1               	addwf	fsr1l,w,c
 13863  012822  6EE9               	movwf	fsr0l,c
 13864  012824  0EFF               	movlw	255
 13865  012826  20E2               	addwfc	fsr1h,w,c
 13866  012828  6EEA               	movwf	fsr0h,c
 13867  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13868                           
 13869                           ;stkvar	_grs @ sp[(-4)+0]
 13870                           ;stkvar	_a @ sp[(-4)+-8]
 13871  012830  0EF5               	movlw	245
 13872  012832  24E1               	addwf	fsr1l,w,c
 13873  012834  6ED9               	movwf	fsr2l,c
 13874  012836  0EFF               	movlw	255
 13875  012838  20E2               	addwfc	fsr1h,w,c
 13876  01283A  6EDA               	movwf	fsr2h,c
 13877  01283C  0EFC               	movlw	-4
 13878  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13879                           
 13880                           ;stkvar	_b @ sp[(-4)+-4]
 13881  012844  0EFA               	movlw	250
 13882  012846  24E1               	addwf	fsr1l,w,c
 13883  012848  6ED9               	movwf	fsr2l,c
 13884  01284A  0EFF               	movlw	255
 13885  01284C  20E2               	addwfc	fsr1h,w,c
 13886  01284E  6EDA               	movwf	fsr2h,c
 13887  012850  50DF               	movf	indf2,w,c
 13888  012852  6E3D               	movwf	(btemp+11)^0,c
 13889                           
 13890                           ;stkvar	_grs @ sp[(-4)+0]
 13891  012854  0EFC               	movlw	-4
 13892  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13893                           
 13894                           ;stkvar	_a @ sp[(-4)+-8]
 13895  01285C  0EF6               	movlw	246
 13896  01285E  24E1               	addwf	fsr1l,w,c
 13897  012860  6ED9               	movwf	fsr2l,c
 13898  012862  0EFF               	movlw	255
 13899  012864  20E2               	addwfc	fsr1h,w,c
 13900  012866  6EDA               	movwf	fsr2h,c
 13901                           
 13902                           ;stkvar	_b @ sp[(-4)+-4]
 13903  012868  0EFA               	movlw	250
 13904  01286A  24E1               	addwf	fsr1l,w,c
 13905  01286C  6EE9               	movwf	fsr0l,c
 13906  01286E  0EFF               	movlw	255
 13907  012870  20E2               	addwfc	fsr1h,w,c
 13908  012872  6EEA               	movwf	fsr0h,c
 13909  012874  006F FF7F FFEF     	movff	indf2,indf0
 13910                           
 13911                           ;stkvar	_grs @ sp[(-4)+0]
 13912                           ;stkvar	_a @ sp[(-4)+-8]
 13913  01287A  0EF6               	movlw	246
 13914  01287C  24E1               	addwf	fsr1l,w,c
 13915  01287E  6ED9               	movwf	fsr2l,c
 13916  012880  0EFF               	movlw	255
 13917  012882  20E2               	addwfc	fsr1h,w,c
 13918  012884  6EDA               	movwf	fsr2h,c
 13919  012886  0EFC               	movlw	-4
 13920  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13921                           
 13922                           ;stkvar	_b @ sp[(-4)+-4]
 13923  01288E  0EFB               	movlw	251
 13924  012890  24E1               	addwf	fsr1l,w,c
 13925  012892  6ED9               	movwf	fsr2l,c
 13926  012894  0EFF               	movlw	255
 13927  012896  20E2               	addwfc	fsr1h,w,c
 13928  012898  6EDA               	movwf	fsr2h,c
 13929  01289A  50DF               	movf	indf2,w,c
 13930  01289C  6E3D               	movwf	(btemp+11)^0,c
 13931                           
 13932                           ;stkvar	_grs @ sp[(-4)+0]
 13933  01289E  0EFC               	movlw	-4
 13934  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13935                           
 13936                           ;stkvar	_a @ sp[(-4)+-8]
 13937  0128A6  0EF7               	movlw	247
 13938  0128A8  24E1               	addwf	fsr1l,w,c
 13939  0128AA  6ED9               	movwf	fsr2l,c
 13940  0128AC  0EFF               	movlw	255
 13941  0128AE  20E2               	addwfc	fsr1h,w,c
 13942  0128B0  6EDA               	movwf	fsr2h,c
 13943                           
 13944                           ;stkvar	_b @ sp[(-4)+-4]
 13945  0128B2  0EFB               	movlw	251
 13946  0128B4  24E1               	addwf	fsr1l,w,c
 13947  0128B6  6EE9               	movwf	fsr0l,c
 13948  0128B8  0EFF               	movlw	255
 13949  0128BA  20E2               	addwfc	fsr1h,w,c
 13950  0128BC  6EEA               	movwf	fsr0h,c
 13951  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13952                           
 13953                           ;stkvar	_grs @ sp[(-4)+0]
 13954                           ;stkvar	_a @ sp[(-4)+-8]
 13955  0128C4  0EF7               	movlw	247
 13956  0128C6  24E1               	addwf	fsr1l,w,c
 13957  0128C8  6ED9               	movwf	fsr2l,c
 13958  0128CA  0EFF               	movlw	255
 13959  0128CC  20E2               	addwfc	fsr1h,w,c
 13960  0128CE  6EDA               	movwf	fsr2h,c
 13961  0128D0  0EFC               	movlw	-4
 13962  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13963  0128D8                     l6197:
 13964                           
 13965                           ;stkvar	_grs @ sp[(-4)+0]
 13966  0128D8  0EFC               	movlw	-4
 13967  0128DA  6AE3               	clrf	plusw1,c
 13968                           
 13969                           ;stkvar	_aexp @ sp[(-4)+2]
 13970  0128DC  0EFE               	movlw	-2
 13971  0128DE  50E3               	movf	plusw1,w,c
 13972  0128E0  6E3C               	movwf	(btemp+10)^0,c
 13973  0128E2  6A3D               	clrf	(btemp+11)^0,c
 13974                           
 13975                           ;stkvar	_bexp @ sp[(-4)+1]
 13976  0128E4  0EFD               	movlw	-3
 13977  0128E6  50E3               	movf	plusw1,w,c
 13978  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 13979  0128EA  0E00               	movlw	0
 13980  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 13981  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 13982  0128F0  D062               	goto	l6221
 13983  0128F2  503D               	movf	(btemp+11)^0,w,c
 13984  0128F4  E104               	bnz	u4590
 13985  0128F6  0E1A               	movlw	26
 13986  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 13987  0128FA  A0D8               	btfss	status,0,c
 13988  0128FC  D05C               	goto	l6221
 13989  0128FE                     u4590:
 13990                           
 13991                           ;stkvar	_b @ sp[(-4)+-4]
 13992  0128FE  0EF8               	movlw	-8
 13993  012900  50E3               	movf	plusw1,w,c
 13994  012902  E10A               	bnz	u4601
 13995  012904  0EF9               	movlw	-7
 13996  012906  50E3               	movf	plusw1,w,c
 13997  012908  E107               	bnz	u4601
 13998  01290A  0EFA               	movlw	-6
 13999  01290C  50E3               	movf	plusw1,w,c
 14000  01290E  E104               	bnz	u4601
 14001  012910  0EFB               	movlw	-5
 14002  012912  50E3               	movf	plusw1,w,c
 14003  012914  B4D8               	btfsc	status,2,c
 14004  012916  D003               	goto	u4600
 14005  012918                     u4601:
 14006  012918  6A3D               	clrf	(btemp+11)^0,c
 14007  01291A  2A3D               	incf	(btemp+11)^0,f,c
 14008  01291C  D001               	goto	u4618
 14009  01291E                     u4600:
 14010  01291E  6A3D               	clrf	(btemp+11)^0,c
 14011  012920                     u4618:
 14012                           
 14013                           ;stkvar	_grs @ sp[(-4)+0]
 14014  012920  0EFC               	movlw	-4
 14015  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14016                           
 14017                           ;stkvar	_b @ sp[(-4)+-4]
 14018  012928  0EF8               	movlw	-8
 14019  01292A  6AE3               	clrf	plusw1,c
 14020  01292C  0EF9               	movlw	-7
 14021  01292E  6AE3               	clrf	plusw1,c
 14022  012930  0EFA               	movlw	-6
 14023  012932  6AE3               	clrf	plusw1,c
 14024  012934  0EFB               	movlw	-5
 14025  012936  6AE3               	clrf	plusw1,c
 14026                           
 14027                           ;stkvar	_aexp @ sp[(-4)+2]
 14028                           ;stkvar	_bexp @ sp[(-4)+1]
 14029  012938  0EFE               	movlw	-2
 14030  01293A  006F FF8C  F032    	movff	plusw1,btemp
 14031  012940  0EFD               	movlw	-3
 14032  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 14033  012948  D042               	goto	u4650
 14034  01294A                     l6207:
 14035                           
 14036                           ;stkvar	_grs @ sp[(-4)+0]
 14037  01294A  0EFC               	movlw	-4
 14038  01294C  A0E3               	btfss	plusw1,0,c
 14039  01294E  D00D               	goto	l6211
 14040                           
 14041                           ;stkvar	_grs @ sp[(-4)+0]
 14042  012950  0EFC               	movlw	-4
 14043  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 14044  012958  90D8               	bcf	status,0,c
 14045  01295A  323D               	rrcf	(btemp+11)^0,f,c
 14046  01295C  0E01               	movlw	1
 14047  01295E  123D               	iorwf	(btemp+11)^0,f,c
 14048                           
 14049                           ;stkvar	_grs @ sp[(-4)+0]
 14050  012960  0EFC               	movlw	-4
 14051  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14052  012968  D009               	goto	l6213
 14053  01296A                     l6211:
 14054                           
 14055                           ;stkvar	_grs @ sp[(-4)+0]
 14056  01296A  50E1               	movf	fsr1l,w,c
 14057  01296C  0FFC               	addlw	-4
 14058  01296E  6ED9               	movwf	fsr2l,c
 14059  012970  50E2               	movf	fsr1h,w,c
 14060  012972  6EDA               	movwf	fsr2h,c
 14061  012974  0EFF               	movlw	255
 14062  012976  22DA               	addwfc	fsr2h,f,c
 14063  012978  90D8               	bcf	status,0,c
 14064  01297A  32DF               	rrcf	indf2,f,c
 14065  01297C                     l6213:
 14066                           
 14067                           ;stkvar	_b @ sp[(-4)+-4]
 14068  01297C  0EF8               	movlw	-8
 14069  01297E  A0E3               	btfss	plusw1,0,c
 14070  012980  D002               	goto	l6217
 14071                           
 14072                           ;stkvar	_grs @ sp[(-4)+0]
 14073  012982  0EFC               	movlw	-4
 14074  012984  8EE3               	bsf	plusw1,7,c
 14075  012986                     l6217:
 14076  012986  0E01               	movlw	1
 14077  012988  6E3D               	movwf	(btemp+11)^0,c
 14078                           
 14079                           ;stkvar	_b @ sp[(-4)+-4]
 14080  01298A  50E1               	movf	fsr1l,w,c
 14081  01298C  0FF8               	addlw	-8
 14082  01298E  6ED9               	movwf	fsr2l,c
 14083  012990  50E2               	movf	fsr1h,w,c
 14084  012992  6EDA               	movwf	fsr2h,c
 14085  012994  0EFF               	movlw	255
 14086  012996  22DA               	addwfc	fsr2h,f,c
 14087  012998  283D               	incf	(btemp+11)^0,w,c
 14088  01299A  52DE               	movf	postinc2,f,c
 14089  01299C  D008               	goto	u4640
 14090  01299E                     u4645:
 14091  01299E  52DE               	movf	postinc2,f,c
 14092  0129A0  90D8               	bcf	status,0,c
 14093  0129A2  BEDC               	btfsc	preinc2,7,c
 14094  0129A4  80D8               	bsf	status,0,c
 14095  0129A6  32DD               	rrcf	postdec2,f,c
 14096  0129A8  32DD               	rrcf	postdec2,f,c
 14097  0129AA  32DD               	rrcf	postdec2,f,c
 14098  0129AC  32DE               	rrcf	postinc2,f,c
 14099  0129AE                     u4640:
 14100  0129AE  2EE8               	decfsz	wreg,f,c
 14101  0129B0  D7F6               	goto	u4645
 14102                           
 14103                           ;stkvar	_bexp @ sp[(-4)+1]
 14104  0129B2  0EFD               	movlw	-3
 14105  0129B4  2AE3               	incf	plusw1,f,c
 14106  0129B6                     l6221:
 14107                           
 14108                           ;stkvar	_aexp @ sp[(-4)+2]
 14109                           ;stkvar	_bexp @ sp[(-4)+1]
 14110  0129B6  50E1               	movf	fsr1l,w,c
 14111  0129B8  0FFD               	addlw	-3
 14112  0129BA  6ED9               	movwf	fsr2l,c
 14113  0129BC  50E2               	movf	fsr1h,w,c
 14114  0129BE  6EDA               	movwf	fsr2h,c
 14115  0129C0  0EFF               	movlw	255
 14116  0129C2  22DA               	addwfc	fsr2h,f,c
 14117  0129C4  0EFE               	movlw	-2
 14118  0129C6  50E3               	movf	plusw1,w,c
 14119  0129C8  5CDE               	subwf	postinc2,w,c
 14120  0129CA  A0D8               	btfss	status,0,c
 14121  0129CC  D7BE               	goto	l6207
 14122  0129CE                     u4650:
 14123                           
 14124                           ;stkvar	_signs @ sp[(-4)+3]
 14125  0129CE  0EFF               	movlw	-1
 14126  0129D0  BCE3               	btfsc	plusw1,6,c
 14127  0129D2  D066               	goto	l6249
 14128                           
 14129                           ;stkvar	_bexp @ sp[(-4)+1]
 14130  0129D4  0EFD               	movlw	-3
 14131  0129D6  50E3               	movf	plusw1,w,c
 14132  0129D8  B4D8               	btfsc	status,2,c
 14133  0129DA  D0F2               	goto	u4750
 14134                           
 14135                           ;stkvar	_a @ sp[(-4)+-8]
 14136                           ;stkvar	_b @ sp[(-4)+-4]
 14137  0129DC  0EF8               	movlw	-8
 14138  0129DE  50E3               	movf	plusw1,w,c
 14139  0129E0  6E32               	movwf	btemp^0,c
 14140  0129E2  0EF4               	movlw	-12
 14141  0129E4  50E3               	movf	plusw1,w,c
 14142  0129E6  2632               	addwf	btemp^0,f,c
 14143  0129E8  0EF8               	movlw	-8
 14144  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 14145  0129F0  0EF9               	movlw	-7
 14146  0129F2  50E3               	movf	plusw1,w,c
 14147  0129F4  6E32               	movwf	btemp^0,c
 14148  0129F6  0EF5               	movlw	-11
 14149  0129F8  50E3               	movf	plusw1,w,c
 14150  0129FA  2232               	addwfc	btemp^0,f,c
 14151  0129FC  0EF9               	movlw	-7
 14152  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 14153  012A04  0EFA               	movlw	-6
 14154  012A06  50E3               	movf	plusw1,w,c
 14155  012A08  6E32               	movwf	btemp^0,c
 14156  012A0A  0EF6               	movlw	-10
 14157  012A0C  50E3               	movf	plusw1,w,c
 14158  012A0E  2232               	addwfc	btemp^0,f,c
 14159  012A10  0EFA               	movlw	-6
 14160  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 14161  012A18  0EFB               	movlw	-5
 14162  012A1A  50E3               	movf	plusw1,w,c
 14163  012A1C  6E32               	movwf	btemp^0,c
 14164  012A1E  0EF7               	movlw	-9
 14165  012A20  50E3               	movf	plusw1,w,c
 14166  012A22  2232               	addwfc	btemp^0,f,c
 14167  012A24  0EFB               	movlw	-5
 14168  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 14169                           
 14170                           ;stkvar	_b @ sp[(-4)+-4]
 14171  012A2C  0EFB               	movlw	-5
 14172  012A2E  A0E3               	btfss	plusw1,0,c
 14173  012A30  D101               	goto	u4790
 14174                           
 14175                           ;stkvar	_grs @ sp[(-4)+0]
 14176  012A32  0EFC               	movlw	-4
 14177  012A34  A0E3               	btfss	plusw1,0,c
 14178  012A36  D00D               	goto	l6239
 14179                           
 14180                           ;stkvar	_grs @ sp[(-4)+0]
 14181  012A38  0EFC               	movlw	-4
 14182  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 14183  012A40  90D8               	bcf	status,0,c
 14184  012A42  323D               	rrcf	(btemp+11)^0,f,c
 14185  012A44  0E01               	movlw	1
 14186  012A46  123D               	iorwf	(btemp+11)^0,f,c
 14187                           
 14188                           ;stkvar	_grs @ sp[(-4)+0]
 14189  012A48  0EFC               	movlw	-4
 14190  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14191  012A50  D009               	goto	l6241
 14192  012A52                     l6239:
 14193                           
 14194                           ;stkvar	_grs @ sp[(-4)+0]
 14195  012A52  50E1               	movf	fsr1l,w,c
 14196  012A54  0FFC               	addlw	-4
 14197  012A56  6ED9               	movwf	fsr2l,c
 14198  012A58  50E2               	movf	fsr1h,w,c
 14199  012A5A  6EDA               	movwf	fsr2h,c
 14200  012A5C  0EFF               	movlw	255
 14201  012A5E  22DA               	addwfc	fsr2h,f,c
 14202  012A60  90D8               	bcf	status,0,c
 14203  012A62  32DF               	rrcf	indf2,f,c
 14204  012A64                     l6241:
 14205                           
 14206                           ;stkvar	_b @ sp[(-4)+-4]
 14207  012A64  0EF8               	movlw	-8
 14208  012A66  A0E3               	btfss	plusw1,0,c
 14209  012A68  D002               	goto	l6245
 14210                           
 14211                           ;stkvar	_grs @ sp[(-4)+0]
 14212  012A6A  0EFC               	movlw	-4
 14213  012A6C  8EE3               	bsf	plusw1,7,c
 14214  012A6E                     l6245:
 14215  012A6E  0E01               	movlw	1
 14216  012A70  6E3D               	movwf	(btemp+11)^0,c
 14217                           
 14218                           ;stkvar	_b @ sp[(-4)+-4]
 14219  012A72  50E1               	movf	fsr1l,w,c
 14220  012A74  0FF8               	addlw	-8
 14221  012A76  6ED9               	movwf	fsr2l,c
 14222  012A78  50E2               	movf	fsr1h,w,c
 14223  012A7A  6EDA               	movwf	fsr2h,c
 14224  012A7C  0EFF               	movlw	255
 14225  012A7E  22DA               	addwfc	fsr2h,f,c
 14226  012A80  283D               	incf	(btemp+11)^0,w,c
 14227  012A82  52DE               	movf	postinc2,f,c
 14228  012A84  D008               	goto	u4710
 14229  012A86                     u4715:
 14230  012A86  52DE               	movf	postinc2,f,c
 14231  012A88  90D8               	bcf	status,0,c
 14232  012A8A  BEDC               	btfsc	preinc2,7,c
 14233  012A8C  80D8               	bsf	status,0,c
 14234  012A8E  32DD               	rrcf	postdec2,f,c
 14235  012A90  32DD               	rrcf	postdec2,f,c
 14236  012A92  32DD               	rrcf	postdec2,f,c
 14237  012A94  32DE               	rrcf	postinc2,f,c
 14238  012A96                     u4710:
 14239  012A96  2EE8               	decfsz	wreg,f,c
 14240  012A98  D7F6               	goto	u4715
 14241                           
 14242                           ;stkvar	_bexp @ sp[(-4)+1]
 14243  012A9A  0EFD               	movlw	-3
 14244  012A9C  2AE3               	incf	plusw1,f,c
 14245  012A9E  D0CA               	goto	u4790
 14246  012AA0                     l6249:
 14247                           
 14248                           ;stkvar	_a @ sp[(-4)+-8]
 14249                           ;stkvar	_b @ sp[(-4)+-4]
 14250  012AA0  50E1               	movf	fsr1l,w,c
 14251  012AA2  0FF8               	addlw	-8
 14252  012AA4  6ED9               	movwf	fsr2l,c
 14253  012AA6  50E2               	movf	fsr1h,w,c
 14254  012AA8  6EDA               	movwf	fsr2h,c
 14255  012AAA  0EFF               	movlw	255
 14256  012AAC  22DA               	addwfc	fsr2h,f,c
 14257  012AAE  0EF4               	movlw	-12
 14258  012AB0  50E3               	movf	plusw1,w,c
 14259  012AB2  5CDE               	subwf	postinc2,w,c
 14260  012AB4  0EF5               	movlw	-11
 14261  012AB6  50E3               	movf	plusw1,w,c
 14262  012AB8  58DE               	subwfb	postinc2,w,c
 14263  012ABA  0EF6               	movlw	-10
 14264  012ABC  50E3               	movf	plusw1,w,c
 14265  012ABE  58DE               	subwfb	postinc2,w,c
 14266  012AC0  50DE               	movf	postinc2,w,c
 14267  012AC2  0A80               	xorlw	128
 14268  012AC4  6E32               	movwf	btemp^0,c
 14269  012AC6  0EF7               	movlw	-9
 14270  012AC8  50E3               	movf	plusw1,w,c
 14271  012ACA  0A80               	xorlw	128
 14272  012ACC  5832               	subwfb	btemp^0,w,c
 14273  012ACE  B0D8               	btfsc	status,0,c
 14274  012AD0  D053               	goto	l6261
 14275                           
 14276                           ;stkvar	_b @ sp[(-4)+-4]
 14277                           ;stkvar	_a @ sp[(-4)+-8]
 14278  012AD2  0EF4               	movlw	-12
 14279  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 14280  012ADA  0EF5               	movlw	-11
 14281  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 14282  012AE2  0EF6               	movlw	-10
 14283  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 14284  012AEA  0EF7               	movlw	-9
 14285  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 14286  012AF2  0EF8               	movlw	-8
 14287  012AF4  50E3               	movf	plusw1,w,c
 14288  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 14289  012AF8  0EF9               	movlw	-7
 14290  012AFA  50E3               	movf	plusw1,w,c
 14291  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 14292  012AFE  0EFA               	movlw	-6
 14293  012B00  50E3               	movf	plusw1,w,c
 14294  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 14295  012B04  0EFB               	movlw	-5
 14296  012B06  50E3               	movf	plusw1,w,c
 14297  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 14298  012B0A  0EFF               	movlw	255
 14299  012B0C  243A               	addwf	(btemp+8)^0,w,c
 14300  012B0E  6E36               	movwf	(btemp+4)^0,c
 14301  012B10  0EFF               	movlw	255
 14302  012B12  203B               	addwfc	(btemp+9)^0,w,c
 14303  012B14  6E37               	movwf	(btemp+5)^0,c
 14304  012B16  0EFF               	movlw	255
 14305  012B18  203C               	addwfc	(btemp+10)^0,w,c
 14306  012B1A  6E38               	movwf	(btemp+6)^0,c
 14307  012B1C  0EFF               	movlw	255
 14308  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 14309  012B20  6E39               	movwf	(btemp+7)^0,c
 14310                           
 14311                           ;stkvar	_b @ sp[(-4)+-4]
 14312  012B22  0EF8               	movlw	-8
 14313  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14314  012B2A  0EF9               	movlw	-7
 14315  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14316  012B32  0EFA               	movlw	-6
 14317  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14318  012B3A  0EFB               	movlw	-5
 14319  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14320                           
 14321                           ;stkvar	_signs @ sp[(-4)+3]
 14322  012B42  0EFF               	movlw	-1
 14323  012B44  7EE3               	btg	plusw1,7,c
 14324                           
 14325                           ;stkvar	_grs @ sp[(-4)+0]
 14326  012B46  0EFC               	movlw	-4
 14327  012B48  50E3               	movf	plusw1,w,c
 14328  012B4A  0800               	sublw	0
 14329  012B4C  6E3D               	movwf	(btemp+11)^0,c
 14330                           
 14331                           ;stkvar	_grs @ sp[(-4)+0]
 14332  012B4E  0EFC               	movlw	-4
 14333  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14334                           
 14335                           ;stkvar	_grs @ sp[(-4)+0]
 14336  012B56  0EFC               	movlw	-4
 14337  012B58  50E3               	movf	plusw1,w,c
 14338  012B5A  A4D8               	btfss	status,2,c
 14339  012B5C  D020               	goto	l6263
 14340                           
 14341                           ;stkvar	_b @ sp[(-4)+-4]
 14342  012B5E  50E1               	movf	fsr1l,w,c
 14343  012B60  0FF8               	addlw	-8
 14344  012B62  6ED9               	movwf	fsr2l,c
 14345  012B64  50E2               	movf	fsr1h,w,c
 14346  012B66  6EDA               	movwf	fsr2h,c
 14347  012B68  0EFF               	movlw	255
 14348  012B6A  22DA               	addwfc	fsr2h,f,c
 14349  012B6C  2ADE               	incf	postinc2,f,c
 14350  012B6E  0E00               	movlw	0
 14351  012B70  22DE               	addwfc	postinc2,f,c
 14352  012B72  22DE               	addwfc	postinc2,f,c
 14353  012B74  22DE               	addwfc	postinc2,f,c
 14354  012B76  D013               	goto	l6263
 14355  012B78                     l6261:
 14356                           
 14357                           ;stkvar	_a @ sp[(-4)+-8]
 14358                           ;stkvar	_b @ sp[(-4)+-4]
 14359  012B78  50E1               	movf	fsr1l,w,c
 14360  012B7A  0FF8               	addlw	-8
 14361  012B7C  6ED9               	movwf	fsr2l,c
 14362  012B7E  50E2               	movf	fsr1h,w,c
 14363  012B80  6EDA               	movwf	fsr2h,c
 14364  012B82  0EFF               	movlw	255
 14365  012B84  22DA               	addwfc	fsr2h,f,c
 14366  012B86  0EF4               	movlw	-12
 14367  012B88  50E3               	movf	plusw1,w,c
 14368  012B8A  5EDE               	subwf	postinc2,f,c
 14369  012B8C  0EF5               	movlw	-11
 14370  012B8E  50E3               	movf	plusw1,w,c
 14371  012B90  5ADE               	subwfb	postinc2,f,c
 14372  012B92  0EF6               	movlw	-10
 14373  012B94  50E3               	movf	plusw1,w,c
 14374  012B96  5ADE               	subwfb	postinc2,f,c
 14375  012B98  0EF7               	movlw	-9
 14376  012B9A  50E3               	movf	plusw1,w,c
 14377  012B9C  5ADE               	subwfb	postinc2,f,c
 14378  012B9E                     l6263:
 14379                           
 14380                           ;stkvar	_b @ sp[(-4)+-4]
 14381  012B9E  0EF8               	movlw	-8
 14382  012BA0  50E3               	movf	plusw1,w,c
 14383  012BA2  E145               	bnz	l6285
 14384  012BA4  0EF9               	movlw	-7
 14385  012BA6  50E3               	movf	plusw1,w,c
 14386  012BA8  E142               	bnz	l6285
 14387  012BAA  0EFA               	movlw	-6
 14388  012BAC  50E3               	movf	plusw1,w,c
 14389  012BAE  E13F               	bnz	l6285
 14390  012BB0  0EFB               	movlw	-5
 14391  012BB2  50E3               	movf	plusw1,w,c
 14392  012BB4  A4D8               	btfss	status,2,c
 14393  012BB6  D03B               	goto	l6285
 14394                           
 14395                           ;stkvar	_grs @ sp[(-4)+0]
 14396  012BB8  0EFC               	movlw	-4
 14397  012BBA  50E3               	movf	plusw1,w,c
 14398  012BBC  A4D8               	btfss	status,2,c
 14399  012BBE  D037               	goto	l6285
 14400  012BC0                     u4750:
 14401  012BC0  0E00               	movlw	0
 14402  012BC2  6E32               	movwf	btemp^0,c
 14403  012BC4  0E00               	movlw	0
 14404  012BC6  6E33               	movwf	(btemp+1)^0,c
 14405  012BC8  0E00               	movlw	0
 14406  012BCA  6E34               	movwf	(btemp+2)^0,c
 14407  012BCC  0E00               	movlw	0
 14408  012BCE  6E35               	movwf	(btemp+3)^0,c
 14409  012BD0  D0C6               	goto	l2577
 14410  012BD2                     l6271:
 14411                           
 14412                           ;stkvar	_b @ sp[(-4)+-4]
 14413  012BD2  90D8               	bcf	status,0,c
 14414  012BD4  0EF8               	movlw	-8
 14415  012BD6  36E3               	rlcf	plusw1,f,c
 14416  012BD8  0EF9               	movlw	-7
 14417  012BDA  36E3               	rlcf	plusw1,f,c
 14418  012BDC  0EFA               	movlw	-6
 14419  012BDE  36E3               	rlcf	plusw1,f,c
 14420  012BE0  0EFB               	movlw	-5
 14421  012BE2  36E3               	rlcf	plusw1,f,c
 14422                           
 14423                           ;stkvar	_grs @ sp[(-4)+0]
 14424  012BE4  0EFC               	movlw	-4
 14425  012BE6  AEE3               	btfss	plusw1,7,c
 14426  012BE8  D002               	goto	l2589
 14427                           
 14428                           ;stkvar	_b @ sp[(-4)+-4]
 14429  012BEA  0EF8               	movlw	-8
 14430  012BEC  80E3               	bsf	plusw1,0,c
 14431  012BEE                     l2589:
 14432                           
 14433                           ;stkvar	_grs @ sp[(-4)+0]
 14434  012BEE  0EFC               	movlw	-4
 14435  012BF0  A0E3               	btfss	plusw1,0,c
 14436  012BF2  D00E               	goto	l6279
 14437                           
 14438                           ;stkvar	_grs @ sp[(-4)+0]
 14439  012BF4  0EFC               	movlw	-4
 14440  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 14441  012BFC  90D8               	bcf	status,0,c
 14442  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 14443  012C00  6E3C               	movwf	(btemp+10)^0,c
 14444  012C02  0E01               	movlw	1
 14445  012C04  123C               	iorwf	(btemp+10)^0,f,c
 14446                           
 14447                           ;stkvar	_grs @ sp[(-4)+0]
 14448  012C06  0EFC               	movlw	-4
 14449  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14450  012C0E  D009               	goto	l6281
 14451  012C10                     l6279:
 14452                           
 14453                           ;stkvar	_grs @ sp[(-4)+0]
 14454  012C10  50E1               	movf	fsr1l,w,c
 14455  012C12  0FFC               	addlw	-4
 14456  012C14  6ED9               	movwf	fsr2l,c
 14457  012C16  50E2               	movf	fsr1h,w,c
 14458  012C18  6EDA               	movwf	fsr2h,c
 14459  012C1A  0EFF               	movlw	255
 14460  012C1C  22DA               	addwfc	fsr2h,f,c
 14461  012C1E  90D8               	bcf	status,0,c
 14462  012C20  36DF               	rlcf	indf2,f,c
 14463  012C22                     l6281:
 14464                           
 14465                           ;stkvar	_bexp @ sp[(-4)+1]
 14466  012C22  0EFD               	movlw	-3
 14467  012C24  50E3               	movf	plusw1,w,c
 14468  012C26  B4D8               	btfsc	status,2,c
 14469  012C28  D002               	goto	l6285
 14470                           
 14471                           ;stkvar	_bexp @ sp[(-4)+1]
 14472  012C2A  0EFD               	movlw	-3
 14473  012C2C  06E3               	decf	plusw1,f,c
 14474  012C2E                     l6285:
 14475                           
 14476                           ;stkvar	_b @ sp[(-4)+-4]
 14477  012C2E  0EFA               	movlw	-6
 14478  012C30  AEE3               	btfss	plusw1,7,c
 14479  012C32  D7CF               	goto	l6271
 14480  012C34                     u4790:
 14481                           
 14482                           ;stkvar	_aexp @ sp[(-4)+2]
 14483  012C34  0EFE               	movlw	-2
 14484  012C36  6AE3               	clrf	plusw1,c
 14485                           
 14486                           ;stkvar	_grs @ sp[(-4)+0]
 14487  012C38  0EFC               	movlw	-4
 14488  012C3A  AEE3               	btfss	plusw1,7,c
 14489  012C3C  D00F               	goto	l6299
 14490                           
 14491                           ;stkvar	_grs @ sp[(-4)+0]
 14492  012C3E  0EFC               	movlw	-4
 14493  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14494  012C46  0E7F               	movlw	127
 14495  012C48  163D               	andwf	(btemp+11)^0,f,c
 14496  012C4A  B4D8               	btfsc	status,2,c
 14497  012C4C  D004               	goto	l6295
 14498  012C4E                     u4810:
 14499                           
 14500                           ;stkvar	_aexp @ sp[(-4)+2]
 14501  012C4E  0EFE               	movlw	-2
 14502  012C50  6AE3               	clrf	plusw1,c
 14503  012C52  2AE3               	incf	plusw1,f,c
 14504  012C54  D003               	goto	l6299
 14505  012C56                     l6295:
 14506                           
 14507                           ;stkvar	_b @ sp[(-4)+-4]
 14508  012C56  0EF8               	movlw	-8
 14509  012C58  B0E3               	btfsc	plusw1,0,c
 14510  012C5A  D7F9               	goto	u4810
 14511  012C5C                     l6299:
 14512                           
 14513                           ;stkvar	_aexp @ sp[(-4)+2]
 14514  012C5C  0EFE               	movlw	-2
 14515  012C5E  50E3               	movf	plusw1,w,c
 14516  012C60  B4D8               	btfsc	status,2,c
 14517  012C62  D02B               	goto	l6311
 14518                           
 14519                           ;stkvar	_b @ sp[(-4)+-4]
 14520  012C64  50E1               	movf	fsr1l,w,c
 14521  012C66  0FF8               	addlw	-8
 14522  012C68  6ED9               	movwf	fsr2l,c
 14523  012C6A  50E2               	movf	fsr1h,w,c
 14524  012C6C  6EDA               	movwf	fsr2h,c
 14525  012C6E  0EFF               	movlw	255
 14526  012C70  22DA               	addwfc	fsr2h,f,c
 14527  012C72  2ADE               	incf	postinc2,f,c
 14528  012C74  0E00               	movlw	0
 14529  012C76  22DE               	addwfc	postinc2,f,c
 14530  012C78  22DE               	addwfc	postinc2,f,c
 14531  012C7A  22DE               	addwfc	postinc2,f,c
 14532                           
 14533                           ;stkvar	_b @ sp[(-4)+-4]
 14534  012C7C  0EFB               	movlw	-5
 14535  012C7E  A0E3               	btfss	plusw1,0,c
 14536  012C80  D01C               	goto	l6311
 14537  012C82  0E01               	movlw	1
 14538  012C84  6E3D               	movwf	(btemp+11)^0,c
 14539                           
 14540                           ;stkvar	_b @ sp[(-4)+-4]
 14541  012C86  50E1               	movf	fsr1l,w,c
 14542  012C88  0FF8               	addlw	-8
 14543  012C8A  6ED9               	movwf	fsr2l,c
 14544  012C8C  50E2               	movf	fsr1h,w,c
 14545  012C8E  6EDA               	movwf	fsr2h,c
 14546  012C90  0EFF               	movlw	255
 14547  012C92  22DA               	addwfc	fsr2h,f,c
 14548  012C94  283D               	incf	(btemp+11)^0,w,c
 14549  012C96  52DE               	movf	postinc2,f,c
 14550  012C98  D008               	goto	u4850
 14551  012C9A                     u4855:
 14552  012C9A  52DE               	movf	postinc2,f,c
 14553  012C9C  90D8               	bcf	status,0,c
 14554  012C9E  BEDC               	btfsc	preinc2,7,c
 14555  012CA0  80D8               	bsf	status,0,c
 14556  012CA2  32DD               	rrcf	postdec2,f,c
 14557  012CA4  32DD               	rrcf	postdec2,f,c
 14558  012CA6  32DD               	rrcf	postdec2,f,c
 14559  012CA8  32DE               	rrcf	postinc2,f,c
 14560  012CAA                     u4850:
 14561  012CAA  2EE8               	decfsz	wreg,f,c
 14562  012CAC  D7F6               	goto	u4855
 14563                           
 14564                           ;stkvar	_bexp @ sp[(-4)+1]
 14565  012CAE  0EFD               	movlw	-3
 14566  012CB0  28E3               	incf	plusw1,w,c
 14567  012CB2  B4D8               	btfsc	status,2,c
 14568  012CB4  D002               	goto	l6311
 14569                           
 14570                           ;stkvar	_bexp @ sp[(-4)+1]
 14571  012CB6  0EFD               	movlw	-3
 14572  012CB8  2AE3               	incf	plusw1,f,c
 14573  012CBA                     l6311:
 14574                           
 14575                           ;stkvar	_bexp @ sp[(-4)+1]
 14576  012CBA  0EFD               	movlw	-3
 14577  012CBC  28E3               	incf	plusw1,w,c
 14578  012CBE  B4D8               	btfsc	status,2,c
 14579  012CC0  D004               	goto	u4880
 14580                           
 14581                           ;stkvar	_bexp @ sp[(-4)+1]
 14582  012CC2  0EFD               	movlw	-3
 14583  012CC4  50E3               	movf	plusw1,w,c
 14584  012CC6  A4D8               	btfss	status,2,c
 14585  012CC8  D00E               	goto	l6321
 14586  012CCA                     u4880:
 14587                           
 14588                           ;stkvar	_b @ sp[(-4)+-4]
 14589  012CCA  0EF8               	movlw	-8
 14590  012CCC  6AE3               	clrf	plusw1,c
 14591  012CCE  0EF9               	movlw	-7
 14592  012CD0  6AE3               	clrf	plusw1,c
 14593  012CD2  0EFA               	movlw	-6
 14594  012CD4  6AE3               	clrf	plusw1,c
 14595  012CD6  0EFB               	movlw	-5
 14596  012CD8  6AE3               	clrf	plusw1,c
 14597                           
 14598                           ;stkvar	_bexp @ sp[(-4)+1]
 14599  012CDA  0EFD               	movlw	-3
 14600  012CDC  50E3               	movf	plusw1,w,c
 14601  012CDE  A4D8               	btfss	status,2,c
 14602  012CE0  D002               	goto	l6321
 14603                           
 14604                           ;stkvar	_signs @ sp[(-4)+3]
 14605  012CE2  0EFF               	movlw	-1
 14606  012CE4  6AE3               	clrf	plusw1,c
 14607  012CE6                     l6321:
 14608                           
 14609                           ;stkvar	_bexp @ sp[(-4)+1]
 14610  012CE6  0EFD               	movlw	-3
 14611  012CE8  A0E3               	btfss	plusw1,0,c
 14612  012CEA  D009               	goto	l6325
 14613                           
 14614                           ;stkvar	_b @ sp[(-4)+-4]
 14615  012CEC  0EFA               	movlw	250
 14616  012CEE  24E1               	addwf	fsr1l,w,c
 14617  012CF0  6ED9               	movwf	fsr2l,c
 14618  012CF2  0EFF               	movlw	255
 14619  012CF4  20E2               	addwfc	fsr1h,w,c
 14620  012CF6  6EDA               	movwf	fsr2h,c
 14621  012CF8  0E00               	movlw	0
 14622  012CFA  8EDB               	bsf	plusw2,7,c
 14623  012CFC  D008               	goto	l6327
 14624  012CFE                     l6325:
 14625                           
 14626                           ;stkvar	_b @ sp[(-4)+-4]
 14627  012CFE  0EFA               	movlw	250
 14628  012D00  24E1               	addwf	fsr1l,w,c
 14629  012D02  6ED9               	movwf	fsr2l,c
 14630  012D04  0EFF               	movlw	255
 14631  012D06  20E2               	addwfc	fsr1h,w,c
 14632  012D08  6EDA               	movwf	fsr2h,c
 14633  012D0A  0E7F               	movlw	127
 14634  012D0C  16DF               	andwf	indf2,f,c
 14635  012D0E                     l6327:
 14636                           
 14637                           ;stkvar	_b @ sp[(-4)+-4]
 14638  012D0E  0EFB               	movlw	251
 14639  012D10  24E1               	addwf	fsr1l,w,c
 14640  012D12  6ED9               	movwf	fsr2l,c
 14641  012D14  0EFF               	movlw	255
 14642  012D16  20E2               	addwfc	fsr1h,w,c
 14643  012D18  6EDA               	movwf	fsr2h,c
 14644                           
 14645                           ;stkvar	_bexp @ sp[(-4)+1]
 14646  012D1A  0EFD               	movlw	-3
 14647  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14648  012D22  90D8               	bcf	status,0,c
 14649  012D24  303D               	rrcf	(btemp+11)^0,w,c
 14650  012D26  6EDF               	movwf	indf2,c
 14651                           
 14652                           ;stkvar	_signs @ sp[(-4)+3]
 14653  012D28  0EFF               	movlw	-1
 14654  012D2A  AEE3               	btfss	plusw1,7,c
 14655  012D2C  D008               	goto	l6333
 14656                           
 14657                           ;stkvar	_b @ sp[(-4)+-4]
 14658  012D2E  0EFB               	movlw	251
 14659  012D30  24E1               	addwf	fsr1l,w,c
 14660  012D32  6ED9               	movwf	fsr2l,c
 14661  012D34  0EFF               	movlw	255
 14662  012D36  20E2               	addwfc	fsr1h,w,c
 14663  012D38  6EDA               	movwf	fsr2h,c
 14664  012D3A  0E00               	movlw	0
 14665  012D3C  8EDB               	bsf	plusw2,7,c
 14666  012D3E                     l6333:
 14667                           
 14668                           ;stkvar	_b @ sp[(-4)+-4]
 14669  012D3E  0EF8               	movlw	-8
 14670  012D40  006F FF8C  F032    	movff	plusw1,btemp
 14671  012D46  0EF9               	movlw	-7
 14672  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 14673  012D4E  0EFA               	movlw	-6
 14674  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 14675  012D56  0EFB               	movlw	-5
 14676  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 14677  012D5E                     l2577:
 14678                           
 14679                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14680  012D5E  0EF4               	movlw	244
 14681  012D60  26E1               	addwf	fsr1l,f,c
 14682  012D62  0EFF               	movlw	255
 14683  012D64  22E2               	addwfc	fsr1h,f,c
 14684  012D66  0012               	return		;funcret
 14685  012D68                     __end_of___fladd:
 14686                           	opt callstack 0
 14687                           
 14688 ;; *************** function ___flneg *****************
 14689 ;; Defined at:
 14690 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14691 ;; Parameters:    Size  Location     Type
 14692 ;;  f1              4  [STACK] unsigned char 
 14693 ;; Auto vars:     Size  Location     Type
 14694 ;;		None
 14695 ;; Return value:  Size  Location     Type
 14696 ;;                  4  [STACK] unsigned char 
 14697 ;; Registers used:
 14698 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14699 ;; Tracked objects:
 14700 ;;		On entry : 0/5
 14701 ;;		On exit  : 0/0
 14702 ;;		Unchanged: 0/0
 14703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14708 ;;Total ram usage:        0 bytes
 14709 ;; Hardware stack levels used:    1
 14710 ;; Hardware stack levels required when called:    6
 14711 ;; This function calls:
 14712 ;;		Nothing
 14713 ;; This function is called by:
 14714 ;;		_efgtoa
 14715 ;; This function uses a reentrant model
 14716 ;;
 14717                           
 14718                           	psect	text54
 14719  017A88                     __ptext54:
 14720                           	opt callstack 0
 14721  017A88                     ___flneg:
 14722                           	opt callstack 17
 14723                           
 14724                           ;stkvar	_f1 @ sp[(0)+-4]
 14725                           
 14726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14727                           ;incstack = 0
 14728  017A88  0EFC               	movlw	-4
 14729  017A8A  50E3               	movf	plusw1,w,c
 14730  017A8C  E10A               	bnz	u6190
 14731  017A8E  0EFD               	movlw	-3
 14732  017A90  50E3               	movf	plusw1,w,c
 14733  017A92  E107               	bnz	u6190
 14734  017A94  0EFE               	movlw	-2
 14735  017A96  50E3               	movf	plusw1,w,c
 14736  017A98  E104               	bnz	u6190
 14737  017A9A  0EFF               	movlw	-1
 14738  017A9C  50E3               	movf	plusw1,w,c
 14739  017A9E  B4D8               	btfsc	status,2,c
 14740  017AA0  D002               	goto	l7001
 14741  017AA2                     u6190:
 14742                           
 14743                           ;stkvar	_f1 @ sp[(0)+-4]
 14744  017AA2  0EFF               	movlw	-1
 14745  017AA4  7EE3               	btg	plusw1,7,c
 14746  017AA6                     l7001:
 14747                           
 14748                           ;stkvar	_f1 @ sp[(0)+-4]
 14749  017AA6  0EFC               	movlw	-4
 14750  017AA8  006F FF8C  F032    	movff	plusw1,btemp
 14751  017AAE  0EFD               	movlw	-3
 14752  017AB0  006F FF8C  F033    	movff	plusw1,btemp+1
 14753  017AB6  0EFE               	movlw	-2
 14754  017AB8  006F FF8C  F034    	movff	plusw1,btemp+2
 14755  017ABE  0EFF               	movlw	-1
 14756  017AC0  006F FF8C  F035    	movff	plusw1,btemp+3
 14757                           
 14758                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14759  017AC6  52E5               	movf	postdec1,f,c
 14760  017AC8  52E5               	movf	postdec1,f,c
 14761  017ACA  52E5               	movf	postdec1,f,c
 14762  017ACC  52E5               	movf	postdec1,f,c
 14763  017ACE  0012               	return		;funcret
 14764  017AD0                     __end_of___flneg:
 14765                           	opt callstack 0
 14766                           
 14767 ;; *************** function ___flmul *****************
 14768 ;; Defined at:
 14769 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14770 ;; Parameters:    Size  Location     Type
 14771 ;;  b               4  [STACK] unsigned char 
 14772 ;;  a               4  [STACK] unsigned char 
 14773 ;; Auto vars:     Size  Location     Type
 14774 ;;  prod            4  [STACK] struct .
 14775 ;;  grs             4  [STACK] unsigned long 
 14776 ;;  temp            2  [STACK] struct .
 14777 ;;  bexp            1  [STACK] unsigned char 
 14778 ;;  aexp            1  [STACK] unsigned char 
 14779 ;;  sign            1  [STACK] unsigned char 
 14780 ;; Return value:  Size  Location     Type
 14781 ;;                  4  [STACK] unsigned char 
 14782 ;; Registers used:
 14783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14784 ;; Tracked objects:
 14785 ;;		On entry : 0/39
 14786 ;;		On exit  : 0/0
 14787 ;;		Unchanged: 0/0
 14788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14793 ;;Total ram usage:        0 bytes
 14794 ;; Hardware stack levels used:    1
 14795 ;; Hardware stack levels required when called:    6
 14796 ;; This function calls:
 14797 ;;		Nothing
 14798 ;; This function is called by:
 14799 ;;		_conv_raw_result
 14800 ;;		_lp_filter
 14801 ;;		_efgtoa
 14802 ;; This function uses a reentrant model
 14803 ;;
 14804                           
 14805                           	psect	text55
 14806  011D82                     __ptext55:
 14807                           	opt callstack 0
 14808  011D82                     ___flmul:
 14809                           	opt callstack 0
 14810                           
 14811                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14812  011D82  0E0D               	movlw	13
 14813  011D84  26E1               	addwf	fsr1l,f,c
 14814  011D86  0E00               	movlw	0
 14815  011D88  22E2               	addwfc	fsr1h,f,c
 14816                           
 14817                           ;stkvar	_b @ sp[(-13)+-4]
 14818                           
 14819                           ;incstack = 0
 14820  011D8A  0EF2               	movlw	242
 14821  011D8C  24E1               	addwf	fsr1l,w,c
 14822  011D8E  6ED9               	movwf	fsr2l,c
 14823  011D90  0EFF               	movlw	255
 14824  011D92  20E2               	addwfc	fsr1h,w,c
 14825  011D94  6EDA               	movwf	fsr2h,c
 14826  011D96  50DF               	movf	indf2,w,c
 14827  011D98  6E3D               	movwf	(btemp+11)^0,c
 14828  011D9A  0E80               	movlw	128
 14829  011D9C  163D               	andwf	(btemp+11)^0,f,c
 14830                           
 14831                           ;stkvar	_sign @ sp[(-13)+12]
 14832  011D9E  0EFF               	movlw	-1
 14833  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14834                           
 14835                           ;stkvar	_b @ sp[(-13)+-4]
 14836  011DA6  0EF2               	movlw	242
 14837  011DA8  24E1               	addwf	fsr1l,w,c
 14838  011DAA  6ED9               	movwf	fsr2l,c
 14839  011DAC  0EFF               	movlw	255
 14840  011DAE  20E2               	addwfc	fsr1h,w,c
 14841  011DB0  6EDA               	movwf	fsr2h,c
 14842  011DB2  50DF               	movf	indf2,w,c
 14843  011DB4  6E3D               	movwf	(btemp+11)^0,c
 14844  011DB6  90D8               	bcf	status,0,c
 14845  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 14846  011DBA  6E3C               	movwf	(btemp+10)^0,c
 14847                           
 14848                           ;stkvar	_bexp @ sp[(-13)+10]
 14849  011DBC  0EFD               	movlw	-3
 14850  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14851                           
 14852                           ;stkvar	_b @ sp[(-13)+-4]
 14853  011DC4  0EF1               	movlw	241
 14854  011DC6  24E1               	addwf	fsr1l,w,c
 14855  011DC8  6ED9               	movwf	fsr2l,c
 14856  011DCA  0EFF               	movlw	255
 14857  011DCC  20E2               	addwfc	fsr1h,w,c
 14858  011DCE  6EDA               	movwf	fsr2h,c
 14859  011DD0  AEDF               	btfss	indf2,7,c
 14860  011DD2  D002               	goto	l6717
 14861                           
 14862                           ;stkvar	_bexp @ sp[(-13)+10]
 14863  011DD4  0EFD               	movlw	-3
 14864  011DD6  80E3               	bsf	plusw1,0,c
 14865  011DD8                     l6717:
 14866                           
 14867                           ;stkvar	_bexp @ sp[(-13)+10]
 14868  011DD8  0EFD               	movlw	-3
 14869  011DDA  50E3               	movf	plusw1,w,c
 14870  011DDC  B4D8               	btfsc	status,2,c
 14871  011DDE  D01F               	goto	l6725
 14872                           
 14873                           ;stkvar	_bexp @ sp[(-13)+10]
 14874  011DE0  0EFD               	movlw	-3
 14875  011DE2  28E3               	incf	plusw1,w,c
 14876  011DE4  A4D8               	btfss	status,2,c
 14877  011DE6  D018               	goto	l6723
 14878  011DE8  0E00               	movlw	0
 14879  011DEA  6E3A               	movwf	(btemp+8)^0,c
 14880  011DEC  0E00               	movlw	0
 14881  011DEE  6E3B               	movwf	(btemp+9)^0,c
 14882  011DF0  0E00               	movlw	0
 14883  011DF2  6E3C               	movwf	(btemp+10)^0,c
 14884  011DF4  0E00               	movlw	0
 14885  011DF6  6E3D               	movwf	(btemp+11)^0,c
 14886                           
 14887                           ;stkvar	_b @ sp[(-13)+-4]
 14888  011DF8  0EEF               	movlw	-17
 14889  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14890  011E00  0EF0               	movlw	-16
 14891  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14892  011E08  0EF1               	movlw	-15
 14893  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14894  011E10  0EF2               	movlw	-14
 14895  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14896  011E18                     l6723:
 14897                           
 14898                           ;stkvar	_b @ sp[(-13)+-4]
 14899  011E18  0EF1               	movlw	-15
 14900  011E1A  8EE3               	bsf	plusw1,7,c
 14901  011E1C  D018               	goto	l6727
 14902  011E1E                     l6725:
 14903  011E1E  0E00               	movlw	0
 14904  011E20  6E3A               	movwf	(btemp+8)^0,c
 14905  011E22  0E00               	movlw	0
 14906  011E24  6E3B               	movwf	(btemp+9)^0,c
 14907  011E26  0E00               	movlw	0
 14908  011E28  6E3C               	movwf	(btemp+10)^0,c
 14909  011E2A  0E00               	movlw	0
 14910  011E2C  6E3D               	movwf	(btemp+11)^0,c
 14911                           
 14912                           ;stkvar	_b @ sp[(-13)+-4]
 14913  011E2E  0EEF               	movlw	-17
 14914  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14915  011E36  0EF0               	movlw	-16
 14916  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14917  011E3E  0EF1               	movlw	-15
 14918  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14919  011E46  0EF2               	movlw	-14
 14920  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14921  011E4E                     l6727:
 14922                           
 14923                           ;stkvar	_a @ sp[(-13)+-8]
 14924  011E4E  0EEE               	movlw	238
 14925  011E50  24E1               	addwf	fsr1l,w,c
 14926  011E52  6ED9               	movwf	fsr2l,c
 14927  011E54  0EFF               	movlw	255
 14928  011E56  20E2               	addwfc	fsr1h,w,c
 14929  011E58  6EDA               	movwf	fsr2h,c
 14930  011E5A  50DF               	movf	indf2,w,c
 14931  011E5C  6E3D               	movwf	(btemp+11)^0,c
 14932  011E5E  0E80               	movlw	128
 14933  011E60  163D               	andwf	(btemp+11)^0,f,c
 14934                           
 14935                           ;stkvar	_sign @ sp[(-13)+12]
 14936  011E62  50E1               	movf	fsr1l,w,c
 14937  011E64  0FFF               	addlw	-1
 14938  011E66  6ED9               	movwf	fsr2l,c
 14939  011E68  50E2               	movf	fsr1h,w,c
 14940  011E6A  6EDA               	movwf	fsr2h,c
 14941  011E6C  0EFF               	movlw	255
 14942  011E6E  22DA               	addwfc	fsr2h,f,c
 14943  011E70  503D               	movf	(btemp+11)^0,w,c
 14944  011E72  1ADF               	xorwf	indf2,f,c
 14945                           
 14946                           ;stkvar	_a @ sp[(-13)+-8]
 14947  011E74  0EEE               	movlw	238
 14948  011E76  24E1               	addwf	fsr1l,w,c
 14949  011E78  6ED9               	movwf	fsr2l,c
 14950  011E7A  0EFF               	movlw	255
 14951  011E7C  20E2               	addwfc	fsr1h,w,c
 14952  011E7E  6EDA               	movwf	fsr2h,c
 14953  011E80  50DF               	movf	indf2,w,c
 14954  011E82  6E3D               	movwf	(btemp+11)^0,c
 14955  011E84  90D8               	bcf	status,0,c
 14956  011E86  343D               	rlcf	(btemp+11)^0,w,c
 14957  011E88  6E3C               	movwf	(btemp+10)^0,c
 14958                           
 14959                           ;stkvar	_aexp @ sp[(-13)+11]
 14960  011E8A  0EFE               	movlw	-2
 14961  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14962                           
 14963                           ;stkvar	_a @ sp[(-13)+-8]
 14964  011E92  0EED               	movlw	237
 14965  011E94  24E1               	addwf	fsr1l,w,c
 14966  011E96  6ED9               	movwf	fsr2l,c
 14967  011E98  0EFF               	movlw	255
 14968  011E9A  20E2               	addwfc	fsr1h,w,c
 14969  011E9C  6EDA               	movwf	fsr2h,c
 14970  011E9E  AEDF               	btfss	indf2,7,c
 14971  011EA0  D002               	goto	l6735
 14972                           
 14973                           ;stkvar	_aexp @ sp[(-13)+11]
 14974  011EA2  0EFE               	movlw	-2
 14975  011EA4  80E3               	bsf	plusw1,0,c
 14976  011EA6                     l6735:
 14977                           
 14978                           ;stkvar	_aexp @ sp[(-13)+11]
 14979  011EA6  0EFE               	movlw	-2
 14980  011EA8  50E3               	movf	plusw1,w,c
 14981  011EAA  B4D8               	btfsc	status,2,c
 14982  011EAC  D01F               	goto	l6743
 14983                           
 14984                           ;stkvar	_aexp @ sp[(-13)+11]
 14985  011EAE  0EFE               	movlw	-2
 14986  011EB0  28E3               	incf	plusw1,w,c
 14987  011EB2  A4D8               	btfss	status,2,c
 14988  011EB4  D018               	goto	l6741
 14989  011EB6  0E00               	movlw	0
 14990  011EB8  6E3A               	movwf	(btemp+8)^0,c
 14991  011EBA  0E00               	movlw	0
 14992  011EBC  6E3B               	movwf	(btemp+9)^0,c
 14993  011EBE  0E00               	movlw	0
 14994  011EC0  6E3C               	movwf	(btemp+10)^0,c
 14995  011EC2  0E00               	movlw	0
 14996  011EC4  6E3D               	movwf	(btemp+11)^0,c
 14997                           
 14998                           ;stkvar	_a @ sp[(-13)+-8]
 14999  011EC6  0EEB               	movlw	-21
 15000  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15001  011ECE  0EEC               	movlw	-20
 15002  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15003  011ED6  0EED               	movlw	-19
 15004  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15005  011EDE  0EEE               	movlw	-18
 15006  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15007  011EE6                     l6741:
 15008                           
 15009                           ;stkvar	_a @ sp[(-13)+-8]
 15010  011EE6  0EED               	movlw	-19
 15011  011EE8  8EE3               	bsf	plusw1,7,c
 15012  011EEA  D018               	goto	l6745
 15013  011EEC                     l6743:
 15014  011EEC  0E00               	movlw	0
 15015  011EEE  6E3A               	movwf	(btemp+8)^0,c
 15016  011EF0  0E00               	movlw	0
 15017  011EF2  6E3B               	movwf	(btemp+9)^0,c
 15018  011EF4  0E00               	movlw	0
 15019  011EF6  6E3C               	movwf	(btemp+10)^0,c
 15020  011EF8  0E00               	movlw	0
 15021  011EFA  6E3D               	movwf	(btemp+11)^0,c
 15022                           
 15023                           ;stkvar	_a @ sp[(-13)+-8]
 15024  011EFC  0EEB               	movlw	-21
 15025  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15026  011F04  0EEC               	movlw	-20
 15027  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15028  011F0C  0EED               	movlw	-19
 15029  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15030  011F14  0EEE               	movlw	-18
 15031  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15032  011F1C                     l6745:
 15033                           
 15034                           ;stkvar	_aexp @ sp[(-13)+11]
 15035  011F1C  0EFE               	movlw	-2
 15036  011F1E  50E3               	movf	plusw1,w,c
 15037  011F20  B4D8               	btfsc	status,2,c
 15038  011F22  D004               	goto	u5820
 15039                           
 15040                           ;stkvar	_bexp @ sp[(-13)+10]
 15041  011F24  0EFD               	movlw	-3
 15042  011F26  50E3               	movf	plusw1,w,c
 15043  011F28  A4D8               	btfss	status,2,c
 15044  011F2A  D009               	goto	l6753
 15045  011F2C                     u5820:
 15046  011F2C  0E00               	movlw	0
 15047  011F2E  6E32               	movwf	btemp^0,c
 15048  011F30  0E00               	movlw	0
 15049  011F32  6E33               	movwf	(btemp+1)^0,c
 15050  011F34  0E00               	movlw	0
 15051  011F36  6E34               	movwf	(btemp+2)^0,c
 15052  011F38  0E00               	movlw	0
 15053  011F3A  6E35               	movwf	(btemp+3)^0,c
 15054  011F3C  D332               	goto	l2658
 15055  011F3E                     l6753:
 15056                           
 15057                           ;stkvar	_b @ sp[(-13)+-4]
 15058  011F3E  0EEF               	movlw	-17
 15059  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 15060                           
 15061                           ;stkvar	_a @ sp[(-13)+-8]
 15062  011F46  0EED               	movlw	237
 15063  011F48  24E1               	addwf	fsr1l,w,c
 15064  011F4A  6ED9               	movwf	fsr2l,c
 15065  011F4C  0EFF               	movlw	255
 15066  011F4E  20E2               	addwfc	fsr1h,w,c
 15067  011F50  6EDA               	movwf	fsr2h,c
 15068  011F52  50DF               	movf	indf2,w,c
 15069  011F54  023D               	mulwf	(btemp+11)^0,c
 15070                           
 15071                           ;stkvar	_temp @ sp[(-13)+8]
 15072  011F56  0EFB               	movlw	-5
 15073  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 15074  011F5E  0EFC               	movlw	-4
 15075  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 15076                           
 15077                           ;stkvar	_temp @ sp[(-13)+8]
 15078  011F66  0EFB               	movlw	-5
 15079  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 15080  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15081  011F74  6A37               	clrf	(btemp+5)^0,c
 15082  011F76  6A38               	clrf	(btemp+6)^0,c
 15083  011F78  6A39               	clrf	(btemp+7)^0,c
 15084                           
 15085                           ;stkvar	_grs @ sp[(-13)+4]
 15086  011F7A  0EF7               	movlw	-9
 15087  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15088  011F82  0EF8               	movlw	-8
 15089  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15090  011F8A  0EF9               	movlw	-7
 15091  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15092  011F92  0EFA               	movlw	-6
 15093  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15094                           
 15095                           ;stkvar	_temp @ sp[(-13)+8]
 15096  011F9A  0EFC               	movlw	252
 15097  011F9C  24E1               	addwf	fsr1l,w,c
 15098  011F9E  6ED9               	movwf	fsr2l,c
 15099  011FA0  0EFF               	movlw	255
 15100  011FA2  20E2               	addwfc	fsr1h,w,c
 15101  011FA4  6EDA               	movwf	fsr2h,c
 15102  011FA6  50DF               	movf	indf2,w,c
 15103  011FA8  6E3D               	movwf	(btemp+11)^0,c
 15104  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15105  011FB0  6A37               	clrf	(btemp+5)^0,c
 15106  011FB2  6A38               	clrf	(btemp+6)^0,c
 15107  011FB4  6A39               	clrf	(btemp+7)^0,c
 15108                           
 15109                           ;stkvar	_prod @ sp[(-13)+0]
 15110  011FB6  0EF3               	movlw	-13
 15111  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15112  011FBE  0EF4               	movlw	-12
 15113  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15114  011FC6  0EF5               	movlw	-11
 15115  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15116  011FCE  0EF6               	movlw	-10
 15117  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15118                           
 15119                           ;stkvar	_b @ sp[(-13)+-4]
 15120  011FD6  0EF0               	movlw	240
 15121  011FD8  24E1               	addwf	fsr1l,w,c
 15122  011FDA  6ED9               	movwf	fsr2l,c
 15123  011FDC  0EFF               	movlw	255
 15124  011FDE  20E2               	addwfc	fsr1h,w,c
 15125  011FE0  6EDA               	movwf	fsr2h,c
 15126  011FE2  50DF               	movf	indf2,w,c
 15127  011FE4  6E3D               	movwf	(btemp+11)^0,c
 15128                           
 15129                           ;stkvar	_a @ sp[(-13)+-8]
 15130  011FE6  0EEC               	movlw	236
 15131  011FE8  24E1               	addwf	fsr1l,w,c
 15132  011FEA  6ED9               	movwf	fsr2l,c
 15133  011FEC  0EFF               	movlw	255
 15134  011FEE  20E2               	addwfc	fsr1h,w,c
 15135  011FF0  6EDA               	movwf	fsr2h,c
 15136  011FF2  50DF               	movf	indf2,w,c
 15137  011FF4  023D               	mulwf	(btemp+11)^0,c
 15138                           
 15139                           ;stkvar	_temp @ sp[(-13)+8]
 15140  011FF6  0EFB               	movlw	-5
 15141  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 15142  011FFE  0EFC               	movlw	-4
 15143  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 15144                           
 15145                           ;stkvar	_grs @ sp[(-13)+4]
 15146  012006  50E1               	movf	fsr1l,w,c
 15147  012008  0FF7               	addlw	-9
 15148  01200A  6ED9               	movwf	fsr2l,c
 15149  01200C  50E2               	movf	fsr1h,w,c
 15150  01200E  6EDA               	movwf	fsr2h,c
 15151  012010  0EFF               	movlw	255
 15152  012012  22DA               	addwfc	fsr2h,f,c
 15153                           
 15154                           ;stkvar	_temp @ sp[(-13)+8]
 15155  012014  0EFB               	movlw	-5
 15156  012016  50E3               	movf	plusw1,w,c
 15157  012018  26DE               	addwf	postinc2,f,c
 15158  01201A  0E00               	movlw	0
 15159  01201C  22DE               	addwfc	postinc2,f,c
 15160  01201E  22DE               	addwfc	postinc2,f,c
 15161  012020  22DE               	addwfc	postinc2,f,c
 15162                           
 15163                           ;stkvar	_prod @ sp[(-13)+0]
 15164  012022  50E1               	movf	fsr1l,w,c
 15165  012024  0FF3               	addlw	-13
 15166  012026  6ED9               	movwf	fsr2l,c
 15167  012028  50E2               	movf	fsr1h,w,c
 15168  01202A  6EDA               	movwf	fsr2h,c
 15169  01202C  0EFF               	movlw	255
 15170  01202E  22DA               	addwfc	fsr2h,f,c
 15171                           
 15172                           ;stkvar	_temp @ sp[(-13)+8]
 15173  012030  0EFC               	movlw	252
 15174  012032  24E1               	addwf	fsr1l,w,c
 15175  012034  6EE9               	movwf	fsr0l,c
 15176  012036  0EFF               	movlw	255
 15177  012038  20E2               	addwfc	fsr1h,w,c
 15178  01203A  6EEA               	movwf	fsr0h,c
 15179  01203C  50EF               	movf	indf0,w,c
 15180  01203E  26DE               	addwf	postinc2,f,c
 15181  012040  0E00               	movlw	0
 15182  012042  22DE               	addwfc	postinc2,f,c
 15183  012044  22DE               	addwfc	postinc2,f,c
 15184  012046  22DE               	addwfc	postinc2,f,c
 15185                           
 15186                           ;stkvar	_b @ sp[(-13)+-4]
 15187  012048  0EF1               	movlw	241
 15188  01204A  24E1               	addwf	fsr1l,w,c
 15189  01204C  6ED9               	movwf	fsr2l,c
 15190  01204E  0EFF               	movlw	255
 15191  012050  20E2               	addwfc	fsr1h,w,c
 15192  012052  6EDA               	movwf	fsr2h,c
 15193  012054  50DF               	movf	indf2,w,c
 15194  012056  6E3D               	movwf	(btemp+11)^0,c
 15195                           
 15196                           ;stkvar	_a @ sp[(-13)+-8]
 15197  012058  0EEB               	movlw	-21
 15198  01205A  50E3               	movf	plusw1,w,c
 15199  01205C  023D               	mulwf	(btemp+11)^0,c
 15200                           
 15201                           ;stkvar	_temp @ sp[(-13)+8]
 15202  01205E  0EFB               	movlw	-5
 15203  012060  006F FFCF FFE3     	movff	prodl,plusw1
 15204  012066  0EFC               	movlw	-4
 15205  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 15206                           
 15207                           ;stkvar	_grs @ sp[(-13)+4]
 15208  01206E  50E1               	movf	fsr1l,w,c
 15209  012070  0FF7               	addlw	-9
 15210  012072  6ED9               	movwf	fsr2l,c
 15211  012074  50E2               	movf	fsr1h,w,c
 15212  012076  6EDA               	movwf	fsr2h,c
 15213  012078  0EFF               	movlw	255
 15214  01207A  22DA               	addwfc	fsr2h,f,c
 15215                           
 15216                           ;stkvar	_temp @ sp[(-13)+8]
 15217  01207C  0EFB               	movlw	-5
 15218  01207E  50E3               	movf	plusw1,w,c
 15219  012080  26DE               	addwf	postinc2,f,c
 15220  012082  0E00               	movlw	0
 15221  012084  22DE               	addwfc	postinc2,f,c
 15222  012086  22DE               	addwfc	postinc2,f,c
 15223  012088  22DE               	addwfc	postinc2,f,c
 15224                           
 15225                           ;stkvar	_prod @ sp[(-13)+0]
 15226  01208A  50E1               	movf	fsr1l,w,c
 15227  01208C  0FF3               	addlw	-13
 15228  01208E  6ED9               	movwf	fsr2l,c
 15229  012090  50E2               	movf	fsr1h,w,c
 15230  012092  6EDA               	movwf	fsr2h,c
 15231  012094  0EFF               	movlw	255
 15232  012096  22DA               	addwfc	fsr2h,f,c
 15233                           
 15234                           ;stkvar	_temp @ sp[(-13)+8]
 15235  012098  0EFC               	movlw	252
 15236  01209A  24E1               	addwf	fsr1l,w,c
 15237  01209C  6EE9               	movwf	fsr0l,c
 15238  01209E  0EFF               	movlw	255
 15239  0120A0  20E2               	addwfc	fsr1h,w,c
 15240  0120A2  6EEA               	movwf	fsr0h,c
 15241  0120A4  50EF               	movf	indf0,w,c
 15242  0120A6  26DE               	addwf	postinc2,f,c
 15243  0120A8  0E00               	movlw	0
 15244  0120AA  22DE               	addwfc	postinc2,f,c
 15245  0120AC  22DE               	addwfc	postinc2,f,c
 15246  0120AE  22DE               	addwfc	postinc2,f,c
 15247                           
 15248                           ;stkvar	_grs @ sp[(-13)+4]
 15249  0120B0  50E1               	movf	fsr1l,w,c
 15250  0120B2  0FF7               	addlw	-9
 15251  0120B4  6ED9               	movwf	fsr2l,c
 15252  0120B6  50E2               	movf	fsr1h,w,c
 15253  0120B8  6EDA               	movwf	fsr2h,c
 15254  0120BA  0EFF               	movlw	255
 15255  0120BC  22DA               	addwfc	fsr2h,f,c
 15256  0120BE  0E08               	movlw	8
 15257  0120C0                     u5835:
 15258  0120C0  90D8               	bcf	status,0,c
 15259  0120C2  36DE               	rlcf	postinc2,f,c
 15260  0120C4  36DE               	rlcf	postinc2,f,c
 15261  0120C6  36DE               	rlcf	postinc2,f,c
 15262  0120C8  36DD               	rlcf	postdec2,f,c
 15263  0120CA  52DD               	movf	postdec2,f,c
 15264  0120CC  52DD               	movf	postdec2,f,c
 15265  0120CE  2EE8               	decfsz	wreg,f,c
 15266  0120D0  D7F7               	goto	u5835
 15267                           
 15268                           ;stkvar	_b @ sp[(-13)+-4]
 15269  0120D2  0EF0               	movlw	240
 15270  0120D4  24E1               	addwf	fsr1l,w,c
 15271  0120D6  6ED9               	movwf	fsr2l,c
 15272  0120D8  0EFF               	movlw	255
 15273  0120DA  20E2               	addwfc	fsr1h,w,c
 15274  0120DC  6EDA               	movwf	fsr2h,c
 15275  0120DE  50DF               	movf	indf2,w,c
 15276  0120E0  6E3D               	movwf	(btemp+11)^0,c
 15277                           
 15278                           ;stkvar	_a @ sp[(-13)+-8]
 15279  0120E2  0EEB               	movlw	-21
 15280  0120E4  50E3               	movf	plusw1,w,c
 15281  0120E6  023D               	mulwf	(btemp+11)^0,c
 15282                           
 15283                           ;stkvar	_temp @ sp[(-13)+8]
 15284  0120E8  0EFB               	movlw	-5
 15285  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 15286  0120F0  0EFC               	movlw	-4
 15287  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 15288                           
 15289                           ;stkvar	_temp @ sp[(-13)+8]
 15290  0120F8  0EFB               	movlw	-5
 15291  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15292  012100  0EFC               	movlw	-4
 15293  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 15294                           
 15295                           ;stkvar	_grs @ sp[(-13)+4]
 15296  012108  50E1               	movf	fsr1l,w,c
 15297  01210A  0FF7               	addlw	-9
 15298  01210C  6ED9               	movwf	fsr2l,c
 15299  01210E  50E2               	movf	fsr1h,w,c
 15300  012110  6EDA               	movwf	fsr2h,c
 15301  012112  0EFF               	movlw	255
 15302  012114  22DA               	addwfc	fsr2h,f,c
 15303  012116  503C               	movf	(btemp+10)^0,w,c
 15304  012118  26DE               	addwf	postinc2,f,c
 15305  01211A  503D               	movf	(btemp+11)^0,w,c
 15306  01211C  22DE               	addwfc	postinc2,f,c
 15307  01211E  0E00               	movlw	0
 15308  012120  22DE               	addwfc	postinc2,f,c
 15309  012122  22DE               	addwfc	postinc2,f,c
 15310                           
 15311                           ;stkvar	_b @ sp[(-13)+-4]
 15312  012124  0EEF               	movlw	-17
 15313  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 15314                           
 15315                           ;stkvar	_a @ sp[(-13)+-8]
 15316  01212C  0EEC               	movlw	236
 15317  01212E  24E1               	addwf	fsr1l,w,c
 15318  012130  6ED9               	movwf	fsr2l,c
 15319  012132  0EFF               	movlw	255
 15320  012134  20E2               	addwfc	fsr1h,w,c
 15321  012136  6EDA               	movwf	fsr2h,c
 15322  012138  50DF               	movf	indf2,w,c
 15323  01213A  023D               	mulwf	(btemp+11)^0,c
 15324                           
 15325                           ;stkvar	_temp @ sp[(-13)+8]
 15326  01213C  0EFB               	movlw	-5
 15327  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 15328  012144  0EFC               	movlw	-4
 15329  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 15330                           
 15331                           ;stkvar	_temp @ sp[(-13)+8]
 15332  01214C  0EFB               	movlw	-5
 15333  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15334  012154  0EFC               	movlw	-4
 15335  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 15336                           
 15337                           ;stkvar	_grs @ sp[(-13)+4]
 15338  01215C  50E1               	movf	fsr1l,w,c
 15339  01215E  0FF7               	addlw	-9
 15340  012160  6ED9               	movwf	fsr2l,c
 15341  012162  50E2               	movf	fsr1h,w,c
 15342  012164  6EDA               	movwf	fsr2h,c
 15343  012166  0EFF               	movlw	255
 15344  012168  22DA               	addwfc	fsr2h,f,c
 15345  01216A  503C               	movf	(btemp+10)^0,w,c
 15346  01216C  26DE               	addwf	postinc2,f,c
 15347  01216E  503D               	movf	(btemp+11)^0,w,c
 15348  012170  22DE               	addwfc	postinc2,f,c
 15349  012172  0E00               	movlw	0
 15350  012174  22DE               	addwfc	postinc2,f,c
 15351  012176  22DE               	addwfc	postinc2,f,c
 15352                           
 15353                           ;stkvar	_grs @ sp[(-13)+4]
 15354  012178  50E1               	movf	fsr1l,w,c
 15355  01217A  0FF7               	addlw	-9
 15356  01217C  6ED9               	movwf	fsr2l,c
 15357  01217E  50E2               	movf	fsr1h,w,c
 15358  012180  6EDA               	movwf	fsr2h,c
 15359  012182  0EFF               	movlw	255
 15360  012184  22DA               	addwfc	fsr2h,f,c
 15361  012186  0E08               	movlw	8
 15362  012188                     u5845:
 15363  012188  90D8               	bcf	status,0,c
 15364  01218A  36DE               	rlcf	postinc2,f,c
 15365  01218C  36DE               	rlcf	postinc2,f,c
 15366  01218E  36DE               	rlcf	postinc2,f,c
 15367  012190  36DD               	rlcf	postdec2,f,c
 15368  012192  52DD               	movf	postdec2,f,c
 15369  012194  52DD               	movf	postdec2,f,c
 15370  012196  2EE8               	decfsz	wreg,f,c
 15371  012198  D7F7               	goto	u5845
 15372                           
 15373                           ;stkvar	_b @ sp[(-13)+-4]
 15374  01219A  0EEF               	movlw	-17
 15375  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15376                           
 15377                           ;stkvar	_a @ sp[(-13)+-8]
 15378  0121A2  0EEB               	movlw	-21
 15379  0121A4  50E3               	movf	plusw1,w,c
 15380  0121A6  023D               	mulwf	(btemp+11)^0,c
 15381                           
 15382                           ;stkvar	_temp @ sp[(-13)+8]
 15383  0121A8  0EFB               	movlw	-5
 15384  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 15385  0121B0  0EFC               	movlw	-4
 15386  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 15387                           
 15388                           ;stkvar	_temp @ sp[(-13)+8]
 15389  0121B8  0EFB               	movlw	-5
 15390  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15391  0121C0  0EFC               	movlw	-4
 15392  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 15393                           
 15394                           ;stkvar	_grs @ sp[(-13)+4]
 15395  0121C8  50E1               	movf	fsr1l,w,c
 15396  0121CA  0FF7               	addlw	-9
 15397  0121CC  6ED9               	movwf	fsr2l,c
 15398  0121CE  50E2               	movf	fsr1h,w,c
 15399  0121D0  6EDA               	movwf	fsr2h,c
 15400  0121D2  0EFF               	movlw	255
 15401  0121D4  22DA               	addwfc	fsr2h,f,c
 15402  0121D6  503C               	movf	(btemp+10)^0,w,c
 15403  0121D8  26DE               	addwf	postinc2,f,c
 15404  0121DA  503D               	movf	(btemp+11)^0,w,c
 15405  0121DC  22DE               	addwfc	postinc2,f,c
 15406  0121DE  0E00               	movlw	0
 15407  0121E0  22DE               	addwfc	postinc2,f,c
 15408  0121E2  22DE               	addwfc	postinc2,f,c
 15409                           
 15410                           ;stkvar	_b @ sp[(-13)+-4]
 15411  0121E4  0EF0               	movlw	240
 15412  0121E6  24E1               	addwf	fsr1l,w,c
 15413  0121E8  6ED9               	movwf	fsr2l,c
 15414  0121EA  0EFF               	movlw	255
 15415  0121EC  20E2               	addwfc	fsr1h,w,c
 15416  0121EE  6EDA               	movwf	fsr2h,c
 15417  0121F0  50DF               	movf	indf2,w,c
 15418  0121F2  6E3D               	movwf	(btemp+11)^0,c
 15419                           
 15420                           ;stkvar	_a @ sp[(-13)+-8]
 15421  0121F4  0EED               	movlw	237
 15422  0121F6  24E1               	addwf	fsr1l,w,c
 15423  0121F8  6ED9               	movwf	fsr2l,c
 15424  0121FA  0EFF               	movlw	255
 15425  0121FC  20E2               	addwfc	fsr1h,w,c
 15426  0121FE  6EDA               	movwf	fsr2h,c
 15427  012200  50DF               	movf	indf2,w,c
 15428  012202  023D               	mulwf	(btemp+11)^0,c
 15429                           
 15430                           ;stkvar	_temp @ sp[(-13)+8]
 15431  012204  0EFB               	movlw	-5
 15432  012206  006F FFCF FFE3     	movff	prodl,plusw1
 15433  01220C  0EFC               	movlw	-4
 15434  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 15435                           
 15436                           ;stkvar	_temp @ sp[(-13)+8]
 15437  012214  0EFB               	movlw	-5
 15438  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 15439  01221C  0EFC               	movlw	-4
 15440  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15441                           
 15442                           ;stkvar	_prod @ sp[(-13)+0]
 15443  012224  50E1               	movf	fsr1l,w,c
 15444  012226  0FF3               	addlw	-13
 15445  012228  6ED9               	movwf	fsr2l,c
 15446  01222A  50E2               	movf	fsr1h,w,c
 15447  01222C  6EDA               	movwf	fsr2h,c
 15448  01222E  0EFF               	movlw	255
 15449  012230  22DA               	addwfc	fsr2h,f,c
 15450  012232  503C               	movf	(btemp+10)^0,w,c
 15451  012234  26DE               	addwf	postinc2,f,c
 15452  012236  503D               	movf	(btemp+11)^0,w,c
 15453  012238  22DE               	addwfc	postinc2,f,c
 15454  01223A  0E00               	movlw	0
 15455  01223C  22DE               	addwfc	postinc2,f,c
 15456  01223E  22DE               	addwfc	postinc2,f,c
 15457                           
 15458                           ;stkvar	_b @ sp[(-13)+-4]
 15459  012240  0EF1               	movlw	241
 15460  012242  24E1               	addwf	fsr1l,w,c
 15461  012244  6ED9               	movwf	fsr2l,c
 15462  012246  0EFF               	movlw	255
 15463  012248  20E2               	addwfc	fsr1h,w,c
 15464  01224A  6EDA               	movwf	fsr2h,c
 15465  01224C  50DF               	movf	indf2,w,c
 15466  01224E  6E3D               	movwf	(btemp+11)^0,c
 15467                           
 15468                           ;stkvar	_a @ sp[(-13)+-8]
 15469  012250  0EEC               	movlw	236
 15470  012252  24E1               	addwf	fsr1l,w,c
 15471  012254  6ED9               	movwf	fsr2l,c
 15472  012256  0EFF               	movlw	255
 15473  012258  20E2               	addwfc	fsr1h,w,c
 15474  01225A  6EDA               	movwf	fsr2h,c
 15475  01225C  50DF               	movf	indf2,w,c
 15476  01225E  023D               	mulwf	(btemp+11)^0,c
 15477                           
 15478                           ;stkvar	_temp @ sp[(-13)+8]
 15479  012260  0EFB               	movlw	-5
 15480  012262  006F FFCF FFE3     	movff	prodl,plusw1
 15481  012268  0EFC               	movlw	-4
 15482  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 15483                           
 15484                           ;stkvar	_temp @ sp[(-13)+8]
 15485  012270  0EFB               	movlw	-5
 15486  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 15487  012278  0EFC               	movlw	-4
 15488  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15489                           
 15490                           ;stkvar	_prod @ sp[(-13)+0]
 15491  012280  50E1               	movf	fsr1l,w,c
 15492  012282  0FF3               	addlw	-13
 15493  012284  6ED9               	movwf	fsr2l,c
 15494  012286  50E2               	movf	fsr1h,w,c
 15495  012288  6EDA               	movwf	fsr2h,c
 15496  01228A  0EFF               	movlw	255
 15497  01228C  22DA               	addwfc	fsr2h,f,c
 15498  01228E  503C               	movf	(btemp+10)^0,w,c
 15499  012290  26DE               	addwf	postinc2,f,c
 15500  012292  503D               	movf	(btemp+11)^0,w,c
 15501  012294  22DE               	addwfc	postinc2,f,c
 15502  012296  0E00               	movlw	0
 15503  012298  22DE               	addwfc	postinc2,f,c
 15504  01229A  22DE               	addwfc	postinc2,f,c
 15505                           
 15506                           ;stkvar	_b @ sp[(-13)+-4]
 15507  01229C  0EF1               	movlw	241
 15508  01229E  24E1               	addwf	fsr1l,w,c
 15509  0122A0  6ED9               	movwf	fsr2l,c
 15510  0122A2  0EFF               	movlw	255
 15511  0122A4  20E2               	addwfc	fsr1h,w,c
 15512  0122A6  6EDA               	movwf	fsr2h,c
 15513  0122A8  50DF               	movf	indf2,w,c
 15514  0122AA  6E3D               	movwf	(btemp+11)^0,c
 15515                           
 15516                           ;stkvar	_a @ sp[(-13)+-8]
 15517  0122AC  0EED               	movlw	237
 15518  0122AE  24E1               	addwf	fsr1l,w,c
 15519  0122B0  6ED9               	movwf	fsr2l,c
 15520  0122B2  0EFF               	movlw	255
 15521  0122B4  20E2               	addwfc	fsr1h,w,c
 15522  0122B6  6EDA               	movwf	fsr2h,c
 15523  0122B8  50DF               	movf	indf2,w,c
 15524  0122BA  023D               	mulwf	(btemp+11)^0,c
 15525                           
 15526                           ;stkvar	_temp @ sp[(-13)+8]
 15527  0122BC  0EFB               	movlw	-5
 15528  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15529  0122C4  0EFC               	movlw	-4
 15530  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15531                           
 15532                           ;stkvar	_temp @ sp[(-13)+8]
 15533  0122CC  0EFB               	movlw	-5
 15534  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 15535  0122D4  0EFC               	movlw	-4
 15536  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 15537  0122DC  503C               	movf	(btemp+10)^0,w,c
 15538  0122DE  6E36               	movwf	(btemp+4)^0,c
 15539  0122E0  503D               	movf	(btemp+11)^0,w,c
 15540  0122E2  6E37               	movwf	(btemp+5)^0,c
 15541  0122E4  6A38               	clrf	(btemp+6)^0,c
 15542  0122E6  6A39               	clrf	(btemp+7)^0,c
 15543  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 15544  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 15545  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 15546  0122FA  6A36               	clrf	(btemp+4)^0,c
 15547                           
 15548                           ;stkvar	_prod @ sp[(-13)+0]
 15549  0122FC  50E1               	movf	fsr1l,w,c
 15550  0122FE  0FF3               	addlw	-13
 15551  012300  6ED9               	movwf	fsr2l,c
 15552  012302  50E2               	movf	fsr1h,w,c
 15553  012304  6EDA               	movwf	fsr2h,c
 15554  012306  0EFF               	movlw	255
 15555  012308  22DA               	addwfc	fsr2h,f,c
 15556  01230A  5036               	movf	(btemp+4)^0,w,c
 15557  01230C  26DE               	addwf	postinc2,f,c
 15558  01230E  5037               	movf	(btemp+5)^0,w,c
 15559  012310  22DE               	addwfc	postinc2,f,c
 15560  012312  5038               	movf	(btemp+6)^0,w,c
 15561  012314  22DE               	addwfc	postinc2,f,c
 15562  012316  5039               	movf	(btemp+7)^0,w,c
 15563  012318  22DE               	addwfc	postinc2,f,c
 15564                           
 15565                           ;stkvar	_prod @ sp[(-13)+0]
 15566  01231A  50E1               	movf	fsr1l,w,c
 15567  01231C  0FF3               	addlw	-13
 15568  01231E  6ED9               	movwf	fsr2l,c
 15569  012320  50E2               	movf	fsr1h,w,c
 15570  012322  6EDA               	movwf	fsr2h,c
 15571  012324  0EFF               	movlw	255
 15572  012326  22DA               	addwfc	fsr2h,f,c
 15573                           
 15574                           ;stkvar	_grs @ sp[(-13)+4]
 15575  012328  0EFA               	movlw	250
 15576  01232A  24E1               	addwf	fsr1l,w,c
 15577  01232C  6EE9               	movwf	fsr0l,c
 15578  01232E  0EFF               	movlw	255
 15579  012330  20E2               	addwfc	fsr1h,w,c
 15580  012332  6EEA               	movwf	fsr0h,c
 15581  012334  50EF               	movf	indf0,w,c
 15582  012336  26DE               	addwf	postinc2,f,c
 15583  012338  0E00               	movlw	0
 15584  01233A  22DE               	addwfc	postinc2,f,c
 15585  01233C  22DE               	addwfc	postinc2,f,c
 15586  01233E  22DE               	addwfc	postinc2,f,c
 15587                           
 15588                           ;stkvar	_grs @ sp[(-13)+4]
 15589  012340  50E1               	movf	fsr1l,w,c
 15590  012342  0FF7               	addlw	-9
 15591  012344  6ED9               	movwf	fsr2l,c
 15592  012346  50E2               	movf	fsr1h,w,c
 15593  012348  6EDA               	movwf	fsr2h,c
 15594  01234A  0EFF               	movlw	255
 15595  01234C  22DA               	addwfc	fsr2h,f,c
 15596  01234E  0E08               	movlw	8
 15597  012350                     u5855:
 15598  012350  90D8               	bcf	status,0,c
 15599  012352  36DE               	rlcf	postinc2,f,c
 15600  012354  36DE               	rlcf	postinc2,f,c
 15601  012356  36DE               	rlcf	postinc2,f,c
 15602  012358  36DD               	rlcf	postdec2,f,c
 15603  01235A  52DD               	movf	postdec2,f,c
 15604  01235C  52DD               	movf	postdec2,f,c
 15605  01235E  2EE8               	decfsz	wreg,f,c
 15606  012360  D7F7               	goto	u5855
 15607  012362  0E82               	movlw	130
 15608  012364  6E3C               	movwf	(btemp+10)^0,c
 15609  012366  0EFF               	movlw	255
 15610  012368  6E3D               	movwf	(btemp+11)^0,c
 15611                           
 15612                           ;stkvar	_bexp @ sp[(-13)+10]
 15613  01236A  0EFD               	movlw	-3
 15614  01236C  50E3               	movf	plusw1,w,c
 15615  01236E  6E3A               	movwf	(btemp+8)^0,c
 15616  012370  6A3B               	clrf	(btemp+9)^0,c
 15617                           
 15618                           ;stkvar	_aexp @ sp[(-13)+11]
 15619  012372  0EFE               	movlw	-2
 15620  012374  50E3               	movf	plusw1,w,c
 15621  012376  263A               	addwf	(btemp+8)^0,f,c
 15622  012378  0E00               	movlw	0
 15623  01237A  223B               	addwfc	(btemp+9)^0,f,c
 15624  01237C  503C               	movf	(btemp+10)^0,w,c
 15625  01237E  263A               	addwf	(btemp+8)^0,f,c
 15626  012380  503D               	movf	(btemp+11)^0,w,c
 15627  012382  223B               	addwfc	(btemp+9)^0,f,c
 15628                           
 15629                           ;stkvar	_temp @ sp[(-13)+8]
 15630  012384  0EFB               	movlw	-5
 15631  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15632  01238C  0EFC               	movlw	-4
 15633  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15634  012394  D021               	goto	l6815
 15635  012396                     l6805:
 15636                           
 15637                           ;stkvar	_prod @ sp[(-13)+0]
 15638  012396  90D8               	bcf	status,0,c
 15639  012398  0EF3               	movlw	-13
 15640  01239A  36E3               	rlcf	plusw1,f,c
 15641  01239C  0EF4               	movlw	-12
 15642  01239E  36E3               	rlcf	plusw1,f,c
 15643  0123A0  0EF5               	movlw	-11
 15644  0123A2  36E3               	rlcf	plusw1,f,c
 15645  0123A4  0EF6               	movlw	-10
 15646  0123A6  36E3               	rlcf	plusw1,f,c
 15647                           
 15648                           ;stkvar	_grs @ sp[(-13)+4]
 15649  0123A8  0EFA               	movlw	-6
 15650  0123AA  AEE3               	btfss	plusw1,7,c
 15651  0123AC  D002               	goto	l6811
 15652                           
 15653                           ;stkvar	_prod @ sp[(-13)+0]
 15654  0123AE  0EF3               	movlw	-13
 15655  0123B0  80E3               	bsf	plusw1,0,c
 15656  0123B2                     l6811:
 15657                           
 15658                           ;stkvar	_grs @ sp[(-13)+4]
 15659  0123B2  90D8               	bcf	status,0,c
 15660  0123B4  0EF7               	movlw	-9
 15661  0123B6  36E3               	rlcf	plusw1,f,c
 15662  0123B8  0EF8               	movlw	-8
 15663  0123BA  36E3               	rlcf	plusw1,f,c
 15664  0123BC  0EF9               	movlw	-7
 15665  0123BE  36E3               	rlcf	plusw1,f,c
 15666  0123C0  0EFA               	movlw	-6
 15667  0123C2  36E3               	rlcf	plusw1,f,c
 15668                           
 15669                           ;stkvar	_temp @ sp[(-13)+8]
 15670  0123C4  50E1               	movf	fsr1l,w,c
 15671  0123C6  0FFB               	addlw	-5
 15672  0123C8  6ED9               	movwf	fsr2l,c
 15673  0123CA  50E2               	movf	fsr1h,w,c
 15674  0123CC  6EDA               	movwf	fsr2h,c
 15675  0123CE  0EFF               	movlw	255
 15676  0123D0  22DA               	addwfc	fsr2h,f,c
 15677  0123D2  06DE               	decf	postinc2,f,c
 15678  0123D4  0E00               	movlw	0
 15679  0123D6  5ADD               	subwfb	postdec2,f,c
 15680  0123D8                     l6815:
 15681                           
 15682                           ;stkvar	_prod @ sp[(-13)+0]
 15683  0123D8  0EF5               	movlw	-11
 15684  0123DA  AEE3               	btfss	plusw1,7,c
 15685  0123DC  D7DC               	goto	l6805
 15686                           
 15687                           ;stkvar	_aexp @ sp[(-13)+11]
 15688  0123DE  0EFE               	movlw	-2
 15689  0123E0  6AE3               	clrf	plusw1,c
 15690                           
 15691                           ;stkvar	_grs @ sp[(-13)+4]
 15692  0123E2  0EFA               	movlw	-6
 15693  0123E4  AEE3               	btfss	plusw1,7,c
 15694  0123E6  D020               	goto	l6829
 15695                           
 15696                           ;stkvar	_grs @ sp[(-13)+4]
 15697  0123E8  50E1               	movf	fsr1l,w,c
 15698  0123EA  0FF7               	addlw	-9
 15699  0123EC  6ED9               	movwf	fsr2l,c
 15700  0123EE  50E2               	movf	fsr1h,w,c
 15701  0123F0  6EDA               	movwf	fsr2h,c
 15702  0123F2  0EFF               	movlw	255
 15703  0123F4  22DA               	addwfc	fsr2h,f,c
 15704  0123F6  0EFF               	movlw	255
 15705  0123F8  14DE               	andwf	postinc2,w,c
 15706  0123FA  6E3A               	movwf	(btemp+8)^0,c
 15707  0123FC  0EFF               	movlw	255
 15708  0123FE  14DE               	andwf	postinc2,w,c
 15709  012400  6E3B               	movwf	(btemp+9)^0,c
 15710  012402  0EFF               	movlw	255
 15711  012404  14DE               	andwf	postinc2,w,c
 15712  012406  6E3C               	movwf	(btemp+10)^0,c
 15713  012408  0E7F               	movlw	127
 15714  01240A  14DE               	andwf	postinc2,w,c
 15715  01240C  6E3D               	movwf	(btemp+11)^0,c
 15716  01240E  503A               	movf	(btemp+8)^0,w,c
 15717  012410  103B               	iorwf	(btemp+9)^0,w,c
 15718  012412  103C               	iorwf	(btemp+10)^0,w,c
 15719  012414  103D               	iorwf	(btemp+11)^0,w,c
 15720  012416  B4D8               	btfsc	status,2,c
 15721  012418  D004               	goto	l6825
 15722  01241A                     u5890:
 15723                           
 15724                           ;stkvar	_aexp @ sp[(-13)+11]
 15725  01241A  0EFE               	movlw	-2
 15726  01241C  6AE3               	clrf	plusw1,c
 15727  01241E  2AE3               	incf	plusw1,f,c
 15728  012420  D003               	goto	l6829
 15729  012422                     l6825:
 15730                           
 15731                           ;stkvar	_prod @ sp[(-13)+0]
 15732  012422  0EF3               	movlw	-13
 15733  012424  B0E3               	btfsc	plusw1,0,c
 15734  012426  D7F9               	goto	u5890
 15735  012428                     l6829:
 15736                           
 15737                           ;stkvar	_aexp @ sp[(-13)+11]
 15738  012428  0EFE               	movlw	-2
 15739  01242A  50E3               	movf	plusw1,w,c
 15740  01242C  B4D8               	btfsc	status,2,c
 15741  01242E  D036               	goto	l6839
 15742                           
 15743                           ;stkvar	_prod @ sp[(-13)+0]
 15744  012430  50E1               	movf	fsr1l,w,c
 15745  012432  0FF3               	addlw	-13
 15746  012434  6ED9               	movwf	fsr2l,c
 15747  012436  50E2               	movf	fsr1h,w,c
 15748  012438  6EDA               	movwf	fsr2h,c
 15749  01243A  0EFF               	movlw	255
 15750  01243C  22DA               	addwfc	fsr2h,f,c
 15751  01243E  2ADE               	incf	postinc2,f,c
 15752  012440  0E00               	movlw	0
 15753  012442  22DE               	addwfc	postinc2,f,c
 15754  012444  22DE               	addwfc	postinc2,f,c
 15755  012446  22DE               	addwfc	postinc2,f,c
 15756                           
 15757                           ;stkvar	_prod @ sp[(-13)+0]
 15758  012448  0EF6               	movlw	-10
 15759  01244A  A0E3               	btfss	plusw1,0,c
 15760  01244C  D027               	goto	l6839
 15761  01244E  0E01               	movlw	1
 15762  012450  6E3D               	movwf	(btemp+11)^0,c
 15763                           
 15764                           ;stkvar	_prod @ sp[(-13)+0]
 15765  012452  50E1               	movf	fsr1l,w,c
 15766  012454  0FF3               	addlw	-13
 15767  012456  6ED9               	movwf	fsr2l,c
 15768  012458  50E2               	movf	fsr1h,w,c
 15769  01245A  6EDA               	movwf	fsr2h,c
 15770  01245C  0EFF               	movlw	255
 15771  01245E  22DA               	addwfc	fsr2h,f,c
 15772  012460  283D               	incf	(btemp+11)^0,w,c
 15773  012462  52DE               	movf	postinc2,f,c
 15774  012464  D008               	goto	u5930
 15775  012466                     u5935:
 15776  012466  52DE               	movf	postinc2,f,c
 15777  012468  90D8               	bcf	status,0,c
 15778  01246A  BEDC               	btfsc	preinc2,7,c
 15779  01246C  80D8               	bsf	status,0,c
 15780  01246E  32DD               	rrcf	postdec2,f,c
 15781  012470  32DD               	rrcf	postdec2,f,c
 15782  012472  32DD               	rrcf	postdec2,f,c
 15783  012474  32DE               	rrcf	postinc2,f,c
 15784  012476                     u5930:
 15785  012476  2EE8               	decfsz	wreg,f,c
 15786  012478  D7F6               	goto	u5935
 15787                           
 15788                           ;stkvar	_temp @ sp[(-13)+8]
 15789  01247A  0EFB               	movlw	-5
 15790  01247C  50E3               	movf	plusw1,w,c
 15791  01247E  0F01               	addlw	1
 15792  012480  6E32               	movwf	btemp^0,c
 15793  012482  0EFB               	movlw	-5
 15794  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 15795  01248A  6A32               	clrf	btemp^0,c
 15796  01248C  0EFC               	movlw	-4
 15797  01248E  50E3               	movf	plusw1,w,c
 15798  012490  2032               	addwfc	btemp^0,w,c
 15799  012492  6E32               	movwf	btemp^0,c
 15800  012494  0EFC               	movlw	-4
 15801  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 15802  01249C                     l6839:
 15803                           
 15804                           ;stkvar	_temp @ sp[(-13)+8]
 15805  01249C  0EFC               	movlw	-4
 15806  01249E  BEE3               	btfsc	plusw1,7,c
 15807  0124A0  D020               	goto	l6843
 15808  0124A2  0EFC               	movlw	-4
 15809  0124A4  50E3               	movf	plusw1,w,c
 15810  0124A6  E104               	bnz	u5940
 15811  0124A8  0EFB               	movlw	-5
 15812  0124AA  28E3               	incf	plusw1,w,c
 15813  0124AC  A0D8               	btfss	status,0,c
 15814  0124AE  D019               	goto	l6843
 15815  0124B0                     u5940:
 15816  0124B0  0E00               	movlw	0
 15817  0124B2  6E3A               	movwf	(btemp+8)^0,c
 15818  0124B4  0E00               	movlw	0
 15819  0124B6  6E3B               	movwf	(btemp+9)^0,c
 15820  0124B8  0E80               	movlw	128
 15821  0124BA  6E3C               	movwf	(btemp+10)^0,c
 15822  0124BC  0E7F               	movlw	127
 15823  0124BE  6E3D               	movwf	(btemp+11)^0,c
 15824                           
 15825                           ;stkvar	_prod @ sp[(-13)+0]
 15826  0124C0  0EF3               	movlw	-13
 15827  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15828  0124C8  0EF4               	movlw	-12
 15829  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15830  0124D0  0EF5               	movlw	-11
 15831  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15832  0124D8  0EF6               	movlw	-10
 15833  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15834  0124E0  D044               	goto	l6859
 15835  0124E2                     l6843:
 15836                           
 15837                           ;stkvar	_temp @ sp[(-13)+8]
 15838  0124E2  0EFC               	movlw	-4
 15839  0124E4  BEE3               	btfsc	plusw1,7,c
 15840  0124E6  D007               	goto	u5950
 15841  0124E8  0EFC               	movlw	-4
 15842  0124EA  50E3               	movf	plusw1,w,c
 15843  0124EC  E10F               	bnz	l6849
 15844  0124EE  0EFB               	movlw	-5
 15845  0124F0  04E3               	decf	plusw1,w,c
 15846  0124F2  B0D8               	btfsc	status,0,c
 15847  0124F4  D00B               	goto	l6849
 15848  0124F6                     u5950:
 15849                           
 15850                           ;stkvar	_prod @ sp[(-13)+0]
 15851  0124F6  0EF3               	movlw	-13
 15852  0124F8  6AE3               	clrf	plusw1,c
 15853  0124FA  0EF4               	movlw	-12
 15854  0124FC  6AE3               	clrf	plusw1,c
 15855  0124FE  0EF5               	movlw	-11
 15856  012500  6AE3               	clrf	plusw1,c
 15857  012502  0EF6               	movlw	-10
 15858  012504  6AE3               	clrf	plusw1,c
 15859                           
 15860                           ;stkvar	_sign @ sp[(-13)+12]
 15861  012506  0EFF               	movlw	-1
 15862  012508  6AE3               	clrf	plusw1,c
 15863  01250A  D02F               	goto	l6859
 15864  01250C                     l6849:
 15865                           
 15866                           ;stkvar	_temp @ sp[(-13)+8]
 15867                           ;stkvar	_bexp @ sp[(-13)+10]
 15868  01250C  0EFB               	movlw	-5
 15869  01250E  006F FF8C  F032    	movff	plusw1,btemp
 15870  012514  0EFD               	movlw	-3
 15871  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 15872                           
 15873                           ;stkvar	_prod @ sp[(-13)+0]
 15874  01251C  50E1               	movf	fsr1l,w,c
 15875  01251E  0FF3               	addlw	-13
 15876  012520  6ED9               	movwf	fsr2l,c
 15877  012522  50E2               	movf	fsr1h,w,c
 15878  012524  6EDA               	movwf	fsr2h,c
 15879  012526  0EFF               	movlw	255
 15880  012528  22DA               	addwfc	fsr2h,f,c
 15881  01252A  0EFF               	movlw	255
 15882  01252C  16DE               	andwf	postinc2,f,c
 15883  01252E  0EFF               	movlw	255
 15884  012530  16DE               	andwf	postinc2,f,c
 15885  012532  0E7F               	movlw	127
 15886  012534  16DE               	andwf	postinc2,f,c
 15887  012536  0E00               	movlw	0
 15888  012538  16DE               	andwf	postinc2,f,c
 15889                           
 15890                           ;stkvar	_bexp @ sp[(-13)+10]
 15891  01253A  0EFD               	movlw	-3
 15892  01253C  A0E3               	btfss	plusw1,0,c
 15893  01253E  D008               	goto	l6857
 15894                           
 15895                           ;stkvar	_prod @ sp[(-13)+0]
 15896  012540  0EF5               	movlw	245
 15897  012542  24E1               	addwf	fsr1l,w,c
 15898  012544  6ED9               	movwf	fsr2l,c
 15899  012546  0EFF               	movlw	255
 15900  012548  20E2               	addwfc	fsr1h,w,c
 15901  01254A  6EDA               	movwf	fsr2h,c
 15902  01254C  0E00               	movlw	0
 15903  01254E  8EDB               	bsf	plusw2,7,c
 15904  012550                     l6857:
 15905                           
 15906                           ;stkvar	_prod @ sp[(-13)+0]
 15907  012550  0EF6               	movlw	246
 15908  012552  24E1               	addwf	fsr1l,w,c
 15909  012554  6ED9               	movwf	fsr2l,c
 15910  012556  0EFF               	movlw	255
 15911  012558  20E2               	addwfc	fsr1h,w,c
 15912  01255A  6EDA               	movwf	fsr2h,c
 15913                           
 15914                           ;stkvar	_bexp @ sp[(-13)+10]
 15915  01255C  0EFD               	movlw	-3
 15916  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15917  012564  90D8               	bcf	status,0,c
 15918  012566  303D               	rrcf	(btemp+11)^0,w,c
 15919  012568  6EDF               	movwf	indf2,c
 15920  01256A                     l6859:
 15921                           
 15922                           ;stkvar	_sign @ sp[(-13)+12]
 15923  01256A  0EFF               	movlw	-1
 15924  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15925                           
 15926                           ;stkvar	_prod @ sp[(-13)+0]
 15927  012572  0EF6               	movlw	246
 15928  012574  24E1               	addwf	fsr1l,w,c
 15929  012576  6ED9               	movwf	fsr2l,c
 15930  012578  0EFF               	movlw	255
 15931  01257A  20E2               	addwfc	fsr1h,w,c
 15932  01257C  6EDA               	movwf	fsr2h,c
 15933  01257E  503D               	movf	(btemp+11)^0,w,c
 15934  012580  12DF               	iorwf	indf2,f,c
 15935                           
 15936                           ;stkvar	_prod @ sp[(-13)+0]
 15937  012582  0EF3               	movlw	-13
 15938  012584  006F FF8C  F032    	movff	plusw1,btemp
 15939  01258A  0EF4               	movlw	-12
 15940  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 15941  012592  0EF5               	movlw	-11
 15942  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 15943  01259A  0EF6               	movlw	-10
 15944  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 15945  0125A2                     l2658:
 15946                           
 15947                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15948  0125A2  0EEB               	movlw	235
 15949  0125A4  26E1               	addwf	fsr1l,f,c
 15950  0125A6  0EFF               	movlw	255
 15951  0125A8  22E2               	addwfc	fsr1h,f,c
 15952  0125AA  0012               	return		;funcret
 15953  0125AC                     __end_of___flmul:
 15954                           	opt callstack 0
 15955                           
 15956 ;; *************** function ___flge *****************
 15957 ;; Defined at:
 15958 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;  ff1             4  [STACK] unsigned char 
 15961 ;;  ff2             4  [STACK] unsigned char 
 15962 ;; Auto vars:     Size  Location     Type
 15963 ;;		None
 15964 ;; Return value:  Size  Location     Type
 15965 ;;		None               void
 15966 ;; Registers used:
 15967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15968 ;; Tracked objects:
 15969 ;;		On entry : 0/5
 15970 ;;		On exit  : 0/0
 15971 ;;		Unchanged: 0/0
 15972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15977 ;;Total ram usage:        0 bytes
 15978 ;; Hardware stack levels used:    1
 15979 ;; Hardware stack levels required when called:    6
 15980 ;; This function calls:
 15981 ;;		Nothing
 15982 ;; This function is called by:
 15983 ;;		_efgtoa
 15984 ;; This function uses a reentrant model
 15985 ;;
 15986                           
 15987                           	psect	text56
 15988  015F9C                     __ptext56:
 15989                           	opt callstack 0
 15990  015F9C                     ___flge:
 15991                           	opt callstack 17
 15992                           
 15993                           ;stkvar	_ff1 @ sp[(0)+-4]
 15994                           
 15995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15996                           ;incstack = 0
 15997  015F9C  50E1               	movf	fsr1l,w,c
 15998  015F9E  0FFC               	addlw	-4
 15999  015FA0  6ED9               	movwf	fsr2l,c
 16000  015FA2  50E2               	movf	fsr1h,w,c
 16001  015FA4  6EDA               	movwf	fsr2h,c
 16002  015FA6  0EFF               	movlw	255
 16003  015FA8  22DA               	addwfc	fsr2h,f,c
 16004  015FAA  0E00               	movlw	0
 16005  015FAC  14DE               	andwf	postinc2,w,c
 16006  015FAE  6E3A               	movwf	(btemp+8)^0,c
 16007  015FB0  0E00               	movlw	0
 16008  015FB2  14DE               	andwf	postinc2,w,c
 16009  015FB4  6E3B               	movwf	(btemp+9)^0,c
 16010  015FB6  0E80               	movlw	128
 16011  015FB8  14DE               	andwf	postinc2,w,c
 16012  015FBA  6E3C               	movwf	(btemp+10)^0,c
 16013  015FBC  0E7F               	movlw	127
 16014  015FBE  14DE               	andwf	postinc2,w,c
 16015  015FC0  6E3D               	movwf	(btemp+11)^0,c
 16016  015FC2  503A               	movf	(btemp+8)^0,w,c
 16017  015FC4  103B               	iorwf	(btemp+9)^0,w,c
 16018  015FC6  103C               	iorwf	(btemp+10)^0,w,c
 16019  015FC8  103D               	iorwf	(btemp+11)^0,w,c
 16020  015FCA  A4D8               	btfss	status,2,c
 16021  015FCC  D008               	goto	l6975
 16022                           
 16023                           ;stkvar	_ff1 @ sp[(0)+-4]
 16024  015FCE  0EFC               	movlw	-4
 16025  015FD0  6AE3               	clrf	plusw1,c
 16026  015FD2  0EFD               	movlw	-3
 16027  015FD4  6AE3               	clrf	plusw1,c
 16028  015FD6  0EFE               	movlw	-2
 16029  015FD8  6AE3               	clrf	plusw1,c
 16030  015FDA  0EFF               	movlw	-1
 16031  015FDC  6AE3               	clrf	plusw1,c
 16032  015FDE                     l6975:
 16033                           
 16034                           ;stkvar	_ff2 @ sp[(0)+-8]
 16035  015FDE  50E1               	movf	fsr1l,w,c
 16036  015FE0  0FF8               	addlw	-8
 16037  015FE2  6ED9               	movwf	fsr2l,c
 16038  015FE4  50E2               	movf	fsr1h,w,c
 16039  015FE6  6EDA               	movwf	fsr2h,c
 16040  015FE8  0EFF               	movlw	255
 16041  015FEA  22DA               	addwfc	fsr2h,f,c
 16042  015FEC  0E00               	movlw	0
 16043  015FEE  14DE               	andwf	postinc2,w,c
 16044  015FF0  6E3A               	movwf	(btemp+8)^0,c
 16045  015FF2  0E00               	movlw	0
 16046  015FF4  14DE               	andwf	postinc2,w,c
 16047  015FF6  6E3B               	movwf	(btemp+9)^0,c
 16048  015FF8  0E80               	movlw	128
 16049  015FFA  14DE               	andwf	postinc2,w,c
 16050  015FFC  6E3C               	movwf	(btemp+10)^0,c
 16051  015FFE  0E7F               	movlw	127
 16052  016000  14DE               	andwf	postinc2,w,c
 16053  016002  6E3D               	movwf	(btemp+11)^0,c
 16054  016004  503A               	movf	(btemp+8)^0,w,c
 16055  016006  103B               	iorwf	(btemp+9)^0,w,c
 16056  016008  103C               	iorwf	(btemp+10)^0,w,c
 16057  01600A  103D               	iorwf	(btemp+11)^0,w,c
 16058  01600C  A4D8               	btfss	status,2,c
 16059  01600E  D008               	goto	l2303
 16060                           
 16061                           ;stkvar	_ff2 @ sp[(0)+-8]
 16062  016010  0EF8               	movlw	-8
 16063  016012  6AE3               	clrf	plusw1,c
 16064  016014  0EF9               	movlw	-7
 16065  016016  6AE3               	clrf	plusw1,c
 16066  016018  0EFA               	movlw	-6
 16067  01601A  6AE3               	clrf	plusw1,c
 16068  01601C  0EFB               	movlw	-5
 16069  01601E  6AE3               	clrf	plusw1,c
 16070  016020                     l2303:
 16071                           
 16072                           ;stkvar	_ff1 @ sp[(0)+-4]
 16073  016020  0EFF               	movlw	-1
 16074  016022  AEE3               	btfss	plusw1,7,c
 16075  016024  D024               	goto	l6981
 16076                           
 16077                           ;stkvar	_ff1 @ sp[(0)+-4]
 16078  016026  0E00               	movlw	0
 16079  016028  6E3A               	movwf	(btemp+8)^0,c
 16080  01602A  0E00               	movlw	0
 16081  01602C  6E3B               	movwf	(btemp+9)^0,c
 16082  01602E  0E00               	movlw	0
 16083  016030  6E3C               	movwf	(btemp+10)^0,c
 16084  016032  0E80               	movlw	128
 16085  016034  6E3D               	movwf	(btemp+11)^0,c
 16086  016036  0EFC               	movlw	-4
 16087  016038  50E3               	movf	plusw1,w,c
 16088  01603A  5E3A               	subwf	(btemp+8)^0,f,c
 16089  01603C  0EFD               	movlw	-3
 16090  01603E  50E3               	movf	plusw1,w,c
 16091  016040  5A3B               	subwfb	(btemp+9)^0,f,c
 16092  016042  0EFE               	movlw	-2
 16093  016044  50E3               	movf	plusw1,w,c
 16094  016046  5A3C               	subwfb	(btemp+10)^0,f,c
 16095  016048  0EFF               	movlw	-1
 16096  01604A  50E3               	movf	plusw1,w,c
 16097  01604C  5A3D               	subwfb	(btemp+11)^0,f,c
 16098                           
 16099                           ;stkvar	_ff1 @ sp[(0)+-4]
 16100  01604E  0EFC               	movlw	-4
 16101  016050  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16102  016056  0EFD               	movlw	-3
 16103  016058  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16104  01605E  0EFE               	movlw	-2
 16105  016060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16106  016066  0EFF               	movlw	-1
 16107  016068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16108  01606E                     l6981:
 16109                           
 16110                           ;stkvar	_ff2 @ sp[(0)+-8]
 16111  01606E  0EFB               	movlw	-5
 16112  016070  AEE3               	btfss	plusw1,7,c
 16113  016072  D024               	goto	l6985
 16114                           
 16115                           ;stkvar	_ff2 @ sp[(0)+-8]
 16116  016074  0E00               	movlw	0
 16117  016076  6E3A               	movwf	(btemp+8)^0,c
 16118  016078  0E00               	movlw	0
 16119  01607A  6E3B               	movwf	(btemp+9)^0,c
 16120  01607C  0E00               	movlw	0
 16121  01607E  6E3C               	movwf	(btemp+10)^0,c
 16122  016080  0E80               	movlw	128
 16123  016082  6E3D               	movwf	(btemp+11)^0,c
 16124  016084  0EF8               	movlw	-8
 16125  016086  50E3               	movf	plusw1,w,c
 16126  016088  5E3A               	subwf	(btemp+8)^0,f,c
 16127  01608A  0EF9               	movlw	-7
 16128  01608C  50E3               	movf	plusw1,w,c
 16129  01608E  5A3B               	subwfb	(btemp+9)^0,f,c
 16130  016090  0EFA               	movlw	-6
 16131  016092  50E3               	movf	plusw1,w,c
 16132  016094  5A3C               	subwfb	(btemp+10)^0,f,c
 16133  016096  0EFB               	movlw	-5
 16134  016098  50E3               	movf	plusw1,w,c
 16135  01609A  5A3D               	subwfb	(btemp+11)^0,f,c
 16136                           
 16137                           ;stkvar	_ff2 @ sp[(0)+-8]
 16138  01609C  0EF8               	movlw	-8
 16139  01609E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16140  0160A4  0EF9               	movlw	-7
 16141  0160A6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16142  0160AC  0EFA               	movlw	-6
 16143  0160AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16144  0160B4  0EFB               	movlw	-5
 16145  0160B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16146  0160BC                     l6985:
 16147                           
 16148                           ;stkvar	_ff1 @ sp[(0)+-4]
 16149  0160BC  0EFF               	movlw	-1
 16150  0160BE  7EE3               	btg	plusw1,7,c
 16151                           
 16152                           ;stkvar	_ff2 @ sp[(0)+-8]
 16153  0160C0  0EFB               	movlw	-5
 16154  0160C2  7EE3               	btg	plusw1,7,c
 16155                           
 16156                           ;stkvar	_ff2 @ sp[(0)+-8]
 16157                           ;stkvar	_ff1 @ sp[(0)+-4]
 16158  0160C4  50E1               	movf	fsr1l,w,c
 16159  0160C6  0FFC               	addlw	-4
 16160  0160C8  6ED9               	movwf	fsr2l,c
 16161  0160CA  50E2               	movf	fsr1h,w,c
 16162  0160CC  6EDA               	movwf	fsr2h,c
 16163  0160CE  0EFF               	movlw	255
 16164  0160D0  22DA               	addwfc	fsr2h,f,c
 16165  0160D2  0EF8               	movlw	-8
 16166  0160D4  50E3               	movf	plusw1,w,c
 16167  0160D6  5CDE               	subwf	postinc2,w,c
 16168  0160D8  0EF9               	movlw	-7
 16169  0160DA  50E3               	movf	plusw1,w,c
 16170  0160DC  58DE               	subwfb	postinc2,w,c
 16171  0160DE  0EFA               	movlw	-6
 16172  0160E0  50E3               	movf	plusw1,w,c
 16173  0160E2  58DE               	subwfb	postinc2,w,c
 16174  0160E4  0EFB               	movlw	-5
 16175  0160E6  50E3               	movf	plusw1,w,c
 16176  0160E8  58DE               	subwfb	postinc2,w,c
 16177  0160EA  B0D8               	btfsc	status,0,c
 16178  0160EC  D002               	goto	l6993
 16179  0160EE  9032               	bcf	btemp& (0+255),0,c
 16180  0160F0  D001               	goto	l2310
 16181  0160F2                     l6993:
 16182  0160F2  8032               	bsf	btemp& (0+255),0,c
 16183  0160F4                     l2310:
 16184                           
 16185                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16186  0160F4  0EF8               	movlw	248
 16187  0160F6  26E1               	addwf	fsr1l,f,c
 16188  0160F8  0EFF               	movlw	255
 16189  0160FA  22E2               	addwfc	fsr1h,f,c
 16190  0160FC  0012               	return		;funcret
 16191  0160FE                     __end_of___flge:
 16192                           	opt callstack 0
 16193                           
 16194 ;; *************** function ___fleq *****************
 16195 ;; Defined at:
 16196 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16197 ;; Parameters:    Size  Location     Type
 16198 ;;  ff1             4  [STACK] unsigned char 
 16199 ;;  ff2             4  [STACK] unsigned char 
 16200 ;; Auto vars:     Size  Location     Type
 16201 ;;		None
 16202 ;; Return value:  Size  Location     Type
 16203 ;;		None               void
 16204 ;; Registers used:
 16205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16206 ;; Tracked objects:
 16207 ;;		On entry : 0/5
 16208 ;;		On exit  : 0/0
 16209 ;;		Unchanged: 0/0
 16210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16215 ;;Total ram usage:        0 bytes
 16216 ;; Hardware stack levels used:    1
 16217 ;; Hardware stack levels required when called:    6
 16218 ;; This function calls:
 16219 ;;		Nothing
 16220 ;; This function is called by:
 16221 ;;		_efgtoa
 16222 ;; This function uses a reentrant model
 16223 ;;
 16224                           
 16225                           	psect	text57
 16226  016DA6                     __ptext57:
 16227                           	opt callstack 0
 16228  016DA6                     ___fleq:
 16229                           	opt callstack 17
 16230                           
 16231                           ;stkvar	_ff1 @ sp[(0)+-4]
 16232                           
 16233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16234                           ;incstack = 0
 16235  016DA6  50E1               	movf	fsr1l,w,c
 16236  016DA8  0FFC               	addlw	-4
 16237  016DAA  6ED9               	movwf	fsr2l,c
 16238  016DAC  50E2               	movf	fsr1h,w,c
 16239  016DAE  6EDA               	movwf	fsr2h,c
 16240  016DB0  0EFF               	movlw	255
 16241  016DB2  22DA               	addwfc	fsr2h,f,c
 16242  016DB4  0E00               	movlw	0
 16243  016DB6  14DE               	andwf	postinc2,w,c
 16244  016DB8  6E3A               	movwf	(btemp+8)^0,c
 16245  016DBA  0E00               	movlw	0
 16246  016DBC  14DE               	andwf	postinc2,w,c
 16247  016DBE  6E3B               	movwf	(btemp+9)^0,c
 16248  016DC0  0E80               	movlw	128
 16249  016DC2  14DE               	andwf	postinc2,w,c
 16250  016DC4  6E3C               	movwf	(btemp+10)^0,c
 16251  016DC6  0E7F               	movlw	127
 16252  016DC8  14DE               	andwf	postinc2,w,c
 16253  016DCA  6E3D               	movwf	(btemp+11)^0,c
 16254  016DCC  503A               	movf	(btemp+8)^0,w,c
 16255  016DCE  103B               	iorwf	(btemp+9)^0,w,c
 16256  016DD0  103C               	iorwf	(btemp+10)^0,w,c
 16257  016DD2  103D               	iorwf	(btemp+11)^0,w,c
 16258  016DD4  A4D8               	btfss	status,2,c
 16259  016DD6  D008               	goto	l6959
 16260                           
 16261                           ;stkvar	_ff1 @ sp[(0)+-4]
 16262  016DD8  0EFC               	movlw	-4
 16263  016DDA  6AE3               	clrf	plusw1,c
 16264  016DDC  0EFD               	movlw	-3
 16265  016DDE  6AE3               	clrf	plusw1,c
 16266  016DE0  0EFE               	movlw	-2
 16267  016DE2  6AE3               	clrf	plusw1,c
 16268  016DE4  0EFF               	movlw	-1
 16269  016DE6  6AE3               	clrf	plusw1,c
 16270  016DE8                     l6959:
 16271                           
 16272                           ;stkvar	_ff2 @ sp[(0)+-8]
 16273  016DE8  50E1               	movf	fsr1l,w,c
 16274  016DEA  0FF8               	addlw	-8
 16275  016DEC  6ED9               	movwf	fsr2l,c
 16276  016DEE  50E2               	movf	fsr1h,w,c
 16277  016DF0  6EDA               	movwf	fsr2h,c
 16278  016DF2  0EFF               	movlw	255
 16279  016DF4  22DA               	addwfc	fsr2h,f,c
 16280  016DF6  0E00               	movlw	0
 16281  016DF8  14DE               	andwf	postinc2,w,c
 16282  016DFA  6E3A               	movwf	(btemp+8)^0,c
 16283  016DFC  0E00               	movlw	0
 16284  016DFE  14DE               	andwf	postinc2,w,c
 16285  016E00  6E3B               	movwf	(btemp+9)^0,c
 16286  016E02  0E80               	movlw	128
 16287  016E04  14DE               	andwf	postinc2,w,c
 16288  016E06  6E3C               	movwf	(btemp+10)^0,c
 16289  016E08  0E7F               	movlw	127
 16290  016E0A  14DE               	andwf	postinc2,w,c
 16291  016E0C  6E3D               	movwf	(btemp+11)^0,c
 16292  016E0E  503A               	movf	(btemp+8)^0,w,c
 16293  016E10  103B               	iorwf	(btemp+9)^0,w,c
 16294  016E12  103C               	iorwf	(btemp+10)^0,w,c
 16295  016E14  103D               	iorwf	(btemp+11)^0,w,c
 16296  016E16  A4D8               	btfss	status,2,c
 16297  016E18  D008               	goto	l6963
 16298                           
 16299                           ;stkvar	_ff2 @ sp[(0)+-8]
 16300  016E1A  0EF8               	movlw	-8
 16301  016E1C  6AE3               	clrf	plusw1,c
 16302  016E1E  0EF9               	movlw	-7
 16303  016E20  6AE3               	clrf	plusw1,c
 16304  016E22  0EFA               	movlw	-6
 16305  016E24  6AE3               	clrf	plusw1,c
 16306  016E26  0EFB               	movlw	-5
 16307  016E28  6AE3               	clrf	plusw1,c
 16308  016E2A                     l6963:
 16309                           
 16310                           ;stkvar	_ff2 @ sp[(0)+-8]
 16311                           ;stkvar	_ff1 @ sp[(0)+-4]
 16312  016E2A  50E1               	movf	fsr1l,w,c
 16313  016E2C  0FFC               	addlw	-4
 16314  016E2E  6ED9               	movwf	fsr2l,c
 16315  016E30  50E2               	movf	fsr1h,w,c
 16316  016E32  6EDA               	movwf	fsr2h,c
 16317  016E34  0EFF               	movlw	255
 16318  016E36  22DA               	addwfc	fsr2h,f,c
 16319  016E38  0EF8               	movlw	-8
 16320  016E3A  50E3               	movf	plusw1,w,c
 16321  016E3C  18DE               	xorwf	postinc2,w,c
 16322  016E3E  E10D               	bnz	u6130
 16323  016E40  0EF9               	movlw	-7
 16324  016E42  50E3               	movf	plusw1,w,c
 16325  016E44  18DE               	xorwf	postinc2,w,c
 16326  016E46  E109               	bnz	u6130
 16327  016E48  0EFA               	movlw	-6
 16328  016E4A  50E3               	movf	plusw1,w,c
 16329  016E4C  18DE               	xorwf	postinc2,w,c
 16330  016E4E  E105               	bnz	u6130
 16331  016E50  0EFB               	movlw	-5
 16332  016E52  50E3               	movf	plusw1,w,c
 16333  016E54  18DE               	xorwf	postinc2,w,c
 16334  016E56  B4D8               	btfsc	status,2,c
 16335  016E58  D002               	goto	l6967
 16336  016E5A                     u6130:
 16337  016E5A  9032               	bcf	btemp& (0+255),0,c
 16338  016E5C  D001               	goto	l2299
 16339  016E5E                     l6967:
 16340  016E5E  8032               	bsf	btemp& (0+255),0,c
 16341  016E60                     l2299:
 16342                           
 16343                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16344  016E60  0EF8               	movlw	248
 16345  016E62  26E1               	addwf	fsr1l,f,c
 16346  016E64  0EFF               	movlw	255
 16347  016E66  22E2               	addwfc	fsr1h,f,c
 16348  016E68  0012               	return		;funcret
 16349  016E6A                     __end_of___fleq:
 16350                           	opt callstack 0
 16351                           
 16352 ;; *************** function ___fldiv *****************
 16353 ;; Defined at:
 16354 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16355 ;; Parameters:    Size  Location     Type
 16356 ;;  b               4  [STACK] unsigned char 
 16357 ;;  a               4  [STACK] unsigned char 
 16358 ;; Auto vars:     Size  Location     Type
 16359 ;;  grs             4  [STACK] unsigned long 
 16360 ;;  rem             4  [STACK] unsigned long 
 16361 ;;  new_exp         2  [STACK] short 
 16362 ;;  aexp            1  [STACK] unsigned char 
 16363 ;;  bexp            1  [STACK] unsigned char 
 16364 ;;  sign            1  [STACK] unsigned char 
 16365 ;; Return value:  Size  Location     Type
 16366 ;;                  4  [STACK] unsigned char 
 16367 ;; Registers used:
 16368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16369 ;; Tracked objects:
 16370 ;;		On entry : 0/39
 16371 ;;		On exit  : 0/0
 16372 ;;		Unchanged: 0/0
 16373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16378 ;;Total ram usage:        0 bytes
 16379 ;; Hardware stack levels used:    1
 16380 ;; Hardware stack levels required when called:    6
 16381 ;; This function calls:
 16382 ;;		Nothing
 16383 ;; This function is called by:
 16384 ;;		_conv_raw_result
 16385 ;;		_efgtoa
 16386 ;; This function uses a reentrant model
 16387 ;;
 16388                           
 16389                           	psect	text58
 16390  0132EE                     __ptext58:
 16391                           	opt callstack 0
 16392  0132EE                     ___fldiv:
 16393                           	opt callstack 0
 16394                           
 16395                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16396  0132EE  0E0D               	movlw	13
 16397  0132F0  26E1               	addwf	fsr1l,f,c
 16398  0132F2  0E00               	movlw	0
 16399  0132F4  22E2               	addwfc	fsr1h,f,c
 16400                           
 16401                           ;stkvar	_b @ sp[(-13)+-4]
 16402                           
 16403                           ;incstack = 0
 16404  0132F6  0EF2               	movlw	242
 16405  0132F8  24E1               	addwf	fsr1l,w,c
 16406  0132FA  6ED9               	movwf	fsr2l,c
 16407  0132FC  0EFF               	movlw	255
 16408  0132FE  20E2               	addwfc	fsr1h,w,c
 16409  013300  6EDA               	movwf	fsr2h,c
 16410  013302  50DF               	movf	indf2,w,c
 16411  013304  6E3D               	movwf	(btemp+11)^0,c
 16412  013306  0E80               	movlw	128
 16413  013308  163D               	andwf	(btemp+11)^0,f,c
 16414                           
 16415                           ;stkvar	_sign @ sp[(-13)+12]
 16416  01330A  0EFF               	movlw	-1
 16417  01330C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16418                           
 16419                           ;stkvar	_b @ sp[(-13)+-4]
 16420  013312  0EF2               	movlw	242
 16421  013314  24E1               	addwf	fsr1l,w,c
 16422  013316  6ED9               	movwf	fsr2l,c
 16423  013318  0EFF               	movlw	255
 16424  01331A  20E2               	addwfc	fsr1h,w,c
 16425  01331C  6EDA               	movwf	fsr2h,c
 16426  01331E  50DF               	movf	indf2,w,c
 16427  013320  6E3D               	movwf	(btemp+11)^0,c
 16428  013322  90D8               	bcf	status,0,c
 16429  013324  343D               	rlcf	(btemp+11)^0,w,c
 16430  013326  6E3C               	movwf	(btemp+10)^0,c
 16431                           
 16432                           ;stkvar	_bexp @ sp[(-13)+11]
 16433  013328  0EFE               	movlw	-2
 16434  01332A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16435                           
 16436                           ;stkvar	_b @ sp[(-13)+-4]
 16437  013330  0EF1               	movlw	241
 16438  013332  24E1               	addwf	fsr1l,w,c
 16439  013334  6ED9               	movwf	fsr2l,c
 16440  013336  0EFF               	movlw	255
 16441  013338  20E2               	addwfc	fsr1h,w,c
 16442  01333A  6EDA               	movwf	fsr2h,c
 16443  01333C  AEDF               	btfss	indf2,7,c
 16444  01333E  D002               	goto	l6561
 16445                           
 16446                           ;stkvar	_bexp @ sp[(-13)+11]
 16447  013340  0EFE               	movlw	-2
 16448  013342  80E3               	bsf	plusw1,0,c
 16449  013344                     l6561:
 16450                           
 16451                           ;stkvar	_bexp @ sp[(-13)+11]
 16452  013344  0EFE               	movlw	-2
 16453  013346  50E3               	movf	plusw1,w,c
 16454  013348  B4D8               	btfsc	status,2,c
 16455  01334A  D027               	goto	l6571
 16456                           
 16457                           ;stkvar	_bexp @ sp[(-13)+11]
 16458  01334C  0EFE               	movlw	-2
 16459  01334E  28E3               	incf	plusw1,w,c
 16460  013350  A4D8               	btfss	status,2,c
 16461  013352  D018               	goto	l6567
 16462  013354  0E00               	movlw	0
 16463  013356  6E3A               	movwf	(btemp+8)^0,c
 16464  013358  0E00               	movlw	0
 16465  01335A  6E3B               	movwf	(btemp+9)^0,c
 16466  01335C  0E00               	movlw	0
 16467  01335E  6E3C               	movwf	(btemp+10)^0,c
 16468  013360  0E00               	movlw	0
 16469  013362  6E3D               	movwf	(btemp+11)^0,c
 16470                           
 16471                           ;stkvar	_b @ sp[(-13)+-4]
 16472  013364  0EEF               	movlw	-17
 16473  013366  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16474  01336C  0EF0               	movlw	-16
 16475  01336E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16476  013374  0EF1               	movlw	-15
 16477  013376  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16478  01337C  0EF2               	movlw	-14
 16479  01337E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16480  013384                     l6567:
 16481                           
 16482                           ;stkvar	_b @ sp[(-13)+-4]
 16483  013384  0EF1               	movlw	-15
 16484  013386  8EE3               	bsf	plusw1,7,c
 16485                           
 16486                           ;stkvar	_b @ sp[(-13)+-4]
 16487  013388  0EF2               	movlw	242
 16488  01338A  24E1               	addwf	fsr1l,w,c
 16489  01338C  6ED9               	movwf	fsr2l,c
 16490  01338E  0EFF               	movlw	255
 16491  013390  20E2               	addwfc	fsr1h,w,c
 16492  013392  6EDA               	movwf	fsr2h,c
 16493  013394  0E00               	movlw	0
 16494  013396  6EDF               	movwf	indf2,c
 16495  013398  D018               	goto	l6573
 16496  01339A                     l6571:
 16497  01339A  0E00               	movlw	0
 16498  01339C  6E3A               	movwf	(btemp+8)^0,c
 16499  01339E  0E00               	movlw	0
 16500  0133A0  6E3B               	movwf	(btemp+9)^0,c
 16501  0133A2  0E00               	movlw	0
 16502  0133A4  6E3C               	movwf	(btemp+10)^0,c
 16503  0133A6  0E00               	movlw	0
 16504  0133A8  6E3D               	movwf	(btemp+11)^0,c
 16505                           
 16506                           ;stkvar	_b @ sp[(-13)+-4]
 16507  0133AA  0EEF               	movlw	-17
 16508  0133AC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16509  0133B2  0EF0               	movlw	-16
 16510  0133B4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16511  0133BA  0EF1               	movlw	-15
 16512  0133BC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16513  0133C2  0EF2               	movlw	-14
 16514  0133C4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16515  0133CA                     l6573:
 16516                           
 16517                           ;stkvar	_a @ sp[(-13)+-8]
 16518  0133CA  0EEE               	movlw	238
 16519  0133CC  24E1               	addwf	fsr1l,w,c
 16520  0133CE  6ED9               	movwf	fsr2l,c
 16521  0133D0  0EFF               	movlw	255
 16522  0133D2  20E2               	addwfc	fsr1h,w,c
 16523  0133D4  6EDA               	movwf	fsr2h,c
 16524  0133D6  50DF               	movf	indf2,w,c
 16525  0133D8  6E3D               	movwf	(btemp+11)^0,c
 16526  0133DA  0E80               	movlw	128
 16527  0133DC  163D               	andwf	(btemp+11)^0,f,c
 16528                           
 16529                           ;stkvar	_sign @ sp[(-13)+12]
 16530  0133DE  50E1               	movf	fsr1l,w,c
 16531  0133E0  0FFF               	addlw	-1
 16532  0133E2  6ED9               	movwf	fsr2l,c
 16533  0133E4  50E2               	movf	fsr1h,w,c
 16534  0133E6  6EDA               	movwf	fsr2h,c
 16535  0133E8  0EFF               	movlw	255
 16536  0133EA  22DA               	addwfc	fsr2h,f,c
 16537  0133EC  503D               	movf	(btemp+11)^0,w,c
 16538  0133EE  1ADF               	xorwf	indf2,f,c
 16539                           
 16540                           ;stkvar	_a @ sp[(-13)+-8]
 16541  0133F0  0EEE               	movlw	238
 16542  0133F2  24E1               	addwf	fsr1l,w,c
 16543  0133F4  6ED9               	movwf	fsr2l,c
 16544  0133F6  0EFF               	movlw	255
 16545  0133F8  20E2               	addwfc	fsr1h,w,c
 16546  0133FA  6EDA               	movwf	fsr2h,c
 16547  0133FC  50DF               	movf	indf2,w,c
 16548  0133FE  6E3D               	movwf	(btemp+11)^0,c
 16549  013400  90D8               	bcf	status,0,c
 16550  013402  343D               	rlcf	(btemp+11)^0,w,c
 16551  013404  6E3C               	movwf	(btemp+10)^0,c
 16552                           
 16553                           ;stkvar	_aexp @ sp[(-13)+10]
 16554  013406  0EFD               	movlw	-3
 16555  013408  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16556                           
 16557                           ;stkvar	_a @ sp[(-13)+-8]
 16558  01340E  0EED               	movlw	237
 16559  013410  24E1               	addwf	fsr1l,w,c
 16560  013412  6ED9               	movwf	fsr2l,c
 16561  013414  0EFF               	movlw	255
 16562  013416  20E2               	addwfc	fsr1h,w,c
 16563  013418  6EDA               	movwf	fsr2h,c
 16564  01341A  AEDF               	btfss	indf2,7,c
 16565  01341C  D002               	goto	l6581
 16566                           
 16567                           ;stkvar	_aexp @ sp[(-13)+10]
 16568  01341E  0EFD               	movlw	-3
 16569  013420  80E3               	bsf	plusw1,0,c
 16570  013422                     l6581:
 16571                           
 16572                           ;stkvar	_aexp @ sp[(-13)+10]
 16573  013422  0EFD               	movlw	-3
 16574  013424  50E3               	movf	plusw1,w,c
 16575  013426  B4D8               	btfsc	status,2,c
 16576  013428  D027               	goto	l6591
 16577                           
 16578                           ;stkvar	_aexp @ sp[(-13)+10]
 16579  01342A  0EFD               	movlw	-3
 16580  01342C  28E3               	incf	plusw1,w,c
 16581  01342E  A4D8               	btfss	status,2,c
 16582  013430  D018               	goto	l6587
 16583  013432  0E00               	movlw	0
 16584  013434  6E3A               	movwf	(btemp+8)^0,c
 16585  013436  0E00               	movlw	0
 16586  013438  6E3B               	movwf	(btemp+9)^0,c
 16587  01343A  0E00               	movlw	0
 16588  01343C  6E3C               	movwf	(btemp+10)^0,c
 16589  01343E  0E00               	movlw	0
 16590  013440  6E3D               	movwf	(btemp+11)^0,c
 16591                           
 16592                           ;stkvar	_a @ sp[(-13)+-8]
 16593  013442  0EEB               	movlw	-21
 16594  013444  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16595  01344A  0EEC               	movlw	-20
 16596  01344C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16597  013452  0EED               	movlw	-19
 16598  013454  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16599  01345A  0EEE               	movlw	-18
 16600  01345C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16601  013462                     l6587:
 16602                           
 16603                           ;stkvar	_a @ sp[(-13)+-8]
 16604  013462  0EED               	movlw	-19
 16605  013464  8EE3               	bsf	plusw1,7,c
 16606                           
 16607                           ;stkvar	_a @ sp[(-13)+-8]
 16608  013466  0EEE               	movlw	238
 16609  013468  24E1               	addwf	fsr1l,w,c
 16610  01346A  6ED9               	movwf	fsr2l,c
 16611  01346C  0EFF               	movlw	255
 16612  01346E  20E2               	addwfc	fsr1h,w,c
 16613  013470  6EDA               	movwf	fsr2h,c
 16614  013472  0E00               	movlw	0
 16615  013474  6EDF               	movwf	indf2,c
 16616  013476  D018               	goto	l6593
 16617  013478                     l6591:
 16618  013478  0E00               	movlw	0
 16619  01347A  6E3A               	movwf	(btemp+8)^0,c
 16620  01347C  0E00               	movlw	0
 16621  01347E  6E3B               	movwf	(btemp+9)^0,c
 16622  013480  0E00               	movlw	0
 16623  013482  6E3C               	movwf	(btemp+10)^0,c
 16624  013484  0E00               	movlw	0
 16625  013486  6E3D               	movwf	(btemp+11)^0,c
 16626                           
 16627                           ;stkvar	_a @ sp[(-13)+-8]
 16628  013488  0EEB               	movlw	-21
 16629  01348A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16630  013490  0EEC               	movlw	-20
 16631  013492  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16632  013498  0EED               	movlw	-19
 16633  01349A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16634  0134A0  0EEE               	movlw	-18
 16635  0134A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16636  0134A8                     l6593:
 16637                           
 16638                           ;stkvar	_a @ sp[(-13)+-8]
 16639  0134A8  0EEB               	movlw	-21
 16640  0134AA  50E3               	movf	plusw1,w,c
 16641  0134AC  E139               	bnz	l6605
 16642  0134AE  0EEC               	movlw	-20
 16643  0134B0  50E3               	movf	plusw1,w,c
 16644  0134B2  E136               	bnz	l6605
 16645  0134B4  0EED               	movlw	-19
 16646  0134B6  50E3               	movf	plusw1,w,c
 16647  0134B8  E133               	bnz	l6605
 16648  0134BA  0EEE               	movlw	-18
 16649  0134BC  50E3               	movf	plusw1,w,c
 16650  0134BE  A4D8               	btfss	status,2,c
 16651  0134C0  D02F               	goto	l6605
 16652                           
 16653                           ;stkvar	_b @ sp[(-13)+-4]
 16654  0134C2  0EEF               	movlw	-17
 16655  0134C4  6AE3               	clrf	plusw1,c
 16656  0134C6  0EF0               	movlw	-16
 16657  0134C8  6AE3               	clrf	plusw1,c
 16658  0134CA  0EF1               	movlw	-15
 16659  0134CC  6AE3               	clrf	plusw1,c
 16660  0134CE  0EF2               	movlw	-14
 16661  0134D0  6AE3               	clrf	plusw1,c
 16662                           
 16663                           ;stkvar	_b @ sp[(-13)+-4]
 16664  0134D2  0EF1               	movlw	241
 16665  0134D4  24E1               	addwf	fsr1l,w,c
 16666  0134D6  6ED9               	movwf	fsr2l,c
 16667  0134D8  0EFF               	movlw	255
 16668  0134DA  20E2               	addwfc	fsr1h,w,c
 16669  0134DC  6EDA               	movwf	fsr2h,c
 16670  0134DE  0E80               	movlw	128
 16671  0134E0  12DE               	iorwf	postinc2,f,c
 16672  0134E2  0E7F               	movlw	127
 16673  0134E4  12DD               	iorwf	postdec2,f,c
 16674  0134E6                     l6599:
 16675                           
 16676                           ;stkvar	_sign @ sp[(-13)+12]
 16677  0134E6  0EFF               	movlw	-1
 16678  0134E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16679                           
 16680                           ;stkvar	_b @ sp[(-13)+-4]
 16681  0134EE  0EF2               	movlw	242
 16682  0134F0  24E1               	addwf	fsr1l,w,c
 16683  0134F2  6ED9               	movwf	fsr2l,c
 16684  0134F4  0EFF               	movlw	255
 16685  0134F6  20E2               	addwfc	fsr1h,w,c
 16686  0134F8  6EDA               	movwf	fsr2h,c
 16687  0134FA  503D               	movf	(btemp+11)^0,w,c
 16688  0134FC  12DF               	iorwf	indf2,f,c
 16689                           
 16690                           ;stkvar	_b @ sp[(-13)+-4]
 16691  0134FE  0EEF               	movlw	-17
 16692  013500  006F FF8C  F032    	movff	plusw1,btemp
 16693  013506  0EF0               	movlw	-16
 16694  013508  006F FF8C  F033    	movff	plusw1,btemp+1
 16695  01350E  0EF1               	movlw	-15
 16696  013510  006F FF8C  F034    	movff	plusw1,btemp+2
 16697  013516  0EF2               	movlw	-14
 16698  013518  006F FF8C  F035    	movff	plusw1,btemp+3
 16699  01351E  D19F               	goto	l2622
 16700  013520                     l6605:
 16701                           
 16702                           ;stkvar	_bexp @ sp[(-13)+11]
 16703  013520  0EFE               	movlw	-2
 16704  013522  50E3               	movf	plusw1,w,c
 16705  013524  A4D8               	btfss	status,2,c
 16706  013526  D009               	goto	l6613
 16707  013528  0E00               	movlw	0
 16708  01352A  6E32               	movwf	btemp^0,c
 16709  01352C  0E00               	movlw	0
 16710  01352E  6E33               	movwf	(btemp+1)^0,c
 16711  013530  0E00               	movlw	0
 16712  013532  6E34               	movwf	(btemp+2)^0,c
 16713  013534  0E00               	movlw	0
 16714  013536  6E35               	movwf	(btemp+3)^0,c
 16715  013538  D192               	goto	l2622
 16716  01353A                     l6613:
 16717                           
 16718                           ;stkvar	_bexp @ sp[(-13)+11]
 16719  01353A  0EFE               	movlw	-2
 16720  01353C  50E3               	movf	plusw1,w,c
 16721  01353E  6E3C               	movwf	(btemp+10)^0,c
 16722  013540  6A3D               	clrf	(btemp+11)^0,c
 16723                           
 16724                           ;stkvar	_aexp @ sp[(-13)+10]
 16725  013542  0EFD               	movlw	-3
 16726  013544  50E3               	movf	plusw1,w,c
 16727  013546  5E3C               	subwf	(btemp+10)^0,f,c
 16728  013548  0E00               	movlw	0
 16729  01354A  5A3D               	subwfb	(btemp+11)^0,f,c
 16730  01354C  0E7F               	movlw	127
 16731  01354E  263C               	addwf	(btemp+10)^0,f,c
 16732  013550  0E00               	movlw	0
 16733  013552  223D               	addwfc	(btemp+11)^0,f,c
 16734                           
 16735                           ;stkvar	_new_exp @ sp[(-13)+8]
 16736  013554  0EFB               	movlw	-5
 16737  013556  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16738  01355C  0EFC               	movlw	-4
 16739  01355E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16740                           
 16741                           ;stkvar	_b @ sp[(-13)+-4]
 16742  013564  0EEF               	movlw	-17
 16743  013566  006F FF8C  F03A    	movff	plusw1,btemp+8
 16744  01356C  0EF0               	movlw	-16
 16745  01356E  006F FF8C  F03B    	movff	plusw1,btemp+9
 16746  013574  0EF1               	movlw	-15
 16747  013576  006F FF8C  F03C    	movff	plusw1,btemp+10
 16748  01357C  0EF2               	movlw	-14
 16749  01357E  006F FF8C  F03D    	movff	plusw1,btemp+11
 16750                           
 16751                           ;stkvar	_rem @ sp[(-13)+4]
 16752  013584  0EF7               	movlw	-9
 16753  013586  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16754  01358C  0EF8               	movlw	-8
 16755  01358E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16756  013594  0EF9               	movlw	-7
 16757  013596  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16758  01359C  0EFA               	movlw	-6
 16759  01359E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16760                           
 16761                           ;stkvar	_b @ sp[(-13)+-4]
 16762  0135A4  0EEF               	movlw	-17
 16763  0135A6  6AE3               	clrf	plusw1,c
 16764  0135A8  0EF0               	movlw	-16
 16765  0135AA  6AE3               	clrf	plusw1,c
 16766  0135AC  0EF1               	movlw	-15
 16767  0135AE  6AE3               	clrf	plusw1,c
 16768  0135B0  0EF2               	movlw	-14
 16769  0135B2  6AE3               	clrf	plusw1,c
 16770                           
 16771                           ;stkvar	_grs @ sp[(-13)+0]
 16772  0135B4  0EF3               	movlw	-13
 16773  0135B6  6AE3               	clrf	plusw1,c
 16774  0135B8  0EF4               	movlw	-12
 16775  0135BA  6AE3               	clrf	plusw1,c
 16776  0135BC  0EF5               	movlw	-11
 16777  0135BE  6AE3               	clrf	plusw1,c
 16778  0135C0  0EF6               	movlw	-10
 16779  0135C2  6AE3               	clrf	plusw1,c
 16780                           
 16781                           ;stkvar	_aexp @ sp[(-13)+10]
 16782  0135C4  0EFD               	movlw	-3
 16783  0135C6  6AE3               	clrf	plusw1,c
 16784  0135C8  D050               	goto	l6641
 16785  0135CA                     l6623:
 16786                           
 16787                           ;stkvar	_aexp @ sp[(-13)+10]
 16788  0135CA  0EFD               	movlw	-3
 16789  0135CC  50E3               	movf	plusw1,w,c
 16790  0135CE  B4D8               	btfsc	status,2,c
 16791  0135D0  D020               	goto	l6633
 16792                           
 16793                           ;stkvar	_rem @ sp[(-13)+4]
 16794  0135D2  90D8               	bcf	status,0,c
 16795  0135D4  0EF7               	movlw	-9
 16796  0135D6  36E3               	rlcf	plusw1,f,c
 16797  0135D8  0EF8               	movlw	-8
 16798  0135DA  36E3               	rlcf	plusw1,f,c
 16799  0135DC  0EF9               	movlw	-7
 16800  0135DE  36E3               	rlcf	plusw1,f,c
 16801  0135E0  0EFA               	movlw	-6
 16802  0135E2  36E3               	rlcf	plusw1,f,c
 16803                           
 16804                           ;stkvar	_b @ sp[(-13)+-4]
 16805  0135E4  90D8               	bcf	status,0,c
 16806  0135E6  0EEF               	movlw	-17
 16807  0135E8  36E3               	rlcf	plusw1,f,c
 16808  0135EA  0EF0               	movlw	-16
 16809  0135EC  36E3               	rlcf	plusw1,f,c
 16810  0135EE  0EF1               	movlw	-15
 16811  0135F0  36E3               	rlcf	plusw1,f,c
 16812  0135F2  0EF2               	movlw	-14
 16813  0135F4  36E3               	rlcf	plusw1,f,c
 16814                           
 16815                           ;stkvar	_grs @ sp[(-13)+0]
 16816  0135F6  0EF6               	movlw	-10
 16817  0135F8  AEE3               	btfss	plusw1,7,c
 16818  0135FA  D002               	goto	l6631
 16819                           
 16820                           ;stkvar	_b @ sp[(-13)+-4]
 16821  0135FC  0EEF               	movlw	-17
 16822  0135FE  80E3               	bsf	plusw1,0,c
 16823  013600                     l6631:
 16824                           
 16825                           ;stkvar	_grs @ sp[(-13)+0]
 16826  013600  90D8               	bcf	status,0,c
 16827  013602  0EF3               	movlw	-13
 16828  013604  36E3               	rlcf	plusw1,f,c
 16829  013606  0EF4               	movlw	-12
 16830  013608  36E3               	rlcf	plusw1,f,c
 16831  01360A  0EF5               	movlw	-11
 16832  01360C  36E3               	rlcf	plusw1,f,c
 16833  01360E  0EF6               	movlw	-10
 16834  013610  36E3               	rlcf	plusw1,f,c
 16835  013612                     l6633:
 16836                           
 16837                           ;stkvar	_a @ sp[(-13)+-8]
 16838                           ;stkvar	_rem @ sp[(-13)+4]
 16839  013612  50E1               	movf	fsr1l,w,c
 16840  013614  0FF7               	addlw	-9
 16841  013616  6ED9               	movwf	fsr2l,c
 16842  013618  50E2               	movf	fsr1h,w,c
 16843  01361A  6EDA               	movwf	fsr2h,c
 16844  01361C  0EFF               	movlw	255
 16845  01361E  22DA               	addwfc	fsr2h,f,c
 16846  013620  0EEB               	movlw	-21
 16847  013622  50E3               	movf	plusw1,w,c
 16848  013624  5CDE               	subwf	postinc2,w,c
 16849  013626  0EEC               	movlw	-20
 16850  013628  50E3               	movf	plusw1,w,c
 16851  01362A  58DE               	subwfb	postinc2,w,c
 16852  01362C  0EED               	movlw	-19
 16853  01362E  50E3               	movf	plusw1,w,c
 16854  013630  58DE               	subwfb	postinc2,w,c
 16855  013632  0EEE               	movlw	-18
 16856  013634  50E3               	movf	plusw1,w,c
 16857  013636  58DE               	subwfb	postinc2,w,c
 16858  013638  A0D8               	btfss	status,0,c
 16859  01363A  D015               	goto	l6639
 16860                           
 16861                           ;stkvar	_grs @ sp[(-13)+0]
 16862  01363C  0EF6               	movlw	-10
 16863  01363E  8CE3               	bsf	plusw1,6,c
 16864                           
 16865                           ;stkvar	_a @ sp[(-13)+-8]
 16866                           ;stkvar	_rem @ sp[(-13)+4]
 16867  013640  50E1               	movf	fsr1l,w,c
 16868  013642  0FF7               	addlw	-9
 16869  013644  6ED9               	movwf	fsr2l,c
 16870  013646  50E2               	movf	fsr1h,w,c
 16871  013648  6EDA               	movwf	fsr2h,c
 16872  01364A  0EFF               	movlw	255
 16873  01364C  22DA               	addwfc	fsr2h,f,c
 16874  01364E  0EEB               	movlw	-21
 16875  013650  50E3               	movf	plusw1,w,c
 16876  013652  5EDE               	subwf	postinc2,f,c
 16877  013654  0EEC               	movlw	-20
 16878  013656  50E3               	movf	plusw1,w,c
 16879  013658  5ADE               	subwfb	postinc2,f,c
 16880  01365A  0EED               	movlw	-19
 16881  01365C  50E3               	movf	plusw1,w,c
 16882  01365E  5ADE               	subwfb	postinc2,f,c
 16883  013660  0EEE               	movlw	-18
 16884  013662  50E3               	movf	plusw1,w,c
 16885  013664  5ADE               	subwfb	postinc2,f,c
 16886  013666                     l6639:
 16887                           
 16888                           ;stkvar	_aexp @ sp[(-13)+10]
 16889  013666  0EFD               	movlw	-3
 16890  013668  2AE3               	incf	plusw1,f,c
 16891  01366A                     l6641:
 16892                           
 16893                           ;stkvar	_aexp @ sp[(-13)+10]
 16894  01366A  0EFD               	movlw	-3
 16895  01366C  006F FF8C  F032    	movff	plusw1,btemp
 16896  013672  0E19               	movlw	25
 16897  013674  6432               	cpfsgt	btemp^0,c
 16898  013676  D7A9               	goto	l6623
 16899                           
 16900                           ;stkvar	_rem @ sp[(-13)+4]
 16901  013678  0EF7               	movlw	-9
 16902  01367A  50E3               	movf	plusw1,w,c
 16903  01367C  E10A               	bnz	u5630
 16904  01367E  0EF8               	movlw	-8
 16905  013680  50E3               	movf	plusw1,w,c
 16906  013682  E107               	bnz	u5630
 16907  013684  0EF9               	movlw	-7
 16908  013686  50E3               	movf	plusw1,w,c
 16909  013688  E104               	bnz	u5630
 16910  01368A  0EFA               	movlw	-6
 16911  01368C  50E3               	movf	plusw1,w,c
 16912  01368E  B4D8               	btfsc	status,2,c
 16913  013690  D024               	goto	l6657
 16914  013692                     u5630:
 16915                           
 16916                           ;stkvar	_grs @ sp[(-13)+0]
 16917  013692  0EF3               	movlw	-13
 16918  013694  80E3               	bsf	plusw1,0,c
 16919  013696  D021               	goto	l6657
 16920  013698                     l6647:
 16921                           
 16922                           ;stkvar	_b @ sp[(-13)+-4]
 16923  013698  90D8               	bcf	status,0,c
 16924  01369A  0EEF               	movlw	-17
 16925  01369C  36E3               	rlcf	plusw1,f,c
 16926  01369E  0EF0               	movlw	-16
 16927  0136A0  36E3               	rlcf	plusw1,f,c
 16928  0136A2  0EF1               	movlw	-15
 16929  0136A4  36E3               	rlcf	plusw1,f,c
 16930  0136A6  0EF2               	movlw	-14
 16931  0136A8  36E3               	rlcf	plusw1,f,c
 16932                           
 16933                           ;stkvar	_grs @ sp[(-13)+0]
 16934  0136AA  0EF6               	movlw	-10
 16935  0136AC  AEE3               	btfss	plusw1,7,c
 16936  0136AE  D002               	goto	l6653
 16937                           
 16938                           ;stkvar	_b @ sp[(-13)+-4]
 16939  0136B0  0EEF               	movlw	-17
 16940  0136B2  80E3               	bsf	plusw1,0,c
 16941  0136B4                     l6653:
 16942                           
 16943                           ;stkvar	_grs @ sp[(-13)+0]
 16944  0136B4  90D8               	bcf	status,0,c
 16945  0136B6  0EF3               	movlw	-13
 16946  0136B8  36E3               	rlcf	plusw1,f,c
 16947  0136BA  0EF4               	movlw	-12
 16948  0136BC  36E3               	rlcf	plusw1,f,c
 16949  0136BE  0EF5               	movlw	-11
 16950  0136C0  36E3               	rlcf	plusw1,f,c
 16951  0136C2  0EF6               	movlw	-10
 16952  0136C4  36E3               	rlcf	plusw1,f,c
 16953                           
 16954                           ;stkvar	_new_exp @ sp[(-13)+8]
 16955  0136C6  50E1               	movf	fsr1l,w,c
 16956  0136C8  0FFB               	addlw	-5
 16957  0136CA  6ED9               	movwf	fsr2l,c
 16958  0136CC  50E2               	movf	fsr1h,w,c
 16959  0136CE  6EDA               	movwf	fsr2h,c
 16960  0136D0  0EFF               	movlw	255
 16961  0136D2  22DA               	addwfc	fsr2h,f,c
 16962  0136D4  06DE               	decf	postinc2,f,c
 16963  0136D6  0E00               	movlw	0
 16964  0136D8  5ADD               	subwfb	postdec2,f,c
 16965  0136DA                     l6657:
 16966                           
 16967                           ;stkvar	_b @ sp[(-13)+-4]
 16968  0136DA  0EF1               	movlw	-15
 16969  0136DC  AEE3               	btfss	plusw1,7,c
 16970  0136DE  D7DC               	goto	l6647
 16971                           
 16972                           ;stkvar	_aexp @ sp[(-13)+10]
 16973  0136E0  0EFD               	movlw	-3
 16974  0136E2  6AE3               	clrf	plusw1,c
 16975                           
 16976                           ;stkvar	_grs @ sp[(-13)+0]
 16977  0136E4  0EF6               	movlw	-10
 16978  0136E6  AEE3               	btfss	plusw1,7,c
 16979  0136E8  D020               	goto	l6671
 16980                           
 16981                           ;stkvar	_grs @ sp[(-13)+0]
 16982  0136EA  50E1               	movf	fsr1l,w,c
 16983  0136EC  0FF3               	addlw	-13
 16984  0136EE  6ED9               	movwf	fsr2l,c
 16985  0136F0  50E2               	movf	fsr1h,w,c
 16986  0136F2  6EDA               	movwf	fsr2h,c
 16987  0136F4  0EFF               	movlw	255
 16988  0136F6  22DA               	addwfc	fsr2h,f,c
 16989  0136F8  0EFF               	movlw	255
 16990  0136FA  14DE               	andwf	postinc2,w,c
 16991  0136FC  6E3A               	movwf	(btemp+8)^0,c
 16992  0136FE  0EFF               	movlw	255
 16993  013700  14DE               	andwf	postinc2,w,c
 16994  013702  6E3B               	movwf	(btemp+9)^0,c
 16995  013704  0EFF               	movlw	255
 16996  013706  14DE               	andwf	postinc2,w,c
 16997  013708  6E3C               	movwf	(btemp+10)^0,c
 16998  01370A  0E7F               	movlw	127
 16999  01370C  14DE               	andwf	postinc2,w,c
 17000  01370E  6E3D               	movwf	(btemp+11)^0,c
 17001  013710  503A               	movf	(btemp+8)^0,w,c
 17002  013712  103B               	iorwf	(btemp+9)^0,w,c
 17003  013714  103C               	iorwf	(btemp+10)^0,w,c
 17004  013716  103D               	iorwf	(btemp+11)^0,w,c
 17005  013718  B4D8               	btfsc	status,2,c
 17006  01371A  D004               	goto	l6667
 17007  01371C                     u5670:
 17008                           
 17009                           ;stkvar	_aexp @ sp[(-13)+10]
 17010  01371C  0EFD               	movlw	-3
 17011  01371E  6AE3               	clrf	plusw1,c
 17012  013720  2AE3               	incf	plusw1,f,c
 17013  013722  D003               	goto	l6671
 17014  013724                     l6667:
 17015                           
 17016                           ;stkvar	_b @ sp[(-13)+-4]
 17017  013724  0EEF               	movlw	-17
 17018  013726  B0E3               	btfsc	plusw1,0,c
 17019  013728  D7F9               	goto	u5670
 17020  01372A                     l6671:
 17021                           
 17022                           ;stkvar	_aexp @ sp[(-13)+10]
 17023  01372A  0EFD               	movlw	-3
 17024  01372C  50E3               	movf	plusw1,w,c
 17025  01372E  B4D8               	btfsc	status,2,c
 17026  013730  D036               	goto	l6681
 17027                           
 17028                           ;stkvar	_b @ sp[(-13)+-4]
 17029  013732  50E1               	movf	fsr1l,w,c
 17030  013734  0FEF               	addlw	-17
 17031  013736  6ED9               	movwf	fsr2l,c
 17032  013738  50E2               	movf	fsr1h,w,c
 17033  01373A  6EDA               	movwf	fsr2h,c
 17034  01373C  0EFF               	movlw	255
 17035  01373E  22DA               	addwfc	fsr2h,f,c
 17036  013740  2ADE               	incf	postinc2,f,c
 17037  013742  0E00               	movlw	0
 17038  013744  22DE               	addwfc	postinc2,f,c
 17039  013746  22DE               	addwfc	postinc2,f,c
 17040  013748  22DE               	addwfc	postinc2,f,c
 17041                           
 17042                           ;stkvar	_b @ sp[(-13)+-4]
 17043  01374A  0EF2               	movlw	-14
 17044  01374C  A0E3               	btfss	plusw1,0,c
 17045  01374E  D027               	goto	l6681
 17046  013750  0E01               	movlw	1
 17047  013752  6E3D               	movwf	(btemp+11)^0,c
 17048                           
 17049                           ;stkvar	_b @ sp[(-13)+-4]
 17050  013754  50E1               	movf	fsr1l,w,c
 17051  013756  0FEF               	addlw	-17
 17052  013758  6ED9               	movwf	fsr2l,c
 17053  01375A  50E2               	movf	fsr1h,w,c
 17054  01375C  6EDA               	movwf	fsr2h,c
 17055  01375E  0EFF               	movlw	255
 17056  013760  22DA               	addwfc	fsr2h,f,c
 17057  013762  283D               	incf	(btemp+11)^0,w,c
 17058  013764  52DE               	movf	postinc2,f,c
 17059  013766  D008               	goto	u5710
 17060  013768                     u5715:
 17061  013768  52DE               	movf	postinc2,f,c
 17062  01376A  90D8               	bcf	status,0,c
 17063  01376C  BEDC               	btfsc	preinc2,7,c
 17064  01376E  80D8               	bsf	status,0,c
 17065  013770  32DD               	rrcf	postdec2,f,c
 17066  013772  32DD               	rrcf	postdec2,f,c
 17067  013774  32DD               	rrcf	postdec2,f,c
 17068  013776  32DE               	rrcf	postinc2,f,c
 17069  013778                     u5710:
 17070  013778  2EE8               	decfsz	wreg,f,c
 17071  01377A  D7F6               	goto	u5715
 17072                           
 17073                           ;stkvar	_new_exp @ sp[(-13)+8]
 17074  01377C  0EFB               	movlw	-5
 17075  01377E  50E3               	movf	plusw1,w,c
 17076  013780  0F01               	addlw	1
 17077  013782  6E32               	movwf	btemp^0,c
 17078  013784  0EFB               	movlw	-5
 17079  013786  0060  F0CB  FFE3   	movff	btemp,plusw1
 17080  01378C  6A32               	clrf	btemp^0,c
 17081  01378E  0EFC               	movlw	-4
 17082  013790  50E3               	movf	plusw1,w,c
 17083  013792  2032               	addwfc	btemp^0,w,c
 17084  013794  6E32               	movwf	btemp^0,c
 17085  013796  0EFC               	movlw	-4
 17086  013798  0060  F0CB  FFE3   	movff	btemp,plusw1
 17087  01379E                     l6681:
 17088                           
 17089                           ;stkvar	_new_exp @ sp[(-13)+8]
 17090  01379E  0EFC               	movlw	-4
 17091  0137A0  BEE3               	btfsc	plusw1,7,c
 17092  0137A2  D01B               	goto	l6687
 17093  0137A4  0EFC               	movlw	-4
 17094  0137A6  50E3               	movf	plusw1,w,c
 17095  0137A8  E104               	bnz	u5720
 17096  0137AA  0EFB               	movlw	-5
 17097  0137AC  28E3               	incf	plusw1,w,c
 17098  0137AE  A0D8               	btfss	status,0,c
 17099  0137B0  D014               	goto	l6687
 17100  0137B2                     u5720:
 17101  0137B2  0EFF               	movlw	255
 17102  0137B4  6E3C               	movwf	(btemp+10)^0,c
 17103  0137B6  0E00               	movlw	0
 17104  0137B8  6E3D               	movwf	(btemp+11)^0,c
 17105                           
 17106                           ;stkvar	_new_exp @ sp[(-13)+8]
 17107  0137BA  0EFB               	movlw	-5
 17108  0137BC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17109  0137C2  0EFC               	movlw	-4
 17110  0137C4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17111                           
 17112                           ;stkvar	_b @ sp[(-13)+-4]
 17113  0137CA  0EEF               	movlw	-17
 17114  0137CC  6AE3               	clrf	plusw1,c
 17115  0137CE  0EF0               	movlw	-16
 17116  0137D0  6AE3               	clrf	plusw1,c
 17117  0137D2  0EF1               	movlw	-15
 17118  0137D4  6AE3               	clrf	plusw1,c
 17119  0137D6  0EF2               	movlw	-14
 17120  0137D8  6AE3               	clrf	plusw1,c
 17121  0137DA                     l6687:
 17122                           
 17123                           ;stkvar	_new_exp @ sp[(-13)+8]
 17124  0137DA  0EFC               	movlw	-4
 17125  0137DC  BEE3               	btfsc	plusw1,7,c
 17126  0137DE  D007               	goto	u5730
 17127  0137E0  0EFC               	movlw	-4
 17128  0137E2  50E3               	movf	plusw1,w,c
 17129  0137E4  E112               	bnz	l6693
 17130  0137E6  0EFB               	movlw	-5
 17131  0137E8  04E3               	decf	plusw1,w,c
 17132  0137EA  B0D8               	btfsc	status,0,c
 17133  0137EC  D00E               	goto	l6693
 17134  0137EE                     u5730:
 17135                           
 17136                           ;stkvar	_new_exp @ sp[(-13)+8]
 17137  0137EE  0EFB               	movlw	-5
 17138  0137F0  6AE3               	clrf	plusw1,c
 17139  0137F2  0EFC               	movlw	-4
 17140  0137F4  6AE3               	clrf	plusw1,c
 17141                           
 17142                           ;stkvar	_b @ sp[(-13)+-4]
 17143  0137F6  0EEF               	movlw	-17
 17144  0137F8  6AE3               	clrf	plusw1,c
 17145  0137FA  0EF0               	movlw	-16
 17146  0137FC  6AE3               	clrf	plusw1,c
 17147  0137FE  0EF1               	movlw	-15
 17148  013800  6AE3               	clrf	plusw1,c
 17149  013802  0EF2               	movlw	-14
 17150  013804  6AE3               	clrf	plusw1,c
 17151                           
 17152                           ;stkvar	_sign @ sp[(-13)+12]
 17153  013806  0EFF               	movlw	-1
 17154  013808  6AE3               	clrf	plusw1,c
 17155  01380A                     l6693:
 17156                           
 17157                           ;stkvar	_new_exp @ sp[(-13)+8]
 17158                           ;stkvar	_bexp @ sp[(-13)+11]
 17159  01380A  0EFB               	movlw	-5
 17160  01380C  006F FF8C  F032    	movff	plusw1,btemp
 17161  013812  0EFE               	movlw	-2
 17162  013814  0060  F0CB  FFE3   	movff	btemp,plusw1
 17163                           
 17164                           ;stkvar	_bexp @ sp[(-13)+11]
 17165  01381A  0EFE               	movlw	-2
 17166  01381C  A0E3               	btfss	plusw1,0,c
 17167  01381E  D009               	goto	l6699
 17168                           
 17169                           ;stkvar	_b @ sp[(-13)+-4]
 17170  013820  0EF1               	movlw	241
 17171  013822  24E1               	addwf	fsr1l,w,c
 17172  013824  6ED9               	movwf	fsr2l,c
 17173  013826  0EFF               	movlw	255
 17174  013828  20E2               	addwfc	fsr1h,w,c
 17175  01382A  6EDA               	movwf	fsr2h,c
 17176  01382C  0E00               	movlw	0
 17177  01382E  8EDB               	bsf	plusw2,7,c
 17178  013830  D008               	goto	l6701
 17179  013832                     l6699:
 17180                           
 17181                           ;stkvar	_b @ sp[(-13)+-4]
 17182  013832  0EF1               	movlw	241
 17183  013834  24E1               	addwf	fsr1l,w,c
 17184  013836  6ED9               	movwf	fsr2l,c
 17185  013838  0EFF               	movlw	255
 17186  01383A  20E2               	addwfc	fsr1h,w,c
 17187  01383C  6EDA               	movwf	fsr2h,c
 17188  01383E  0E7F               	movlw	127
 17189  013840  16DF               	andwf	indf2,f,c
 17190  013842                     l6701:
 17191                           
 17192                           ;stkvar	_b @ sp[(-13)+-4]
 17193  013842  0EF2               	movlw	242
 17194  013844  24E1               	addwf	fsr1l,w,c
 17195  013846  6ED9               	movwf	fsr2l,c
 17196  013848  0EFF               	movlw	255
 17197  01384A  20E2               	addwfc	fsr1h,w,c
 17198  01384C  6EDA               	movwf	fsr2h,c
 17199                           
 17200                           ;stkvar	_bexp @ sp[(-13)+11]
 17201  01384E  0EFE               	movlw	-2
 17202  013850  006F FF8C  F03D    	movff	plusw1,btemp+11
 17203  013856  90D8               	bcf	status,0,c
 17204  013858  303D               	rrcf	(btemp+11)^0,w,c
 17205  01385A  6EDF               	movwf	indf2,c
 17206  01385C  D644               	goto	l6599
 17207  01385E                     l2622:
 17208                           
 17209                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17210  01385E  0EEB               	movlw	235
 17211  013860  26E1               	addwf	fsr1l,f,c
 17212  013862  0EFF               	movlw	255
 17213  013864  22E2               	addwfc	fsr1h,f,c
 17214  013866  0012               	return		;funcret
 17215  013868                     __end_of___fldiv:
 17216                           	opt callstack 0
 17217                           
 17218 ;; *************** function ___awmod *****************
 17219 ;; Defined at:
 17220 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17221 ;; Parameters:    Size  Location     Type
 17222 ;;  dividend        2  [STACK] int 
 17223 ;;  divisor         2  [STACK] int 
 17224 ;; Auto vars:     Size  Location     Type
 17225 ;;  sign            1  [STACK] unsigned char 
 17226 ;;  counter         1  [STACK] unsigned char 
 17227 ;; Return value:  Size  Location     Type
 17228 ;;                  2  [STACK] int 
 17229 ;; Registers used:
 17230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17231 ;; Tracked objects:
 17232 ;;		On entry : 0/5
 17233 ;;		On exit  : 0/0
 17234 ;;		Unchanged: 0/0
 17235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17240 ;;Total ram usage:        0 bytes
 17241 ;; Hardware stack levels used:    1
 17242 ;; Hardware stack levels required when called:    6
 17243 ;; This function calls:
 17244 ;;		Nothing
 17245 ;; This function is called by:
 17246 ;;		_efgtoa
 17247 ;; This function uses a reentrant model
 17248 ;;
 17249                           
 17250                           	psect	text59
 17251  0165FA                     __ptext59:
 17252                           	opt callstack 0
 17253  0165FA                     ___awmod:
 17254                           	opt callstack 0
 17255                           
 17256                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17257  0165FA  52E6               	movf	postinc1,f,c
 17258  0165FC  52E6               	movf	postinc1,f,c
 17259                           
 17260                           ;stkvar	_sign @ sp[(-2)+0]
 17261                           
 17262                           ;incstack = 0
 17263  0165FE  0EFE               	movlw	-2
 17264  016600  6AE3               	clrf	plusw1,c
 17265                           
 17266                           ;stkvar	_dividend @ sp[(-2)+-2]
 17267  016602  0EFD               	movlw	-3
 17268  016604  AEE3               	btfss	plusw1,7,c
 17269  016606  D009               	goto	l6925
 17270                           
 17271                           ;stkvar	_dividend @ sp[(-2)+-2]
 17272                           ;stkvar	_dividend @ sp[(-2)+-2]
 17273  016608  0EFC               	movlw	-4
 17274  01660A  6CE3               	negf	plusw1,c
 17275  01660C  0EFD               	movlw	-3
 17276  01660E  1EE3               	comf	plusw1,f,c
 17277  016610  B0D8               	btfsc	status,0,c
 17278  016612  2AE3               	incf	plusw1,f,c
 17279                           
 17280                           ;stkvar	_sign @ sp[(-2)+0]
 17281  016614  0EFE               	movlw	-2
 17282  016616  6AE3               	clrf	plusw1,c
 17283  016618  2AE3               	incf	plusw1,f,c
 17284  01661A                     l6925:
 17285                           
 17286                           ;stkvar	_divisor @ sp[(-2)+-4]
 17287  01661A  0EFB               	movlw	-5
 17288  01661C  AEE3               	btfss	plusw1,7,c
 17289  01661E  D006               	goto	l6929
 17290                           
 17291                           ;stkvar	_divisor @ sp[(-2)+-4]
 17292                           ;stkvar	_divisor @ sp[(-2)+-4]
 17293  016620  0EFA               	movlw	-6
 17294  016622  6CE3               	negf	plusw1,c
 17295  016624  0EFB               	movlw	-5
 17296  016626  1EE3               	comf	plusw1,f,c
 17297  016628  B0D8               	btfsc	status,0,c
 17298  01662A  2AE3               	incf	plusw1,f,c
 17299  01662C                     l6929:
 17300                           
 17301                           ;stkvar	_divisor @ sp[(-2)+-4]
 17302  01662C  0EFA               	movlw	-6
 17303  01662E  006F FF8C  F032    	movff	plusw1,btemp
 17304  016634  0EFB               	movlw	-5
 17305  016636  50E3               	movf	plusw1,w,c
 17306  016638  1032               	iorwf	btemp^0,w,c
 17307  01663A  B4D8               	btfsc	status,2,c
 17308  01663C  D053               	goto	u6090
 17309                           
 17310                           ;stkvar	_counter @ sp[(-2)+1]
 17311  01663E  0EFF               	movlw	-1
 17312  016640  6AE3               	clrf	plusw1,c
 17313  016642  D012               	goto	L14
 17314  016644                     l6933:
 17315                           
 17316                           ;stkvar	_divisor @ sp[(-2)+-4]
 17317  016644  0EFA               	movlw	-6
 17318  016646  50E3               	movf	plusw1,w,c
 17319  016648  90D8               	bcf	status,0,c
 17320  01664A  34E8               	rlcf	wreg,w,c
 17321  01664C  6E32               	movwf	btemp^0,c
 17322  01664E  0EFA               	movlw	-6
 17323  016650  0060  F0CB  FFE3   	movff	btemp,plusw1
 17324  016656  0EFB               	movlw	-5
 17325  016658  50E3               	movf	plusw1,w,c
 17326  01665A  34E8               	rlcf	wreg,w,c
 17327  01665C  6E32               	movwf	btemp^0,c
 17328  01665E  0EFB               	movlw	-5
 17329  016660  0060  F0CB  FFE3   	movff	btemp,plusw1
 17330                           
 17331                           ;stkvar	_counter @ sp[(-2)+1]
 17332  016666  0EFF               	movlw	-1
 17333  016668                     L14:
 17334  016668  2AE3               	incf	plusw1,f,c
 17335                           
 17336                           ;stkvar	_divisor @ sp[(-2)+-4]
 17337  01666A  0EFB               	movlw	-5
 17338  01666C  AEE3               	btfss	plusw1,7,c
 17339  01666E  D7EA               	goto	l6933
 17340  016670                     u6070:
 17341                           
 17342                           ;stkvar	_divisor @ sp[(-2)+-4]
 17343  016670  0EFA               	movlw	-6
 17344  016672  006F FF8C  F03C    	movff	plusw1,btemp+10
 17345  016678  0EFB               	movlw	-5
 17346  01667A  006F FF8C  F03D    	movff	plusw1,btemp+11
 17347                           
 17348                           ;stkvar	_dividend @ sp[(-2)+-2]
 17349  016680  0EFC               	movlw	-4
 17350  016682  006F FF8C  F03A    	movff	plusw1,btemp+8
 17351  016688  0EFD               	movlw	-3
 17352  01668A  006F FF8C  F03B    	movff	plusw1,btemp+9
 17353  016690  503C               	movf	(btemp+10)^0,w,c
 17354  016692  5C3A               	subwf	(btemp+8)^0,w,c
 17355  016694  503D               	movf	(btemp+11)^0,w,c
 17356  016696  583B               	subwfb	(btemp+9)^0,w,c
 17357  016698  A0D8               	btfss	status,0,c
 17358  01669A  D014               	goto	l6943
 17359                           
 17360                           ;stkvar	_divisor @ sp[(-2)+-4]
 17361                           ;stkvar	_dividend @ sp[(-2)+-2]
 17362  01669C  0EFC               	movlw	-4
 17363  01669E  50E3               	movf	plusw1,w,c
 17364  0166A0  6E32               	movwf	btemp^0,c
 17365  0166A2  0EFA               	movlw	-6
 17366  0166A4  50E3               	movf	plusw1,w,c
 17367  0166A6  5E32               	subwf	btemp^0,f,c
 17368  0166A8  0EFC               	movlw	-4
 17369  0166AA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17370  0166B0  0EFD               	movlw	-3
 17371  0166B2  50E3               	movf	plusw1,w,c
 17372  0166B4  6E32               	movwf	btemp^0,c
 17373  0166B6  0EFB               	movlw	-5
 17374  0166B8  50E3               	movf	plusw1,w,c
 17375  0166BA  5A32               	subwfb	btemp^0,f,c
 17376  0166BC  0EFD               	movlw	-3
 17377  0166BE  0060  F0CB  FFE3   	movff	btemp,plusw1
 17378  0166C4                     l6943:
 17379                           
 17380                           ;stkvar	_divisor @ sp[(-2)+-4]
 17381  0166C4  90D8               	bcf	status,0,c
 17382  0166C6  0EFB               	movlw	-5
 17383  0166C8  32E3               	rrcf	plusw1,f,c
 17384  0166CA  0EFA               	movlw	-6
 17385  0166CC  32E3               	rrcf	plusw1,f,c
 17386                           
 17387                           ;stkvar	_counter @ sp[(-2)+1]
 17388  0166CE  0EFF               	movlw	-1
 17389  0166D0  50E3               	movf	plusw1,w,c
 17390  0166D2  6E32               	movwf	btemp^0,c
 17391  0166D4  0E01               	movlw	1
 17392  0166D6  5E32               	subwf	btemp^0,f,c
 17393  0166D8  0EFF               	movlw	-1
 17394  0166DA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17395  0166E0  A4D8               	btfss	status,2,c
 17396  0166E2  D7C6               	goto	u6070
 17397  0166E4                     u6090:
 17398                           
 17399                           ;stkvar	_sign @ sp[(-2)+0]
 17400  0166E4  0EFE               	movlw	-2
 17401  0166E6  50E3               	movf	plusw1,w,c
 17402  0166E8  B4D8               	btfsc	status,2,c
 17403  0166EA  D006               	goto	l6951
 17404                           
 17405                           ;stkvar	_dividend @ sp[(-2)+-2]
 17406                           ;stkvar	_dividend @ sp[(-2)+-2]
 17407  0166EC  0EFC               	movlw	-4
 17408  0166EE  6CE3               	negf	plusw1,c
 17409  0166F0  0EFD               	movlw	-3
 17410  0166F2  1EE3               	comf	plusw1,f,c
 17411  0166F4  B0D8               	btfsc	status,0,c
 17412  0166F6  2AE3               	incf	plusw1,f,c
 17413  0166F8                     l6951:
 17414                           
 17415                           ;stkvar	_dividend @ sp[(-2)+-2]
 17416  0166F8  0EFC               	movlw	-4
 17417  0166FA  006F FF8C  F032    	movff	plusw1,btemp
 17418  016700  0EFD               	movlw	-3
 17419  016702  006F FF8C  F033    	movff	plusw1,btemp+1
 17420                           
 17421                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17422  016708  0EFA               	movlw	250
 17423  01670A  26E1               	addwf	fsr1l,f,c
 17424  01670C  0EFF               	movlw	255
 17425  01670E  22E2               	addwfc	fsr1h,f,c
 17426  016710  0012               	return		;funcret
 17427  016712                     __end_of___awmod:
 17428                           	opt callstack 0
 17429                           
 17430 ;; *************** function ___awdiv *****************
 17431 ;; Defined at:
 17432 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17433 ;; Parameters:    Size  Location     Type
 17434 ;;  dividend        2  [STACK] int 
 17435 ;;  divisor         2  [STACK] int 
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;  quotient        2  [STACK] int 
 17438 ;;  sign            1  [STACK] unsigned char 
 17439 ;;  counter         1  [STACK] unsigned char 
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  2  [STACK] int 
 17442 ;; Registers used:
 17443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17444 ;; Tracked objects:
 17445 ;;		On entry : 0/5
 17446 ;;		On exit  : 0/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17453 ;;Total ram usage:        0 bytes
 17454 ;; Hardware stack levels used:    1
 17455 ;; Hardware stack levels required when called:    6
 17456 ;; This function calls:
 17457 ;;		Nothing
 17458 ;; This function is called by:
 17459 ;;		_efgtoa
 17460 ;; This function uses a reentrant model
 17461 ;;
 17462                           
 17463                           	psect	text60
 17464  01625A                     __ptext60:
 17465                           	opt callstack 0
 17466  01625A                     ___awdiv:
 17467                           	opt callstack 0
 17468                           
 17469                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17470  01625A  52E6               	movf	postinc1,f,c
 17471  01625C  52E6               	movf	postinc1,f,c
 17472  01625E  52E6               	movf	postinc1,f,c
 17473  016260  52E6               	movf	postinc1,f,c
 17474                           
 17475                           ;stkvar	_sign @ sp[(-4)+2]
 17476                           
 17477                           ;incstack = 0
 17478  016262  0EFE               	movlw	-2
 17479  016264  6AE3               	clrf	plusw1,c
 17480                           
 17481                           ;stkvar	_divisor @ sp[(-4)+-4]
 17482  016266  0EF9               	movlw	-7
 17483  016268  AEE3               	btfss	plusw1,7,c
 17484  01626A  D009               	goto	l6879
 17485                           
 17486                           ;stkvar	_divisor @ sp[(-4)+-4]
 17487                           ;stkvar	_divisor @ sp[(-4)+-4]
 17488  01626C  0EF8               	movlw	-8
 17489  01626E  6CE3               	negf	plusw1,c
 17490  016270  0EF9               	movlw	-7
 17491  016272  1EE3               	comf	plusw1,f,c
 17492  016274  B0D8               	btfsc	status,0,c
 17493  016276  2AE3               	incf	plusw1,f,c
 17494                           
 17495                           ;stkvar	_sign @ sp[(-4)+2]
 17496  016278  0EFE               	movlw	-2
 17497  01627A  6AE3               	clrf	plusw1,c
 17498  01627C  2AE3               	incf	plusw1,f,c
 17499  01627E                     l6879:
 17500                           
 17501                           ;stkvar	_dividend @ sp[(-4)+-2]
 17502  01627E  0EFB               	movlw	-5
 17503  016280  AEE3               	btfss	plusw1,7,c
 17504  016282  D008               	goto	l6885
 17505                           
 17506                           ;stkvar	_dividend @ sp[(-4)+-2]
 17507                           ;stkvar	_dividend @ sp[(-4)+-2]
 17508  016284  0EFA               	movlw	-6
 17509  016286  6CE3               	negf	plusw1,c
 17510  016288  0EFB               	movlw	-5
 17511  01628A  1EE3               	comf	plusw1,f,c
 17512  01628C  B0D8               	btfsc	status,0,c
 17513  01628E  2AE3               	incf	plusw1,f,c
 17514                           
 17515                           ;stkvar	_sign @ sp[(-4)+2]
 17516  016290  0EFE               	movlw	-2
 17517  016292  70E3               	btg	plusw1,0,c
 17518  016294                     l6885:
 17519                           
 17520                           ;stkvar	_quotient @ sp[(-4)+0]
 17521  016294  0EFC               	movlw	-4
 17522  016296  6AE3               	clrf	plusw1,c
 17523  016298  0EFD               	movlw	-3
 17524  01629A  6AE3               	clrf	plusw1,c
 17525                           
 17526                           ;stkvar	_divisor @ sp[(-4)+-4]
 17527  01629C  0EF8               	movlw	-8
 17528  01629E  006F FF8C  F032    	movff	plusw1,btemp
 17529  0162A4  0EF9               	movlw	-7
 17530  0162A6  50E3               	movf	plusw1,w,c
 17531  0162A8  1032               	iorwf	btemp^0,w,c
 17532  0162AA  B4D8               	btfsc	status,2,c
 17533  0162AC  D066               	goto	u6020
 17534                           
 17535                           ;stkvar	_counter @ sp[(-4)+3]
 17536  0162AE  0EFF               	movlw	-1
 17537  0162B0  6AE3               	clrf	plusw1,c
 17538  0162B2  D012               	goto	L15
 17539  0162B4                     l6891:
 17540                           
 17541                           ;stkvar	_divisor @ sp[(-4)+-4]
 17542  0162B4  0EF8               	movlw	-8
 17543  0162B6  50E3               	movf	plusw1,w,c
 17544  0162B8  90D8               	bcf	status,0,c
 17545  0162BA  34E8               	rlcf	wreg,w,c
 17546  0162BC  6E32               	movwf	btemp^0,c
 17547  0162BE  0EF8               	movlw	-8
 17548  0162C0  0060  F0CB  FFE3   	movff	btemp,plusw1
 17549  0162C6  0EF9               	movlw	-7
 17550  0162C8  50E3               	movf	plusw1,w,c
 17551  0162CA  34E8               	rlcf	wreg,w,c
 17552  0162CC  6E32               	movwf	btemp^0,c
 17553  0162CE  0EF9               	movlw	-7
 17554  0162D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 17555                           
 17556                           ;stkvar	_counter @ sp[(-4)+3]
 17557  0162D6  0EFF               	movlw	-1
 17558  0162D8                     L15:
 17559  0162D8  2AE3               	incf	plusw1,f,c
 17560                           
 17561                           ;stkvar	_divisor @ sp[(-4)+-4]
 17562  0162DA  0EF9               	movlw	-7
 17563  0162DC  AEE3               	btfss	plusw1,7,c
 17564  0162DE  D7EA               	goto	l6891
 17565  0162E0                     u6000:
 17566                           
 17567                           ;stkvar	_quotient @ sp[(-4)+0]
 17568  0162E0  0EFC               	movlw	-4
 17569  0162E2  50E3               	movf	plusw1,w,c
 17570  0162E4  90D8               	bcf	status,0,c
 17571  0162E6  34E8               	rlcf	wreg,w,c
 17572  0162E8  6E32               	movwf	btemp^0,c
 17573  0162EA  0EFC               	movlw	-4
 17574  0162EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17575  0162F2  0EFD               	movlw	-3
 17576  0162F4  50E3               	movf	plusw1,w,c
 17577  0162F6  34E8               	rlcf	wreg,w,c
 17578  0162F8  6E32               	movwf	btemp^0,c
 17579  0162FA  0EFD               	movlw	-3
 17580  0162FC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17581                           
 17582                           ;stkvar	_divisor @ sp[(-4)+-4]
 17583  016302  0EF8               	movlw	-8
 17584  016304  006F FF8C  F03C    	movff	plusw1,btemp+10
 17585  01630A  0EF9               	movlw	-7
 17586  01630C  006F FF8C  F03D    	movff	plusw1,btemp+11
 17587                           
 17588                           ;stkvar	_dividend @ sp[(-4)+-2]
 17589  016312  0EFA               	movlw	-6
 17590  016314  006F FF8C  F03A    	movff	plusw1,btemp+8
 17591  01631A  0EFB               	movlw	-5
 17592  01631C  006F FF8C  F03B    	movff	plusw1,btemp+9
 17593  016322  503C               	movf	(btemp+10)^0,w,c
 17594  016324  5C3A               	subwf	(btemp+8)^0,w,c
 17595  016326  503D               	movf	(btemp+11)^0,w,c
 17596  016328  583B               	subwfb	(btemp+9)^0,w,c
 17597  01632A  A0D8               	btfss	status,0,c
 17598  01632C  D016               	goto	l6905
 17599                           
 17600                           ;stkvar	_divisor @ sp[(-4)+-4]
 17601                           ;stkvar	_dividend @ sp[(-4)+-2]
 17602  01632E  0EFA               	movlw	-6
 17603  016330  50E3               	movf	plusw1,w,c
 17604  016332  6E32               	movwf	btemp^0,c
 17605  016334  0EF8               	movlw	-8
 17606  016336  50E3               	movf	plusw1,w,c
 17607  016338  5E32               	subwf	btemp^0,f,c
 17608  01633A  0EFA               	movlw	-6
 17609  01633C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17610  016342  0EFB               	movlw	-5
 17611  016344  50E3               	movf	plusw1,w,c
 17612  016346  6E32               	movwf	btemp^0,c
 17613  016348  0EF9               	movlw	-7
 17614  01634A  50E3               	movf	plusw1,w,c
 17615  01634C  5A32               	subwfb	btemp^0,f,c
 17616  01634E  0EFB               	movlw	-5
 17617  016350  0060  F0CB  FFE3   	movff	btemp,plusw1
 17618                           
 17619                           ;stkvar	_quotient @ sp[(-4)+0]
 17620  016356  0EFC               	movlw	-4
 17621  016358  80E3               	bsf	plusw1,0,c
 17622  01635A                     l6905:
 17623                           
 17624                           ;stkvar	_divisor @ sp[(-4)+-4]
 17625  01635A  90D8               	bcf	status,0,c
 17626  01635C  0EF9               	movlw	-7
 17627  01635E  32E3               	rrcf	plusw1,f,c
 17628  016360  0EF8               	movlw	-8
 17629  016362  32E3               	rrcf	plusw1,f,c
 17630                           
 17631                           ;stkvar	_counter @ sp[(-4)+3]
 17632  016364  0EFF               	movlw	-1
 17633  016366  50E3               	movf	plusw1,w,c
 17634  016368  6E32               	movwf	btemp^0,c
 17635  01636A  0E01               	movlw	1
 17636  01636C  5E32               	subwf	btemp^0,f,c
 17637  01636E  0EFF               	movlw	-1
 17638  016370  0060  F0CB  FFE3   	movff	btemp,plusw1
 17639  016376  A4D8               	btfss	status,2,c
 17640  016378  D7B3               	goto	u6000
 17641  01637A                     u6020:
 17642                           
 17643                           ;stkvar	_sign @ sp[(-4)+2]
 17644  01637A  0EFE               	movlw	-2
 17645  01637C  50E3               	movf	plusw1,w,c
 17646  01637E  B4D8               	btfsc	status,2,c
 17647  016380  D006               	goto	l6913
 17648                           
 17649                           ;stkvar	_quotient @ sp[(-4)+0]
 17650                           ;stkvar	_quotient @ sp[(-4)+0]
 17651  016382  0EFC               	movlw	-4
 17652  016384  6CE3               	negf	plusw1,c
 17653  016386  0EFD               	movlw	-3
 17654  016388  1EE3               	comf	plusw1,f,c
 17655  01638A  B0D8               	btfsc	status,0,c
 17656  01638C  2AE3               	incf	plusw1,f,c
 17657  01638E                     l6913:
 17658                           
 17659                           ;stkvar	_quotient @ sp[(-4)+0]
 17660  01638E  0EFC               	movlw	-4
 17661  016390  006F FF8C  F032    	movff	plusw1,btemp
 17662  016396  0EFD               	movlw	-3
 17663  016398  006F FF8C  F033    	movff	plusw1,btemp+1
 17664                           
 17665                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17666  01639E  0EF8               	movlw	248
 17667  0163A0  26E1               	addwf	fsr1l,f,c
 17668  0163A2  0EFF               	movlw	255
 17669  0163A4  22E2               	addwfc	fsr1h,f,c
 17670  0163A6  0012               	return		;funcret
 17671  0163A8                     __end_of___awdiv:
 17672                           	opt callstack 0
 17673                           
 17674 ;; *************** function _dtoa *****************
 17675 ;; Defined at:
 17676 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17677 ;; Parameters:    Size  Location     Type
 17678 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17679 ;;		 -> f(6), NULL(0), 
 17680 ;;  d               8  [STACK] long long 
 17681 ;; Auto vars:     Size  Location     Type
 17682 ;;  n               8  [STACK] long long 
 17683 ;;  i               2  [STACK] int 
 17684 ;;  s               2  [STACK] int 
 17685 ;;  w               2  [STACK] int 
 17686 ;;  p               2  [STACK] int 
 17687 ;; Return value:  Size  Location     Type
 17688 ;;                  2  [STACK] int 
 17689 ;; Registers used:
 17690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17691 ;; Tracked objects:
 17692 ;;		On entry : 0/5
 17693 ;;		On exit  : 0/0
 17694 ;;		Unchanged: 0/0
 17695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17700 ;;Total ram usage:        0 bytes
 17701 ;; Hardware stack levels used:    1
 17702 ;; Hardware stack levels required when called:   11
 17703 ;; This function calls:
 17704 ;;		___aodiv
 17705 ;;		___aomod
 17706 ;;		_abs
 17707 ;;		_pad
 17708 ;; This function is called by:
 17709 ;;		_vfpfcnvrt
 17710 ;; This function uses a reentrant model
 17711 ;;
 17712                           
 17713                           	psect	text61
 17714  013868                     __ptext61:
 17715                           	opt callstack 0
 17716  013868                     _dtoa:
 17717                           	opt callstack 0
 17718                           
 17719                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17720  013868  0E12               	movlw	18
 17721  01386A  26E1               	addwf	fsr1l,f,c
 17722  01386C  0E00               	movlw	0
 17723  01386E  22E2               	addwfc	fsr1h,f,c
 17724                           
 17725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17726                           ;stkvar	_d @ sp[(-18)+-10]
 17727                           
 17728                           ;incstack = 0
 17729  013870  0EE4               	movlw	228
 17730  013872  24E1               	addwf	fsr1l,w,c
 17731  013874  6ED9               	movwf	fsr2l,c
 17732  013876  0EFF               	movlw	255
 17733  013878  20E2               	addwfc	fsr1h,w,c
 17734  01387A  6EDA               	movwf	fsr2h,c
 17735                           
 17736                           ;stkvar	_n @ sp[(-18)+2]
 17737  01387C  0E08               	movlw	8
 17738  01387E  6E32               	movwf	btemp^0,c
 17739  013880  0EF0               	movlw	-16
 17740  013882                     us888999:
 17741  013882  006F FF7B FFE3     	movff	postinc2,plusw1
 17742  013888  28E8               	incf	wreg,w,c
 17743  01388A  2E32               	decfsz	btemp^0,f,c
 17744  01388C  D7FA               	bra	us888999
 17745                           
 17746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17747                           ;stkvar	_n @ sp[(-18)+2]
 17748  01388E  0EF7               	movlw	-9
 17749  013890  AEE3               	btfss	plusw1,7,c
 17750  013892  D002               	goto	u8890
 17751  013894  0E01               	movlw	1
 17752  013896  D001               	goto	u8900
 17753  013898                     u8890:
 17754  013898  0E00               	movlw	0
 17755  01389A                     u8900:
 17756  01389A  6E3C               	movwf	(btemp+10)^0,c
 17757  01389C  6A3D               	clrf	(btemp+11)^0,c
 17758                           
 17759                           ;stkvar	_s @ sp[(-18)+12]
 17760  01389E  0EFA               	movlw	-6
 17761  0138A0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17762  0138A6  0EFB               	movlw	-5
 17763  0138A8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17764                           
 17765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17766                           ;stkvar	_s @ sp[(-18)+12]
 17767  0138AE  0EFA               	movlw	-6
 17768  0138B0  006F FF8C  F032    	movff	plusw1,btemp
 17769  0138B6  0EFB               	movlw	-5
 17770  0138B8  50E3               	movf	plusw1,w,c
 17771  0138BA  1032               	iorwf	btemp^0,w,c
 17772  0138BC  B4D8               	btfsc	status,2,c
 17773  0138BE  D025               	goto	u8920
 17774                           
 17775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17776                           ;stkvar	_n @ sp[(-18)+2]
 17777                           ;stkvar	_n @ sp[(-18)+2]
 17778  0138C0  0EF0               	movlw	-16
 17779  0138C2  6CE3               	negf	plusw1,c
 17780  0138C4  0EF1               	movlw	-15
 17781  0138C6  1EE3               	comf	plusw1,f,c
 17782  0138C8  0EF2               	movlw	-14
 17783  0138CA  1EE3               	comf	plusw1,f,c
 17784  0138CC  0EF3               	movlw	-13
 17785  0138CE  1EE3               	comf	plusw1,f,c
 17786  0138D0  0EF4               	movlw	-12
 17787  0138D2  1EE3               	comf	plusw1,f,c
 17788  0138D4  0EF5               	movlw	-11
 17789  0138D6  1EE3               	comf	plusw1,f,c
 17790  0138D8  0EF6               	movlw	-10
 17791  0138DA  1EE3               	comf	plusw1,f,c
 17792  0138DC  0EF7               	movlw	-9
 17793  0138DE  1EE3               	comf	plusw1,f,c
 17794  0138E0  E314               	bnc	u8920
 17795  0138E2  0EF1               	movlw	-15
 17796  0138E4  2AE3               	incf	plusw1,f,c
 17797  0138E6  E311               	bnc	u8920
 17798  0138E8  0EF2               	movlw	-14
 17799  0138EA  2AE3               	incf	plusw1,f,c
 17800  0138EC  E30E               	bnc	u8920
 17801  0138EE  0EF3               	movlw	-13
 17802  0138F0  2AE3               	incf	plusw1,f,c
 17803  0138F2  E30B               	bnc	u8920
 17804  0138F4  0EF4               	movlw	-12
 17805  0138F6  2AE3               	incf	plusw1,f,c
 17806  0138F8  E308               	bnc	u8920
 17807  0138FA  0EF5               	movlw	-11
 17808  0138FC  2AE3               	incf	plusw1,f,c
 17809  0138FE  E305               	bnc	u8920
 17810  013900  0EF6               	movlw	-10
 17811  013902  2AE3               	incf	plusw1,f,c
 17812  013904  E302               	bnc	u8920
 17813  013906  0EF7               	movlw	-9
 17814  013908  2AE3               	incf	plusw1,f,c
 17815  01390A                     u8920:
 17816                           
 17817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17818  01390A  AE1E               	btfss	(_prec+1)^0,7,c
 17819                           
 17820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17821  01390C  921F               	bcf	_flags^0,1,c
 17822                           
 17823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17824  01390E  BE1E               	btfsc	(_prec+1)^0,7,c
 17825  013910  D005               	goto	u8940
 17826  013912  501E               	movf	(_prec+1)^0,w,c
 17827  013914  E110               	bnz	l9275
 17828  013916  041D               	decf	_prec^0,w,c
 17829  013918  B0D8               	btfsc	status,0,c
 17830  01391A  D00D               	goto	l9275
 17831  01391C                     u8940:
 17832  01391C  0E01               	movlw	1
 17833  01391E  6E3C               	movwf	(btemp+10)^0,c
 17834  013920  0E00               	movlw	0
 17835  013922  6E3D               	movwf	(btemp+11)^0,c
 17836                           
 17837                           ;stkvar	_p @ sp[(-18)+16]
 17838  013924  0EFE               	movlw	-2
 17839  013926  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17840  01392C  0EFF               	movlw	-1
 17841  01392E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17842  013934  D008               	goto	l1826
 17843  013936                     l9275:
 17844                           
 17845                           ;stkvar	_p @ sp[(-18)+16]
 17846  013936  0EFE               	movlw	-2
 17847  013938  0060  F077  FFE3   	movff	_prec,plusw1
 17848  01393E  0EFF               	movlw	-1
 17849  013940  0060  F07B  FFE3   	movff	_prec+1,plusw1
 17850  013946                     l1826:
 17851                           
 17852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17853                           ;stkvar	_w @ sp[(-18)+14]
 17854  013946  0EFC               	movlw	-4
 17855  013948  0060  F06F  FFE3   	movff	_width,plusw1
 17856  01394E  0EFD               	movlw	-3
 17857  013950  0060  F073  FFE3   	movff	_width+1,plusw1
 17858                           
 17859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17860                           ;stkvar	_s @ sp[(-18)+12]
 17861  013956  0EFA               	movlw	-6
 17862  013958  006F FF8C  F032    	movff	plusw1,btemp
 17863  01395E  0EFB               	movlw	-5
 17864  013960  50E3               	movf	plusw1,w,c
 17865  013962  1032               	iorwf	btemp^0,w,c
 17866  013964  A4D8               	btfss	status,2,c
 17867  013966  D002               	goto	u8960
 17868  013968  A41F               	btfss	_flags^0,2,c
 17869  01396A  D00A               	goto	l9283
 17870  01396C                     u8960:
 17871                           
 17872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17873                           ;stkvar	_w @ sp[(-18)+14]
 17874  01396C  50E1               	movf	fsr1l,w,c
 17875  01396E  0FFC               	addlw	-4
 17876  013970  6ED9               	movwf	fsr2l,c
 17877  013972  50E2               	movf	fsr1h,w,c
 17878  013974  6EDA               	movwf	fsr2h,c
 17879  013976  0EFF               	movlw	255
 17880  013978  22DA               	addwfc	fsr2h,f,c
 17881  01397A  06DE               	decf	postinc2,f,c
 17882  01397C  0E00               	movlw	0
 17883  01397E  5ADD               	subwfb	postdec2,f,c
 17884  013980                     l9283:
 17885                           
 17886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17887  013980  0E4F               	movlw	79
 17888  013982  6E3C               	movwf	(btemp+10)^0,c
 17889  013984  0E00               	movlw	0
 17890  013986  6E3D               	movwf	(btemp+11)^0,c
 17891                           
 17892                           ;stkvar	_i @ sp[(-18)+10]
 17893  013988  0EF8               	movlw	-8
 17894  01398A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17895  013990  0EF9               	movlw	-7
 17896  013992  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17897                           
 17898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17899  013998  0102               	movlb	2	; () banked
 17900  01399A  6BFB               	clrf	(_dbuf+79)& (0+255),b
 17901                           
 17902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17903  01399C  D109               	goto	l9297
 17904  01399E                     l9287:
 17905                           
 17906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17907                           ;stkvar	_i @ sp[(-18)+10]
 17908  01399E  50E1               	movf	fsr1l,w,c
 17909  0139A0  0FF8               	addlw	-8
 17910  0139A2  6ED9               	movwf	fsr2l,c
 17911  0139A4  50E2               	movf	fsr1h,w,c
 17912  0139A6  6EDA               	movwf	fsr2h,c
 17913  0139A8  0EFF               	movlw	255
 17914  0139AA  22DA               	addwfc	fsr2h,f,c
 17915  0139AC  06DE               	decf	postinc2,f,c
 17916  0139AE  0E00               	movlw	0
 17917  0139B0  5ADD               	subwfb	postdec2,f,c
 17918                           
 17919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17920  0139B2  0E0A               	movlw	10
 17921  0139B4  6EE6               	movwf	postinc1,c
 17922  0139B6  0E00               	movlw	0
 17923  0139B8  6EE6               	movwf	postinc1,c
 17924  0139BA  0E00               	movlw	0
 17925  0139BC  6EE6               	movwf	postinc1,c
 17926  0139BE  0E00               	movlw	0
 17927  0139C0  6EE6               	movwf	postinc1,c
 17928  0139C2  0E00               	movlw	0
 17929  0139C4  6EE6               	movwf	postinc1,c
 17930  0139C6  0E00               	movlw	0
 17931  0139C8  6EE6               	movwf	postinc1,c
 17932  0139CA  0E00               	movlw	0
 17933  0139CC  6EE6               	movwf	postinc1,c
 17934  0139CE  0E00               	movlw	0
 17935  0139D0  6EE6               	movwf	postinc1,c
 17936                           
 17937                           ;stkvar	_n @ sp[(-26)+2]
 17938  0139D2  50E1               	movf	fsr1l,w,c
 17939  0139D4  0FE8               	addlw	-24
 17940  0139D6  6ED9               	movwf	fsr2l,c
 17941  0139D8  50E2               	movf	fsr1h,w,c
 17942  0139DA  6EDA               	movwf	fsr2h,c
 17943  0139DC  0EFF               	movlw	255
 17944  0139DE  22DA               	addwfc	fsr2h,f,c
 17945  0139E0  006F FF7B FFE6     	movff	postinc2,postinc1
 17946  0139E6  006F FF7B FFE6     	movff	postinc2,postinc1
 17947  0139EC  006F FF7B FFE6     	movff	postinc2,postinc1
 17948  0139F2  006F FF7B FFE6     	movff	postinc2,postinc1
 17949  0139F8  006F FF7B FFE6     	movff	postinc2,postinc1
 17950  0139FE  006F FF7B FFE6     	movff	postinc2,postinc1
 17951  013A04  006F FF7B FFE6     	movff	postinc2,postinc1
 17952  013A0A  006F FF7B FFE6     	movff	postinc2,postinc1
 17953  013A10  EC5B  F0A9         	call	___aomod	;wreg free
 17954  013A14  52E5               	movf	postdec1,f,c
 17955  013A16  006F FF9C  F049    	movff	indf1,btemp+23
 17956  013A1C  52E5               	movf	postdec1,f,c
 17957  013A1E  006F FF9C  F048    	movff	indf1,btemp+22
 17958  013A24  52E5               	movf	postdec1,f,c
 17959  013A26  006F FF9C  F047    	movff	indf1,btemp+21
 17960  013A2C  52E5               	movf	postdec1,f,c
 17961  013A2E  006F FF9C  F046    	movff	indf1,btemp+20
 17962  013A34  52E5               	movf	postdec1,f,c
 17963  013A36  006F FF9C  F045    	movff	indf1,btemp+19
 17964  013A3C  52E5               	movf	postdec1,f,c
 17965  013A3E  006F FF9C  F044    	movff	indf1,btemp+18
 17966  013A44  52E5               	movf	postdec1,f,c
 17967  013A46  006F FF9C  F043    	movff	indf1,btemp+17
 17968  013A4C  52E5               	movf	postdec1,f,c
 17969  013A4E  006F FF9C  F042    	movff	indf1,btemp+16
 17970  013A54  0EF8               	movlw	248
 17971  013A56  26E1               	addwf	fsr1l,f,c
 17972  013A58  0EFF               	movlw	255
 17973  013A5A  22E2               	addwfc	fsr1h,f,c
 17974  013A5C  0060  F108  F03C   	movff	btemp+16,btemp+10
 17975  013A62  0060  F10C  F03D   	movff	btemp+17,btemp+11
 17976  013A68  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 17977  013A6E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 17978  013A74  EC8B  F0BD         	call	_abs	;wreg free
 17979  013A78  0E30               	movlw	48
 17980  013A7A  2632               	addwf	btemp^0,f,c
 17981                           
 17982                           ;stkvar	_i @ sp[(-18)+10]
 17983  013A7C  0EF8               	movlw	-8
 17984  013A7E  006F FF8C  F03C    	movff	plusw1,btemp+10
 17985  013A84  0EF9               	movlw	-7
 17986  013A86  006F FF8C  F03D    	movff	plusw1,btemp+11
 17987  013A8C  0EAC               	movlw	low _dbuf
 17988  013A8E  243C               	addwf	(btemp+10)^0,w,c
 17989  013A90  6ED9               	movwf	fsr2l,c
 17990  013A92  0E02               	movlw	high _dbuf
 17991  013A94  203D               	addwfc	(btemp+11)^0,w,c
 17992  013A96  6EDA               	movwf	fsr2h,c
 17993  013A98  0060  F0CB  FFDF   	movff	btemp,indf2
 17994                           
 17995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17996                           ;stkvar	_p @ sp[(-18)+16]
 17997  013A9E  50E1               	movf	fsr1l,w,c
 17998  013AA0  0FFE               	addlw	-2
 17999  013AA2  6ED9               	movwf	fsr2l,c
 18000  013AA4  50E2               	movf	fsr1h,w,c
 18001  013AA6  6EDA               	movwf	fsr2h,c
 18002  013AA8  0EFF               	movlw	255
 18003  013AAA  22DA               	addwfc	fsr2h,f,c
 18004  013AAC  06DE               	decf	postinc2,f,c
 18005  013AAE  0E00               	movlw	0
 18006  013AB0  5ADD               	subwfb	postdec2,f,c
 18007                           
 18008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18009                           ;stkvar	_w @ sp[(-18)+14]
 18010  013AB2  50E1               	movf	fsr1l,w,c
 18011  013AB4  0FFC               	addlw	-4
 18012  013AB6  6ED9               	movwf	fsr2l,c
 18013  013AB8  50E2               	movf	fsr1h,w,c
 18014  013ABA  6EDA               	movwf	fsr2h,c
 18015  013ABC  0EFF               	movlw	255
 18016  013ABE  22DA               	addwfc	fsr2h,f,c
 18017  013AC0  06DE               	decf	postinc2,f,c
 18018  013AC2  0E00               	movlw	0
 18019  013AC4  5ADD               	subwfb	postdec2,f,c
 18020                           
 18021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18022  013AC6  0E0A               	movlw	10
 18023  013AC8  6EE6               	movwf	postinc1,c
 18024  013ACA  0E00               	movlw	0
 18025  013ACC  6EE6               	movwf	postinc1,c
 18026  013ACE  0E00               	movlw	0
 18027  013AD0  6EE6               	movwf	postinc1,c
 18028  013AD2  0E00               	movlw	0
 18029  013AD4  6EE6               	movwf	postinc1,c
 18030  013AD6  0E00               	movlw	0
 18031  013AD8  6EE6               	movwf	postinc1,c
 18032  013ADA  0E00               	movlw	0
 18033  013ADC  6EE6               	movwf	postinc1,c
 18034  013ADE  0E00               	movlw	0
 18035  013AE0  6EE6               	movwf	postinc1,c
 18036  013AE2  0E00               	movlw	0
 18037  013AE4  6EE6               	movwf	postinc1,c
 18038                           
 18039                           ;stkvar	_n @ sp[(-26)+2]
 18040  013AE6  50E1               	movf	fsr1l,w,c
 18041  013AE8  0FE8               	addlw	-24
 18042  013AEA  6ED9               	movwf	fsr2l,c
 18043  013AEC  50E2               	movf	fsr1h,w,c
 18044  013AEE  6EDA               	movwf	fsr2h,c
 18045  013AF0  0EFF               	movlw	255
 18046  013AF2  22DA               	addwfc	fsr2h,f,c
 18047  013AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 18048  013AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 18049  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 18050  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 18051  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 18052  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 18053  013B18  006F FF7B FFE6     	movff	postinc2,postinc1
 18054  013B1E  006F FF7B FFE6     	movff	postinc2,postinc1
 18055  013B24  ECE1  F0A6         	call	___aodiv	;wreg free
 18056  013B28  52E5               	movf	postdec1,f,c
 18057  013B2A  006F FF9C  F049    	movff	indf1,btemp+23
 18058  013B30  52E5               	movf	postdec1,f,c
 18059  013B32  006F FF9C  F048    	movff	indf1,btemp+22
 18060  013B38  52E5               	movf	postdec1,f,c
 18061  013B3A  006F FF9C  F047    	movff	indf1,btemp+21
 18062  013B40  52E5               	movf	postdec1,f,c
 18063  013B42  006F FF9C  F046    	movff	indf1,btemp+20
 18064  013B48  52E5               	movf	postdec1,f,c
 18065  013B4A  006F FF9C  F045    	movff	indf1,btemp+19
 18066  013B50  52E5               	movf	postdec1,f,c
 18067  013B52  006F FF9C  F044    	movff	indf1,btemp+18
 18068  013B58  52E5               	movf	postdec1,f,c
 18069  013B5A  006F FF9C  F043    	movff	indf1,btemp+17
 18070  013B60  52E5               	movf	postdec1,f,c
 18071  013B62  006F FF9C  F042    	movff	indf1,btemp+16
 18072  013B68  0EF8               	movlw	248
 18073  013B6A  26E1               	addwf	fsr1l,f,c
 18074  013B6C  0EFF               	movlw	255
 18075  013B6E  22E2               	addwfc	fsr1h,f,c
 18076                           
 18077                           ;stkvar	_n @ sp[(-18)+2]
 18078  013B70  0EF0               	movlw	-16
 18079  013B72  0060  F10B  FFE3   	movff	btemp+16,plusw1
 18080  013B78  0EF1               	movlw	-15
 18081  013B7A  0060  F10F  FFE3   	movff	btemp+17,plusw1
 18082  013B80  0EF2               	movlw	-14
 18083  013B82  0060  F113  FFE3   	movff	btemp+18,plusw1
 18084  013B88  0EF3               	movlw	-13
 18085  013B8A  0060  F117  FFE3   	movff	btemp+19,plusw1
 18086  013B90  0EF4               	movlw	-12
 18087  013B92  0060  F11B  FFE3   	movff	btemp+20,plusw1
 18088  013B98  0EF5               	movlw	-11
 18089  013B9A  0060  F11F  FFE3   	movff	btemp+21,plusw1
 18090  013BA0  0EF6               	movlw	-10
 18091  013BA2  0060  F123  FFE3   	movff	btemp+22,plusw1
 18092  013BA8  0EF7               	movlw	-9
 18093  013BAA  0060  F127  FFE3   	movff	btemp+23,plusw1
 18094  013BB0                     l9297:
 18095                           
 18096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18097                           ;stkvar	_i @ sp[(-18)+10]
 18098  013BB0  0EF9               	movlw	-7
 18099  013BB2  BEE3               	btfsc	plusw1,7,c
 18100  013BB4  D036               	goto	u9010
 18101  013BB6  0EF9               	movlw	-7
 18102  013BB8  50E3               	movf	plusw1,w,c
 18103  013BBA  E104               	bnz	u8970
 18104  013BBC  0EF8               	movlw	-8
 18105  013BBE  04E3               	decf	plusw1,w,c
 18106  013BC0  A0D8               	btfss	status,0,c
 18107  013BC2  D02F               	goto	u9010
 18108  013BC4                     u8970:
 18109                           
 18110                           ;stkvar	_n @ sp[(-18)+2]
 18111  013BC4  0EF0               	movlw	-16
 18112  013BC6  50E3               	movf	plusw1,w,c
 18113  013BC8  E115               	bnz	u8981
 18114  013BCA  0EF1               	movlw	-15
 18115  013BCC  50E3               	movf	plusw1,w,c
 18116  013BCE  E112               	bnz	u8981
 18117  013BD0  0EF2               	movlw	-14
 18118  013BD2  50E3               	movf	plusw1,w,c
 18119  013BD4  E10F               	bnz	u8981
 18120  013BD6  0EF3               	movlw	-13
 18121  013BD8  50E3               	movf	plusw1,w,c
 18122  013BDA  E10C               	bnz	u8981
 18123  013BDC  0EF4               	movlw	-12
 18124  013BDE  50E3               	movf	plusw1,w,c
 18125  013BE0  E109               	bnz	u8981
 18126  013BE2  0EF5               	movlw	-11
 18127  013BE4  50E3               	movf	plusw1,w,c
 18128  013BE6  E106               	bnz	u8981
 18129  013BE8  0EF6               	movlw	-10
 18130  013BEA  50E3               	movf	plusw1,w,c
 18131  013BEC  E103               	bnz	u8981
 18132  013BEE  0EF7               	movlw	-9
 18133  013BF0  50E3               	movf	plusw1,w,c
 18134  013BF2  A4D8               	btfss	status,2,c
 18135  013BF4                     u8981:
 18136  013BF4  D6D4               	goto	l9287
 18137                           
 18138                           ;stkvar	_p @ sp[(-18)+16]
 18139  013BF6  0EFF               	movlw	-1
 18140  013BF8  BEE3               	btfsc	plusw1,7,c
 18141  013BFA  D007               	goto	u8990
 18142  013BFC  0EFF               	movlw	-1
 18143  013BFE  50E3               	movf	plusw1,w,c
 18144  013C00  E103               	bnz	u8991
 18145  013C02  0EFE               	movlw	-2
 18146  013C04  04E3               	decf	plusw1,w,c
 18147  013C06  B0D8               	btfsc	status,0,c
 18148  013C08                     u8991:
 18149  013C08  D6CA               	goto	l9287
 18150  013C0A                     u8990:
 18151                           
 18152                           ;stkvar	_w @ sp[(-18)+14]
 18153  013C0A  0EFD               	movlw	-3
 18154  013C0C  BEE3               	btfsc	plusw1,7,c
 18155  013C0E  D009               	goto	u9010
 18156  013C10  0EFD               	movlw	-3
 18157  013C12  50E3               	movf	plusw1,w,c
 18158  013C14  E104               	bnz	u9000
 18159  013C16  0EFC               	movlw	-4
 18160  013C18  04E3               	decf	plusw1,w,c
 18161  013C1A  A0D8               	btfss	status,0,c
 18162  013C1C  D002               	goto	u9010
 18163  013C1E                     u9000:
 18164  013C1E  B21F               	btfsc	_flags^0,1,c
 18165  013C20  D6BE               	goto	l9287
 18166  013C22                     u9010:
 18167                           
 18168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18169                           ;stkvar	_s @ sp[(-18)+12]
 18170  013C22  0EFA               	movlw	-6
 18171  013C24  006F FF8C  F032    	movff	plusw1,btemp
 18172  013C2A  0EFB               	movlw	-5
 18173  013C2C  50E3               	movf	plusw1,w,c
 18174  013C2E  1032               	iorwf	btemp^0,w,c
 18175  013C30  A4D8               	btfss	status,2,c
 18176  013C32  D002               	goto	u9030
 18177  013C34  A41F               	btfss	_flags^0,2,c
 18178  013C36  D033               	goto	l9321
 18179  013C38                     u9030:
 18180                           
 18181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18182                           ;stkvar	_i @ sp[(-18)+10]
 18183  013C38  50E1               	movf	fsr1l,w,c
 18184  013C3A  0FF8               	addlw	-8
 18185  013C3C  6ED9               	movwf	fsr2l,c
 18186  013C3E  50E2               	movf	fsr1h,w,c
 18187  013C40  6EDA               	movwf	fsr2h,c
 18188  013C42  0EFF               	movlw	255
 18189  013C44  22DA               	addwfc	fsr2h,f,c
 18190  013C46  06DE               	decf	postinc2,f,c
 18191  013C48  0E00               	movlw	0
 18192  013C4A  5ADD               	subwfb	postdec2,f,c
 18193                           
 18194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18195                           ;stkvar	_s @ sp[(-18)+12]
 18196  013C4C  0EFA               	movlw	-6
 18197  013C4E  006F FF8C  F032    	movff	plusw1,btemp
 18198  013C54  0EFB               	movlw	-5
 18199  013C56  50E3               	movf	plusw1,w,c
 18200  013C58  1032               	iorwf	btemp^0,w,c
 18201  013C5A  A4D8               	btfss	status,2,c
 18202  013C5C  D002               	goto	l9317
 18203  013C5E  0E2B               	movlw	43
 18204  013C60  D001               	goto	L16
 18205  013C62                     l9317:
 18206  013C62  0E2D               	movlw	45
 18207  013C64                     L16:
 18208  013C64  6E3C               	movwf	(btemp+10)^0,c
 18209  013C66  0E00               	movlw	0
 18210  013C68  6E3D               	movwf	(btemp+11)^0,c
 18211                           
 18212                           ;stkvar	_dtoa$4376 @ sp[(-18)+0]
 18213  013C6A  0EEE               	movlw	-18
 18214  013C6C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18215  013C72  0EEF               	movlw	-17
 18216  013C74  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18217                           
 18218                           ;stkvar	_dtoa$4376 @ sp[(-18)+0]
 18219                           ;stkvar	_i @ sp[(-18)+10]
 18220  013C7A  0EF8               	movlw	-8
 18221  013C7C  006F FF8C  F03C    	movff	plusw1,btemp+10
 18222  013C82  0EF9               	movlw	-7
 18223  013C84  006F FF8C  F03D    	movff	plusw1,btemp+11
 18224  013C8A  0EAC               	movlw	low _dbuf
 18225  013C8C  243C               	addwf	(btemp+10)^0,w,c
 18226  013C8E  6ED9               	movwf	fsr2l,c
 18227  013C90  0E02               	movlw	high _dbuf
 18228  013C92  203D               	addwfc	(btemp+11)^0,w,c
 18229  013C94  6EDA               	movwf	fsr2h,c
 18230  013C96  0EEE               	movlw	-18
 18231  013C98  006F FF8F FFDF     	movff	plusw1,indf2
 18232  013C9E                     l9321:
 18233                           
 18234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18235                           ;stkvar	_w @ sp[(-18)+14]
 18236  013C9E  0EFC               	movlw	-4
 18237  013CA0  006F FF8F FFE6     	movff	plusw1,postinc1
 18238  013CA6  006F FF8F FFE6     	movff	plusw1,postinc1
 18239                           
 18240                           ;stkvar	_i @ sp[(-20)+10]
 18241  013CAC  0EAC               	movlw	low _dbuf
 18242  013CAE  6E3C               	movwf	(btemp+10)^0,c
 18243  013CB0  0E02               	movlw	high _dbuf
 18244  013CB2  6E3D               	movwf	(btemp+11)^0,c
 18245  013CB4  0EF6               	movlw	-10
 18246  013CB6  50E3               	movf	plusw1,w,c
 18247  013CB8  263C               	addwf	(btemp+10)^0,f,c
 18248  013CBA  0EF7               	movlw	-9
 18249  013CBC  50E3               	movf	plusw1,w,c
 18250  013CBE  223D               	addwfc	(btemp+11)^0,f,c
 18251  013CC0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18252  013CC6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18253                           
 18254                           ;stkvar	_fp @ sp[(-22)+-2]
 18255  013CCC  0EE8               	movlw	-24
 18256  013CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 18257  013CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 18258  013CDA  EC89  F0B3         	call	_pad	;wreg free
 18259                           
 18260                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18261  013CDE  0EE4               	movlw	228
 18262  013CE0  26E1               	addwf	fsr1l,f,c
 18263  013CE2  0EFF               	movlw	255
 18264  013CE4  22E2               	addwfc	fsr1h,f,c
 18265  013CE6  0012               	return		;funcret
 18266  013CE8                     __end_of_dtoa:
 18267                           	opt callstack 0
 18268                           
 18269 ;; *************** function _abs *****************
 18270 ;; Defined at:
 18271 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;  a               2  [STACK] int 
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;		None
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  2  [STACK] int 
 18278 ;; Registers used:
 18279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18280 ;; Tracked objects:
 18281 ;;		On entry : 0/2
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18289 ;;Total ram usage:        0 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; Hardware stack levels required when called:    6
 18292 ;; This function calls:
 18293 ;;		Nothing
 18294 ;; This function is called by:
 18295 ;;		_dtoa
 18296 ;; This function uses a reentrant model
 18297 ;;
 18298                           
 18299                           	psect	text62
 18300  017B16                     __ptext62:
 18301                           	opt callstack 0
 18302  017B16                     _abs:
 18303                           	opt callstack 17
 18304                           
 18305                           ;stkvar	_a @ sp[(0)+-2]
 18306                           
 18307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18308                           ;incstack = 0
 18309  017B16  0EFF               	movlw	-1
 18310  017B18  BEE3               	btfsc	plusw1,7,c
 18311  017B1A  D007               	goto	u4980
 18312  017B1C  0EFF               	movlw	-1
 18313  017B1E  50E3               	movf	plusw1,w,c
 18314  017B20  E112               	bnz	l6367
 18315  017B22  0EFE               	movlw	-2
 18316  017B24  04E3               	decf	plusw1,w,c
 18317  017B26  B0D8               	btfsc	status,0,c
 18318  017B28  D00E               	goto	l6367
 18319  017B2A                     u4980:
 18320                           
 18321                           ;stkvar	_a @ sp[(0)+-2]
 18322  017B2A  0EFE               	movlw	-2
 18323  017B2C  006F FF8C  F032    	movff	plusw1,btemp
 18324  017B32  1E32               	comf	btemp^0,f,c
 18325  017B34  0EFF               	movlw	-1
 18326  017B36  006F FF8C  F033    	movff	plusw1,btemp+1
 18327  017B3C  1E33               	comf	(btemp+1)^0,f,c
 18328  017B3E  2A32               	incf	btemp^0,f,c
 18329  017B40  B4D8               	btfsc	status,2,c
 18330  017B42  2A33               	incf	(btemp+1)^0,f,c
 18331  017B44  D008               	goto	l2729
 18332  017B46                     l6367:
 18333                           
 18334                           ;stkvar	_a @ sp[(0)+-2]
 18335  017B46  0EFE               	movlw	-2
 18336  017B48  006F FF8C  F032    	movff	plusw1,btemp
 18337  017B4E  0EFF               	movlw	-1
 18338  017B50  006F FF8C  F033    	movff	plusw1,btemp+1
 18339  017B56                     l2729:
 18340                           
 18341                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18342  017B56  52E5               	movf	postdec1,f,c
 18343  017B58  52E5               	movf	postdec1,f,c
 18344  017B5A  0012               	return		;funcret
 18345  017B5C                     __end_of_abs:
 18346                           	opt callstack 0
 18347                           
 18348 ;; *************** function ___aomod *****************
 18349 ;; Defined at:
 18350 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18351 ;; Parameters:    Size  Location     Type
 18352 ;;  dividend        8  [STACK] long long 
 18353 ;;  divisor         8  [STACK] long long 
 18354 ;; Auto vars:     Size  Location     Type
 18355 ;;  sign            1  [STACK] unsigned char 
 18356 ;;  counter         1  [STACK] unsigned char 
 18357 ;; Return value:  Size  Location     Type
 18358 ;;                  8  [STACK] long long 
 18359 ;; Registers used:
 18360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18361 ;; Tracked objects:
 18362 ;;		On entry : 0/2
 18363 ;;		On exit  : 0/0
 18364 ;;		Unchanged: 0/0
 18365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18370 ;;Total ram usage:        0 bytes
 18371 ;; Hardware stack levels used:    1
 18372 ;; Hardware stack levels required when called:    6
 18373 ;; This function calls:
 18374 ;;		Nothing
 18375 ;; This function is called by:
 18376 ;;		_dtoa
 18377 ;; This function uses a reentrant model
 18378 ;;
 18379                           
 18380                           	psect	text63
 18381  0152B6                     __ptext63:
 18382                           	opt callstack 0
 18383  0152B6                     ___aomod:
 18384                           	opt callstack 0
 18385                           
 18386                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18387  0152B6  52E6               	movf	postinc1,f,c
 18388  0152B8  52E6               	movf	postinc1,f,c
 18389                           
 18390                           ;stkvar	_sign @ sp[(-2)+0]
 18391                           
 18392                           ;incstack = 0
 18393  0152BA  0EFE               	movlw	-2
 18394  0152BC  6AE3               	clrf	plusw1,c
 18395                           
 18396                           ;stkvar	_dividend @ sp[(-2)+-8]
 18397  0152BE  0EFD               	movlw	-3
 18398  0152C0  AEE3               	btfss	plusw1,7,c
 18399  0152C2  D028               	goto	l6525
 18400                           
 18401                           ;stkvar	_dividend @ sp[(-2)+-8]
 18402                           ;stkvar	_dividend @ sp[(-2)+-8]
 18403  0152C4  0EF6               	movlw	-10
 18404  0152C6  6CE3               	negf	plusw1,c
 18405  0152C8  0EF7               	movlw	-9
 18406  0152CA  1EE3               	comf	plusw1,f,c
 18407  0152CC  0EF8               	movlw	-8
 18408  0152CE  1EE3               	comf	plusw1,f,c
 18409  0152D0  0EF9               	movlw	-7
 18410  0152D2  1EE3               	comf	plusw1,f,c
 18411  0152D4  0EFA               	movlw	-6
 18412  0152D6  1EE3               	comf	plusw1,f,c
 18413  0152D8  0EFB               	movlw	-5
 18414  0152DA  1EE3               	comf	plusw1,f,c
 18415  0152DC  0EFC               	movlw	-4
 18416  0152DE  1EE3               	comf	plusw1,f,c
 18417  0152E0  0EFD               	movlw	-3
 18418  0152E2  1EE3               	comf	plusw1,f,c
 18419  0152E4  E314               	bnc	u5410
 18420  0152E6  0EF7               	movlw	-9
 18421  0152E8  2AE3               	incf	plusw1,f,c
 18422  0152EA  E311               	bnc	u5410
 18423  0152EC  0EF8               	movlw	-8
 18424  0152EE  2AE3               	incf	plusw1,f,c
 18425  0152F0  E30E               	bnc	u5410
 18426  0152F2  0EF9               	movlw	-7
 18427  0152F4  2AE3               	incf	plusw1,f,c
 18428  0152F6  E30B               	bnc	u5410
 18429  0152F8  0EFA               	movlw	-6
 18430  0152FA  2AE3               	incf	plusw1,f,c
 18431  0152FC  E308               	bnc	u5410
 18432  0152FE  0EFB               	movlw	-5
 18433  015300  2AE3               	incf	plusw1,f,c
 18434  015302  E305               	bnc	u5410
 18435  015304  0EFC               	movlw	-4
 18436  015306  2AE3               	incf	plusw1,f,c
 18437  015308  E302               	bnc	u5410
 18438  01530A  0EFD               	movlw	-3
 18439  01530C  2AE3               	incf	plusw1,f,c
 18440  01530E                     u5410:
 18441                           
 18442                           ;stkvar	_sign @ sp[(-2)+0]
 18443  01530E  0EFE               	movlw	-2
 18444  015310  6AE3               	clrf	plusw1,c
 18445  015312  2AE3               	incf	plusw1,f,c
 18446  015314                     l6525:
 18447                           
 18448                           ;stkvar	_divisor @ sp[(-2)+-16]
 18449  015314  0EF5               	movlw	-11
 18450  015316  AEE3               	btfss	plusw1,7,c
 18451  015318  D025               	goto	u5430
 18452                           
 18453                           ;stkvar	_divisor @ sp[(-2)+-16]
 18454                           ;stkvar	_divisor @ sp[(-2)+-16]
 18455  01531A  0EEE               	movlw	-18
 18456  01531C  6CE3               	negf	plusw1,c
 18457  01531E  0EEF               	movlw	-17
 18458  015320  1EE3               	comf	plusw1,f,c
 18459  015322  0EF0               	movlw	-16
 18460  015324  1EE3               	comf	plusw1,f,c
 18461  015326  0EF1               	movlw	-15
 18462  015328  1EE3               	comf	plusw1,f,c
 18463  01532A  0EF2               	movlw	-14
 18464  01532C  1EE3               	comf	plusw1,f,c
 18465  01532E  0EF3               	movlw	-13
 18466  015330  1EE3               	comf	plusw1,f,c
 18467  015332  0EF4               	movlw	-12
 18468  015334  1EE3               	comf	plusw1,f,c
 18469  015336  0EF5               	movlw	-11
 18470  015338  1EE3               	comf	plusw1,f,c
 18471  01533A  E314               	bnc	u5430
 18472  01533C  0EEF               	movlw	-17
 18473  01533E  2AE3               	incf	plusw1,f,c
 18474  015340  E311               	bnc	u5430
 18475  015342  0EF0               	movlw	-16
 18476  015344  2AE3               	incf	plusw1,f,c
 18477  015346  E30E               	bnc	u5430
 18478  015348  0EF1               	movlw	-15
 18479  01534A  2AE3               	incf	plusw1,f,c
 18480  01534C  E30B               	bnc	u5430
 18481  01534E  0EF2               	movlw	-14
 18482  015350  2AE3               	incf	plusw1,f,c
 18483  015352  E308               	bnc	u5430
 18484  015354  0EF3               	movlw	-13
 18485  015356  2AE3               	incf	plusw1,f,c
 18486  015358  E305               	bnc	u5430
 18487  01535A  0EF4               	movlw	-12
 18488  01535C  2AE3               	incf	plusw1,f,c
 18489  01535E  E302               	bnc	u5430
 18490  015360  0EF5               	movlw	-11
 18491  015362  2AE3               	incf	plusw1,f,c
 18492  015364                     u5430:
 18493                           
 18494                           ;stkvar	_divisor @ sp[(-2)+-16]
 18495  015364  0EEE               	movlw	-18
 18496  015366  50E3               	movf	plusw1,w,c
 18497  015368  E116               	bnz	u5440
 18498  01536A  0EEF               	movlw	-17
 18499  01536C  50E3               	movf	plusw1,w,c
 18500  01536E  E113               	bnz	u5440
 18501  015370  0EF0               	movlw	-16
 18502  015372  50E3               	movf	plusw1,w,c
 18503  015374  E110               	bnz	u5440
 18504  015376  0EF1               	movlw	-15
 18505  015378  50E3               	movf	plusw1,w,c
 18506  01537A  E10D               	bnz	u5440
 18507  01537C  0EF2               	movlw	-14
 18508  01537E  50E3               	movf	plusw1,w,c
 18509  015380  E10A               	bnz	u5440
 18510  015382  0EF3               	movlw	-13
 18511  015384  50E3               	movf	plusw1,w,c
 18512  015386  E107               	bnz	u5440
 18513  015388  0EF4               	movlw	-12
 18514  01538A  50E3               	movf	plusw1,w,c
 18515  01538C  E104               	bnz	u5440
 18516  01538E  0EF5               	movlw	-11
 18517  015390  50E3               	movf	plusw1,w,c
 18518  015392  B4D8               	btfsc	status,2,c
 18519  015394  D075               	goto	u5470
 18520  015396                     u5440:
 18521                           
 18522                           ;stkvar	_counter @ sp[(-2)+1]
 18523  015396  0EFF               	movlw	-1
 18524  015398  6AE3               	clrf	plusw1,c
 18525  01539A  D012               	goto	L17
 18526  01539C                     l6533:
 18527                           
 18528                           ;stkvar	_divisor @ sp[(-2)+-16]
 18529  01539C  90D8               	bcf	status,0,c
 18530  01539E  0EEE               	movlw	-18
 18531  0153A0  36E3               	rlcf	plusw1,f,c
 18532  0153A2  0EEF               	movlw	-17
 18533  0153A4  36E3               	rlcf	plusw1,f,c
 18534  0153A6  0EF0               	movlw	-16
 18535  0153A8  36E3               	rlcf	plusw1,f,c
 18536  0153AA  0EF1               	movlw	-15
 18537  0153AC  36E3               	rlcf	plusw1,f,c
 18538  0153AE  0EF2               	movlw	-14
 18539  0153B0  36E3               	rlcf	plusw1,f,c
 18540  0153B2  0EF3               	movlw	-13
 18541  0153B4  36E3               	rlcf	plusw1,f,c
 18542  0153B6  0EF4               	movlw	-12
 18543  0153B8  36E3               	rlcf	plusw1,f,c
 18544  0153BA  0EF5               	movlw	-11
 18545  0153BC  36E3               	rlcf	plusw1,f,c
 18546                           
 18547                           ;stkvar	_counter @ sp[(-2)+1]
 18548  0153BE  0EFF               	movlw	-1
 18549  0153C0                     L17:
 18550  0153C0  2AE3               	incf	plusw1,f,c
 18551                           
 18552                           ;stkvar	_divisor @ sp[(-2)+-16]
 18553  0153C2  0EF5               	movlw	-11
 18554  0153C4  AEE3               	btfss	plusw1,7,c
 18555  0153C6  D7EA               	goto	l6533
 18556  0153C8                     u5450:
 18557                           
 18558                           ;stkvar	_divisor @ sp[(-2)+-16]
 18559                           ;stkvar	_dividend @ sp[(-2)+-8]
 18560  0153C8  50E1               	movf	fsr1l,w,c
 18561  0153CA  0FF6               	addlw	-10
 18562  0153CC  6ED9               	movwf	fsr2l,c
 18563  0153CE  50E2               	movf	fsr1h,w,c
 18564  0153D0  6EDA               	movwf	fsr2h,c
 18565  0153D2  0EFF               	movlw	255
 18566  0153D4  22DA               	addwfc	fsr2h,f,c
 18567  0153D6  0EEE               	movlw	-18
 18568  0153D8  50E3               	movf	plusw1,w,c
 18569  0153DA  5CDE               	subwf	postinc2,w,c
 18570  0153DC  0EEF               	movlw	-17
 18571  0153DE  50E3               	movf	plusw1,w,c
 18572  0153E0  58DE               	subwfb	postinc2,w,c
 18573  0153E2  0EF0               	movlw	-16
 18574  0153E4  50E3               	movf	plusw1,w,c
 18575  0153E6  58DE               	subwfb	postinc2,w,c
 18576  0153E8  0EF1               	movlw	-15
 18577  0153EA  50E3               	movf	plusw1,w,c
 18578  0153EC  58DE               	subwfb	postinc2,w,c
 18579  0153EE  0EF2               	movlw	-14
 18580  0153F0  50E3               	movf	plusw1,w,c
 18581  0153F2  58DE               	subwfb	postinc2,w,c
 18582  0153F4  0EF3               	movlw	-13
 18583  0153F6  50E3               	movf	plusw1,w,c
 18584  0153F8  58DE               	subwfb	postinc2,w,c
 18585  0153FA  0EF4               	movlw	-12
 18586  0153FC  50E3               	movf	plusw1,w,c
 18587  0153FE  58DE               	subwfb	postinc2,w,c
 18588  015400  0EF5               	movlw	-11
 18589  015402  50E3               	movf	plusw1,w,c
 18590  015404  58DE               	subwfb	postinc2,w,c
 18591  015406  A0D8               	btfss	status,0,c
 18592  015408  D01F               	goto	l6541
 18593                           
 18594                           ;stkvar	_divisor @ sp[(-2)+-16]
 18595                           ;stkvar	_dividend @ sp[(-2)+-8]
 18596  01540A  50E1               	movf	fsr1l,w,c
 18597  01540C  0FF6               	addlw	-10
 18598  01540E  6ED9               	movwf	fsr2l,c
 18599  015410  50E2               	movf	fsr1h,w,c
 18600  015412  6EDA               	movwf	fsr2h,c
 18601  015414  0EFF               	movlw	255
 18602  015416  22DA               	addwfc	fsr2h,f,c
 18603  015418  0EEE               	movlw	-18
 18604  01541A  50E3               	movf	plusw1,w,c
 18605  01541C  5EDE               	subwf	postinc2,f,c
 18606  01541E  0EEF               	movlw	-17
 18607  015420  50E3               	movf	plusw1,w,c
 18608  015422  5ADE               	subwfb	postinc2,f,c
 18609  015424  0EF0               	movlw	-16
 18610  015426  50E3               	movf	plusw1,w,c
 18611  015428  5ADE               	subwfb	postinc2,f,c
 18612  01542A  0EF1               	movlw	-15
 18613  01542C  50E3               	movf	plusw1,w,c
 18614  01542E  5ADE               	subwfb	postinc2,f,c
 18615  015430  0EF2               	movlw	-14
 18616  015432  50E3               	movf	plusw1,w,c
 18617  015434  5ADE               	subwfb	postinc2,f,c
 18618  015436  0EF3               	movlw	-13
 18619  015438  50E3               	movf	plusw1,w,c
 18620  01543A  5ADE               	subwfb	postinc2,f,c
 18621  01543C  0EF4               	movlw	-12
 18622  01543E  50E3               	movf	plusw1,w,c
 18623  015440  5ADE               	subwfb	postinc2,f,c
 18624  015442  0EF5               	movlw	-11
 18625  015444  50E3               	movf	plusw1,w,c
 18626  015446  5ADE               	subwfb	postinc2,f,c
 18627  015448                     l6541:
 18628                           
 18629                           ;stkvar	_divisor @ sp[(-2)+-16]
 18630  015448  90D8               	bcf	status,0,c
 18631  01544A  0EF5               	movlw	-11
 18632  01544C  32E3               	rrcf	plusw1,f,c
 18633  01544E  0EF4               	movlw	-12
 18634  015450  32E3               	rrcf	plusw1,f,c
 18635  015452  0EF3               	movlw	-13
 18636  015454  32E3               	rrcf	plusw1,f,c
 18637  015456  0EF2               	movlw	-14
 18638  015458  32E3               	rrcf	plusw1,f,c
 18639  01545A  0EF1               	movlw	-15
 18640  01545C  32E3               	rrcf	plusw1,f,c
 18641  01545E  0EF0               	movlw	-16
 18642  015460  32E3               	rrcf	plusw1,f,c
 18643  015462  0EEF               	movlw	-17
 18644  015464  32E3               	rrcf	plusw1,f,c
 18645  015466  0EEE               	movlw	-18
 18646  015468  32E3               	rrcf	plusw1,f,c
 18647                           
 18648                           ;stkvar	_counter @ sp[(-2)+1]
 18649  01546A  0EFF               	movlw	-1
 18650  01546C  50E3               	movf	plusw1,w,c
 18651  01546E  6E32               	movwf	btemp^0,c
 18652  015470  0E01               	movlw	1
 18653  015472  5E32               	subwf	btemp^0,f,c
 18654  015474  0EFF               	movlw	-1
 18655  015476  0060  F0CB  FFE3   	movff	btemp,plusw1
 18656  01547C  A4D8               	btfss	status,2,c
 18657  01547E  D7A4               	goto	u5450
 18658  015480                     u5470:
 18659                           
 18660                           ;stkvar	_sign @ sp[(-2)+0]
 18661  015480  0EFE               	movlw	-2
 18662  015482  50E3               	movf	plusw1,w,c
 18663  015484  B4D8               	btfsc	status,2,c
 18664  015486  D025               	goto	u5490
 18665                           
 18666                           ;stkvar	_dividend @ sp[(-2)+-8]
 18667                           ;stkvar	_dividend @ sp[(-2)+-8]
 18668  015488  0EF6               	movlw	-10
 18669  01548A  6CE3               	negf	plusw1,c
 18670  01548C  0EF7               	movlw	-9
 18671  01548E  1EE3               	comf	plusw1,f,c
 18672  015490  0EF8               	movlw	-8
 18673  015492  1EE3               	comf	plusw1,f,c
 18674  015494  0EF9               	movlw	-7
 18675  015496  1EE3               	comf	plusw1,f,c
 18676  015498  0EFA               	movlw	-6
 18677  01549A  1EE3               	comf	plusw1,f,c
 18678  01549C  0EFB               	movlw	-5
 18679  01549E  1EE3               	comf	plusw1,f,c
 18680  0154A0  0EFC               	movlw	-4
 18681  0154A2  1EE3               	comf	plusw1,f,c
 18682  0154A4  0EFD               	movlw	-3
 18683  0154A6  1EE3               	comf	plusw1,f,c
 18684  0154A8  E314               	bnc	u5490
 18685  0154AA  0EF7               	movlw	-9
 18686  0154AC  2AE3               	incf	plusw1,f,c
 18687  0154AE  E311               	bnc	u5490
 18688  0154B0  0EF8               	movlw	-8
 18689  0154B2  2AE3               	incf	plusw1,f,c
 18690  0154B4  E30E               	bnc	u5490
 18691  0154B6  0EF9               	movlw	-7
 18692  0154B8  2AE3               	incf	plusw1,f,c
 18693  0154BA  E30B               	bnc	u5490
 18694  0154BC  0EFA               	movlw	-6
 18695  0154BE  2AE3               	incf	plusw1,f,c
 18696  0154C0  E308               	bnc	u5490
 18697  0154C2  0EFB               	movlw	-5
 18698  0154C4  2AE3               	incf	plusw1,f,c
 18699  0154C6  E305               	bnc	u5490
 18700  0154C8  0EFC               	movlw	-4
 18701  0154CA  2AE3               	incf	plusw1,f,c
 18702  0154CC  E302               	bnc	u5490
 18703  0154CE  0EFD               	movlw	-3
 18704  0154D0  2AE3               	incf	plusw1,f,c
 18705  0154D2                     u5490:
 18706                           
 18707                           ;stkvar	_dividend @ sp[(-2)+-8]
 18708  0154D2  0EF6               	movlw	246
 18709  0154D4  24E1               	addwf	fsr1l,w,c
 18710  0154D6  6ED9               	movwf	fsr2l,c
 18711  0154D8  0EFF               	movlw	255
 18712  0154DA  20E2               	addwfc	fsr1h,w,c
 18713  0154DC  6EDA               	movwf	fsr2h,c
 18714                           
 18715                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18716  0154DE  0E08               	movlw	8
 18717  0154E0  6E32               	movwf	btemp^0,c
 18718  0154E2  0EF6               	movlw	-10
 18719  0154E4                     us550999:
 18720  0154E4  006F FF7B FFE3     	movff	postinc2,plusw1
 18721  0154EA  28E8               	incf	wreg,w,c
 18722  0154EC  2E32               	decfsz	btemp^0,f,c
 18723  0154EE  D7FA               	bra	us550999
 18724                           
 18725                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18726  0154F0  52E5               	movf	postdec1,f,c
 18727  0154F2  52E5               	movf	postdec1,f,c
 18728  0154F4  0012               	return		;funcret
 18729  0154F6                     __end_of___aomod:
 18730                           	opt callstack 0
 18731                           
 18732 ;; *************** function ___aodiv *****************
 18733 ;; Defined at:
 18734 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18735 ;; Parameters:    Size  Location     Type
 18736 ;;  dividend        8  [STACK] long long 
 18737 ;;  divisor         8  [STACK] long long 
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;  quotient        8  [STACK] long long 
 18740 ;;  sign            1  [STACK] unsigned char 
 18741 ;;  counter         1  [STACK] unsigned char 
 18742 ;; Return value:  Size  Location     Type
 18743 ;;                  8  [STACK] long long 
 18744 ;; Registers used:
 18745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18746 ;; Tracked objects:
 18747 ;;		On entry : 0/2
 18748 ;;		On exit  : 0/0
 18749 ;;		Unchanged: 0/0
 18750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18755 ;;Total ram usage:        0 bytes
 18756 ;; Hardware stack levels used:    1
 18757 ;; Hardware stack levels required when called:    6
 18758 ;; This function calls:
 18759 ;;		Nothing
 18760 ;; This function is called by:
 18761 ;;		_dtoa
 18762 ;; This function uses a reentrant model
 18763 ;;
 18764                           
 18765                           	psect	text64
 18766  014DC2                     __ptext64:
 18767                           	opt callstack 0
 18768  014DC2                     ___aodiv:
 18769                           	opt callstack 0
 18770                           
 18771                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18772  014DC2  0E0A               	movlw	10
 18773  014DC4  26E1               	addwf	fsr1l,f,c
 18774  014DC6  0E00               	movlw	0
 18775  014DC8  22E2               	addwfc	fsr1h,f,c
 18776                           
 18777                           ;stkvar	_sign @ sp[(-10)+8]
 18778                           
 18779                           ;incstack = 0
 18780  014DCA  0EFE               	movlw	-2
 18781  014DCC  6AE3               	clrf	plusw1,c
 18782                           
 18783                           ;stkvar	_divisor @ sp[(-10)+-16]
 18784  014DCE  0EED               	movlw	-19
 18785  014DD0  AEE3               	btfss	plusw1,7,c
 18786  014DD2  D028               	goto	l6481
 18787                           
 18788                           ;stkvar	_divisor @ sp[(-10)+-16]
 18789                           ;stkvar	_divisor @ sp[(-10)+-16]
 18790  014DD4  0EE6               	movlw	-26
 18791  014DD6  6CE3               	negf	plusw1,c
 18792  014DD8  0EE7               	movlw	-25
 18793  014DDA  1EE3               	comf	plusw1,f,c
 18794  014DDC  0EE8               	movlw	-24
 18795  014DDE  1EE3               	comf	plusw1,f,c
 18796  014DE0  0EE9               	movlw	-23
 18797  014DE2  1EE3               	comf	plusw1,f,c
 18798  014DE4  0EEA               	movlw	-22
 18799  014DE6  1EE3               	comf	plusw1,f,c
 18800  014DE8  0EEB               	movlw	-21
 18801  014DEA  1EE3               	comf	plusw1,f,c
 18802  014DEC  0EEC               	movlw	-20
 18803  014DEE  1EE3               	comf	plusw1,f,c
 18804  014DF0  0EED               	movlw	-19
 18805  014DF2  1EE3               	comf	plusw1,f,c
 18806  014DF4  E314               	bnc	u5290
 18807  014DF6  0EE7               	movlw	-25
 18808  014DF8  2AE3               	incf	plusw1,f,c
 18809  014DFA  E311               	bnc	u5290
 18810  014DFC  0EE8               	movlw	-24
 18811  014DFE  2AE3               	incf	plusw1,f,c
 18812  014E00  E30E               	bnc	u5290
 18813  014E02  0EE9               	movlw	-23
 18814  014E04  2AE3               	incf	plusw1,f,c
 18815  014E06  E30B               	bnc	u5290
 18816  014E08  0EEA               	movlw	-22
 18817  014E0A  2AE3               	incf	plusw1,f,c
 18818  014E0C  E308               	bnc	u5290
 18819  014E0E  0EEB               	movlw	-21
 18820  014E10  2AE3               	incf	plusw1,f,c
 18821  014E12  E305               	bnc	u5290
 18822  014E14  0EEC               	movlw	-20
 18823  014E16  2AE3               	incf	plusw1,f,c
 18824  014E18  E302               	bnc	u5290
 18825  014E1A  0EED               	movlw	-19
 18826  014E1C  2AE3               	incf	plusw1,f,c
 18827  014E1E                     u5290:
 18828                           
 18829                           ;stkvar	_sign @ sp[(-10)+8]
 18830  014E1E  0EFE               	movlw	-2
 18831  014E20  6AE3               	clrf	plusw1,c
 18832  014E22  2AE3               	incf	plusw1,f,c
 18833  014E24                     l6481:
 18834                           
 18835                           ;stkvar	_dividend @ sp[(-10)+-8]
 18836  014E24  0EF5               	movlw	-11
 18837  014E26  AEE3               	btfss	plusw1,7,c
 18838  014E28  D027               	goto	l6487
 18839                           
 18840                           ;stkvar	_dividend @ sp[(-10)+-8]
 18841                           ;stkvar	_dividend @ sp[(-10)+-8]
 18842  014E2A  0EEE               	movlw	-18
 18843  014E2C  6CE3               	negf	plusw1,c
 18844  014E2E  0EEF               	movlw	-17
 18845  014E30  1EE3               	comf	plusw1,f,c
 18846  014E32  0EF0               	movlw	-16
 18847  014E34  1EE3               	comf	plusw1,f,c
 18848  014E36  0EF1               	movlw	-15
 18849  014E38  1EE3               	comf	plusw1,f,c
 18850  014E3A  0EF2               	movlw	-14
 18851  014E3C  1EE3               	comf	plusw1,f,c
 18852  014E3E  0EF3               	movlw	-13
 18853  014E40  1EE3               	comf	plusw1,f,c
 18854  014E42  0EF4               	movlw	-12
 18855  014E44  1EE3               	comf	plusw1,f,c
 18856  014E46  0EF5               	movlw	-11
 18857  014E48  1EE3               	comf	plusw1,f,c
 18858  014E4A  E314               	bnc	u5310
 18859  014E4C  0EEF               	movlw	-17
 18860  014E4E  2AE3               	incf	plusw1,f,c
 18861  014E50  E311               	bnc	u5310
 18862  014E52  0EF0               	movlw	-16
 18863  014E54  2AE3               	incf	plusw1,f,c
 18864  014E56  E30E               	bnc	u5310
 18865  014E58  0EF1               	movlw	-15
 18866  014E5A  2AE3               	incf	plusw1,f,c
 18867  014E5C  E30B               	bnc	u5310
 18868  014E5E  0EF2               	movlw	-14
 18869  014E60  2AE3               	incf	plusw1,f,c
 18870  014E62  E308               	bnc	u5310
 18871  014E64  0EF3               	movlw	-13
 18872  014E66  2AE3               	incf	plusw1,f,c
 18873  014E68  E305               	bnc	u5310
 18874  014E6A  0EF4               	movlw	-12
 18875  014E6C  2AE3               	incf	plusw1,f,c
 18876  014E6E  E302               	bnc	u5310
 18877  014E70  0EF5               	movlw	-11
 18878  014E72  2AE3               	incf	plusw1,f,c
 18879  014E74                     u5310:
 18880                           
 18881                           ;stkvar	_sign @ sp[(-10)+8]
 18882  014E74  0EFE               	movlw	-2
 18883  014E76  70E3               	btg	plusw1,0,c
 18884  014E78                     l6487:
 18885                           
 18886                           ;stkvar	_quotient @ sp[(-10)+0]
 18887  014E78  0E07               	movlw	7
 18888  014E7A  6E32               	movwf	btemp^0,c
 18889  014E7C  0EF6               	movlw	-10
 18890  014E7E                     u5321:
 18891  014E7E  6AE3               	clrf	plusw1,c
 18892  014E80  2AE8               	incf	wreg,f,c
 18893  014E82  0632               	decf	btemp^0,f,c
 18894  014E84  E2FC               	bc	u5321
 18895                           
 18896                           ;stkvar	_divisor @ sp[(-10)+-16]
 18897  014E86  0EE6               	movlw	-26
 18898  014E88  50E3               	movf	plusw1,w,c
 18899  014E8A  E116               	bnz	u5330
 18900  014E8C  0EE7               	movlw	-25
 18901  014E8E  50E3               	movf	plusw1,w,c
 18902  014E90  E113               	bnz	u5330
 18903  014E92  0EE8               	movlw	-24
 18904  014E94  50E3               	movf	plusw1,w,c
 18905  014E96  E110               	bnz	u5330
 18906  014E98  0EE9               	movlw	-23
 18907  014E9A  50E3               	movf	plusw1,w,c
 18908  014E9C  E10D               	bnz	u5330
 18909  014E9E  0EEA               	movlw	-22
 18910  014EA0  50E3               	movf	plusw1,w,c
 18911  014EA2  E10A               	bnz	u5330
 18912  014EA4  0EEB               	movlw	-21
 18913  014EA6  50E3               	movf	plusw1,w,c
 18914  014EA8  E107               	bnz	u5330
 18915  014EAA  0EEC               	movlw	-20
 18916  014EAC  50E3               	movf	plusw1,w,c
 18917  014EAE  E104               	bnz	u5330
 18918  014EB0  0EED               	movlw	-19
 18919  014EB2  50E3               	movf	plusw1,w,c
 18920  014EB4  B4D8               	btfsc	status,2,c
 18921  014EB6  D088               	goto	u5360
 18922  014EB8                     u5330:
 18923                           
 18924                           ;stkvar	_counter @ sp[(-10)+9]
 18925  014EB8  0EFF               	movlw	-1
 18926  014EBA  6AE3               	clrf	plusw1,c
 18927  014EBC  D012               	goto	L18
 18928  014EBE                     l6493:
 18929                           
 18930                           ;stkvar	_divisor @ sp[(-10)+-16]
 18931  014EBE  90D8               	bcf	status,0,c
 18932  014EC0  0EE6               	movlw	-26
 18933  014EC2  36E3               	rlcf	plusw1,f,c
 18934  014EC4  0EE7               	movlw	-25
 18935  014EC6  36E3               	rlcf	plusw1,f,c
 18936  014EC8  0EE8               	movlw	-24
 18937  014ECA  36E3               	rlcf	plusw1,f,c
 18938  014ECC  0EE9               	movlw	-23
 18939  014ECE  36E3               	rlcf	plusw1,f,c
 18940  014ED0  0EEA               	movlw	-22
 18941  014ED2  36E3               	rlcf	plusw1,f,c
 18942  014ED4  0EEB               	movlw	-21
 18943  014ED6  36E3               	rlcf	plusw1,f,c
 18944  014ED8  0EEC               	movlw	-20
 18945  014EDA  36E3               	rlcf	plusw1,f,c
 18946  014EDC  0EED               	movlw	-19
 18947  014EDE  36E3               	rlcf	plusw1,f,c
 18948                           
 18949                           ;stkvar	_counter @ sp[(-10)+9]
 18950  014EE0  0EFF               	movlw	-1
 18951  014EE2                     L18:
 18952  014EE2  2AE3               	incf	plusw1,f,c
 18953                           
 18954                           ;stkvar	_divisor @ sp[(-10)+-16]
 18955  014EE4  0EED               	movlw	-19
 18956  014EE6  AEE3               	btfss	plusw1,7,c
 18957  014EE8  D7EA               	goto	l6493
 18958  014EEA                     u5340:
 18959                           
 18960                           ;stkvar	_quotient @ sp[(-10)+0]
 18961  014EEA  90D8               	bcf	status,0,c
 18962  014EEC  0EF6               	movlw	-10
 18963  014EEE  36E3               	rlcf	plusw1,f,c
 18964  014EF0  0EF7               	movlw	-9
 18965  014EF2  36E3               	rlcf	plusw1,f,c
 18966  014EF4  0EF8               	movlw	-8
 18967  014EF6  36E3               	rlcf	plusw1,f,c
 18968  014EF8  0EF9               	movlw	-7
 18969  014EFA  36E3               	rlcf	plusw1,f,c
 18970  014EFC  0EFA               	movlw	-6
 18971  014EFE  36E3               	rlcf	plusw1,f,c
 18972  014F00  0EFB               	movlw	-5
 18973  014F02  36E3               	rlcf	plusw1,f,c
 18974  014F04  0EFC               	movlw	-4
 18975  014F06  36E3               	rlcf	plusw1,f,c
 18976  014F08  0EFD               	movlw	-3
 18977  014F0A  36E3               	rlcf	plusw1,f,c
 18978                           
 18979                           ;stkvar	_divisor @ sp[(-10)+-16]
 18980                           ;stkvar	_dividend @ sp[(-10)+-8]
 18981  014F0C  50E1               	movf	fsr1l,w,c
 18982  014F0E  0FEE               	addlw	-18
 18983  014F10  6ED9               	movwf	fsr2l,c
 18984  014F12  50E2               	movf	fsr1h,w,c
 18985  014F14  6EDA               	movwf	fsr2h,c
 18986  014F16  0EFF               	movlw	255
 18987  014F18  22DA               	addwfc	fsr2h,f,c
 18988  014F1A  0EE6               	movlw	-26
 18989  014F1C  50E3               	movf	plusw1,w,c
 18990  014F1E  5CDE               	subwf	postinc2,w,c
 18991  014F20  0EE7               	movlw	-25
 18992  014F22  50E3               	movf	plusw1,w,c
 18993  014F24  58DE               	subwfb	postinc2,w,c
 18994  014F26  0EE8               	movlw	-24
 18995  014F28  50E3               	movf	plusw1,w,c
 18996  014F2A  58DE               	subwfb	postinc2,w,c
 18997  014F2C  0EE9               	movlw	-23
 18998  014F2E  50E3               	movf	plusw1,w,c
 18999  014F30  58DE               	subwfb	postinc2,w,c
 19000  014F32  0EEA               	movlw	-22
 19001  014F34  50E3               	movf	plusw1,w,c
 19002  014F36  58DE               	subwfb	postinc2,w,c
 19003  014F38  0EEB               	movlw	-21
 19004  014F3A  50E3               	movf	plusw1,w,c
 19005  014F3C  58DE               	subwfb	postinc2,w,c
 19006  014F3E  0EEC               	movlw	-20
 19007  014F40  50E3               	movf	plusw1,w,c
 19008  014F42  58DE               	subwfb	postinc2,w,c
 19009  014F44  0EED               	movlw	-19
 19010  014F46  50E3               	movf	plusw1,w,c
 19011  014F48  58DE               	subwfb	postinc2,w,c
 19012  014F4A  A0D8               	btfss	status,0,c
 19013  014F4C  D021               	goto	l6505
 19014                           
 19015                           ;stkvar	_divisor @ sp[(-10)+-16]
 19016                           ;stkvar	_dividend @ sp[(-10)+-8]
 19017  014F4E  50E1               	movf	fsr1l,w,c
 19018  014F50  0FEE               	addlw	-18
 19019  014F52  6ED9               	movwf	fsr2l,c
 19020  014F54  50E2               	movf	fsr1h,w,c
 19021  014F56  6EDA               	movwf	fsr2h,c
 19022  014F58  0EFF               	movlw	255
 19023  014F5A  22DA               	addwfc	fsr2h,f,c
 19024  014F5C  0EE6               	movlw	-26
 19025  014F5E  50E3               	movf	plusw1,w,c
 19026  014F60  5EDE               	subwf	postinc2,f,c
 19027  014F62  0EE7               	movlw	-25
 19028  014F64  50E3               	movf	plusw1,w,c
 19029  014F66  5ADE               	subwfb	postinc2,f,c
 19030  014F68  0EE8               	movlw	-24
 19031  014F6A  50E3               	movf	plusw1,w,c
 19032  014F6C  5ADE               	subwfb	postinc2,f,c
 19033  014F6E  0EE9               	movlw	-23
 19034  014F70  50E3               	movf	plusw1,w,c
 19035  014F72  5ADE               	subwfb	postinc2,f,c
 19036  014F74  0EEA               	movlw	-22
 19037  014F76  50E3               	movf	plusw1,w,c
 19038  014F78  5ADE               	subwfb	postinc2,f,c
 19039  014F7A  0EEB               	movlw	-21
 19040  014F7C  50E3               	movf	plusw1,w,c
 19041  014F7E  5ADE               	subwfb	postinc2,f,c
 19042  014F80  0EEC               	movlw	-20
 19043  014F82  50E3               	movf	plusw1,w,c
 19044  014F84  5ADE               	subwfb	postinc2,f,c
 19045  014F86  0EED               	movlw	-19
 19046  014F88  50E3               	movf	plusw1,w,c
 19047  014F8A  5ADE               	subwfb	postinc2,f,c
 19048                           
 19049                           ;stkvar	_quotient @ sp[(-10)+0]
 19050  014F8C  0EF6               	movlw	-10
 19051  014F8E  80E3               	bsf	plusw1,0,c
 19052  014F90                     l6505:
 19053                           
 19054                           ;stkvar	_divisor @ sp[(-10)+-16]
 19055  014F90  90D8               	bcf	status,0,c
 19056  014F92  0EED               	movlw	-19
 19057  014F94  32E3               	rrcf	plusw1,f,c
 19058  014F96  0EEC               	movlw	-20
 19059  014F98  32E3               	rrcf	plusw1,f,c
 19060  014F9A  0EEB               	movlw	-21
 19061  014F9C  32E3               	rrcf	plusw1,f,c
 19062  014F9E  0EEA               	movlw	-22
 19063  014FA0  32E3               	rrcf	plusw1,f,c
 19064  014FA2  0EE9               	movlw	-23
 19065  014FA4  32E3               	rrcf	plusw1,f,c
 19066  014FA6  0EE8               	movlw	-24
 19067  014FA8  32E3               	rrcf	plusw1,f,c
 19068  014FAA  0EE7               	movlw	-25
 19069  014FAC  32E3               	rrcf	plusw1,f,c
 19070  014FAE  0EE6               	movlw	-26
 19071  014FB0  32E3               	rrcf	plusw1,f,c
 19072                           
 19073                           ;stkvar	_counter @ sp[(-10)+9]
 19074  014FB2  0EFF               	movlw	-1
 19075  014FB4  50E3               	movf	plusw1,w,c
 19076  014FB6  6E32               	movwf	btemp^0,c
 19077  014FB8  0E01               	movlw	1
 19078  014FBA  5E32               	subwf	btemp^0,f,c
 19079  014FBC  0EFF               	movlw	-1
 19080  014FBE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19081  014FC4  A4D8               	btfss	status,2,c
 19082  014FC6  D791               	goto	u5340
 19083  014FC8                     u5360:
 19084                           
 19085                           ;stkvar	_sign @ sp[(-10)+8]
 19086  014FC8  0EFE               	movlw	-2
 19087  014FCA  50E3               	movf	plusw1,w,c
 19088  014FCC  B4D8               	btfsc	status,2,c
 19089  014FCE  D025               	goto	u5380
 19090                           
 19091                           ;stkvar	_quotient @ sp[(-10)+0]
 19092                           ;stkvar	_quotient @ sp[(-10)+0]
 19093  014FD0  0EF6               	movlw	-10
 19094  014FD2  6CE3               	negf	plusw1,c
 19095  014FD4  0EF7               	movlw	-9
 19096  014FD6  1EE3               	comf	plusw1,f,c
 19097  014FD8  0EF8               	movlw	-8
 19098  014FDA  1EE3               	comf	plusw1,f,c
 19099  014FDC  0EF9               	movlw	-7
 19100  014FDE  1EE3               	comf	plusw1,f,c
 19101  014FE0  0EFA               	movlw	-6
 19102  014FE2  1EE3               	comf	plusw1,f,c
 19103  014FE4  0EFB               	movlw	-5
 19104  014FE6  1EE3               	comf	plusw1,f,c
 19105  014FE8  0EFC               	movlw	-4
 19106  014FEA  1EE3               	comf	plusw1,f,c
 19107  014FEC  0EFD               	movlw	-3
 19108  014FEE  1EE3               	comf	plusw1,f,c
 19109  014FF0  E314               	bnc	u5380
 19110  014FF2  0EF7               	movlw	-9
 19111  014FF4  2AE3               	incf	plusw1,f,c
 19112  014FF6  E311               	bnc	u5380
 19113  014FF8  0EF8               	movlw	-8
 19114  014FFA  2AE3               	incf	plusw1,f,c
 19115  014FFC  E30E               	bnc	u5380
 19116  014FFE  0EF9               	movlw	-7
 19117  015000  2AE3               	incf	plusw1,f,c
 19118  015002  E30B               	bnc	u5380
 19119  015004  0EFA               	movlw	-6
 19120  015006  2AE3               	incf	plusw1,f,c
 19121  015008  E308               	bnc	u5380
 19122  01500A  0EFB               	movlw	-5
 19123  01500C  2AE3               	incf	plusw1,f,c
 19124  01500E  E305               	bnc	u5380
 19125  015010  0EFC               	movlw	-4
 19126  015012  2AE3               	incf	plusw1,f,c
 19127  015014  E302               	bnc	u5380
 19128  015016  0EFD               	movlw	-3
 19129  015018  2AE3               	incf	plusw1,f,c
 19130  01501A                     u5380:
 19131                           
 19132                           ;stkvar	_quotient @ sp[(-10)+0]
 19133  01501A  0EF6               	movlw	246
 19134  01501C  24E1               	addwf	fsr1l,w,c
 19135  01501E  6ED9               	movwf	fsr2l,c
 19136  015020  0EFF               	movlw	255
 19137  015022  20E2               	addwfc	fsr1h,w,c
 19138  015024  6EDA               	movwf	fsr2h,c
 19139                           
 19140                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19141  015026  0E08               	movlw	8
 19142  015028  6E32               	movwf	btemp^0,c
 19143  01502A  0EEE               	movlw	-18
 19144  01502C                     us539999:
 19145  01502C  006F FF7B FFE3     	movff	postinc2,plusw1
 19146  015032  28E8               	incf	wreg,w,c
 19147  015034  2E32               	decfsz	btemp^0,f,c
 19148  015036  D7FA               	bra	us539999
 19149                           
 19150                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19151  015038  0EF6               	movlw	246
 19152  01503A  26E1               	addwf	fsr1l,f,c
 19153  01503C  0EFF               	movlw	255
 19154  01503E  22E2               	addwfc	fsr1h,f,c
 19155  015040  0012               	return		;funcret
 19156  015042                     __end_of___aodiv:
 19157                           	opt callstack 0
 19158                           
 19159 ;; *************** function _ctoa *****************
 19160 ;; Defined at:
 19161 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19162 ;; Parameters:    Size  Location     Type
 19163 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19164 ;;		 -> f(6), NULL(0), 
 19165 ;;  c               1  [STACK] unsigned char 
 19166 ;; Auto vars:     Size  Location     Type
 19167 ;;  w               2  [STACK] int 
 19168 ;;  l               2    0        int 
 19169 ;; Return value:  Size  Location     Type
 19170 ;;                  2  [STACK] int 
 19171 ;; Registers used:
 19172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19173 ;; Tracked objects:
 19174 ;;		On entry : 0/5
 19175 ;;		On exit  : 0/0
 19176 ;;		Unchanged: 0/0
 19177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19182 ;;Total ram usage:        0 bytes
 19183 ;; Hardware stack levels used:    1
 19184 ;; Hardware stack levels required when called:   11
 19185 ;; This function calls:
 19186 ;;		_pad
 19187 ;; This function is called by:
 19188 ;;		_vfpfcnvrt
 19189 ;; This function uses a reentrant model
 19190 ;;
 19191                           
 19192                           	psect	text65
 19193  0172C0                     __ptext65:
 19194                           	opt callstack 0
 19195  0172C0                     _ctoa:
 19196                           	opt callstack 0
 19197                           
 19198                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19199  0172C0  52E6               	movf	postinc1,f,c
 19200  0172C2  52E6               	movf	postinc1,f,c
 19201                           
 19202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19203                           
 19204                           ;incstack = 0
 19205  0172C4  501B               	movf	_width^0,w,c
 19206  0172C6  101C               	iorwf	(_width+1)^0,w,c
 19207  0172C8  A4D8               	btfss	status,2,c
 19208  0172CA  D009               	goto	l9249
 19209                           
 19210                           ;stkvar	_w @ sp[(-2)+0]
 19211  0172CC  0EFE               	movlw	-2
 19212  0172CE  0060  F06F  FFE3   	movff	_width,plusw1
 19213  0172D4  0EFF               	movlw	-1
 19214  0172D6  0060  F073  FFE3   	movff	_width+1,plusw1
 19215  0172DC  D016               	goto	l9251
 19216  0172DE                     l9249:
 19217  0172DE  0EFF               	movlw	255
 19218  0172E0  6E3C               	movwf	(btemp+10)^0,c
 19219  0172E2  0EFF               	movlw	255
 19220  0172E4  6E3D               	movwf	(btemp+11)^0,c
 19221  0172E6  0060  F06C  F03A   	movff	_width,btemp+8
 19222  0172EC  0060  F070  F03B   	movff	_width+1,btemp+9
 19223  0172F2  503C               	movf	(btemp+10)^0,w,c
 19224  0172F4  263A               	addwf	(btemp+8)^0,f,c
 19225  0172F6  503D               	movf	(btemp+11)^0,w,c
 19226  0172F8  223B               	addwfc	(btemp+9)^0,f,c
 19227                           
 19228                           ;stkvar	_w @ sp[(-2)+0]
 19229  0172FA  0EFE               	movlw	-2
 19230  0172FC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19231  017302  0EFF               	movlw	-1
 19232  017304  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19233  01730A                     l9251:
 19234                           
 19235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19236                           ;stkvar	_c @ sp[(-2)+-3]
 19237  01730A  0EFB               	movlw	-5
 19238  01730C  006F FF8C  F2AC    	movff	plusw1,_dbuf
 19239                           
 19240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19241  017312  0102               	movlb	2	; () banked
 19242  017314  6BAD               	clrf	(_dbuf+1)& (0+255),b
 19243                           
 19244                           ; BSR set to: 2
 19245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19246                           ;stkvar	_w @ sp[(-2)+0]
 19247  017316  0EFE               	movlw	-2
 19248  017318  006F FF8F FFE6     	movff	plusw1,postinc1
 19249  01731E  006F FF8F FFE6     	movff	plusw1,postinc1
 19250  017324  0EAC               	movlw	low _dbuf
 19251  017326  6EE6               	movwf	postinc1,c
 19252  017328  0E02               	movlw	high _dbuf
 19253  01732A  6EE6               	movwf	postinc1,c
 19254                           
 19255                           ;stkvar	_fp @ sp[(-6)+-2]
 19256  01732C  0EF8               	movlw	-8
 19257  01732E  006F FF8F FFE6     	movff	plusw1,postinc1
 19258  017334  006F FF8F FFE6     	movff	plusw1,postinc1
 19259  01733A  EC89  F0B3         	call	_pad	;wreg free
 19260                           
 19261                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19262  01733E  0EFB               	movlw	251
 19263  017340  26E1               	addwf	fsr1l,f,c
 19264  017342  0EFF               	movlw	255
 19265  017344  22E2               	addwfc	fsr1h,f,c
 19266  017346  0012               	return		;funcret
 19267  017348                     __end_of_ctoa:
 19268                           	opt callstack 0
 19269                           
 19270 ;; *************** function _pad *****************
 19271 ;; Defined at:
 19272 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19273 ;; Parameters:    Size  Location     Type
 19274 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19275 ;;		 -> f(6), NULL(0), 
 19276 ;;  buf             2  [STACK] PTR unsigned char 
 19277 ;;		 -> dbuf(80), 
 19278 ;;  p               2  [STACK] int 
 19279 ;; Auto vars:     Size  Location     Type
 19280 ;;  w               2  [STACK] int 
 19281 ;;  i               2  [STACK] int 
 19282 ;; Return value:  Size  Location     Type
 19283 ;;                  2  [STACK] int 
 19284 ;; Registers used:
 19285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19286 ;; Tracked objects:
 19287 ;;		On entry : 0/2
 19288 ;;		On exit  : 0/0
 19289 ;;		Unchanged: 0/0
 19290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19295 ;;Total ram usage:        0 bytes
 19296 ;; Hardware stack levels used:    1
 19297 ;; Hardware stack levels required when called:   10
 19298 ;; This function calls:
 19299 ;;		_fputc
 19300 ;;		_fputs
 19301 ;;		_strlen
 19302 ;; This function is called by:
 19303 ;;		_ctoa
 19304 ;;		_dtoa
 19305 ;;		_efgtoa
 19306 ;;		_xtoa
 19307 ;; This function uses a reentrant model
 19308 ;;
 19309                           
 19310                           	psect	text66
 19311  016712                     __ptext66:
 19312                           	opt callstack 0
 19313  016712                     _pad:
 19314                           	opt callstack 0
 19315                           
 19316                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19317  016712  52E6               	movf	postinc1,f,c
 19318  016714  52E6               	movf	postinc1,f,c
 19319  016716  52E6               	movf	postinc1,f,c
 19320  016718  52E6               	movf	postinc1,f,c
 19321                           
 19322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19323                           
 19324                           ;incstack = 0
 19325  01671A  A01F               	btfss	_flags^0,0,c
 19326  01671C  D010               	goto	l9223
 19327                           
 19328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19329                           ;stkvar	_fp @ sp[(-4)+-2]
 19330  01671E  0EFA               	movlw	-6
 19331  016720  006F FF8F FFE6     	movff	plusw1,postinc1
 19332  016726  006F FF8F FFE6     	movff	plusw1,postinc1
 19333                           
 19334                           ;stkvar	_buf @ sp[(-6)+-4]
 19335  01672C  0EF6               	movlw	-10
 19336  01672E  006F FF8F FFE6     	movff	plusw1,postinc1
 19337  016734  006F FF8F FFE6     	movff	plusw1,postinc1
 19338  01673A  EC82  F0B8         	call	_fputs	;wreg free
 19339  01673E                     l9223:
 19340                           
 19341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19342                           ;stkvar	_p @ sp[(-4)+-6]
 19343  01673E  0EF7               	movlw	-9
 19344  016740  BEE3               	btfsc	plusw1,7,c
 19345  016742  D011               	goto	l9227
 19346                           
 19347                           ;stkvar	_p @ sp[(-4)+-6]
 19348                           ;stkvar	_w @ sp[(-4)+0]
 19349  016744  0EF6               	movlw	-10
 19350  016746  006F FF8C  F032    	movff	plusw1,btemp
 19351  01674C  0EFC               	movlw	-4
 19352  01674E  0060  F0CB  FFE3   	movff	btemp,plusw1
 19353  016754  0EF7               	movlw	-9
 19354  016756  006F FF8C  F032    	movff	plusw1,btemp
 19355  01675C  0EFD               	movlw	-3
 19356  01675E  0060  F0CB  FFE3   	movff	btemp,plusw1
 19357  016764  D004               	goto	l1806
 19358  016766                     l9227:
 19359                           
 19360                           ;stkvar	_w @ sp[(-4)+0]
 19361  016766  0EFC               	movlw	-4
 19362  016768  6AE3               	clrf	plusw1,c
 19363  01676A  0EFD               	movlw	-3
 19364  01676C  6AE3               	clrf	plusw1,c
 19365  01676E                     l1806:
 19366                           
 19367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19368                           ;stkvar	_i @ sp[(-4)+2]
 19369  01676E  0EFE               	movlw	-2
 19370  016770  6AE3               	clrf	plusw1,c
 19371  016772  0EFF               	movlw	-1
 19372  016774  6AE3               	clrf	plusw1,c
 19373                           
 19374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19375  016776  D01E               	goto	l9233
 19376  016778                     l9229:
 19377                           
 19378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19379                           ;stkvar	_fp @ sp[(-4)+-2]
 19380  016778  0EFA               	movlw	-6
 19381  01677A  006F FF8F FFE6     	movff	plusw1,postinc1
 19382  016780  006F FF8F FFE6     	movff	plusw1,postinc1
 19383  016786  0E20               	movlw	32
 19384  016788  6EE6               	movwf	postinc1,c
 19385  01678A  0E00               	movlw	0
 19386  01678C  6EE6               	movwf	postinc1,c
 19387  01678E  EC6B  F0B2         	call	_fputc	;wreg free
 19388                           
 19389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19390                           ;stkvar	_i @ sp[(-4)+2]
 19391  016792  0EFE               	movlw	-2
 19392  016794  50E3               	movf	plusw1,w,c
 19393  016796  0F01               	addlw	1
 19394  016798  6E32               	movwf	btemp^0,c
 19395  01679A  0EFE               	movlw	-2
 19396  01679C  0060  F0CB  FFE3   	movff	btemp,plusw1
 19397  0167A2  6A32               	clrf	btemp^0,c
 19398  0167A4  0EFF               	movlw	-1
 19399  0167A6  50E3               	movf	plusw1,w,c
 19400  0167A8  2032               	addwfc	btemp^0,w,c
 19401  0167AA  6E32               	movwf	btemp^0,c
 19402  0167AC  0EFF               	movlw	-1
 19403  0167AE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19404  0167B4                     l9233:
 19405                           
 19406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19407                           ;stkvar	_w @ sp[(-4)+0]
 19408                           ;stkvar	_i @ sp[(-4)+2]
 19409  0167B4  50E1               	movf	fsr1l,w,c
 19410  0167B6  0FFE               	addlw	-2
 19411  0167B8  6ED9               	movwf	fsr2l,c
 19412  0167BA  50E2               	movf	fsr1h,w,c
 19413  0167BC  6EDA               	movwf	fsr2h,c
 19414  0167BE  0EFF               	movlw	255
 19415  0167C0  22DA               	addwfc	fsr2h,f,c
 19416  0167C2  0EFC               	movlw	-4
 19417  0167C4  50E3               	movf	plusw1,w,c
 19418  0167C6  5CDE               	subwf	postinc2,w,c
 19419  0167C8  50DE               	movf	postinc2,w,c
 19420  0167CA  0A80               	xorlw	128
 19421  0167CC  6E32               	movwf	btemp^0,c
 19422  0167CE  0EFD               	movlw	-3
 19423  0167D0  50E3               	movf	plusw1,w,c
 19424  0167D2  0A80               	xorlw	128
 19425  0167D4  5832               	subwfb	btemp^0,w,c
 19426  0167D6  A0D8               	btfss	status,0,c
 19427  0167D8  D7CF               	goto	l9229
 19428                           
 19429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19430  0167DA  B01F               	btfsc	_flags^0,0,c
 19431  0167DC  D010               	goto	l9237
 19432                           
 19433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19434                           ;stkvar	_fp @ sp[(-4)+-2]
 19435  0167DE  0EFA               	movlw	-6
 19436  0167E0  006F FF8F FFE6     	movff	plusw1,postinc1
 19437  0167E6  006F FF8F FFE6     	movff	plusw1,postinc1
 19438                           
 19439                           ;stkvar	_buf @ sp[(-6)+-4]
 19440  0167EC  0EF6               	movlw	-10
 19441  0167EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19442  0167F4  006F FF8F FFE6     	movff	plusw1,postinc1
 19443  0167FA  EC82  F0B8         	call	_fputs	;wreg free
 19444  0167FE                     l9237:
 19445                           
 19446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19447                           ;stkvar	_w @ sp[(-4)+0]
 19448                           ;stkvar	_buf @ sp[(-4)+-4]
 19449  0167FE  0EF8               	movlw	-8
 19450  016800  006F FF8F FFE6     	movff	plusw1,postinc1
 19451  016806  006F FF8F FFE6     	movff	plusw1,postinc1
 19452  01680C  EC31  F0B8         	call	_strlen	;wreg free
 19453  016810  0EFC               	movlw	-4
 19454  016812  50E3               	movf	plusw1,w,c
 19455  016814  2632               	addwf	btemp^0,f,c
 19456  016816  0EFD               	movlw	-3
 19457  016818  50E3               	movf	plusw1,w,c
 19458  01681A  2233               	addwfc	(btemp+1)^0,f,c
 19459                           
 19460                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19461  01681C  0EF6               	movlw	246
 19462  01681E  26E1               	addwf	fsr1l,f,c
 19463  016820  0EFF               	movlw	255
 19464  016822  22E2               	addwfc	fsr1h,f,c
 19465  016824  0012               	return		;funcret
 19466  016826                     __end_of_pad:
 19467                           	opt callstack 0
 19468                           
 19469 ;; *************** function _strlen *****************
 19470 ;; Defined at:
 19471 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19472 ;; Parameters:    Size  Location     Type
 19473 ;;  s               2  [STACK] PTR const unsigned char 
 19474 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19475 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19476 ;;		 -> T(144), STR_7(5), STR_3(5), V(228), 
 19477 ;; Auto vars:     Size  Location     Type
 19478 ;;  a               2  [STACK] PTR const unsigned char 
 19479 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19480 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19481 ;;		 -> T(144), STR_7(5), STR_3(5), V(228), 
 19482 ;; Return value:  Size  Location     Type
 19483 ;;                  2  [STACK] unsigned int 
 19484 ;; Registers used:
 19485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19486 ;; Tracked objects:
 19487 ;;		On entry : 0/0
 19488 ;;		On exit  : 0/0
 19489 ;;		Unchanged: 0/0
 19490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19495 ;;Total ram usage:        0 bytes
 19496 ;; Hardware stack levels used:    1
 19497 ;; Hardware stack levels required when called:    6
 19498 ;; This function calls:
 19499 ;;		Nothing
 19500 ;; This function is called by:
 19501 ;;		_eaDogM_WriteString
 19502 ;;		_pad
 19503 ;;		_stoa
 19504 ;; This function uses a reentrant model
 19505 ;;
 19506                           
 19507                           	psect	text67
 19508  017062                     __ptext67:
 19509                           	opt callstack 0
 19510  017062                     _strlen:
 19511                           	opt callstack 0
 19512                           
 19513                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19514  017062  52E6               	movf	postinc1,f,c
 19515  017064  52E6               	movf	postinc1,f,c
 19516                           
 19517                           ;stkvar	_s @ sp[(-2)+-2]
 19518                           
 19519                           ;incstack = 0
 19520  017066  0EFC               	movlw	-4
 19521  017068  006F FF8C  F03C    	movff	plusw1,btemp+10
 19522  01706E  0EFD               	movlw	-3
 19523  017070  006F FF8C  F03D    	movff	plusw1,btemp+11
 19524                           
 19525                           ;stkvar	_a @ sp[(-2)+0]
 19526  017076  0EFF               	movlw	-1
 19527  017078  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19528  01707E  0EFE               	movlw	-2
 19529  017080  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19530  017086  D011               	goto	l6099
 19531  017088                     l6097:
 19532                           
 19533                           ;stkvar	_s @ sp[(-2)+-2]
 19534  017088  0EFC               	movlw	-4
 19535  01708A  50E3               	movf	plusw1,w,c
 19536  01708C  0F01               	addlw	1
 19537  01708E  6E32               	movwf	btemp^0,c
 19538  017090  0EFC               	movlw	-4
 19539  017092  0060  F0CB  FFE3   	movff	btemp,plusw1
 19540  017098  6A32               	clrf	btemp^0,c
 19541  01709A  0EFD               	movlw	-3
 19542  01709C  50E3               	movf	plusw1,w,c
 19543  01709E  2032               	addwfc	btemp^0,w,c
 19544  0170A0  6E32               	movwf	btemp^0,c
 19545  0170A2  0EFD               	movlw	-3
 19546  0170A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19547  0170AA                     l6099:
 19548                           
 19549                           ;stkvar	_s @ sp[(-2)+-2]
 19550  0170AA  0EFC               	movlw	-4
 19551  0170AC  006F FF8F FFF6     	movff	plusw1,tblptrl
 19552  0170B2  0EFD               	movlw	-3
 19553  0170B4  006F FF8F FFF7     	movff	plusw1,tblptrh
 19554  0170BA  0E00               	movlw	low (__mediumconst shr (0+16))
 19555  0170BC  6EF8               	movwf	tblptru,c
 19556  0170BE  0E1F               	movlw	(high __ramtop+-1)
 19557  0170C0  64F7               	cpfsgt	tblptrh,c
 19558  0170C2  D003               	bra	u4457
 19559  0170C4  0008               	tblrd		*
 19560  0170C6  50F5               	movf	tablat,w,c
 19561  0170C8  D007               	bra	u4450
 19562  0170CA                     u4457:
 19563  0170CA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19564  0170D0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19565  0170D6  50EF               	movf	indf0,w,c
 19566  0170D8                     u4450:
 19567  0170D8  0900               	iorlw	0
 19568  0170DA  A4D8               	btfss	status,2,c
 19569  0170DC  D7D5               	goto	l6097
 19570                           
 19571                           ;stkvar	_a @ sp[(-2)+0]
 19572                           ;stkvar	_s @ sp[(-2)+-2]
 19573  0170DE  0EFC               	movlw	-4
 19574  0170E0  006F FF8C  F032    	movff	plusw1,btemp
 19575  0170E6  0EFD               	movlw	-3
 19576  0170E8  006F FF8C  F033    	movff	plusw1,btemp+1
 19577  0170EE  0EFE               	movlw	-2
 19578  0170F0  50E3               	movf	plusw1,w,c
 19579  0170F2  5E32               	subwf	btemp^0,f,c
 19580  0170F4  0EFF               	movlw	-1
 19581  0170F6  50E3               	movf	plusw1,w,c
 19582  0170F8  5A33               	subwfb	(btemp+1)^0,f,c
 19583                           
 19584                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19585  0170FA  52E5               	movf	postdec1,f,c
 19586  0170FC  52E5               	movf	postdec1,f,c
 19587  0170FE  52E5               	movf	postdec1,f,c
 19588  017100  52E5               	movf	postdec1,f,c
 19589  017102  0012               	return		;funcret
 19590  017104                     __end_of_strlen:
 19591                           	opt callstack 0
 19592                           
 19593 ;; *************** function _fputs *****************
 19594 ;; Defined at:
 19595 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19596 ;; Parameters:    Size  Location     Type
 19597 ;;  s               2  [STACK] PTR const unsigned char 
 19598 ;;		 -> dbuf(80), 
 19599 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19600 ;;		 -> f(6), NULL(0), 
 19601 ;; Auto vars:     Size  Location     Type
 19602 ;;  i               2  [STACK] int 
 19603 ;;  c               1  [STACK] unsigned char 
 19604 ;; Return value:  Size  Location     Type
 19605 ;;                  2  [STACK] int 
 19606 ;; Registers used:
 19607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19608 ;; Tracked objects:
 19609 ;;		On entry : 0/2
 19610 ;;		On exit  : 0/0
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19617 ;;Total ram usage:        0 bytes
 19618 ;; Hardware stack levels used:    1
 19619 ;; Hardware stack levels required when called:    9
 19620 ;; This function calls:
 19621 ;;		_fputc
 19622 ;; This function is called by:
 19623 ;;		_pad
 19624 ;; This function uses a reentrant model
 19625 ;;
 19626                           
 19627                           	psect	text68
 19628  017104                     __ptext68:
 19629                           	opt callstack 0
 19630  017104                     _fputs:
 19631                           	opt callstack 0
 19632                           
 19633                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19634  017104  52E6               	movf	postinc1,f,c
 19635  017106  52E6               	movf	postinc1,f,c
 19636  017108  52E6               	movf	postinc1,f,c
 19637                           
 19638                           ;stkvar	_i @ sp[(-3)+0]
 19639                           
 19640                           ;incstack = 0
 19641  01710A  0EFD               	movlw	-3
 19642  01710C  6AE3               	clrf	plusw1,c
 19643  01710E  0EFE               	movlw	-2
 19644  017110  6AE3               	clrf	plusw1,c
 19645  017112  D01F               	goto	l9217
 19646  017114                     l9213:
 19647                           
 19648                           ;stkvar	_fp @ sp[(-3)+-4]
 19649  017114  0EF9               	movlw	-7
 19650  017116  006F FF8F FFE6     	movff	plusw1,postinc1
 19651  01711C  006F FF8F FFE6     	movff	plusw1,postinc1
 19652                           
 19653                           ;stkvar	_c @ sp[(-5)+2]
 19654  017122  0EFD               	movlw	-3
 19655  017124  50E3               	movf	plusw1,w,c
 19656  017126  6EE6               	movwf	postinc1,c
 19657  017128  0E00               	movlw	0
 19658  01712A  6EE6               	movwf	postinc1,c
 19659  01712C  EC6B  F0B2         	call	_fputc	;wreg free
 19660                           
 19661                           ;stkvar	_i @ sp[(-3)+0]
 19662  017130  0EFD               	movlw	-3
 19663  017132  50E3               	movf	plusw1,w,c
 19664  017134  0F01               	addlw	1
 19665  017136  6E32               	movwf	btemp^0,c
 19666  017138  0EFD               	movlw	-3
 19667  01713A  0060  F0CB  FFE3   	movff	btemp,plusw1
 19668  017140  6A32               	clrf	btemp^0,c
 19669  017142  0EFE               	movlw	-2
 19670  017144  50E3               	movf	plusw1,w,c
 19671  017146  2032               	addwfc	btemp^0,w,c
 19672  017148  6E32               	movwf	btemp^0,c
 19673  01714A  0EFE               	movlw	-2
 19674  01714C  0060  F0CB  FFE3   	movff	btemp,plusw1
 19675  017152                     l9217:
 19676                           
 19677                           ;stkvar	_i @ sp[(-3)+0]
 19678  017152  0EFD               	movlw	-3
 19679  017154  006F FF8C  F03C    	movff	plusw1,btemp+10
 19680  01715A  0EFE               	movlw	-2
 19681  01715C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19682                           
 19683                           ;stkvar	_s @ sp[(-3)+-2]
 19684  017162  0EFB               	movlw	-5
 19685  017164  006F FF8C  F03A    	movff	plusw1,btemp+8
 19686  01716A  0EFC               	movlw	-4
 19687  01716C  006F FF8C  F03B    	movff	plusw1,btemp+9
 19688  017172  503C               	movf	(btemp+10)^0,w,c
 19689  017174  243A               	addwf	(btemp+8)^0,w,c
 19690  017176  6ED9               	movwf	fsr2l,c
 19691  017178  503D               	movf	(btemp+11)^0,w,c
 19692  01717A  203B               	addwfc	(btemp+9)^0,w,c
 19693  01717C  6EDA               	movwf	fsr2h,c
 19694  01717E  50DF               	movf	indf2,w,c
 19695  017180  6E3D               	movwf	(btemp+11)^0,c
 19696                           
 19697                           ;stkvar	_c @ sp[(-3)+2]
 19698  017182  0EFF               	movlw	-1
 19699  017184  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19700  01718A  0EFF               	movlw	-1
 19701  01718C  50E3               	movf	plusw1,w,c
 19702  01718E  A4D8               	btfss	status,2,c
 19703  017190  D7C1               	goto	l9213
 19704                           
 19705                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19706  017192  0EF9               	movlw	249
 19707  017194  26E1               	addwf	fsr1l,f,c
 19708  017196  0EFF               	movlw	255
 19709  017198  22E2               	addwfc	fsr1h,f,c
 19710  01719A  0012               	return		;funcret
 19711  01719C                     __end_of_fputs:
 19712                           	opt callstack 0
 19713                           
 19714 ;; *************** function _fputc *****************
 19715 ;; Defined at:
 19716 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19717 ;; Parameters:    Size  Location     Type
 19718 ;;  c               2  [STACK] int 
 19719 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19720 ;;		 -> f(6), NULL(0), 
 19721 ;; Auto vars:     Size  Location     Type
 19722 ;;		None
 19723 ;; Return value:  Size  Location     Type
 19724 ;;                  2  [STACK] int 
 19725 ;; Registers used:
 19726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19727 ;; Tracked objects:
 19728 ;;		On entry : 0/5
 19729 ;;		On exit  : 0/0
 19730 ;;		Unchanged: 0/0
 19731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19736 ;;Total ram usage:        0 bytes
 19737 ;; Hardware stack levels used:    1
 19738 ;; Hardware stack levels required when called:    8
 19739 ;; This function calls:
 19740 ;;		_putch
 19741 ;; This function is called by:
 19742 ;;		_pad
 19743 ;;		_stoa
 19744 ;;		_vfpfcnvrt
 19745 ;;		_fputs
 19746 ;; This function uses a reentrant model
 19747 ;;
 19748                           
 19749                           	psect	text69
 19750  0164D6                     __ptext69:
 19751                           	opt callstack 0
 19752  0164D6                     _fputc:
 19753                           	opt callstack 13
 19754                           
 19755                           ;stkvar	_fp @ sp[(0)+-4]
 19756                           
 19757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19758                           ;incstack = 0
 19759  0164D6  0EFC               	movlw	-4
 19760  0164D8  006F FF8C  F032    	movff	plusw1,btemp
 19761  0164DE  0EFD               	movlw	-3
 19762  0164E0  50E3               	movf	plusw1,w,c
 19763  0164E2  1032               	iorwf	btemp^0,w,c
 19764  0164E4  B4D8               	btfsc	status,2,c
 19765  0164E6  D009               	goto	u8770
 19766                           
 19767                           ;stkvar	_fp @ sp[(0)+-4]
 19768  0164E8  0EFC               	movlw	-4
 19769  0164EA  006F FF8C  F032    	movff	plusw1,btemp
 19770  0164F0  0EFD               	movlw	-3
 19771  0164F2  50E3               	movf	plusw1,w,c
 19772  0164F4  1032               	iorwf	btemp^0,w,c
 19773  0164F6  A4D8               	btfss	status,2,c
 19774  0164F8  D006               	goto	l9201
 19775  0164FA                     u8770:
 19776                           
 19777                           ;stkvar	_c @ sp[(0)+-2]
 19778  0164FA  0EFE               	movlw	-2
 19779  0164FC  50E3               	movf	plusw1,w,c
 19780  0164FE  6EE6               	movwf	postinc1,c
 19781  016500  EC60  F0C2         	call	_putch	;wreg free
 19782  016504  D075               	goto	l2824
 19783  016506                     l9201:
 19784                           
 19785                           ;stkvar	_fp @ sp[(0)+-4]
 19786  016506  0EFC               	movlw	-4
 19787  016508  006F FF8C  F03C    	movff	plusw1,btemp+10
 19788  01650E  0EFD               	movlw	-3
 19789  016510  006F FF8C  F03D    	movff	plusw1,btemp+11
 19790  016516  0E04               	movlw	4
 19791  016518  243C               	addwf	(btemp+10)^0,w,c
 19792  01651A  6ED9               	movwf	fsr2l,c
 19793  01651C  0E00               	movlw	0
 19794  01651E  203D               	addwfc	(btemp+11)^0,w,c
 19795  016520  6EDA               	movwf	fsr2h,c
 19796  016522  50DE               	movf	postinc2,w,c
 19797  016524  10DE               	iorwf	postinc2,w,c
 19798  016526  B4D8               	btfsc	status,2,c
 19799  016528  D026               	goto	u8790
 19800                           
 19801                           ;stkvar	_fp @ sp[(0)+-4]
 19802  01652A  0EFC               	movlw	-4
 19803  01652C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19804  016532  0EFD               	movlw	-3
 19805  016534  006F FF8C  F03D    	movff	plusw1,btemp+11
 19806  01653A  0E04               	movlw	4
 19807  01653C  243C               	addwf	(btemp+10)^0,w,c
 19808  01653E  6ED9               	movwf	fsr2l,c
 19809  016540  0E00               	movlw	0
 19810  016542  203D               	addwfc	(btemp+11)^0,w,c
 19811  016544  6EDA               	movwf	fsr2h,c
 19812                           
 19813                           ;stkvar	_fp @ sp[(0)+-4]
 19814  016546  0EFC               	movlw	-4
 19815  016548  006F FF8C  F03C    	movff	plusw1,btemp+10
 19816  01654E  0EFD               	movlw	-3
 19817  016550  006F FF8C  F03D    	movff	plusw1,btemp+11
 19818  016556  0E02               	movlw	2
 19819  016558  243C               	addwf	(btemp+10)^0,w,c
 19820  01655A  6EE9               	movwf	fsr0l,c
 19821  01655C  0E00               	movlw	0
 19822  01655E  203D               	addwfc	(btemp+11)^0,w,c
 19823  016560  6EEA               	movwf	fsr0h,c
 19824  016562  50DE               	movf	postinc2,w,c
 19825  016564  5CEE               	subwf	postinc0,w,c
 19826  016566  50EE               	movf	postinc0,w,c
 19827  016568  0A80               	xorlw	128
 19828  01656A  6E32               	movwf	btemp^0,c
 19829  01656C  50DE               	movf	postinc2,w,c
 19830  01656E  0A80               	xorlw	128
 19831  016570  5832               	subwfb	btemp^0,w,c
 19832  016572  B0D8               	btfsc	status,0,c
 19833  016574  D03D               	goto	l2824
 19834  016576                     u8790:
 19835                           
 19836                           ;stkvar	_c @ sp[(0)+-2]
 19837                           ;stkvar	_fp @ sp[(0)+-4]
 19838  016576  0EFC               	movlw	-4
 19839  016578  006F FF8C  F03C    	movff	plusw1,btemp+10
 19840  01657E  0EFD               	movlw	-3
 19841  016580  006F FF8C  F03D    	movff	plusw1,btemp+11
 19842  016586  0E02               	movlw	2
 19843  016588  243C               	addwf	(btemp+10)^0,w,c
 19844  01658A  6ED9               	movwf	fsr2l,c
 19845  01658C  0E00               	movlw	0
 19846  01658E  203D               	addwfc	(btemp+11)^0,w,c
 19847  016590  6EDA               	movwf	fsr2h,c
 19848  016592  006F FF78  F03C    	movff	postinc2,btemp+10
 19849  016598  006F FF74  F03D    	movff	postdec2,btemp+11
 19850                           
 19851                           ;stkvar	_fp @ sp[(0)+-4]
 19852  01659E  0EFC               	movlw	-4
 19853  0165A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 19854  0165A6  0EFD               	movlw	-3
 19855  0165A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 19856  0165AE  006F FF78  F03A    	movff	postinc2,btemp+8
 19857  0165B4  006F FF74  F03B    	movff	postdec2,btemp+9
 19858  0165BA  503C               	movf	(btemp+10)^0,w,c
 19859  0165BC  243A               	addwf	(btemp+8)^0,w,c
 19860  0165BE  6ED9               	movwf	fsr2l,c
 19861  0165C0  503D               	movf	(btemp+11)^0,w,c
 19862  0165C2  203B               	addwfc	(btemp+9)^0,w,c
 19863  0165C4  6EDA               	movwf	fsr2h,c
 19864  0165C6  0EFE               	movlw	-2
 19865  0165C8  006F FF8F FFDF     	movff	plusw1,indf2
 19866                           
 19867                           ;stkvar	_fp @ sp[(0)+-4]
 19868  0165CE  0EFC               	movlw	-4
 19869  0165D0  006F FF8C  F03C    	movff	plusw1,btemp+10
 19870  0165D6  0EFD               	movlw	-3
 19871  0165D8  006F FF8C  F03D    	movff	plusw1,btemp+11
 19872  0165DE  0E02               	movlw	2
 19873  0165E0  243C               	addwf	(btemp+10)^0,w,c
 19874  0165E2  6ED9               	movwf	fsr2l,c
 19875  0165E4  0E00               	movlw	0
 19876  0165E6  203D               	addwfc	(btemp+11)^0,w,c
 19877  0165E8  6EDA               	movwf	fsr2h,c
 19878  0165EA  2ADE               	incf	postinc2,f,c
 19879  0165EC  0E00               	movlw	0
 19880  0165EE  22DD               	addwfc	postdec2,f,c
 19881  0165F0                     l2824:
 19882                           
 19883                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19884  0165F0  52E5               	movf	postdec1,f,c
 19885  0165F2  52E5               	movf	postdec1,f,c
 19886  0165F4  52E5               	movf	postdec1,f,c
 19887  0165F6  52E5               	movf	postdec1,f,c
 19888  0165F8  0012               	return		;funcret
 19889  0165FA                     __end_of_fputc:
 19890                           	opt callstack 0
 19891                           
 19892 ;; *************** function _putch *****************
 19893 ;; Defined at:
 19894 ;;		line 155 in file "eadog.c"
 19895 ;; Parameters:    Size  Location     Type
 19896 ;;  c               1  [STACK] unsigned char 
 19897 ;; Auto vars:     Size  Location     Type
 19898 ;;		None
 19899 ;; Return value:  Size  Location     Type
 19900 ;;                  1  [STACK] void 
 19901 ;; Registers used:
 19902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19903 ;; Tracked objects:
 19904 ;;		On entry : 0/5
 19905 ;;		On exit  : 0/0
 19906 ;;		Unchanged: 0/0
 19907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19912 ;;Total ram usage:        0 bytes
 19913 ;; Hardware stack levels used:    1
 19914 ;; Hardware stack levels required when called:    7
 19915 ;; This function calls:
 19916 ;;		_ringBufS_put_dma
 19917 ;; This function is called by:
 19918 ;;		_fputc
 19919 ;; This function uses a reentrant model
 19920 ;;
 19921                           
 19922                           	psect	text70
 19923  0184C0                     __ptext70:
 19924                           	opt callstack 0
 19925  0184C0                     _putch:
 19926                           	opt callstack 13
 19927                           
 19928                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19929                           ;stkvar	_c @ sp[(0)+-1]
 19930                           
 19931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19932                           ;incstack = 0
 19933  0184C0  0EFF               	movlw	-1
 19934  0184C2  50E3               	movf	plusw1,w,c
 19935  0184C4  6EE6               	movwf	postinc1,c
 19936  0184C6  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 19937  0184CC  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 19938  0184D2  EC35  F0B7         	call	_ringBufS_put_dma	;wreg free
 19939                           
 19940                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19941  0184D6  52E5               	movf	postdec1,f,c
 19942  0184D8  0012               	return		;funcret
 19943  0184DA                     __end_of_putch:
 19944                           	opt callstack 0
 19945                           
 19946 ;; *************** function _ringBufS_put_dma *****************
 19947 ;; Defined at:
 19948 ;;		line 67 in file "ringbufs.c"
 19949 ;; Parameters:    Size  Location     Type
 19950 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19951 ;;		 -> ring_buf1(67), 
 19952 ;;  c               1  [STACK] const unsigned char 
 19953 ;; Auto vars:     Size  Location     Type
 19954 ;;		None
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  1  [STACK] void 
 19957 ;; Registers used:
 19958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19959 ;; Tracked objects:
 19960 ;;		On entry : 0/5
 19961 ;;		On exit  : 0/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19968 ;;Total ram usage:        0 bytes
 19969 ;; Hardware stack levels used:    1
 19970 ;; Hardware stack levels required when called:    6
 19971 ;; This function calls:
 19972 ;;		Nothing
 19973 ;; This function is called by:
 19974 ;;		_putch
 19975 ;; This function uses a reentrant model
 19976 ;;
 19977                           
 19978                           	psect	text71
 19979  016E6A                     __ptext71:
 19980                           	opt callstack 0
 19981  016E6A                     _ringBufS_put_dma:
 19982                           	opt callstack 13
 19983                           
 19984                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19985                           ;stkvar	__this @ sp[(0)+-2]
 19986                           
 19987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19988                           ;incstack = 0
 19989  016E6A  0EFE               	movlw	-2
 19990  016E6C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19991  016E72  0EFF               	movlw	-1
 19992  016E74  006F FF8C  F03D    	movff	plusw1,btemp+11
 19993  016E7A  0E42               	movlw	66
 19994  016E7C  243C               	addwf	(btemp+10)^0,w,c
 19995  016E7E  6ED9               	movwf	fsr2l,c
 19996  016E80  0E00               	movlw	0
 19997  016E82  203D               	addwfc	(btemp+11)^0,w,c
 19998  016E84  6EDA               	movwf	fsr2h,c
 19999  016E86  0E40               	movlw	64
 20000  016E88  60DF               	cpfslt	indf2,c
 20001  016E8A  D040               	goto	l1471
 20002                           
 20003                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20004                           ;stkvar	_c @ sp[(0)+-3]
 20005                           ;stkvar	__this @ sp[(0)+-2]
 20006  016E8C  0EFE               	movlw	-2
 20007  016E8E  006F FF8C  F03C    	movff	plusw1,btemp+10
 20008  016E94  0EFF               	movlw	-1
 20009  016E96  006F FF8C  F03D    	movff	plusw1,btemp+11
 20010  016E9C  0E40               	movlw	64
 20011  016E9E  243C               	addwf	(btemp+10)^0,w,c
 20012  016EA0  6ED9               	movwf	fsr2l,c
 20013  016EA2  0E00               	movlw	0
 20014  016EA4  203D               	addwfc	(btemp+11)^0,w,c
 20015  016EA6  6EDA               	movwf	fsr2h,c
 20016  016EA8  50DF               	movf	indf2,w,c
 20017  016EAA  6E3D               	movwf	(btemp+11)^0,c
 20018                           
 20019                           ;stkvar	__this @ sp[(0)+-2]
 20020  016EAC  0EFE               	movlw	-2
 20021  016EAE  006F FF8C  F03A    	movff	plusw1,btemp+8
 20022  016EB4  0EFF               	movlw	-1
 20023  016EB6  006F FF8C  F03B    	movff	plusw1,btemp+9
 20024  016EBC  503D               	movf	(btemp+11)^0,w,c
 20025  016EBE  243A               	addwf	(btemp+8)^0,w,c
 20026  016EC0  6ED9               	movwf	fsr2l,c
 20027  016EC2  0E00               	movlw	0
 20028  016EC4  203B               	addwfc	(btemp+9)^0,w,c
 20029  016EC6  6EDA               	movwf	fsr2h,c
 20030  016EC8  0EFD               	movlw	-3
 20031  016ECA  006F FF8F FFDF     	movff	plusw1,indf2
 20032                           
 20033                           ;ringbufs.c: 71:   ++_this->head;
 20034                           ;stkvar	__this @ sp[(0)+-2]
 20035  016ED0  0EFE               	movlw	-2
 20036  016ED2  006F FF8C  F03C    	movff	plusw1,btemp+10
 20037  016ED8  0EFF               	movlw	-1
 20038  016EDA  006F FF8C  F03D    	movff	plusw1,btemp+11
 20039  016EE0  0E40               	movlw	64
 20040  016EE2  243C               	addwf	(btemp+10)^0,w,c
 20041  016EE4  6ED9               	movwf	fsr2l,c
 20042  016EE6  0E00               	movlw	0
 20043  016EE8  203D               	addwfc	(btemp+11)^0,w,c
 20044  016EEA  6EDA               	movwf	fsr2h,c
 20045  016EEC  2ADF               	incf	indf2,f,c
 20046                           
 20047                           ;ringbufs.c: 72:   ++_this->count;
 20048                           ;stkvar	__this @ sp[(0)+-2]
 20049  016EEE  0EFE               	movlw	-2
 20050  016EF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 20051  016EF6  0EFF               	movlw	-1
 20052  016EF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 20053  016EFE  0E42               	movlw	66
 20054  016F00  243C               	addwf	(btemp+10)^0,w,c
 20055  016F02  6ED9               	movwf	fsr2l,c
 20056  016F04  0E00               	movlw	0
 20057  016F06  203D               	addwfc	(btemp+11)^0,w,c
 20058  016F08  6EDA               	movwf	fsr2h,c
 20059  016F0A  2ADF               	incf	indf2,f,c
 20060  016F0C                     l1471:
 20061                           
 20062                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20063  016F0C  52E5               	movf	postdec1,f,c
 20064  016F0E  52E5               	movf	postdec1,f,c
 20065  016F10  52E5               	movf	postdec1,f,c
 20066  016F12  0012               	return		;funcret
 20067  016F14                     __end_of_ringBufS_put_dma:
 20068                           	opt callstack 0
 20069                           
 20070 ;; *************** function _atoi *****************
 20071 ;; Defined at:
 20072 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20073 ;; Parameters:    Size  Location     Type
 20074 ;;  s               2  [STACK] PTR const unsigned char 
 20075 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 20076 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 20077 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 20078 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 20079 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
 20080 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
 20081 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 20082 ;; Auto vars:     Size  Location     Type
 20083 ;;  n               2  [STACK] int 
 20084 ;;  neg             2  [STACK] int 
 20085 ;; Return value:  Size  Location     Type
 20086 ;;                  2  [STACK] int 
 20087 ;; Registers used:
 20088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20089 ;; Tracked objects:
 20090 ;;		On entry : 0/5
 20091 ;;		On exit  : 0/0
 20092 ;;		Unchanged: 0/0
 20093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20098 ;;Total ram usage:        0 bytes
 20099 ;; Hardware stack levels used:    1
 20100 ;; Hardware stack levels required when called:    7
 20101 ;; This function calls:
 20102 ;;		_isdigit
 20103 ;;		_isspace
 20104 ;; This function is called by:
 20105 ;;		_vfpfcnvrt
 20106 ;; This function uses a reentrant model
 20107 ;;
 20108                           
 20109                           	psect	text72
 20110  015042                     __ptext72:
 20111                           	opt callstack 0
 20112  015042                     _atoi:
 20113                           	opt callstack 0
 20114                           
 20115                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20116  015042  0E09               	movlw	9
 20117  015044  26E1               	addwf	fsr1l,f,c
 20118  015046  0E00               	movlw	0
 20119  015048  22E2               	addwfc	fsr1h,f,c
 20120                           
 20121                           ;stkvar	_n @ sp[(-9)+5]
 20122                           
 20123                           ;incstack = 0
 20124  01504A  0EFC               	movlw	-4
 20125  01504C  6AE3               	clrf	plusw1,c
 20126  01504E  0EFD               	movlw	-3
 20127  015050  6AE3               	clrf	plusw1,c
 20128                           
 20129                           ;stkvar	_neg @ sp[(-9)+7]
 20130  015052  0EFE               	movlw	-2
 20131  015054  6AE3               	clrf	plusw1,c
 20132  015056  0EFF               	movlw	-1
 20133  015058  6AE3               	clrf	plusw1,c
 20134  01505A  D011               	goto	l7571
 20135  01505C                     l7569:
 20136                           
 20137                           ;stkvar	_s @ sp[(-9)+-2]
 20138  01505C  0EF5               	movlw	-11
 20139  01505E  50E3               	movf	plusw1,w,c
 20140  015060  0F01               	addlw	1
 20141  015062  6E32               	movwf	btemp^0,c
 20142  015064  0EF5               	movlw	-11
 20143  015066  0060  F0CB  FFE3   	movff	btemp,plusw1
 20144  01506C  6A32               	clrf	btemp^0,c
 20145  01506E  0EF6               	movlw	-10
 20146  015070  50E3               	movf	plusw1,w,c
 20147  015072  2032               	addwfc	btemp^0,w,c
 20148  015074  6E32               	movwf	btemp^0,c
 20149  015076  0EF6               	movlw	-10
 20150  015078  0060  F0CB  FFE3   	movff	btemp,plusw1
 20151  01507E                     l7571:
 20152                           
 20153                           ;stkvar	_atoi$4928 @ sp[(-9)+4]
 20154  01507E  0EFB               	movlw	-5
 20155  015080  6AE3               	clrf	plusw1,c
 20156  015082  2AE3               	incf	plusw1,f,c
 20157                           
 20158                           ;stkvar	_s @ sp[(-9)+-2]
 20159  015084  50E1               	movf	fsr1l,w,c
 20160  015086  0FF5               	addlw	-11
 20161  015088  6ED9               	movwf	fsr2l,c
 20162  01508A  50E2               	movf	fsr1h,w,c
 20163  01508C  6EDA               	movwf	fsr2h,c
 20164  01508E  0EFF               	movlw	255
 20165  015090  22DA               	addwfc	fsr2h,f,c
 20166  015092  006F FF7B FFF6     	movff	postinc2,tblptrl
 20167  015098  006F FF77 FFF7     	movff	postdec2,tblptrh
 20168  01509E                     	if	0	;tblptru may be non-zero
 20169  01509E                     	endif
 20170  01509E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20171  01509E  0E00               	movlw	low (__mediumconst shr (0+16))
 20172  0150A0  6EF8               	movwf	tblptru,c
 20173  0150A2                     	endif
 20174  0150A2  0008               	tblrd		*
 20175  0150A4  50F5               	movf	tablat,w,c
 20176  0150A6  0A20               	xorlw	32
 20177  0150A8  B4D8               	btfsc	status,2,c
 20178  0150AA  D023               	goto	l7579
 20179  0150AC  0EF7               	movlw	247
 20180  0150AE  6E3C               	movwf	(btemp+10)^0,c
 20181  0150B0  0EFF               	movlw	255
 20182  0150B2  6E3D               	movwf	(btemp+11)^0,c
 20183                           
 20184                           ;stkvar	_s @ sp[(-9)+-2]
 20185  0150B4  50E1               	movf	fsr1l,w,c
 20186  0150B6  0FF5               	addlw	-11
 20187  0150B8  6ED9               	movwf	fsr2l,c
 20188  0150BA  50E2               	movf	fsr1h,w,c
 20189  0150BC  6EDA               	movwf	fsr2h,c
 20190  0150BE  0EFF               	movlw	255
 20191  0150C0  22DA               	addwfc	fsr2h,f,c
 20192  0150C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20193  0150C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20194  0150CE                     	if	0	;tblptru may be non-zero
 20195  0150CE                     	endif
 20196  0150CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20197  0150CE  0E00               	movlw	low (__mediumconst shr (0+16))
 20198  0150D0  6EF8               	movwf	tblptru,c
 20199  0150D2                     	endif
 20200  0150D2  0008               	tblrd		*
 20201  0150D4  50F5               	movf	tablat,w,c
 20202  0150D6  6E3A               	movwf	(btemp+8)^0,c
 20203  0150D8  6A3B               	clrf	(btemp+9)^0,c
 20204  0150DA  503C               	movf	(btemp+10)^0,w,c
 20205  0150DC  263A               	addwf	(btemp+8)^0,f,c
 20206  0150DE  503D               	movf	(btemp+11)^0,w,c
 20207  0150E0  223B               	addwfc	(btemp+9)^0,f,c
 20208  0150E2  503B               	movf	(btemp+9)^0,w,c
 20209  0150E4  E104               	bnz	u7310
 20210  0150E6  0E05               	movlw	5
 20211  0150E8  5C3A               	subwf	(btemp+8)^0,w,c
 20212  0150EA  A0D8               	btfss	status,0,c
 20213  0150EC  D002               	goto	l7579
 20214  0150EE                     u7310:
 20215                           
 20216                           ;stkvar	_atoi$4928 @ sp[(-9)+4]
 20217  0150EE  0EFB               	movlw	-5
 20218  0150F0  6AE3               	clrf	plusw1,c
 20219  0150F2                     l7579:
 20220                           
 20221                           ;stkvar	_atoi$4928 @ sp[(-9)+4]
 20222  0150F2  0EFB               	movlw	-5
 20223  0150F4  50E3               	movf	plusw1,w,c
 20224  0150F6  6E3C               	movwf	(btemp+10)^0,c
 20225  0150F8  6A3D               	clrf	(btemp+11)^0,c
 20226                           
 20227                           ;stkvar	_atoi$4927 @ sp[(-9)+2]
 20228  0150FA  0EF9               	movlw	-7
 20229  0150FC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20230  015102  0EFA               	movlw	-6
 20231  015104  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20232                           
 20233                           ;stkvar	_atoi$4927 @ sp[(-9)+2]
 20234  01510A  0EF9               	movlw	-7
 20235  01510C  006F FF8C  F032    	movff	plusw1,btemp
 20236  015112  0EFA               	movlw	-6
 20237  015114  50E3               	movf	plusw1,w,c
 20238  015116  1032               	iorwf	btemp^0,w,c
 20239  015118  B4D8               	btfsc	status,2,c
 20240  01511A  D01F               	goto	l7589
 20241  01511C  D79F               	goto	l7569
 20242  01511E                     l7585:
 20243  01511E  0E01               	movlw	1
 20244  015120  6E3C               	movwf	(btemp+10)^0,c
 20245  015122  0E00               	movlw	0
 20246  015124  6E3D               	movwf	(btemp+11)^0,c
 20247                           
 20248                           ;stkvar	_neg @ sp[(-9)+7]
 20249  015126  0EFE               	movlw	-2
 20250  015128  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20251  01512E  0EFF               	movlw	-1
 20252  015130  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20253  015136                     l7587:
 20254                           
 20255                           ;stkvar	_s @ sp[(-9)+-2]
 20256  015136  0EF5               	movlw	-11
 20257  015138  50E3               	movf	plusw1,w,c
 20258  01513A  0F01               	addlw	1
 20259  01513C  6E32               	movwf	btemp^0,c
 20260  01513E  0EF5               	movlw	-11
 20261  015140  0060  F0CB  FFE3   	movff	btemp,plusw1
 20262  015146  6A32               	clrf	btemp^0,c
 20263  015148  0EF6               	movlw	-10
 20264  01514A  50E3               	movf	plusw1,w,c
 20265  01514C  2032               	addwfc	btemp^0,w,c
 20266  01514E  6E32               	movwf	btemp^0,c
 20267  015150  0EF6               	movlw	-10
 20268  015152  0060  F0CB  FFE3   	movff	btemp,plusw1
 20269  015158  D053               	goto	l7595
 20270  01515A                     l7589:
 20271                           
 20272                           ;stkvar	_s @ sp[(-9)+-2]
 20273  01515A  50E1               	movf	fsr1l,w,c
 20274  01515C  0FF5               	addlw	-11
 20275  01515E  6ED9               	movwf	fsr2l,c
 20276  015160  50E2               	movf	fsr1h,w,c
 20277  015162  6EDA               	movwf	fsr2h,c
 20278  015164  0EFF               	movlw	255
 20279  015166  22DA               	addwfc	fsr2h,f,c
 20280  015168  006F FF7B FFF6     	movff	postinc2,tblptrl
 20281  01516E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20282  015174                     	if	0	;tblptru may be non-zero
 20283  015174                     	endif
 20284  015174                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20285  015174  0E00               	movlw	low (__mediumconst shr (0+16))
 20286  015176  6EF8               	movwf	tblptru,c
 20287  015178                     	endif
 20288  015178  0008               	tblrd		*
 20289  01517A  50F5               	movf	tablat,w,c
 20290  01517C  6E3C               	movwf	(btemp+10)^0,c
 20291  01517E  6A3D               	clrf	(btemp+11)^0,c
 20292                           
 20293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20294                           ; Switch size 1, requested type "simple"
 20295                           ; Number of cases is 1, Range of values is 0 to 0
 20296                           ; switch strategies available:
 20297                           ; Name         Instructions Cycles
 20298                           ; simple_byte            4     3 (average)
 20299                           ;	Chosen strategy is simple_byte
 20300  015180  503D               	movf	(btemp+11)^0,w,c
 20301  015182  0A00               	xorlw	0	; case 0
 20302  015184  A4D8               	btfss	status,2,c
 20303  015186  D03C               	goto	l7595
 20304                           
 20305                           ; Switch size 1, requested type "simple"
 20306                           ; Number of cases is 2, Range of values is 43 to 45
 20307                           ; switch strategies available:
 20308                           ; Name         Instructions Cycles
 20309                           ; simple_byte            7     4 (average)
 20310                           ;	Chosen strategy is simple_byte
 20311  015188  503C               	movf	(btemp+10)^0,w,c
 20312  01518A  0A2B               	xorlw	43	; case 43
 20313  01518C  B4D8               	btfsc	status,2,c
 20314  01518E  D7D3               	goto	l7587
 20315  015190  0A06               	xorlw	6	; case 45
 20316  015192  B4D8               	btfsc	status,2,c
 20317  015194  D7C4               	goto	l7585
 20318  015196  D034               	goto	l7595
 20319  015198                     l7591:
 20320                           
 20321                           ;stkvar	_n @ sp[(-9)+5]
 20322  015198  0EFC               	movlw	-4
 20323  01519A  006F FF8C  F03C    	movff	plusw1,btemp+10
 20324  0151A0  0EFD               	movlw	-3
 20325  0151A2  006F FF8C  F03D    	movff	plusw1,btemp+11
 20326  0151A8  0E0A               	movlw	10
 20327  0151AA  023C               	mulwf	(btemp+10)^0,c
 20328  0151AC  006F FFCC  F03A    	movff	prodl,btemp+8
 20329  0151B2  006F FFD0  F03B    	movff	prodh,btemp+9
 20330  0151B8  023D               	mulwf	(btemp+11)^0,c
 20331  0151BA  50F3               	movf	prodl,w,c
 20332  0151BC  263B               	addwf	(btemp+9)^0,f,c
 20333                           
 20334                           ;stkvar	_s @ sp[(-9)+-2]
 20335  0151BE  50E1               	movf	fsr1l,w,c
 20336  0151C0  0FF5               	addlw	-11
 20337  0151C2  6ED9               	movwf	fsr2l,c
 20338  0151C4  50E2               	movf	fsr1h,w,c
 20339  0151C6  6EDA               	movwf	fsr2h,c
 20340  0151C8  0EFF               	movlw	255
 20341  0151CA  22DA               	addwfc	fsr2h,f,c
 20342  0151CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20343  0151D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20344  0151D8                     	if	0	;tblptru may be non-zero
 20345  0151D8                     	endif
 20346  0151D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20347  0151D8  0E00               	movlw	low (__mediumconst shr (0+16))
 20348  0151DA  6EF8               	movwf	tblptru,c
 20349  0151DC                     	endif
 20350  0151DC  0008               	tblrd		*
 20351  0151DE  50F5               	movf	tablat,w,c
 20352  0151E0  5E3A               	subwf	(btemp+8)^0,f,c
 20353  0151E2  0E00               	movlw	0
 20354  0151E4  5A3B               	subwfb	(btemp+9)^0,f,c
 20355  0151E6  0E30               	movlw	48
 20356  0151E8  263A               	addwf	(btemp+8)^0,f,c
 20357  0151EA  0E00               	movlw	0
 20358  0151EC  223B               	addwfc	(btemp+9)^0,f,c
 20359                           
 20360                           ;stkvar	_n @ sp[(-9)+5]
 20361  0151EE  0EFC               	movlw	-4
 20362  0151F0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20363  0151F6  0EFD               	movlw	-3
 20364  0151F8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20365  0151FE  D79B               	goto	l7587
 20366  015200                     l7595:
 20367  015200  0ED0               	movlw	208
 20368  015202  6E3C               	movwf	(btemp+10)^0,c
 20369  015204  0EFF               	movlw	255
 20370  015206  6E3D               	movwf	(btemp+11)^0,c
 20371                           
 20372                           ;stkvar	_s @ sp[(-9)+-2]
 20373  015208  50E1               	movf	fsr1l,w,c
 20374  01520A  0FF5               	addlw	-11
 20375  01520C  6ED9               	movwf	fsr2l,c
 20376  01520E  50E2               	movf	fsr1h,w,c
 20377  015210  6EDA               	movwf	fsr2h,c
 20378  015212  0EFF               	movlw	255
 20379  015214  22DA               	addwfc	fsr2h,f,c
 20380  015216  006F FF7B FFF6     	movff	postinc2,tblptrl
 20381  01521C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20382  015222                     	if	0	;tblptru may be non-zero
 20383  015222                     	endif
 20384  015222                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20385  015222  0E00               	movlw	low (__mediumconst shr (0+16))
 20386  015224  6EF8               	movwf	tblptru,c
 20387  015226                     	endif
 20388  015226  0008               	tblrd		*
 20389  015228  50F5               	movf	tablat,w,c
 20390  01522A  6E3A               	movwf	(btemp+8)^0,c
 20391  01522C  6A3B               	clrf	(btemp+9)^0,c
 20392  01522E  503C               	movf	(btemp+10)^0,w,c
 20393  015230  263A               	addwf	(btemp+8)^0,f,c
 20394  015232  503D               	movf	(btemp+11)^0,w,c
 20395  015234  223B               	addwfc	(btemp+9)^0,f,c
 20396  015236  503B               	movf	(btemp+9)^0,w,c
 20397  015238  E106               	bnz	u7330
 20398  01523A  0E0A               	movlw	10
 20399  01523C  5C3A               	subwf	(btemp+8)^0,w,c
 20400  01523E  B0D8               	btfsc	status,0,c
 20401  015240  D002               	goto	u7330
 20402  015242  0E01               	movlw	1
 20403  015244  D001               	goto	u7340
 20404  015246                     u7330:
 20405  015246  0E00               	movlw	0
 20406  015248                     u7340:
 20407  015248  6E3C               	movwf	(btemp+10)^0,c
 20408  01524A  6A3D               	clrf	(btemp+11)^0,c
 20409                           
 20410                           ;stkvar	_atoi$4929 @ sp[(-9)+0]
 20411  01524C  0EF7               	movlw	-9
 20412  01524E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20413  015254  0EF8               	movlw	-8
 20414  015256  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20415                           
 20416                           ;stkvar	_atoi$4929 @ sp[(-9)+0]
 20417  01525C  0EF7               	movlw	-9
 20418  01525E  006F FF8C  F032    	movff	plusw1,btemp
 20419  015264  0EF8               	movlw	-8
 20420  015266  50E3               	movf	plusw1,w,c
 20421  015268  1032               	iorwf	btemp^0,w,c
 20422  01526A  A4D8               	btfss	status,2,c
 20423  01526C  D795               	goto	l7591
 20424                           
 20425                           ;stkvar	_neg @ sp[(-9)+7]
 20426  01526E  0EFE               	movlw	-2
 20427  015270  006F FF8C  F032    	movff	plusw1,btemp
 20428  015276  0EFF               	movlw	-1
 20429  015278  50E3               	movf	plusw1,w,c
 20430  01527A  1032               	iorwf	btemp^0,w,c
 20431  01527C  A4D8               	btfss	status,2,c
 20432  01527E  D00E               	goto	l7605
 20433                           
 20434                           ;stkvar	_n @ sp[(-9)+5]
 20435  015280  0EFC               	movlw	-4
 20436  015282  006F FF8C  F032    	movff	plusw1,btemp
 20437  015288  1E32               	comf	btemp^0,f,c
 20438  01528A  0EFD               	movlw	-3
 20439  01528C  006F FF8C  F033    	movff	plusw1,btemp+1
 20440  015292  1E33               	comf	(btemp+1)^0,f,c
 20441  015294  2A32               	incf	btemp^0,f,c
 20442  015296  B4D8               	btfsc	status,2,c
 20443  015298  2A33               	incf	(btemp+1)^0,f,c
 20444  01529A  D008               	goto	l2760
 20445  01529C                     l7605:
 20446                           
 20447                           ;stkvar	_n @ sp[(-9)+5]
 20448  01529C  0EFC               	movlw	-4
 20449  01529E  006F FF8C  F032    	movff	plusw1,btemp
 20450  0152A4  0EFD               	movlw	-3
 20451  0152A6  006F FF8C  F033    	movff	plusw1,btemp+1
 20452  0152AC                     l2760:
 20453                           
 20454                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20455  0152AC  0EF5               	movlw	245
 20456  0152AE  26E1               	addwf	fsr1l,f,c
 20457  0152B0  0EFF               	movlw	255
 20458  0152B2  22E2               	addwfc	fsr1h,f,c
 20459  0152B4  0012               	return		;funcret
 20460  0152B6                     __end_of_atoi:
 20461                           	opt callstack 0
 20462                           
 20463 ;; *************** function _isspace *****************
 20464 ;; Defined at:
 20465 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20466 ;; Parameters:    Size  Location     Type
 20467 ;;  c               2  [STACK] int 
 20468 ;; Auto vars:     Size  Location     Type
 20469 ;;		None
 20470 ;; Return value:  Size  Location     Type
 20471 ;;                  2  [STACK] int 
 20472 ;; Registers used:
 20473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20474 ;; Tracked objects:
 20475 ;;		On entry : 0/0
 20476 ;;		On exit  : 0/0
 20477 ;;		Unchanged: 0/0
 20478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20483 ;;Total ram usage:        0 bytes
 20484 ;; Hardware stack levels used:    1
 20485 ;; Hardware stack levels required when called:    6
 20486 ;; This function calls:
 20487 ;;		Nothing
 20488 ;; This function is called by:
 20489 ;;		_atoi
 20490 ;; This function uses a reentrant model
 20491 ;;
 20492                           
 20493                           	psect	text73
 20494  017A36                     __ptext73:
 20495                           	opt callstack 0
 20496  017A36                     _isspace:
 20497                           	opt callstack 0
 20498                           
 20499                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20500  017A36  52E6               	movf	postinc1,f,c
 20501                           
 20502                           ;stkvar	_isspace$4967 @ sp[(-1)+0]
 20503                           
 20504                           ;incstack = 0
 20505  017A38  0EFF               	movlw	-1
 20506  017A3A  6AE3               	clrf	plusw1,c
 20507  017A3C  2AE3               	incf	plusw1,f,c
 20508                           
 20509                           ;stkvar	_c @ sp[(-1)+-2]
 20510  017A3E  0EFD               	movlw	-3
 20511  017A40  006F FF8C  F032    	movff	plusw1,btemp
 20512  017A46  0E20               	movlw	32
 20513  017A48  1832               	xorwf	btemp^0,w,c
 20514  017A4A  E104               	bnz	u6300
 20515  017A4C  0EFE               	movlw	-2
 20516  017A4E  50E3               	movf	plusw1,w,c
 20517  017A50  B4D8               	btfsc	status,2,c
 20518  017A52  D012               	goto	l7055
 20519  017A54                     u6300:
 20520                           
 20521                           ;stkvar	_c @ sp[(-1)+-2]
 20522  017A54  0EFD               	movlw	-3
 20523  017A56  50E3               	movf	plusw1,w,c
 20524  017A58  0FF7               	addlw	247
 20525  017A5A  6E3C               	movwf	(btemp+10)^0,c
 20526  017A5C  0EFE               	movlw	-2
 20527  017A5E  006F FF8C  F03D    	movff	plusw1,btemp+11
 20528  017A64  0EFF               	movlw	255
 20529  017A66  223D               	addwfc	(btemp+11)^0,f,c
 20530  017A68  503D               	movf	(btemp+11)^0,w,c
 20531  017A6A  E104               	bnz	u6310
 20532  017A6C  0E05               	movlw	5
 20533  017A6E  5C3C               	subwf	(btemp+10)^0,w,c
 20534  017A70  A0D8               	btfss	status,0,c
 20535  017A72  D002               	goto	l7055
 20536  017A74                     u6310:
 20537                           
 20538                           ;stkvar	_isspace$4967 @ sp[(-1)+0]
 20539  017A74  0EFF               	movlw	-1
 20540  017A76  6AE3               	clrf	plusw1,c
 20541  017A78                     l7055:
 20542                           
 20543                           ;stkvar	_isspace$4967 @ sp[(-1)+0]
 20544  017A78  0EFF               	movlw	-1
 20545  017A7A  50E3               	movf	plusw1,w,c
 20546  017A7C  6E32               	movwf	btemp^0,c
 20547  017A7E  6A33               	clrf	(btemp+1)^0,c
 20548                           
 20549                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20550  017A80  52E5               	movf	postdec1,f,c
 20551  017A82  52E5               	movf	postdec1,f,c
 20552  017A84  52E5               	movf	postdec1,f,c
 20553  017A86  0012               	return		;funcret
 20554  017A88                     __end_of_isspace:
 20555                           	opt callstack 0
 20556                           
 20557 ;; *************** function _isdigit *****************
 20558 ;; Defined at:
 20559 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20560 ;; Parameters:    Size  Location     Type
 20561 ;;  c               2  [STACK] int 
 20562 ;; Auto vars:     Size  Location     Type
 20563 ;;		None
 20564 ;; Return value:  Size  Location     Type
 20565 ;;                  2  [STACK] int 
 20566 ;; Registers used:
 20567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20568 ;; Tracked objects:
 20569 ;;		On entry : 0/0
 20570 ;;		On exit  : 0/0
 20571 ;;		Unchanged: 0/0
 20572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20577 ;;Total ram usage:        0 bytes
 20578 ;; Hardware stack levels used:    1
 20579 ;; Hardware stack levels required when called:    6
 20580 ;; This function calls:
 20581 ;;		Nothing
 20582 ;; This function is called by:
 20583 ;;		_vfpfcnvrt
 20584 ;;		_atoi
 20585 ;; This function uses a reentrant model
 20586 ;;
 20587                           
 20588                           	psect	text74
 20589  017F1A                     __ptext74:
 20590                           	opt callstack 0
 20591  017F1A                     _isdigit:
 20592                           	opt callstack 18
 20593                           
 20594                           ;stkvar	_c @ sp[(0)+-2]
 20595                           
 20596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20597                           ;incstack = 0
 20598  017F1A  0EFE               	movlw	-2
 20599  017F1C  50E3               	movf	plusw1,w,c
 20600  017F1E  0FD0               	addlw	208
 20601  017F20  6E3C               	movwf	(btemp+10)^0,c
 20602  017F22  0EFF               	movlw	-1
 20603  017F24  006F FF8C  F03D    	movff	plusw1,btemp+11
 20604  017F2A  0EFF               	movlw	255
 20605  017F2C  223D               	addwfc	(btemp+11)^0,f,c
 20606  017F2E  503D               	movf	(btemp+11)^0,w,c
 20607  017F30  E106               	bnz	u5260
 20608  017F32  0E0A               	movlw	10
 20609  017F34  5C3C               	subwf	(btemp+10)^0,w,c
 20610  017F36  B0D8               	btfsc	status,0,c
 20611  017F38  D002               	goto	u5260
 20612  017F3A  0E01               	movlw	1
 20613  017F3C  D001               	goto	u5270
 20614  017F3E                     u5260:
 20615  017F3E  0E00               	movlw	0
 20616  017F40                     u5270:
 20617  017F40  6E32               	movwf	btemp^0,c
 20618  017F42  6A33               	clrf	(btemp+1)^0,c
 20619                           
 20620                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20621  017F44  52E5               	movf	postdec1,f,c
 20622  017F46  52E5               	movf	postdec1,f,c
 20623  017F48  0012               	return		;funcret
 20624  017F4A                     __end_of_isdigit:
 20625                           	opt callstack 0
 20626                           
 20627 ;; *************** function _set_vterm *****************
 20628 ;; Defined at:
 20629 ;;		line 104 in file "mconfig.c"
 20630 ;; Parameters:    Size  Location     Type
 20631 ;;  vterm           1  [STACK] const unsigned char 
 20632 ;; Auto vars:     Size  Location     Type
 20633 ;;		None
 20634 ;; Return value:  Size  Location     Type
 20635 ;;                  1  [STACK] unsigned char 
 20636 ;; Registers used:
 20637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20638 ;; Tracked objects:
 20639 ;;		On entry : 0/0
 20640 ;;		On exit  : 3F/5
 20641 ;;		Unchanged: 0/0
 20642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20647 ;;Total ram usage:        0 bytes
 20648 ;; Hardware stack levels used:    1
 20649 ;; Hardware stack levels required when called:    6
 20650 ;; This function calls:
 20651 ;;		Nothing
 20652 ;; This function is called by:
 20653 ;;		_main
 20654 ;;		_check_help
 20655 ;; This function uses a reentrant model
 20656 ;;
 20657                           
 20658                           	psect	text75
 20659  0184A4                     __ptext75:
 20660                           	opt callstack 0
 20661  0184A4                     _set_vterm:
 20662                           	opt callstack 24
 20663                           
 20664                           ;mconfig.c: 104: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106
      +                          :  D.vterm = vterm & 0x03;
 20665                           ;stkvar	_vterm @ sp[(0)+-1]
 20666                           
 20667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20668                           ;incstack = 0
 20669  0184A4  0EFF               	movlw	-1
 20670  0184A6  006F FF8C  F03D    	movff	plusw1,btemp+11
 20671  0184AC  0E03               	movlw	3
 20672  0184AE  163D               	andwf	(btemp+11)^0,f,c
 20673  0184B0  0105               	movlb	5	; () banked
 20674  0184B2  51D8               	movf	(_D+216)& (0+255),w,b
 20675  0184B4  183D               	xorwf	(btemp+11)^0,w,c
 20676  0184B6  0BFE               	andlw	-2
 20677  0184B8  183D               	xorwf	(btemp+11)^0,w,c
 20678  0184BA  6FD8               	movwf	(_D+216)& (0+255),b
 20679                           
 20680                           ; BSR set to: 5
 20681                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20682  0184BC  52E5               	movf	postdec1,f,c
 20683  0184BE  0012               	return		;funcret
 20684  0184C0                     __end_of_set_vterm:
 20685                           	opt callstack 0
 20686                           
 20687 ;; *************** function _set_temp_display_help *****************
 20688 ;; Defined at:
 20689 ;;		line 208 in file "mconfig.c"
 20690 ;; Parameters:    Size  Location     Type
 20691 ;;  new_response    1  [STACK] const enum E16501
 20692 ;; Auto vars:     Size  Location     Type
 20693 ;;		None
 20694 ;; Return value:  Size  Location     Type
 20695 ;;                  1  [STACK] enum E16501
 20696 ;; Registers used:
 20697 ;;		wreg, fsr1l, fsr1h
 20698 ;; Tracked objects:
 20699 ;;		On entry : 0/5
 20700 ;;		On exit  : 3F/1
 20701 ;;		Unchanged: 0/0
 20702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20707 ;;Total ram usage:        0 bytes
 20708 ;; Hardware stack levels used:    1
 20709 ;; Hardware stack levels required when called:    6
 20710 ;; This function calls:
 20711 ;;		Nothing
 20712 ;; This function is called by:
 20713 ;;		_check_help
 20714 ;; This function uses a reentrant model
 20715 ;;
 20716                           
 20717                           	psect	text76
 20718  01858E                     __ptext76:
 20719                           	opt callstack 0
 20720  01858E                     _set_temp_display_help:
 20721                           	opt callstack 23
 20722                           
 20723                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 20724                           
 20725                           ; BSR set to: 5
 20726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20727                           ;incstack = 0
 20728  01858E  0101               	movlb	1	; () banked
 20729  018590  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20730                           
 20731                           ; BSR set to: 1
 20732                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 20733                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20734  018592  0EFF               	movlw	-1
 20735  018594  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20736                           
 20737                           ; BSR set to: 1
 20738                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20739  01859A  52E5               	movf	postdec1,f,c
 20740  01859C  0012               	return		;funcret
 20741  01859E                     __end_of_set_temp_display_help:
 20742                           	opt callstack 0
 20743                           
 20744 ;; *************** function _set_display_info *****************
 20745 ;; Defined at:
 20746 ;;		line 197 in file "mconfig.c"
 20747 ;; Parameters:    Size  Location     Type
 20748 ;;  new_response    1  [STACK] const enum E16501
 20749 ;; Auto vars:     Size  Location     Type
 20750 ;;		None
 20751 ;; Return value:  Size  Location     Type
 20752 ;;                  1  [STACK] enum E16986
 20753 ;; Registers used:
 20754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20755 ;; Tracked objects:
 20756 ;;		On entry : 0/39
 20757 ;;		On exit  : 0/0
 20758 ;;		Unchanged: 0/0
 20759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20764 ;;Total ram usage:        0 bytes
 20765 ;; Hardware stack levels used:    1
 20766 ;; Hardware stack levels required when called:    7
 20767 ;; This function calls:
 20768 ;;		_TimerDone
 20769 ;; This function is called by:
 20770 ;;		_main
 20771 ;;		_check_help
 20772 ;; This function uses a reentrant model
 20773 ;;
 20774                           
 20775                           	psect	text77
 20776  01842E                     __ptext77:
 20777                           	opt callstack 0
 20778  01842E                     _set_display_info:
 20779                           	opt callstack 23
 20780                           
 20781                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 20782                           
 20783                           ; BSR set to: 1
 20784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20785                           ;incstack = 0
 20786  01842E  0E07               	movlw	7
 20787  018430  6EE6               	movwf	postinc1,c
 20788  018432  EC91  F0C1         	call	_TimerDone	;wreg free
 20789  018436  5032               	movf	btemp^0,w,c
 20790  018438  B4D8               	btfsc	status,2,c
 20791  01843A  D006               	goto	l1608
 20792                           
 20793                           ;mconfig.c: 202:   old_info = V.response.info;
 20794  01843C  0101               	movlb	1	; () banked
 20795  01843E  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20796                           
 20797                           ; BSR set to: 1
 20798                           ;mconfig.c: 203:   V.response.info = new_response_info;
 20799                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20800  018440  0EFF               	movlw	-1
 20801  018442  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20802  018448                     l1608:
 20803                           
 20804                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20805  018448  52E5               	movf	postdec1,f,c
 20806  01844A  0012               	return		;funcret
 20807  01844C                     __end_of_set_display_info:
 20808                           	opt callstack 0
 20809                           
 20810 ;; *************** function _mode_lamp_dim *****************
 20811 ;; Defined at:
 20812 ;;		line 13 in file "mconfig.c"
 20813 ;; Parameters:    Size  Location     Type
 20814 ;;  level           2  [STACK] const unsigned short 
 20815 ;; Auto vars:     Size  Location     Type
 20816 ;;		None
 20817 ;; Return value:  Size  Location     Type
 20818 ;;                  1  [STACK] void 
 20819 ;; Registers used:
 20820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20821 ;; Tracked objects:
 20822 ;;		On entry : 0/1
 20823 ;;		On exit  : 0/0
 20824 ;;		Unchanged: 0/0
 20825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20830 ;;Total ram usage:        0 bytes
 20831 ;; Hardware stack levels used:    1
 20832 ;; Hardware stack levels required when called:    7
 20833 ;; This function calls:
 20834 ;;		_PWM8_LoadDutyValue
 20835 ;; This function is called by:
 20836 ;;		_main
 20837 ;;		_check_help
 20838 ;; This function uses a reentrant model
 20839 ;;
 20840                           
 20841                           	psect	text78
 20842  0184F6                     __ptext78:
 20843                           	opt callstack 0
 20844  0184F6                     _mode_lamp_dim:
 20845                           	opt callstack 23
 20846                           
 20847                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20848                           ;stkvar	_level @ sp[(0)+-2]
 20849                           
 20850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20851                           ;incstack = 0
 20852  0184F6  0EFE               	movlw	-2
 20853  0184F8  006F FF8F FFE6     	movff	plusw1,postinc1
 20854  0184FE  006F FF8F FFE6     	movff	plusw1,postinc1
 20855  018504  EC39  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 20856                           
 20857                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20858  018508  52E5               	movf	postdec1,f,c
 20859  01850A  52E5               	movf	postdec1,f,c
 20860  01850C  0012               	return		;funcret
 20861  01850E                     __end_of_mode_lamp_dim:
 20862                           	opt callstack 0
 20863                           
 20864 ;; *************** function _mode_lamp_bright *****************
 20865 ;; Defined at:
 20866 ;;		line 18 in file "mconfig.c"
 20867 ;; Parameters:    Size  Location     Type
 20868 ;;		None
 20869 ;; Auto vars:     Size  Location     Type
 20870 ;;		None
 20871 ;; Return value:  Size  Location     Type
 20872 ;;                  1  [STACK] void 
 20873 ;; Registers used:
 20874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20875 ;; Tracked objects:
 20876 ;;		On entry : 0/1
 20877 ;;		On exit  : 0/0
 20878 ;;		Unchanged: 0/0
 20879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20884 ;;Total ram usage:        0 bytes
 20885 ;; Hardware stack levels used:    1
 20886 ;; Hardware stack levels required when called:    7
 20887 ;; This function calls:
 20888 ;;		_PWM8_LoadDutyValue
 20889 ;; This function is called by:
 20890 ;;		_check_help
 20891 ;; This function uses a reentrant model
 20892 ;;
 20893                           
 20894                           	psect	text79
 20895  0185AC                     __ptext79:
 20896                           	opt callstack 0
 20897  0185AC                     _mode_lamp_bright:
 20898                           	opt callstack 22
 20899                           
 20900                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20901                           
 20902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20903                           ;incstack = 0
 20904  0185AC  0E2C               	movlw	44
 20905  0185AE  6EE6               	movwf	postinc1,c
 20906  0185B0  0E01               	movlw	1
 20907  0185B2  6EE6               	movwf	postinc1,c
 20908  0185B4  EC39  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 20909                           
 20910                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20911  0185B8  0012               	return		;funcret
 20912  0185BA                     __end_of_mode_lamp_bright:
 20913                           	opt callstack 0
 20914                           
 20915 ;; *************** function _PWM8_LoadDutyValue *****************
 20916 ;; Defined at:
 20917 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20918 ;; Parameters:    Size  Location     Type
 20919 ;;  dutyValue       2  [STACK] unsigned short 
 20920 ;; Auto vars:     Size  Location     Type
 20921 ;;		None
 20922 ;; Return value:  Size  Location     Type
 20923 ;;                  1  [STACK] void 
 20924 ;; Registers used:
 20925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20926 ;; Tracked objects:
 20927 ;;		On entry : 0/1
 20928 ;;		On exit  : 0/0
 20929 ;;		Unchanged: 0/0
 20930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20935 ;;Total ram usage:        0 bytes
 20936 ;; Hardware stack levels used:    1
 20937 ;; Hardware stack levels required when called:    6
 20938 ;; This function calls:
 20939 ;;		Nothing
 20940 ;; This function is called by:
 20941 ;;		_mode_lamp_dim
 20942 ;;		_mode_lamp_bright
 20943 ;; This function uses a reentrant model
 20944 ;;
 20945                           
 20946                           	psect	text80
 20947  017C72                     __ptext80:
 20948                           	opt callstack 0
 20949  017C72                     _PWM8_LoadDutyValue:
 20950                           	opt callstack 23
 20951                           
 20952                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20953                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20954                           
 20955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20956                           ;incstack = 0
 20957  017C72  0EFE               	movlw	-2
 20958  017C74  006F FF8C  F03C    	movff	plusw1,btemp+10
 20959  017C7A  0EFF               	movlw	-1
 20960  017C7C  006F FF8C  F03D    	movff	plusw1,btemp+11
 20961  017C82  90D8               	bcf	status,0,c
 20962  017C84  323D               	rrcf	(btemp+11)^0,f,c
 20963  017C86  323C               	rrcf	(btemp+10)^0,f,c
 20964  017C88  90D8               	bcf	status,0,c
 20965  017C8A  323D               	rrcf	(btemp+11)^0,f,c
 20966  017C8C  323C               	rrcf	(btemp+10)^0,f,c
 20967  017C8E  503C               	movf	(btemp+10)^0,w,c
 20968  017C90  6E61               	movwf	97,c	;volatile
 20969                           
 20970                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20971                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20972  017C92  0EFE               	movlw	-2
 20973  017C94  006F FF8C  F03D    	movff	plusw1,btemp+11
 20974  017C9A  0E03               	movlw	3
 20975  017C9C  163D               	andwf	(btemp+11)^0,f,c
 20976  017C9E  0E06               	movlw	6
 20977  017CA0  6E32               	movwf	btemp^0,c
 20978  017CA2                     u7795:
 20979  017CA2  90D8               	bcf	status,0,c
 20980  017CA4  363D               	rlcf	(btemp+11)^0,f,c
 20981  017CA6  2E32               	decfsz	btemp^0,f,c
 20982  017CA8  D7FC               	goto	u7795
 20983  017CAA  503D               	movf	(btemp+11)^0,w,c
 20984  017CAC  6E60               	movwf	96,c	;volatile
 20985                           
 20986                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20987  017CAE  52E5               	movf	postdec1,f,c
 20988  017CB0  52E5               	movf	postdec1,f,c
 20989  017CB2  0012               	return		;funcret
 20990  017CB4                     __end_of_PWM8_LoadDutyValue:
 20991                           	opt callstack 0
 20992                           
 20993 ;; *************** function _help_button *****************
 20994 ;; Defined at:
 20995 ;;		line 26 in file "mconfig.c"
 20996 ;; Parameters:    Size  Location     Type
 20997 ;;		None
 20998 ;; Auto vars:     Size  Location     Type
 20999 ;;		None
 21000 ;; Return value:  Size  Location     Type
 21001 ;;                  1  [STACK] _Bool 
 21002 ;; Registers used:
 21003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21004 ;; Tracked objects:
 21005 ;;		On entry : 0/1
 21006 ;;		On exit  : 0/0
 21007 ;;		Unchanged: 0/0
 21008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21013 ;;Total ram usage:        0 bytes
 21014 ;; Hardware stack levels used:    1
 21015 ;; Hardware stack levels required when called:    7
 21016 ;; This function calls:
 21017 ;;		_StartTimer
 21018 ;;		_TimerDone
 21019 ;; This function is called by:
 21020 ;;		_check_help
 21021 ;; This function uses a reentrant model
 21022 ;;
 21023                           
 21024                           	psect	text81
 21025  017DAE                     __ptext81:
 21026                           	opt callstack 0
 21027  017DAE                     _help_button:
 21028                           	opt callstack 22
 21029                           
 21030                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21031                           
 21032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21033                           ;incstack = 0
 21034  017DAE  B0CB               	btfsc	203,0,c	;volatile
 21035  017DB0  D00C               	goto	l1551
 21036                           
 21037                           ;mconfig.c: 29:   V.help = 1;
 21038  017DB2  0101               	movlb	1	; () banked
 21039  017DB4  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21040                           
 21041                           ; BSR set to: 1
 21042                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21043  017DB6  0E08               	movlw	8
 21044  017DB8  6EE6               	movwf	postinc1,c
 21045  017DBA  EC91  F0C1         	call	_TimerDone	;wreg free
 21046  017DBE  5032               	movf	btemp^0,w,c
 21047  017DC0  B4D8               	btfsc	status,2,c
 21048  017DC2  D003               	goto	l1551
 21049                           
 21050                           ;mconfig.c: 31:    return 1;
 21051  017DC4  0E01               	movlw	1
 21052  017DC6  6E32               	movwf	btemp^0,c
 21053  017DC8  0012               	return	
 21054  017DCA                     l1551:
 21055                           
 21056                           ;mconfig.c: 34:  if (!V.help)
 21057  017DCA  0101               	movlb	1	; () banked
 21058  017DCC  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21059  017DCE  D008               	goto	l8495
 21060                           
 21061                           ; BSR set to: 1
 21062                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21063  017DD0  0E2C               	movlw	44
 21064  017DD2  6EE6               	movwf	postinc1,c
 21065  017DD4  0E01               	movlw	1
 21066  017DD6  6EE6               	movwf	postinc1,c
 21067  017DD8  0E08               	movlw	8
 21068  017DDA  6EE6               	movwf	postinc1,c
 21069  017DDC  ECB9  F0BE         	call	_StartTimer	;wreg free
 21070  017DE0                     l8495:
 21071                           
 21072                           ;mconfig.c: 37:  return 0;
 21073  017DE0  0E00               	movlw	0
 21074  017DE2  6E32               	movwf	btemp^0,c
 21075                           
 21076                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21077  017DE4  0012               	return		;funcret
 21078  017DE6                     __end_of_help_button:
 21079                           	opt callstack 0
 21080                           
 21081 ;; *************** function _TimerDone *****************
 21082 ;; Defined at:
 21083 ;;		line 20 in file "timers.c"
 21084 ;; Parameters:    Size  Location     Type
 21085 ;;  timer           1  [STACK] const unsigned char 
 21086 ;; Auto vars:     Size  Location     Type
 21087 ;;		None
 21088 ;; Return value:  Size  Location     Type
 21089 ;;                  1  [STACK] _Bool 
 21090 ;; Registers used:
 21091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21092 ;; Tracked objects:
 21093 ;;		On entry : 0/39
 21094 ;;		On exit  : 0/0
 21095 ;;		Unchanged: 0/0
 21096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21101 ;;Total ram usage:        0 bytes
 21102 ;; Hardware stack levels used:    1
 21103 ;; Hardware stack levels required when called:    6
 21104 ;; This function calls:
 21105 ;;		Nothing
 21106 ;; This function is called by:
 21107 ;;		_main
 21108 ;;		_WaitMs
 21109 ;;		_help_button
 21110 ;;		_check_help
 21111 ;;		_set_display_info
 21112 ;; This function uses a reentrant model
 21113 ;;
 21114                           
 21115                           	psect	text82
 21116  018322                     __ptext82:
 21117                           	opt callstack 0
 21118  018322                     _TimerDone:
 21119                           	opt callstack 23
 21120                           
 21121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21122                           ;incstack = 0
 21123  018322  0004               	clrwdt		;# 
 21124                           
 21125                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21126                           ;stkvar	_timer @ sp[(0)+-1]
 21127  018324  0EFF               	movlw	-1
 21128  018326  50E3               	movf	plusw1,w,c
 21129  018328  0D02               	mullw	2
 21130  01832A  50F3               	movf	243,w,c
 21131  01832C  0F60               	addlw	low _tickCount
 21132  01832E  6ED9               	movwf	fsr2l,c
 21133  018330  6ADA               	clrf	fsr2h,c
 21134  018332  50DE               	movf	postinc2,w,c
 21135  018334  10DE               	iorwf	postinc2,w,c
 21136  018336  A4D8               	btfss	status,2,c
 21137  018338  D002               	goto	l7891
 21138                           
 21139                           ;timers.c: 24:   return 1;
 21140  01833A  0E01               	movlw	1
 21141  01833C  D001               	goto	L19
 21142  01833E                     l7891:
 21143                           
 21144                           ;timers.c: 26:  return 0;
 21145  01833E  0E00               	movlw	0
 21146  018340                     L19:
 21147  018340  6E32               	movwf	btemp^0,c
 21148                           
 21149                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21150  018342  52E5               	movf	postdec1,f,c
 21151  018344  0012               	return		;funcret
 21152  018346                     __end_of_TimerDone:
 21153                           	opt callstack 0
 21154                           
 21155 ;; *************** function _StartTimer *****************
 21156 ;; Defined at:
 21157 ;;		line 12 in file "timers.c"
 21158 ;; Parameters:    Size  Location     Type
 21159 ;;  timer           1  [STACK] const unsigned char 
 21160 ;;  count           2  [STACK] const unsigned short 
 21161 ;; Auto vars:     Size  Location     Type
 21162 ;;		None
 21163 ;; Return value:  Size  Location     Type
 21164 ;;                  1  [STACK] void 
 21165 ;; Registers used:
 21166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21167 ;; Tracked objects:
 21168 ;;		On entry : 0/5
 21169 ;;		On exit  : 0/0
 21170 ;;		Unchanged: 0/0
 21171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21176 ;;Total ram usage:        0 bytes
 21177 ;; Hardware stack levels used:    1
 21178 ;; Hardware stack levels required when called:    6
 21179 ;; This function calls:
 21180 ;;		Nothing
 21181 ;; This function is called by:
 21182 ;;		_main
 21183 ;;		_WaitMs
 21184 ;;		_help_button
 21185 ;;		_check_help
 21186 ;; This function uses a reentrant model
 21187 ;;
 21188                           
 21189                           	psect	text83
 21190  017D72                     __ptext83:
 21191                           	opt callstack 0
 21192  017D72                     _StartTimer:
 21193                           	opt callstack 21
 21194                           
 21195                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21196                           ;stkvar	_count @ sp[(0)+-3]
 21197                           
 21198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21199                           ;incstack = 0
 21200  017D72  0EFD               	movlw	-3
 21201  017D74  006F FF8C  F03C    	movff	plusw1,btemp+10
 21202  017D7A  0EFE               	movlw	-2
 21203  017D7C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21204  017D82  90D8               	bcf	status,0,c
 21205  017D84  343C               	rlcf	(btemp+10)^0,w,c
 21206  017D86  6E3A               	movwf	(btemp+8)^0,c
 21207  017D88  343D               	rlcf	(btemp+11)^0,w,c
 21208  017D8A  6E3B               	movwf	(btemp+9)^0,c
 21209                           
 21210                           ;stkvar	_timer @ sp[(0)+-1]
 21211  017D8C  0EFF               	movlw	-1
 21212  017D8E  50E3               	movf	plusw1,w,c
 21213  017D90  0D02               	mullw	2
 21214  017D92  50F3               	movf	243,w,c
 21215  017D94  0F60               	addlw	low _tickCount
 21216  017D96  6ED9               	movwf	fsr2l,c
 21217  017D98  6ADA               	clrf	fsr2h,c
 21218  017D9A  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 21219  017DA0  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 21220                           
 21221                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21222  017DA6  52E5               	movf	postdec1,f,c
 21223  017DA8  52E5               	movf	postdec1,f,c
 21224  017DAA  52E5               	movf	postdec1,f,c
 21225  017DAC  0012               	return		;funcret
 21226  017DAE                     __end_of_StartTimer:
 21227                           	opt callstack 0
 21228                           
 21229 ;; *************** function _display_info *****************
 21230 ;; Defined at:
 21231 ;;		line 187 in file "mconfig.c"
 21232 ;; Parameters:    Size  Location     Type
 21233 ;;		None
 21234 ;; Auto vars:     Size  Location     Type
 21235 ;;		None
 21236 ;; Return value:  Size  Location     Type
 21237 ;;                  1  [STACK] enum E16501
 21238 ;; Registers used:
 21239 ;;		btemp
 21240 ;; Tracked objects:
 21241 ;;		On entry : 0/1
 21242 ;;		On exit  : 0/0
 21243 ;;		Unchanged: 0/0
 21244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21249 ;;Total ram usage:        0 bytes
 21250 ;; Hardware stack levels used:    1
 21251 ;; Hardware stack levels required when called:    6
 21252 ;; This function calls:
 21253 ;;		Nothing
 21254 ;; This function is called by:
 21255 ;;		_check_help
 21256 ;; This function uses a reentrant model
 21257 ;;
 21258                           
 21259                           	psect	text84
 21260  018616                     __ptext84:
 21261                           	opt callstack 0
 21262  018616                     _display_info:
 21263                           	opt callstack 23
 21264                           
 21265                           ;mconfig.c: 189:  return V.response.info;
 21266                           
 21267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21268                           ;incstack = 0
 21269  018616  0060  F68C  F032   	movff	_V+163,btemp	;volatile
 21270                           
 21271                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21272  01861C  0012               	return		;funcret
 21273  01861E                     __end_of_display_info:
 21274                           	opt callstack 0
 21275                           
 21276 ;; *************** function _display_help *****************
 21277 ;; Defined at:
 21278 ;;		line 192 in file "mconfig.c"
 21279 ;; Parameters:    Size  Location     Type
 21280 ;;		None
 21281 ;; Auto vars:     Size  Location     Type
 21282 ;;		None
 21283 ;; Return value:  Size  Location     Type
 21284 ;;                  1  [STACK] enum E16501
 21285 ;; Registers used:
 21286 ;;		btemp
 21287 ;; Tracked objects:
 21288 ;;		On entry : 3F/1
 21289 ;;		On exit  : 0/0
 21290 ;;		Unchanged: 0/0
 21291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21296 ;;Total ram usage:        0 bytes
 21297 ;; Hardware stack levels used:    1
 21298 ;; Hardware stack levels required when called:    6
 21299 ;; This function calls:
 21300 ;;		Nothing
 21301 ;; This function is called by:
 21302 ;;		_check_help
 21303 ;; This function uses a reentrant model
 21304 ;;
 21305                           
 21306                           	psect	text85
 21307  01861E                     __ptext85:
 21308                           	opt callstack 0
 21309  01861E                     _display_help:
 21310                           	opt callstack 23
 21311                           
 21312                           ;mconfig.c: 194:  return V.response.help_temp;
 21313                           
 21314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21315                           ;incstack = 0
 21316  01861E  0060  F690  F032   	movff	_V+164,btemp	;volatile
 21317                           
 21318                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21319  018624  0012               	return		;funcret
 21320  018626                     __end_of_display_help:
 21321                           	opt callstack 0
 21322                           
 21323 ;; *************** function _check_adc_scan *****************
 21324 ;; Defined at:
 21325 ;;		line 56 in file "daq.c"
 21326 ;; Parameters:    Size  Location     Type
 21327 ;;		None
 21328 ;; Auto vars:     Size  Location     Type
 21329 ;;		None
 21330 ;; Return value:  Size  Location     Type
 21331 ;;                  1  [STACK] _Bool 
 21332 ;; Registers used:
 21333 ;;		btemp
 21334 ;; Tracked objects:
 21335 ;;		On entry : 0/39
 21336 ;;		On exit  : 0/0
 21337 ;;		Unchanged: 0/0
 21338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21343 ;;Total ram usage:        0 bytes
 21344 ;; Hardware stack levels used:    1
 21345 ;; Hardware stack levels required when called:    6
 21346 ;; This function calls:
 21347 ;;		Nothing
 21348 ;; This function is called by:
 21349 ;;		_main
 21350 ;; This function uses a reentrant model
 21351 ;;
 21352                           
 21353                           	psect	text86
 21354  018626                     __ptext86:
 21355                           	opt callstack 0
 21356  018626                     _check_adc_scan:
 21357                           	opt callstack 24
 21358                           
 21359                           ;daq.c: 58:  return R.done;
 21360                           
 21361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21362                           ;incstack = 0
 21363  018626  0060  F334  F032   	movff	_R+39,btemp	;volatile
 21364                           
 21365                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21366  01862C  0012               	return		;funcret
 21367  01862E                     __end_of_check_adc_scan:
 21368                           	opt callstack 0
 21369                           
 21370 ;; *************** function _SYSTEM_Initialize *****************
 21371 ;; Defined at:
 21372 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21373 ;; Parameters:    Size  Location     Type
 21374 ;;		None
 21375 ;; Auto vars:     Size  Location     Type
 21376 ;;		None
 21377 ;; Return value:  Size  Location     Type
 21378 ;;                  1  [STACK] void 
 21379 ;; Registers used:
 21380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21381 ;; Tracked objects:
 21382 ;;		On entry : 0/0
 21383 ;;		On exit  : 3F/3C
 21384 ;;		Unchanged: 0/0
 21385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21390 ;;Total ram usage:        0 bytes
 21391 ;; Hardware stack levels used:    1
 21392 ;; Hardware stack levels required when called:    8
 21393 ;; This function calls:
 21394 ;;		_ADCC_Initialize
 21395 ;;		_CLKREF_Initialize
 21396 ;;		_DMA1_Initialize
 21397 ;;		_DMA2_Initialize
 21398 ;;		_EXT_INT_Initialize
 21399 ;;		_FVR_Initialize
 21400 ;;		_INTERRUPT_Initialize
 21401 ;;		_OSCILLATOR_Initialize
 21402 ;;		_PIN_MANAGER_Initialize
 21403 ;;		_PMD_Initialize
 21404 ;;		_PWM8_Initialize
 21405 ;;		_SPI1_Initialize
 21406 ;;		_TMR2_Initialize
 21407 ;;		_TMR5_Initialize
 21408 ;;		_TMR6_Initialize
 21409 ;;		_UART1_Initialize
 21410 ;;		_UART2_Initialize
 21411 ;; This function is called by:
 21412 ;;		_main
 21413 ;; This function uses a reentrant model
 21414 ;;
 21415                           
 21416                           	psect	text87
 21417  017B5C                     __ptext87:
 21418                           	opt callstack 0
 21419  017B5C                     _SYSTEM_Initialize:
 21420                           	opt callstack 22
 21421                           
 21422                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21423                           
 21424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21425                           ;incstack = 0
 21426  017B5C  EC42  F0BB         	call	_INTERRUPT_Initialize	;wreg free
 21427                           
 21428                           ; BSR set to: 57
 21429                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21430  017B60  ECB4  F0C2         	call	_PMD_Initialize	;wreg free
 21431                           
 21432                           ; BSR set to: 57
 21433                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21434  017B64  EC17  F0B9         	call	_PIN_MANAGER_Initialize	;wreg free
 21435                           
 21436                           ; BSR set to: 58
 21437                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21438  017B68  ECA9  F0C2         	call	_OSCILLATOR_Initialize	;wreg free
 21439                           
 21440                           ; BSR set to: 57
 21441                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21442  017B6C  EC17  F0C3         	call	_FVR_Initialize	;wreg free
 21443                           
 21444                           ; BSR set to: 62
 21445                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21446  017B70  ECD9  F0BA         	call	_ADCC_Initialize	;wreg free
 21447                           
 21448                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21449  017B74  EC87  F0C2         	call	_TMR2_Initialize	;wreg free
 21450                           
 21451                           ; BSR set to: 57
 21452                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21453  017B78  EC9E  F0C2         	call	_PWM8_Initialize	;wreg free
 21454                           
 21455                           ; BSR set to: 63
 21456                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21457  017B7C  EC43  F0BF         	call	_EXT_INT_Initialize	;wreg free
 21458                           
 21459                           ; BSR set to: 57
 21460                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21461  017B80  ECFE  F0BF         	call	_TMR6_Initialize	;wreg free
 21462                           
 21463                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21464  017B84  ECD1  F0BD         	call	_TMR5_Initialize	;wreg free
 21465                           
 21466                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21467  017B88  ECA7  F0BB         	call	_UART1_Initialize	;wreg free
 21468                           
 21469                           ; BSR set to: 57
 21470                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21471  017B8C  EC3B  F0BC         	call	_UART2_Initialize	;wreg free
 21472                           
 21473                           ; BSR set to: 57
 21474                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21475  017B90  EC93  F0C2         	call	_SPI1_Initialize	;wreg free
 21476                           
 21477                           ; BSR set to: 61
 21478                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21479  017B94  ECC5  F0BC         	call	_DMA2_Initialize	;wreg free
 21480                           
 21481                           ; BSR set to: 59
 21482                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21483  017B98  ECA4  F0BA         	call	_DMA1_Initialize	;wreg free
 21484                           
 21485                           ; BSR set to: 59
 21486                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21487  017B9C  ECED  F0C2         	call	_CLKREF_Initialize	;wreg free
 21488                           
 21489                           ; BSR set to: 60
 21490                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21491  017BA0  0012               	return		;funcret
 21492  017BA2                     __end_of_SYSTEM_Initialize:
 21493                           	opt callstack 0
 21494                           
 21495 ;; *************** function _UART2_Initialize *****************
 21496 ;; Defined at:
 21497 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21498 ;; Parameters:    Size  Location     Type
 21499 ;;		None
 21500 ;; Auto vars:     Size  Location     Type
 21501 ;;		None
 21502 ;; Return value:  Size  Location     Type
 21503 ;;                  1  [STACK] void 
 21504 ;; Registers used:
 21505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21506 ;; Tracked objects:
 21507 ;;		On entry : 3F/39
 21508 ;;		On exit  : 3F/39
 21509 ;;		Unchanged: 0/0
 21510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21515 ;;Total ram usage:        0 bytes
 21516 ;; Hardware stack levels used:    1
 21517 ;; Hardware stack levels required when called:    7
 21518 ;; This function calls:
 21519 ;;		_UART2_SetRxInterruptHandler
 21520 ;;		_UART2_SetTxInterruptHandler
 21521 ;; This function is called by:
 21522 ;;		_SYSTEM_Initialize
 21523 ;; This function uses a reentrant model
 21524 ;;
 21525                           
 21526                           	psect	text88
 21527  017876                     __ptext88:
 21528                           	opt callstack 0
 21529  017876                     _UART2_Initialize:
 21530                           	opt callstack 22
 21531                           
 21532                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21533                           
 21534                           ; BSR set to: 60
 21535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21536                           ;incstack = 0
 21537  017876  0139               	movlb	57	; () banked
 21538  017878  9596               	bcf	150,2,b	;volatile
 21539                           
 21540                           ; BSR set to: 57
 21541                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21542  01787A  0E6A               	movlw	low _UART2_Receive_ISR
 21543  01787C  6EE6               	movwf	postinc1,c
 21544  01787E  0E84               	movlw	high _UART2_Receive_ISR
 21545  017880  6EE6               	movwf	postinc1,c
 21546  017882  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21547  017884  6EE6               	movwf	postinc1,c
 21548  017886  EC79  F0C0         	call	_UART2_SetRxInterruptHandler	;wreg free
 21549                           
 21550                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21551  01788A  0139               	movlb	57	; () banked
 21552  01788C  9796               	bcf	150,3,b	;volatile
 21553                           
 21554                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21555  01788E  0ED0               	movlw	low _UART2_Transmit_ISR
 21556  017890  6EE6               	movwf	postinc1,c
 21557  017892  0E7F               	movlw	high _UART2_Transmit_ISR
 21558  017894  6EE6               	movwf	postinc1,c
 21559  017896  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21560  017898  6EE6               	movwf	postinc1,c
 21561  01789A  EC65  F0C0         	call	_UART2_SetTxInterruptHandler	;wreg free
 21562                           
 21563                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21564  01789E  013D               	movlb	61	; () banked
 21565  0178A0  6BD4               	clrf	212,b	;volatile
 21566                           
 21567                           ; BSR set to: 61
 21568                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21569  0178A2  6BD6               	clrf	214,b	;volatile
 21570                           
 21571                           ; BSR set to: 61
 21572                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21573  0178A4  6BD8               	clrf	216,b	;volatile
 21574                           
 21575                           ; BSR set to: 61
 21576                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21577  0178A6  0EB0               	movlw	176
 21578  0178A8  6FDA               	movwf	218,b	;volatile
 21579                           
 21580                           ; BSR set to: 61
 21581                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21582  0178AA  0E80               	movlw	128
 21583  0178AC  6FDB               	movwf	219,b	;volatile
 21584                           
 21585                           ; BSR set to: 61
 21586                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21587  0178AE  6BDC               	clrf	220,b	;volatile
 21588                           
 21589                           ; BSR set to: 61
 21590                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21591  0178B0  0E82               	movlw	130
 21592  0178B2  6FDD               	movwf	221,b	;volatile
 21593                           
 21594                           ; BSR set to: 61
 21595                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21596  0178B4  0E06               	movlw	6
 21597  0178B6  6FDE               	movwf	222,b	;volatile
 21598                           
 21599                           ; BSR set to: 61
 21600                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21601  0178B8  6BDF               	clrf	223,b	;volatile
 21602                           
 21603                           ; BSR set to: 61
 21604                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21605  0178BA  6BE0               	clrf	224,b	;volatile
 21606                           
 21607                           ; BSR set to: 61
 21608                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21609  0178BC  6BE1               	clrf	225,b	;volatile
 21610                           
 21611                           ; BSR set to: 61
 21612                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21613  0178BE  6BE2               	clrf	226,b	;volatile
 21614                           
 21615                           ; BSR set to: 61
 21616                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21617  0178C0  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21618                           
 21619                           ; BSR set to: 61
 21620                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21621  0178C2  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21622                           
 21623                           ; BSR set to: 61
 21624                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21625  0178C4  0E40               	movlw	64
 21626  0178C6  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21627                           
 21628                           ; BSR set to: 61
 21629                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21630  0178C8  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21631                           
 21632                           ; BSR set to: 61
 21633                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21634  0178CA  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21635                           
 21636                           ; BSR set to: 61
 21637                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21638  0178CC  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21639                           
 21640                           ; BSR set to: 61
 21641                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21642  0178CE  0139               	movlb	57	; () banked
 21643  0178D0  8596               	bsf	150,2,b	;volatile
 21644                           
 21645                           ; BSR set to: 57
 21646                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21647  0178D2  0012               	return		;funcret
 21648  0178D4                     __end_of_UART2_Initialize:
 21649                           	opt callstack 0
 21650                           
 21651 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21652 ;; Defined at:
 21653 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21654 ;; Parameters:    Size  Location     Type
 21655 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21656 ;;		 -> UART2_Transmit_ISR(1), 
 21657 ;; Auto vars:     Size  Location     Type
 21658 ;;		None
 21659 ;; Return value:  Size  Location     Type
 21660 ;;                  1  [STACK] void 
 21661 ;; Registers used:
 21662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21663 ;; Tracked objects:
 21664 ;;		On entry : 3F/39
 21665 ;;		On exit  : 0/0
 21666 ;;		Unchanged: 0/0
 21667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21672 ;;Total ram usage:        0 bytes
 21673 ;; Hardware stack levels used:    1
 21674 ;; Hardware stack levels required when called:    6
 21675 ;; This function calls:
 21676 ;;		Nothing
 21677 ;; This function is called by:
 21678 ;;		_UART2_Initialize
 21679 ;; This function uses a reentrant model
 21680 ;;
 21681                           
 21682                           	psect	text89
 21683  0180CA                     __ptext89:
 21684                           	opt callstack 0
 21685  0180CA                     _UART2_SetTxInterruptHandler:
 21686                           	opt callstack 22
 21687                           
 21688                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21689                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21690                           
 21691                           ; BSR set to: 57
 21692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21693                           ;incstack = 0
 21694  0180CA  50E1               	movf	fsr1l,w,c
 21695  0180CC  0FFD               	addlw	-3
 21696  0180CE  6ED9               	movwf	fsr2l,c
 21697  0180D0  50E2               	movf	fsr1h,w,c
 21698  0180D2  6EDA               	movwf	fsr2h,c
 21699  0180D4  0EFF               	movlw	255
 21700  0180D6  22DA               	addwfc	fsr2h,f,c
 21701  0180D8  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21702  0180DE  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21703  0180E4  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21704                           
 21705                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21706  0180EA  52E5               	movf	postdec1,f,c
 21707  0180EC  52E5               	movf	postdec1,f,c
 21708  0180EE  52E5               	movf	postdec1,f,c
 21709  0180F0  0012               	return		;funcret
 21710  0180F2                     __end_of_UART2_SetTxInterruptHandler:
 21711                           	opt callstack 0
 21712                           
 21713 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21714 ;; Defined at:
 21715 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21716 ;; Parameters:    Size  Location     Type
 21717 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21718 ;;		 -> UART2_Receive_ISR(1), 
 21719 ;; Auto vars:     Size  Location     Type
 21720 ;;		None
 21721 ;; Return value:  Size  Location     Type
 21722 ;;                  1  [STACK] void 
 21723 ;; Registers used:
 21724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21725 ;; Tracked objects:
 21726 ;;		On entry : 3F/39
 21727 ;;		On exit  : 0/0
 21728 ;;		Unchanged: 0/0
 21729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;Total ram usage:        0 bytes
 21735 ;; Hardware stack levels used:    1
 21736 ;; Hardware stack levels required when called:    6
 21737 ;; This function calls:
 21738 ;;		Nothing
 21739 ;; This function is called by:
 21740 ;;		_UART2_Initialize
 21741 ;; This function uses a reentrant model
 21742 ;;
 21743                           
 21744                           	psect	text90
 21745  0180F2                     __ptext90:
 21746                           	opt callstack 0
 21747  0180F2                     _UART2_SetRxInterruptHandler:
 21748                           	opt callstack 22
 21749                           
 21750                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21751                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21752                           
 21753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21754                           ;incstack = 0
 21755  0180F2  50E1               	movf	fsr1l,w,c
 21756  0180F4  0FFD               	addlw	-3
 21757  0180F6  6ED9               	movwf	fsr2l,c
 21758  0180F8  50E2               	movf	fsr1h,w,c
 21759  0180FA  6EDA               	movwf	fsr2h,c
 21760  0180FC  0EFF               	movlw	255
 21761  0180FE  22DA               	addwfc	fsr2h,f,c
 21762  018100  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 21763  018106  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 21764  01810C  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 21765                           
 21766                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21767  018112  52E5               	movf	postdec1,f,c
 21768  018114  52E5               	movf	postdec1,f,c
 21769  018116  52E5               	movf	postdec1,f,c
 21770  018118  0012               	return		;funcret
 21771  01811A                     __end_of_UART2_SetRxInterruptHandler:
 21772                           	opt callstack 0
 21773                           
 21774 ;; *************** function _UART1_Initialize *****************
 21775 ;; Defined at:
 21776 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21777 ;; Parameters:    Size  Location     Type
 21778 ;;		None
 21779 ;; Auto vars:     Size  Location     Type
 21780 ;;		None
 21781 ;; Return value:  Size  Location     Type
 21782 ;;                  1  [STACK] void 
 21783 ;; Registers used:
 21784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21785 ;; Tracked objects:
 21786 ;;		On entry : 0/39
 21787 ;;		On exit  : 3F/39
 21788 ;;		Unchanged: 0/0
 21789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21794 ;;Total ram usage:        0 bytes
 21795 ;; Hardware stack levels used:    1
 21796 ;; Hardware stack levels required when called:    7
 21797 ;; This function calls:
 21798 ;;		_UART1_SetRxInterruptHandler
 21799 ;;		_UART1_SetTxInterruptHandler
 21800 ;; This function is called by:
 21801 ;;		_SYSTEM_Initialize
 21802 ;; This function uses a reentrant model
 21803 ;;
 21804                           
 21805                           	psect	text91
 21806  01774E                     __ptext91:
 21807                           	opt callstack 0
 21808  01774E                     _UART1_Initialize:
 21809                           	opt callstack 22
 21810                           
 21811                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21812                           
 21813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21814                           ;incstack = 0
 21815  01774E  0139               	movlb	57	; () banked
 21816  017750  9793               	bcf	147,3,b	;volatile
 21817                           
 21818                           ; BSR set to: 57
 21819                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21820  017752  0E4C               	movlw	low _UART1_Receive_ISR
 21821  017754  6EE6               	movwf	postinc1,c
 21822  017756  0E84               	movlw	high _UART1_Receive_ISR
 21823  017758  6EE6               	movwf	postinc1,c
 21824  01775A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21825  01775C  6EE6               	movwf	postinc1,c
 21826  01775E  ECA1  F0C0         	call	_UART1_SetRxInterruptHandler	;wreg free
 21827                           
 21828                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21829  017762  0139               	movlb	57	; () banked
 21830  017764  9993               	bcf	147,4,b	;volatile
 21831                           
 21832                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21833  017766  0EA4               	movlw	low _UART1_Transmit_ISR
 21834  017768  6EE6               	movwf	postinc1,c
 21835  01776A  0E7F               	movlw	high _UART1_Transmit_ISR
 21836  01776C  6EE6               	movwf	postinc1,c
 21837  01776E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21838  017770  6EE6               	movwf	postinc1,c
 21839  017772  EC8D  F0C0         	call	_UART1_SetTxInterruptHandler	;wreg free
 21840                           
 21841                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21842  017776  013D               	movlb	61	; () banked
 21843  017778  6BEC               	clrf	236,b	;volatile
 21844                           
 21845                           ; BSR set to: 61
 21846                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21847  01777A  6BED               	clrf	237,b	;volatile
 21848                           
 21849                           ; BSR set to: 61
 21850                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21851  01777C  6BEE               	clrf	238,b	;volatile
 21852                           
 21853                           ; BSR set to: 61
 21854                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21855  01777E  6BEF               	clrf	239,b	;volatile
 21856                           
 21857                           ; BSR set to: 61
 21858                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21859  017780  6BF0               	clrf	240,b	;volatile
 21860                           
 21861                           ; BSR set to: 61
 21862                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21863  017782  6BF1               	clrf	241,b	;volatile
 21864                           
 21865                           ; BSR set to: 61
 21866                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21867  017784  0EB0               	movlw	176
 21868  017786  6FF2               	movwf	242,b	;volatile
 21869                           
 21870                           ; BSR set to: 61
 21871                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21872  017788  0E80               	movlw	128
 21873  01778A  6FF3               	movwf	243,b	;volatile
 21874                           
 21875                           ; BSR set to: 61
 21876                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21877  01778C  6BF4               	clrf	244,b	;volatile
 21878                           
 21879                           ; BSR set to: 61
 21880                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21881  01778E  0E82               	movlw	130
 21882  017790  6FF5               	movwf	245,b	;volatile
 21883                           
 21884                           ; BSR set to: 61
 21885                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21886  017792  0E06               	movlw	6
 21887  017794  6FF6               	movwf	246,b	;volatile
 21888                           
 21889                           ; BSR set to: 61
 21890                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21891  017796  6BF7               	clrf	247,b	;volatile
 21892                           
 21893                           ; BSR set to: 61
 21894                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21895  017798  6BF8               	clrf	248,b	;volatile
 21896                           
 21897                           ; BSR set to: 61
 21898                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21899  01779A  6BF9               	clrf	249,b	;volatile
 21900                           
 21901                           ; BSR set to: 61
 21902                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21903  01779C  6BFA               	clrf	250,b	;volatile
 21904                           
 21905                           ; BSR set to: 61
 21906                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21907  01779E  6A31               	clrf	_uart1TxHead^0,c	;volatile
 21908                           
 21909                           ; BSR set to: 61
 21910                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21911  0177A0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 21912                           
 21913                           ; BSR set to: 61
 21914                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21915  0177A2  0E40               	movlw	64
 21916  0177A4  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21917                           
 21918                           ; BSR set to: 61
 21919                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21920  0177A6  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 21921                           
 21922                           ; BSR set to: 61
 21923                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21924  0177A8  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 21925                           
 21926                           ; BSR set to: 61
 21927                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21928  0177AA  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 21929                           
 21930                           ; BSR set to: 61
 21931                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21932  0177AC  0139               	movlb	57	; () banked
 21933  0177AE  8793               	bsf	147,3,b	;volatile
 21934                           
 21935                           ; BSR set to: 57
 21936                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21937  0177B0  0012               	return		;funcret
 21938  0177B2                     __end_of_UART1_Initialize:
 21939                           	opt callstack 0
 21940                           
 21941 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21942 ;; Defined at:
 21943 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21944 ;; Parameters:    Size  Location     Type
 21945 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21946 ;;		 -> UART1_Transmit_ISR(1), 
 21947 ;; Auto vars:     Size  Location     Type
 21948 ;;		None
 21949 ;; Return value:  Size  Location     Type
 21950 ;;                  1  [STACK] void 
 21951 ;; Registers used:
 21952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21953 ;; Tracked objects:
 21954 ;;		On entry : 3F/39
 21955 ;;		On exit  : 0/0
 21956 ;;		Unchanged: 0/0
 21957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21962 ;;Total ram usage:        0 bytes
 21963 ;; Hardware stack levels used:    1
 21964 ;; Hardware stack levels required when called:    6
 21965 ;; This function calls:
 21966 ;;		Nothing
 21967 ;; This function is called by:
 21968 ;;		_UART1_Initialize
 21969 ;; This function uses a reentrant model
 21970 ;;
 21971                           
 21972                           	psect	text92
 21973  01811A                     __ptext92:
 21974                           	opt callstack 0
 21975  01811A                     _UART1_SetTxInterruptHandler:
 21976                           	opt callstack 22
 21977                           
 21978                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21979                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21980                           
 21981                           ; BSR set to: 57
 21982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21983                           ;incstack = 0
 21984  01811A  50E1               	movf	fsr1l,w,c
 21985  01811C  0FFD               	addlw	-3
 21986  01811E  6ED9               	movwf	fsr2l,c
 21987  018120  50E2               	movf	fsr1h,w,c
 21988  018122  6EDA               	movwf	fsr2h,c
 21989  018124  0EFF               	movlw	255
 21990  018126  22DA               	addwfc	fsr2h,f,c
 21991  018128  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 21992  01812E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 21993  018134  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 21994                           
 21995                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21996  01813A  52E5               	movf	postdec1,f,c
 21997  01813C  52E5               	movf	postdec1,f,c
 21998  01813E  52E5               	movf	postdec1,f,c
 21999  018140  0012               	return		;funcret
 22000  018142                     __end_of_UART1_SetTxInterruptHandler:
 22001                           	opt callstack 0
 22002                           
 22003 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22004 ;; Defined at:
 22005 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22006 ;; Parameters:    Size  Location     Type
 22007 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22008 ;;		 -> UART1_Receive_ISR(1), 
 22009 ;; Auto vars:     Size  Location     Type
 22010 ;;		None
 22011 ;; Return value:  Size  Location     Type
 22012 ;;                  1  [STACK] void 
 22013 ;; Registers used:
 22014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22015 ;; Tracked objects:
 22016 ;;		On entry : 3F/39
 22017 ;;		On exit  : 0/0
 22018 ;;		Unchanged: 0/0
 22019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22024 ;;Total ram usage:        0 bytes
 22025 ;; Hardware stack levels used:    1
 22026 ;; Hardware stack levels required when called:    6
 22027 ;; This function calls:
 22028 ;;		Nothing
 22029 ;; This function is called by:
 22030 ;;		_UART1_Initialize
 22031 ;; This function uses a reentrant model
 22032 ;;
 22033                           
 22034                           	psect	text93
 22035  018142                     __ptext93:
 22036                           	opt callstack 0
 22037  018142                     _UART1_SetRxInterruptHandler:
 22038                           	opt callstack 22
 22039                           
 22040                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22041                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22042                           
 22043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22044                           ;incstack = 0
 22045  018142  50E1               	movf	fsr1l,w,c
 22046  018144  0FFD               	addlw	-3
 22047  018146  6ED9               	movwf	fsr2l,c
 22048  018148  50E2               	movf	fsr1h,w,c
 22049  01814A  6EDA               	movwf	fsr2h,c
 22050  01814C  0EFF               	movlw	255
 22051  01814E  22DA               	addwfc	fsr2h,f,c
 22052  018150  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22053  018156  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22054  01815C  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22055                           
 22056                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22057  018162  52E5               	movf	postdec1,f,c
 22058  018164  52E5               	movf	postdec1,f,c
 22059  018166  52E5               	movf	postdec1,f,c
 22060  018168  0012               	return		;funcret
 22061  01816A                     __end_of_UART1_SetRxInterruptHandler:
 22062                           	opt callstack 0
 22063                           
 22064 ;; *************** function _TMR6_Initialize *****************
 22065 ;; Defined at:
 22066 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22067 ;; Parameters:    Size  Location     Type
 22068 ;;		None
 22069 ;; Auto vars:     Size  Location     Type
 22070 ;;		None
 22071 ;; Return value:  Size  Location     Type
 22072 ;;                  1  [STACK] void 
 22073 ;; Registers used:
 22074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22075 ;; Tracked objects:
 22076 ;;		On entry : 3F/39
 22077 ;;		On exit  : 0/0
 22078 ;;		Unchanged: 0/0
 22079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22084 ;;Total ram usage:        0 bytes
 22085 ;; Hardware stack levels used:    1
 22086 ;; Hardware stack levels required when called:    7
 22087 ;; This function calls:
 22088 ;;		_TMR6_SetInterruptHandler
 22089 ;; This function is called by:
 22090 ;;		_SYSTEM_Initialize
 22091 ;; This function uses a reentrant model
 22092 ;;
 22093                           
 22094                           	psect	text94
 22095  017FFC                     __ptext94:
 22096                           	opt callstack 0
 22097  017FFC                     _TMR6_Initialize:
 22098                           	opt callstack 22
 22099                           
 22100                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22101                           
 22102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22103                           ;incstack = 0
 22104  017FFC  0E01               	movlw	1
 22105  017FFE  6E96               	movwf	150,c	;volatile
 22106                           
 22107                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22108  018000  6A95               	clrf	149,c	;volatile
 22109                           
 22110                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22111  018002  6A97               	clrf	151,c	;volatile
 22112                           
 22113                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22114  018004  0E7C               	movlw	124
 22115  018006  6E93               	movwf	147,c	;volatile
 22116                           
 22117                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22118  018008  6A92               	clrf	146,c	;volatile
 22119                           
 22120                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22121  01800A  0139               	movlb	57	; () banked
 22122  01800C  91A9               	bcf	169,0,b	;volatile
 22123                           
 22124                           ; BSR set to: 57
 22125                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22126  01800E  8199               	bsf	153,0,b	;volatile
 22127                           
 22128                           ; BSR set to: 57
 22129                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22130  018010  0EE8               	movlw	low _TMR6_DefaultInterruptHandler
 22131  018012  6EE6               	movwf	postinc1,c
 22132  018014  0E7B               	movlw	high _TMR6_DefaultInterruptHandler
 22133  018016  6EE6               	movwf	postinc1,c
 22134  018018  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22135  01801A  6EE6               	movwf	postinc1,c
 22136  01801C  ECB5  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 22137                           
 22138                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22139  018020  0EE0               	movlw	224
 22140  018022  6E94               	movwf	148,c	;volatile
 22141                           
 22142                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22143  018024  0012               	return		;funcret
 22144  018026                     __end_of_TMR6_Initialize:
 22145                           	opt callstack 0
 22146                           
 22147 ;; *************** function _TMR6_SetInterruptHandler *****************
 22148 ;; Defined at:
 22149 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22150 ;; Parameters:    Size  Location     Type
 22151 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22152 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22153 ;; Auto vars:     Size  Location     Type
 22154 ;;		None
 22155 ;; Return value:  Size  Location     Type
 22156 ;;                  1  [STACK] void 
 22157 ;; Registers used:
 22158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22159 ;; Tracked objects:
 22160 ;;		On entry : 3F/39
 22161 ;;		On exit  : 0/0
 22162 ;;		Unchanged: 0/0
 22163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22168 ;;Total ram usage:        0 bytes
 22169 ;; Hardware stack levels used:    1
 22170 ;; Hardware stack levels required when called:    6
 22171 ;; This function calls:
 22172 ;;		Nothing
 22173 ;; This function is called by:
 22174 ;;		_TMR6_Initialize
 22175 ;; This function uses a reentrant model
 22176 ;;
 22177                           
 22178                           	psect	text95
 22179  01816A                     __ptext95:
 22180                           	opt callstack 0
 22181  01816A                     _TMR6_SetInterruptHandler:
 22182                           	opt callstack 22
 22183                           
 22184                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22185                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22186                           
 22187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22188                           ;incstack = 0
 22189  01816A  50E1               	movf	fsr1l,w,c
 22190  01816C  0FFD               	addlw	-3
 22191  01816E  6ED9               	movwf	fsr2l,c
 22192  018170  50E2               	movf	fsr1h,w,c
 22193  018172  6EDA               	movwf	fsr2h,c
 22194  018174  0EFF               	movlw	255
 22195  018176  22DA               	addwfc	fsr2h,f,c
 22196  018178  006F FF78  F09B    	movff	postinc2,_TMR6_InterruptHandler
 22197  01817E  006F FF78  F09C    	movff	postinc2,_TMR6_InterruptHandler+1
 22198  018184  006F FF74  F09D    	movff	postdec2,_TMR6_InterruptHandler+2
 22199                           
 22200                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22201  01818A  52E5               	movf	postdec1,f,c
 22202  01818C  52E5               	movf	postdec1,f,c
 22203  01818E  52E5               	movf	postdec1,f,c
 22204  018190  0012               	return		;funcret
 22205  018192                     __end_of_TMR6_SetInterruptHandler:
 22206                           	opt callstack 0
 22207                           
 22208 ;; *************** function _TMR5_Initialize *****************
 22209 ;; Defined at:
 22210 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22211 ;; Parameters:    Size  Location     Type
 22212 ;;		None
 22213 ;; Auto vars:     Size  Location     Type
 22214 ;;		None
 22215 ;; Return value:  Size  Location     Type
 22216 ;;                  1  [STACK] void 
 22217 ;; Registers used:
 22218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22219 ;; Tracked objects:
 22220 ;;		On entry : 0/39
 22221 ;;		On exit  : 0/0
 22222 ;;		Unchanged: 0/0
 22223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22228 ;;Total ram usage:        0 bytes
 22229 ;; Hardware stack levels used:    1
 22230 ;; Hardware stack levels required when called:    7
 22231 ;; This function calls:
 22232 ;;		_TMR5_SetInterruptHandler
 22233 ;; This function is called by:
 22234 ;;		_SYSTEM_Initialize
 22235 ;; This function uses a reentrant model
 22236 ;;
 22237                           
 22238                           	psect	text96
 22239  017BA2                     __ptext96:
 22240                           	opt callstack 0
 22241  017BA2                     _TMR5_Initialize:
 22242                           	opt callstack 22
 22243                           
 22244                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22245                           
 22246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22247                           ;incstack = 0
 22248  017BA2  6A9B               	clrf	155,c	;volatile
 22249                           
 22250                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22251  017BA4  6A9C               	clrf	156,c	;volatile
 22252                           
 22253                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22254  017BA6  0E01               	movlw	1
 22255  017BA8  6E9D               	movwf	157,c	;volatile
 22256                           
 22257                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22258  017BAA  0E63               	movlw	99
 22259  017BAC  6E99               	movwf	153,c	;volatile
 22260                           
 22261                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22262  017BAE  0EC0               	movlw	192
 22263  017BB0  6E98               	movwf	152,c	;volatile
 22264                           
 22265                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22266  017BB2  5098               	movf	152,w,c	;volatile
 22267  017BB4  006F FE64  F032    	movff	16281,btemp	;volatile
 22268  017BBA  6A33               	clrf	(btemp+1)^0,c
 22269  017BBC  0060  F0C8  F033   	movff	btemp,btemp+1
 22270  017BC2  6A32               	clrf	btemp^0,c
 22271  017BC4  1032               	iorwf	btemp^0,w,c
 22272  017BC6  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22273  017BC8  5033               	movf	(btemp+1)^0,w,c
 22274  017BCA  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22275                           
 22276                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22277  017BCC  0139               	movlb	57	; () banked
 22278  017BCE  9DA8               	bcf	168,6,b	;volatile
 22279                           
 22280                           ; BSR set to: 57
 22281                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22282  017BD0  8D98               	bsf	152,6,b	;volatile
 22283                           
 22284                           ; BSR set to: 57
 22285                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22286  017BD2  0E5A               	movlw	low _TMR5_DefaultInterruptHandler
 22287  017BD4  6EE6               	movwf	postinc1,c
 22288  017BD6  0E82               	movlw	high _TMR5_DefaultInterruptHandler
 22289  017BD8  6EE6               	movwf	postinc1,c
 22290  017BDA  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22291  017BDC  6EE6               	movwf	postinc1,c
 22292  017BDE  ECC9  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 22293                           
 22294                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22295  017BE2  0E31               	movlw	49
 22296  017BE4  6E9A               	movwf	154,c	;volatile
 22297                           
 22298                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22299  017BE6  0012               	return		;funcret
 22300  017BE8                     __end_of_TMR5_Initialize:
 22301                           	opt callstack 0
 22302                           
 22303 ;; *************** function _TMR5_SetInterruptHandler *****************
 22304 ;; Defined at:
 22305 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22306 ;; Parameters:    Size  Location     Type
 22307 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22308 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22309 ;; Auto vars:     Size  Location     Type
 22310 ;;		None
 22311 ;; Return value:  Size  Location     Type
 22312 ;;                  1  [STACK] void 
 22313 ;; Registers used:
 22314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22315 ;; Tracked objects:
 22316 ;;		On entry : 3F/39
 22317 ;;		On exit  : 0/0
 22318 ;;		Unchanged: 0/0
 22319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22324 ;;Total ram usage:        0 bytes
 22325 ;; Hardware stack levels used:    1
 22326 ;; Hardware stack levels required when called:    6
 22327 ;; This function calls:
 22328 ;;		Nothing
 22329 ;; This function is called by:
 22330 ;;		_TMR5_Initialize
 22331 ;; This function uses a reentrant model
 22332 ;;
 22333                           
 22334                           	psect	text97
 22335  018192                     __ptext97:
 22336                           	opt callstack 0
 22337  018192                     _TMR5_SetInterruptHandler:
 22338                           	opt callstack 22
 22339                           
 22340                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22341                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22342                           
 22343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22344                           ;incstack = 0
 22345  018192  50E1               	movf	fsr1l,w,c
 22346  018194  0FFD               	addlw	-3
 22347  018196  6ED9               	movwf	fsr2l,c
 22348  018198  50E2               	movf	fsr1h,w,c
 22349  01819A  6EDA               	movwf	fsr2h,c
 22350  01819C  0EFF               	movlw	255
 22351  01819E  22DA               	addwfc	fsr2h,f,c
 22352  0181A0  006F FF78  F098    	movff	postinc2,_TMR5_InterruptHandler
 22353  0181A6  006F FF78  F099    	movff	postinc2,_TMR5_InterruptHandler+1
 22354  0181AC  006F FF74  F09A    	movff	postdec2,_TMR5_InterruptHandler+2
 22355                           
 22356                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22357  0181B2  52E5               	movf	postdec1,f,c
 22358  0181B4  52E5               	movf	postdec1,f,c
 22359  0181B6  52E5               	movf	postdec1,f,c
 22360  0181B8  0012               	return		;funcret
 22361  0181BA                     __end_of_TMR5_SetInterruptHandler:
 22362                           	opt callstack 0
 22363                           
 22364 ;; *************** function _TMR2_Initialize *****************
 22365 ;; Defined at:
 22366 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22367 ;; Parameters:    Size  Location     Type
 22368 ;;		None
 22369 ;; Auto vars:     Size  Location     Type
 22370 ;;		None
 22371 ;; Return value:  Size  Location     Type
 22372 ;;                  1  [STACK] void 
 22373 ;; Registers used:
 22374 ;;		wreg, status,2
 22375 ;; Tracked objects:
 22376 ;;		On entry : 0/3E
 22377 ;;		On exit  : 3F/39
 22378 ;;		Unchanged: 0/0
 22379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22384 ;;Total ram usage:        0 bytes
 22385 ;; Hardware stack levels used:    1
 22386 ;; Hardware stack levels required when called:    6
 22387 ;; This function calls:
 22388 ;;		Nothing
 22389 ;; This function is called by:
 22390 ;;		_SYSTEM_Initialize
 22391 ;; This function uses a reentrant model
 22392 ;;
 22393                           
 22394                           	psect	text98
 22395  01850E                     __ptext98:
 22396                           	opt callstack 0
 22397  01850E                     _TMR2_Initialize:
 22398                           	opt callstack 23
 22399                           
 22400                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22401                           
 22402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22403                           ;incstack = 0
 22404  01850E  0E01               	movlw	1
 22405  018510  6EAE               	movwf	174,c	;volatile
 22406                           
 22407                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22408  018512  6AAD               	clrf	173,c	;volatile
 22409                           
 22410                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22411  018514  6AAF               	clrf	175,c	;volatile
 22412                           
 22413                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22414  018516  0E63               	movlw	99
 22415  018518  6EAB               	movwf	171,c	;volatile
 22416                           
 22417                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22418  01851A  6AAA               	clrf	170,c	;volatile
 22419                           
 22420                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22421  01851C  0139               	movlb	57	; () banked
 22422  01851E  95A4               	bcf	164,2,b	;volatile
 22423                           
 22424                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22425  018520  0EC0               	movlw	192
 22426  018522  6EAC               	movwf	172,c	;volatile
 22427                           
 22428                           ; BSR set to: 57
 22429                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22430  018524  0012               	return		;funcret
 22431  018526                     __end_of_TMR2_Initialize:
 22432                           	opt callstack 0
 22433                           
 22434 ;; *************** function _SPI1_Initialize *****************
 22435 ;; Defined at:
 22436 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22437 ;; Parameters:    Size  Location     Type
 22438 ;;		None
 22439 ;; Auto vars:     Size  Location     Type
 22440 ;;		None
 22441 ;; Return value:  Size  Location     Type
 22442 ;;                  1  [STACK] void 
 22443 ;; Registers used:
 22444 ;;		wreg, status,2
 22445 ;; Tracked objects:
 22446 ;;		On entry : 3F/39
 22447 ;;		On exit  : 3F/3D
 22448 ;;		Unchanged: 0/0
 22449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22454 ;;Total ram usage:        0 bytes
 22455 ;; Hardware stack levels used:    1
 22456 ;; Hardware stack levels required when called:    6
 22457 ;; This function calls:
 22458 ;;		Nothing
 22459 ;; This function is called by:
 22460 ;;		_SYSTEM_Initialize
 22461 ;; This function uses a reentrant model
 22462 ;;
 22463                           
 22464                           	psect	text99
 22465  018526                     __ptext99:
 22466                           	opt callstack 0
 22467  018526                     _SPI1_Initialize:
 22468                           	opt callstack 23
 22469                           
 22470                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22471                           
 22472                           ; BSR set to: 57
 22473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22474                           ;incstack = 0
 22475  018526  0E40               	movlw	64
 22476  018528  013D               	movlb	61	; () banked
 22477  01852A  6F15               	movwf	21,b	;volatile
 22478                           
 22479                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22480  01852C  0E03               	movlw	3
 22481  01852E  6F16               	movwf	22,b	;volatile
 22482                           
 22483                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22484  018530  0E4F               	movlw	79
 22485  018532  6F19               	movwf	25,b	;volatile
 22486                           
 22487                           ; BSR set to: 61
 22488                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22489  018534  6B1C               	clrf	28,b	;volatile
 22490                           
 22491                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22492  018536  0E83               	movlw	131
 22493  018538  6F14               	movwf	20,b	;volatile
 22494                           
 22495                           ; BSR set to: 61
 22496                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22497  01853A  0012               	return		;funcret
 22498  01853C                     __end_of_SPI1_Initialize:
 22499                           	opt callstack 0
 22500                           
 22501 ;; *************** function _PWM8_Initialize *****************
 22502 ;; Defined at:
 22503 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22504 ;; Parameters:    Size  Location     Type
 22505 ;;		None
 22506 ;; Auto vars:     Size  Location     Type
 22507 ;;		None
 22508 ;; Return value:  Size  Location     Type
 22509 ;;                  1  [STACK] void 
 22510 ;; Registers used:
 22511 ;;		wreg, status,2
 22512 ;; Tracked objects:
 22513 ;;		On entry : 3F/39
 22514 ;;		On exit  : 3F/3F
 22515 ;;		Unchanged: 0/0
 22516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22521 ;;Total ram usage:        0 bytes
 22522 ;; Hardware stack levels used:    1
 22523 ;; Hardware stack levels required when called:    6
 22524 ;; This function calls:
 22525 ;;		Nothing
 22526 ;; This function is called by:
 22527 ;;		_SYSTEM_Initialize
 22528 ;; This function uses a reentrant model
 22529 ;;
 22530                           
 22531                           	psect	text100
 22532  01853C                     __ptext100:
 22533                           	opt callstack 0
 22534  01853C                     _PWM8_Initialize:
 22535                           	opt callstack 23
 22536                           
 22537                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22538                           
 22539                           ; BSR set to: 61
 22540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22541                           ;incstack = 0
 22542  01853C  0E80               	movlw	128
 22543  01853E  6E62               	movwf	98,c	;volatile
 22544                           
 22545                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22546  018540  6A61               	clrf	97,c	;volatile
 22547                           
 22548                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22549  018542  0E40               	movlw	64
 22550  018544  6E60               	movwf	96,c	;volatile
 22551                           
 22552                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22553  018546  013F               	movlb	63	; () banked
 22554  018548  515F               	movf	95,w,b	;volatile
 22555  01854A  0B3F               	andlw	-193
 22556  01854C  0940               	iorlw	64
 22557  01854E  6F5F               	movwf	95,b	;volatile
 22558                           
 22559                           ; BSR set to: 63
 22560                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22561  018550  0012               	return		;funcret
 22562  018552                     __end_of_PWM8_Initialize:
 22563                           	opt callstack 0
 22564                           
 22565 ;; *************** function _PMD_Initialize *****************
 22566 ;; Defined at:
 22567 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22568 ;; Parameters:    Size  Location     Type
 22569 ;;		None
 22570 ;; Auto vars:     Size  Location     Type
 22571 ;;		None
 22572 ;; Return value:  Size  Location     Type
 22573 ;;                  1  [STACK] void 
 22574 ;; Registers used:
 22575 ;;		None
 22576 ;; Tracked objects:
 22577 ;;		On entry : 3F/39
 22578 ;;		On exit  : 3F/39
 22579 ;;		Unchanged: 0/0
 22580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22585 ;;Total ram usage:        0 bytes
 22586 ;; Hardware stack levels used:    1
 22587 ;; Hardware stack levels required when called:    6
 22588 ;; This function calls:
 22589 ;;		Nothing
 22590 ;; This function is called by:
 22591 ;;		_SYSTEM_Initialize
 22592 ;; This function uses a reentrant model
 22593 ;;
 22594                           
 22595                           	psect	text101
 22596  018568                     __ptext101:
 22597                           	opt callstack 0
 22598  018568                     _PMD_Initialize:
 22599                           	opt callstack 23
 22600                           
 22601                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22602                           
 22603                           ; BSR set to: 63
 22604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22605                           ;incstack = 0
 22606  018568  0139               	movlb	57	; () banked
 22607  01856A  6BC0               	clrf	192,b	;volatile
 22608                           
 22609                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22610  01856C  6BC1               	clrf	193,b	;volatile
 22611                           
 22612                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22613  01856E  6BC2               	clrf	194,b	;volatile
 22614                           
 22615                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22616  018570  6BC3               	clrf	195,b	;volatile
 22617                           
 22618                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22619  018572  6BC4               	clrf	196,b	;volatile
 22620                           
 22621                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22622  018574  6BC5               	clrf	197,b	;volatile
 22623                           
 22624                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22625  018576  6BC6               	clrf	198,b	;volatile
 22626                           
 22627                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22628  018578  6BC7               	clrf	199,b	;volatile
 22629                           
 22630                           ; BSR set to: 57
 22631                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22632  01857A  0012               	return		;funcret
 22633  01857C                     __end_of_PMD_Initialize:
 22634                           	opt callstack 0
 22635                           
 22636 ;; *************** function _PIN_MANAGER_Initialize *****************
 22637 ;; Defined at:
 22638 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22639 ;; Parameters:    Size  Location     Type
 22640 ;;		None
 22641 ;; Auto vars:     Size  Location     Type
 22642 ;;		None
 22643 ;; Return value:  Size  Location     Type
 22644 ;;                  1  [STACK] void 
 22645 ;; Registers used:
 22646 ;;		wreg, status,2
 22647 ;; Tracked objects:
 22648 ;;		On entry : 3F/39
 22649 ;;		On exit  : 3F/3A
 22650 ;;		Unchanged: 0/0
 22651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22656 ;;Total ram usage:        0 bytes
 22657 ;; Hardware stack levels used:    1
 22658 ;; Hardware stack levels required when called:    6
 22659 ;; This function calls:
 22660 ;;		Nothing
 22661 ;; This function is called by:
 22662 ;;		_SYSTEM_Initialize
 22663 ;; This function uses a reentrant model
 22664 ;;
 22665                           
 22666                           	psect	text102
 22667  01722E                     __ptext102:
 22668                           	opt callstack 0
 22669  01722E                     _PIN_MANAGER_Initialize:
 22670                           	opt callstack 23
 22671                           
 22672                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22673                           
 22674                           ; BSR set to: 57
 22675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22676                           ;incstack = 0
 22677  01722E  0E07               	movlw	7
 22678  017230  6EBE               	movwf	190,c	;volatile
 22679                           
 22680                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22681  017232  0E80               	movlw	128
 22682  017234  6EBD               	movwf	189,c	;volatile
 22683                           
 22684                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22685  017236  6ABA               	clrf	186,c	;volatile
 22686                           
 22687                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22688  017238  6ABF               	clrf	191,c	;volatile
 22689                           
 22690                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22691  01723A  6ABB               	clrf	187,c	;volatile
 22692                           
 22693                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22694  01723C  0E07               	movlw	7
 22695  01723E  6EBC               	movwf	188,c	;volatile
 22696                           
 22697                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22698  017240  6AC6               	clrf	198,c	;volatile
 22699                           
 22700                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22701  017242  0E0F               	movlw	15
 22702  017244  6EC7               	movwf	199,c	;volatile
 22703                           
 22704                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22705  017246  68C2               	setf	194,c	;volatile
 22706                           
 22707                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22708  017248  0EBF               	movlw	191
 22709  01724A  6EC3               	movwf	195,c	;volatile
 22710                           
 22711                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22712  01724C  0E90               	movlw	144
 22713  01724E  6EC4               	movwf	196,c	;volatile
 22714                           
 22715                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22716  017250  0E0C               	movlw	12
 22717  017252  6EC5               	movwf	197,c	;volatile
 22718                           
 22719                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22720  017254  013A               	movlb	58	; () banked
 22721  017256  6B70               	clrf	112,b	;volatile
 22722                           
 22723                           ; BSR set to: 58
 22724                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22725  017258  6B60               	clrf	96,b	;volatile
 22726                           
 22727                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22728  01725A  0E3C               	movlw	60
 22729  01725C  6F50               	movwf	80,b	;volatile
 22730                           
 22731                           ; BSR set to: 58
 22732                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22733  01725E  6B80               	clrf	128,b	;volatile
 22734                           
 22735                           ; BSR set to: 58
 22736                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22737  017260  6B90               	clrf	144,b	;volatile
 22738                           
 22739                           ; BSR set to: 58
 22740                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22741  017262  6940               	setf	64,b	;volatile
 22742                           
 22743                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22744  017264  0E0C               	movlw	12
 22745  017266  6F71               	movwf	113,b	;volatile
 22746                           
 22747                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22748  017268  0E0F               	movlw	15
 22749  01726A  6F91               	movwf	145,b	;volatile
 22750                           
 22751                           ; BSR set to: 58
 22752                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22753  01726C  6B81               	clrf	129,b	;volatile
 22754                           
 22755                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 22756  01726E  0E83               	movlw	131
 22757  017270  6F51               	movwf	81,b	;volatile
 22758                           
 22759                           ; BSR set to: 58
 22760                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22761  017272  6B41               	clrf	65,b	;volatile
 22762                           
 22763                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22764  017274  0E97               	movlw	151
 22765  017276  6F61               	movwf	97,b	;volatile
 22766                           
 22767                           ; BSR set to: 58
 22768                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22769  017278  6B82               	clrf	130,b	;volatile
 22770                           
 22771                           ; BSR set to: 58
 22772                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22773  01727A  6B92               	clrf	146,b	;volatile
 22774                           
 22775                           ; BSR set to: 58
 22776                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22777  01727C  6B42               	clrf	66,b	;volatile
 22778                           
 22779                           ; BSR set to: 58
 22780                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22781  01727E  6B52               	clrf	82,b	;volatile
 22782                           
 22783                           ; BSR set to: 58
 22784                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22785  017280  6B62               	clrf	98,b	;volatile
 22786                           
 22787                           ; BSR set to: 58
 22788                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22789  017282  6B72               	clrf	114,b	;volatile
 22790                           
 22791                           ; BSR set to: 58
 22792                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22793  017284  6943               	setf	67,b	;volatile
 22794                           
 22795                           ; BSR set to: 58
 22796                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22797  017286  6953               	setf	83,b	;volatile
 22798                           
 22799                           ; BSR set to: 58
 22800                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22801  017288  6963               	setf	99,b	;volatile
 22802                           
 22803                           ; BSR set to: 58
 22804                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22805  01728A  6973               	setf	115,b	;volatile
 22806                           
 22807                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22808  01728C  0E07               	movlw	7
 22809  01728E  6F83               	movwf	131,b	;volatile
 22810                           
 22811                           ; BSR set to: 58
 22812                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22813  017290  6993               	setf	147,b	;volatile
 22814                           
 22815                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22816  017292  0E0F               	movlw	15
 22817  017294  6FE8               	movwf	232,b	;volatile
 22818                           
 22819                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22820  017296  0E13               	movlw	19
 22821  017298  6FDE               	movwf	222,b	;volatile
 22822                           
 22823                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22824  01729A  0E16               	movlw	22
 22825  01729C  6F0E               	movwf	14,b	;volatile
 22826                           
 22827                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22828  01729E  0E1E               	movlw	30
 22829  0172A0  6F13               	movwf	19,b	;volatile
 22830                           
 22831                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22832  0172A2  0E08               	movlw	8
 22833  0172A4  6FC0               	movwf	192,b	;volatile
 22834                           
 22835                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22836  0172A6  0E10               	movlw	16
 22837  0172A8  6F19               	movwf	25,b	;volatile
 22838                           
 22839                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22840  0172AA  0E09               	movlw	9
 22841  0172AC  6FC1               	movwf	193,b	;volatile
 22842                           
 22843                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22844  0172AE  0E1F               	movlw	31
 22845  0172B0  6F15               	movwf	21,b	;volatile
 22846                           
 22847                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22848  0172B2  0E13               	movlw	19
 22849  0172B4  6F16               	movwf	22,b	;volatile
 22850                           
 22851                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22852  0172B6  0E17               	movlw	23
 22853  0172B8  6FE5               	movwf	229,b	;volatile
 22854                           
 22855                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22856  0172BA  0E14               	movlw	20
 22857  0172BC  6FDF               	movwf	223,b	;volatile
 22858                           
 22859                           ; BSR set to: 58
 22860                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22861  0172BE  0012               	return		;funcret
 22862  0172C0                     __end_of_PIN_MANAGER_Initialize:
 22863                           	opt callstack 0
 22864                           
 22865 ;; *************** function _OSCILLATOR_Initialize *****************
 22866 ;; Defined at:
 22867 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22868 ;; Parameters:    Size  Location     Type
 22869 ;;		None
 22870 ;; Auto vars:     Size  Location     Type
 22871 ;;		None
 22872 ;; Return value:  Size  Location     Type
 22873 ;;                  1  [STACK] void 
 22874 ;; Registers used:
 22875 ;;		wreg, status,2
 22876 ;; Tracked objects:
 22877 ;;		On entry : 3F/3A
 22878 ;;		On exit  : 3F/39
 22879 ;;		Unchanged: 0/0
 22880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22885 ;;Total ram usage:        0 bytes
 22886 ;; Hardware stack levels used:    1
 22887 ;; Hardware stack levels required when called:    6
 22888 ;; This function calls:
 22889 ;;		Nothing
 22890 ;; This function is called by:
 22891 ;;		_SYSTEM_Initialize
 22892 ;; This function uses a reentrant model
 22893 ;;
 22894                           
 22895                           	psect	text103
 22896  018552                     __ptext103:
 22897                           	opt callstack 0
 22898  018552                     _OSCILLATOR_Initialize:
 22899                           	opt callstack 23
 22900                           
 22901                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22902                           
 22903                           ; BSR set to: 58
 22904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22905                           ;incstack = 0
 22906  018552  0E20               	movlw	32
 22907  018554  0139               	movlb	57	; () banked
 22908  018556  6FD9               	movwf	217,b	;volatile
 22909                           
 22910                           ; BSR set to: 57
 22911                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22912  018558  6BDB               	clrf	219,b	;volatile
 22913                           
 22914                           ; BSR set to: 57
 22915                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22916  01855A  6BDD               	clrf	221,b	;volatile
 22917                           
 22918                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22919  01855C  0E02               	movlw	2
 22920  01855E  6FDF               	movwf	223,b	;volatile
 22921                           
 22922                           ; BSR set to: 57
 22923                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22924  018560  6BDE               	clrf	222,b	;volatile
 22925  018562                     l171:
 22926                           
 22927                           ; BSR set to: 57
 22928                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22929  018562  B1DC               	btfsc	220,0,b	;volatile
 22930  018564  0012               	return	
 22931  018566  D7FD               	goto	l171
 22932  018568                     __end_of_OSCILLATOR_Initialize:
 22933                           	opt callstack 0
 22934                           
 22935 ;; *************** function _INTERRUPT_Initialize *****************
 22936 ;; Defined at:
 22937 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22938 ;; Parameters:    Size  Location     Type
 22939 ;;		None
 22940 ;; Auto vars:     Size  Location     Type
 22941 ;;  state           1  [STACK] _Bool 
 22942 ;; Return value:  Size  Location     Type
 22943 ;;                  1  [STACK] void 
 22944 ;; Registers used:
 22945 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22946 ;; Tracked objects:
 22947 ;;		On entry : 0/0
 22948 ;;		On exit  : 3F/39
 22949 ;;		Unchanged: 0/0
 22950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22955 ;;Total ram usage:        0 bytes
 22956 ;; Hardware stack levels used:    1
 22957 ;; Hardware stack levels required when called:    6
 22958 ;; This function calls:
 22959 ;;		Nothing
 22960 ;; This function is called by:
 22961 ;;		_SYSTEM_Initialize
 22962 ;; This function uses a reentrant model
 22963 ;;
 22964                           
 22965                           	psect	text104
 22966  017684                     __ptext104:
 22967                           	opt callstack 0
 22968  017684                     _INTERRUPT_Initialize:
 22969                           	opt callstack 0
 22970                           
 22971                           ; BSR set to: 57
 22972                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22973  017684  52E6               	movf	postinc1,f,c
 22974                           
 22975                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22976                           
 22977                           ;incstack = 0
 22978  017686  8AD2               	bsf	210,5,c	;volatile
 22979                           
 22980                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22981  017688  AED2               	btfss	16338,7,c	;volatile
 22982  01768A  D003               	goto	u7910
 22983  01768C  6A3D               	clrf	(btemp+11)^0,c
 22984  01768E  2A3D               	incf	(btemp+11)^0,f,c
 22985  017690  D001               	goto	u7928
 22986  017692                     u7910:
 22987  017692  6A3D               	clrf	(btemp+11)^0,c
 22988  017694                     u7928:
 22989                           
 22990                           ;stkvar	_state @ sp[(-1)+0]
 22991  017694  0EFF               	movlw	-1
 22992  017696  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22993                           
 22994                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22995  01769C  9ED2               	bcf	16338,7,c	;volatile
 22996                           
 22997                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22998  01769E  0E55               	movlw	85
 22999  0176A0  6ED4               	movwf	212,c	;volatile
 23000                           
 23001                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23002  0176A2  0EAA               	movlw	170
 23003  0176A4  6ED4               	movwf	212,c	;volatile
 23004                           
 23005                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23006  0176A6  90D4               	bcf	212,0,c	;volatile
 23007                           
 23008                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23009  0176A8  0138               	movlb	56	; () banked
 23010  0176AA  6B9F               	clrf	159,b	;volatile
 23011                           
 23012                           ; BSR set to: 56
 23013                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23014  0176AC  6B9E               	clrf	158,b	;volatile
 23015                           
 23016                           ; BSR set to: 56
 23017                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23018  0176AE  0E08               	movlw	8
 23019  0176B0  6F9D               	movwf	157,b	;volatile
 23020                           
 23021                           ; BSR set to: 56
 23022                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23023  0176B2  0E55               	movlw	85
 23024  0176B4  6ED4               	movwf	212,c	;volatile
 23025                           
 23026                           ; BSR set to: 56
 23027                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23028  0176B6  0EAA               	movlw	170
 23029  0176B8  6ED4               	movwf	212,c	;volatile
 23030                           
 23031                           ; BSR set to: 56
 23032                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23033  0176BA  80D4               	bsf	212,0,c	;volatile
 23034                           
 23035                           ; BSR set to: 56
 23036                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23037                           ;stkvar	_state @ sp[(-1)+0]
 23038  0176BC  0EFF               	movlw	-1
 23039  0176BE  B0E3               	btfsc	plusw1,0,c
 23040  0176C0  D002               	bra	u7935
 23041  0176C2  9ED2               	bcf	16338,7,c	;volatile
 23042  0176C4  D001               	bra	u7936
 23043  0176C6                     u7935:
 23044  0176C6  8ED2               	bsf	16338,7,c	;volatile
 23045  0176C8                     u7936:
 23046                           
 23047                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23048  0176C8  0139               	movlb	57	; () banked
 23049  0176CA  8782               	bsf	130,3,b	;volatile
 23050                           
 23051                           ; BSR set to: 57
 23052                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23053  0176CC  8382               	bsf	130,1,b	;volatile
 23054                           
 23055                           ; BSR set to: 57
 23056                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23057  0176CE  8182               	bsf	130,0,b	;volatile
 23058                           
 23059                           ; BSR set to: 57
 23060                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23061  0176D0  8582               	bsf	130,2,b	;volatile
 23062                           
 23063                           ; BSR set to: 57
 23064                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23065  0176D2  8786               	bsf	134,3,b	;volatile
 23066                           
 23067                           ; BSR set to: 57
 23068                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23069  0176D4  8586               	bsf	134,2,b	;volatile
 23070                           
 23071                           ; BSR set to: 57
 23072                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23073  0176D6  8983               	bsf	131,4,b	;volatile
 23074                           
 23075                           ; BSR set to: 57
 23076                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23077  0176D8  8783               	bsf	131,3,b	;volatile
 23078                           
 23079                           ; BSR set to: 57
 23080                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23081  0176DA  8181               	bsf	129,0,b	;volatile
 23082                           
 23083                           ; BSR set to: 57
 23084                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23085  0176DC  9185               	bcf	133,0,b	;volatile
 23086                           
 23087                           ; BSR set to: 57
 23088                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23089  0176DE  8189               	bsf	137,0,b	;volatile
 23090                           
 23091                           ; BSR set to: 57
 23092                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23093  0176E0  9D88               	bcf	136,6,b	;volatile
 23094                           
 23095                           ; BSR set to: 57
 23096                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23097  0176E2  8581               	bsf	129,2,b	;volatile
 23098                           
 23099                           ; BSR set to: 57
 23100                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23101  0176E4  8781               	bsf	129,3,b	;volatile
 23102                           
 23103                           ; BSR set to: 57
 23104                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23105  0176E6  52E5               	movf	postdec1,f,c
 23106  0176E8  0012               	return		;funcret
 23107  0176EA                     __end_of_INTERRUPT_Initialize:
 23108                           	opt callstack 0
 23109                           
 23110 ;; *************** function _FVR_Initialize *****************
 23111 ;; Defined at:
 23112 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23113 ;; Parameters:    Size  Location     Type
 23114 ;;		None
 23115 ;; Auto vars:     Size  Location     Type
 23116 ;;		None
 23117 ;; Return value:  Size  Location     Type
 23118 ;;                  1  [STACK] void 
 23119 ;; Registers used:
 23120 ;;		wreg, status,2
 23121 ;; Tracked objects:
 23122 ;;		On entry : 3F/39
 23123 ;;		On exit  : 3F/3E
 23124 ;;		Unchanged: 0/0
 23125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23130 ;;Total ram usage:        0 bytes
 23131 ;; Hardware stack levels used:    1
 23132 ;; Hardware stack levels required when called:    6
 23133 ;; This function calls:
 23134 ;;		Nothing
 23135 ;; This function is called by:
 23136 ;;		_SYSTEM_Initialize
 23137 ;; This function uses a reentrant model
 23138 ;;
 23139                           
 23140                           	psect	text105
 23141  01862E                     __ptext105:
 23142                           	opt callstack 0
 23143  01862E                     _FVR_Initialize:
 23144                           	opt callstack 23
 23145                           
 23146                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23147                           
 23148                           ; BSR set to: 57
 23149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23150                           ;incstack = 0
 23151  01862E  0EAF               	movlw	175
 23152  018630  013E               	movlb	62	; () banked
 23153  018632  6FC1               	movwf	193,b	;volatile
 23154                           
 23155                           ; BSR set to: 62
 23156                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23157  018634  0012               	return		;funcret
 23158  018636                     __end_of_FVR_Initialize:
 23159                           	opt callstack 0
 23160                           
 23161 ;; *************** function _EXT_INT_Initialize *****************
 23162 ;; Defined at:
 23163 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23164 ;; Parameters:    Size  Location     Type
 23165 ;;		None
 23166 ;; Auto vars:     Size  Location     Type
 23167 ;;		None
 23168 ;; Return value:  Size  Location     Type
 23169 ;;                  1  [STACK] void 
 23170 ;; Registers used:
 23171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23172 ;; Tracked objects:
 23173 ;;		On entry : 3F/3F
 23174 ;;		On exit  : 3F/39
 23175 ;;		Unchanged: 0/0
 23176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23181 ;;Total ram usage:        0 bytes
 23182 ;; Hardware stack levels used:    1
 23183 ;; Hardware stack levels required when called:    7
 23184 ;; This function calls:
 23185 ;;		_INT0_SetInterruptHandler
 23186 ;;		_INT1_SetInterruptHandler
 23187 ;; This function is called by:
 23188 ;;		_SYSTEM_Initialize
 23189 ;; This function uses a reentrant model
 23190 ;;
 23191                           
 23192                           	psect	text106
 23193  017E86                     __ptext106:
 23194                           	opt callstack 0
 23195  017E86                     _EXT_INT_Initialize:
 23196                           	opt callstack 22
 23197                           
 23198                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23199                           
 23200                           ; BSR set to: 62
 23201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23202                           ;incstack = 0
 23203  017E86  0139               	movlb	57	; () banked
 23204  017E88  91A1               	bcf	161,0,b	;volatile
 23205                           
 23206                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23207  017E8A  90D2               	bcf	210,0,c	;volatile
 23208                           
 23209                           ; BSR set to: 57
 23210                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23211  017E8C  0E50               	movlw	low _INT0_DefaultInterruptHandler
 23212  017E8E  6EE6               	movwf	postinc1,c
 23213  017E90  0E86               	movlw	high _INT0_DefaultInterruptHandler
 23214  017E92  6EE6               	movwf	postinc1,c
 23215  017E94  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23216  017E96  6EE6               	movwf	postinc1,c
 23217  017E98  ECF1  F0C0         	call	_INT0_SetInterruptHandler	;wreg free
 23218                           
 23219                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23220  017E9C  0139               	movlb	57	; () banked
 23221  017E9E  8191               	bsf	145,0,b	;volatile
 23222                           
 23223                           ; BSR set to: 57
 23224                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23225  017EA0  91A5               	bcf	165,0,b	;volatile
 23226                           
 23227                           ; BSR set to: 57
 23228                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23229  017EA2  92D2               	bcf	210,1,c	;volatile
 23230                           
 23231                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23232  017EA4  0E4E               	movlw	low _INT1_DefaultInterruptHandler
 23233  017EA6  6EE6               	movwf	postinc1,c
 23234  017EA8  0E86               	movlw	high _INT1_DefaultInterruptHandler
 23235  017EAA  6EE6               	movwf	postinc1,c
 23236  017EAC  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23237  017EAE  6EE6               	movwf	postinc1,c
 23238  017EB0  ECDD  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
 23239                           
 23240                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23241  017EB4  0139               	movlb	57	; () banked
 23242  017EB6  8195               	bsf	149,0,b	;volatile
 23243                           
 23244                           ; BSR set to: 57
 23245                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23246  017EB8  0012               	return		;funcret
 23247  017EBA                     __end_of_EXT_INT_Initialize:
 23248                           	opt callstack 0
 23249                           
 23250 ;; *************** function _INT1_SetInterruptHandler *****************
 23251 ;; Defined at:
 23252 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23253 ;; Parameters:    Size  Location     Type
 23254 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23255 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23256 ;; Auto vars:     Size  Location     Type
 23257 ;;		None
 23258 ;; Return value:  Size  Location     Type
 23259 ;;                  1  [STACK] void 
 23260 ;; Registers used:
 23261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23262 ;; Tracked objects:
 23263 ;;		On entry : 3F/39
 23264 ;;		On exit  : 0/0
 23265 ;;		Unchanged: 0/0
 23266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23271 ;;Total ram usage:        0 bytes
 23272 ;; Hardware stack levels used:    1
 23273 ;; Hardware stack levels required when called:    6
 23274 ;; This function calls:
 23275 ;;		Nothing
 23276 ;; This function is called by:
 23277 ;;		_EXT_INT_Initialize
 23278 ;;		_start_switch_handler
 23279 ;; This function uses a reentrant model
 23280 ;;
 23281                           
 23282                           	psect	text107
 23283  0181BA                     __ptext107:
 23284                           	opt callstack 0
 23285  0181BA                     _INT1_SetInterruptHandler:
 23286                           	opt callstack 23
 23287                           
 23288                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23289                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23290                           
 23291                           ; BSR set to: 57
 23292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23293                           ;incstack = 0
 23294  0181BA  50E1               	movf	fsr1l,w,c
 23295  0181BC  0FFD               	addlw	-3
 23296  0181BE  6ED9               	movwf	fsr2l,c
 23297  0181C0  50E2               	movf	fsr1h,w,c
 23298  0181C2  6EDA               	movwf	fsr2h,c
 23299  0181C4  0EFF               	movlw	255
 23300  0181C6  22DA               	addwfc	fsr2h,f,c
 23301  0181C8  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23302  0181CE  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23303  0181D4  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23304                           
 23305                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23306  0181DA  52E5               	movf	postdec1,f,c
 23307  0181DC  52E5               	movf	postdec1,f,c
 23308  0181DE  52E5               	movf	postdec1,f,c
 23309  0181E0  0012               	return		;funcret
 23310  0181E2                     __end_of_INT1_SetInterruptHandler:
 23311                           	opt callstack 0
 23312                           
 23313 ;; *************** function _INT0_SetInterruptHandler *****************
 23314 ;; Defined at:
 23315 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23316 ;; Parameters:    Size  Location     Type
 23317 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23318 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23319 ;; Auto vars:     Size  Location     Type
 23320 ;;		None
 23321 ;; Return value:  Size  Location     Type
 23322 ;;                  1  [STACK] void 
 23323 ;; Registers used:
 23324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23325 ;; Tracked objects:
 23326 ;;		On entry : 3F/39
 23327 ;;		On exit  : 0/0
 23328 ;;		Unchanged: 0/0
 23329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;Total ram usage:        0 bytes
 23335 ;; Hardware stack levels used:    1
 23336 ;; Hardware stack levels required when called:    6
 23337 ;; This function calls:
 23338 ;;		Nothing
 23339 ;; This function is called by:
 23340 ;;		_EXT_INT_Initialize
 23341 ;; This function uses a reentrant model
 23342 ;;
 23343                           
 23344                           	psect	text108
 23345  0181E2                     __ptext108:
 23346                           	opt callstack 0
 23347  0181E2                     _INT0_SetInterruptHandler:
 23348                           	opt callstack 22
 23349                           
 23350                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23351                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23352                           
 23353                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23354                           ;incstack = 0
 23355  0181E2  50E1               	movf	fsr1l,w,c
 23356  0181E4  0FFD               	addlw	-3
 23357  0181E6  6ED9               	movwf	fsr2l,c
 23358  0181E8  50E2               	movf	fsr1h,w,c
 23359  0181EA  6EDA               	movwf	fsr2h,c
 23360  0181EC  0EFF               	movlw	255
 23361  0181EE  22DA               	addwfc	fsr2h,f,c
 23362  0181F0  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23363  0181F6  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23364  0181FC  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23365                           
 23366                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23367  018202  52E5               	movf	postdec1,f,c
 23368  018204  52E5               	movf	postdec1,f,c
 23369  018206  52E5               	movf	postdec1,f,c
 23370  018208  0012               	return		;funcret
 23371  01820A                     __end_of_INT0_SetInterruptHandler:
 23372                           	opt callstack 0
 23373                           
 23374 ;; *************** function _DMA2_Initialize *****************
 23375 ;; Defined at:
 23376 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23377 ;; Parameters:    Size  Location     Type
 23378 ;;		None
 23379 ;; Auto vars:     Size  Location     Type
 23380 ;;		None
 23381 ;; Return value:  Size  Location     Type
 23382 ;;                  1  [STACK] void 
 23383 ;; Registers used:
 23384 ;;		wreg, status,2
 23385 ;; Tracked objects:
 23386 ;;		On entry : 3F/3D
 23387 ;;		On exit  : 3F/3B
 23388 ;;		Unchanged: 0/0
 23389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23394 ;;Total ram usage:        0 bytes
 23395 ;; Hardware stack levels used:    1
 23396 ;; Hardware stack levels required when called:    6
 23397 ;; This function calls:
 23398 ;;		Nothing
 23399 ;; This function is called by:
 23400 ;;		_SYSTEM_Initialize
 23401 ;; This function uses a reentrant model
 23402 ;;
 23403                           
 23404                           	psect	text109
 23405  01798A                     __ptext109:
 23406                           	opt callstack 0
 23407  01798A                     _DMA2_Initialize:
 23408                           	opt callstack 23
 23409                           
 23410                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23411                           
 23412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23413                           ;incstack = 0
 23414  01798A  0E00               	movlw	0
 23415  01798C  013B               	movlb	59	; () banked
 23416  01798E  6FD9               	movwf	217,b	;volatile
 23417  017990  0E10               	movlw	16
 23418  017992  6FDA               	movwf	218,b	;volatile
 23419  017994  0E00               	movlw	0
 23420  017996  6FDB               	movwf	219,b	;volatile
 23421                           
 23422                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23423  017998  0E3F               	movlw	63
 23424  01799A  6FD1               	movwf	209,b	;volatile
 23425  01799C  0EBB               	movlw	187
 23426  01799E  6FD0               	movwf	208,b	;volatile
 23427                           
 23428                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23429  0179A0  0E03               	movlw	3
 23430  0179A2  6FDD               	movwf	221,b	;volatile
 23431                           
 23432                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23433  0179A4  0E00               	movlw	0
 23434  0179A6  6FD8               	movwf	216,b	;volatile
 23435  0179A8  0E01               	movlw	1
 23436  0179AA  6FD7               	movwf	215,b	;volatile
 23437                           
 23438                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23439  0179AC  0E00               	movlw	0
 23440  0179AE  6FCF               	movwf	207,b	;volatile
 23441  0179B0  0E01               	movlw	1
 23442  0179B2  6FCE               	movwf	206,b	;volatile
 23443                           
 23444                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23445  0179B4  0E46               	movlw	70
 23446  0179B6  6FDF               	movwf	223,b	;volatile
 23447                           
 23448                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23449  0179B8  0E3D               	movlw	61
 23450  0179BA  6FDE               	movwf	222,b	;volatile
 23451                           
 23452                           ; BSR set to: 59
 23453                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23454  0179BC  0139               	movlb	57	; () banked
 23455  0179BE  97A5               	bcf	165,3,b	;volatile
 23456                           
 23457                           ; BSR set to: 57
 23458                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23459  0179C0  95A5               	bcf	165,2,b	;volatile
 23460                           
 23461                           ; BSR set to: 57
 23462                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23463  0179C2  9BA5               	bcf	165,5,b	;volatile
 23464                           
 23465                           ; BSR set to: 57
 23466                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23467  0179C4  99A5               	bcf	165,4,b	;volatile
 23468                           
 23469                           ; BSR set to: 57
 23470                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23471  0179C6  9795               	bcf	149,3,b	;volatile
 23472                           
 23473                           ; BSR set to: 57
 23474                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23475  0179C8  9595               	bcf	149,2,b	;volatile
 23476                           
 23477                           ; BSR set to: 57
 23478                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23479  0179CA  9B95               	bcf	149,5,b	;volatile
 23480                           
 23481                           ; BSR set to: 57
 23482                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23483  0179CC  9995               	bcf	149,4,b	;volatile
 23484  0179CE  9ED2               	bcf	16338,7,c	;# 
 23485  0179D0  0139               	banksel	14831	;# 
 23486  0179D2  0E55               	movlw	85	;# 
 23487  0179D4  6FEF               	movwf	14831,b	;# 
 23488  0179D6  0EAA               	movlw	170	;# 
 23489  0179D8  6FEF               	movwf	14831,b	;# 
 23490  0179DA  81EF               	bsf	14831,0,b	;# 
 23491  0179DC  8ED2               	bsf	16338,7,c	;# 
 23492                           
 23493                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23494  0179DE  013B               	movlb	59	; () banked
 23495  0179E0  6BDC               	clrf	220,b	;volatile
 23496                           
 23497                           ; BSR set to: 59
 23498                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23499  0179E2  0012               	return		;funcret
 23500  0179E4                     __end_of_DMA2_Initialize:
 23501                           	opt callstack 0
 23502                           
 23503 ;; *************** function _DMA1_Initialize *****************
 23504 ;; Defined at:
 23505 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23506 ;; Parameters:    Size  Location     Type
 23507 ;;		None
 23508 ;; Auto vars:     Size  Location     Type
 23509 ;;		None
 23510 ;; Return value:  Size  Location     Type
 23511 ;;                  1  [STACK] void 
 23512 ;; Registers used:
 23513 ;;		wreg, status,2
 23514 ;; Tracked objects:
 23515 ;;		On entry : 3F/3B
 23516 ;;		On exit  : 3F/3B
 23517 ;;		Unchanged: 0/0
 23518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23523 ;;Total ram usage:        0 bytes
 23524 ;; Hardware stack levels used:    1
 23525 ;; Hardware stack levels required when called:    6
 23526 ;; This function calls:
 23527 ;;		Nothing
 23528 ;; This function is called by:
 23529 ;;		_SYSTEM_Initialize
 23530 ;; This function uses a reentrant model
 23531 ;;
 23532                           
 23533                           	psect	text110
 23534  017548                     __ptext110:
 23535                           	opt callstack 0
 23536  017548                     _DMA1_Initialize:
 23537                           	opt callstack 23
 23538                           
 23539                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23540                           
 23541                           ; BSR set to: 59
 23542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23543                           ;incstack = 0
 23544  017548  0E00               	movlw	0
 23545  01754A  013B               	movlb	59	; () banked
 23546  01754C  6FF9               	movwf	249,b	;volatile
 23547  01754E  0E10               	movlw	16
 23548  017550  6FFA               	movwf	250,b	;volatile
 23549  017552  0E00               	movlw	0
 23550  017554  6FFB               	movwf	251,b	;volatile
 23551                           
 23552                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23553  017556  0E3D               	movlw	61
 23554  017558  6FF1               	movwf	241,b	;volatile
 23555  01755A  0E11               	movlw	17
 23556  01755C  6FF0               	movwf	240,b	;volatile
 23557                           
 23558                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23559  01755E  0E03               	movlw	3
 23560  017560  6FFD               	movwf	253,b	;volatile
 23561                           
 23562                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23563  017562  0E00               	movlw	0
 23564  017564  6FF8               	movwf	248,b	;volatile
 23565  017566  0E01               	movlw	1
 23566  017568  6FF7               	movwf	247,b	;volatile
 23567                           
 23568                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23569  01756A  0E00               	movlw	0
 23570  01756C  6FEF               	movwf	239,b	;volatile
 23571  01756E  0E01               	movlw	1
 23572  017570  6FEE               	movwf	238,b	;volatile
 23573                           
 23574                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23575  017572  0E15               	movlw	21
 23576  017574  6FFF               	movwf	255,b	;volatile
 23577                           
 23578                           ; BSR set to: 59
 23579                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23580  017576  6BFE               	clrf	254,b	;volatile
 23581                           
 23582                           ; BSR set to: 59
 23583                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23584  017578  0139               	movlb	57	; () banked
 23585  01757A  93A2               	bcf	162,1,b	;volatile
 23586                           
 23587                           ; BSR set to: 57
 23588                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23589  01757C  91A2               	bcf	162,0,b	;volatile
 23590                           
 23591                           ; BSR set to: 57
 23592                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23593  01757E  97A2               	bcf	162,3,b	;volatile
 23594                           
 23595                           ; BSR set to: 57
 23596                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23597  017580  95A2               	bcf	162,2,b	;volatile
 23598                           
 23599                           ; BSR set to: 57
 23600                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23601  017582  8392               	bsf	146,1,b	;volatile
 23602                           
 23603                           ; BSR set to: 57
 23604                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23605  017584  8192               	bsf	146,0,b	;volatile
 23606                           
 23607                           ; BSR set to: 57
 23608                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23609  017586  8792               	bsf	146,3,b	;volatile
 23610                           
 23611                           ; BSR set to: 57
 23612                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23613  017588  8592               	bsf	146,2,b	;volatile
 23614                           
 23615                           ; BSR set to: 57
 23616                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23617  01758A  6BF1               	clrf	241,b	;volatile
 23618                           
 23619                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23620  01758C  0E01               	movlw	1
 23621  01758E  6FF2               	movwf	242,b	;volatile
 23622                           
 23623                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23624  017590  0E04               	movlw	4
 23625  017592  6FF3               	movwf	243,b	;volatile
 23626                           
 23627                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23628  017594  0E02               	movlw	2
 23629  017596  6FF4               	movwf	244,b	;volatile
 23630                           
 23631                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23632  017598  0E03               	movlw	3
 23633  01759A  6FF7               	movwf	247,b	;volatile
 23634  01759C  9ED2               	bcf	16338,7,c	;# 
 23635  01759E  0139               	banksel	14831	;# 
 23636  0175A0  0E55               	movlw	85	;# 
 23637  0175A2  6FEF               	movwf	14831,b	;# 
 23638  0175A4  0EAA               	movlw	170	;# 
 23639  0175A6  6FEF               	movwf	14831,b	;# 
 23640  0175A8  81EF               	bsf	14831,0,b	;# 
 23641  0175AA  8ED2               	bsf	16338,7,c	;# 
 23642                           
 23643                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23644  0175AC  013B               	movlb	59	; () banked
 23645  0175AE  6BFC               	clrf	252,b	;volatile
 23646                           
 23647                           ; BSR set to: 59
 23648                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23649  0175B0  0012               	return		;funcret
 23650  0175B2                     __end_of_DMA1_Initialize:
 23651                           	opt callstack 0
 23652                           
 23653 ;; *************** function _CLKREF_Initialize *****************
 23654 ;; Defined at:
 23655 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23656 ;; Parameters:    Size  Location     Type
 23657 ;;		None
 23658 ;; Auto vars:     Size  Location     Type
 23659 ;;		None
 23660 ;; Return value:  Size  Location     Type
 23661 ;;                  1  [STACK] void 
 23662 ;; Registers used:
 23663 ;;		wreg, status,2
 23664 ;; Tracked objects:
 23665 ;;		On entry : 3F/3B
 23666 ;;		On exit  : 3F/3C
 23667 ;;		Unchanged: 0/0
 23668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23673 ;;Total ram usage:        0 bytes
 23674 ;; Hardware stack levels used:    1
 23675 ;; Hardware stack levels required when called:    6
 23676 ;; This function calls:
 23677 ;;		Nothing
 23678 ;; This function is called by:
 23679 ;;		_SYSTEM_Initialize
 23680 ;; This function uses a reentrant model
 23681 ;;
 23682                           
 23683                           	psect	text111
 23684  0185DA                     __ptext111:
 23685                           	opt callstack 0
 23686  0185DA                     _CLKREF_Initialize:
 23687                           	opt callstack 23
 23688                           
 23689                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23690                           
 23691                           ; BSR set to: 59
 23692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23693                           ;incstack = 0
 23694  0185DA  013C               	movlb	60	; () banked
 23695  0185DC  6BE6               	clrf	230,b	;volatile
 23696                           
 23697                           ; BSR set to: 60
 23698                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23699  0185DE  0E94               	movlw	148
 23700  0185E0  6FE5               	movwf	229,b	;volatile
 23701                           
 23702                           ; BSR set to: 60
 23703                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23704  0185E2  0012               	return		;funcret
 23705  0185E4                     __end_of_CLKREF_Initialize:
 23706                           	opt callstack 0
 23707                           
 23708 ;; *************** function _ADCC_Initialize *****************
 23709 ;; Defined at:
 23710 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23711 ;; Parameters:    Size  Location     Type
 23712 ;;		None
 23713 ;; Auto vars:     Size  Location     Type
 23714 ;;		None
 23715 ;; Return value:  Size  Location     Type
 23716 ;;                  1  [STACK] void 
 23717 ;; Registers used:
 23718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23719 ;; Tracked objects:
 23720 ;;		On entry : 3F/3E
 23721 ;;		On exit  : 0/0
 23722 ;;		Unchanged: 0/0
 23723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23728 ;;Total ram usage:        0 bytes
 23729 ;; Hardware stack levels used:    1
 23730 ;; Hardware stack levels required when called:    7
 23731 ;; This function calls:
 23732 ;;		_ADCC_SetADIInterruptHandler
 23733 ;;		_ADCC_SetADTIInterruptHandler
 23734 ;; This function is called by:
 23735 ;;		_SYSTEM_Initialize
 23736 ;; This function uses a reentrant model
 23737 ;;
 23738                           
 23739                           	psect	text112
 23740  0175B2                     __ptext112:
 23741                           	opt callstack 0
 23742  0175B2                     _ADCC_Initialize:
 23743                           	opt callstack 22
 23744                           
 23745                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23746                           
 23747                           ; BSR set to: 60
 23748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23749                           ;incstack = 0
 23750  0175B2  013E               	movlb	62	; () banked
 23751  0175B4  6BDE               	clrf	222,b	;volatile
 23752                           
 23753                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23754  0175B6  6BDF               	clrf	223,b	;volatile
 23755                           
 23756                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23757  0175B8  6BE0               	clrf	224,b	;volatile
 23758                           
 23759                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23760  0175BA  6BE1               	clrf	225,b	;volatile
 23761                           
 23762                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23763  0175BC  6BE4               	clrf	228,b	;volatile
 23764                           
 23765                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23766  0175BE  6BE5               	clrf	229,b	;volatile
 23767                           
 23768                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23769  0175C0  6BEA               	clrf	234,b	;volatile
 23770                           
 23771                           ; BSR set to: 62
 23772                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23773  0175C2  0E40               	movlw	64
 23774  0175C4  6FEC               	movwf	236,b	;volatile
 23775                           
 23776                           ; BSR set to: 62
 23777                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23778  0175C6  6BF1               	clrf	241,b	;volatile
 23779                           
 23780                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 23781  0175C8  0E20               	movlw	32
 23782  0175CA  6FF3               	movwf	243,b	;volatile
 23783                           
 23784                           ; BSR set to: 62
 23785                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23786  0175CC  6BF4               	clrf	244,b	;volatile
 23787                           
 23788                           ; BSR set to: 62
 23789                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23790  0175CE  6BF5               	clrf	245,b	;volatile
 23791                           
 23792                           ; BSR set to: 62
 23793                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23794  0175D0  6BF6               	clrf	246,b	;volatile
 23795                           
 23796                           ; BSR set to: 62
 23797                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23798  0175D2  6BF7               	clrf	247,b	;volatile
 23799                           
 23800                           ; BSR set to: 62
 23801                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23802  0175D4  6BF9               	clrf	249,b	;volatile
 23803                           
 23804                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 23805  0175D6  0E5B               	movlw	91
 23806  0175D8  6FFA               	movwf	250,b	;volatile
 23807                           
 23808                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23809  0175DA  0E27               	movlw	39
 23810  0175DC  6FFB               	movwf	251,b	;volatile
 23811                           
 23812                           ; BSR set to: 62
 23813                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23814  0175DE  6BFC               	clrf	252,b	;volatile
 23815                           
 23816                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23817  0175E0  0E02               	movlw	2
 23818  0175E2  6FFD               	movwf	253,b	;volatile
 23819                           
 23820                           ; BSR set to: 62
 23821                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23822  0175E4  6BFE               	clrf	254,b	;volatile
 23823                           
 23824                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 23825  0175E6  0E07               	movlw	7
 23826  0175E8  6FFF               	movwf	255,b	;volatile
 23827                           
 23828                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 23829  0175EA  0E84               	movlw	132
 23830  0175EC  6FF8               	movwf	248,b	;volatile
 23831                           
 23832                           ; BSR set to: 62
 23833                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23834  0175EE  0139               	movlb	57	; () banked
 23835  0175F0  95A1               	bcf	161,2,b	;volatile
 23836                           
 23837                           ; BSR set to: 57
 23838                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23839  0175F2  8591               	bsf	145,2,b	;volatile
 23840                           
 23841                           ; BSR set to: 57
 23842                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23843  0175F4  0E52               	movlw	low _ADCC_DefaultInterruptHandler
 23844  0175F6  6EE6               	movwf	postinc1,c
 23845  0175F8  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 23846  0175FA  6EE6               	movwf	postinc1,c
 23847  0175FC  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23848  0175FE  6EE6               	movwf	postinc1,c
 23849  017600  EC19  F0C1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23850                           
 23851                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23852  017604  0139               	movlb	57	; () banked
 23853  017606  97A1               	bcf	161,3,b	;volatile
 23854                           
 23855                           ; BSR set to: 57
 23856                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23857  017608  8791               	bsf	145,3,b	;volatile
 23858                           
 23859                           ; BSR set to: 57
 23860                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23861  01760A  0E52               	movlw	low _ADCC_DefaultInterruptHandler
 23862  01760C  6EE6               	movwf	postinc1,c
 23863  01760E  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 23864  017610  6EE6               	movwf	postinc1,c
 23865  017612  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23866  017614  6EE6               	movwf	postinc1,c
 23867  017616  EC05  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23868                           
 23869                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23870  01761A  0012               	return		;funcret
 23871  01761C                     __end_of_ADCC_Initialize:
 23872                           	opt callstack 0
 23873                           
 23874 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23875 ;; Defined at:
 23876 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23877 ;; Parameters:    Size  Location     Type
 23878 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23879 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23880 ;; Auto vars:     Size  Location     Type
 23881 ;;		None
 23882 ;; Return value:  Size  Location     Type
 23883 ;;                  1  [STACK] void 
 23884 ;; Registers used:
 23885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23886 ;; Tracked objects:
 23887 ;;		On entry : 0/0
 23888 ;;		On exit  : 0/0
 23889 ;;		Unchanged: 0/0
 23890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23895 ;;Total ram usage:        0 bytes
 23896 ;; Hardware stack levels used:    1
 23897 ;; Hardware stack levels required when called:    6
 23898 ;; This function calls:
 23899 ;;		Nothing
 23900 ;; This function is called by:
 23901 ;;		_ADCC_Initialize
 23902 ;;		_start_adc_scan
 23903 ;; This function uses a reentrant model
 23904 ;;
 23905                           
 23906                           	psect	text113
 23907  01820A                     __ptext113:
 23908                           	opt callstack 0
 23909  01820A                     _ADCC_SetADTIInterruptHandler:
 23910                           	opt callstack 23
 23911                           
 23912                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23913                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23914                           
 23915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23916                           ;incstack = 0
 23917  01820A  50E1               	movf	fsr1l,w,c
 23918  01820C  0FFD               	addlw	-3
 23919  01820E  6ED9               	movwf	fsr2l,c
 23920  018210  50E2               	movf	fsr1h,w,c
 23921  018212  6EDA               	movwf	fsr2h,c
 23922  018214  0EFF               	movlw	255
 23923  018216  22DA               	addwfc	fsr2h,f,c
 23924  018218  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23925  01821E  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23926  018224  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23927                           
 23928                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23929  01822A  52E5               	movf	postdec1,f,c
 23930  01822C  52E5               	movf	postdec1,f,c
 23931  01822E  52E5               	movf	postdec1,f,c
 23932  018230  0012               	return		;funcret
 23933  018232                     __end_of_ADCC_SetADTIInterruptHandler:
 23934                           	opt callstack 0
 23935                           
 23936 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23937 ;; Defined at:
 23938 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23939 ;; Parameters:    Size  Location     Type
 23940 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23941 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23942 ;; Auto vars:     Size  Location     Type
 23943 ;;		None
 23944 ;; Return value:  Size  Location     Type
 23945 ;;                  1  [STACK] void 
 23946 ;; Registers used:
 23947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23948 ;; Tracked objects:
 23949 ;;		On entry : 6/0
 23950 ;;		On exit  : 0/0
 23951 ;;		Unchanged: 0/0
 23952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23957 ;;Total ram usage:        0 bytes
 23958 ;; Hardware stack levels used:    1
 23959 ;; Hardware stack levels required when called:    6
 23960 ;; This function calls:
 23961 ;;		Nothing
 23962 ;; This function is called by:
 23963 ;;		_ADCC_Initialize
 23964 ;;		_start_adc_scan
 23965 ;; This function uses a reentrant model
 23966 ;;
 23967                           
 23968                           	psect	text114
 23969  018232                     __ptext114:
 23970                           	opt callstack 0
 23971  018232                     _ADCC_SetADIInterruptHandler:
 23972                           	opt callstack 23
 23973                           
 23974                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23975                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23976                           
 23977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23978                           ;incstack = 0
 23979  018232  50E1               	movf	fsr1l,w,c
 23980  018234  0FFD               	addlw	-3
 23981  018236  6ED9               	movwf	fsr2l,c
 23982  018238  50E2               	movf	fsr1h,w,c
 23983  01823A  6EDA               	movwf	fsr2h,c
 23984  01823C  0EFF               	movlw	255
 23985  01823E  22DA               	addwfc	fsr2h,f,c
 23986  018240  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23987  018246  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23988  01824C  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23989                           
 23990                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23991  018252  52E5               	movf	postdec1,f,c
 23992  018254  52E5               	movf	postdec1,f,c
 23993  018256  52E5               	movf	postdec1,f,c
 23994  018258  0012               	return		;funcret
 23995  01825A                     __end_of_ADCC_SetADIInterruptHandler:
 23996                           	opt callstack 0
 23997                           
 23998 ;; *************** function _INT1_ISR *****************
 23999 ;; Defined at:
 24000 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24001 ;; Parameters:    Size  Location     Type
 24002 ;;		None
 24003 ;; Auto vars:     Size  Location     Type
 24004 ;;		None
 24005 ;; Return value:  Size  Location     Type
 24006 ;;                  1    wreg      void 
 24007 ;; Registers used:
 24008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24009 ;; Tracked objects:
 24010 ;;		On entry : 0/0
 24011 ;;		On exit  : 0/0
 24012 ;;		Unchanged: 0/0
 24013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24016 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24017 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24018 ;;Total ram usage:        4 bytes
 24019 ;; Hardware stack levels used:    1
 24020 ;; Hardware stack levels required when called:    5
 24021 ;; This function calls:
 24022 ;;		_INT1_CallBack
 24023 ;; This function is called by:
 24024 ;;		Interrupt level 1
 24025 ;; This function uses a non-reentrant model
 24026 ;;
 24027                           
 24028                           	psect	text115
 24029  017D34                     __ptext115:
 24030                           	opt callstack 0
 24031  017D34                     _INT1_ISR:
 24032                           	opt callstack 12
 24033                           
 24034                           ;incstack = 0
 24035  017D34  006F FF60  F0E5    	movff	status,??_INT1_ISR
 24036  017D3A  0060  F0C8  F0E6   	movff	btemp,??_INT1_ISR+1
 24037  017D40  0060  F0F0  F0E7   	movff	btemp+10,??_INT1_ISR+2
 24038  017D46  0060  F0F4  F0E8   	movff	btemp+11,??_INT1_ISR+3
 24039  017D4C  EE16  F000         	lfsr	1,___intlo_sp
 24040                           
 24041                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24042  017D50  0139               	movlb	57	; () banked
 24043  017D52  91A5               	bcf	165,0,b	;volatile
 24044                           
 24045                           ; BSR set to: 57
 24046                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24047  017D54  ECC7  F0C1         	call	_INT1_CallBack	;wreg free
 24048  017D58  0060  F3A0  F03D   	movff	??_INT1_ISR+3,btemp+11
 24049  017D5E  0060  F39C  F03C   	movff	??_INT1_ISR+2,btemp+10
 24050  017D64  0060  F398  F032   	movff	??_INT1_ISR+1,btemp
 24051  017D6A  0060  F397  FFD8   	movff	??_INT1_ISR,status
 24052  017D70  0011               	retfie		f
 24053  017D72                     __end_of_INT1_ISR:
 24054                           	opt callstack 0
 24055                           
 24056 ;; *************** function _INT1_CallBack *****************
 24057 ;; Defined at:
 24058 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24059 ;; Parameters:    Size  Location     Type
 24060 ;;		None
 24061 ;; Auto vars:     Size  Location     Type
 24062 ;;		None
 24063 ;; Return value:  Size  Location     Type
 24064 ;;                  1  [STACK] void 
 24065 ;; Registers used:
 24066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24067 ;; Tracked objects:
 24068 ;;		On entry : 3F/39
 24069 ;;		On exit  : 0/0
 24070 ;;		Unchanged: 0/0
 24071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24076 ;;Total ram usage:        0 bytes
 24077 ;; Hardware stack levels used:    1
 24078 ;; Hardware stack levels required when called:    4
 24079 ;; This function calls:
 24080 ;;		Absolute function
 24081 ;;		_INT1_DefaultInterruptHandler
 24082 ;;		_switch_handler
 24083 ;; This function is called by:
 24084 ;;		_INT1_ISR
 24085 ;; This function uses a reentrant model
 24086 ;;
 24087                           
 24088                           	psect	text116
 24089  01838E                     __ptext116:
 24090                           	opt callstack 0
 24091  01838E                     _INT1_CallBack:
 24092                           	opt callstack 12
 24093                           
 24094                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24095                           
 24096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24097                           ;incstack = 0
 24098  01838E  5013               	movf	_INT1_InterruptHandler^0,w,c
 24099  018390  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24100  018392  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24101  018394  B4D8               	btfsc	status,2,c
 24102  018396  0012               	return	
 24103                           
 24104                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24105  018398  D801               	call	u830_28
 24106  01839A  0012               	return	
 24107  01839C                     u830_28:
 24108  01839C  0005               	push	
 24109  01839E  6EFA               	movwf	pclath,c
 24110  0183A0  5013               	movf	_INT1_InterruptHandler^0,w,c
 24111  0183A2  6EFD               	movwf	tosl,c
 24112  0183A4  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24113  0183A6  6EFE               	movwf	tosh,c
 24114  0183A8  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24115  0183AA  6EFF               	movwf	tosu,c
 24116  0183AC  50FA               	movf	pclath,w,c
 24117  0183AE  0012               	return		;indir
 24118  0183B0                     __end_of_INT1_CallBack:
 24119                           	opt callstack 0
 24120                           
 24121 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24122 ;; Defined at:
 24123 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24124 ;; Parameters:    Size  Location     Type
 24125 ;;		None
 24126 ;; Auto vars:     Size  Location     Type
 24127 ;;		None
 24128 ;; Return value:  Size  Location     Type
 24129 ;;                  1  [STACK] void 
 24130 ;; Registers used:
 24131 ;;		None
 24132 ;; Tracked objects:
 24133 ;;		On entry : 0/39
 24134 ;;		On exit  : 0/0
 24135 ;;		Unchanged: 0/0
 24136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24141 ;;Total ram usage:        0 bytes
 24142 ;; Hardware stack levels used:    1
 24143 ;; Hardware stack levels required when called:    3
 24144 ;; This function calls:
 24145 ;;		Nothing
 24146 ;; This function is called by:
 24147 ;;		_EXT_INT_Initialize
 24148 ;;		_INT1_CallBack
 24149 ;; This function uses a reentrant model
 24150 ;;
 24151                           
 24152                           	psect	text117
 24153  01864E                     __ptext117:
 24154                           	opt callstack 0
 24155  01864E                     _INT1_DefaultInterruptHandler:
 24156                           	opt callstack 12
 24157                           
 24158                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24159                           
 24160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24161                           ;incstack = 0
 24162  01864E  0012               	return		;funcret
 24163  018650                     __end_of_INT1_DefaultInterruptHandler:
 24164                           	opt callstack 0
 24165                           
 24166 ;; *************** function _switch_handler *****************
 24167 ;; Defined at:
 24168 ;;		line 97 in file "mbmc.c"
 24169 ;; Parameters:    Size  Location     Type
 24170 ;;		None
 24171 ;; Auto vars:     Size  Location     Type
 24172 ;;  i               1  [STACK] unsigned char 
 24173 ;;  sw_value        1  [STACK] unsigned char 
 24174 ;; Return value:  Size  Location     Type
 24175 ;;                  1  [STACK] void 
 24176 ;; Registers used:
 24177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24178 ;; Tracked objects:
 24179 ;;		On entry : 0/39
 24180 ;;		On exit  : 0/0
 24181 ;;		Unchanged: 0/0
 24182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24187 ;;Total ram usage:        0 bytes
 24188 ;; Hardware stack levels used:    1
 24189 ;; Hardware stack levels required when called:    3
 24190 ;; This function calls:
 24191 ;;		Nothing
 24192 ;; This function is called by:
 24193 ;;		_start_switch_handler
 24194 ;;		_INT1_CallBack
 24195 ;; This function uses a reentrant model
 24196 ;;
 24197                           
 24198                           	psect	text118
 24199  0160FE                     __ptext118:
 24200                           	opt callstack 0
 24201  0160FE                     _switch_handler:
 24202                           	opt callstack 0
 24203                           
 24204                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24205  0160FE  52E6               	movf	postinc1,f,c
 24206  016100  52E6               	movf	postinc1,f,c
 24207                           
 24208                           ;mbmc.c: 99:  uint8_t i = 0, sw_value;
 24209                           ;stkvar	_i @ sp[(-2)+0]
 24210                           
 24211                           ;incstack = 0
 24212  016102  0EFE               	movlw	-2
 24213  016104  6AE3               	clrf	plusw1,c
 24214  016106  9EBD               	bcf	189,7,c	;volatile
 24215  016108  82BE               	bsf	190,1,c	;volatile
 24216                           
 24217                           ;mbmc.c: 111:  __nop();
 24218  01610A  F000               	nop	
 24219                           
 24220                           ;mbmc.c: 112:  __nop();
 24221  01610C  F000               	nop	
 24222                           
 24223                           ;mbmc.c: 113:  __nop();
 24224  01610E  F000               	nop	
 24225  016110  D019               	goto	l8641
 24226  016112                     l8629:
 24227                           
 24228                           ;mbmc.c: 118:    sw_value = PORTFbits.RF3;
 24229  016112  A6CF               	btfss	207,3,c	;volatile
 24230  016114  D011               	goto	u822_20
 24231  016116  D00D               	goto	u822_21
 24232  016118                     u819_28:
 24233                           
 24234                           ;stkvar	_sw_value @ sp[(-2)+1]
 24235  016118  0EFF               	movlw	-1
 24236  01611A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24237                           
 24238                           ;mbmc.c: 119:    break;
 24239  016120  D027               	goto	l8643
 24240  016122                     l8631:
 24241                           
 24242                           ;mbmc.c: 121:    sw_value = PORTFbits.RF2;
 24243  016122  A4CF               	btfss	207,2,c	;volatile
 24244  016124  D009               	goto	u822_20
 24245  016126  D005               	goto	u822_21
 24246  016128                     l8633:
 24247                           
 24248                           ;mbmc.c: 124:    sw_value = PORTFbits.RF1;
 24249  016128  A2CF               	btfss	207,1,c	;volatile
 24250  01612A  D006               	goto	u822_20
 24251  01612C  D002               	goto	u822_21
 24252  01612E                     l8635:
 24253                           
 24254                           ;mbmc.c: 127:    sw_value = PORTFbits.RF0;
 24255  01612E  A0CF               	btfss	207,0,c	;volatile
 24256  016130  D003               	goto	u822_20
 24257  016132                     u822_21:
 24258  016132  6A3D               	clrf	(btemp+11)^0,c
 24259  016134  2A3D               	incf	(btemp+11)^0,f,c
 24260  016136  D7F0               	goto	u819_28
 24261  016138                     u822_20:
 24262  016138  6A3D               	clrf	(btemp+11)^0,c
 24263  01613A  D7EE               	goto	u819_28
 24264  01613C                     l8637:
 24265                           
 24266                           ;mbmc.c: 130:    sw_value = 1;
 24267                           ;stkvar	_sw_value @ sp[(-2)+1]
 24268  01613C  0EFF               	movlw	-1
 24269  01613E  6AE3               	clrf	plusw1,c
 24270  016140  2AE3               	incf	plusw1,f,c
 24271                           
 24272                           ;mbmc.c: 131:    break;
 24273  016142  D016               	goto	l8643
 24274  016144                     l8641:
 24275                           
 24276                           ;stkvar	_i @ sp[(-2)+0]
 24277  016144  0EFE               	movlw	-2
 24278  016146  50E3               	movf	plusw1,w,c
 24279  016148  6E3C               	movwf	(btemp+10)^0,c
 24280  01614A  6A3D               	clrf	(btemp+11)^0,c
 24281                           
 24282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24283                           ; Switch size 1, requested type "simple"
 24284                           ; Number of cases is 1, Range of values is 0 to 0
 24285                           ; switch strategies available:
 24286                           ; Name         Instructions Cycles
 24287                           ; simple_byte            4     3 (average)
 24288                           ;	Chosen strategy is simple_byte
 24289  01614C  503D               	movf	(btemp+11)^0,w,c
 24290  01614E  0A00               	xorlw	0	; case 0
 24291  016150  A4D8               	btfss	status,2,c
 24292  016152  D7F4               	goto	l8637
 24293                           
 24294                           ; Switch size 1, requested type "simple"
 24295                           ; Number of cases is 4, Range of values is 0 to 3
 24296                           ; switch strategies available:
 24297                           ; Name         Instructions Cycles
 24298                           ; simple_byte           13     7 (average)
 24299                           ;	Chosen strategy is simple_byte
 24300  016154  503C               	movf	(btemp+10)^0,w,c
 24301  016156  0A00               	xorlw	0	; case 0
 24302  016158  B4D8               	btfsc	status,2,c
 24303  01615A  D7E9               	goto	l8635
 24304  01615C  0A01               	xorlw	1	; case 1
 24305  01615E  B4D8               	btfsc	status,2,c
 24306  016160  D7E3               	goto	l8633
 24307  016162  0A03               	xorlw	3	; case 2
 24308  016164  B4D8               	btfsc	status,2,c
 24309  016166  D7DD               	goto	l8631
 24310  016168  0A01               	xorlw	1	; case 3
 24311  01616A  B4D8               	btfsc	status,2,c
 24312  01616C  D7D2               	goto	l8629
 24313  01616E  D7E6               	goto	l8637
 24314  016170                     l8643:
 24315                           
 24316                           ;mbmc.c: 135:   if (sw_value) {
 24317                           ;stkvar	_sw_value @ sp[(-2)+1]
 24318  016170  0EFF               	movlw	-1
 24319  016172  50E3               	movf	plusw1,w,c
 24320  016174  B4D8               	btfsc	status,2,c
 24321  016176  D018               	goto	l8649
 24322                           
 24323                           ;mbmc.c: 136:    if (V.button[i].sw == SW_ON) {
 24324                           ;stkvar	_i @ sp[(-2)+0]
 24325  016178  0EFE               	movlw	-2
 24326  01617A  50E3               	movf	plusw1,w,c
 24327  01617C  0D05               	mullw	5
 24328  01617E  0EBB               	movlw	low (_V+187)
 24329  016180  24F3               	addwf	243,w,c
 24330  016182  6ED9               	movwf	fsr2l,c
 24331  016184  0E01               	movlw	high (_V+187)
 24332  016186  20F4               	addwfc	prodh,w,c
 24333  016188  6EDA               	movwf	fsr2h,c
 24334  01618A  04DE               	decf	postinc2,w,c
 24335  01618C  A4D8               	btfss	status,2,c
 24336  01618E  D049               	goto	l8657
 24337                           
 24338                           ;mbmc.c: 137:     V.button[i].sw = SW_OFF;
 24339                           ;stkvar	_i @ sp[(-2)+0]
 24340  016190  0EFE               	movlw	-2
 24341  016192  50E3               	movf	plusw1,w,c
 24342  016194  0D05               	mullw	5
 24343  016196  0EBB               	movlw	low (_V+187)
 24344  016198  24F3               	addwf	243,w,c
 24345  01619A  6ED9               	movwf	fsr2l,c
 24346  01619C  0E01               	movlw	high (_V+187)
 24347  01619E  20F4               	addwfc	prodh,w,c
 24348  0161A0  6EDA               	movwf	fsr2h,c
 24349  0161A2  0E00               	movlw	0
 24350  0161A4  6EDF               	movwf	indf2,c
 24351  0161A6  D03D               	goto	l8657
 24352  0161A8                     l8649:
 24353                           
 24354                           ;mbmc.c: 140:    if (V.button[i].sw == SW_OFF) {
 24355                           ;stkvar	_i @ sp[(-2)+0]
 24356  0161A8  0EFE               	movlw	-2
 24357  0161AA  50E3               	movf	plusw1,w,c
 24358  0161AC  0D05               	mullw	5
 24359  0161AE  0EBB               	movlw	low (_V+187)
 24360  0161B0  24F3               	addwf	243,w,c
 24361  0161B2  6ED9               	movwf	fsr2l,c
 24362  0161B4  0E01               	movlw	high (_V+187)
 24363  0161B6  20F4               	addwfc	prodh,w,c
 24364  0161B8  6EDA               	movwf	fsr2h,c
 24365  0161BA  50DF               	movf	indf2,w,c
 24366  0161BC  A4D8               	btfss	status,2,c
 24367  0161BE  D031               	goto	l8657
 24368                           
 24369                           ;mbmc.c: 141:     V.button[i].sw = SW_ON;
 24370                           ;stkvar	_i @ sp[(-2)+0]
 24371  0161C0  0EFE               	movlw	-2
 24372  0161C2  50E3               	movf	plusw1,w,c
 24373  0161C4  0D05               	mullw	5
 24374  0161C6  0EBB               	movlw	low (_V+187)
 24375  0161C8  24F3               	addwf	243,w,c
 24376  0161CA  6ED9               	movwf	fsr2l,c
 24377  0161CC  0E01               	movlw	high (_V+187)
 24378  0161CE  20F4               	addwfc	prodh,w,c
 24379  0161D0  6EDA               	movwf	fsr2h,c
 24380  0161D2  0E01               	movlw	1
 24381  0161D4  6EDF               	movwf	indf2,c
 24382                           
 24383                           ;mbmc.c: 142:     V.button[i].count = V.timerint_count;
 24384  0161D6  EE20  F1B7         	lfsr	2,_V+183	;volatile
 24385                           
 24386                           ;stkvar	_i @ sp[(-2)+0]
 24387  0161DA  0EFE               	movlw	-2
 24388  0161DC  50E3               	movf	plusw1,w,c
 24389  0161DE  0D05               	mullw	5
 24390  0161E0  0EBC               	movlw	low (_V+188)
 24391  0161E2  24F3               	addwf	243,w,c
 24392  0161E4  6EE9               	movwf	fsr0l,c
 24393  0161E6  0E01               	movlw	high (_V+188)
 24394  0161E8  20F4               	addwfc	prodh,w,c
 24395  0161EA  6EEA               	movwf	fsr0h,c
 24396  0161EC  006F FF7B FFEE     	movff	postinc2,postinc0
 24397  0161F2  006F FF7B FFEE     	movff	postinc2,postinc0
 24398  0161F8  006F FF7B FFEE     	movff	postinc2,postinc0
 24399  0161FE  006F FF7B FFEE     	movff	postinc2,postinc0
 24400                           
 24401                           ;mbmc.c: 143:     V.sw_bitmap |= 1 << i;
 24402                           ;stkvar	_i @ sp[(-2)+0]
 24403  016204  0EFE               	movlw	-2
 24404  016206  006F FF8C  F03D    	movff	plusw1,btemp+11
 24405  01620C  0E01               	movlw	1
 24406  01620E  6E3C               	movwf	(btemp+10)^0,c
 24407  016210  2A3D               	incf	(btemp+11)^0,f,c
 24408  016212  D002               	goto	u826_24
 24409  016214                     u826_25:
 24410  016214  90D8               	bcf	status,0,c
 24411  016216  363C               	rlcf	(btemp+10)^0,f,c
 24412  016218                     u826_24:
 24413  016218  2E3D               	decfsz	(btemp+11)^0,f,c
 24414  01621A  D7FC               	goto	u826_25
 24415  01621C  503C               	movf	(btemp+10)^0,w,c
 24416  01621E  0101               	movlb	1	; () banked
 24417  016220  13E3               	iorwf	(_V+227)& (0+255),f,b	;volatile
 24418  016222                     l8657:
 24419                           
 24420                           ;mbmc.c: 146:  } while (++i < 4);
 24421                           ;stkvar	_i @ sp[(-2)+0]
 24422  016222  0EFE               	movlw	-2
 24423  016224  2AE3               	incf	plusw1,f,c
 24424  016226  0EFE               	movlw	-2
 24425  016228  006F FF8C  F032    	movff	plusw1,btemp
 24426  01622E  0E03               	movlw	3
 24427  016230  6432               	cpfsgt	btemp^0,c
 24428  016232  D788               	goto	l8641
 24429                           
 24430                           ;mbmc.c: 149:  do { LATEbits.LATE1 = 0; } while(0);
 24431  016234  92BE               	bcf	190,1,c	;volatile
 24432  016236  A4BE               	btfss	190,2,c	;volatile
 24433  016238  D002               	goto	u828_20
 24434  01623A  0E01               	movlw	1
 24435  01623C  D001               	goto	u828_26
 24436  01623E                     u828_20:
 24437  01623E  0E00               	movlw	0
 24438  016240                     u828_26:
 24439  016240  0AFF               	xorlw	255
 24440  016242  6E3D               	movwf	(btemp+11)^0,c
 24441  016244  463D               	rlncf	(btemp+11)^0,f,c
 24442  016246  463D               	rlncf	(btemp+11)^0,f,c
 24443  016248  50BE               	movf	190,w,c	;volatile
 24444  01624A  183D               	xorwf	(btemp+11)^0,w,c
 24445  01624C  0BFB               	andlw	-5
 24446  01624E  183D               	xorwf	(btemp+11)^0,w,c
 24447  016250  6EBE               	movwf	190,c	;volatile
 24448  016252  8EBD               	bsf	189,7,c	;volatile
 24449                           
 24450                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24451  016254  52E5               	movf	postdec1,f,c
 24452  016256  52E5               	movf	postdec1,f,c
 24453  016258  0012               	return		;funcret
 24454  01625A                     __end_of_switch_handler:
 24455                           	opt callstack 0
 24456                           
 24457 ;; *************** function _TMR5_ISR *****************
 24458 ;; Defined at:
 24459 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24460 ;; Parameters:    Size  Location     Type
 24461 ;;		None
 24462 ;; Auto vars:     Size  Location     Type
 24463 ;;		None
 24464 ;; Return value:  Size  Location     Type
 24465 ;;                  1    wreg      void 
 24466 ;; Registers used:
 24467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24468 ;; Tracked objects:
 24469 ;;		On entry : 0/0
 24470 ;;		On exit  : 0/0
 24471 ;;		Unchanged: 0/0
 24472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24475 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24476 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24477 ;;Total ram usage:        4 bytes
 24478 ;; Hardware stack levels used:    1
 24479 ;; Hardware stack levels required when called:    5
 24480 ;; This function calls:
 24481 ;;		_TMR5_CallBack
 24482 ;;		_TMR5_WriteTimer
 24483 ;; This function is called by:
 24484 ;;		Interrupt level 1
 24485 ;; This function uses a non-reentrant model
 24486 ;;
 24487                           
 24488                           	psect	text119
 24489  0178D4                     __ptext119:
 24490                           	opt callstack 0
 24491  0178D4                     _TMR5_ISR:
 24492                           	opt callstack 12
 24493                           
 24494                           ;incstack = 0
 24495  0178D4  006F FF60  F0EB    	movff	status,??_TMR5_ISR+2
 24496  0178DA  0060  F0F4  F0EC   	movff	btemp+11,??_TMR5_ISR+3
 24497  0178E0  EE16  F000         	lfsr	1,___intlo_sp
 24498                           
 24499                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24500  0178E4  0139               	movlb	57	; () banked
 24501  0178E6  9DA8               	bcf	168,6,b	;volatile
 24502                           
 24503                           ; BSR set to: 57
 24504                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24505  0178E8  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24506  0178EE  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24507  0178F4  EC5A  F0BE         	call	_TMR5_WriteTimer	;wreg free
 24508                           
 24509                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24510  0178F8  0101               	movlb	1	; () banked
 24511  0178FA  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24512  0178FC  0100               	movlb	0	; () banked
 24513  0178FE  6FE9               	movwf	??_TMR5_ISR& (0+255),b
 24514  017900  6BEA               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24515  017902  0E05               	movlw	5
 24516  017904  27E9               	addwf	??_TMR5_ISR& (0+255),f,b
 24517  017906  0E00               	movlw	0
 24518  017908  23EA               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24519  01790A  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24520  01790C  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24521  01790E  51E9               	movf	??_TMR5_ISR& (0+255),w,b
 24522  017910  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24523  017912  51EA               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24524  017914  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24525  017916  A0D8               	btfss	status,0,c
 24526  017918  D004               	goto	i1l1045
 24527                           
 24528                           ; BSR set to: 0
 24529                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24530  01791A  ECA3  F0C1         	call	_TMR5_CallBack	;wreg free
 24531                           
 24532                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24533  01791E  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24534  017920  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24535  017922                     i1l1045:
 24536  017922  0060  F3B0  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24537  017928  0060  F3AF  FFD8   	movff	??_TMR5_ISR+2,status
 24538  01792E  0011               	retfie		f
 24539  017930                     __end_of_TMR5_ISR:
 24540                           	opt callstack 0
 24541                           
 24542 ;; *************** function _TMR5_WriteTimer *****************
 24543 ;; Defined at:
 24544 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24545 ;; Parameters:    Size  Location     Type
 24546 ;;  timerVal        2  [STACK] unsigned short 
 24547 ;; Auto vars:     Size  Location     Type
 24548 ;;		None
 24549 ;; Return value:  Size  Location     Type
 24550 ;;                  1  [STACK] void 
 24551 ;; Registers used:
 24552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24553 ;; Tracked objects:
 24554 ;;		On entry : 3F/39
 24555 ;;		On exit  : 0/0
 24556 ;;		Unchanged: 0/0
 24557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24562 ;;Total ram usage:        0 bytes
 24563 ;; Hardware stack levels used:    1
 24564 ;; Hardware stack levels required when called:    3
 24565 ;; This function calls:
 24566 ;;		Nothing
 24567 ;; This function is called by:
 24568 ;;		_TMR5_ISR
 24569 ;; This function uses a reentrant model
 24570 ;;
 24571                           
 24572                           	psect	text120
 24573  017CB4                     __ptext120:
 24574                           	opt callstack 0
 24575  017CB4                     _TMR5_WriteTimer:
 24576                           	opt callstack 13
 24577                           
 24578                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24579                           
 24580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24581                           ;incstack = 0
 24582  017CB4  A49A               	btfss	154,2,c	;volatile
 24583  017CB6  D00F               	goto	l8763
 24584                           
 24585                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24586  017CB8  909A               	bcf	154,0,c	;volatile
 24587                           
 24588                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24589                           ;stkvar	_timerVal @ sp[(0)+-2]
 24590  017CBA  0EFF               	movlw	255
 24591  017CBC  24E1               	addwf	fsr1l,w,c
 24592  017CBE  6ED9               	movwf	fsr2l,c
 24593  017CC0  0EFF               	movlw	255
 24594  017CC2  20E2               	addwfc	fsr1h,w,c
 24595  017CC4  6EDA               	movwf	fsr2h,c
 24596  017CC6  50DF               	movf	indf2,w,c
 24597  017CC8  6E99               	movwf	153,c	;volatile
 24598                           
 24599                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24600                           ;stkvar	_timerVal @ sp[(0)+-2]
 24601  017CCA  0EFE               	movlw	-2
 24602  017CCC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24603                           
 24604                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24605  017CD2  809A               	bsf	154,0,c	;volatile
 24606                           
 24607                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24608  017CD4  D00C               	goto	l1028
 24609  017CD6                     l8763:
 24610                           
 24611                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24612                           ;stkvar	_timerVal @ sp[(0)+-2]
 24613  017CD6  0EFF               	movlw	255
 24614  017CD8  24E1               	addwf	fsr1l,w,c
 24615  017CDA  6ED9               	movwf	fsr2l,c
 24616  017CDC  0EFF               	movlw	255
 24617  017CDE  20E2               	addwfc	fsr1h,w,c
 24618  017CE0  6EDA               	movwf	fsr2h,c
 24619  017CE2  50DF               	movf	indf2,w,c
 24620  017CE4  6E99               	movwf	153,c	;volatile
 24621                           
 24622                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24623                           ;stkvar	_timerVal @ sp[(0)+-2]
 24624  017CE6  0EFE               	movlw	-2
 24625  017CE8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24626  017CEE                     l1028:
 24627                           
 24628                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24629  017CEE  52E5               	movf	postdec1,f,c
 24630  017CF0  52E5               	movf	postdec1,f,c
 24631  017CF2  0012               	return		;funcret
 24632  017CF4                     __end_of_TMR5_WriteTimer:
 24633                           	opt callstack 0
 24634                           
 24635 ;; *************** function _TMR5_CallBack *****************
 24636 ;; Defined at:
 24637 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24638 ;; Parameters:    Size  Location     Type
 24639 ;;		None
 24640 ;; Auto vars:     Size  Location     Type
 24641 ;;		None
 24642 ;; Return value:  Size  Location     Type
 24643 ;;                  1  [STACK] void 
 24644 ;; Registers used:
 24645 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24646 ;; Tracked objects:
 24647 ;;		On entry : 3F/0
 24648 ;;		On exit  : 0/0
 24649 ;;		Unchanged: 0/0
 24650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24655 ;;Total ram usage:        0 bytes
 24656 ;; Hardware stack levels used:    1
 24657 ;; Hardware stack levels required when called:    4
 24658 ;; This function calls:
 24659 ;;		Absolute function
 24660 ;;		_TMR5_DefaultInterruptHandler
 24661 ;; This function is called by:
 24662 ;;		_TMR5_ISR
 24663 ;; This function uses a reentrant model
 24664 ;;
 24665                           
 24666                           	psect	text121
 24667  018346                     __ptext121:
 24668                           	opt callstack 0
 24669  018346                     _TMR5_CallBack:
 24670                           	opt callstack 12
 24671                           
 24672                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24673                           
 24674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24675                           ;incstack = 0
 24676  018346  0100               	movlb	0	; () banked
 24677  018348  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24678  01834A  1199               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24679  01834C  119A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24680  01834E  B4D8               	btfsc	status,2,c
 24681  018350  0012               	return	
 24682                           
 24683                           ; BSR set to: 0
 24684                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24685  018352  D801               	call	u841_28
 24686  018354  0012               	return	
 24687  018356                     u841_28:
 24688  018356  0005               	push	
 24689  018358  6EFA               	movwf	pclath,c
 24690  01835A  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24691  01835C  6EFD               	movwf	tosl,c
 24692  01835E  5199               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24693  018360  6EFE               	movwf	tosh,c
 24694  018362  519A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24695  018364  6EFF               	movwf	tosu,c
 24696  018366  50FA               	movf	pclath,w,c
 24697  018368  0012               	return		;indir
 24698  01836A                     __end_of_TMR5_CallBack:
 24699                           	opt callstack 0
 24700                           
 24701 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24702 ;; Defined at:
 24703 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24704 ;; Parameters:    Size  Location     Type
 24705 ;;		None
 24706 ;; Auto vars:     Size  Location     Type
 24707 ;;		None
 24708 ;; Return value:  Size  Location     Type
 24709 ;;                  1  [STACK] void 
 24710 ;; Registers used:
 24711 ;;		wreg, status,2, status,0, btemp+11
 24712 ;; Tracked objects:
 24713 ;;		On entry : 3F/0
 24714 ;;		On exit  : 3F/1
 24715 ;;		Unchanged: 0/0
 24716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24721 ;;Total ram usage:        0 bytes
 24722 ;; Hardware stack levels used:    1
 24723 ;; Hardware stack levels required when called:    3
 24724 ;; This function calls:
 24725 ;;		Nothing
 24726 ;; This function is called by:
 24727 ;;		_TMR5_Initialize
 24728 ;;		_TMR5_CallBack
 24729 ;; This function uses a reentrant model
 24730 ;;
 24731                           
 24732                           	psect	text122
 24733  01825A                     __ptext122:
 24734                           	opt callstack 0
 24735  01825A                     _TMR5_DefaultInterruptHandler:
 24736                           	opt callstack 12
 24737                           
 24738                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 24739                           
 24740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24741                           ;incstack = 0
 24742  01825A  A0BE               	btfss	190,0,c	;volatile
 24743  01825C  D002               	goto	u797_20
 24744  01825E  0E01               	movlw	1
 24745  018260  D001               	goto	u797_26
 24746  018262                     u797_20:
 24747  018262  0E00               	movlw	0
 24748  018264                     u797_26:
 24749  018264  0AFF               	xorlw	255
 24750  018266  6E3D               	movwf	(btemp+11)^0,c
 24751  018268  50BE               	movf	190,w,c	;volatile
 24752  01826A  183D               	xorwf	(btemp+11)^0,w,c
 24753  01826C  0BFE               	andlw	-2
 24754  01826E  183D               	xorwf	(btemp+11)^0,w,c
 24755  018270  6EBE               	movwf	190,c	;volatile
 24756                           
 24757                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 24758  018272  0E01               	movlw	1
 24759  018274  0101               	movlb	1	; () banked
 24760  018276  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 24761  018278  0E00               	movlw	0
 24762  01827A  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 24763  01827C  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 24764  01827E  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 24765                           
 24766                           ; BSR set to: 1
 24767                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24768  018280  0012               	return		;funcret
 24769  018282                     __end_of_TMR5_DefaultInterruptHandler:
 24770                           	opt callstack 0
 24771                           
 24772 ;; *************** function _INT0_ISR *****************
 24773 ;; Defined at:
 24774 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 24775 ;; Parameters:    Size  Location     Type
 24776 ;;		None
 24777 ;; Auto vars:     Size  Location     Type
 24778 ;;		None
 24779 ;; Return value:  Size  Location     Type
 24780 ;;                  1    wreg      void 
 24781 ;; Registers used:
 24782 ;;		wreg, status,2, status,0, pclath, tosl
 24783 ;; Tracked objects:
 24784 ;;		On entry : 0/0
 24785 ;;		On exit  : 0/0
 24786 ;;		Unchanged: 0/0
 24787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24792 ;;Total ram usage:        0 bytes
 24793 ;; Hardware stack levels used:    1
 24794 ;; Hardware stack levels required when called:    2
 24795 ;; This function calls:
 24796 ;;		_INT0_CallBack
 24797 ;; This function is called by:
 24798 ;;		Interrupt level 2
 24799 ;; This function uses a non-reentrant model
 24800 ;;
 24801                           
 24802                           	psect	text123
 24803  0185BC                     __ptext123:
 24804                           	opt callstack 0
 24805  0185BC                     _INT0_ISR:
 24806                           	opt callstack 12
 24807                           
 24808                           ; BSR set to: 1
 24809                           ;incstack = 0
 24810  0185BC  EE14  F000         	lfsr	1,___inthi_sp
 24811                           
 24812                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 24813  0185C0  0139               	movlb	57	; () banked
 24814  0185C2  91A1               	bcf	161,0,b	;volatile
 24815                           
 24816                           ; BSR set to: 57
 24817                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 24818  0185C4  ECD8  F0C1         	call	_INT0_CallBack	;wreg free
 24819  0185C8  0011               	retfie		f
 24820  0185CA                     __end_of_INT0_ISR:
 24821                           	opt callstack 0
 24822                           
 24823 ;; *************** function _INT0_CallBack *****************
 24824 ;; Defined at:
 24825 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 24826 ;; Parameters:    Size  Location     Type
 24827 ;;		None
 24828 ;; Auto vars:     Size  Location     Type
 24829 ;;		None
 24830 ;; Return value:  Size  Location     Type
 24831 ;;                  1  [STACK] void 
 24832 ;; Registers used:
 24833 ;;		wreg, status,2, status,0, pclath, tosl
 24834 ;; Tracked objects:
 24835 ;;		On entry : 3F/39
 24836 ;;		On exit  : 0/0
 24837 ;;		Unchanged: 0/0
 24838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24843 ;;Total ram usage:        0 bytes
 24844 ;; Hardware stack levels used:    1
 24845 ;; Hardware stack levels required when called:    1
 24846 ;; This function calls:
 24847 ;;		Absolute function
 24848 ;;		_INT0_DefaultInterruptHandler
 24849 ;; This function is called by:
 24850 ;;		_INT0_ISR
 24851 ;; This function uses a reentrant model
 24852 ;;
 24853                           
 24854                           	psect	text124
 24855  0183B0                     __ptext124:
 24856                           	opt callstack 0
 24857  0183B0                     _INT0_CallBack:
 24858                           	opt callstack 12
 24859                           
 24860                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 24861                           
 24862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24863                           ;incstack = 0
 24864  0183B0  5016               	movf	_INT0_InterruptHandler^0,w,c
 24865  0183B2  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 24866  0183B4  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 24867  0183B6  B4D8               	btfsc	status,2,c
 24868  0183B8  0012               	return	
 24869                           
 24870                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 24871  0183BA  D801               	call	u391_48
 24872  0183BC  0012               	return	
 24873  0183BE                     u391_48:
 24874  0183BE  0005               	push	
 24875  0183C0  6EFA               	movwf	pclath,c
 24876  0183C2  5016               	movf	_INT0_InterruptHandler^0,w,c
 24877  0183C4  6EFD               	movwf	tosl,c
 24878  0183C6  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 24879  0183C8  6EFE               	movwf	tosh,c
 24880  0183CA  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 24881  0183CC  6EFF               	movwf	tosu,c
 24882  0183CE  50FA               	movf	pclath,w,c
 24883  0183D0  0012               	return		;indir
 24884  0183D2                     __end_of_INT0_CallBack:
 24885                           	opt callstack 0
 24886                           
 24887 ;; *************** function _INT0_DefaultInterruptHandler *****************
 24888 ;; Defined at:
 24889 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 24890 ;; Parameters:    Size  Location     Type
 24891 ;;		None
 24892 ;; Auto vars:     Size  Location     Type
 24893 ;;		None
 24894 ;; Return value:  Size  Location     Type
 24895 ;;                  1  [STACK] void 
 24896 ;; Registers used:
 24897 ;;		None
 24898 ;; Tracked objects:
 24899 ;;		On entry : 0/39
 24900 ;;		On exit  : 0/0
 24901 ;;		Unchanged: 0/0
 24902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24907 ;;Total ram usage:        0 bytes
 24908 ;; Hardware stack levels used:    1
 24909 ;; This function calls:
 24910 ;;		Nothing
 24911 ;; This function is called by:
 24912 ;;		_EXT_INT_Initialize
 24913 ;;		_INT0_CallBack
 24914 ;; This function uses a reentrant model
 24915 ;;
 24916                           
 24917                           	psect	text125
 24918  018650                     __ptext125:
 24919                           	opt callstack 0
 24920  018650                     _INT0_DefaultInterruptHandler:
 24921                           	opt callstack 12
 24922                           
 24923                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24924                           
 24925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24926                           ;incstack = 0
 24927  018650  0012               	return		;funcret
 24928  018652                     __end_of_INT0_DefaultInterruptHandler:
 24929                           	opt callstack 0
 24930                           
 24931 ;; *************** function _Default_ISR *****************
 24932 ;; Defined at:
 24933 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24934 ;; Parameters:    Size  Location     Type
 24935 ;;		None
 24936 ;; Auto vars:     Size  Location     Type
 24937 ;;		None
 24938 ;; Return value:  Size  Location     Type
 24939 ;;                  1    wreg      void 
 24940 ;; Registers used:
 24941 ;;		None
 24942 ;; Tracked objects:
 24943 ;;		On entry : 0/0
 24944 ;;		On exit  : 0/0
 24945 ;;		Unchanged: 0/0
 24946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24951 ;;Total ram usage:        0 bytes
 24952 ;; Hardware stack levels used:    1
 24953 ;; This function calls:
 24954 ;;		Nothing
 24955 ;; This function is called by:
 24956 ;;		Interrupt level 2
 24957 ;; This function uses a non-reentrant model
 24958 ;;
 24959                           
 24960                           	psect	text126
 24961  018648                     __ptext126:
 24962                           	opt callstack 0
 24963  018648                     _Default_ISR:
 24964                           	opt callstack 14
 24965                           
 24966                           ;incstack = 0
 24967  018648  EE14  F000         	lfsr	1,___inthi_sp
 24968  01864C  0011               	retfie		f
 24969  01864E                     __end_of_Default_ISR:
 24970                           	opt callstack 0
 24971                           
 24972 ;; *************** function _ADCC_ISR *****************
 24973 ;; Defined at:
 24974 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24975 ;; Parameters:    Size  Location     Type
 24976 ;;		None
 24977 ;; Auto vars:     Size  Location     Type
 24978 ;;		None
 24979 ;; Return value:  Size  Location     Type
 24980 ;;                  1    wreg      void 
 24981 ;; Registers used:
 24982 ;;		wreg, status,2, status,0, pclath, tosl
 24983 ;; Tracked objects:
 24984 ;;		On entry : 0/0
 24985 ;;		On exit  : 0/0
 24986 ;;		Unchanged: 0/0
 24987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24992 ;;Total ram usage:        0 bytes
 24993 ;; Hardware stack levels used:    1
 24994 ;; Hardware stack levels required when called:    1
 24995 ;; This function calls:
 24996 ;;		Absolute function
 24997 ;;		_ADCC_DefaultInterruptHandler
 24998 ;;		_adc_int_handler
 24999 ;; This function is called by:
 25000 ;;		Interrupt level 2
 25001 ;; This function uses a non-reentrant model
 25002 ;;
 25003                           
 25004                           	psect	text127
 25005  018028                     __ptext127:
 25006                           	opt callstack 0
 25007  018028                     _ADCC_ISR:
 25008                           	opt callstack 13
 25009                           
 25010                           ;incstack = 0
 25011  018028  EE14  F000         	lfsr	1,___inthi_sp
 25012                           
 25013                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25014  01802C  0139               	movlb	57	; () banked
 25015  01802E  95A1               	bcf	161,2,b	;volatile
 25016                           
 25017                           ; BSR set to: 57
 25018                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25019  018030  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25020  018032  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25021  018034  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25022  018036  B4D8               	btfsc	status,2,c
 25023  018038  0011               	retfie		f
 25024                           
 25025                           ; BSR set to: 57
 25026                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25027  01803A  D801               	call	i2u420_48
 25028  01803C  0011               	retfie		f
 25029  01803E                     i2u420_48:
 25030  01803E  0005               	push	
 25031  018040  6EFA               	movwf	pclath,c
 25032  018042  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25033  018044  6EFD               	movwf	tosl,c
 25034  018046  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25035  018048  6EFE               	movwf	tosh,c
 25036  01804A  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25037  01804C  6EFF               	movwf	tosu,c
 25038  01804E  50FA               	movf	pclath,w,c
 25039  018050  0012               	return		;indir
 25040  018052                     __end_of_ADCC_ISR:
 25041                           	opt callstack 0
 25042                           
 25043 ;; *************** function _adc_int_t_handler *****************
 25044 ;; Defined at:
 25045 ;;		line 127 in file "daq.c"
 25046 ;; Parameters:    Size  Location     Type
 25047 ;;		None
 25048 ;; Auto vars:     Size  Location     Type
 25049 ;;		None
 25050 ;; Return value:  Size  Location     Type
 25051 ;;                  1  [STACK] void 
 25052 ;; Registers used:
 25053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25054 ;; Tracked objects:
 25055 ;;		On entry : 3F/39
 25056 ;;		On exit  : 1/0
 25057 ;;		Unchanged: 0/0
 25058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25063 ;;Total ram usage:        0 bytes
 25064 ;; Hardware stack levels used:    1
 25065 ;; Hardware stack levels required when called:    1
 25066 ;; This function calls:
 25067 ;;		_ADCC_DischargeSampleCapacitor
 25068 ;;		_ADCC_StartConversion
 25069 ;; This function is called by:
 25070 ;;		_start_adc_scan
 25071 ;;		_ADCC_ThresholdISR
 25072 ;; This function uses a reentrant model
 25073 ;;
 25074                           
 25075                           	psect	text128
 25076  017450                     __ptext128:
 25077                           	opt callstack 0
 25078  017450                     _adc_int_t_handler:
 25079                           	opt callstack 12
 25080                           
 25081                           ;daq.c: 132:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25082                           
 25083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25084                           ;incstack = 0
 25085  017450  013E               	movlb	62	; () banked
 25086  017452  51E6               	movf	230,w,b	;volatile
 25087  017454  006F FB9C  F032    	movff	16103,btemp	;volatile
 25088  01745A  6A33               	clrf	(btemp+1)^0,c
 25089  01745C  0060  F0C8  F033   	movff	btemp,btemp+1
 25090  017462  6A32               	clrf	btemp^0,c
 25091  017464  2632               	addwf	btemp^0,f,c
 25092  017466  0E00               	movlw	0
 25093  017468  2233               	addwfc	(btemp+1)^0,f,c
 25094  01746A  0100               	movlb	0	; () banked
 25095  01746C  51CA               	movf	(_R+36)& (0+255),w,b	;volatile
 25096  01746E  0D02               	mullw	2
 25097  017470  50F3               	movf	243,w,c
 25098  017472  0FA6               	addlw	low _R
 25099  017474  6ED9               	movwf	fsr2l,c
 25100  017476  6ADA               	clrf	fsr2h,c
 25101  017478  0060  F0CB  FFDE   	movff	btemp,postinc2
 25102  01747E  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25103  017484                     l8935:
 25104                           
 25105                           ;daq.c: 134:   if (++R.scan_index > 0XD) {
 25106  017484  0100               	movlb	0	; () banked
 25107  017486  2BCA               	incf	(_R+36)& (0+255),f,b	;volatile
 25108  017488  0E0D               	movlw	13
 25109  01748A  65CA               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25110  01748C  D003               	goto	l8941
 25111                           
 25112                           ; BSR set to: 0
 25113                           ;daq.c: 135:    R.done = 1;
 25114  01748E  0E01               	movlw	1
 25115  017490  6FCD               	movwf	(_R+39)& (0+255),b	;volatile
 25116  017492  0012               	return	
 25117  017494                     l8941:
 25118                           
 25119                           ; BSR set to: 0
 25120                           ;daq.c: 141:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25121  017494  0060  F328  F03D   	movff	_R+36,btemp+11	;volatile
 25122  01749A  EE20  F0CB         	lfsr	2,_R+37	;volatile
 25123  01749E  006F FF78  F03A    	movff	postinc2,btemp+8
 25124  0174A4  006F FF74  F03B    	movff	postdec2,btemp+9
 25125  0174AA  2A3D               	incf	(btemp+11)^0,f,c
 25126  0174AC  D003               	goto	u854_44
 25127  0174AE                     u854_45:
 25128  0174AE  90D8               	bcf	status,0,c
 25129  0174B0  323B               	rrcf	(btemp+9)^0,f,c
 25130  0174B2  323A               	rrcf	(btemp+8)^0,f,c
 25131  0174B4                     u854_44:
 25132  0174B4  2E3D               	decfsz	(btemp+11)^0,f,c
 25133  0174B6  D7FB               	goto	u854_45
 25134  0174B8  A03A               	btfss	(btemp+8)^0,0,c
 25135  0174BA  D7E4               	goto	l8935
 25136                           
 25137                           ;daq.c: 142:  ADCC_DischargeSampleCapacitor();
 25138  0174BC  EC03  F0C3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25139                           
 25140                           ; BSR set to: 62
 25141                           ;daq.c: 143:  ADCC_StartConversion(R.scan_index & 0xf);
 25142  0174C0  0100               	movlb	0	; () banked
 25143  0174C2  51CA               	movf	(_R+36)& (0+255),w,b	;volatile
 25144  0174C4  0B0F               	andlw	15
 25145  0174C6  6EE6               	movwf	postinc1,c
 25146  0174C8  ECBE  F0C2         	call	_ADCC_StartConversion	;wreg free
 25147                           
 25148                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25149  0174CC  0012               	return		;funcret
 25150  0174CE                     __end_of_adc_int_t_handler:
 25151                           	opt callstack 0
 25152                           
 25153 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25154 ;; Defined at:
 25155 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25156 ;; Parameters:    Size  Location     Type
 25157 ;;		None
 25158 ;; Auto vars:     Size  Location     Type
 25159 ;;		None
 25160 ;; Return value:  Size  Location     Type
 25161 ;;                  1  [STACK] void 
 25162 ;; Registers used:
 25163 ;;		None
 25164 ;; Tracked objects:
 25165 ;;		On entry : 3F/39
 25166 ;;		On exit  : 0/0
 25167 ;;		Unchanged: 0/0
 25168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25173 ;;Total ram usage:        0 bytes
 25174 ;; Hardware stack levels used:    1
 25175 ;; This function calls:
 25176 ;;		Nothing
 25177 ;; This function is called by:
 25178 ;;		_ADCC_Initialize
 25179 ;;		_ADCC_ISR
 25180 ;;		_ADCC_ThresholdISR
 25181 ;; This function uses a reentrant model
 25182 ;;
 25183                           
 25184                           	psect	text129
 25185  018652                     __ptext129:
 25186                           	opt callstack 0
 25187  018652                     _ADCC_DefaultInterruptHandler:
 25188                           	opt callstack 13
 25189                           
 25190                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25191                           
 25192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25193                           ;incstack = 0
 25194  018652  0012               	return		;funcret
 25195  018654                     __end_of_ADCC_DefaultInterruptHandler:
 25196                           	opt callstack 0
 25197                           
 25198 ;; *************** function _adc_int_handler *****************
 25199 ;; Defined at:
 25200 ;;		line 117 in file "daq.c"
 25201 ;; Parameters:    Size  Location     Type
 25202 ;;		None
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;		None
 25205 ;; Return value:  Size  Location     Type
 25206 ;;                  1  [STACK] void 
 25207 ;; Registers used:
 25208 ;;		None
 25209 ;; Tracked objects:
 25210 ;;		On entry : 3F/39
 25211 ;;		On exit  : 0/0
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25218 ;;Total ram usage:        0 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; This function calls:
 25221 ;;		Nothing
 25222 ;; This function is called by:
 25223 ;;		_start_adc_scan
 25224 ;;		_ADCC_ISR
 25225 ;; This function uses a reentrant model
 25226 ;;
 25227                           
 25228                           	psect	text130
 25229  018654                     __ptext130:
 25230                           	opt callstack 0
 25231  018654                     _adc_int_handler:
 25232                           	opt callstack 13
 25233                           
 25234                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25235                           
 25236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25237                           ;incstack = 0
 25238  018654  0012               	return		;funcret
 25239  018656                     __end_of_adc_int_handler:
 25240                           	opt callstack 0
 25241                           
 25242 ;; *************** function _ADCC_ThresholdISR *****************
 25243 ;; Defined at:
 25244 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25245 ;; Parameters:    Size  Location     Type
 25246 ;;		None
 25247 ;; Auto vars:     Size  Location     Type
 25248 ;;		None
 25249 ;; Return value:  Size  Location     Type
 25250 ;;                  1    wreg      void 
 25251 ;; Registers used:
 25252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25253 ;; Tracked objects:
 25254 ;;		On entry : 0/0
 25255 ;;		On exit  : 0/0
 25256 ;;		Unchanged: 0/0
 25257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25260 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25261 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25262 ;;Total ram usage:        5 bytes
 25263 ;; Hardware stack levels used:    1
 25264 ;; Hardware stack levels required when called:    2
 25265 ;; This function calls:
 25266 ;;		Absolute function
 25267 ;;		_ADCC_DefaultInterruptHandler
 25268 ;;		_adc_int_t_handler
 25269 ;; This function is called by:
 25270 ;;		Interrupt level 2
 25271 ;; This function uses a non-reentrant model
 25272 ;;
 25273                           
 25274                           	psect	text131
 25275  01761C                     __ptext131:
 25276                           	opt callstack 0
 25277  01761C                     _ADCC_ThresholdISR:
 25278                           	opt callstack 12
 25279                           
 25280                           ;incstack = 0
 25281  01761C  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25282  017622  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25283  017628  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25284  01762E  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25285  017634  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25286  01763A  EE14  F000         	lfsr	1,___inthi_sp
 25287                           
 25288                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25289  01763E  0139               	movlb	57	; () banked
 25290  017640  97A1               	bcf	161,3,b	;volatile
 25291                           
 25292                           ; BSR set to: 57
 25293                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25294  017642  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25295  017644  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25296  017646  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25297  017648  B4D8               	btfsc	status,2,c
 25298  01764A  D00C               	goto	i2u857_49
 25299                           
 25300                           ; BSR set to: 57
 25301                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25302  01764C  D801               	call	i2u857_48
 25303  01764E  D00A               	goto	i2u857_49
 25304  017650                     i2u857_48:
 25305  017650  0005               	push	
 25306  017652  6EFA               	movwf	pclath,c
 25307  017654  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25308  017656  6EFD               	movwf	tosl,c
 25309  017658  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25310  01765A  6EFE               	movwf	tosh,c
 25311  01765C  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25312  01765E  6EFF               	movwf	tosu,c
 25313  017660  50FA               	movf	pclath,w,c
 25314  017662  0012               	return		;indir
 25315  017664                     i2u857_49:
 25316  017664  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25317  01766A  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25318  017670  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25319  017676  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25320  01767C  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25321  017682  0011               	retfie		f
 25322  017684                     __end_of_ADCC_ThresholdISR:
 25323                           	opt callstack 0
 25324                           
 25325 ;; *************** function _UART1_tx_vect_isr *****************
 25326 ;; Defined at:
 25327 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25328 ;; Parameters:    Size  Location     Type
 25329 ;;		None
 25330 ;; Auto vars:     Size  Location     Type
 25331 ;;		None
 25332 ;; Return value:  Size  Location     Type
 25333 ;;                  1    wreg      void 
 25334 ;; Registers used:
 25335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25336 ;; Tracked objects:
 25337 ;;		On entry : 0/0
 25338 ;;		On exit  : 0/0
 25339 ;;		Unchanged: 0/0
 25340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25345 ;;Total ram usage:        0 bytes
 25346 ;; Hardware stack levels used:    1
 25347 ;; Hardware stack levels required when called:    1
 25348 ;; This function calls:
 25349 ;;		Absolute function
 25350 ;;		_UART1_Transmit_ISR
 25351 ;; This function is called by:
 25352 ;;		Interrupt level 2
 25353 ;; This function uses a non-reentrant model
 25354 ;;
 25355                           
 25356                           	psect	text132
 25357  018284                     __ptext132:
 25358                           	opt callstack 0
 25359  018284                     _UART1_tx_vect_isr:
 25360                           	opt callstack 13
 25361                           
 25362                           ;incstack = 0
 25363  018284  EE14  F000         	lfsr	1,___inthi_sp
 25364                           
 25365                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25366  018288  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25367  01828A  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25368  01828C  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25369  01828E  B4D8               	btfsc	status,2,c
 25370  018290  0011               	retfie		f
 25371                           
 25372                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25373  018292  D801               	call	i2u859_48
 25374  018294  0011               	retfie		f
 25375  018296                     i2u859_48:
 25376  018296  0005               	push	
 25377  018298  6EFA               	movwf	pclath,c
 25378  01829A  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25379  01829C  6EFD               	movwf	tosl,c
 25380  01829E  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25381  0182A0  6EFE               	movwf	tosh,c
 25382  0182A2  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25383  0182A4  6EFF               	movwf	tosu,c
 25384  0182A6  50FA               	movf	pclath,w,c
 25385  0182A8  0012               	return		;indir
 25386  0182AA                     __end_of_UART1_tx_vect_isr:
 25387                           	opt callstack 0
 25388                           
 25389 ;; *************** function _UART1_Transmit_ISR *****************
 25390 ;; Defined at:
 25391 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25392 ;; Parameters:    Size  Location     Type
 25393 ;;		None
 25394 ;; Auto vars:     Size  Location     Type
 25395 ;;		None
 25396 ;; Return value:  Size  Location     Type
 25397 ;;                  1  [STACK] void 
 25398 ;; Registers used:
 25399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25400 ;; Tracked objects:
 25401 ;;		On entry : 0/0
 25402 ;;		On exit  : 3B/39
 25403 ;;		Unchanged: 0/0
 25404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25409 ;;Total ram usage:        0 bytes
 25410 ;; Hardware stack levels used:    1
 25411 ;; This function calls:
 25412 ;;		Nothing
 25413 ;; This function is called by:
 25414 ;;		_UART1_Initialize
 25415 ;;		_UART1_tx_vect_isr
 25416 ;; This function uses a reentrant model
 25417 ;;
 25418                           
 25419                           	psect	text133
 25420  017FA4                     __ptext133:
 25421                           	opt callstack 0
 25422  017FA4                     _UART1_Transmit_ISR:
 25423                           	opt callstack 13
 25424                           
 25425                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25426                           
 25427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25428                           ;incstack = 0
 25429  017FA4  0E40               	movlw	64
 25430  017FA6  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25431  017FA8  D010               	goto	l581
 25432                           
 25433                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25434  017FAA  0E40               	movlw	low _uart1TxBuffer
 25435  017FAC  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25436  017FAE  6ED9               	movwf	fsr2l,c
 25437  017FB0  6ADA               	clrf	fsr2h,c
 25438  017FB2  0E03               	movlw	high _uart1TxBuffer
 25439  017FB4  22DA               	addwfc	fsr2h,f,c
 25440  017FB6  50DF               	movf	indf2,w,c
 25441  017FB8  013D               	movlb	61	; () banked
 25442  017FBA  6FEA               	movwf	234,b	;volatile
 25443                           
 25444                           ; BSR set to: 61
 25445  017FBC  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25446                           
 25447                           ; BSR set to: 61
 25448                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25449  017FBE  0E3F               	movlw	63
 25450  017FC0  6430               	cpfsgt	_uart1TxTail^0,c
 25451  017FC2  D001               	goto	l8715
 25452                           
 25453                           ; BSR set to: 61
 25454                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25455  017FC4  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25456  017FC6                     l8715:
 25457                           
 25458                           ; BSR set to: 61
 25459                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25460  017FC6  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25461                           
 25462                           ;mcc_generated_files/uart1.c: 222:  } else {
 25463  017FC8  0012               	return	
 25464  017FCA                     l581:
 25465                           
 25466                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25467  017FCA  0139               	movlb	57	; () banked
 25468  017FCC  9993               	bcf	147,4,b	;volatile
 25469                           
 25470                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25471  017FCE  0012               	return		;funcret
 25472  017FD0                     __end_of_UART1_Transmit_ISR:
 25473                           	opt callstack 0
 25474                           
 25475 ;; *************** function _UART1_rx_vect_isr *****************
 25476 ;; Defined at:
 25477 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25478 ;; Parameters:    Size  Location     Type
 25479 ;;		None
 25480 ;; Auto vars:     Size  Location     Type
 25481 ;;		None
 25482 ;; Return value:  Size  Location     Type
 25483 ;;                  1    wreg      void 
 25484 ;; Registers used:
 25485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25486 ;; Tracked objects:
 25487 ;;		On entry : 0/0
 25488 ;;		On exit  : 0/0
 25489 ;;		Unchanged: 0/0
 25490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25495 ;;Total ram usage:        0 bytes
 25496 ;; Hardware stack levels used:    1
 25497 ;; Hardware stack levels required when called:    1
 25498 ;; This function calls:
 25499 ;;		Absolute function
 25500 ;;		_UART1_Receive_ISR
 25501 ;; This function is called by:
 25502 ;;		Interrupt level 2
 25503 ;; This function uses a non-reentrant model
 25504 ;;
 25505                           
 25506                           	psect	text134
 25507  0182AC                     __ptext134:
 25508                           	opt callstack 0
 25509  0182AC                     _UART1_rx_vect_isr:
 25510                           	opt callstack 13
 25511                           
 25512                           ;incstack = 0
 25513  0182AC  EE14  F000         	lfsr	1,___inthi_sp
 25514                           
 25515                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25516  0182B0  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25517  0182B2  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25518  0182B4  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25519  0182B6  B4D8               	btfsc	status,2,c
 25520  0182B8  0011               	retfie		f
 25521                           
 25522                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25523  0182BA  D801               	call	i2u861_48
 25524  0182BC  0011               	retfie		f
 25525  0182BE                     i2u861_48:
 25526  0182BE  0005               	push	
 25527  0182C0  6EFA               	movwf	pclath,c
 25528  0182C2  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25529  0182C4  6EFD               	movwf	tosl,c
 25530  0182C6  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25531  0182C8  6EFE               	movwf	tosh,c
 25532  0182CA  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25533  0182CC  6EFF               	movwf	tosu,c
 25534  0182CE  50FA               	movf	pclath,w,c
 25535  0182D0  0012               	return		;indir
 25536  0182D2                     __end_of_UART1_rx_vect_isr:
 25537                           	opt callstack 0
 25538                           
 25539 ;; *************** function _UART1_Receive_ISR *****************
 25540 ;; Defined at:
 25541 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25542 ;; Parameters:    Size  Location     Type
 25543 ;;		None
 25544 ;; Auto vars:     Size  Location     Type
 25545 ;;		None
 25546 ;; Return value:  Size  Location     Type
 25547 ;;                  1  [STACK] void 
 25548 ;; Registers used:
 25549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25550 ;; Tracked objects:
 25551 ;;		On entry : 0/0
 25552 ;;		On exit  : 0/0
 25553 ;;		Unchanged: 0/0
 25554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25559 ;;Total ram usage:        0 bytes
 25560 ;; Hardware stack levels used:    1
 25561 ;; This function calls:
 25562 ;;		Nothing
 25563 ;; This function is called by:
 25564 ;;		_UART1_Initialize
 25565 ;;		_UART1_rx_vect_isr
 25566 ;; This function uses a reentrant model
 25567 ;;
 25568                           
 25569                           	psect	text135
 25570  01844C                     __ptext135:
 25571                           	opt callstack 0
 25572  01844C                     _UART1_Receive_ISR:
 25573                           	opt callstack 13
 25574                           
 25575                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25576                           
 25577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25578                           ;incstack = 0
 25579  01844C  0E00               	movlw	low _uart1RxBuffer
 25580  01844E  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25581  018450  6ED9               	movwf	fsr2l,c
 25582  018452  6ADA               	clrf	fsr2h,c
 25583  018454  0E06               	movlw	high _uart1RxBuffer
 25584  018456  22DA               	addwfc	fsr2h,f,c
 25585  018458  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25586  01845E  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25587                           
 25588                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25589  018460  282E               	incf	_uart1RxHead^0,w,c
 25590  018462  B4D8               	btfsc	status,2,c
 25591                           
 25592                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25593  018464  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25594                           
 25595                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25596  018466  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25597                           
 25598                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25599  018468  0012               	return		;funcret
 25600  01846A                     __end_of_UART1_Receive_ISR:
 25601                           	opt callstack 0
 25602                           
 25603 ;; *************** function _UART2_tx_vect_isr *****************
 25604 ;; Defined at:
 25605 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25606 ;; Parameters:    Size  Location     Type
 25607 ;;		None
 25608 ;; Auto vars:     Size  Location     Type
 25609 ;;		None
 25610 ;; Return value:  Size  Location     Type
 25611 ;;                  1    wreg      void 
 25612 ;; Registers used:
 25613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25614 ;; Tracked objects:
 25615 ;;		On entry : 0/0
 25616 ;;		On exit  : 0/0
 25617 ;;		Unchanged: 0/0
 25618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25623 ;;Total ram usage:        0 bytes
 25624 ;; Hardware stack levels used:    1
 25625 ;; Hardware stack levels required when called:    1
 25626 ;; This function calls:
 25627 ;;		Absolute function
 25628 ;;		_UART2_Transmit_ISR
 25629 ;; This function is called by:
 25630 ;;		Interrupt level 2
 25631 ;; This function uses a non-reentrant model
 25632 ;;
 25633                           
 25634                           	psect	text136
 25635  0182D4                     __ptext136:
 25636                           	opt callstack 0
 25637  0182D4                     _UART2_tx_vect_isr:
 25638                           	opt callstack 13
 25639                           
 25640                           ;incstack = 0
 25641  0182D4  EE14  F000         	lfsr	1,___inthi_sp
 25642                           
 25643                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25644  0182D8  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25645  0182DA  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25646  0182DC  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25647  0182DE  B4D8               	btfsc	status,2,c
 25648  0182E0  0011               	retfie		f
 25649                           
 25650                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25651  0182E2  D801               	call	i2u863_48
 25652  0182E4  0011               	retfie		f
 25653  0182E6                     i2u863_48:
 25654  0182E6  0005               	push	
 25655  0182E8  6EFA               	movwf	pclath,c
 25656  0182EA  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25657  0182EC  6EFD               	movwf	tosl,c
 25658  0182EE  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25659  0182F0  6EFE               	movwf	tosh,c
 25660  0182F2  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25661  0182F4  6EFF               	movwf	tosu,c
 25662  0182F6  50FA               	movf	pclath,w,c
 25663  0182F8  0012               	return		;indir
 25664  0182FA                     __end_of_UART2_tx_vect_isr:
 25665                           	opt callstack 0
 25666                           
 25667 ;; *************** function _UART2_Transmit_ISR *****************
 25668 ;; Defined at:
 25669 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25670 ;; Parameters:    Size  Location     Type
 25671 ;;		None
 25672 ;; Auto vars:     Size  Location     Type
 25673 ;;		None
 25674 ;; Return value:  Size  Location     Type
 25675 ;;                  1  [STACK] void 
 25676 ;; Registers used:
 25677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25678 ;; Tracked objects:
 25679 ;;		On entry : 0/0
 25680 ;;		On exit  : 3B/39
 25681 ;;		Unchanged: 0/0
 25682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25687 ;;Total ram usage:        0 bytes
 25688 ;; Hardware stack levels used:    1
 25689 ;; This function calls:
 25690 ;;		Nothing
 25691 ;; This function is called by:
 25692 ;;		_UART2_Initialize
 25693 ;;		_UART2_tx_vect_isr
 25694 ;; This function uses a reentrant model
 25695 ;;
 25696                           
 25697                           	psect	text137
 25698  017FD0                     __ptext137:
 25699                           	opt callstack 0
 25700  017FD0                     _UART2_Transmit_ISR:
 25701                           	opt callstack 13
 25702                           
 25703                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25704                           
 25705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25706                           ;incstack = 0
 25707  017FD0  0E40               	movlw	64
 25708  017FD2  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25709  017FD4  D010               	goto	l701
 25710                           
 25711                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25712  017FD6  0E00               	movlw	low _uart2TxBuffer
 25713  017FD8  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25714  017FDA  6ED9               	movwf	fsr2l,c
 25715  017FDC  6ADA               	clrf	fsr2h,c
 25716  017FDE  0E03               	movlw	high _uart2TxBuffer
 25717  017FE0  22DA               	addwfc	fsr2h,f,c
 25718  017FE2  50DF               	movf	indf2,w,c
 25719  017FE4  013D               	movlb	61	; () banked
 25720  017FE6  6FD2               	movwf	210,b	;volatile
 25721                           
 25722                           ; BSR set to: 61
 25723  017FE8  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25724                           
 25725                           ; BSR set to: 61
 25726                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25727  017FEA  0E3F               	movlw	63
 25728  017FEC  642A               	cpfsgt	_uart2TxTail^0,c
 25729  017FEE  D001               	goto	l8737
 25730                           
 25731                           ; BSR set to: 61
 25732                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25733  017FF0  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 25734  017FF2                     l8737:
 25735                           
 25736                           ; BSR set to: 61
 25737                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25738  017FF2  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25739                           
 25740                           ;mcc_generated_files/uart2.c: 224:     }
 25741  017FF4  0012               	return	
 25742  017FF6                     l701:
 25743                           
 25744                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25745  017FF6  0139               	movlb	57	; () banked
 25746  017FF8  9796               	bcf	150,3,b	;volatile
 25747                           
 25748                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25749  017FFA  0012               	return		;funcret
 25750  017FFC                     __end_of_UART2_Transmit_ISR:
 25751                           	opt callstack 0
 25752                           
 25753 ;; *************** function _UART2_rx_vect_isr *****************
 25754 ;; Defined at:
 25755 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25756 ;; Parameters:    Size  Location     Type
 25757 ;;		None
 25758 ;; Auto vars:     Size  Location     Type
 25759 ;;		None
 25760 ;; Return value:  Size  Location     Type
 25761 ;;                  1    wreg      void 
 25762 ;; Registers used:
 25763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25764 ;; Tracked objects:
 25765 ;;		On entry : 0/0
 25766 ;;		On exit  : 0/0
 25767 ;;		Unchanged: 0/0
 25768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;Total ram usage:        0 bytes
 25774 ;; Hardware stack levels used:    1
 25775 ;; Hardware stack levels required when called:    1
 25776 ;; This function calls:
 25777 ;;		Absolute function
 25778 ;;		_UART2_Receive_ISR
 25779 ;; This function is called by:
 25780 ;;		Interrupt level 2
 25781 ;; This function uses a non-reentrant model
 25782 ;;
 25783                           
 25784                           	psect	text138
 25785  0182FC                     __ptext138:
 25786                           	opt callstack 0
 25787  0182FC                     _UART2_rx_vect_isr:
 25788                           	opt callstack 13
 25789                           
 25790                           ;incstack = 0
 25791  0182FC  EE14  F000         	lfsr	1,___inthi_sp
 25792                           
 25793                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25794  018300  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25795  018302  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 25796  018304  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25797  018306  B4D8               	btfsc	status,2,c
 25798  018308  0011               	retfie		f
 25799                           
 25800                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25801  01830A  D801               	call	i2u865_48
 25802  01830C  0011               	retfie		f
 25803  01830E                     i2u865_48:
 25804  01830E  0005               	push	
 25805  018310  6EFA               	movwf	pclath,c
 25806  018312  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25807  018314  6EFD               	movwf	tosl,c
 25808  018316  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25809  018318  6EFE               	movwf	tosh,c
 25810  01831A  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25811  01831C  6EFF               	movwf	tosu,c
 25812  01831E  50FA               	movf	pclath,w,c
 25813  018320  0012               	return		;indir
 25814  018322                     __end_of_UART2_rx_vect_isr:
 25815                           	opt callstack 0
 25816                           
 25817 ;; *************** function _UART2_Receive_ISR *****************
 25818 ;; Defined at:
 25819 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25820 ;; Parameters:    Size  Location     Type
 25821 ;;		None
 25822 ;; Auto vars:     Size  Location     Type
 25823 ;;		None
 25824 ;; Return value:  Size  Location     Type
 25825 ;;                  1  [STACK] void 
 25826 ;; Registers used:
 25827 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25828 ;; Tracked objects:
 25829 ;;		On entry : 0/0
 25830 ;;		On exit  : 0/0
 25831 ;;		Unchanged: 0/0
 25832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25837 ;;Total ram usage:        0 bytes
 25838 ;; Hardware stack levels used:    1
 25839 ;; This function calls:
 25840 ;;		Nothing
 25841 ;; This function is called by:
 25842 ;;		_UART2_Initialize
 25843 ;;		_UART2_rx_vect_isr
 25844 ;; This function uses a reentrant model
 25845 ;;
 25846                           
 25847                           	psect	text139
 25848  01846A                     __ptext139:
 25849                           	opt callstack 0
 25850  01846A                     _UART2_Receive_ISR:
 25851                           	opt callstack 13
 25852                           
 25853                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25854                           
 25855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25856                           ;incstack = 0
 25857  01846A  0E00               	movlw	low _uart2RxBuffer
 25858  01846C  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 25859  01846E  6ED9               	movwf	fsr2l,c
 25860  018470  6ADA               	clrf	fsr2h,c
 25861  018472  0E07               	movlw	high _uart2RxBuffer
 25862  018474  22DA               	addwfc	fsr2h,f,c
 25863  018476  006F F743 FFDF     	movff	15824,indf2	;volatile
 25864  01847C  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 25865                           
 25866                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25867  01847E  2828               	incf	_uart2RxHead^0,w,c
 25868  018480  B4D8               	btfsc	status,2,c
 25869                           
 25870                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25871  018482  6A28               	clrf	_uart2RxHead^0,c	;volatile
 25872                           
 25873                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25874  018484  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 25875                           
 25876                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25877  018486  0012               	return		;funcret
 25878  018488                     __end_of_UART2_Receive_ISR:
 25879                           	opt callstack 0
 25880                           
 25881 ;; *************** function _TMR6_ISR *****************
 25882 ;; Defined at:
 25883 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25884 ;; Parameters:    Size  Location     Type
 25885 ;;		None
 25886 ;; Auto vars:     Size  Location     Type
 25887 ;;		None
 25888 ;; Return value:  Size  Location     Type
 25889 ;;                  1    wreg      void 
 25890 ;; Registers used:
 25891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25892 ;; Tracked objects:
 25893 ;;		On entry : 0/0
 25894 ;;		On exit  : 0/0
 25895 ;;		Unchanged: 0/0
 25896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25901 ;;Total ram usage:        1 bytes
 25902 ;; Hardware stack levels used:    1
 25903 ;; Hardware stack levels required when called:    2
 25904 ;; This function calls:
 25905 ;;		_TMR6_CallBack
 25906 ;; This function is called by:
 25907 ;;		Interrupt level 2
 25908 ;; This function uses a non-reentrant model
 25909 ;;
 25910                           
 25911                           	psect	text140
 25912  0184DC                     __ptext140:
 25913                           	opt callstack 0
 25914  0184DC                     _TMR6_ISR:
 25915                           	opt callstack 12
 25916                           
 25917                           ;incstack = 0
 25918  0184DC  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 25919  0184E2  EE14  F000         	lfsr	1,___inthi_sp
 25920                           
 25921                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25922  0184E6  0139               	movlb	57	; () banked
 25923  0184E8  91A9               	bcf	169,0,b	;volatile
 25924                           
 25925                           ; BSR set to: 57
 25926                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25927  0184EA  ECB5  F0C1         	call	_TMR6_CallBack	;wreg free
 25928  0184EE  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 25929  0184F4  0011               	retfie		f
 25930  0184F6                     __end_of_TMR6_ISR:
 25931                           	opt callstack 0
 25932                           
 25933 ;; *************** function _TMR6_CallBack *****************
 25934 ;; Defined at:
 25935 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25936 ;; Parameters:    Size  Location     Type
 25937 ;;		None
 25938 ;; Auto vars:     Size  Location     Type
 25939 ;;		None
 25940 ;; Return value:  Size  Location     Type
 25941 ;;                  1  [STACK] void 
 25942 ;; Registers used:
 25943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25944 ;; Tracked objects:
 25945 ;;		On entry : 3F/39
 25946 ;;		On exit  : 0/0
 25947 ;;		Unchanged: 0/0
 25948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25953 ;;Total ram usage:        0 bytes
 25954 ;; Hardware stack levels used:    1
 25955 ;; Hardware stack levels required when called:    1
 25956 ;; This function calls:
 25957 ;;		Absolute function
 25958 ;;		_TMR6_DefaultInterruptHandler
 25959 ;; This function is called by:
 25960 ;;		_TMR6_ISR
 25961 ;; This function uses a reentrant model
 25962 ;;
 25963                           
 25964                           	psect	text141
 25965  01836A                     __ptext141:
 25966                           	opt callstack 0
 25967  01836A                     _TMR6_CallBack:
 25968                           	opt callstack 12
 25969                           
 25970                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25971                           
 25972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25973                           ;incstack = 0
 25974  01836A  0100               	movlb	0	; () banked
 25975  01836C  519B               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25976  01836E  119C               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25977  018370  119D               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25978  018372  B4D8               	btfsc	status,2,c
 25979  018374  0012               	return	
 25980                           
 25981                           ; BSR set to: 0
 25982                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 25983  018376  D801               	call	u838_48
 25984  018378  0012               	return	
 25985  01837A                     u838_48:
 25986  01837A  0005               	push	
 25987  01837C  6EFA               	movwf	pclath,c
 25988  01837E  519B               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25989  018380  6EFD               	movwf	tosl,c
 25990  018382  519C               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25991  018384  6EFE               	movwf	tosh,c
 25992  018386  519D               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25993  018388  6EFF               	movwf	tosu,c
 25994  01838A  50FA               	movf	pclath,w,c
 25995  01838C  0012               	return		;indir
 25996  01838E                     __end_of_TMR6_CallBack:
 25997                           	opt callstack 0
 25998                           
 25999 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26000 ;; Defined at:
 26001 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26002 ;; Parameters:    Size  Location     Type
 26003 ;;		None
 26004 ;; Auto vars:     Size  Location     Type
 26005 ;;  i               1  [STACK] unsigned char 
 26006 ;; Return value:  Size  Location     Type
 26007 ;;                  1  [STACK] void 
 26008 ;; Registers used:
 26009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26010 ;; Tracked objects:
 26011 ;;		On entry : 3F/0
 26012 ;;		On exit  : 0/0
 26013 ;;		Unchanged: 0/0
 26014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26019 ;;Total ram usage:        0 bytes
 26020 ;; Hardware stack levels used:    1
 26021 ;; This function calls:
 26022 ;;		Nothing
 26023 ;; This function is called by:
 26024 ;;		_TMR6_Initialize
 26025 ;;		_TMR6_CallBack
 26026 ;; This function uses a reentrant model
 26027 ;;
 26028                           
 26029                           	psect	text142
 26030  017BE8                     __ptext142:
 26031                           	opt callstack 0
 26032  017BE8                     _TMR6_DefaultInterruptHandler:
 26033                           	opt callstack 0
 26034                           
 26035                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26036  017BE8  52E6               	movf	postinc1,f,c
 26037                           
 26038                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26039                           ;stkvar	_i @ sp[(-1)+0]
 26040                           
 26041                           ;incstack = 0
 26042  017BEA  0EFF               	movlw	-1
 26043  017BEC  6AE3               	clrf	plusw1,c
 26044  017BEE                     l8417:
 26045                           
 26046                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26047                           ;stkvar	_i @ sp[(-1)+0]
 26048  017BEE  0EFF               	movlw	-1
 26049  017BF0  50E3               	movf	plusw1,w,c
 26050  017BF2  0D02               	mullw	2
 26051  017BF4  50F3               	movf	243,w,c
 26052  017BF6  0F60               	addlw	low _tickCount
 26053  017BF8  6ED9               	movwf	fsr2l,c
 26054  017BFA  6ADA               	clrf	fsr2h,c
 26055  017BFC  50DE               	movf	postinc2,w,c
 26056  017BFE  10DE               	iorwf	postinc2,w,c
 26057  017C00  B4D8               	btfsc	status,2,c
 26058  017C02  D00A               	goto	l8421
 26059                           
 26060                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26061                           ;stkvar	_i @ sp[(-1)+0]
 26062  017C04  0EFF               	movlw	-1
 26063  017C06  50E3               	movf	plusw1,w,c
 26064  017C08  0D02               	mullw	2
 26065  017C0A  50F3               	movf	243,w,c
 26066  017C0C  0F60               	addlw	low _tickCount
 26067  017C0E  6ED9               	movwf	fsr2l,c
 26068  017C10  6ADA               	clrf	fsr2h,c
 26069  017C12  06DE               	decf	postinc2,f,c
 26070  017C14  0E00               	movlw	0
 26071  017C16  5ADD               	subwfb	postdec2,f,c
 26072  017C18                     l8421:
 26073                           
 26074                           ;mcc_generated_files/tmr6.c: 207:  }
 26075                           ;stkvar	_i @ sp[(-1)+0]
 26076  017C18  0EFF               	movlw	-1
 26077  017C1A  2AE3               	incf	plusw1,f,c
 26078                           
 26079                           ;stkvar	_i @ sp[(-1)+0]
 26080  017C1C  0EFF               	movlw	-1
 26081  017C1E  006F FF8C  F032    	movff	plusw1,btemp
 26082  017C24  0E0B               	movlw	11
 26083  017C26  6432               	cpfsgt	btemp^0,c
 26084  017C28  D7E2               	goto	l8417
 26085                           
 26086                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26087  017C2A  52E5               	movf	postdec1,f,c
 26088  017C2C  0012               	return		;funcret
 26089  017C2E                     __end_of_TMR6_DefaultInterruptHandler:
 26090                           	opt callstack 0
 26091                           
 26092 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26093 ;; Defined at:
 26094 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26095 ;; Parameters:    Size  Location     Type
 26096 ;;		None
 26097 ;; Auto vars:     Size  Location     Type
 26098 ;;		None
 26099 ;; Return value:  Size  Location     Type
 26100 ;;                  1    wreg      void 
 26101 ;; Registers used:
 26102 ;;		None
 26103 ;; Tracked objects:
 26104 ;;		On entry : 0/0
 26105 ;;		On exit  : 3F/0
 26106 ;;		Unchanged: 0/0
 26107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26112 ;;Total ram usage:        0 bytes
 26113 ;; Hardware stack levels used:    1
 26114 ;; This function calls:
 26115 ;;		Nothing
 26116 ;; This function is called by:
 26117 ;;		Interrupt level 2
 26118 ;; This function uses a non-reentrant model
 26119 ;;
 26120                           
 26121                           	psect	text143
 26122  0185CC                     __ptext143:
 26123                           	opt callstack 0
 26124  0185CC                     _DMA1_DMASCNT_ISR:
 26125                           	opt callstack 14
 26126                           
 26127                           ;incstack = 0
 26128  0185CC  EE14  F000         	lfsr	1,___inthi_sp
 26129                           
 26130                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26131  0185D0  0139               	movlb	57	; () banked
 26132  0185D2  91A2               	bcf	162,0,b	;volatile
 26133                           
 26134                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26135  0185D4  0100               	movlb	0	; () banked
 26136  0185D6  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 26137                           
 26138                           ; BSR set to: 0
 26139  0185D8  0011               	retfie		f
 26140  0185DA                     __end_of_DMA1_DMASCNT_ISR:
 26141                           	opt callstack 0
 26142                           
 26143 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26144 ;; Defined at:
 26145 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26146 ;; Parameters:    Size  Location     Type
 26147 ;;		None
 26148 ;; Auto vars:     Size  Location     Type
 26149 ;;		None
 26150 ;; Return value:  Size  Location     Type
 26151 ;;                  1    wreg      void 
 26152 ;; Registers used:
 26153 ;;		None
 26154 ;; Tracked objects:
 26155 ;;		On entry : 0/0
 26156 ;;		On exit  : 3F/39
 26157 ;;		Unchanged: 0/0
 26158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;Total ram usage:        0 bytes
 26164 ;; Hardware stack levels used:    1
 26165 ;; This function calls:
 26166 ;;		Nothing
 26167 ;; This function is called by:
 26168 ;;		Interrupt level 2
 26169 ;; This function uses a non-reentrant model
 26170 ;;
 26171                           
 26172                           	psect	text144
 26173  0185E4                     __ptext144:
 26174                           	opt callstack 0
 26175  0185E4                     _DMA1_DMADCNT_ISR:
 26176                           	opt callstack 14
 26177                           
 26178                           ; BSR set to: 0
 26179                           ;incstack = 0
 26180  0185E4  EE14  F000         	lfsr	1,___inthi_sp
 26181                           
 26182                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26183  0185E8  0139               	movlb	57	; () banked
 26184  0185EA  93A2               	bcf	162,1,b	;volatile
 26185                           
 26186                           ; BSR set to: 57
 26187  0185EC  0011               	retfie		f
 26188  0185EE                     __end_of_DMA1_DMADCNT_ISR:
 26189                           	opt callstack 0
 26190                           
 26191 ;; *************** function _DMA1_DMAA_ISR *****************
 26192 ;; Defined at:
 26193 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26194 ;; Parameters:    Size  Location     Type
 26195 ;;		None
 26196 ;; Auto vars:     Size  Location     Type
 26197 ;;		None
 26198 ;; Return value:  Size  Location     Type
 26199 ;;                  1    wreg      void 
 26200 ;; Registers used:
 26201 ;;		None
 26202 ;; Tracked objects:
 26203 ;;		On entry : 0/0
 26204 ;;		On exit  : 3F/39
 26205 ;;		Unchanged: 0/0
 26206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26211 ;;Total ram usage:        0 bytes
 26212 ;; Hardware stack levels used:    1
 26213 ;; This function calls:
 26214 ;;		Nothing
 26215 ;; This function is called by:
 26216 ;;		Interrupt level 2
 26217 ;; This function uses a non-reentrant model
 26218 ;;
 26219                           
 26220                           	psect	text145
 26221  0185F0                     __ptext145:
 26222                           	opt callstack 0
 26223  0185F0                     _DMA1_DMAA_ISR:
 26224                           	opt callstack 14
 26225                           
 26226                           ; BSR set to: 57
 26227                           ;incstack = 0
 26228  0185F0  EE14  F000         	lfsr	1,___inthi_sp
 26229                           
 26230                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26231  0185F4  0139               	movlb	57	; () banked
 26232  0185F6  97A2               	bcf	162,3,b	;volatile
 26233                           
 26234                           ; BSR set to: 57
 26235  0185F8  0011               	retfie		f
 26236  0185FA                     __end_of_DMA1_DMAA_ISR:
 26237                           	opt callstack 0
 26238                           
 26239 ;; *************** function _DMA1_DMAOR_ISR *****************
 26240 ;; Defined at:
 26241 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26242 ;; Parameters:    Size  Location     Type
 26243 ;;		None
 26244 ;; Auto vars:     Size  Location     Type
 26245 ;;		None
 26246 ;; Return value:  Size  Location     Type
 26247 ;;                  1    wreg      void 
 26248 ;; Registers used:
 26249 ;;		None
 26250 ;; Tracked objects:
 26251 ;;		On entry : 0/0
 26252 ;;		On exit  : 3F/39
 26253 ;;		Unchanged: 0/0
 26254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26259 ;;Total ram usage:        0 bytes
 26260 ;; Hardware stack levels used:    1
 26261 ;; This function calls:
 26262 ;;		Nothing
 26263 ;; This function is called by:
 26264 ;;		Interrupt level 2
 26265 ;; This function uses a non-reentrant model
 26266 ;;
 26267                           
 26268                           	psect	text146
 26269  0185FC                     __ptext146:
 26270                           	opt callstack 0
 26271  0185FC                     _DMA1_DMAOR_ISR:
 26272                           	opt callstack 14
 26273                           
 26274                           ; BSR set to: 57
 26275                           ;incstack = 0
 26276  0185FC  EE14  F000         	lfsr	1,___inthi_sp
 26277                           
 26278                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26279  018600  0139               	movlb	57	; () banked
 26280  018602  95A2               	bcf	162,2,b	;volatile
 26281                           
 26282                           ; BSR set to: 57
 26283  018604  0011               	retfie		f
 26284  018606                     __end_of_DMA1_DMAOR_ISR:
 26285                           	opt callstack 0
 26286                           
 26287                           ;
 26288                           ; Interrupt Vector Table @ 0x8
 26289                           ;
 26290                           
 26291                           	psect	ivt0x8
 26292  000008                     __pivt0x8:
 26293                           	opt callstack 0
 26294  000008                     ivt0x8_base:
 26295                           	opt callstack 0
 26296                           
 26297                           ; Vector 0 : SWINT
 26298  000008  6192               	dw	_Default_ISR shr (0+2)
 26299                           
 26300                           ; Vector 1 : HLVD
 26301  00000A  6192               	dw	_Default_ISR shr (0+2)
 26302                           
 26303                           ; Vector 2 : OSF
 26304  00000C  6192               	dw	_Default_ISR shr (0+2)
 26305                           
 26306                           ; Vector 3 : CSW
 26307  00000E  6192               	dw	_Default_ISR shr (0+2)
 26308                           
 26309                           ; Vector 4 : NVM
 26310  000010  6192               	dw	_Default_ISR shr (0+2)
 26311                           
 26312                           ; Vector 5 : SCAN
 26313  000012  6192               	dw	_Default_ISR shr (0+2)
 26314                           
 26315                           ; Vector 6 : CRC
 26316  000014  6192               	dw	_Default_ISR shr (0+2)
 26317                           
 26318                           ; Vector 7 : IOC
 26319  000016  6192               	dw	_Default_ISR shr (0+2)
 26320                           
 26321                           ; Vector 8 : INT0
 26322  000018  616F               	dw	_INT0_ISR shr (0+2)
 26323                           
 26324                           ; Vector 9 : ZCD
 26325  00001A  6192               	dw	_Default_ISR shr (0+2)
 26326                           
 26327                           ; Vector 10 : AD
 26328  00001C  600A               	dw	_ADCC_ISR shr (0+2)
 26329                           
 26330                           ; Vector 11 : ADT
 26331  00001E  5D87               	dw	_ADCC_ThresholdISR shr (0+2)
 26332                           
 26333                           ; Vector 12 : CMP1
 26334  000020  6192               	dw	_Default_ISR shr (0+2)
 26335                           
 26336                           ; Vector 13 : SMT1
 26337  000022  6192               	dw	_Default_ISR shr (0+2)
 26338                           
 26339                           ; Vector 14 : SMT1PRA
 26340  000024  6192               	dw	_Default_ISR shr (0+2)
 26341                           
 26342                           ; Vector 15 : SMT1PRW
 26343  000026  6192               	dw	_Default_ISR shr (0+2)
 26344                           
 26345                           ; Vector 16 : DMA1SCNT
 26346  000028  6173               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26347                           
 26348                           ; Vector 17 : DMA1DCNT
 26349  00002A  6179               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26350                           
 26351                           ; Vector 18 : DMA1OR
 26352  00002C  617F               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26353                           
 26354                           ; Vector 19 : DMA1A
 26355  00002E  617C               	dw	_DMA1_DMAA_ISR shr (0+2)
 26356                           
 26357                           ; Vector 20 : SPI1RX
 26358  000030  6192               	dw	_Default_ISR shr (0+2)
 26359                           
 26360                           ; Vector 21 : SPI1TX
 26361  000032  6192               	dw	_Default_ISR shr (0+2)
 26362                           
 26363                           ; Vector 22 : SPI1
 26364  000034  6192               	dw	_Default_ISR shr (0+2)
 26365                           
 26366                           ; Vector 23 : I2C1RX
 26367  000036  6192               	dw	_Default_ISR shr (0+2)
 26368                           
 26369                           ; Vector 24 : I2C1TX
 26370  000038  6192               	dw	_Default_ISR shr (0+2)
 26371                           
 26372                           ; Vector 25 : I2C1
 26373  00003A  6192               	dw	_Default_ISR shr (0+2)
 26374                           
 26375                           ; Vector 26 : I2C1E
 26376  00003C  6192               	dw	_Default_ISR shr (0+2)
 26377                           
 26378                           ; Vector 27 : U1RX
 26379  00003E  60AB               	dw	_UART1_rx_vect_isr shr (0+2)
 26380                           
 26381                           ; Vector 28 : U1TX
 26382  000040  60A1               	dw	_UART1_tx_vect_isr shr (0+2)
 26383                           
 26384                           ; Vector 29 : U1E
 26385  000042  6192               	dw	_Default_ISR shr (0+2)
 26386                           
 26387                           ; Vector 30 : U1
 26388  000044  6192               	dw	_Default_ISR shr (0+2)
 26389                           
 26390                           ; Vector 31 : TMR0
 26391  000046  6192               	dw	_Default_ISR shr (0+2)
 26392                           
 26393                           ; Vector 32 : TMR1
 26394  000048  6192               	dw	_Default_ISR shr (0+2)
 26395                           
 26396                           ; Vector 33 : TMR1G
 26397  00004A  6192               	dw	_Default_ISR shr (0+2)
 26398                           
 26399                           ; Vector 34 : TMR2
 26400  00004C  6192               	dw	_Default_ISR shr (0+2)
 26401                           
 26402                           ; Vector 35 : CCP1
 26403  00004E  6192               	dw	_Default_ISR shr (0+2)
 26404                           
 26405                           ; Vector 36 : Undefined
 26406  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26407                           
 26408                           ; Vector 37 : NCO1
 26409  000052  6192               	dw	_Default_ISR shr (0+2)
 26410                           
 26411                           ; Vector 38 : CWG1
 26412  000054  6192               	dw	_Default_ISR shr (0+2)
 26413                           
 26414                           ; Vector 39 : CLC1
 26415  000056  6192               	dw	_Default_ISR shr (0+2)
 26416                           
 26417                           ; Vector 40 : INT1
 26418  000058  5F4D               	dw	_INT1_ISR shr (0+2)
 26419                           
 26420                           ; Vector 41 : CMP2
 26421  00005A  6192               	dw	_Default_ISR shr (0+2)
 26422                           
 26423                           ; Vector 42 : DMA2SCNT
 26424  00005C  6192               	dw	_Default_ISR shr (0+2)
 26425                           
 26426                           ; Vector 43 : DMA2DCNT
 26427  00005E  6192               	dw	_Default_ISR shr (0+2)
 26428                           
 26429                           ; Vector 44 : DMA2OR
 26430  000060  6192               	dw	_Default_ISR shr (0+2)
 26431                           
 26432                           ; Vector 45 : DMA2A
 26433  000062  6192               	dw	_Default_ISR shr (0+2)
 26434                           
 26435                           ; Vector 46 : I2C2RX
 26436  000064  6192               	dw	_Default_ISR shr (0+2)
 26437                           
 26438                           ; Vector 47 : I2C2TX
 26439  000066  6192               	dw	_Default_ISR shr (0+2)
 26440                           
 26441                           ; Vector 48 : I2C2
 26442  000068  6192               	dw	_Default_ISR shr (0+2)
 26443                           
 26444                           ; Vector 49 : I2C2E
 26445  00006A  6192               	dw	_Default_ISR shr (0+2)
 26446                           
 26447                           ; Vector 50 : U2RX
 26448  00006C  60BF               	dw	_UART2_rx_vect_isr shr (0+2)
 26449                           
 26450                           ; Vector 51 : U2TX
 26451  00006E  60B5               	dw	_UART2_tx_vect_isr shr (0+2)
 26452                           
 26453                           ; Vector 52 : U2E
 26454  000070  6192               	dw	_Default_ISR shr (0+2)
 26455                           
 26456                           ; Vector 53 : U2
 26457  000072  6192               	dw	_Default_ISR shr (0+2)
 26458                           
 26459                           ; Vector 54 : TMR3
 26460  000074  6192               	dw	_Default_ISR shr (0+2)
 26461                           
 26462                           ; Vector 55 : TMR3G
 26463  000076  6192               	dw	_Default_ISR shr (0+2)
 26464                           
 26465                           ; Vector 56 : TMR4
 26466  000078  6192               	dw	_Default_ISR shr (0+2)
 26467                           
 26468                           ; Vector 57 : CCP2
 26469  00007A  6192               	dw	_Default_ISR shr (0+2)
 26470                           
 26471                           ; Vector 58 : Undefined
 26472  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26473                           
 26474                           ; Vector 59 : CWG2
 26475  00007E  6192               	dw	_Default_ISR shr (0+2)
 26476                           
 26477                           ; Vector 60 : CLC2
 26478  000080  6192               	dw	_Default_ISR shr (0+2)
 26479                           
 26480                           ; Vector 61 : INT2
 26481  000082  6192               	dw	_Default_ISR shr (0+2)
 26482                           
 26483                           ; Vector 62 : Undefined
 26484  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26485                           
 26486                           ; Vector 63 : Undefined
 26487  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26488                           
 26489                           ; Vector 64 : Undefined
 26490  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26491                           
 26492                           ; Vector 65 : Undefined
 26493  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26494                           
 26495                           ; Vector 66 : Undefined
 26496  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26497                           
 26498                           ; Vector 67 : Undefined
 26499  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26500                           
 26501                           ; Vector 68 : Undefined
 26502  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26503                           
 26504                           ; Vector 69 : Undefined
 26505  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26506                           
 26507                           ; Vector 70 : TMR5
 26508  000094  5E35               	dw	_TMR5_ISR shr (0+2)
 26509                           
 26510                           ; Vector 71 : TMR5G
 26511  000096  6192               	dw	_Default_ISR shr (0+2)
 26512                           
 26513                           ; Vector 72 : TMR6
 26514  000098  6137               	dw	_TMR6_ISR shr (0+2)
 26515                           
 26516                           ; Vector 73 : CCP3
 26517  00009A  6192               	dw	_Default_ISR shr (0+2)
 26518                           
 26519                           ; Vector 74 : CWG3
 26520  00009C  6192               	dw	_Default_ISR shr (0+2)
 26521                           
 26522                           ; Vector 75 : CLC3
 26523  00009E  6192               	dw	_Default_ISR shr (0+2)
 26524                           
 26525                           ; Vector 76 : Undefined
 26526  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26527                           
 26528                           ; Vector 77 : Undefined
 26529  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26530                           
 26531                           ; Vector 78 : Undefined
 26532  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26533                           
 26534                           ; Vector 79 : Undefined
 26535  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26536                           
 26537                           ; Vector 80 : CCP4
 26538  0000A8  6192               	dw	_Default_ISR shr (0+2)
 26539                           
 26540                           ; Vector 81 : CLC4
 26541  0000AA  6192               	dw	_Default_ISR shr (0+2)
 26542  0000AC                     ivt0x8_undefint:
 26543                           	opt callstack 0
 26544  0000AC  00FF               	reset	
 26545                           
 26546                           	psect	text147
 26547  000000                     __ptext147:
 26548                           	opt callstack 0
 26549                           
 26550                           	psect	rparam
 26551  0000                     
 26552                           	psect	temp
 26553  000032                     btemp:
 26554                           	opt callstack 0
 26555  000032                     	ds	32
 26556  0000                     wtemp0	set	btemp
 26557  0000                     wtemp1	set	btemp+2
 26558  0000                     wtemp2	set	btemp+4
 26559  0000                     wtemp3	set	btemp+6
 26560  0000                     wtemp4	set	btemp+8
 26561  0000                     wtemp5	set	btemp+10
 26562  0000                     wtemp8	set	btemp+1
 26563  0000                     ttemp0	set	btemp
 26564  0000                     ttemp1	set	btemp+3
 26565  0000                     ttemp2	set	btemp+6
 26566  0000                     ttemp3	set	btemp+9
 26567  0000                     ttemp5	set	btemp+1
 26568  0000                     ttemp6	set	btemp+4
 26569  0000                     ttemp7	set	btemp+8
 26570  0000                     ltemp0	set	btemp
 26571  0000                     ltemp1	set	btemp+4
 26572  0000                     ltemp2	set	btemp+8
 26573  0000                     lltemp0	set	btemp
 26574  0000                     lltemp1	set	btemp+8
 26575  0000                     lltemp2	set	btemp+16
 26576  0000                     lltemp3	set	btemp+24
 26577                           tosu	equ	0x3FFF
 26578                           tosh	equ	0x3FFE
 26579                           tosl	equ	0x3FFD
 26580                           stkptr	equ	0x3FFC
 26581                           pclatu	equ	0x3FFB
 26582                           pclath	equ	0x3FFA
 26583                           pcl	equ	0x3FF9
 26584                           tblptru	equ	0x3FF8
 26585                           tblptrh	equ	0x3FF7
 26586                           tblptrl	equ	0x3FF6
 26587                           tablat	equ	0x3FF5
 26588                           prodh	equ	0x3FF4
 26589                           prodl	equ	0x3FF3
 26590                           indf0	equ	0x3FEF
 26591                           postinc0	equ	0x3FEE
 26592                           postdec0	equ	0x3FED
 26593                           preinc0	equ	0x3FEC
 26594                           plusw0	equ	0x3FEB
 26595                           fsr0h	equ	0x3FEA
 26596                           fsr0l	equ	0x3FE9
 26597                           wreg	equ	0x3FE8
 26598                           indf1	equ	0x3FE7
 26599                           postinc1	equ	0x3FE6
 26600                           postdec1	equ	0x3FE5
 26601                           preinc1	equ	0x3FE4
 26602                           plusw1	equ	0x3FE3
 26603                           fsr1h	equ	0x3FE2
 26604                           fsr1l	equ	0x3FE1
 26605                           bsr	equ	0x3FE0
 26606                           indf2	equ	0x3FDF
 26607                           postinc2	equ	0x3FDE
 26608                           postdec2	equ	0x3FDD
 26609                           preinc2	equ	0x3FDC
 26610                           plusw2	equ	0x3FDB
 26611                           fsr2h	equ	0x3FDA
 26612                           fsr2l	equ	0x3FD9
 26613                           status	equ	0x3FD8


Data Sizes:
    Strings     271
    Constant    144
    Data        291
    BSS         1361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      8     141
    BANK1           256      0     228
    BANK2           256      0     252
    BANK3           256      0     195
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 228
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[228]), 

    a	PTR const unsigned char  size(2) Largest target is 228
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[228]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 228
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[228]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 228
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[228]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4995_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 228
		 -> D(BANK5[218]), V(BANK1[228]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 228
		 -> D(BANK5[218]), V(BANK1[228]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[228]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[228]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[228]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S4012tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 228
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[228]), 

    strPtr	PTR unsigned char  size(2) Largest target is 228
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[228]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  291234
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _check_switches
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_switches                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              4 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _check_switches
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C3      11       76.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E4       7       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      8D       5       88.1%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     682      58        0.0%
DATA                 0      0     682       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 23 17:22:27 2019

                     _SPI1_Exchange8bit 83F2                __end_of_set_display_info 844C  
                                     _C 0200                                       _D 0500  
                                     _P 0094                                       _R 00A6  
                                     _T FE5F                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler 81BA            __end_of_start_switch_handler 83F2  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8636                             __CFG_LVP$ON 000000  
                                   l171 8562                                     l701 7FF6  
                                   l581 7FCA                                     l835 8400  
                                   _GIE 01FE97                                     _abs 7B16  
                                   _pad 6712                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 850E                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 83B0                      _UART1_Transmit_ISR 7FA4  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 838E  
                          __CFG_ZCD$OFF 000000                                    l1028 7CEE  
                                  l2015 1D78                                    l2310 60F4  
                                  l2303 6020                                    l1335 793A  
                                  l1256 3EDC                                    l1248 3D2C  
                                  l1258 3EE2                                    l1551 7DCA  
                                  l1471 6F0C                                    l1608 8448  
                                  l1560 55A8                                    l2337 5F92  
                                  l1490 7DFE                                    l1475 7226  
                                  l1707 5C8A                                    l1564 5704  
                                  l1806 676E                                    l2622 385E  
                                  l1654 32E8                                    l1568 6930  
                                  l2721 5E20                                    l1826 3946  
                                  l1906 0B1A                                    l2299 6E60  
                                  l1862 123A                    _ADCC_StartConversion 857C  
                                  l2760 52AC                                    l2824 65F0  
                                  l1944 4BEE                                    l2729 7B56  
                                  l7001 7AA6                                    l2577 2D5E  
                                  l2658 25A2                                    l6211 296A  
                                  l6131 2642                                    l7011 5E7C  
                                  l1891 066A                                    l2589 2BEE  
                                  l6213 297C                                    l6221 29B6  
                                  l6125 2602                                    l1965 4136  
                                  l2870 5ACA                                    l6311 2CBA  
                                  l6207 294A                                    l6143 26C0  
                                  l6135 2658                                    l6321 2CE6  
                                  l6241 2A64                                    l6217 2986  
                                  l6161 2778                                    l6137 2688  
                                  l2698 5902                                    l6155 2732  
                                  l7035 5F2A                                    l7027 5EFE  
                                  l6333 2D3E                                    l6325 2CFE  
                                  l6261 2B78                                    l6245 2A6E  
                                  l6149 26F2                                    l7037 5F40  
                                  l7029 5F1A                                    l2885 7446  
                                  l8021 57E2                                    l7055 7A78  
                                  l6327 2D0E                                    l6271 2BD2  
                                  l6263 2B9E                                    l6239 2A52  
                                  l6167 279A                                    l6159 2748  
                                  l6423 45CA                                    l8031 584C  
                                  l8023 5800                                    l6097 7088  
                                  l6505 4F90                                    l6281 2C22  
                                  l6249 2AA0                                    l6409 7436  
                                  l8041 5880                                    l8033 5862  
                                  l8017 57BE                                    l8009 5752  
                                  l2898 73C2                                    l6099 70AA  
                                  l6443 4780                                    l8051 58E2  
                                  l8019 57CC                                    l6541 5448  
                                  l6533 539C                                    l6525 5314  
                                  l6701 3842                                    l6613 353A  
                                  l6605 3520                                    l6285 2C2E  
                                  l6197 28D8                                    l6381 5DBE  
                                  l6437 46E8                                    l8029 582E  
                                  l6367 7B46                                    l6631 3600  
                                  l6623 35CA                                    l6295 2C56  
                                  l6279 2C10                                    l6391 5E18  
                                  l6447 47EE                                    l6439 4738  
                                  l9201 6506                                    l6481 4E24  
                                  l6633 3612                                    l6641 366A  
                                  l6561 3344                                    l6385 5DC2  
                                  l6465 73B2                                    l6571 339A  
                                  l6811 23B2                                    l6723 1E18  
                                  l6299 2C5C                                    l8421 7C18  
                                  l7605 529C                                    l9213 7114  
                                  l6493 4EBE                                    l6653 36B4  
                                  l6581 3422                                    l6573 33CA  
                                  l6805 2396                                    l6741 1EE6  
                                  l6725 1E1E                                    l6717 1DD8  
                                  l7621 5994                                    l9223 673E  
                                  l6487 4E78                                    l6671 372A  
                                  l6647 3698                                    l6639 3666  
                                  l6591 3478                                    l6567 3384  
                                  l6815 23D8                                    l6743 1EEC  
                                  l6735 1EA6                                    l6727 1E4E  
                                  l7623 5A00                                    l8417 7BEE  
                                  l9217 7152                                    l9233 67B4  
                                  l9321 3C9E                                    l6913 638E  
                                  l6905 635A                                    l6681 379E  
                                  l6657 36DA                                    l6593 34A8  
                                  l6825 2422                                    l6753 1F3E  
                                  l6745 1F1C                                    l7571 507E  
                                  l9227 6766                                    l9251 730A  
                                  l6667 3724                                    l6587 3462  
                                  l6843 24E2                                    l9243 6C54  
                                  l9403 0406                                    l8611 5B50  
                                  l9237 67FE                                    l9229 6778  
                                  l9317 3C62                                    l6933 6644  
                                  l6925 661A                                    l6693 380A  
                                  l6829 2428                                    l9501 0B12  
                                  l9421 0554                                    l9405 0470  
                                  l8631 6122                                    l7591 5198  
                                  l6951 66F8                                    l6943 66C4  
                                  l6687 37DA                                    l6599 34E6  
                                  l6839 249C                                    l9503 0B34  
                                  l9335 00AC                                    l8535 2D98  
                                  l8607 5B38                                    l8633 6128  
                                  l8641 6144                                    l7585 511E  
                                  l7569 505C                                    l9249 72DE  
                                  l6929 662C                                    l6857 2550  
                                  l6849 250C                                    l9601 10E2  
                                  l9441 05F6                                    l9433 0594  
                                  l9425 057C                                    l9409 04D2  
                                  l8561 30E2                                    l8545 2EE2  
                                  l8715 7FC6                                    l8635 612E  
                                  l8643 6170                                    l7595 5200  
                                  l7587 5136                                    l7579 50F2  
                                  l9283 3980                                    l9275 3936  
                                  l6891 62B4                                    l6699 3832  
                                  l6963 6E2A                                    l6859 256A  
                                  l9443 0602                                    l9427 058E  
                                  l9347 00F0                                    l9355 0146  
                                  l8637 613C                                    l8629 6112  
                                  l7589 515A                                    l6885 6294  
                                  l6981 606E                                    l9517 0C32  
                                  l9365 01EA                                    l9373 0258  
                                  l9701 419C                                    l8557 301A  
                                  l8549 2FE8                                    l8495 7DE0  
                                  l9287 399E                                    l6879 627E  
                                  l6967 6E5E                                    l6959 6DE8  
                                  l6975 5FDE                                    l9463 06F0  
                                  l9383 02FC                                    l9391 032A  
                                  l9367 0216                                    l8575 32B6  
                                  l8583 32C8                                    l8737 7FF2  
                                  l8657 6222                                    l8649 61A8  
                                  l9297 3BB0                                    l6993 60F2  
                                  l6985 60BC                                    l9617 119A  
                                  l9529 0CBA                                    l9537 0D24  
                                  l9545 0D90                                    l9553 0EA2  
                                  l9369 022C                                    l8569 31EE  
                                  l8763 7CD6                                    l7891 833E  
                                  l9459 06B8                                    l7971 7E08  
                                  l8941 7494                                    l9581 0FF0  
                                  l9565 0F3A                                    l9493 0A48  
                                  l9469 077A                                    l9661 4C90  
                                  l9653 4C24                                    l9637 4B70  
                                  l9725 42F2                                    l9709 41FC  
                                  l9733 4378                                    l9901 1D04  
                                  l9813 165C                                    l8935 7484  
                                  l9591 1092                                    l9479 0926  
                                  l9399 0396                                    l9671 4D46  
                                  l9823 16F2                                    l8599 5B0C  
                                  l9657 4C60                                    l8865 74D4  
                                  l9579 0FD6                                    l9675 4D82  
                                  l9667 4D1A                                    l9843 18E8  
                                  l9835 1830                                    l9771 1326  
                                  l9907 1D24                                    l9749 4462  
                                  l9773 1360                                    l9941 49D8  
                                  l8877 7F8A                                    l9695 4160  
                                  l9847 191C                                    l9775 1376  
                                  l9935 496E                                    STR_1 FF62  
                                  STR_2 FFA4                                    l9689 4126  
                                  l9793 14A8                                    l9961 6F3E  
                                  l9929 48B0                                    STR_3 FFE0  
                                  STR_4 FF51                                    l9891 1CA6  
                                  l9867 1A7C                                    l9795 14E2  
                                  l9963 6F7E                                    STR_5 FF73  
                                  STR_6 FFA4                                    l9877 1B2A  
                                  l9797 14F8                                    l9949 4A86  
                                  STR_7 FFE0                                    STR_8 FF40  
                                  STR_9 FFB3                                    l9897 1D00  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5110 4562  
                                  u6000 62E0                                    u5040 5E10  
                                  u5120 45AE                                    u5050 5E12  
                                  u5210 7C66                                    u5035 5DF2  
                                  u5115 4558                                    u6020 637A  
                                  u5220 7C68                                    u5310 4E74  
                                  u5230 7370                                    u4600 291E  
                                  u6200 5E5C                                    u5160 468E  
                                  u5080 73F4                                    u5240 7372  
                                  u5321 4E7E                                    u4601 2918  
                                  u5145 45E8                                    u4450 70D8  
                                  u5330 4EB8                                    u5410 530E  
                                  u6130 6E5A                                    u6210 5E70  
                                  u5146 45EE                                    u5090 73F6  
                                  _T6PR 003F93                                    u5147 45FC  
                                  u5260 7F3E                                    u6300 7A54  
                                  u5340 4EEA                                    u6220 5EAA  
                                  u5180 4766                                    _PMD0 0039C0  
                                  u6205 5E52                                    u5165 4684  
                                  _PMD1 0039C1                                    u5270 7F40  
                                  u6310 7A74                                    u5430 5364  
                                  u6070 6670                                    u4710 2A96  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u5360 4FC8                                    u5440 5396  
                                  u4640 29AE                                    u4480 7F0E  
                                  _PMD4 0039C4                                    u4457 70CA  
                                  u6225 5EA0                                    u5185 475C  
                                  _PMD5 0039C5                                    u5290 4E1E  
                                  u5450 53C8                                    u6090 66E4  
                                  u4810 2C4E                                    u4650 29CE  
                                  u4618 2920                                    u4490 7F10  
                                  _PMD6 0039C6                                    u4715 2A86  
                                  _PMD7 0039C7                                    u5380 501A  
                                  u4645 299E                                    u7310 50EE  
                                  u5470 5480                                    u5710 3778  
                                  u5630 3692                                    u6190 7AA2  
                                  u4750 2BC0                                    u4590 28FE  
                                  u6270 5F48                                    u9000 3C1E  
                                  u5720 37B2                                    u4920 7EDE  
                                  u8104 3002                                    u8105 2FFC  
                                  u7330 5246                                    u5490 54D2  
                                  u9010 3C22                                    u5730 37EE  
                                  u4850 2CAA                                    u6290 5F72  
                                  u7410 5A8C                                    u4930 7EE0  
                                  u5715 3768                                    u7340 5248  
                                  u5820 1F2C                                    u9100 0194  
                                  u8124 30FC                                    u8044 2D82  
                                  u8125 30F6                                    u8045 2D7C  
                                  u9030 3C38                                    u5670 371C  
                                  u4790 2C34                                    u9110 0196  
                                  u8150 3126                                    u4855 2C9A  
                                  u4880 2CCA                                    u8144 311E  
                                  u8064 2DB2                                    u8160 5AEA  
                                  u8145 3118                                    u8065 2DAC  
                                  u5930 2476                                    u5835 20C0  
                                  u4980 7B2A                                    u5940 24B0  
                                  u9220 0562                                    u9140 02A6  
                                  u8084 2DD4                                    u5845 2188  
                                  u8085 2DCE                                    u5950 24F6  
                                  u4990 5D42                                    u9150 02A8  
                                  u9070 00DA                                    u5935 2466  
                                  u5855 2350                                    u5890 241A  
                                  u9250 05C6                                    u4995 5D38  
                                  u7910 7692                                    u9190 050E  
                                  u9520 10B8                                    u9360 0A18  
                                  u9290 0648                                    u8900 389A  
                                  u9540 116E                                    u9460 0EE4  
                                  u9620 4C86                                    u9550 1170  
                                  u9630 4CCC                                    u9710 41F4  
                                  u7870 5876                                    u7935 76C6  
                                  u7936 76C8                                    u7928 7694  
                                  u8920 390A                                    u9720 4248  
                                  u9801 43C4                                    u8770 64FA  
                                  u8850 6CCE                                    u9810 43DA  
                                  u9730 424A                                    _PLLR 01CEE0  
                                  u7795 7CA2                                    u9811 43D8  
                                  u8940 391C                                    u9660 4DA8  
                                  u9820 43EE                                    u9900 13E6  
                                  u9637 4CBE                                    u8790 6576  
                                  u9830 43F2                                    u9750 42A8  
                                  u8960 396C                                    u9760 42AA  
                                  u9680 410C                                    u8857 6CC0  
                                  u8970 3BC4                                    u8890 3898  
                                  u9930 1540                                    u9780 4374  
                                  u9940 1542                                    u8981 3BF4  
                                  u8990 3C0A                                    u9790 4394  
                                  u9950 1568                                    u8991 3C08  
                                  u9880 13BE                                    u9785 4356  
                                  u9890 13C0                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 8052  
                         __CFG_FCMEN$ON 000000                                    _dbuf 02AC  
                                  _atoi 5042                                    _ctoa 72C0  
                                  _main 3CE8                                    _dtoa 3868  
                                  _nanf 77B2                                    _seed 009E  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4B04  
                                  btemp 0032                                    _xtoa 40F2  
                __end_of_check_adc_scan 862E                           ___fpclassifyf 5C94  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 8410                          _check_switches 860E  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 82AC  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 85CA                        __end_of_INT1_ISR 7D72  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 6F14  
         __end_of_OSCILLATOR_Initialize 8568                                   l10013 7014  
                                 l10301 40AC                                   l10221 3D16  
                                 l10047 6848                                   l10313 40E0  
                                 l10225 3D34                                   l10163 5578  
                                 l10227 3D46                                   l10219 3D0E  
                                 l10175 56A0                                   l10271 3F14  
                                 l10291 3F6C                                   l10283 3F48  
                                 l10269 3EE6                                   PRLOCK 0039EF  
                       __end_of___aodiv 5042                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 2D68  
                                 _ADCLK 003EFF                         __end_of___aomod 54F6  
                                 _ADPCH 003EF1                         __end_of___fldiv 3868  
                                 _ADREF 003EFD                         __end_of___awdiv 63A8  
                       __end_of___flneg 7AD0                                   STR_10 FFB3  
                                 STR_11 FF84                                   STR_20 FFCD  
                                 STR_12 FFFB                                   STR_13 FFF8  
                                 STR_21 FF95                                   STR_22 FF95  
                                 STR_23 FF95                                   STR_15 FFC1  
                                 STR_16 FFD7                                   STR_24 FEEF  
                                 STR_33 FF19                                   STR_17 FF1A  
                         __CFG_WDTE$OFF 000000                                   STR_18 FF1A  
                                 STR_42 FFF5                                   STR_34 FFE5  
                                 STR_26 FF2D                                   STR_35 FFED  
                                 STR_19 FFCD                                   STR_27 FF07  
                                 STR_44 FFF5                         __end_of___awmod 6712  
                                 STR_38 FFE9                                   STR_39 FFF1  
                                 _ADRPT 003EEC                         __end_of___flmul 25AC  
                       __end_of___flsub 7B16                         __end_of___fltol 5F9C  
                                 u10000 1746                                   u10030 19D6  
                                 u10040 19D8                                   u10140 4AFA  
                                 u10080 1B7E                                   u10170 6FF4  
                                 u10260 56F0                                   u10270 56F2  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8648                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8284  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 7930  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 84F6  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
                                 _fputc 64D6              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 7C72                                   _fputs 7104  
                       __end_of_isdigit 7F4A                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0052                                   _srand 7E52  
                                 _width 001B                                   _putch 84C0  
                       __end_of_islower 7EEA                         __end_of_isspace 7A88  
              _INT1_SetInterruptHandler 81BA                         __end_of_isupper 7F1A  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0032                                   ltemp1 0036  
                                 ltemp2 003A                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0032                                   ttemp1 0035  
                                 ttemp2 0038                                   ttemp3 003B  
                                 ttemp5 0033                                   ttemp6 0036  
                                 ttemp7 003A                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 816A             _UART1_SetRxInterruptHandler 8142  
                                 wtemp0 0032                                   wtemp1 0034  
                                 wtemp2 0036                                   wtemp3 0038  
                                 wtemp4 003A                                   wtemp5 003C  
                                 wtemp8 0033                         __end_of_sprintf 6A3E  
                       __end_of_tolower 7450                  __end_of_check_switches 8616  
                       __end_of_strncmp 5AD4                         __end_of_toupper 73CC  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 82D2                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 7BA2                   __end_of_ringBufS_init 80CA  
                       __initialization 6CE0                       _UART2_rx_vect_isr 82FC  
                          __end_of_atoi 52B6                            __end_of_ctoa 7348  
                          __end_of_main 40F2                            __end_of_dtoa 3CE8  
                          __end_of_nanf 7814                            __end_of_stoa 4DC2  
                          __end_of_xtoa 44AC                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8526  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 8192  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 82AA                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 7FFC                         _PWM8_Initialize 853C  
                      _UART1_Initialize 774E                       _UART2_tx_vect_isr 82D4  
                    _UART2_Transmit_ISR 7FD0                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 76EA                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 7C72                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 7922                    _start_switch_handler 83D2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 85AC                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F                                  u391_48 83BE  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u822_20 6138                                  u822_21 6132  
                                u830_28 839C                                  u841_28 8356  
                                u826_24 6218                                  u826_25 6214  
                                u828_20 623E                                  u819_28 6118  
                                u828_26 6240                                  u854_44 74B4  
                                u854_45 74AE                                  u838_48 837A  
                                u797_20 8262                                  u797_26 8264  
                      __end_of___xxtofl 590C   __end_of_ADCC_DischargeSampleCapacitor 860E  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 8606  
              __end_of_send_lcd_cmd_dma 7A36                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 8322              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 85DA                        _UART2_Initialize 7876  
                                _WaitMs 7DE6                         _conv_raw_result 2D68  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 5F9C                                  ___fleq 6DA6  
                     _ADCC_ThresholdISR 761C                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 719C                                  _efgtoa 0000  
                                _floorf 44AC                      ?_ADCC_ThresholdISR 0052  
                                _memset 4818                    __size_of_help_button 0038  
                                clear_0 6D2C                                  clear_1 6D40  
                                clear_2 6D52                                  clear_3 6D5E  
                                clear_4 6D6A                                  clear_5 6D76  
                                clear_6 6D82                                  clear_7 6D8E  
                                _printf 7814                      _eaDogM_WriteString 6FBC  
                                _strcpy 6C0C                               ?_ADCC_ISR 0052  
                                _strlen 7062                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 75B2                          _PMD_Initialize 8568  
             __end_of_UART2_tx_vect_isr 82FA                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 774E                            __mediumconst FE5E  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 798A                        __end_of_vfprintf 6FBC  
                            _StartTimer 7D72           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 7BE8                       _SYSTEM_Initialize 7B5C  
                            __accesstop 0060                 __end_of__initialization 6DA0  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 8626                    __end_of_display_info 861E  
             __end_of_CLKREF_Initialize 85E4                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 7CB4  
                 _set_temp_display_help 858E               __end_of_ADCC_ThresholdISR 7684  
                __end_of_ringBufS_flush 722E                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 7CF4                            __pidataBANK1 6B28  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 65FA  
                         __end_of_fputs 719C                           __end_of_srand 7E86  
                 __end_of_TMR5_CallBack 836A                           __end_of_putch 84DA  
               __end_of_PWM8_Initialize 8552                 __end_of_TMR6_Initialize 8026  
                     _adc_int_t_handler 7450                  __end_of_PMD_Initialize 857C  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 838E  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 85F0                          _clear_adc_scan 8636  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 7BA2                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 54F6                 __end_of_conv_raw_result 32EE  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00E5                       __end_of_TimerDone 8346  
                      _DMA1_DMADCNT_ISR 85E4              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 84A4                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8192                 __end_of_ADCC_Initialize 761C  
                            ??_TMR5_ISR 00E9               __end_of_adc_int_t_handler 74CE  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8232  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 820A  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 844C                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 863C  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 85CC  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 7F78  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 7CF4  
               __size_of_switch_handler 015C       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 84F6                                 __Lparam 0000  
              __end_of_UART1_Initialize 77B2                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 4DC2                                 ___fladd 25AC  
                               ___aomod 52B6                                 ___fldiv 32EE  
                               ___awdiv 625A                                 ___flneg 7A88  
                               ___awmod 65FA                                 ___flmul 1D82  
                               ___flsub 7AD0                                 ___fltol 5E2A  
             __end_of_UART1_Receive_ISR 846A                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 6B28  
                               __pcinit 6CE0                __end_of_mode_lamp_bright 85BA  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 859E                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 3CE8  
                               __ptext1 83D2                                 __ptext2 76EA  
                               __ptext3 857C                                 __ptext4 8606  
                               __ptext5 7E52                                 __ptext6 6A3E  
                               __ptext7 8052                                 __ptext8 807A  
                               __ptext9 83F2                       _UART2_Receive_ISR 846A  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8552                                 us550999 54E4  
                          __size_of_abs 0046                                 us539999 502C  
                          __size_of_pad 0114                                 _isalpha 7C2E  
                               _isdigit 7F1A                                 us970999 4172  
                               _mode_sw 0025                                 us957999 4B16  
                               us888999 3882                       __end_of_lp_filter 5C94  
                               _islower 7EBA                                 _isspace 7A36  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 78D4                                 _isupper 7EEA  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 6934  
                               _tolower 73CC                   __size_of_display_help 0008  
                               _utctime 008C                   __size_of_display_info 0008  
                               _strncmp 590C                                 _toupper 7348  
                  end_of_initialization 6DA0               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8142             _UART1_SetTxInterruptHandler 811A  
   __end_of_UART2_SetRxInterruptHandler 811A             _UART2_SetRxInterruptHandler 80F2  
                     __end_of_set_vterm 84C0                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8648  
             __end_of_UART2_Receive_ISR 8488                          wdtdelay@dcount 0090  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 816A  
                          _display_help 861E                   _TMR5_InterruptHandler 0098  
                          _display_info 8616    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 825A  
           _ADCC_SetADIInterruptHandler 8232                              _update_lcd 6826  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7548                         _SPI1_Initialize 8526  
                 __end_of_get_vterm_ptr 7F78                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 7E1C  
          __end_of_INTERRUPT_Initialize 76EA                              _vterm_dump 63A8  
                        __end_of___flge 60FE                          __end_of___fleq 6E6A  
  __end_of_INT0_DefaultInterruptHandler 8652   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 8650              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 798A                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4818  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0084  
                        __end_of_memset 4B04                          __end_of_printf 7876  
              __end_of_DMA1_DMADCNT_ISR 85EE             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 83D2                          __end_of_strcpy 6CE0  
                        __end_of_strlen 7104                     start_initialization 6CE0  
  __end_of_TMR5_DefaultInterruptHandler 8282   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 825A         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 7B5C                   __end_of_INT1_CallBack 83B0  
             __size_of_set_display_info 001E                             __end_of_pad 6826  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 80A2  
                        _switch_handler 60FE           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 5E2A                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 0340                __end_of_DMA1_DMASCNT_ISR 85DA  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR 85FC  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8322  
                         _ringBufS_init 80A2                             __pdataBANK0 00A6  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize 7EBA  
                   __end_of_help_button 7DE6         __end_of_eaDogM_WriteStringAtPos 7E52  
               __end_of_DMA1_Initialize 75B2                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 820A                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __end_of_switch_handler 625A  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 853C  
              _UART1_RxInterruptHandler 000A                _UART2_TxInterruptHandler 000D  
                             __end_of_T FEEF                        _convert_adc_data 74CE  
             __size_of_ringBufS_put_dma 00AA                            _init_display 6A3E  
                __end_of_DMA1_DMAOR_ISR 8606                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 009B                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 79E4                  _PIN_MANAGER_Initialize 722E  
                  __end_of_wait_lcd_set 8642                           __pmediumconst FE5E  
                             __ptext100 853C                               __ptext101 8568  
                             __ptext110 7548                               __ptext102 722E  
                             __ptext111 85DA                               __ptext103 8552  
                             __ptext120 7CB4                               __ptext112 75B2  
                             __ptext104 7684                               __ptext121 8346  
                             __ptext113 820A                               __ptext105 862E  
                             __ptext130 8654                               __ptext122 825A  
                             __ptext114 8232                               __ptext106 7E86  
                             __ptext131 761C                               __ptext123 85BC  
                             __ptext115 7D34                               __ptext107 81BA  
                             __ptext140 84DC                               __ptext132 8284  
                             __ptext124 83B0                               __ptext116 838E  
                             __ptext108 81E2                               __ptext141 836A  
                             __ptext133 7FA4                               __ptext125 8650  
                             __ptext117 864E                               __ptext109 798A  
                             __ptext142 7BE8                               __ptext134 82AC  
                             __ptext126 8648                               __ptext118 60FE  
                             __ptext143 85CC                               __ptext135 844C  
                             __ptext127 8028                               __ptext119 78D4  
                             __ptext144 85E4                               __ptext136 82D4  
                             __ptext128 7450                               __ptext145 85F0  
                             __ptext137 7FD0                               __ptext129 8652  
                             __ptext146 85FC                               __ptext138 82FC  
                             __ptext147 0000                               __ptext139 846A  
                    __end_of_StartTimer 7DAE                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 8028  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 5AD4                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7684  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0052                                _INT0_ISR 85BC  
                              _INT1_ISR 7D34                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0060                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0380  
                             _ring_buf2 0400                                i2u420_48 803E  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u861_48 82BE                                i2u863_48 82E6  
                              i2u865_48 830E                                i2u857_48 7650  
                              i2u857_49 7664                                i2u859_48 8296  
              __size_of_TMR5_Initialize 0046                               _set_vterm 84A4  
                   __size_of_update_lcd 010E                             _help_button 7DAE  
            __end_of_UART1_Transmit_ISR 7FD0                                _TMR5_ISR 78D4  
                              _TMR6_ISR 84DC                               _port_data 00D5  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 8346                              _ADCON0bits 003EF8  
                    __end_of_check_help 5708                               _start_lcd 8642  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 836A                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 842E  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 6CF4  
                             copy_data1 6D16                _INT0_SetInterruptHandler 81E2  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 80F2             _UART2_SetTxInterruptHandler 80CA  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0586                           _wait_lcd_done 8488  
                          _send_lcd_cmd 807A                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8654                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 7FA4                   __end_of_DMA1_DMAA_ISR 85FA  
                    ___fpclassifyf@F463 0088    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 026C                                ___xxtofl 5708  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 85AC                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 80A2  
                              __ptext11 7F78                                __ptext20 860E  
                              __ptext12 859E                                __ptext21 54F6  
                              __ptext13 74CE                                __ptext30 7930  
                              __ptext22 63A8                                __ptext14 5AD4  
                              __ptext31 6FBC                                __ptext23 6934  
                              __ptext15 2D68                                __ptext40 7348  
                              __ptext32 863C                                __ptext24 7F4A  
                              __ptext16 77B2                                __ptext41 7EBA  
                              __ptext33 8642                                __ptext25 7DE6  
                              __ptext17 8410                                __ptext50 5C94  
                              __ptext42 7C2E                                __ptext34 719C  
                              __ptext26 6826                                __ptext18 5708  
                              __ptext51 5E2A                                __ptext43 590C  
                              __ptext35 4818                                __ptext27 7E1C  
                              __ptext19 8636                                __ptext60 625A  
                              __ptext52 7AD0                                __ptext44 4B04  
                              __ptext36 7814                                __ptext28 79E4  
                              __ptext61 3868                                __ptext53 25AC  
                              __ptext45 0000                                __ptext37 6F14  
                              __ptext29 8488                                __ptext70 84C0  
                              __ptext62 7B16                                __ptext54 7A88  
                              __ptext46 73CC                                __ptext38 1244  
                              __ptext71 6E6A                                __ptext63 52B6  
                              __ptext55 1D82                                __ptext47 7EEA  
                              __ptext39 40F2                                __ptext80 7C72  
                              __ptext72 5042                                __ptext64 4DC2  
                              __ptext56 5F9C                                __ptext48 6C0C  
                              __ptext81 7DAE                                __ptext73 7A36  
                              __ptext65 72C0                                __ptext57 6DA6  
                              __ptext49 44AC                                __ptext90 80F2  
                              __ptext82 8322                                __ptext74 7F1A  
                              __ptext66 6712                                __ptext58 32EE  
                              __ptext91 774E                                __ptext83 7D72  
                              __ptext75 84A4                                __ptext67 7062  
                              __ptext59 65FA                                __ptext92 811A  
                              __ptext84 8616                                __ptext76 858E  
                              __ptext68 7104                                __ptext93 8142  
                              __ptext85 861E                                __ptext77 842E  
                              __ptext69 64D6                                __ptext94 7FFC  
                              __ptext86 8626                                __ptext78 84F6  
                              __ptext95 816A                                __ptext87 7B5C  
                              __ptext79 85AC                                __ptext96 7BA2  
                              __ptext88 7876                                __ptext97 8192  
                              __ptext89 80CA                                __ptext98 850E  
                              __ptext99 8526                        __size_of_isupper 0030  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 6E6A                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 040A  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040                 __size_of_check_switches 0008  
             _ADCC_ADI_InterruptHandler 0004                               stoa@F1166 00CE  
                    ??_DMA1_DMASCNT_ISR 0058            __end_of_ADCC_StartConversion 858E  
                              _spi_link 0078                                _wdtdelay 7930  
            __end_of_UART2_Transmit_ISR 7FFC                                _vfprintf 6F14  
              __end_of_convert_adc_data 7548              __end_of_PWM8_LoadDutyValue 7CB4  
  __end_of_INT1_DefaultInterruptHandler 8650   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 864E                           ??_Default_ISR 0052  
                           _uart1RxHead 002E                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0031                             _uart2RxHead 0028  
                           _uart1RxTail 002D                          _get_raw_result 8410  
                           _uart2TxHead 002B                             _uart1TxTail 0030  
                           _uart2RxTail 0027                             _uart2TxTail 002A  
                          _wait_lcd_set 863C                      _EXT_INT_Initialize 7E86  
  __end_of_TMR6_DefaultInterruptHandler 7C2E   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 7BE8    __end_of_ADCC_DefaultInterruptHandler 8654  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 8652  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 8052          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 859E                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7062                   __end_of_mode_lamp_dim 850E  
               __end_of_adc_int_handler 8656                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 6934  
                _uart2TxBufferRemaining 0029                          _FVR_Initialize 862E  
                __end_of_get_raw_result 842E                        _send_lcd_cmd_dma 79E4  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 81E2               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 807A                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 864E          __end_of_PIN_MANAGER_Initialize 72C0  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 64D6  
               _eaDogM_WriteStringAtPos 7E1C                           _get_vterm_ptr 7F4A  
                        _check_adc_scan 8626               __size_of_UART2_Initialize 005E  
