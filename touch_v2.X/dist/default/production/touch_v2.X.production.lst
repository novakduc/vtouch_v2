

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 12 23:43:23 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=4,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=4,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=4,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=4,class=CODE,delta=1
   118                           	psect	text94,global,reloc=4,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=4,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=4,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=4,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=4,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=4,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=4,class=CODE,delta=1
   132                           	psect	text108,global,reloc=4,class=CODE,delta=1
   133                           	psect	text109,global,reloc=4,class=CODE,delta=1
   134                           	psect	text110,global,reloc=4,class=CODE,delta=1
   135                           	psect	text111,global,reloc=4,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   143                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   144  0000                     
   145                           ; Version 2.05
   146                           ; Generated 20/12/2018 GMT
   147                           ; 
   148                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   149                           ; All rights reserved.
   150                           ; 
   151                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   152                           ; 
   153                           ; Redistribution and use in source and binary forms, with or without modification, are
   154                           ; permitted provided that the following conditions are met:
   155                           ; 
   156                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   157                           ;        conditions and the following disclaimer.
   158                           ; 
   159                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   160                           ;        of conditions and the following disclaimer in the documentation and/or other
   161                           ;        materials provided with the distribution.
   162                           ; 
   163                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   164                           ;        software without specific prior written permission.
   165                           ; 
   166                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   167                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   168                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   169                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   170                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   171                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   172                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   173                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   174                           ; 
   175                           ; 
   176                           ; Code-generator required, PIC18F57K42 Definitions
   177                           ; 
   178                           ; SFR Addresses
   179  0000                     
   180 ;;_mode	offset	0
   181 ;;_rxData	offset	0
   182 ;;_t_link	offset=-2 (param)
   183 ;;_k	offset	0
   184 ;;_checksum	offset	2
   185 ;;_i	offset	4
   186 ;;_byte_block	offset=-2 (param)
   187 ;;_length	offset=-3 (param)
   188 ;;_fake	offset=-4 (param)
   189 ;;_s_uart	offset=-5 (param)
   190 ;;_i	offset	0
   191 ;;_sum	offset	2
   192 ;;_byte_block	offset=-2 (param)
   193 ;;_byte_count	offset=-4 (param)
   194 ;;_bufData	offset=-1 (param)
   195 ;;_txData	offset=-1 (param)
   196 ;;_bufData	offset=-1 (param)
   197 ;;_stream	offset=-6 (param)
   198 ;;_function	offset=-7 (param)
   199 ;;_s	offset=-2 (param)
   200 ;;_f	offset	0
   201 ;;_ap	offset	6
   202 ;;_s	offset=-3 (param)
   203 ;;_fmt	offset=-5 (param)
   204 ;;_rxData	offset	0
   205 ;;_r_link	offset=-2 (param)
   206 ;;_txData	offset=-1 (param)
   207 ;;_rxData	offset	0
   208 ;;_m_link	offset=-2 (param)
   209 ;;_stream	offset=-1 (param)
   210 ;;_function	offset=-2 (param)
   211 ;;_byte_block	offset=-1 (param)
   212 ;;_clear	offset=-2 (param)
   213 ;;_numMilliseconds	offset=-2 (param)
   214 ;;_timer	offset=-1 (param)
   215 ;;_timer	offset=-1 (param)
   216 ;;_count	offset=-3 (param)
   217 ;;_readValue	offset	0
   218 ;;_readValue	offset	0
   219 ;;_cmd	offset=-1 (param)
   220 ;;_cmd	offset=-1 (param)
   221 ;;_data	offset=-1 (param)
   222 ;;__this	offset=-2 (param)
   223 ;;_r	offset=-1 (param)
   224 ;;_c	offset=-2 (param)
   225 ;;_strPtr	offset=-4 (param)
   226 ;;_strPtr	offset=-2 (param)
   227 ;;_cmd	offset=-1 (param)
   228 ;;_strPtr	offset=-1 (param)
   229 ;;_delay	offset=-4 (param)
   230 ;;__this	offset=-2 (param)
   231 ;;_clearBuffer	offset=-3 (param)
   232 ;;_s	offset	0
   233 ;;_k	offset	2
   234 ;;_dest	offset=-2 (param)
   235 ;;_c	offset=-4 (param)
   236 ;;_n	offset=-6 (param)
   237 ;;_ap	offset	0
   238 ;;_fmt	offset=-3 (param)
   239 ;;_cfmt	offset	0
   240 ;;_fp	offset=-2 (param)
   241 ;;_fmt	offset=-4 (param)
   242 ;;_ap	offset=-6 (param)
   243 ;;_ll	offset	0
   244 ;;_cp	offset	8
   245 ;;_c	offset	10
   246 ;;_fp	offset=-2 (param)
   247 ;;_fmt	offset=-4 (param)
   248 ;;_ap	offset=-6 (param)
   249 ;;_r	offset	0
   250 ;;_l	offset	2
   251 ;;__l	offset=-2 (param)
   252 ;;__r	offset=-4 (param)
   253 ;;_n	offset=-6 (param)
   254 ;;_nuls	offset	0
   255 ;;_l	offset	7
   256 ;;_p	offset	9
   257 ;;_cp	offset	11
   258 ;;_w	offset	13
   259 ;;_i	offset	15
   260 ;;_fp	offset=-2 (param)
   261 ;;_s	offset=-4 (param)
   262 ;;_dtoa$4076	offset	0
   263 ;;_n	offset	2
   264 ;;_i	offset	10
   265 ;;_s	offset	12
   266 ;;_w	offset	14
   267 ;;_p	offset	16
   268 ;;_fp	offset=-2 (param)
   269 ;;_d	offset=-10 (param)
   270 ;;_a	offset=-2 (param)
   271 ;;_sign	offset	0
   272 ;;_counter	offset	1
   273 ;;_dividend	offset=-8 (param)
   274 ;;_divisor	offset=-16 (param)
   275 ;;_quotient	offset	0
   276 ;;_sign	offset	8
   277 ;;_counter	offset	9
   278 ;;_dividend	offset=-8 (param)
   279 ;;_divisor	offset=-16 (param)
   280 ;;_w	offset	0
   281 ;;_fp	offset=-2 (param)
   282 ;;_c	offset=-3 (param)
   283 ;;_w	offset	0
   284 ;;_i	offset	2
   285 ;;_fp	offset=-2 (param)
   286 ;;_buf	offset=-4 (param)
   287 ;;_p	offset=-6 (param)
   288 ;;_a	offset	0
   289 ;;_s	offset=-2 (param)
   290 ;;_i	offset	0
   291 ;;_c	offset	2
   292 ;;_s	offset=-2 (param)
   293 ;;_fp	offset=-4 (param)
   294 ;;_c	offset=-2 (param)
   295 ;;_fp	offset=-4 (param)
   296 ;;_c	offset=-1 (param)
   297 ;;__this	offset=-2 (param)
   298 ;;_c	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_InterruptHandler	offset=-3 (param)
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_InterruptHandler	offset=-3 (param)
   304 ;;_InterruptHandler	offset=-3 (param)
   305 ;;_state	offset	0
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_InterruptHandler	offset=-3 (param)
   310 ;;_i	offset	0
   311 ;;_timerVal	offset=-2 (param)
   312                           
   313                           	psect	idataCOMRAM
   314  014EF2                     __pidataCOMRAM:
   315                           	opt callstack 0
   316                           
   317                           ;initializer for r_protocol@retry
   318  014EF2  03                 	db	3
   319                           
   320                           	psect	idataBIGRAM
   321  012FB4                     __pidataBIGRAM:
   322                           	opt callstack 0
   323                           
   324                           ;initializer for _V
   325  012FB4  00                 	db	0
   326  012FB5  00                 	db	0
   327  012FB6  00                 	db	0
   328  012FB7  00                 	db	0
   329  012FB8  00                 	db	0
   330  012FB9  00                 	db	0
   331  012FBA  00                 	db	0
   332  012FBB  00                 	db	0
   333  012FBC  00                 	db	0
   334  012FBD  00                 	db	0
   335  012FBE  00                 	db	0
   336  012FBF  00                 	db	0
   337  012FC0  00                 	db	0
   338  012FC1  00                 	db	0
   339  012FC2  00                 	db	0
   340  012FC3  00                 	db	0
   341  012FC4  00                 	db	0
   342  012FC5  00                 	db	0
   343  012FC6  00                 	db	0
   344  012FC7  00                 	db	0
   345  012FC8  00                 	db	0
   346  012FC9  00                 	db	0
   347  012FCA  00                 	db	0
   348  012FCB  00                 	db	0
   349  012FCC  00                 	db	0
   350  012FCD  00                 	db	0
   351  012FCE  00                 	db	0
   352  012FCF  00                 	db	0
   353  012FD0  00                 	db	0
   354  012FD1  00                 	db	0
   355  012FD2  00                 	db	0
   356  012FD3  00                 	db	0
   357  012FD4  00                 	db	0
   358  012FD5  00                 	db	0
   359  012FD6  00                 	db	0
   360  012FD7  00                 	db	0
   361  012FD8  00                 	db	0
   362  012FD9  00                 	db	0
   363  012FDA  00                 	db	0
   364  012FDB  00                 	db	0
   365  012FDC  00                 	db	0
   366  012FDD  00                 	db	0
   367  012FDE  00                 	db	0
   368  012FDF  00                 	db	0
   369  012FE0  00                 	db	0
   370  012FE1  00                 	db	0
   371  012FE2  00                 	db	0
   372  012FE3  00                 	db	0
   373  012FE4  00                 	db	0
   374  012FE5  00                 	db	0
   375  012FE6  00                 	db	0
   376  012FE7  00                 	db	0
   377  012FE8  00                 	db	0
   378  012FE9  00                 	db	0
   379  012FEA  00                 	db	0
   380  012FEB  00                 	db	0
   381  012FEC  00                 	db	0
   382  012FED  00                 	db	0
   383  012FEE  00                 	db	0
   384  012FEF  00                 	db	0
   385  012FF0  00                 	db	0
   386  012FF1  00                 	db	0
   387  012FF2  00                 	db	0
   388  012FF3  00                 	db	0
   389  012FF4  00                 	db	0
   390  012FF5  00                 	db	0
   391  012FF6  00                 	db	0
   392  012FF7  00                 	db	0
   393  012FF8  00                 	db	0
   394  012FF9  00                 	db	0
   395  012FFA  00                 	db	0
   396  012FFB  00                 	db	0
   397  012FFC  00                 	db	0
   398  012FFD  00                 	db	0
   399  012FFE  00                 	db	0
   400  012FFF  00                 	db	0
   401  013000  00                 	db	0
   402  013001  00                 	db	0
   403  013002  00                 	db	0
   404  013003  00                 	db	0
   405  013004  00                 	db	0
   406  013005  00                 	db	0
   407  013006  00                 	db	0
   408  013007  00                 	db	0
   409  013008  00                 	db	0
   410  013009  00                 	db	0
   411  01300A  00                 	db	0
   412  01300B  00                 	db	0
   413  01300C  00                 	db	0
   414  01300D  00                 	db	0
   415  01300E  00                 	db	0
   416  01300F  00                 	db	0
   417  013010  00                 	db	0
   418  013011  00                 	db	0
   419  013012  00                 	db	0
   420  013013  00                 	db	0
   421  013014  00                 	db	0
   422  013015  00                 	db	0
   423  013016  00                 	db	0
   424  013017  00                 	db	0
   425  013018  00                 	db	0
   426  013019  00                 	db	0
   427  01301A  00                 	db	0
   428  01301B  00                 	db	0
   429  01301C  00                 	db	0
   430  01301D  00                 	db	0
   431  01301E  00                 	db	0
   432  01301F  00                 	db	0
   433  013020  00                 	db	0
   434  013021  00                 	db	0
   435  013022  00                 	db	0
   436  013023  00                 	db	0
   437  013024  00                 	db	0
   438  013025  00                 	db	0
   439  013026  00                 	db	0
   440  013027  00                 	db	0
   441  013028  00                 	db	0
   442  013029  00                 	db	0
   443  01302A  00                 	db	0
   444  01302B  00                 	db	0
   445  01302C  00                 	db	0
   446  01302D  00                 	db	0
   447  01302E  00                 	db	0
   448  01302F  00                 	db	0
   449  013030  00                 	db	0
   450  013031  00                 	db	0
   451  013032  00                 	db	0
   452  013033  00                 	db	0
   453  013034  00                 	db	0
   454  013035  00                 	db	0
   455  013036  00                 	db	0
   456  013037  00                 	db	0
   457  013038  00                 	db	0
   458  013039  00                 	db	0
   459  01303A  00                 	db	0
   460  01303B  00                 	db	0
   461  01303C  00                 	db	0
   462  01303D  00                 	db	0
   463  01303E  00                 	db	0
   464  01303F  00                 	db	0
   465  013040  00                 	db	0
   466  013041  00                 	db	0
   467  013042  00                 	db	0
   468  013043  00                 	db	0
   469  013044  00                 	db	0
   470  013045  00                 	db	0
   471  013046  00                 	db	0
   472  013047  00                 	db	0
   473  013048  00                 	db	0
   474  013049  00                 	db	0
   475  01304A  00                 	db	0
   476  01304B  00                 	db	0
   477  01304C  00                 	db	0
   478  01304D  00                 	db	0
   479  01304E  00                 	db	0
   480  01304F  00                 	db	0
   481  013050  00                 	db	0
   482  013051  00                 	db	0
   483  013052  00                 	db	0
   484  013053  00                 	db	0
   485  013054  00                 	db	0
   486  013055  00                 	db	0
   487  013056  00                 	db	0
   488  013057  00                 	db	0
   489  013058  00                 	db	0
   490  013059  00                 	db	0
   491  01305A  00                 	db	0
   492  01305B  00                 	db	0
   493  01305C  00                 	db	0
   494  01305D  00                 	db	0
   495  01305E  00                 	db	0
   496  01305F  00                 	db	0
   497  013060  00                 	db	0
   498  013061  00                 	db	0
   499  013062  00                 	db	0
   500  013063  00                 	db	0
   501  013064  00                 	db	0
   502  013065  00                 	db	0
   503  013066  00                 	db	0
   504  013067  00                 	db	0
   505  013068  00                 	db	0
   506  013069  00                 	db	0
   507  01306A  00                 	db	0
   508  01306B  00                 	db	0
   509  01306C  00                 	db	0
   510  01306D  00                 	db	0
   511  01306E  00                 	db	0
   512  01306F  00                 	db	0
   513  013070  00                 	db	0
   514  013071  00                 	db	0
   515  013072  00                 	db	0
   516  013073  00                 	db	0
   517  013074  00                 	db	0
   518  013075  00                 	db	0
   519  013076  00                 	db	0
   520  013077  00                 	db	0
   521  013078  00                 	db	0
   522  013079  00                 	db	0
   523  01307A  00                 	db	0
   524  01307B  00                 	db	0
   525  01307C  00                 	db	0
   526  01307D  00                 	db	0
   527  01307E  00                 	db	0
   528  01307F  00                 	db	0
   529  013080  00                 	db	0
   530  013081  00                 	db	0
   531  013082  00                 	db	0
   532  013083  00                 	db	0
   533  013084  00                 	db	0
   534  013085  00                 	db	0
   535  013086  00                 	db	0
   536  013087  00                 	db	0
   537  013088  00                 	db	0
   538  013089  00                 	db	0
   539  01308A  00                 	db	0
   540  01308B  00                 	db	0
   541  01308C  00                 	db	0
   542  01308D  00                 	db	0
   543  01308E  00                 	db	0
   544  01308F  00                 	db	0
   545  013090  00                 	db	0
   546  013091  00                 	db	0
   547  013092  00                 	db	0
   548  013093  00                 	db	0
   549  013094  00                 	db	0
   550  013095  00                 	db	0
   551  013096  00                 	db	0
   552  013097  00                 	db	0
   553  013098  00                 	db	0
   554  013099  00                 	db	0
   555  01309A  0000               	dw	0
   556  01309C  0000               	dw	0
   557  01309E  0000               	dw	0
   558  0130A0  0000               	dw	0
   559  0130A2  0000               	dw	0
   560  0130A4  0000               	dw	0
   561  0130A6  00                 	db	0
   562  0130A7  00                 	db	0
   563  0130A8  0A                 	db	10
   564  0130A9  00                 	db	0
   565  0130AA  14                 	db	20
   566  0130AB  00                 	db	0
   567  0130AC  0000               	dw	0
   568  0130AE  0000               	dw	0
   569  0130B0  0000               	dw	0
   570  0130B2  0000               	dw	0
   571  0130B4  0000               	dw	0
   572  0130B6  00                 	db	0
   573  0130B7  20                 	db	32
   574  0130B8  00                 	db	0
   575  0130B9  00                 	db	0
   576  0130BA  00                 	db	0
   577  0130BB  00                 	db	0
   578  0130BC  00                 	db	0
   579  0130BD  00                 	db	0
   580  0130BE  00                 	db	0
   581  0130BF  00                 	db	0
   582  0130C0  00                 	db	0
   583  0130C1  00                 	db	0
   584  0130C2  00                 	db	0
   585  0130C3  00                 	db	0
   586  0130C4  00                 	db	0
   587  0130C5  00                 	db	0
   588  0130C6  00                 	db	0
   589  0130C7  00                 	db	0
   590  0130C8  00                 	db	0
   591  0130C9  00                 	db	0
   592  0130CA  00                 	db	0
   593  0130CB  00                 	db	0
   594  0130CC  00                 	db	0
   595  0130CD  00                 	db	0
   596  0130CE  00                 	db	0
   597  0130CF  00                 	db	0
   598  0130D0  00                 	db	0
   599  0130D1  00                 	db	0
   600  0130D2  00                 	db	0
   601  0130D3  00                 	db	0
   602  0130D4  00                 	db	0
   603  0130D5  00                 	db	0
   604  0130D6  00                 	db	0
   605  0130D7  00                 	db	0
   606  0130D8  00                 	db	0
   607  0130D9  00                 	db	0
   608  0130DA  00                 	db	0
   609  0130DB  00                 	db	0
   610  0130DC  0000               	dw	0
   611  0130DE  0000               	dw	0
   612  0130E0  01                 	db	1
   613  0130E1  2D                 	db	45
   614                           
   615                           ;initializer for _H254
   616  0130E2  0000               	dw	0
   617  0130E4  00                 	db	0
   618  0130E5  00                 	db	0
   619  0130E6  00                 	db	0
   620  0130E7  00                 	db	0
   621  0130E8  00                 	db	0
   622  0130E9  00                 	db	0
   623  0130EA  00                 	db	0
   624  0130EB  00                 	db	0
   625  0130EC  00                 	db	0
   626  0130ED  00                 	db	0
   627  0130EE  00                 	db	0
   628  0130EF  00                 	db	0
   629  0130F0  00                 	db	0
   630  0130F1  00                 	db	0
   631  0130F2  00                 	db	0
   632  0130F3  00                 	db	0
   633  0130F4  00                 	db	0
   634  0130F5  00                 	db	0
   635  0130F6  00                 	db	0
   636  0130F7  00                 	db	0
   637  0130F8  00                 	db	0
   638  0130F9  00                 	db	0
   639  0130FA  00                 	db	0
   640  0130FB  00                 	db	0
   641  0130FC  00                 	db	0
   642  0130FD  00                 	db	0
   643  0130FE  00                 	db	0
   644  0130FF  00                 	db	0
   645  013100  00                 	db	0
   646  013101  00                 	db	0
   647  013102  00                 	db	0
   648  013103  00                 	db	0
   649  013104  00                 	db	0
   650  013105  00                 	db	0
   651  013106  00                 	db	0
   652  013107  00                 	db	0
   653  013108  00                 	db	0
   654  013109  00                 	db	0
   655  01310A  00                 	db	0
   656  01310B  00                 	db	0
   657  01310C  00                 	db	0
   658  01310D  00                 	db	0
   659  01310E  00                 	db	0
   660  01310F  00                 	db	0
   661  013110  00                 	db	0
   662  013111  00                 	db	0
   663  013112  00                 	db	0
   664  013113  00                 	db	0
   665  013114  00                 	db	0
   666  013115  00                 	db	0
   667  013116  00                 	db	0
   668  013117  00                 	db	0
   669  013118  00                 	db	0
   670  013119  00                 	db	0
   671  01311A  00                 	db	0
   672  01311B  00                 	db	0
   673  01311C  00                 	db	0
   674  01311D  00                 	db	0
   675  01311E  00                 	db	0
   676  01311F  00                 	db	0
   677  013120  00                 	db	0
   678  013121  00                 	db	0
   679  013122  00                 	db	0
   680  013123  00                 	db	0
   681  013124  00                 	db	0
   682  013125  00                 	db	0
   683  013126  00                 	db	0
   684  013127  00                 	db	0
   685  013128  00                 	db	0
   686  013129  00                 	db	0
   687  01312A  00                 	db	0
   688  01312B  00                 	db	0
   689  01312C  00                 	db	0
   690  01312D  00                 	db	0
   691  01312E  00                 	db	0
   692  01312F  00                 	db	0
   693  013130  00                 	db	0
   694  013131  00                 	db	0
   695  013132  00                 	db	0
   696  013133  00                 	db	0
   697  013134  00                 	db	0
   698  013135  00                 	db	0
   699  013136  00                 	db	0
   700  013137  00                 	db	0
   701  013138  00                 	db	0
   702  013139  00                 	db	0
   703  01313A  00                 	db	0
   704  01313B  00                 	db	0
   705  01313C  00                 	db	0
   706  01313D  00                 	db	0
   707  01313E  00                 	db	0
   708  01313F  00                 	db	0
   709  013140  00                 	db	0
   710  013141  00                 	db	0
   711  013142  00                 	db	0
   712  013143  00                 	db	0
   713  013144  00                 	db	0
   714  013145  00                 	db	0
   715  013146  00                 	db	0
   716  013147  00                 	db	0
   717  013148  00                 	db	0
   718  013149  00                 	db	0
   719  01314A  00                 	db	0
   720  01314B  00                 	db	0
   721  01314C  00                 	db	0
   722  01314D  00                 	db	0
   723  01314E  00                 	db	0
   724  01314F  00                 	db	0
   725  013150  00                 	db	0
   726  013151  00                 	db	0
   727  013152  00                 	db	0
   728  013153  00                 	db	0
   729  013154  00                 	db	0
   730  013155  00                 	db	0
   731  013156  00                 	db	0
   732  013157  00                 	db	0
   733  013158  00                 	db	0
   734  013159  00                 	db	0
   735  01315A  00                 	db	0
   736  01315B  00                 	db	0
   737  01315C  00                 	db	0
   738  01315D  00                 	db	0
   739  01315E  00                 	db	0
   740  01315F  00                 	db	0
   741  013160  00                 	db	0
   742  013161  00                 	db	0
   743  013162  00                 	db	0
   744  013163  00                 	db	0
   745  013164  00                 	db	0
   746  013165  00                 	db	0
   747  013166  00                 	db	0
   748  013167  00                 	db	0
   749  013168  00                 	db	0
   750  013169  00                 	db	0
   751  01316A  00                 	db	0
   752  01316B  00                 	db	0
   753  01316C  00                 	db	0
   754  01316D  00                 	db	0
   755  01316E  00                 	db	0
   756  01316F  00                 	db	0
   757  013170  00                 	db	0
   758  013171  00                 	db	0
   759  013172  00                 	db	0
   760  013173  00                 	db	0
   761  013174  00                 	db	0
   762  013175  00                 	db	0
   763  013176  00                 	db	0
   764  013177  00                 	db	0
   765  013178  00                 	db	0
   766  013179  00                 	db	0
   767  01317A  00                 	db	0
   768  01317B  00                 	db	0
   769  01317C  00                 	db	0
   770  01317D  00                 	db	0
   771  01317E  00                 	db	0
   772  01317F  00                 	db	0
   773  013180  00                 	db	0
   774  013181  00                 	db	0
   775  013182  00                 	db	0
   776  013183  00                 	db	0
   777  013184  00                 	db	0
   778  013185  00                 	db	0
   779  013186  00                 	db	0
   780  013187  00                 	db	0
   781  013188  00                 	db	0
   782  013189  00                 	db	0
   783  01318A  00                 	db	0
   784  01318B  00                 	db	0
   785  01318C  00                 	db	0
   786  01318D  00                 	db	0
   787  01318E  00                 	db	0
   788  01318F  00                 	db	0
   789  013190  00                 	db	0
   790  013191  00                 	db	0
   791  013192  00                 	db	0
   792  013193  00                 	db	0
   793  013194  00                 	db	0
   794  013195  00                 	db	0
   795  013196  00                 	db	0
   796  013197  00                 	db	0
   797  013198  00                 	db	0
   798  013199  00                 	db	0
   799  01319A  00                 	db	0
   800  01319B  00                 	db	0
   801  01319C  00                 	db	0
   802  01319D  00                 	db	0
   803  01319E  00                 	db	0
   804  01319F  00                 	db	0
   805  0131A0  00                 	db	0
   806  0131A1  00                 	db	0
   807  0131A2  00                 	db	0
   808  0131A3  00                 	db	0
   809  0131A4  00                 	db	0
   810  0131A5  00                 	db	0
   811  0131A6  00                 	db	0
   812  0131A7  00                 	db	0
   813  0131A8  00                 	db	0
   814  0131A9  00                 	db	0
   815  0131AA  00                 	db	0
   816  0131AB  00                 	db	0
   817  0131AC  00                 	db	0
   818  0131AD  00                 	db	0
   819  0131AE  00                 	db	0
   820  0131AF  00                 	db	0
   821  0131B0  00                 	db	0
   822  0131B1  00                 	db	0
   823  0131B2  00                 	db	0
   824  0131B3  00                 	db	0
   825  0131B4  00                 	db	0
   826  0131B5  00                 	db	0
   827  0131B6  00                 	db	0
   828  0131B7  00                 	db	0
   829  0131B8  00                 	db	0
   830  0131B9  00                 	db	0
   831  0131BA  00                 	db	0
   832  0131BB  00                 	db	0
   833  0131BC  00                 	db	0
   834  0131BD  00                 	db	0
   835  0131BE  00                 	db	0
   836  0131BF  00                 	db	0
   837  0131C0  00                 	db	0
   838  0131C1  00                 	db	0
   839  0131C2  00                 	db	0
   840  0131C3  00                 	db	0
   841  0131C4  00                 	db	0
   842  0131C5  00                 	db	0
   843  0131C6  00                 	db	0
   844  0131C7  00                 	db	0
   845  0131C8  00                 	db	0
   846  0131C9  00                 	db	0
   847  0131CA  00                 	db	0
   848  0131CB  00                 	db	0
   849  0131CC  00                 	db	0
   850  0131CD  00                 	db	0
   851  0131CE  00                 	db	0
   852  0131CF  00                 	db	0
   853  0131D0  00                 	db	0
   854  0131D1  00                 	db	0
   855  0131D2  00                 	db	0
   856  0131D3  00                 	db	0
   857  0131D4  00                 	db	0
   858  0131D5  00                 	db	0
   859  0131D6  00                 	db	0
   860  0131D7  00                 	db	0
   861  0131D8  0001               	dw	1
   862  0131DA  0000               	dw	0
   863  0131DC  01                 	db	1
   864  0131DD  80                 	db	128
   865  0131DE  03                 	db	3
   866  0131DF  8A                 	db	138
   867  0131E0  00                 	db	0
   868  0131E1  00                 	db	0
   869  0131E2  FE                 	db	254
   870                           
   871                           	psect	idataBANK0
   872  014436                     __pidataBANK0:
   873                           	opt callstack 0
   874                           
   875                           ;initializer for stoa@F1144
   876  014436  28                 	db	40
   877  014437  6E                 	db	110
   878  014438  75                 	db	117
   879  014439  6C                 	db	108
   880  01443A  6C                 	db	108
   881  01443B  29                 	db	41
   882  01443C  00                 	db	0
   883                           
   884                           ;initializer for _H12
   885  01443D  0000               	dw	0
   886  01443F  00                 	db	0
   887  014440  01                 	db	1
   888  014441  0001               	dw	1
   889  014443  0000               	dw	0
   890  014445  01                 	db	1
   891  014446  80                 	db	128
   892  014447  02                 	db	2
   893  014448  01                 	db	1
   894  014449  00                 	db	0
   895  01444A  00                 	db	0
   896  01444B  0C                 	db	12
   897  01444C  0000               	dw	0
   898  01444E  00                 	db	0
   899  01444F  01                 	db	1
   900  014450  0001               	dw	1
   901  014452  0000               	dw	0
   902  014454  01                 	db	1
   903  014455  80                 	db	128
   904  014456  0D                 	db	13
   905  014457  81                 	db	129
   906  014458  00                 	db	0
   907  014459  00                 	db	0
   908  01445A  0C                 	db	12
   909                           
   910                           ;initializer for _H17
   911  01445B  0000               	dw	0
   912  01445D  00                 	db	0
   913  01445E  01                 	db	1
   914  01445F  00                 	db	0
   915  014460  01                 	db	1
   916  014461  21                 	db	33
   917  014462  02                 	db	2
   918  014463  01                 	db	1
   919  014464  0001               	dw	1
   920  014466  0000               	dw	0
   921  014468  01                 	db	1
   922  014469  80                 	db	128
   923  01446A  0E                 	db	14
   924  01446B  01                 	db	1
   925  01446C  00                 	db	0
   926  01446D  00                 	db	0
   927  01446E  11                 	db	17
   928                           
   929                           ;initializer for _H14
   930  01446F  0000               	dw	0
   931  014471  00                 	db	0
   932  014472  41                 	db	65
   933  014473  11                 	db	17
   934  014474  01                 	db	1
   935  014475  0001               	dw	1
   936  014477  0000               	dw	0
   937  014479  01                 	db	1
   938  01447A  80                 	db	128
   939  01447B  04                 	db	4
   940  01447C  01                 	db	1
   941  01447D  00                 	db	0
   942  01447E  00                 	db	0
   943  01447F  0E                 	db	14
   944                           
   945                           	psect	idataBANK1
   946  013C94                     __pidataBANK1:
   947                           	opt callstack 0
   948                           
   949                           ;initializer for _H10
   950  013C94  0000               	dw	0
   951  013C96  0001               	dw	1
   952  013C98  0000               	dw	0
   953  013C9A  01                 	db	1
   954  013C9B  80                 	db	128
   955  013C9C  01                 	db	1
   956  013C9D  81                 	db	129
   957  013C9E  00                 	db	0
   958  013C9F  00                 	db	0
   959  013CA0  0A                 	db	10
   960  013CA1  0000               	dw	0
   961  013CA3  00                 	db	0
   962  013CA4  00                 	db	0
   963  013CA5  00                 	db	0
   964  013CA6  00                 	db	0
   965  013CA7  00                 	db	0
   966  013CA8  00                 	db	0
   967  013CA9  00                 	db	0
   968  013CAA  00                 	db	0
   969  013CAB  00                 	db	0
   970  013CAC  00                 	db	0
   971  013CAD  0A                 	db	10
   972  013CAE  0000               	dw	0
   973  013CB0  0001               	dw	1
   974  013CB2  0000               	dw	0
   975  013CB4  01                 	db	1
   976  013CB5  80                 	db	128
   977  013CB6  00                 	db	0
   978  013CB7  01                 	db	1
   979  013CB8  00                 	db	0
   980  013CB9  00                 	db	0
   981  013CBA  0A                 	db	10
   982  013CBB  0000               	dw	0
   983  013CBD  0001               	dw	1
   984  013CBF  0000               	dw	0
   985  013CC1  01                 	db	1
   986  013CC2  80                 	db	128
   987  013CC3  01                 	db	1
   988  013CC4  81                 	db	129
   989  013CC5  00                 	db	0
   990  013CC6  80                 	db	128
   991  013CC7  0A                 	db	10
   992  013CC8  0000               	dw	0
   993  013CCA  0001               	dw	1
   994  013CCC  0000               	dw	0
   995  013CCE  01                 	db	1
   996  013CCF  80                 	db	128
   997  013CD0  11                 	db	17
   998  013CD1  82                 	db	130
   999  013CD2  00                 	db	0
  1000  013CD3  00                 	db	0
  1001  013CD4  0A                 	db	10
  1002  013CD5  0000               	dw	0
  1003  013CD7  0001               	dw	1
  1004  013CD9  0000               	dw	0
  1005  013CDB  01                 	db	1
  1006  013CDC  80                 	db	128
  1007  013CDD  0F                 	db	15
  1008  013CDE  81                 	db	129
  1009  013CDF  00                 	db	0
  1010  013CE0  00                 	db	0
  1011  013CE1  0A                 	db	10
  1012  013CE2  0000               	dw	0
  1013  013CE4  0001               	dw	1
  1014  013CE6  0000               	dw	0
  1015  013CE8  01                 	db	1
  1016  013CE9  80                 	db	128
  1017  013CEA  11                 	db	17
  1018  013CEB  81                 	db	129
  1019  013CEC  00                 	db	0
  1020  013CED  00                 	db	0
  1021  013CEE  0A                 	db	10
  1022                           
  1023                           ;initializer for _H13
  1024  013CEF  0000               	dw	0
  1025  013CF1  00                 	db	0
  1026  013CF2  01                 	db	1
  1027  013CF3  21                 	db	33
  1028  013CF4  0001               	dw	1
  1029  013CF6  0000               	dw	0
  1030  013CF8  01                 	db	1
  1031  013CF9  80                 	db	128
  1032  013CFA  0C                 	db	12
  1033  013CFB  06                 	db	6
  1034  013CFC  00                 	db	0
  1035  013CFD  00                 	db	0
  1036  013CFE  0D                 	db	13
  1037  013CFF  0000               	dw	0
  1038  013D01  00                 	db	0
  1039  013D02  01                 	db	1
  1040  013D03  21                 	db	33
  1041  013D04  0001               	dw	1
  1042  013D06  0000               	dw	0
  1043  013D08  01                 	db	1
  1044  013D09  80                 	db	128
  1045  013D0A  02                 	db	2
  1046  013D0B  0A                 	db	10
  1047  013D0C  00                 	db	0
  1048  013D0D  00                 	db	0
  1049  013D0E  0D                 	db	13
  1050  013D0F  0000               	dw	0
  1051  013D11  00                 	db	0
  1052  013D12  01                 	db	1
  1053  013D13  21                 	db	33
  1054  013D14  0001               	dw	1
  1055  013D16  0000               	dw	0
  1056  013D18  01                 	db	1
  1057  013D19  80                 	db	128
  1058  013D1A  02                 	db	2
  1059  013D1B  05                 	db	5
  1060  013D1C  00                 	db	0
  1061  013D1D  00                 	db	0
  1062  013D1E  0D                 	db	13
  1063                           
  1064                           ;initializer for _H24
  1065  013D1F  0000               	dw	0
  1066  013D21  41                 	db	65
  1067  013D22  20                 	db	32
  1068  013D23  30                 	db	48
  1069  013D24  31                 	db	49
  1070  013D25  30                 	db	48
  1071  013D26  39                 	db	57
  1072  013D27  31                 	db	49
  1073  013D28  31                 	db	49
  1074  013D29  30                 	db	48
  1075  013D2A  38                 	db	56
  1076  013D2B  34                 	db	52
  1077  013D2C  36                 	db	54
  1078  013D2D  30                 	db	48
  1079  013D2E  30                 	db	48
  1080  013D2F  0001               	dw	1
  1081  013D31  0000               	dw	0
  1082  013D33  01                 	db	1
  1083  013D34  80                 	db	128
  1084  013D35  12                 	db	18
  1085  013D36  02                 	db	2
  1086  013D37  00                 	db	0
  1087  013D38  00                 	db	0
  1088  013D39  18                 	db	24
  1089                           
  1090                           	psect	idataBANK3
  1091  014032                     __pidataBANK3:
  1092                           	opt callstack 0
  1093                           
  1094                           ;initializer for _H53
  1095  014032  0000               	dw	0
  1096  014034  4B                 	db	75
  1097  014035  4F                 	db	79
  1098  014036  4F                 	db	79
  1099  014037  52                 	db	82
  1100  014038  42                 	db	66
  1101  014039  42                 	db	66
  1102  01403A  42                 	db	66
  1103  01403B  42                 	db	66
  1104  01403C  34                 	db	52
  1105  01403D  33                 	db	51
  1106  01403E  32                 	db	50
  1107  01403F  31                 	db	49
  1108  014040  44                 	db	68
  1109  014041  45                 	db	69
  1110  014042  32                 	db	50
  1111  014043  31                 	db	49
  1112  014044  53                 	db	83
  1113  014045  4B                 	db	75
  1114  014046  4F                 	db	79
  1115  014047  4F                 	db	79
  1116  014048  52                 	db	82
  1117  014049  42                 	db	66
  1118  01404A  42                 	db	66
  1119  01404B  42                 	db	66
  1120  01404C  42                 	db	66
  1121  01404D  34                 	db	52
  1122  01404E  30                 	db	48
  1123  01404F  30                 	db	48
  1124  014050  33                 	db	51
  1125  014051  32                 	db	50
  1126  014052  31                 	db	49
  1127  014053  44                 	db	68
  1128  014054  45                 	db	69
  1129  014055  52                 	db	82
  1130  014056  46                 	db	70
  1131  014057  23                 	db	35
  1132  014058  01                 	db	1
  1133  014059  41                 	db	65
  1134  01405A  01                 	db	1
  1135  01405B  01                 	db	1
  1136  01405C  21                 	db	33
  1137  01405D  02                 	db	2
  1138  01405E  01                 	db	1
  1139  01405F  0001               	dw	1
  1140  014061  0000               	dw	0
  1141  014063  01                 	db	1
  1142  014064  80                 	db	128
  1143  014065  03                 	db	3
  1144  014066  8A                 	db	138
  1145  014067  00                 	db	0
  1146  014068  00                 	db	0
  1147  014069  35                 	db	53
  1148  01406A  0000               	dw	0
  1149  01406C  00                 	db	0
  1150  01406D  4F                 	db	79
  1151  01406E  4B                 	db	75
  1152  01406F  4F                 	db	79
  1153  014070  4F                 	db	79
  1154  014071  52                 	db	82
  1155  014072  42                 	db	66
  1156  014073  42                 	db	66
  1157  014074  42                 	db	66
  1158  014075  42                 	db	66
  1159  014076  34                 	db	52
  1160  014077  33                 	db	51
  1161  014078  32                 	db	50
  1162  014079  31                 	db	49
  1163  01407A  44                 	db	68
  1164  01407B  45                 	db	69
  1165  01407C  32                 	db	50
  1166  01407D  31                 	db	49
  1167  01407E  53                 	db	83
  1168  01407F  4B                 	db	75
  1169  014080  52                 	db	82
  1170  014081  42                 	db	66
  1171  014082  18                 	db	24
  1172  014083  01                 	db	1
  1173  014084  41                 	db	65
  1174  014085  00                 	db	0
  1175  014086  33                 	db	51
  1176  014087  32                 	db	50
  1177  014088  31                 	db	49
  1178  014089  44                 	db	68
  1179  01408A  45                 	db	69
  1180  01408B  52                 	db	82
  1181  01408C  46                 	db	70
  1182  01408D  07                 	db	7
  1183  01408E  01                 	db	1
  1184  01408F  41                 	db	65
  1185  014090  02                 	db	2
  1186  014091  01                 	db	1
  1187  014092  01                 	db	1
  1188  014093  01                 	db	1
  1189  014094  21                 	db	33
  1190  014095  02                 	db	2
  1191  014096  01                 	db	1
  1192  014097  0001               	dw	1
  1193  014099  0000               	dw	0
  1194  01409B  01                 	db	1
  1195  01409C  80                 	db	128
  1196  01409D  05                 	db	5
  1197  01409E  8A                 	db	138
  1198  01409F  00                 	db	0
  1199  0140A0  00                 	db	0
  1200  0140A1  35                 	db	53
  1201  0000                     _IVTADL	set	14493
  1202  0000                     _IVTADH	set	14494
  1203  0000                     _IVTADU	set	14495
  1204  0000                     _PIE8bits	set	14744
  1205  0000                     _PIR8bits	set	14760
  1206  0000                     _SCANPR	set	14839
  1207  0000                     _DMA2PR	set	14836
  1208  0000                     _DMA1PR	set	14835
  1209  0000                     _MAINPR	set	14834
  1210  0000                     _ISRPR	set	14833
  1211  0000                     _PIE2bits	set	14738
  1212  0000                     _PIR2bits	set	14754
  1213  0000                     _PIE9bits	set	14745
  1214  0000                     _PIR9bits	set	14761
  1215  0000                     _PIE6bits	set	14742
  1216  0000                     _PIE3bits	set	14739
  1217  0000                     _PMD7	set	14791
  1218  0000                     _PMD6	set	14790
  1219  0000                     _PMD5	set	14789
  1220  0000                     _PMD4	set	14788
  1221  0000                     _PMD3	set	14787
  1222  0000                     _PMD2	set	14786
  1223  0000                     _PMD1	set	14785
  1224  0000                     _PMD0	set	14784
  1225  0000                     _OSCTUNE	set	14814
  1226  0000                     _OSCFRQ	set	14815
  1227  0000                     _OSCEN	set	14813
  1228  0000                     _OSCCON3	set	14811
  1229  0000                     _OSCCON1	set	14809
  1230  0000                     _IPR8bits	set	14728
  1231  0000                     _IPR9bits	set	14729
  1232  0000                     _IPR7bits	set	14727
  1233  0000                     _IPR5bits	set	14725
  1234  0000                     _IPR1bits	set	14721
  1235  0000                     _IPR3bits	set	14723
  1236  0000                     _IPR6bits	set	14726
  1237  0000                     _IPR2bits	set	14722
  1238  0000                     _PIE7bits	set	14743
  1239  0000                     _PIE5bits	set	14741
  1240  0000                     _PIE1bits	set	14737
  1241  0000                     _PIR7bits	set	14759
  1242  0000                     _PIR5bits	set	14757
  1243  0000                     _PIR1bits	set	14753
  1244  0000                     _PLLR	set	118496
  1245  0000                     _SPI1SDIPPS	set	15071
  1246  0000                     _RC6PPS	set	14870
  1247  0000                     _RC5PPS	set	14869
  1248  0000                     _RA6PPS	set	14854
  1249  0000                     _RA5PPS	set	14853
  1250  0000                     _RA4PPS	set	14852
  1251  0000                     _SPI1SCKPPS	set	15070
  1252  0000                     _U1RXPPS	set	15077
  1253  0000                     _INT1PPS	set	15041
  1254  0000                     _INT2PPS	set	15042
  1255  0000                     _INT0PPS	set	15040
  1256  0000                     _RC3PPS	set	14867
  1257  0000                     _RB6PPS	set	14862
  1258  0000                     _U2RXPPS	set	15080
  1259  0000                     _SLRCONF	set	14995
  1260  0000                     _SLRCONE	set	14979
  1261  0000                     _SLRCOND	set	14963
  1262  0000                     _SLRCONC	set	14947
  1263  0000                     _SLRCONB	set	14931
  1264  0000                     _SLRCONA	set	14915
  1265  0000                     _ODCOND	set	14962
  1266  0000                     _ODCONC	set	14946
  1267  0000                     _ODCONB	set	14930
  1268  0000                     _ODCONA	set	14914
  1269  0000                     _ODCONF	set	14994
  1270  0000                     _ODCONE	set	14978
  1271  0000                     _WPUC	set	14945
  1272  0000                     _WPUA	set	14913
  1273  0000                     _WPUB	set	14929
  1274  0000                     _WPUE	set	14977
  1275  0000                     _WPUF	set	14993
  1276  0000                     _WPUD	set	14961
  1277  0000                     _ANSELA	set	14912
  1278  0000                     _ANSELF	set	14992
  1279  0000                     _ANSELE	set	14976
  1280  0000                     _ANSELB	set	14928
  1281  0000                     _ANSELC	set	14944
  1282  0000                     _ANSELD	set	14960
  1283  0000                     _DMA1SSA	set	15353
  1284  0000                     _DMA1DSZ	set	15342
  1285  0000                     _DMA1SSZ	set	15351
  1286  0000                     _DMA1DSA	set	15344
  1287  0000                     _DMA1CON0bits	set	15356
  1288  0000                     _DMA1CON1bits	set	15357
  1289  0000                     _DMA1CON0	set	15356
  1290  0000                     _DMA1AIRQ	set	15358
  1291  0000                     _DMA1SIRQ	set	15359
  1292  0000                     _DMA1CON1	set	15357
  1293  0000                     _CLC1CON	set	15476
  1294  0000                     _CLC1GLS3	set	15485
  1295  0000                     _CLC1GLS2	set	15484
  1296  0000                     _CLC1GLS1	set	15483
  1297  0000                     _CLC1GLS0	set	15482
  1298  0000                     _CLC1SEL3	set	15481
  1299  0000                     _CLC1SEL2	set	15480
  1300  0000                     _CLC1SEL1	set	15479
  1301  0000                     _CLC1SEL0	set	15478
  1302  0000                     _CLC1POL	set	15477
  1303  0000                     _CLKRCON	set	15589
  1304  0000                     _CLKRCLK	set	15590
  1305  0000                     _MD1CARL	set	15613
  1306  0000                     _MD1CARH	set	15614
  1307  0000                     _MD1SRC	set	15612
  1308  0000                     _MD1CON1bits	set	15611
  1309  0000                     _MD1CON0bits	set	15610
  1310  0000                     _SPI1INTFbits	set	15642
  1311  0000                     _SPI1RXB	set	15632
  1312  0000                     _SPI1TXB	set	15633
  1313  0000                     _SPI1TCNTL	set	15634
  1314  0000                     _SPI1CON0	set	15636
  1315  0000                     _SPI1CLK	set	15644
  1316  0000                     _SPI1BAUD	set	15641
  1317  0000                     _SPI1CON2	set	15638
  1318  0000                     _SPI1CON1	set	15637
  1319  0000                     _U2RXB	set	15824
  1320  0000                     _U2TXB	set	15826
  1321  0000                     _U2ERRIE	set	15842
  1322  0000                     _U2ERRIR	set	15841
  1323  0000                     _U2UIR	set	15840
  1324  0000                     _U2FIFO	set	15839
  1325  0000                     _U2BRGH	set	15838
  1326  0000                     _U2BRGL	set	15837
  1327  0000                     _U2CON2	set	15836
  1328  0000                     _U2CON1	set	15835
  1329  0000                     _U2CON0	set	15834
  1330  0000                     _U2P3L	set	15832
  1331  0000                     _U2P2L	set	15830
  1332  0000                     _U2P1L	set	15828
  1333  0000                     _U1RXB	set	15848
  1334  0000                     _U1TXB	set	15850
  1335  0000                     _U1ERRIE	set	15866
  1336  0000                     _U1ERRIR	set	15865
  1337  0000                     _U1UIR	set	15864
  1338  0000                     _U1FIFO	set	15863
  1339  0000                     _U1BRGH	set	15862
  1340  0000                     _U1BRGL	set	15861
  1341  0000                     _U1CON2	set	15860
  1342  0000                     _U1CON1	set	15859
  1343  0000                     _U1CON0	set	15858
  1344  0000                     _U1P3H	set	15857
  1345  0000                     _U1P3L	set	15856
  1346  0000                     _U1P2H	set	15855
  1347  0000                     _U1P2L	set	15854
  1348  0000                     _U1P1H	set	15853
  1349  0000                     _U1P1L	set	15852
  1350  0000                     _ADCON0	set	16120
  1351  0000                     _ADCLK	set	16127
  1352  0000                     _ADACT	set	16126
  1353  0000                     _ADREF	set	16125
  1354  0000                     _ADSTAT	set	16124
  1355  0000                     _ADCON3	set	16123
  1356  0000                     _ADCON2	set	16122
  1357  0000                     _ADCON1	set	16121
  1358  0000                     _ADPREH	set	16119
  1359  0000                     _ADPREL	set	16118
  1360  0000                     _ADCAP	set	16117
  1361  0000                     _ADACQH	set	16116
  1362  0000                     _ADACQL	set	16115
  1363  0000                     _ADPCH	set	16113
  1364  0000                     _ADRPT	set	16108
  1365  0000                     _ADACCU	set	16106
  1366  0000                     _ADSTPTH	set	16101
  1367  0000                     _ADSTPTL	set	16100
  1368  0000                     _ADUTHH	set	16097
  1369  0000                     _ADUTHL	set	16096
  1370  0000                     _ADLTHH	set	16095
  1371  0000                     _ADLTHL	set	16094
  1372  0000                     _NCO1CONbits	set	16190
  1373  0000                     _NCO1INCL	set	16187
  1374  0000                     _NCO1INCH	set	16188
  1375  0000                     _NCO1INCU	set	16189
  1376  0000                     _NCO1ACCL	set	16184
  1377  0000                     _NCO1ACCH	set	16185
  1378  0000                     _NCO1ACCU	set	16186
  1379  0000                     _NCO1CLK	set	16191
  1380  0000                     _NCO1CON	set	16190
  1381  0000                     _LATCbits	set	16316
  1382  0000                     _LATDbits	set	16317
  1383  0000                     _PORTBbits	set	16331
  1384  0000                     _T5CONbits	set	16282
  1385  0000                     _T5CON	set	16282
  1386  0000                     _TMR5L	set	16280
  1387  0000                     _TMR5H	set	16281
  1388  0000                     _T5CLK	set	16285
  1389  0000                     _T5GATE	set	16284
  1390  0000                     _T5GCON	set	16283
  1391  0000                     _LATEbits	set	16318
  1392  0000                     _T6CON	set	16276
  1393  0000                     _T6TMR	set	16274
  1394  0000                     _T6PR	set	16275
  1395  0000                     _T6RST	set	16279
  1396  0000                     _T6HLT	set	16277
  1397  0000                     _T6CLKCON	set	16278
  1398  0000                     _TRISD	set	16325
  1399  0000                     _TRISC	set	16324
  1400  0000                     _TRISB	set	16323
  1401  0000                     _TRISA	set	16322
  1402  0000                     _TRISF	set	16327
  1403  0000                     _TRISE	set	16326
  1404  0000                     _LATC	set	16316
  1405  0000                     _LATB	set	16315
  1406  0000                     _LATF	set	16319
  1407  0000                     _LATA	set	16314
  1408  0000                     _LATD	set	16317
  1409  0000                     _LATE	set	16318
  1410  0000                     _IVTLOCKbits	set	16340
  1411  0000                     _IVTLOCK	set	16340
  1412  0000                     _INTCON0bits	set	16338
  1413  0000                     _GIE	set	130711
  1414                           
  1415                           	psect	mediumconst
  1416  00FEC0                     __pmediumconst:
  1417                           	opt callstack 0
  1418  00FEC0  00                 	db	0
  1419  00FEC1  52                 	db	82	;'R'
  1420  00FEC2  25                 	db	37
  1421  00FEC3  64                 	db	100	;'d'
  1422  00FEC4  20                 	db	32
  1423  00FEC5  25                 	db	37
  1424  00FEC6  64                 	db	100	;'d'
  1425  00FEC7  2C                 	db	44
  1426  00FEC8  20                 	db	32
  1427  00FEC9  54                 	db	84	;'T'
  1428  00FECA  25                 	db	37
  1429  00FECB  64                 	db	100	;'d'
  1430  00FECC  20                 	db	32
  1431  00FECD  25                 	db	37
  1432  00FECE  64                 	db	100	;'d'
  1433  00FECF  20                 	db	32
  1434  00FED0  43                 	db	67	;'C'
  1435  00FED1  25                 	db	37
  1436  00FED2  64                 	db	100	;'d'
  1437  00FED3  20                 	db	32
  1438  00FED4  20                 	db	32
  1439  00FED5  46                 	db	70	;'F'
  1440  00FED6  47                 	db	71	;'G'
  1441  00FED7  42                 	db	66	;'B'
  1442  00FED8  40                 	db	64	;'@'
  1443  00FED9  4D                 	db	77	;'M'
  1444  00FEDA  43                 	db	67	;'C'
  1445  00FEDB  48                 	db	72	;'H'
  1446  00FEDC  50                 	db	80	;'P'
  1447  00FEDD  20                 	db	32
  1448  00FEDE  25                 	db	37
  1449  00FEDF  73                 	db	115	;'s'
  1450  00FEE0  20                 	db	32
  1451  00FEE1  20                 	db	32
  1452  00FEE2  20                 	db	32
  1453  00FEE3  20                 	db	32
  1454  00FEE4  20                 	db	32
  1455  00FEE5  20                 	db	32
  1456  00FEE6  20                 	db	32
  1457  00FEE7  20                 	db	32
  1458  00FEE8  20                 	db	32
  1459  00FEE9  20                 	db	32
  1460  00FEEA  20                 	db	32
  1461  00FEEB  20                 	db	32
  1462  00FEEC  20                 	db	32
  1463  00FEED  20                 	db	32
  1464  00FEEE  20                 	db	32
  1465  00FEEF  20                 	db	32
  1466  00FEF0  20                 	db	32
  1467  00FEF1  20                 	db	32
  1468  00FEF2  20                 	db	32
  1469  00FEF3  20                 	db	32
  1470  00FEF4  20                 	db	32
  1471  00FEF5  20                 	db	32
  1472  00FEF6  20                 	db	32
  1473  00FEF7  20                 	db	32
  1474  00FEF8  20                 	db	32
  1475  00FEF9  20                 	db	32
  1476  00FEFA  20                 	db	32
  1477  00FEFB  20                 	db	32
  1478  00FEFC  20                 	db	32
  1479  00FEFD  20                 	db	32
  1480  00FEFE  20                 	db	32
  1481  00FEFF  20                 	db	32
  1482  00FF00  20                 	db	32
  1483  00FF01  20                 	db	32
  1484  00FF02  20                 	db	32
  1485  00FF03  20                 	db	32
  1486  00FF04  20                 	db	32
  1487  00FF05  20                 	db	32
  1488  00FF06  20                 	db	32
  1489  00FF07  20                 	db	32
  1490  00FF08  20                 	db	32
  1491  00FF09  20                 	db	32
  1492  00FF0A  20                 	db	32
  1493  00FF0B  20                 	db	32
  1494  00FF0C  20                 	db	32
  1495  00FF0D  20                 	db	32
  1496  00FF0E  20                 	db	32
  1497  00FF0F  20                 	db	32
  1498  00FF10  20                 	db	32
  1499  00FF11  20                 	db	32
  1500  00FF12  20                 	db	32
  1501  00FF13  20                 	db	32
  1502  00FF14  20                 	db	32
  1503  00FF15  20                 	db	32
  1504  00FF16  20                 	db	32
  1505  00FF17  20                 	db	32
  1506  00FF18  20                 	db	32
  1507  00FF19  20                 	db	32
  1508  00FF1A  20                 	db	32
  1509  00FF1B  00                 	db	0
  1510  00FF1C                     STR_13:
  1511  00FF1C  4C                 	db	76	;'L'
  1512  00FF1D  4F                 	db	79	;'O'
  1513  00FF1E  47                 	db	71	;'G'
  1514  00FF1F  3A                 	db	58	;':'
  1515  00FF20  20                 	db	32
  1516  00FF21  55                 	db	85	;'U'
  1517  00FF22  25                 	db	37
  1518  00FF23  64                 	db	100	;'d'
  1519  00FF24  20                 	db	32
  1520  00FF25  47                 	db	71	;'G'
  1521  00FF26  25                 	db	37
  1522  00FF27  64                 	db	100	;'d'
  1523  00FF28  20                 	db	32
  1524  00FF29  25                 	db	37
  1525  00FF2A  64                 	db	100	;'d'
  1526  00FF2B  20                 	db	32
  1527  00FF2C  25                 	db	37
  1528  00FF2D  64                 	db	100	;'d'
  1529  00FF2E  20                 	db	32
  1530  00FF2F  20                 	db	32
  1531  00FF30  20                 	db	32
  1532  00FF31  20                 	db	32
  1533  00FF32  20                 	db	32
  1534  00FF33  20                 	db	32
  1535  00FF34  23                 	db	35
  1536  00FF35  00                 	db	0
  1537  00FF36                     STR_17:
  1538  00FF36  52                 	db	82	;'R'
  1539  00FF37  25                 	db	37
  1540  00FF38  64                 	db	100	;'d'
  1541  00FF39  20                 	db	32
  1542  00FF3A  25                 	db	37
  1543  00FF3B  64                 	db	100	;'d'
  1544  00FF3C  2C                 	db	44
  1545  00FF3D  20                 	db	32
  1546  00FF3E  54                 	db	84	;'T'
  1547  00FF3F  25                 	db	37
  1548  00FF40  64                 	db	100	;'d'
  1549  00FF41  20                 	db	32
  1550  00FF42  25                 	db	37
  1551  00FF43  64                 	db	100	;'d'
  1552  00FF44  20                 	db	32
  1553  00FF45  43                 	db	67	;'C'
  1554  00FF46  25                 	db	37
  1555  00FF47  64                 	db	100	;'d'
  1556  00FF48  20                 	db	32
  1557  00FF49  20                 	db	32
  1558  00FF4A  20                 	db	32
  1559  00FF4B  20                 	db	32
  1560  00FF4C  20                 	db	32
  1561  00FF4D  20                 	db	32
  1562  00FF4E  23                 	db	35
  1563  00FF4F  00                 	db	0
  1564  00FF50                     STR_5:
  1565  00FF50  48                 	db	72	;'H'
  1566  00FF51  4F                 	db	79	;'O'
  1567  00FF52  53                 	db	83	;'S'
  1568  00FF53  54                 	db	84	;'T'
  1569  00FF54  3A                 	db	58	;':'
  1570  00FF55  20                 	db	32
  1571  00FF56  25                 	db	37
  1572  00FF57  6C                 	db	108	;'l'
  1573  00FF58  64                 	db	100	;'d'
  1574  00FF59  20                 	db	32
  1575  00FF5A  47                 	db	71	;'G'
  1576  00FF5B  25                 	db	37
  1577  00FF5C  64                 	db	100	;'d'
  1578  00FF5D  20                 	db	32
  1579  00FF5E  20                 	db	32
  1580  00FF5F  20                 	db	32
  1581  00FF60  20                 	db	32
  1582  00FF61  20                 	db	32
  1583  00FF62  20                 	db	32
  1584  00FF63  23                 	db	35
  1585  00FF64  00                 	db	0
  1586  00FF65                     STR_14:
  1587  00FF65  20                 	db	32
  1588  00FF66  53                 	db	83	;'S'
  1589  00FF67  25                 	db	37
  1590  00FF68  64                 	db	100	;'d'
  1591  00FF69  46                 	db	70	;'F'
  1592  00FF6A  25                 	db	37
  1593  00FF6B  64                 	db	100	;'d'
  1594  00FF6C  20                 	db	32
  1595  00FF6D  23                 	db	35
  1596  00FF6E  25                 	db	37
  1597  00FF6F  6C                 	db	108	;'l'
  1598  00FF70  64                 	db	100	;'d'
  1599  00FF71  20                 	db	32
  1600  00FF72  20                 	db	32
  1601  00FF73  20                 	db	32
  1602  00FF74  20                 	db	32
  1603  00FF75  20                 	db	32
  1604  00FF76  00                 	db	0
  1605  00FF77                     STR_10:
  1606  00FF77  45                 	db	69	;'E'
  1607  00FF78  25                 	db	37
  1608  00FF79  64                 	db	100	;'d'
  1609  00FF7A  20                 	db	32
  1610  00FF7B  41                 	db	65	;'A'
  1611  00FF7C  25                 	db	37
  1612  00FF7D  64                 	db	100	;'d'
  1613  00FF7E  20                 	db	32
  1614  00FF7F  54                 	db	84	;'T'
  1615  00FF80  25                 	db	37
  1616  00FF81  64                 	db	100	;'d'
  1617  00FF82  20                 	db	32
  1618  00FF83  47                 	db	71	;'G'
  1619  00FF84  25                 	db	37
  1620  00FF85  64                 	db	100	;'d'
  1621  00FF86  20                 	db	32
  1622  00FF87  23                 	db	35
  1623  00FF88  00                 	db	0
  1624  00FF89                     STR_12:
  1625  00FF89  20                 	db	32
  1626  00FF8A  50                 	db	80	;'P'
  1627  00FF8B  69                 	db	105	;'i'
  1628  00FF8C  6E                 	db	110	;'n'
  1629  00FF8D  67                 	db	103	;'g'
  1630  00FF8E  20                 	db	32
  1631  00FF8F  47                 	db	71	;'G'
  1632  00FF90  25                 	db	37
  1633  00FF91  64                 	db	100	;'d'
  1634  00FF92  20                 	db	32
  1635  00FF93  20                 	db	32
  1636  00FF94  50                 	db	80	;'P'
  1637  00FF95  25                 	db	37
  1638  00FF96  64                 	db	100	;'d'
  1639  00FF97  20                 	db	32
  1640  00FF98  23                 	db	35
  1641  00FF99  00                 	db	0
  1642  00FF9A                     STR_1:
  1643  00FF9A  20                 	db	32
  1644  00FF9B  52                 	db	82	;'R'
  1645  00FF9C  56                 	db	86	;'V'
  1646  00FF9D  49                 	db	73	;'I'
  1647  00FF9E  20                 	db	32
  1648  00FF9F  48                 	db	72	;'H'
  1649  00FFA0  4F                 	db	79	;'O'
  1650  00FFA1  53                 	db	83	;'S'
  1651  00FFA2  54                 	db	84	;'T'
  1652  00FFA3  20                 	db	32
  1653  00FFA4  54                 	db	84	;'T'
  1654  00FFA5  45                 	db	69	;'E'
  1655  00FFA6  53                 	db	83	;'S'
  1656  00FFA7  54                 	db	84	;'T'
  1657  00FFA8  45                 	db	69	;'E'
  1658  00FFA9  52                 	db	82	;'R'
  1659  00FFAA  00                 	db	0
  1660  00FFAB                     STR_6:
  1661  00FFAB  53                 	db	83	;'S'
  1662  00FFAC  25                 	db	37
  1663  00FFAD  64                 	db	100	;'d'
  1664  00FFAE  46                 	db	70	;'F'
  1665  00FFAF  25                 	db	37
  1666  00FFB0  64                 	db	100	;'d'
  1667  00FFB1  20                 	db	32
  1668  00FFB2  45                 	db	69	;'E'
  1669  00FFB3  72                 	db	114	;'r'
  1670  00FFB4  72                 	db	114	;'r'
  1671  00FFB5  20                 	db	32
  1672  00FFB6  20                 	db	32
  1673  00FFB7  20                 	db	32
  1674  00FFB8  20                 	db	32
  1675  00FFB9  00                 	db	0
  1676  00FFBA                     STR_4:
  1677  00FFBA  20                 	db	32
  1678  00FFBB  48                 	db	72	;'H'
  1679  00FFBC  32                 	db	50	;'2'
  1680  00FFBD  35                 	db	53	;'5'
  1681  00FFBE  34                 	db	52	;'4'
  1682  00FFBF  20                 	db	32
  1683  00FFC0  25                 	db	37
  1684  00FFC1  64                 	db	100	;'d'
  1685  00FFC2  2C                 	db	44
  1686  00FFC3  20                 	db	32
  1687  00FFC4  54                 	db	84	;'T'
  1688  00FFC5  25                 	db	37
  1689  00FFC6  6C                 	db	108	;'l'
  1690  00FFC7  64                 	db	100	;'d'
  1691  00FFC8  00                 	db	0
  1692  00FFC9                     STR_7:
  1693  00FFC9  20                 	db	32
  1694  00FFCA  53                 	db	83	;'S'
  1695  00FFCB  25                 	db	37
  1696  00FFCC  64                 	db	100	;'d'
  1697  00FFCD  46                 	db	70	;'F'
  1698  00FFCE  25                 	db	37
  1699  00FFCF  64                 	db	100	;'d'
  1700  00FFD0  20                 	db	32
  1701  00FFD1  23                 	db	35
  1702  00FFD2  20                 	db	32
  1703  00FFD3  20                 	db	32
  1704  00FFD4  20                 	db	32
  1705  00FFD5  20                 	db	32
  1706  00FFD6  00                 	db	0
  1707  00FFD7                     STR_2:
  1708  00FFD7  20                 	db	32
  1709  00FFD8  56                 	db	86	;'V'
  1710  00FFD9  65                 	db	101	;'e'
  1711  00FFDA  72                 	db	114	;'r'
  1712  00FFDB  73                 	db	115	;'s'
  1713  00FFDC  69                 	db	105	;'i'
  1714  00FFDD  6F                 	db	111	;'o'
  1715  00FFDE  6E                 	db	110	;'n'
  1716  00FFDF  20                 	db	32
  1717  00FFE0  25                 	db	37
  1718  00FFE1  73                 	db	115	;'s'
  1719  00FFE2  00                 	db	0
  1720  00FFE3                     STR_9:
  1721  00FFE3  20                 	db	32
  1722  00FFE4  4F                 	db	79	;'O'
  1723  00FFE5  4B                 	db	75	;'K'
  1724  00FFE6  20                 	db	32
  1725  00FFE7  23                 	db	35
  1726  00FFE8  00                 	db	0
  1727  00FFE9                     STR_8:
  1728  00FFE9  20                 	db	32
  1729  00FFEA  4F                 	db	79	;'O'
  1730  00FFEB  4B                 	db	75	;'K'
  1731  00FFEC  51                 	db	81	;'Q'
  1732  00FFED  23                 	db	35
  1733  00FFEE  00                 	db	0
  1734  00FFEF                     STR_3:
  1735  00FFEF  30                 	db	48	;'0'
  1736  00FFF0  2E                 	db	46
  1737  00FFF1  39                 	db	57	;'9'
  1738  00FFF2  39                 	db	57	;'9'
  1739  00FFF3  42                 	db	66	;'B'
  1740  00FFF4  00                 	db	0
  1741  00FFF5                     STR_15:
  1742  00FFF5  4F                 	db	79	;'O'
  1743  00FFF6  4B                 	db	75	;'K'
  1744  00FFF7  20                 	db	32
  1745  00FFF8  00                 	db	0
  1746  00FFF9                     STR_27:
  1747  00FFF9  6C                 	db	108	;'l'
  1748  00FFFA  69                 	db	105	;'i'
  1749  00FFFB  00                 	db	0
  1750  00FFFC                     STR_19:
  1751  00FFFC  25                 	db	37
  1752  00FFFD  63                 	db	99	;'c'
  1753  00FFFE  00                 	db	0
  1754  0000                     
  1755                           ; #config settings
  1756  00FFFF  00                 	db	0	; dummy byte at the end
  1757  0000                     
  1758                           	psect	cinit
  1759  013722                     __pcinit:
  1760                           	opt callstack 0
  1761  013722                     start_initialization:
  1762                           	opt callstack 0
  1763  013722                     __initialization:
  1764                           	opt callstack 0
  1765                           
  1766                           ; Initialize objects allocated to BIGRAM (559 bytes)
  1767                           ; load TBLPTR registers with __pidataBIGRAM
  1768  013722  0EB4               	movlw	low __pidataBIGRAM
  1769  013724  6EF6               	movwf	tblptrl,c
  1770  013726  0E2F               	movlw	high __pidataBIGRAM
  1771  013728  6EF7               	movwf	tblptrh,c
  1772  01372A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  1773  01372C  6EF8               	movwf	tblptru,c
  1774  01372E  EE00  F3F6         	lfsr	0,__pdataBIGRAM
  1775  013732  EE20 F22F          	lfsr	2,559
  1776  013736                     copy_data0:
  1777  013736  0009               	tblrd		*+
  1778  013738  006F FFD7 FFEE     	movff	tablat,postinc0
  1779  01373E  50DD               	movf	postdec2,w,c
  1780  013740  50D9               	movf	fsr2l,w,c
  1781  013742  E1F9               	bnz	copy_data0
  1782  013744  50DA               	movf	fsr2h,w,c
  1783  013746  E1F7               	bnz	copy_data0
  1784                           
  1785                           ; Initialize objects allocated to BANK3 (112 bytes)
  1786                           ; load TBLPTR registers with __pidataBANK3
  1787  013748  0E32               	movlw	low __pidataBANK3
  1788  01374A  6EF6               	movwf	tblptrl,c
  1789  01374C  0E40               	movlw	high __pidataBANK3
  1790  01374E  6EF7               	movwf	tblptrh,c
  1791  013750  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1792  013752  6EF8               	movwf	tblptru,c
  1793  013754  EE00  F386         	lfsr	0,__pdataBANK3
  1794  013758  EE20 F070          	lfsr	2,112
  1795  01375C                     copy_data1:
  1796  01375C  0009               	tblrd		*+
  1797  01375E  006F FFD7 FFEE     	movff	tablat,postinc0
  1798  013764  50DD               	movf	postdec2,w,c
  1799  013766  50D9               	movf	fsr2l,w,c
  1800  013768  E1F9               	bnz	copy_data1
  1801                           
  1802                           ; Initialize objects allocated to BANK1 (166 bytes)
  1803                           ; load TBLPTR registers with __pidataBANK1
  1804  01376A  0E94               	movlw	low __pidataBANK1
  1805  01376C  6EF6               	movwf	tblptrl,c
  1806  01376E  0E3C               	movlw	high __pidataBANK1
  1807  013770  6EF7               	movwf	tblptrh,c
  1808  013772  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1809  013774  6EF8               	movwf	tblptru,c
  1810  013776  EE00  F100         	lfsr	0,__pdataBANK1
  1811  01377A  EE20 F0A6          	lfsr	2,166
  1812  01377E                     copy_data2:
  1813  01377E  0009               	tblrd		*+
  1814  013780  006F FFD7 FFEE     	movff	tablat,postinc0
  1815  013786  50DD               	movf	postdec2,w,c
  1816  013788  50D9               	movf	fsr2l,w,c
  1817  01378A  E1F9               	bnz	copy_data2
  1818                           
  1819                           ; Initialize objects allocated to BANK0 (74 bytes)
  1820                           ; load TBLPTR registers with __pidataBANK0
  1821  01378C  0E36               	movlw	low __pidataBANK0
  1822  01378E  6EF6               	movwf	tblptrl,c
  1823  013790  0E44               	movlw	high __pidataBANK0
  1824  013792  6EF7               	movwf	tblptrh,c
  1825  013794  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1826  013796  6EF8               	movwf	tblptru,c
  1827  013798  EE00  F060         	lfsr	0,__pdataBANK0
  1828  01379C  EE20 F04A          	lfsr	2,74
  1829  0137A0                     copy_data3:
  1830  0137A0  0009               	tblrd		*+
  1831  0137A2  006F FFD7 FFEE     	movff	tablat,postinc0
  1832  0137A8  50DD               	movf	postdec2,w,c
  1833  0137AA  50D9               	movf	fsr2l,w,c
  1834  0137AC  E1F9               	bnz	copy_data3
  1835                           
  1836                           ; Initialize objects allocated to COMRAM (1 bytes)
  1837                           ; load TBLPTR registers with __pidataCOMRAM
  1838  0137AE  0EF2               	movlw	low __pidataCOMRAM
  1839  0137B0  6EF6               	movwf	tblptrl,c
  1840  0137B2  0E4E               	movlw	high __pidataCOMRAM
  1841  0137B4  6EF7               	movwf	tblptrh,c
  1842  0137B6  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1843  0137B8  6EF8               	movwf	tblptru,c
  1844  0137BA  0009               	tblrd		*+	;fetch initializer
  1845  0137BC  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1846                           
  1847                           ; Clear objects allocated to BANK3 (134 bytes)
  1848  0137C2  EE00  F300         	lfsr	0,__pbssBANK3
  1849  0137C6  0E86               	movlw	134
  1850  0137C8                     clear_0:
  1851  0137C8  6AEE               	clrf	postinc0,c
  1852  0137CA  06E8               	decf	wreg,f,c
  1853  0137CC  E1FD               	bnz	clear_0
  1854                           
  1855                           ; Clear objects allocated to BANK2 (256 bytes)
  1856  0137CE  EE00  F200         	lfsr	0,__pbssBANK2
  1857  0137D2  EE20 F100          	lfsr	2,256
  1858  0137D6                     clear_1:
  1859  0137D6  6AEE               	clrf	postinc0,c
  1860  0137D8  50DD               	movf	postdec2,w,c
  1861  0137DA  50D9               	movf	fsr2l,w,c
  1862  0137DC  E1FC               	bnz	clear_1
  1863  0137DE  50DA               	movf	fsr2h,w,c
  1864  0137E0  E1FA               	bnz	clear_1
  1865                           
  1866                           ; Clear objects allocated to BANK1 (32 bytes)
  1867  0137E2  EE00  F1A6         	lfsr	0,__pbssBANK1
  1868  0137E6  0E20               	movlw	32
  1869  0137E8                     clear_2:
  1870  0137E8  6AEE               	clrf	postinc0,c
  1871  0137EA  06E8               	decf	wreg,f,c
  1872  0137EC  E1FD               	bnz	clear_2
  1873                           
  1874                           ; Clear objects allocated to BANK0 (69 bytes)
  1875  0137EE  EE00  F0AA         	lfsr	0,__pbssBANK0
  1876  0137F2  0E45               	movlw	69
  1877  0137F4                     clear_3:
  1878  0137F4  6AEE               	clrf	postinc0,c
  1879  0137F6  06E8               	decf	wreg,f,c
  1880  0137F8  E1FD               	bnz	clear_3
  1881                           
  1882                           ; Clear objects allocated to COMRAM (60 bytes)
  1883  0137FA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1884  0137FE  0E3C               	movlw	60
  1885  013800                     clear_4:
  1886  013800  6AEE               	clrf	postinc0,c
  1887  013802  06E8               	decf	wreg,f,c
  1888  013804  E1FD               	bnz	clear_4
  1889                           
  1890                           ;
  1891                           ; Setup IVTBASE
  1892                           ;
  1893  013806  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1894  013808  6ED5               	movwf	213,c
  1895  01380A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1896  01380C  6ED6               	movwf	214,c
  1897  01380E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1898  013810  6ED7               	movwf	215,c
  1899  013812                     end_of_initialization:
  1900                           	opt callstack 0
  1901  013812                     __end_of__initialization:
  1902                           	opt callstack 0
  1903  013812  0100               	movlb	0
  1904  013814  EF00  F080         	goto	_main	;jump to C main() function
  1905                           
  1906                           	psect	bssCOMRAM
  1907  000001                     __pbssCOMRAM:
  1908                           	opt callstack 0
  1909  000001                     secs_II_message@block:
  1910                           	opt callstack 0
  1911  000001                     	ds	7
  1912  000008                     _UART1_TxInterruptHandler:
  1913                           	opt callstack 0
  1914  000008                     	ds	3
  1915  00000B                     _UART1_RxInterruptHandler:
  1916                           	opt callstack 0
  1917  00000B                     	ds	3
  1918  00000E                     _UART2_TxInterruptHandler:
  1919                           	opt callstack 0
  1920  00000E                     	ds	3
  1921  000011                     _UART2_RxInterruptHandler:
  1922                           	opt callstack 0
  1923  000011                     	ds	3
  1924  000014                     _INT2_InterruptHandler:
  1925                           	opt callstack 0
  1926  000014                     	ds	3
  1927  000017                     _INT1_InterruptHandler:
  1928                           	opt callstack 0
  1929  000017                     	ds	3
  1930  00001A                     _INT0_InterruptHandler:
  1931                           	opt callstack 0
  1932  00001A                     	ds	3
  1933  00001D                     _width:
  1934                           	opt callstack 0
  1935  00001D                     	ds	2
  1936  00001F                     _prec:
  1937                           	opt callstack 0
  1938  00001F                     	ds	2
  1939  000021                     _flags:
  1940                           	opt callstack 0
  1941  000021                     	ds	2
  1942  000023                     r_protocol@b_block:
  1943                           	opt callstack 0
  1944  000023                     	ds	2
  1945  000025                     run_checksum@sum:
  1946                           	opt callstack 0
  1947  000025                     	ds	2
  1948  000027                     TMR5_ISR@CountCallBack:
  1949                           	opt callstack 0
  1950  000027                     	ds	2
  1951  000029                     _timer5ReloadVal:
  1952                           	opt callstack 0
  1953  000029                     	ds	2
  1954  00002B                     secs_gem_state@block:
  1955                           	opt callstack 0
  1956  00002B                     	ds	1
  1957  00002C                     t_protocol@requeue:
  1958                           	opt callstack 0
  1959  00002C                     	ds	1
  1960  00002D                     t_protocol@retry:
  1961                           	opt callstack 0
  1962  00002D                     	ds	1
  1963  00002E                     r_protocol@rxData_l:
  1964                           	opt callstack 0
  1965  00002E                     	ds	1
  1966  00002F                     m_protocol@rxData_l:
  1967                           	opt callstack 0
  1968  00002F                     	ds	1
  1969  000030                     _mode_sw:
  1970                           	opt callstack 0
  1971  000030                     	ds	1
  1972  000031                     _uart2RxCount:
  1973                           	opt callstack 0
  1974  000031                     	ds	1
  1975  000032                     _uart2RxTail:
  1976                           	opt callstack 0
  1977  000032                     	ds	1
  1978  000033                     _uart2RxHead:
  1979                           	opt callstack 0
  1980  000033                     	ds	1
  1981  000034                     _uart2TxBufferRemaining:
  1982                           	opt callstack 0
  1983  000034                     	ds	1
  1984  000035                     _uart2TxTail:
  1985                           	opt callstack 0
  1986  000035                     	ds	1
  1987  000036                     _uart2TxHead:
  1988                           	opt callstack 0
  1989  000036                     	ds	1
  1990  000037                     _uart1RxCount:
  1991                           	opt callstack 0
  1992  000037                     	ds	1
  1993  000038                     _uart1RxTail:
  1994                           	opt callstack 0
  1995  000038                     	ds	1
  1996  000039                     _uart1RxHead:
  1997                           	opt callstack 0
  1998  000039                     	ds	1
  1999  00003A                     _uart1TxBufferRemaining:
  2000                           	opt callstack 0
  2001  00003A                     	ds	1
  2002  00003B                     _uart1TxTail:
  2003                           	opt callstack 0
  2004  00003B                     	ds	1
  2005  00003C                     _uart1TxHead:
  2006                           	opt callstack 0
  2007  00003C                     	ds	1
  2008                           
  2009                           	psect	dataCOMRAM
  2010  00005D                     __pdataCOMRAM:
  2011                           	opt callstack 0
  2012  00005D                     r_protocol@retry:
  2013                           	opt callstack 0
  2014  00005D                     	ds	1
  2015                           
  2016                           	psect	bssBANK0
  2017  0000AA                     __pbssBANK0:
  2018                           	opt callstack 0
  2019  0000AA                     _tickCount:
  2020                           	opt callstack 0
  2021  0000AA                     	ds	14
  2022  0000B8                     _r_block:
  2023                           	opt callstack 0
  2024  0000B8                     	ds	13
  2025  0000C5                     _spi_link:
  2026                           	opt callstack 0
  2027  0000C5                     	ds	12
  2028  0000D1                     t_protocol@block:
  2029                           	opt callstack 0
  2030  0000D1                     	ds	7
  2031  0000D8                     wdtdelay@dcount:
  2032                           	opt callstack 0
  2033  0000D8                     	ds	4
  2034  0000DC                     _TMR5_InterruptHandler:
  2035                           	opt callstack 0
  2036  0000DC                     	ds	3
  2037  0000DF                     _TMR6_InterruptHandler:
  2038                           	opt callstack 0
  2039  0000DF                     	ds	3
  2040  0000E2                     _ADCC_ADI_InterruptHandler:
  2041                           	opt callstack 0
  2042  0000E2                     	ds	3
  2043  0000E5                     _nout:
  2044                           	opt callstack 0
  2045  0000E5                     	ds	2
  2046  0000E7                     _seed:
  2047                           	opt callstack 0
  2048  0000E7                     	ds	8
  2049                           
  2050                           	psect	dataBANK0
  2051  000060                     __pdataBANK0:
  2052                           	opt callstack 0
  2053  000060                     stoa@F1144:
  2054                           	opt callstack 0
  2055  000060                     	ds	7
  2056  000067                     _H12:
  2057                           	opt callstack 0
  2058  000067                     	ds	30
  2059  000085                     _H17:
  2060                           	opt callstack 0
  2061  000085                     	ds	20
  2062  000099                     _H14:
  2063                           	opt callstack 0
  2064  000099                     	ds	17
  2065                           
  2066                           	psect	bssBANK1
  2067  0001A6                     __pbssBANK1:
  2068                           	opt callstack 0
  2069  0001A6                     _dbuf:
  2070                           	opt callstack 0
  2071  0001A6                     	ds	32
  2072                           
  2073                           	psect	dataBANK1
  2074  000100                     __pdataBANK1:
  2075                           	opt callstack 0
  2076  000100                     _H10:
  2077                           	opt callstack 0
  2078  000100                     	ds	91
  2079  00015B                     _H13:
  2080                           	opt callstack 0
  2081  00015B                     	ds	48
  2082  00018B                     _H24:
  2083                           	opt callstack 0
  2084  00018B                     	ds	27
  2085                           
  2086                           	psect	bssBANK2
  2087  000200                     __pbssBANK2:
  2088                           	opt callstack 0
  2089  000200                     _uart2RxBuffer:
  2090                           	opt callstack 0
  2091  000200                     	ds	64
  2092  000240                     _uart2TxBuffer:
  2093                           	opt callstack 0
  2094  000240                     	ds	64
  2095  000280                     _uart1RxBuffer:
  2096                           	opt callstack 0
  2097  000280                     	ds	64
  2098  0002C0                     _uart1TxBuffer:
  2099                           	opt callstack 0
  2100  0002C0                     	ds	64
  2101                           
  2102                           	psect	bssBANK3
  2103  000300                     __pbssBANK3:
  2104                           	opt callstack 0
  2105  000300                     _ring_buf2:
  2106                           	opt callstack 0
  2107  000300                     	ds	67
  2108  000343                     _ring_buf1:
  2109                           	opt callstack 0
  2110  000343                     	ds	67
  2111                           
  2112                           	psect	dataBANK3
  2113  000386                     __pdataBANK3:
  2114                           	opt callstack 0
  2115  000386                     _H53:
  2116                           	opt callstack 0
  2117  000386                     	ds	112
  2118                           
  2119                           	psect	dataBIGRAM
  2120  0003F6                     __pdataBIGRAM:
  2121                           	opt callstack 0
  2122  0003F6                     _V:
  2123                           	opt callstack 0
  2124  0003F6                     	ds	302
  2125  000524                     _H254:
  2126                           	opt callstack 0
  2127  000524                     	ds	257
  2128                           
  2129                           	psect	cstackBANK0
  2130  0000EF                     __pcstackBANK0:
  2131                           	opt callstack 0
  2132  0000EF                     ??_TMR5_ISR:
  2133                           
  2134                           ; 1 bytes @ 0x0
  2135  0000EF                     	ds	3
  2136                           
  2137                           	psect	cstackCOMRAM
  2138  00005E                     __pcstackCOMRAM:
  2139                           	opt callstack 0
  2140  00005E                     ??_TMR6_ISR:
  2141  00005E                     
  2142                           ; 1 bytes @ 0x0
  2143  00005E                     	ds	1
  2144  00005F                     
  2145                           ; 1 bytes @ 0x1
  2146 ;;
  2147 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  2148 ;;
  2149 ;; *************** function _main *****************
  2150 ;; Defined at:
  2151 ;;		line 458 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  mode            1  [STACK] enum E16913
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1  [STACK] void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 4/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2169 ;;Total ram usage:        0 bytes
  2170 ;; Hardware stack levels required when called:   14
  2171 ;; This function calls:
  2172 ;;		_SYSTEM_Initialize
  2173 ;;		_StartTimer
  2174 ;;		_TimerDone
  2175 ;;		_WaitMs
  2176 ;;		_eaDogM_WriteCommand
  2177 ;;		_eaDogM_WriteStringAtPos
  2178 ;;		_hb_message
  2179 ;;		_init_display
  2180 ;;		_m_protocol
  2181 ;;		_r_protocol
  2182 ;;		_sprintf
  2183 ;;		_srand
  2184 ;;		_t_protocol
  2185 ;;		_wait_lcd_done
  2186 ;; This function is called by:
  2187 ;;		Startup code after reset
  2188 ;; This function uses a reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text0
  2192  010000                     __ptext0:
  2193                           	opt callstack 0
  2194  010000                     _main:
  2195                           	opt callstack 0
  2196                           
  2197                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2198  010000  52E6               	movf	postinc1,f,c
  2199                           
  2200                           ;main.c: 460:  UI_STATES mode;;main.c: 463:  SYSTEM_Initialize();
  2201                           
  2202                           ;incstack = 0
  2203  010002  ECF0  F0A2         	call	_SYSTEM_Initialize	;wreg free
  2204                           
  2205                           ; BSR set to: 60
  2206                           ;main.c: 466:  (INTCON0bits.GIEH = 1);
  2207  010006  8ED2               	bsf	16338,7,c	;volatile
  2208                           
  2209                           ; BSR set to: 60
  2210                           ;main.c: 469:  (INTCON0bits.GIEL = 1);
  2211  010008  8CD2               	bsf	16338,6,c	;volatile
  2212                           
  2213                           ; BSR set to: 60
  2214                           ;main.c: 471:  V.ui_state = UI_STATE_INIT;
  2215  01000A  0E00               	movlw	0
  2216  01000C  006F FFA0  F3F7    	movff	wreg,_V+1	;volatile
  2217                           
  2218                           ; BSR set to: 60
  2219                           ;main.c: 476:  WaitMs(300);
  2220  010012  0E2C               	movlw	44
  2221  010014  6EE6               	movwf	postinc1,c
  2222  010016  0E01               	movlw	1
  2223  010018  6EE6               	movwf	postinc1,c
  2224  01001A  ECCB  F0A3         	call	_WaitMs	;wreg free
  2225                           
  2226                           ;main.c: 477:  if (PORTBbits.RB0) {
  2227  01001E  A0CB               	btfss	16331,0,c	;volatile
  2228  010020  D004               	goto	l9097
  2229                           
  2230                           ;main.c: 478:   mode = UI_STATE_HOST;
  2231                           ;stkvar	_mode @ sp[(-1)+0]
  2232  010022  0EFF               	movlw	-1
  2233  010024  6AE3               	clrf	plusw1,c
  2234  010026  2AE3               	incf	plusw1,f,c
  2235                           
  2236                           ;main.c: 479:  } else {
  2237  010028  D004               	goto	l9099
  2238  01002A                     l9097:
  2239                           
  2240                           ;main.c: 480:   mode = UI_STATE_LOG;
  2241                           ;stkvar	_mode @ sp[(-1)+0]
  2242  01002A  0EFF               	movlw	-1
  2243  01002C  6AE3               	clrf	plusw1,c
  2244  01002E  80E3               	bsf	plusw1,0,c
  2245  010030  82E3               	bsf	plusw1,1,c	;indir
  2246  010032                     l9099:
  2247                           
  2248                           ;main.c: 483:  if (mode == UI_STATE_HOST) {
  2249                           ;stkvar	_mode @ sp[(-1)+0]
  2250  010032  0EFF               	movlw	-1
  2251  010034  04E3               	decf	plusw1,w,c
  2252  010036  A4D8               	btfss	status,2,c
  2253  010038  D003               	goto	l1236
  2254                           
  2255                           ;main.c: 484:   do { LATDbits.LATD0 = 1; } while(0);
  2256  01003A  80BD               	bsf	16317,0,c	;volatile
  2257                           
  2258                           ;main.c: 485:   do { LATDbits.LATD1 = 1; } while(0);
  2259  01003C  82BD               	bsf	16317,1,c	;volatile
  2260  01003E  D3B5               	goto	l9291
  2261  010040                     l1236:
  2262  010040  90BD               	bcf	16317,0,c	;volatile
  2263                           
  2264                           ;main.c: 488:   do { LATDbits.LATD1 = 0; } while(0);
  2265  010042  92BD               	bcf	16317,1,c	;volatile
  2266  010044  D3B2               	goto	l9291
  2267  010046                     l9101:
  2268                           
  2269                           ;main.c: 494:    init_display();
  2270  010046  EC0C  F09C         	call	_init_display	;wreg free
  2271                           
  2272                           ; BSR set to: 61
  2273                           ;main.c: 495:    eaDogM_WriteCommand(0b00001100);
  2274  01004A  0E0C               	movlw	12
  2275  01004C  6EE6               	movwf	postinc1,c
  2276  01004E  EC26  F0A7         	call	_eaDogM_WriteCommand	;wreg free
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;main.c: 497:    V.ui_state = mode;
  2280                           ;stkvar	_mode @ sp[(-1)+0]
  2281  010052  0EFF               	movlw	-1
  2282  010054  006F FF8C  F048    	movff	plusw1,btemp+11
  2283  01005A  0060  F120  F3F7   	movff	btemp+11,_V+1	;volatile
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;main.c: 498:    V.s_state = SEQ_STATE_INIT;
  2287  010060  0E00               	movlw	0
  2288  010062  006F FFA0  F3F6    	movff	wreg,_V
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;main.c: 499:    srand(1957);
  2292  010068  0EA5               	movlw	165
  2293  01006A  6EE6               	movwf	postinc1,c
  2294  01006C  0E07               	movlw	7
  2295  01006E  6EE6               	movwf	postinc1,c
  2296  010070  EC01  F0A4         	call	_srand	;wreg free
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 500:    sprintf(V.buf, " RVI HOST TESTER");
  2300  010074  0E9A               	movlw	low STR_1
  2301  010076  6EE6               	movwf	postinc1,c
  2302  010078  0EFF               	movlw	high STR_1
  2303  01007A  6EE6               	movwf	postinc1,c
  2304  01007C  0EFC               	movlw	low (_V+6)
  2305  01007E  6EE6               	movwf	postinc1,c
  2306  010080  0E03               	movlw	high (_V+6)
  2307  010082  6EE6               	movwf	postinc1,c
  2308  010084  0E04               	movlw	4
  2309  010086  6EE6               	movwf	postinc1,c
  2310  010088  EC0C  F09B         	call	_sprintf	;wreg free
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main.c: 501:    wait_lcd_done();
  2314  01008C  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;main.c: 502:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  2318  010090  0EFC               	movlw	low (_V+6)
  2319  010092  6EE6               	movwf	postinc1,c
  2320  010094  0E03               	movlw	high (_V+6)
  2321  010096  6EE6               	movwf	postinc1,c
  2322  010098  0E00               	movlw	0
  2323  01009A  6EE6               	movwf	postinc1,c
  2324  01009C  0E00               	movlw	0
  2325  01009E  6EE6               	movwf	postinc1,c
  2326  0100A0  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2327                           
  2328                           ; BSR set to: 59
  2329                           ;main.c: 503:    sprintf(V.buf, " Version %s", "0.99B");
  2330  0100A4  0EEF               	movlw	low STR_3
  2331  0100A6  6EE6               	movwf	postinc1,c
  2332  0100A8  0EFF               	movlw	high STR_3
  2333  0100AA  6EE6               	movwf	postinc1,c
  2334  0100AC  0ED7               	movlw	low STR_2
  2335  0100AE  6EE6               	movwf	postinc1,c
  2336  0100B0  0EFF               	movlw	high STR_2
  2337  0100B2  6EE6               	movwf	postinc1,c
  2338  0100B4  0EFC               	movlw	low (_V+6)
  2339  0100B6  6EE6               	movwf	postinc1,c
  2340  0100B8  0E03               	movlw	high (_V+6)
  2341  0100BA  6EE6               	movwf	postinc1,c
  2342  0100BC  0E06               	movlw	6
  2343  0100BE  6EE6               	movwf	postinc1,c
  2344  0100C0  EC0C  F09B         	call	_sprintf	;wreg free
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;main.c: 504:    wait_lcd_done();
  2348  0100C4  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 505:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2352  0100C8  0EFC               	movlw	low (_V+6)
  2353  0100CA  6EE6               	movwf	postinc1,c
  2354  0100CC  0E03               	movlw	high (_V+6)
  2355  0100CE  6EE6               	movwf	postinc1,c
  2356  0100D0  0E00               	movlw	0
  2357  0100D2  6EE6               	movwf	postinc1,c
  2358  0100D4  0E01               	movlw	1
  2359  0100D6  6EE6               	movwf	postinc1,c
  2360  0100D8  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2361                           
  2362                           ; BSR set to: 59
  2363                           ;main.c: 507:    sprintf(V.buf, " H254 %d, T%ld", sizeof(header254), V.testing);
  2364  0100DC  EE21  F0E4         	lfsr	2,_V+238	;volatile
  2365  0100E0  006F FF7B FFE6     	movff	postinc2,postinc1
  2366  0100E6  006F FF7B FFE6     	movff	postinc2,postinc1
  2367  0100EC  006F FF7B FFE6     	movff	postinc2,postinc1
  2368  0100F2  006F FF7B FFE6     	movff	postinc2,postinc1
  2369  0100F8  0E01               	movlw	1
  2370  0100FA  6EE6               	movwf	postinc1,c
  2371  0100FC  0E01               	movlw	1
  2372  0100FE  6EE6               	movwf	postinc1,c
  2373  010100  0EBA               	movlw	low STR_4
  2374  010102  6EE6               	movwf	postinc1,c
  2375  010104  0EFF               	movlw	high STR_4
  2376  010106  6EE6               	movwf	postinc1,c
  2377  010108  0EFC               	movlw	low (_V+6)
  2378  01010A  6EE6               	movwf	postinc1,c
  2379  01010C  0E03               	movlw	high (_V+6)
  2380  01010E  6EE6               	movwf	postinc1,c
  2381  010110  0E0A               	movlw	10
  2382  010112  6EE6               	movwf	postinc1,c
  2383  010114  EC0C  F09B         	call	_sprintf	;wreg free
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;main.c: 511:    wait_lcd_done();
  2387  010118  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;main.c: 512:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  2391  01011C  0EFC               	movlw	low (_V+6)
  2392  01011E  6EE6               	movwf	postinc1,c
  2393  010120  0E03               	movlw	high (_V+6)
  2394  010122  6EE6               	movwf	postinc1,c
  2395  010124  0E00               	movlw	0
  2396  010126  6EE6               	movwf	postinc1,c
  2397  010128  0E02               	movlw	2
  2398  01012A  6EE6               	movwf	postinc1,c
  2399  01012C  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2400                           
  2401                           ; BSR set to: 59
  2402                           ;main.c: 513:    WaitMs(3000);
  2403  010130  0EB8               	movlw	184
  2404  010132  6EE6               	movwf	postinc1,c
  2405  010134  0E0B               	movlw	11
  2406  010136  6EE6               	movwf	postinc1,c
  2407  010138  ECCB  F0A3         	call	_WaitMs	;wreg free
  2408                           
  2409                           ;main.c: 514:    break;
  2410  01013C  D34B               	goto	l1288
  2411  01013E                     l1246:
  2412                           
  2413                           ;main.c: 518:     V.r_l_state = LINK_STATE_IDLE;
  2414  01013E  0E00               	movlw	0
  2415  010140  006F FFA0  F3FA    	movff	wreg,_V+4	;volatile
  2416                           
  2417                           ;main.c: 519:     V.t_l_state = LINK_STATE_IDLE;
  2418  010146  0E00               	movlw	0
  2419  010148  006F FFA0  F3FB    	movff	wreg,_V+5	;volatile
  2420                           
  2421                           ;main.c: 520:     V.s_state = SEQ_STATE_RX;
  2422  01014E  0E01               	movlw	1
  2423  010150  006F FFA0  F3F6    	movff	wreg,_V
  2424                           
  2425                           ;main.c: 521:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2426  010156  0061  F3AB  FFE8   	movff	_V+244,wreg	;volatile
  2427  01015C  0A0A               	xorlw	10
  2428  01015E  A4D8               	btfss	status,2,c
  2429  010160  D15E               	goto	l9205
  2430  010162  0061  F3AF  FFE8   	movff	_V+245,wreg	;volatile
  2431  010168  0A0A               	xorlw	10
  2432  01016A  A4D8               	btfss	status,2,c
  2433  01016C  D158               	goto	l9205
  2434                           
  2435                           ;main.c: 522:      sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2436  01016E  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2437  010172  50DF               	movf	indf2,w,c
  2438  010174  6EE6               	movwf	postinc1,c
  2439  010176  0E00               	movlw	0
  2440  010178  6EE6               	movwf	postinc1,c
  2441  01017A  EE21  F0DC         	lfsr	2,_V+230	;volatile
  2442  01017E  006F FF7B FFE6     	movff	postinc2,postinc1
  2443  010184  006F FF7B FFE6     	movff	postinc2,postinc1
  2444  01018A  006F FF7B FFE6     	movff	postinc2,postinc1
  2445  010190  006F FF7B FFE6     	movff	postinc2,postinc1
  2446  010196  0E50               	movlw	low STR_5
  2447  010198  6EE6               	movwf	postinc1,c
  2448  01019A  0EFF               	movlw	high STR_5
  2449  01019C  6EE6               	movwf	postinc1,c
  2450  01019E  0EFC               	movlw	low (_V+6)
  2451  0101A0  6EE6               	movwf	postinc1,c
  2452  0101A2  0E03               	movlw	high (_V+6)
  2453  0101A4  6EE6               	movwf	postinc1,c
  2454  0101A6  0E0A               	movlw	10
  2455  0101A8  6EE6               	movwf	postinc1,c
  2456  0101AA  EC0C  F09B         	call	_sprintf	;wreg free
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;main.c: 523:      V.buf[16] = 0;
  2460  0101AE  0E00               	movlw	0
  2461  0101B0  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;main.c: 524:      wait_lcd_done();
  2465  0101B6  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;main.c: 525:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  2469  0101BA  0EFC               	movlw	low (_V+6)
  2470  0101BC  6EE6               	movwf	postinc1,c
  2471  0101BE  0E03               	movlw	high (_V+6)
  2472  0101C0  6EE6               	movwf	postinc1,c
  2473  0101C2  0E00               	movlw	0
  2474  0101C4  6EE6               	movwf	postinc1,c
  2475  0101C6  0E02               	movlw	2
  2476  0101C8  6EE6               	movwf	postinc1,c
  2477  0101CA  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2478  0101CE  D127               	goto	l9205
  2479  0101D0                     l9143:
  2480                           
  2481                           ;main.c: 536:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  2482  0101D0  0EFA               	movlw	low (_V+4)
  2483  0101D2  6EE6               	movwf	postinc1,c
  2484  0101D4  0E03               	movlw	high (_V+4)
  2485  0101D6  6EE6               	movwf	postinc1,c
  2486  0101D8  ECD2  F089         	call	_r_protocol	;wreg free
  2487  0101DC  0E04               	movlw	4
  2488  0101DE  183D               	xorwf	btemp,w,c
  2489  0101E0  A4D8               	btfss	status,2,c
  2490  0101E2  D062               	goto	l9167
  2491                           
  2492                           ;main.c: 537:      if (V.stream == 9) {
  2493  0101E4  0061  F3A3  FFE8   	movff	_V+242,wreg	;volatile
  2494  0101EA  0A09               	xorlw	9
  2495  0101EC  A4D8               	btfss	status,2,c
  2496  0101EE  D01B               	goto	l1251
  2497                           
  2498                           ;main.c: 538:       V.msg_error = V.function;
  2499  0101F0  C4E9  F4EC         	movff	_V+243,_V+246	;volatile
  2500                           
  2501                           ;main.c: 539:       sprintf(V.buf, "S%dF%d Err    ", V.stream, V.function);
  2502  0101F4  EE21  F0E9         	lfsr	2,_V+243	;volatile
  2503  0101F8  50DF               	movf	indf2,w,c
  2504  0101FA  6EE6               	movwf	postinc1,c
  2505  0101FC  0E00               	movlw	0
  2506  0101FE  6EE6               	movwf	postinc1,c
  2507  010200  EE21  F0E8         	lfsr	2,_V+242	;volatile
  2508  010204  50DF               	movf	indf2,w,c
  2509  010206  6EE6               	movwf	postinc1,c
  2510  010208  0E00               	movlw	0
  2511  01020A  6EE6               	movwf	postinc1,c
  2512  01020C  0EAB               	movlw	low STR_6
  2513  01020E  6EE6               	movwf	postinc1,c
  2514  010210  0EFF               	movlw	high STR_6
  2515  010212  6EE6               	movwf	postinc1,c
  2516  010214  0EFC               	movlw	low (_V+6)
  2517  010216  6EE6               	movwf	postinc1,c
  2518  010218  0E03               	movlw	high (_V+6)
  2519  01021A  6EE6               	movwf	postinc1,c
  2520  01021C  0E08               	movlw	8
  2521  01021E  6EE6               	movwf	postinc1,c
  2522  010220  EC0C  F09B         	call	_sprintf	;wreg free
  2523                           
  2524                           ;main.c: 540:      } else {
  2525  010224  D01C               	goto	l9153
  2526  010226                     l1251:
  2527                           
  2528                           ;main.c: 541:       V.msg_error = MSG_ERROR_NONE;
  2529  010226  0E00               	movlw	0
  2530  010228  006F FFA0  F4EC    	movff	wreg,_V+246	;volatile
  2531                           
  2532                           ;main.c: 542:       sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  2533  01022E  EE21  F0E9         	lfsr	2,_V+243	;volatile
  2534  010232  50DF               	movf	indf2,w,c
  2535  010234  6EE6               	movwf	postinc1,c
  2536  010236  0E00               	movlw	0
  2537  010238  6EE6               	movwf	postinc1,c
  2538  01023A  EE21  F0E8         	lfsr	2,_V+242	;volatile
  2539  01023E  50DF               	movf	indf2,w,c
  2540  010240  6EE6               	movwf	postinc1,c
  2541  010242  0E00               	movlw	0
  2542  010244  6EE6               	movwf	postinc1,c
  2543  010246  0EC9               	movlw	low STR_7
  2544  010248  6EE6               	movwf	postinc1,c
  2545  01024A  0EFF               	movlw	high STR_7
  2546  01024C  6EE6               	movwf	postinc1,c
  2547  01024E  0EFC               	movlw	low (_V+6)
  2548  010250  6EE6               	movwf	postinc1,c
  2549  010252  0E03               	movlw	high (_V+6)
  2550  010254  6EE6               	movwf	postinc1,c
  2551  010256  0E08               	movlw	8
  2552  010258  6EE6               	movwf	postinc1,c
  2553  01025A  EC0C  F09B         	call	_sprintf	;wreg free
  2554  01025E                     l9153:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;main.c: 544:      V.buf[11] = 0;
  2558  01025E  0E00               	movlw	0
  2559  010260  006F FFA0  F407    	movff	wreg,_V+17	;volatile
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;main.c: 545:      wait_lcd_done();
  2563  010266  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;main.c: 546:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  2567  01026A  0EFC               	movlw	low (_V+6)
  2568  01026C  6EE6               	movwf	postinc1,c
  2569  01026E  0E03               	movlw	high (_V+6)
  2570  010270  6EE6               	movwf	postinc1,c
  2571  010272  0E00               	movlw	0
  2572  010274  6EE6               	movwf	postinc1,c
  2573  010276  0E00               	movlw	0
  2574  010278  6EE6               	movwf	postinc1,c
  2575  01027A  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2576                           
  2577                           ; BSR set to: 59
  2578                           ;main.c: 550:      if (V.wbit) {
  2579  01027E  EE21  F0F8         	lfsr	2,_V+258	;volatile
  2580  010282  A2DF               	btfss	indf2,1,c
  2581  010284  D00D               	goto	l1253
  2582                           
  2583                           ; BSR set to: 59
  2584                           ;main.c: 551:       V.s_state = SEQ_STATE_TX;
  2585  010286  0E02               	movlw	2
  2586  010288  006F FFA0  F3F6    	movff	wreg,_V
  2587                           
  2588                           ; BSR set to: 59
  2589                           ;main.c: 552:       V.failed_send = 0;
  2590  01028E  EE21  F0F8         	lfsr	2,_V+258	;volatile
  2591  010292  0E87               	movlw	-121
  2592  010294  16DF               	andwf	223,f,c
  2593                           
  2594                           ; BSR set to: 59
  2595                           ;main.c: 553:       V.t_l_state = LINK_STATE_IDLE;
  2596  010296  0E00               	movlw	0
  2597  010298  006F FFA0  F3FB    	movff	wreg,_V+5	;volatile
  2598                           
  2599                           ;main.c: 554:      } else {
  2600  01029E  D004               	goto	l9167
  2601  0102A0                     l1253:
  2602                           
  2603                           ; BSR set to: 59
  2604                           ;main.c: 555:       V.s_state = SEQ_STATE_TRIGGER;
  2605  0102A0  0E03               	movlw	3
  2606  0102A2  006F FFA0  F3F6    	movff	wreg,_V
  2607  0102A8                     l9167:
  2608                           
  2609                           ;main.c: 558:     if (V.r_l_state == LINK_STATE_ERROR)
  2610  0102A8  0060  FFEB  FFE8   	movff	_V+4,wreg	;volatile
  2611  0102AE  D011               	goto	L35
  2612  0102B0                     l9171:
  2613                           
  2614                           ;main.c: 565:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  2615  0102B0  0EFB               	movlw	low (_V+5)
  2616  0102B2  6EE6               	movwf	postinc1,c
  2617  0102B4  0E03               	movlw	high (_V+5)
  2618  0102B6  6EE6               	movwf	postinc1,c
  2619  0102B8  ECE2  F08F         	call	_t_protocol	;wreg free
  2620  0102BC  0E04               	movlw	4
  2621  0102BE  183D               	xorwf	btemp,w,c
  2622  0102C0  A4D8               	btfss	status,2,c
  2623  0102C2  D004               	goto	l9175
  2624                           
  2625                           ;main.c: 566:      V.s_state = SEQ_STATE_TRIGGER;
  2626  0102C4  0E03               	movlw	3
  2627  0102C6  006F FFA0  F3F6    	movff	wreg,_V
  2628  0102CC                     l9175:
  2629                           
  2630                           ;main.c: 568:     if (V.t_l_state == LINK_STATE_ERROR)
  2631  0102CC  0060  FFEF  FFE8   	movff	_V+5,wreg	;volatile
  2632  0102D2                     L35:
  2633  0102D2  0A06               	xorlw	6
  2634  0102D4  A4D8               	btfss	status,2,c
  2635  0102D6  D0A3               	goto	l9205
  2636                           
  2637                           ;main.c: 569:      V.s_state = SEQ_STATE_ERROR;
  2638  0102D8  0E06               	movlw	6
  2639  0102DA  D03B               	goto	L1
  2640  0102DC                     l9179:
  2641                           
  2642                           ;main.c: 572:     if (V.queue) {
  2643  0102DC  EE21  F0F9         	lfsr	2,_V+259	;volatile
  2644  0102E0  A8DF               	btfss	indf2,4,c
  2645  0102E2  D019               	goto	l1260
  2646                           
  2647                           ;main.c: 573:      V.r_l_state = LINK_STATE_IDLE;
  2648  0102E4  0E00               	movlw	0
  2649  0102E6  006F FFA0  F3FA    	movff	wreg,_V+4	;volatile
  2650                           
  2651                           ;main.c: 574:      V.t_l_state = LINK_STATE_IDLE;
  2652  0102EC  0E00               	movlw	0
  2653  0102EE  006F FFA0  F3FB    	movff	wreg,_V+5	;volatile
  2654                           
  2655                           ;main.c: 575:      V.s_state = SEQ_STATE_TX;
  2656  0102F4  0E02               	movlw	2
  2657  0102F6  006F FFA0  F3F6    	movff	wreg,_V
  2658                           
  2659                           ;main.c: 576:      sprintf(V.buf, " OKQ#");
  2660  0102FC  0EE9               	movlw	low STR_8
  2661  0102FE  6EE6               	movwf	postinc1,c
  2662  010300  0EFF               	movlw	high STR_8
  2663  010302  6EE6               	movwf	postinc1,c
  2664  010304  0EFC               	movlw	low (_V+6)
  2665  010306  6EE6               	movwf	postinc1,c
  2666  010308  0E03               	movlw	high (_V+6)
  2667  01030A  6EE6               	movwf	postinc1,c
  2668  01030C  0E04               	movlw	4
  2669  01030E  6EE6               	movwf	postinc1,c
  2670  010310  EC0C  F09B         	call	_sprintf	;wreg free
  2671                           
  2672                           ;main.c: 577:     } else {
  2673  010314  D010               	goto	l9187
  2674  010316                     l1260:
  2675                           
  2676                           ;main.c: 578:      V.s_state = SEQ_STATE_DONE;
  2677  010316  0E05               	movlw	5
  2678  010318  006F FFA0  F3F6    	movff	wreg,_V
  2679                           
  2680                           ;main.c: 579:      sprintf(V.buf, " OK #");
  2681  01031E  0EE3               	movlw	low STR_9
  2682  010320  6EE6               	movwf	postinc1,c
  2683  010322  0EFF               	movlw	high STR_9
  2684  010324  6EE6               	movwf	postinc1,c
  2685  010326  0EFC               	movlw	low (_V+6)
  2686  010328  6EE6               	movwf	postinc1,c
  2687  01032A  0E03               	movlw	high (_V+6)
  2688  01032C  6EE6               	movwf	postinc1,c
  2689  01032E  0E04               	movlw	4
  2690  010330  6EE6               	movwf	postinc1,c
  2691  010332  EC0C  F09B         	call	_sprintf	;wreg free
  2692  010336                     l9187:
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;main.c: 581:     wait_lcd_done();
  2696  010336  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;main.c: 582:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2700  01033A  0EFC               	movlw	low (_V+6)
  2701  01033C  6EE6               	movwf	postinc1,c
  2702  01033E  0E03               	movlw	high (_V+6)
  2703  010340  6EE6               	movwf	postinc1,c
  2704  010342  0E0B               	movlw	11
  2705  010344  6EE6               	movwf	postinc1,c
  2706  010346  0E00               	movlw	0
  2707  010348  6EE6               	movwf	postinc1,c
  2708  01034A  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2709                           
  2710                           ;main.c: 583:     break;
  2711  01034E  D067               	goto	l9205
  2712  010350                     l1262:
  2713                           
  2714                           ;main.c: 585:     V.s_state = SEQ_STATE_INIT;
  2715  010350  0E00               	movlw	0
  2716  010352                     L1:
  2717  010352  006F FFA0  F3F6    	movff	wreg,_V
  2718                           
  2719                           ;main.c: 586:     break;
  2720  010358  D062               	goto	l9205
  2721  01035A                     l1264:
  2722                           
  2723                           ;main.c: 589:     V.s_state = SEQ_STATE_INIT;
  2724  01035A  0E00               	movlw	0
  2725  01035C  006F FFA0  F3F6    	movff	wreg,_V
  2726                           
  2727                           ;main.c: 590:     sprintf(V.buf, "E%d A%d T%d G%d #", V.error, V.abort, V.timer_error, V
      +                          .g_state);
  2728  010362  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2729  010366  50DF               	movf	indf2,w,c
  2730  010368  6EE6               	movwf	postinc1,c
  2731  01036A  0E00               	movlw	0
  2732  01036C  6EE6               	movwf	postinc1,c
  2733  01036E  EE21  F0F4         	lfsr	2,_V+254	;volatile
  2734  010372  006F FF78  F047    	movff	postinc2,btemp+10
  2735  010378  006F FF74  F048    	movff	postdec2,btemp+11
  2736  01037E  0060  F11F  FFE6   	movff	btemp+10,postinc1
  2737  010384  0060  F123  FFE6   	movff	btemp+11,postinc1
  2738  01038A  EE21  F0EB         	lfsr	2,_V+245	;volatile
  2739  01038E  50DF               	movf	indf2,w,c
  2740  010390  6EE6               	movwf	postinc1,c
  2741  010392  0E00               	movlw	0
  2742  010394  6EE6               	movwf	postinc1,c
  2743  010396  EE21  F0EA         	lfsr	2,_V+244	;volatile
  2744  01039A  50DF               	movf	indf2,w,c
  2745  01039C  6EE6               	movwf	postinc1,c
  2746  01039E  0E00               	movlw	0
  2747  0103A0  6EE6               	movwf	postinc1,c
  2748  0103A2  0E77               	movlw	low STR_10
  2749  0103A4  6EE6               	movwf	postinc1,c
  2750  0103A6  0EFF               	movlw	high STR_10
  2751  0103A8  6EE6               	movwf	postinc1,c
  2752  0103AA  0EFC               	movlw	low (_V+6)
  2753  0103AC  6EE6               	movwf	postinc1,c
  2754  0103AE  0E03               	movlw	high (_V+6)
  2755  0103B0  6EE6               	movwf	postinc1,c
  2756  0103B2  0E0C               	movlw	12
  2757  0103B4  6EE6               	movwf	postinc1,c
  2758  0103B6  EC0C  F09B         	call	_sprintf	;wreg free
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;main.c: 591:     V.buf[16] = 0;
  2762  0103BA  0E00               	movlw	0
  2763  0103BC  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;main.c: 592:     wait_lcd_done();
  2767  0103C2  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;main.c: 593:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2771  0103C6  0EFC               	movlw	low (_V+6)
  2772  0103C8  6EE6               	movwf	postinc1,c
  2773  0103CA  0E03               	movlw	high (_V+6)
  2774  0103CC  6EE6               	movwf	postinc1,c
  2775  0103CE  0E00               	movlw	0
  2776  0103D0  6EE6               	movwf	postinc1,c
  2777  0103D2  0E02               	movlw	2
  2778  0103D4  6EE6               	movwf	postinc1,c
  2779  0103D6  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2780                           
  2781                           ; BSR set to: 59
  2782                           ;main.c: 594:     WaitMs(2000);
  2783  0103DA  0ED0               	movlw	208
  2784  0103DC  6EE6               	movwf	postinc1,c
  2785  0103DE  0E07               	movlw	7
  2786  0103E0  6EE6               	movwf	postinc1,c
  2787  0103E2  ECCB  F0A3         	call	_WaitMs	;wreg free
  2788                           
  2789                           ;main.c: 595:     break;
  2790  0103E6  D01B               	goto	l9205
  2791  0103E8                     l9203:
  2792  0103E8  EE20  F3F6         	lfsr	2,_V
  2793  0103EC  50DF               	movf	indf2,w,c
  2794  0103EE  6E47               	movwf	btemp+10,c
  2795  0103F0  6A48               	clrf	btemp+11,c
  2796                           
  2797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2798                           ; Switch size 1, requested type "simple"
  2799                           ; Number of cases is 1, Range of values is 0 to 0
  2800                           ; switch strategies available:
  2801                           ; Name         Instructions Cycles
  2802                           ; simple_byte            4     3 (average)
  2803                           ;	Chosen strategy is simple_byte
  2804  0103F2  5048               	movf	btemp+11,w,c
  2805  0103F4  0A00               	xorlw	0	; case 0
  2806  0103F6  A4D8               	btfss	status,2,c
  2807  0103F8  D7B0               	goto	l1264
  2808                           
  2809                           ; Switch size 1, requested type "simple"
  2810                           ; Number of cases is 6, Range of values is 0 to 6
  2811                           ; switch strategies available:
  2812                           ; Name         Instructions Cycles
  2813                           ; simple_byte           19    10 (average)
  2814                           ;	Chosen strategy is simple_byte
  2815  0103FA  5047               	movf	btemp+10,w,c
  2816  0103FC  0A00               	xorlw	0	; case 0
  2817  0103FE  B4D8               	btfsc	status,2,c
  2818  010400  D69E               	goto	l1246
  2819  010402  0A01               	xorlw	1	; case 1
  2820  010404  B4D8               	btfsc	status,2,c
  2821  010406  D6E4               	goto	l9143
  2822  010408  0A03               	xorlw	3	; case 2
  2823  01040A  B4D8               	btfsc	status,2,c
  2824  01040C  D751               	goto	l9171
  2825  01040E  0A01               	xorlw	1	; case 3
  2826  010410  B4D8               	btfsc	status,2,c
  2827  010412  D764               	goto	l9179
  2828  010414  0A06               	xorlw	6	; case 5
  2829  010416  B4D8               	btfsc	status,2,c
  2830  010418  D79B               	goto	l1262
  2831  01041A  0A03               	xorlw	3	; case 6
  2832  01041C  D79E               	goto	l1264
  2833  01041E                     l9205:
  2834                           
  2835                           ;main.c: 597:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2836  01041E  0061  F3AB  FFE8   	movff	_V+244,wreg	;volatile
  2837  010424  0A0A               	xorlw	10
  2838  010426  A4D8               	btfss	status,2,c
  2839  010428  D1D5               	goto	l1288
  2840  01042A  0061  F3AF  FFE8   	movff	_V+245,wreg	;volatile
  2841  010430  0A0A               	xorlw	10
  2842  010432  A4D8               	btfss	status,2,c
  2843  010434  D1CF               	goto	l1288
  2844                           
  2845                           ;main.c: 598:     sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2846  010436  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2847  01043A  50DF               	movf	indf2,w,c
  2848  01043C  6EE6               	movwf	postinc1,c
  2849  01043E  0E00               	movlw	0
  2850  010440  6EE6               	movwf	postinc1,c
  2851  010442  EE21  F0DC         	lfsr	2,_V+230	;volatile
  2852  010446  006F FF7B FFE6     	movff	postinc2,postinc1
  2853  01044C  006F FF7B FFE6     	movff	postinc2,postinc1
  2854  010452  006F FF7B FFE6     	movff	postinc2,postinc1
  2855  010458  006F FF7B FFE6     	movff	postinc2,postinc1
  2856  01045E  0E50               	movlw	low STR_5
  2857  010460  6EE6               	movwf	postinc1,c
  2858  010462  0EFF               	movlw	high STR_5
  2859  010464  6EE6               	movwf	postinc1,c
  2860  010466  0EFC               	movlw	low (_V+6)
  2861  010468  6EE6               	movwf	postinc1,c
  2862  01046A  0E03               	movlw	high (_V+6)
  2863  01046C  6EE6               	movwf	postinc1,c
  2864  01046E  0E0A               	movlw	10
  2865  010470  6EE6               	movwf	postinc1,c
  2866  010472  EC0C  F09B         	call	_sprintf	;wreg free
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;main.c: 599:     V.buf[16] = 0;
  2870  010476  0E00               	movlw	0
  2871  010478  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;main.c: 600:     wait_lcd_done();
  2875  01047E  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;main.c: 601:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2879  010482  0EFC               	movlw	low (_V+6)
  2880  010484  6EE6               	movwf	postinc1,c
  2881  010486  0E03               	movlw	high (_V+6)
  2882  010488  6EE6               	movwf	postinc1,c
  2883  01048A  0E00               	movlw	0
  2884  01048C  6EE6               	movwf	postinc1,c
  2885  01048E  0E02               	movlw	2
  2886  010490  6EE6               	movwf	postinc1,c
  2887  010492  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2888                           
  2889                           ; BSR set to: 59
  2890                           ;main.c: 605:     if ((V.g_state == GEM_STATE_REMOTE && V.s_state == SEQ_STATE_RX) || V.
      +                          reset) {
  2891  010496  0060  FFE3  FFE8   	movff	_V+2,wreg	;volatile
  2892  01049C  0A04               	xorlw	4
  2893  01049E  A4D8               	btfss	status,2,c
  2894  0104A0  D006               	goto	u6030
  2895                           
  2896                           ; BSR set to: 59
  2897  0104A2  0060  FFDB  FFE8   	movff	_V,wreg
  2898  0104A8  0A01               	xorlw	1
  2899  0104AA  B4D8               	btfsc	status,2,c
  2900  0104AC  D004               	goto	u6040
  2901  0104AE                     u6030:
  2902                           
  2903                           ; BSR set to: 59
  2904  0104AE  EE21  F0F9         	lfsr	2,_V+259	;volatile
  2905  0104B2  AADF               	btfss	indf2,5,c
  2906  0104B4  D18F               	goto	l1288
  2907  0104B6                     u6040:
  2908                           
  2909                           ; BSR set to: 59
  2910                           ;main.c: 606:      if (TimerDone(TMR_HBIO) || V.reset) {
  2911  0104B6  0E06               	movlw	6
  2912  0104B8  6EE6               	movwf	postinc1,c
  2913  0104BA  EC03  F0A6         	call	_TimerDone	;wreg free
  2914  0104BE  503D               	movf	btemp,w,c
  2915  0104C0  A4D8               	btfss	status,2,c
  2916  0104C2  D004               	goto	u6060
  2917  0104C4  EE21  F0F9         	lfsr	2,_V+259	;volatile
  2918  0104C8  AADF               	btfss	indf2,5,c
  2919  0104CA  D184               	goto	l1288
  2920  0104CC                     u6060:
  2921                           
  2922                           ;main.c: 607:       StartTimer(TMR_HBIO, 30000);
  2923  0104CC  0E30               	movlw	48
  2924  0104CE  6EE6               	movwf	postinc1,c
  2925  0104D0  0E75               	movlw	117
  2926  0104D2  6EE6               	movwf	postinc1,c
  2927  0104D4  0E06               	movlw	6
  2928  0104D6  6EE6               	movwf	postinc1,c
  2929  0104D8  ECAD  F0A3         	call	_StartTimer	;wreg free
  2930                           
  2931                           ;main.c: 609:       hb_message();
  2932  0104DC  ECCD  F0A1         	call	_hb_message	;wreg free
  2933                           
  2934                           ;main.c: 610:       if (!V.reset) {
  2935  0104E0  EE21  F0F9         	lfsr	2,_V+259	;volatile
  2936  0104E4  BADF               	btfsc	indf2,5,c
  2937  0104E6  D036               	goto	l9243
  2938                           
  2939                           ;main.c: 611:        sprintf(V.buf, " Ping G%d  P%d #", V.g_state, V.ping);
  2940  0104E8  EE21  F0F6         	lfsr	2,_V+256	;volatile
  2941  0104EC  006F FF78  F047    	movff	postinc2,btemp+10
  2942  0104F2  006F FF74  F048    	movff	postdec2,btemp+11
  2943  0104F8  0060  F11F  FFE6   	movff	btemp+10,postinc1
  2944  0104FE  0060  F123  FFE6   	movff	btemp+11,postinc1
  2945  010504  EE20  F3F8         	lfsr	2,_V+2	;volatile
  2946  010508  50DF               	movf	indf2,w,c
  2947  01050A  6EE6               	movwf	postinc1,c
  2948  01050C  0E00               	movlw	0
  2949  01050E  6EE6               	movwf	postinc1,c
  2950  010510  0E89               	movlw	low STR_12
  2951  010512  6EE6               	movwf	postinc1,c
  2952  010514  0EFF               	movlw	high STR_12
  2953  010516  6EE6               	movwf	postinc1,c
  2954  010518  0EFC               	movlw	low (_V+6)
  2955  01051A  6EE6               	movwf	postinc1,c
  2956  01051C  0E03               	movlw	high (_V+6)
  2957  01051E  6EE6               	movwf	postinc1,c
  2958  010520  0E08               	movlw	8
  2959  010522  6EE6               	movwf	postinc1,c
  2960  010524  EC0C  F09B         	call	_sprintf	;wreg free
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;main.c: 612:        V.buf[16] = 0;
  2964  010528  0E00               	movlw	0
  2965  01052A  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;main.c: 613:        wait_lcd_done();
  2969  010530  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;main.c: 614:        eaDogM_WriteStringAtPos(0, 0, V.buf);
  2973  010534  0EFC               	movlw	low (_V+6)
  2974  010536  6EE6               	movwf	postinc1,c
  2975  010538  0E03               	movlw	high (_V+6)
  2976  01053A  6EE6               	movwf	postinc1,c
  2977  01053C  0E00               	movlw	0
  2978  01053E  6EE6               	movwf	postinc1,c
  2979  010540  0E00               	movlw	0
  2980  010542  6EE6               	movwf	postinc1,c
  2981  010544  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  2982                           
  2983                           ; BSR set to: 59
  2984                           ;main.c: 615:        WaitMs(1000);
  2985  010548  0EE8               	movlw	232
  2986  01054A  6EE6               	movwf	postinc1,c
  2987  01054C  0E03               	movlw	3
  2988  01054E  6EE6               	movwf	postinc1,c
  2989  010550  ECCB  F0A3         	call	_WaitMs	;wreg free
  2990  010554                     l9243:
  2991                           
  2992                           ;main.c: 617:       V.msg_error = MSG_ERROR_NONE;
  2993  010554  0E00               	movlw	0
  2994  010556  006F FFA0  F4EC    	movff	wreg,_V+246	;volatile
  2995                           
  2996                           ;main.c: 618:       V.reset = 0;
  2997  01055C  EE21  F0F9         	lfsr	2,_V+259	;volatile
  2998  010560  9ADF               	bcf	indf2,5,c
  2999                           
  3000                           ;main.c: 622:    break;
  3001                           
  3002                           ;main.c: 621:    }
  3003  010562  D138               	goto	l1288
  3004  010564                     l1277:
  3005                           
  3006                           ;main.c: 626:     V.m_l_state = LINK_STATE_IDLE;
  3007  010564  0E00               	movlw	0
  3008  010566  006F FFA0  F3F9    	movff	wreg,_V+3	;volatile
  3009                           
  3010                           ;main.c: 627:     V.s_state = SEQ_STATE_RX;
  3011  01056C  0E01               	movlw	1
  3012  01056E  006F FFA0  F3F6    	movff	wreg,_V
  3013                           
  3014                           ;main.c: 628:     sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer
      +                          _error, V.checksum_error);
  3015  010574  EE21  F0F2         	lfsr	2,_V+252	;volatile
  3016  010578  006F FF78  F047    	movff	postinc2,btemp+10
  3017  01057E  006F FF74  F048    	movff	postdec2,btemp+11
  3018  010584  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3019  01058A  0060  F123  FFE6   	movff	btemp+11,postinc1
  3020  010590  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3021  010594  006F FF78  F047    	movff	postinc2,btemp+10
  3022  01059A  006F FF74  F048    	movff	postdec2,btemp+11
  3023  0105A0  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3024  0105A6  0060  F123  FFE6   	movff	btemp+11,postinc1
  3025  0105AC  EE20  F3F8         	lfsr	2,_V+2	;volatile
  3026  0105B0  50DF               	movf	indf2,w,c
  3027  0105B2  6EE6               	movwf	postinc1,c
  3028  0105B4  0E00               	movlw	0
  3029  0105B6  6EE6               	movwf	postinc1,c
  3030  0105B8  EE21  F122         	lfsr	2,_V+300	;volatile
  3031  0105BC  50DF               	movf	indf2,w,c
  3032  0105BE  6EE6               	movwf	postinc1,c
  3033  0105C0  0E00               	movlw	0
  3034  0105C2  6EE6               	movwf	postinc1,c
  3035  0105C4  0E1C               	movlw	low STR_13
  3036  0105C6  6EE6               	movwf	postinc1,c
  3037  0105C8  0EFF               	movlw	high STR_13
  3038  0105CA  6EE6               	movwf	postinc1,c
  3039  0105CC  0EFC               	movlw	low (_V+6)
  3040  0105CE  6EE6               	movwf	postinc1,c
  3041  0105D0  0E03               	movlw	high (_V+6)
  3042  0105D2  6EE6               	movwf	postinc1,c
  3043  0105D4  0E0C               	movlw	12
  3044  0105D6  6EE6               	movwf	postinc1,c
  3045  0105D8  EC0C  F09B         	call	_sprintf	;wreg free
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;main.c: 629:     V.buf[16] = 0;
  3049  0105DC  0E00               	movlw	0
  3050  0105DE  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;main.c: 630:     wait_lcd_done();
  3054  0105E4  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;main.c: 631:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  3058  0105E8  0EFC               	movlw	low (_V+6)
  3059  0105EA  6EE6               	movwf	postinc1,c
  3060  0105EC  0E03               	movlw	high (_V+6)
  3061  0105EE  6EE6               	movwf	postinc1,c
  3062  0105F0  0E00               	movlw	0
  3063  0105F2  6EE6               	movwf	postinc1,c
  3064  0105F4  0E02               	movlw	2
  3065  0105F6  6EE6               	movwf	postinc1,c
  3066  0105F8  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  3067                           
  3068                           ;main.c: 639:     break;
  3069  0105FC  D08C               	goto	l9281
  3070  0105FE                     l9255:
  3071                           
  3072                           ;main.c: 644:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  3073  0105FE  0EF9               	movlw	low (_V+3)
  3074  010600  6EE6               	movwf	postinc1,c
  3075  010602  0E03               	movlw	high (_V+3)
  3076  010604  6EE6               	movwf	postinc1,c
  3077  010606  EC5D  F084         	call	_m_protocol	;wreg free
  3078  01060A  0E04               	movlw	4
  3079  01060C  183D               	xorwf	btemp,w,c
  3080  01060E  A4D8               	btfss	status,2,c
  3081  010610  D03D               	goto	l9267
  3082                           
  3083                           ;main.c: 645:      sprintf(V.buf, " S%dF%d #%ld     ", V.stream, V.function, V.ticks);
  3084  010612  EE21  F0DC         	lfsr	2,_V+230	;volatile
  3085  010616  006F FF7B FFE6     	movff	postinc2,postinc1
  3086  01061C  006F FF7B FFE6     	movff	postinc2,postinc1
  3087  010622  006F FF7B FFE6     	movff	postinc2,postinc1
  3088  010628  006F FF7B FFE6     	movff	postinc2,postinc1
  3089  01062E  EE21  F0E9         	lfsr	2,_V+243	;volatile
  3090  010632  50DF               	movf	indf2,w,c
  3091  010634  6EE6               	movwf	postinc1,c
  3092  010636  0E00               	movlw	0
  3093  010638  6EE6               	movwf	postinc1,c
  3094  01063A  EE21  F0E8         	lfsr	2,_V+242	;volatile
  3095  01063E  50DF               	movf	indf2,w,c
  3096  010640  6EE6               	movwf	postinc1,c
  3097  010642  0E00               	movlw	0
  3098  010644  6EE6               	movwf	postinc1,c
  3099  010646  0E65               	movlw	low STR_14
  3100  010648  6EE6               	movwf	postinc1,c
  3101  01064A  0EFF               	movlw	high STR_14
  3102  01064C  6EE6               	movwf	postinc1,c
  3103  01064E  0EFC               	movlw	low (_V+6)
  3104  010650  6EE6               	movwf	postinc1,c
  3105  010652  0E03               	movlw	high (_V+6)
  3106  010654  6EE6               	movwf	postinc1,c
  3107  010656  0E0C               	movlw	12
  3108  010658  6EE6               	movwf	postinc1,c
  3109  01065A  EC0C  F09B         	call	_sprintf	;wreg free
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;main.c: 646:      V.buf[13] = 0;
  3113  01065E  0E00               	movlw	0
  3114  010660  006F FFA0  F409    	movff	wreg,_V+19	;volatile
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;main.c: 647:      wait_lcd_done();
  3118  010666  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;main.c: 648:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  3122  01066A  0EFC               	movlw	low (_V+6)
  3123  01066C  6EE6               	movwf	postinc1,c
  3124  01066E  0E03               	movlw	high (_V+6)
  3125  010670  6EE6               	movwf	postinc1,c
  3126  010672  0E00               	movlw	0
  3127  010674  6EE6               	movwf	postinc1,c
  3128  010676  0061  F488  F048   	movff	_V+300,btemp+11	;volatile
  3129  01067C  0448               	decf	btemp+11,w,c
  3130  01067E  6EE6               	movwf	postinc1,c
  3131  010680  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  3132                           
  3133                           ; BSR set to: 59
  3134                           ;main.c: 649:      V.s_state = SEQ_STATE_TRIGGER;
  3135  010684  0E03               	movlw	3
  3136  010686  006F FFA0  F3F6    	movff	wreg,_V
  3137  01068C                     l9267:
  3138                           
  3139                           ;main.c: 651:     if (V.m_l_state == LINK_STATE_ERROR)
  3140  01068C  0060  FFE7  FFE8   	movff	_V+3,wreg	;volatile
  3141  010692  0A06               	xorlw	6
  3142  010694  A4D8               	btfss	status,2,c
  3143  010696  D03F               	goto	l9281
  3144                           
  3145                           ;main.c: 652:      V.s_state = SEQ_STATE_ERROR;
  3146  010698  0E06               	movlw	6
  3147  01069A  D021               	goto	L3
  3148  01069C                     l1282:
  3149                           
  3150                           ;main.c: 655:     V.s_state = SEQ_STATE_DONE;
  3151  01069C  0E05               	movlw	5
  3152  01069E  006F FFA0  F3F6    	movff	wreg,_V
  3153                           
  3154                           ;main.c: 656:     sprintf(V.buf, "OK ");
  3155  0106A4  0EF5               	movlw	low STR_15
  3156  0106A6  6EE6               	movwf	postinc1,c
  3157  0106A8  0EFF               	movlw	high STR_15
  3158  0106AA  6EE6               	movwf	postinc1,c
  3159  0106AC  0EFC               	movlw	low (_V+6)
  3160  0106AE  6EE6               	movwf	postinc1,c
  3161  0106B0  0E03               	movlw	high (_V+6)
  3162  0106B2  6EE6               	movwf	postinc1,c
  3163  0106B4  0E04               	movlw	4
  3164  0106B6  6EE6               	movwf	postinc1,c
  3165  0106B8  EC0C  F09B         	call	_sprintf	;wreg free
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;main.c: 657:     wait_lcd_done();
  3169  0106BC  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;main.c: 658:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  3173  0106C0  0EFC               	movlw	low (_V+6)
  3174  0106C2  6EE6               	movwf	postinc1,c
  3175  0106C4  0E03               	movlw	high (_V+6)
  3176  0106C6  6EE6               	movwf	postinc1,c
  3177  0106C8  0E0D               	movlw	13
  3178  0106CA  6EE6               	movwf	postinc1,c
  3179  0106CC  0061  F488  F048   	movff	_V+300,btemp+11	;volatile
  3180  0106D2  0448               	decf	btemp+11,w,c
  3181  0106D4  6EE6               	movwf	postinc1,c
  3182  0106D6  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  3183                           
  3184                           ;main.c: 659:     break;
  3185  0106DA  D01D               	goto	l9281
  3186  0106DC                     l1283:
  3187                           
  3188                           ;main.c: 665:     V.s_state = SEQ_STATE_INIT;
  3189                           
  3190                           ;main.c: 664:    default:
  3191                           
  3192                           ;main.c: 662:     break;
  3193                           
  3194                           ;main.c: 661:     V.s_state = SEQ_STATE_INIT;
  3195  0106DC  0E00               	movlw	0
  3196  0106DE                     L3:
  3197  0106DE  006F FFA0  F3F6    	movff	wreg,_V
  3198                           
  3199                           ;main.c: 666:     break;
  3200  0106E4  D018               	goto	l9281
  3201  0106E6                     l9279:
  3202  0106E6  EE20  F3F6         	lfsr	2,_V
  3203  0106EA  50DF               	movf	indf2,w,c
  3204  0106EC  6E47               	movwf	btemp+10,c
  3205  0106EE  6A48               	clrf	btemp+11,c
  3206                           
  3207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3208                           ; Switch size 1, requested type "simple"
  3209                           ; Number of cases is 1, Range of values is 0 to 0
  3210                           ; switch strategies available:
  3211                           ; Name         Instructions Cycles
  3212                           ; simple_byte            4     3 (average)
  3213                           ;	Chosen strategy is simple_byte
  3214  0106F0  5048               	movf	btemp+11,w,c
  3215  0106F2  0A00               	xorlw	0	; case 0
  3216  0106F4  A4D8               	btfss	status,2,c
  3217  0106F6  D7F2               	goto	l1283
  3218                           
  3219                           ; Switch size 1, requested type "simple"
  3220                           ; Number of cases is 5, Range of values is 0 to 6
  3221                           ; switch strategies available:
  3222                           ; Name         Instructions Cycles
  3223                           ; simple_byte           16     9 (average)
  3224                           ;	Chosen strategy is simple_byte
  3225  0106F8  5047               	movf	btemp+10,w,c
  3226  0106FA  0A00               	xorlw	0	; case 0
  3227  0106FC  B4D8               	btfsc	status,2,c
  3228  0106FE  D732               	goto	l1277
  3229  010700  0A01               	xorlw	1	; case 1
  3230  010702  B4D8               	btfsc	status,2,c
  3231  010704  D77C               	goto	l9255
  3232  010706  0A02               	xorlw	2	; case 3
  3233  010708  B4D8               	btfsc	status,2,c
  3234  01070A  D7C8               	goto	l1282
  3235  01070C  0A06               	xorlw	6	; case 5
  3236  01070E  B4D8               	btfsc	status,2,c
  3237  010710  D7E5               	goto	l1283
  3238  010712  0A03               	xorlw	3	; case 6
  3239  010714  D7E3               	goto	l1283
  3240  010716                     l9281:
  3241                           
  3242                           ;main.c: 668:    sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer_
      +                          error, V.checksum_error);
  3243  010716  EE21  F0F2         	lfsr	2,_V+252	;volatile
  3244  01071A  006F FF78  F047    	movff	postinc2,btemp+10
  3245  010720  006F FF74  F048    	movff	postdec2,btemp+11
  3246  010726  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3247  01072C  0060  F123  FFE6   	movff	btemp+11,postinc1
  3248  010732  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3249  010736  006F FF78  F047    	movff	postinc2,btemp+10
  3250  01073C  006F FF74  F048    	movff	postdec2,btemp+11
  3251  010742  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3252  010748  0060  F123  FFE6   	movff	btemp+11,postinc1
  3253  01074E  EE20  F3F8         	lfsr	2,_V+2	;volatile
  3254  010752  50DF               	movf	indf2,w,c
  3255  010754  6EE6               	movwf	postinc1,c
  3256  010756  0E00               	movlw	0
  3257  010758  6EE6               	movwf	postinc1,c
  3258  01075A  EE21  F122         	lfsr	2,_V+300	;volatile
  3259  01075E  50DF               	movf	indf2,w,c
  3260  010760  6EE6               	movwf	postinc1,c
  3261  010762  0E00               	movlw	0
  3262  010764  6EE6               	movwf	postinc1,c
  3263  010766  0E1C               	movlw	low STR_13
  3264  010768  6EE6               	movwf	postinc1,c
  3265  01076A  0EFF               	movlw	high STR_13
  3266  01076C  6EE6               	movwf	postinc1,c
  3267  01076E  0EFC               	movlw	low (_V+6)
  3268  010770  6EE6               	movwf	postinc1,c
  3269  010772  0E03               	movlw	high (_V+6)
  3270  010774  6EE6               	movwf	postinc1,c
  3271  010776  0E0C               	movlw	12
  3272  010778  6EE6               	movwf	postinc1,c
  3273  01077A  EC0C  F09B         	call	_sprintf	;wreg free
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;main.c: 669:    V.buf[16] = 0;
  3277  01077E  0E00               	movlw	0
  3278  010780  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;main.c: 670:    wait_lcd_done();
  3282  010786  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;main.c: 671:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  3286  01078A  0EFC               	movlw	low (_V+6)
  3287  01078C  6EE6               	movwf	postinc1,c
  3288  01078E  0E03               	movlw	high (_V+6)
  3289  010790  6EE6               	movwf	postinc1,c
  3290  010792  0E00               	movlw	0
  3291  010794  6EE6               	movwf	postinc1,c
  3292  010796  0E02               	movlw	2
  3293  010798  6EE6               	movwf	postinc1,c
  3294  01079A  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  3295                           
  3296                           ;main.c: 672:    break;
  3297  01079E  D01A               	goto	l1288
  3298  0107A0                     l1287:
  3299                           
  3300                           ;main.c: 675:    V.ui_state = UI_STATE_INIT;
  3301  0107A0  0E00               	movlw	0
  3302  0107A2  006F FFA0  F3F7    	movff	wreg,_V+1	;volatile
  3303                           
  3304                           ;main.c: 676:    break;
  3305  0107A8  D015               	goto	l1288
  3306  0107AA                     l9291:
  3307  0107AA  EE20  F3F7         	lfsr	2,_V+1	;volatile
  3308  0107AE  50DF               	movf	indf2,w,c
  3309  0107B0  6E47               	movwf	btemp+10,c
  3310  0107B2  6A48               	clrf	btemp+11,c
  3311                           
  3312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3313                           ; Switch size 1, requested type "simple"
  3314                           ; Number of cases is 1, Range of values is 0 to 0
  3315                           ; switch strategies available:
  3316                           ; Name         Instructions Cycles
  3317                           ; simple_byte            4     3 (average)
  3318                           ;	Chosen strategy is simple_byte
  3319  0107B4  5048               	movf	btemp+11,w,c
  3320  0107B6  0A00               	xorlw	0	; case 0
  3321  0107B8  A4D8               	btfss	status,2,c
  3322  0107BA  D7F2               	goto	l1287
  3323                           
  3324                           ; Switch size 1, requested type "simple"
  3325                           ; Number of cases is 4, Range of values is 0 to 4
  3326                           ; switch strategies available:
  3327                           ; Name         Instructions Cycles
  3328                           ; simple_byte           13     7 (average)
  3329                           ;	Chosen strategy is simple_byte
  3330  0107BC  5047               	movf	btemp+10,w,c
  3331  0107BE  0A00               	xorlw	0	; case 0
  3332  0107C0  B4D8               	btfsc	status,2,c
  3333  0107C2  D441               	goto	l9101
  3334  0107C4  0A01               	xorlw	1	; case 1
  3335  0107C6  B4D8               	btfsc	status,2,c
  3336  0107C8  D60F               	goto	l9203
  3337  0107CA  0A02               	xorlw	2	; case 3
  3338  0107CC  B4D8               	btfsc	status,2,c
  3339  0107CE  D78B               	goto	l9279
  3340  0107D0  0A07               	xorlw	7	; case 4
  3341  0107D2  D7E6               	goto	l1287
  3342  0107D4                     l1288:
  3343  0107D4  84BE               	bsf	16318,2,c	;volatile
  3344                           
  3345                           ;main.c: 679:   if (V.ticks) {
  3346  0107D6  EE21  F0DC         	lfsr	2,_V+230	;volatile
  3347  0107DA  50DE               	movf	postinc2,w,c
  3348  0107DC  10DE               	iorwf	postinc2,w,c
  3349  0107DE  10DE               	iorwf	postinc2,w,c
  3350  0107E0  10DE               	iorwf	postinc2,w,c
  3351  0107E2  B4D8               	btfsc	status,2,c
  3352  0107E4  D01A               	goto	l9299
  3353                           
  3354                           ;main.c: 680:    if (V.failed_receive) {
  3355  0107E6  EE21  F0F9         	lfsr	2,_V+259	;volatile
  3356  0107EA  50DF               	movf	223,w,c
  3357  0107EC  0B0F               	andlw	15
  3358  0107EE  0900               	iorlw	0
  3359  0107F0  B4D8               	btfsc	status,2,c
  3360  0107F2  D003               	goto	l1297
  3361                           
  3362                           ;main.c: 681:     do { LATDbits.LATD4 = 0; } while(0);
  3363  0107F4  98BD               	bcf	16317,4,c	;volatile
  3364                           
  3365                           ;main.c: 682:     do { LATDbits.LATD5 = 1; } while(0);
  3366  0107F6  8ABD               	bsf	16317,5,c	;volatile
  3367  0107F8  D002               	goto	l9297
  3368  0107FA                     l1297:
  3369  0107FA  88BD               	bsf	16317,4,c	;volatile
  3370                           
  3371                           ;main.c: 685:     do { LATDbits.LATD5 = 0; } while(0);
  3372  0107FC  9ABD               	bcf	16317,5,c	;volatile
  3373  0107FE                     l9297:
  3374                           
  3375                           ;main.c: 687:    if (V.failed_send) {
  3376  0107FE  EE21  F0F8         	lfsr	2,_V+258	;volatile
  3377  010802  30DF               	rrcf	223,w,c
  3378  010804  32E8               	rrcf	wreg,f,c
  3379  010806  32E8               	rrcf	wreg,f,c
  3380  010808  0B0F               	andlw	15
  3381  01080A  0900               	iorlw	0
  3382  01080C  B4D8               	btfsc	status,2,c
  3383  01080E  D003               	goto	l1307
  3384                           
  3385                           ;main.c: 688:     do { LATDbits.LATD6 = 0; } while(0);
  3386  010810  9CBD               	bcf	16317,6,c	;volatile
  3387                           
  3388                           ;main.c: 689:     do { LATDbits.LATD7 = 1; } while(0);
  3389  010812  8EBD               	bsf	16317,7,c	;volatile
  3390  010814  D002               	goto	l9299
  3391  010816                     l1307:
  3392  010816  8CBD               	bsf	16317,6,c	;volatile
  3393                           
  3394                           ;main.c: 692:     do { LATDbits.LATD7 = 0; } while(0);
  3395  010818  9EBD               	bcf	16317,7,c	;volatile
  3396  01081A                     l9299:
  3397                           
  3398                           ;main.c: 695:   sprintf(V.buf, "R%d %d, T%d %d C%d      #", V.r_l_state, V.failed_receiv
      +                          e, V.t_l_state, V.failed_send, V.checksum_error);
  3399  01081A  EE21  F0F2         	lfsr	2,_V+252	;volatile
  3400  01081E  006F FF78  F047    	movff	postinc2,btemp+10
  3401  010824  006F FF74  F048    	movff	postdec2,btemp+11
  3402  01082A  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3403  010830  0060  F123  FFE6   	movff	btemp+11,postinc1
  3404  010836  EE21  F0F8         	lfsr	2,_V+258	;volatile
  3405  01083A  30DF               	rrcf	223,w,c
  3406  01083C  32E8               	rrcf	wreg,f,c
  3407  01083E  32E8               	rrcf	wreg,f,c
  3408  010840  0B0F               	andlw	15
  3409  010842  6EE6               	movwf	postinc1,c
  3410  010844  0E00               	movlw	0
  3411  010846  6EE6               	movwf	postinc1,c
  3412  010848  EE20  F3FB         	lfsr	2,_V+5	;volatile
  3413  01084C  50DF               	movf	indf2,w,c
  3414  01084E  6EE6               	movwf	postinc1,c
  3415  010850  0E00               	movlw	0
  3416  010852  6EE6               	movwf	postinc1,c
  3417  010854  EE21  F0F9         	lfsr	2,_V+259	;volatile
  3418  010858  50DF               	movf	223,w,c
  3419  01085A  0B0F               	andlw	15
  3420  01085C  6EE6               	movwf	postinc1,c
  3421  01085E  0E00               	movlw	0
  3422  010860  6EE6               	movwf	postinc1,c
  3423  010862  EE20  F3FA         	lfsr	2,_V+4	;volatile
  3424  010866  50DF               	movf	indf2,w,c
  3425  010868  6EE6               	movwf	postinc1,c
  3426  01086A  0E00               	movlw	0
  3427  01086C  6EE6               	movwf	postinc1,c
  3428  01086E  0E36               	movlw	low STR_17
  3429  010870  6EE6               	movwf	postinc1,c
  3430  010872  0EFF               	movlw	high STR_17
  3431  010874  6EE6               	movwf	postinc1,c
  3432  010876  0EFC               	movlw	low (_V+6)
  3433  010878  6EE6               	movwf	postinc1,c
  3434  01087A  0E03               	movlw	high (_V+6)
  3435  01087C  6EE6               	movwf	postinc1,c
  3436  01087E  0E0E               	movlw	14
  3437  010880  6EE6               	movwf	postinc1,c
  3438  010882  EC0C  F09B         	call	_sprintf	;wreg free
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;main.c: 696:   V.buf[16] = 0;
  3442  010886  0E00               	movlw	0
  3443  010888  006F FFA0  F40C    	movff	wreg,_V+22	;volatile
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;main.c: 697:   wait_lcd_done();
  3447  01088E  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;main.c: 698:   if (mode != UI_STATE_LOG)
  3451                           ;stkvar	_mode @ sp[(-1)+0]
  3452  010892  0EFF               	movlw	-1
  3453  010894  006F FF8C  F03D    	movff	plusw1,btemp
  3454  01089A  0E03               	movlw	3
  3455  01089C  183D               	xorwf	btemp,w,c
  3456  01089E  B4D8               	btfsc	status,2,c
  3457  0108A0  D00A               	goto	l9309
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;main.c: 699:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  3461  0108A2  0EFC               	movlw	low (_V+6)
  3462  0108A4  6EE6               	movwf	postinc1,c
  3463  0108A6  0E03               	movlw	high (_V+6)
  3464  0108A8  6EE6               	movwf	postinc1,c
  3465  0108AA  0E00               	movlw	0
  3466  0108AC  6EE6               	movwf	postinc1,c
  3467  0108AE  0E01               	movlw	1
  3468  0108B0  6EE6               	movwf	postinc1,c
  3469  0108B2  ECE6  F0A3         	call	_eaDogM_WriteStringAtPos	;wreg free
  3470  0108B6                     l9309:
  3471  0108B6  94BE               	bcf	16318,2,c	;volatile
  3472  0108B8  D778               	goto	l9291
  3473  0108BA                     __end_of_main:
  3474                           	opt callstack 0
  3475                           
  3476 ;; *************** function _t_protocol *****************
  3477 ;; Defined at:
  3478 ;;		line 375 in file "gemsecs.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  t_link          2  [STACK] PTR enum E16674
  3481 ;;		 -> V(302), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  rxData          1  [STACK] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1  [STACK] enum E16929
  3486 ;; Registers used:
  3487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/3C
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    5
  3500 ;; This function calls:
  3501 ;;		_StartTimer
  3502 ;;		_TimerDone
  3503 ;;		_UART1_Read
  3504 ;;		_UART1_Write
  3505 ;;		_UART1_is_rx_ready
  3506 ;;		_UART1_put_buffer
  3507 ;;		_secs_II_message
  3508 ;;		_secs_send
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;; This function uses a reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text1
  3515  011FC4                     __ptext1:
  3516                           	opt callstack 0
  3517  011FC4                     _t_protocol:
  3518                           	opt callstack 0
  3519                           
  3520                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3521  011FC4  52E6               	movf	postinc1,f,c
  3522                           
  3523                           ;gemsecs.c: 375: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 376: {;gemsecs.
      +                          c: 377:  uint8_t rxData;;gemsecs.c: 378:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          379:  static response_type block;;gemsecs.c: 381:  switch (*t_link) {
  3524                           
  3525                           ;incstack = 0
  3526  011FC6  D150               	goto	l9061
  3527  011FC8                     l1713:
  3528                           
  3529                           ;gemsecs.c: 383:   V.error = LINK_ERROR_NONE;
  3530  011FC8  0E0A               	movlw	10
  3531  011FCA  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  3532                           
  3533                           ;gemsecs.c: 384:   retry = 3;
  3534  011FD0  0E03               	movlw	3
  3535  011FD2  6E2D               	movwf	t_protocol@retry,c
  3536                           
  3537                           ;gemsecs.c: 385:   UART1_Write(0x05);
  3538  011FD4  0E05               	movlw	5
  3539  011FD6  6EE6               	movwf	postinc1,c
  3540  011FD8  EC50  F0A3         	call	_UART1_Write	;wreg free
  3541                           
  3542                           ; BSR set to: 57
  3543                           ;gemsecs.c: 386:   StartTimer(TMR_T2, 2000);
  3544  011FDC  0ED0               	movlw	208
  3545  011FDE  6EE6               	movwf	postinc1,c
  3546  011FE0  0E07               	movlw	7
  3547  011FE2  6EE6               	movwf	postinc1,c
  3548  011FE4  0E02               	movlw	2
  3549  011FE6  6EE6               	movwf	postinc1,c
  3550  011FE8  ECAD  F0A3         	call	_StartTimer	;wreg free
  3551                           
  3552                           ;gemsecs.c: 387:   *t_link = LINK_STATE_ENQ;
  3553                           ;stkvar	_t_link @ sp[(-1)+-2]
  3554  011FEC  0EFD               	movlw	-3
  3555  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  3556  011FF4  0EFE               	movlw	-2
  3557  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  3558  011FFC  0E01               	movlw	1
  3559  011FFE  D132               	goto	L8
  3560  012000                     l8967:
  3561                           
  3562                           ;gemsecs.c: 394:   if (TimerDone(TMR_T2)) {
  3563  012000  0E02               	movlw	2
  3564  012002  6EE6               	movwf	postinc1,c
  3565  012004  EC03  F0A6         	call	_TimerDone	;wreg free
  3566  012008  503D               	movf	btemp,w,c
  3567  01200A  B4D8               	btfsc	status,2,c
  3568  01200C  D026               	goto	l8981
  3569                           
  3570                           ;gemsecs.c: 395:    V.timer_error++;
  3571  01200E  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3572  012012  2ADE               	incf	postinc2,f,c
  3573  012014  0E00               	movlw	0
  3574  012016  22DD               	addwfc	postdec2,f,c
  3575                           
  3576                           ;gemsecs.c: 396:    if (!retry--) {
  3577  012018  062D               	decf	t_protocol@retry,f,c
  3578  01201A  282D               	incf	t_protocol@retry,w,c
  3579  01201C  A4D8               	btfss	status,2,c
  3580  01201E  D014               	goto	l8979
  3581                           
  3582                           ;gemsecs.c: 397:     V.error = LINK_ERROR_T2;
  3583  012020  0E0C               	movlw	12
  3584  012022  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  3585                           
  3586                           ;gemsecs.c: 398:     V.failed_send = 1;
  3587  012028  EE21  F0F8         	lfsr	2,_V+258	;volatile
  3588  01202C  50DF               	movf	223,w,c
  3589  01202E  0B87               	andlw	-121
  3590  012030  0908               	iorlw	8
  3591  012032  6EDF               	movwf	223,c
  3592                           
  3593                           ;gemsecs.c: 399:     *t_link = LINK_STATE_NAK;
  3594                           ;stkvar	_t_link @ sp[(-1)+-2]
  3595  012034  0EFD               	movlw	-3
  3596  012036  006F FF8F FFD9     	movff	plusw1,fsr2l
  3597  01203C  0EFE               	movlw	-2
  3598  01203E  006F FF8F FFDA     	movff	plusw1,fsr2h
  3599  012044  0E05               	movlw	5
  3600  012046  D10E               	goto	L8
  3601  012048                     l8979:
  3602                           
  3603                           ;gemsecs.c: 401:     StartTimer(TMR_T2, 2000);
  3604  012048  0ED0               	movlw	208
  3605  01204A  6EE6               	movwf	postinc1,c
  3606  01204C  0E07               	movlw	7
  3607  01204E  6EE6               	movwf	postinc1,c
  3608  012050  0E02               	movlw	2
  3609  012052  6EE6               	movwf	postinc1,c
  3610  012054  ECAD  F0A3         	call	_StartTimer	;wreg free
  3611  012058  D12C               	goto	l9063
  3612  01205A                     l8981:
  3613                           
  3614                           ;gemsecs.c: 404:    if (UART1_is_rx_ready()) {
  3615  01205A  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  3616  01205E  503D               	movf	btemp,w,c
  3617  012060  B4D8               	btfsc	status,2,c
  3618  012062  D127               	goto	l9063
  3619                           
  3620                           ;gemsecs.c: 405:     rxData = UART1_Read();
  3621  012064  EC8E  F0A3         	call	_UART1_Read	;wreg free
  3622                           
  3623                           ;stkvar	_rxData @ sp[(-1)+0]
  3624  012068  0EFF               	movlw	-1
  3625  01206A  0060  F0F7  FFE3   	movff	btemp,plusw1
  3626                           
  3627                           ; BSR set to: 57
  3628                           ;gemsecs.c: 406:     if (rxData == 0x04) {
  3629                           ;stkvar	_rxData @ sp[(-1)+0]
  3630  012070  0EFF               	movlw	-1
  3631  012072  006F FF8C  F03D    	movff	plusw1,btemp
  3632  012078  0E04               	movlw	4
  3633  01207A  183D               	xorwf	btemp,w,c
  3634  01207C  A4D8               	btfss	status,2,c
  3635  01207E  D012               	goto	l8991
  3636                           
  3637                           ; BSR set to: 57
  3638                           ;gemsecs.c: 407:      StartTimer(TMR_T3, 5000);
  3639  012080  0E88               	movlw	136
  3640  012082  6EE6               	movwf	postinc1,c
  3641  012084  0E13               	movlw	19
  3642  012086  6EE6               	movwf	postinc1,c
  3643  012088  0E03               	movlw	3
  3644  01208A  6EE6               	movwf	postinc1,c
  3645  01208C  ECAD  F0A3         	call	_StartTimer	;wreg free
  3646                           
  3647                           ;gemsecs.c: 408:      *t_link = LINK_STATE_EOT;
  3648                           ;stkvar	_t_link @ sp[(-1)+-2]
  3649  012090  0EFD               	movlw	-3
  3650  012092  006F FF8F FFD9     	movff	plusw1,fsr2l
  3651  012098  0EFE               	movlw	-2
  3652  01209A  006F FF8F FFDA     	movff	plusw1,fsr2h
  3653  0120A0  0E02               	movlw	2
  3654  0120A2  6EDF               	movwf	indf2,c
  3655  0120A4                     l8991:
  3656                           
  3657                           ;gemsecs.c: 410:     if (rxData == 0x05) {
  3658                           ;stkvar	_rxData @ sp[(-1)+0]
  3659  0120A4  0EFF               	movlw	-1
  3660  0120A6  006F FF8C  F03D    	movff	plusw1,btemp
  3661  0120AC  0E05               	movlw	5
  3662  0120AE  183D               	xorwf	btemp,w,c
  3663  0120B0  A4D8               	btfss	status,2,c
  3664  0120B2  D0FF               	goto	l9063
  3665                           
  3666                           ;gemsecs.c: 411:      UART1_put_buffer(0x04);
  3667  0120B4  0E04               	movlw	4
  3668  0120B6  6EE6               	movwf	postinc1,c
  3669  0120B8  EC73  F0A4         	call	_UART1_put_buffer	;wreg free
  3670  0120BC                     l8995:
  3671                           
  3672                           ; BSR set to: 57
  3673                           ;gemsecs.c: 412:      *t_link = LINK_STATE_DONE;
  3674                           ;stkvar	_t_link @ sp[(-1)+-2]
  3675  0120BC  0EFD               	movlw	-3
  3676  0120BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  3677  0120C4  0EFE               	movlw	-2
  3678  0120C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  3679  0120CC  0E04               	movlw	4
  3680  0120CE  D0CA               	goto	L8
  3681  0120D0                     l8997:
  3682                           
  3683                           ;gemsecs.c: 418:   if (!requeue)
  3684  0120D0  502C               	movf	t_protocol@requeue,w,c
  3685  0120D2  A4D8               	btfss	status,2,c
  3686  0120D4  D013               	goto	l9001
  3687                           
  3688                           ;gemsecs.c: 419:    block = secs_II_message(V.stream, V.function);
  3689  0120D6  EE21  F0E9         	lfsr	2,_V+243	;volatile
  3690  0120DA  50DF               	movf	indf2,w,c
  3691  0120DC  6EE6               	movwf	postinc1,c
  3692  0120DE  EE21  F0E8         	lfsr	2,_V+242	;volatile
  3693  0120E2  50DF               	movf	indf2,w,c
  3694  0120E4  6EE6               	movwf	postinc1,c
  3695  0120E6  EC5C  F08E         	call	_secs_II_message	;wreg free
  3696  0120EA  EE20  F0D1         	lfsr	2,t_protocol@block
  3697  0120EE  0E06               	movlw	6
  3698  0120F0                     u5791:
  3699  0120F0  52E5               	movf	postdec1,f,c
  3700  0120F2  006F FF9F FFDB     	movff	indf1,plusw2
  3701  0120F8  06E8               	decf	wreg,f,c
  3702  0120FA  E2FA               	bc	u5791
  3703  0120FC                     l9001:
  3704                           
  3705                           ;gemsecs.c: 421:   if (V.abort == LINK_ERROR_ABORT) {
  3706  0120FC  0061  F3AF  FFE8   	movff	_V+245,wreg	;volatile
  3707  012102  0A11               	xorlw	17
  3708  012104  A4D8               	btfss	status,2,c
  3709  012106  D01F               	goto	l9009
  3710                           
  3711                           ;gemsecs.c: 422:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  3712  012108  0E01               	movlw	1
  3713  01210A  6EE6               	movwf	postinc1,c
  3714  01210C  0E00               	movlw	0
  3715  01210E  6EE6               	movwf	postinc1,c
  3716  012110  0100               	movlb	0	; () banked
  3717  012112  51D3               	movf	(t_protocol@block+2)& (0+255),w,b
  3718  012114  6EE6               	movwf	postinc1,c
  3719  012116  0060  F347  FFE6   	movff	t_protocol@block,postinc1
  3720  01211C  0060  F34B  FFE6   	movff	t_protocol@block+1,postinc1
  3721  012122  EC7C  F095         	call	_secs_send	;wreg free
  3722                           
  3723                           ;gemsecs.c: 423:    V.failed_send = 2;
  3724  012126  EE21  F0F8         	lfsr	2,_V+258	;volatile
  3725  01212A  50DF               	movf	223,w,c
  3726  01212C  0B87               	andlw	-121
  3727  01212E  0910               	iorlw	16
  3728  012130  6EDF               	movwf	223,c
  3729                           
  3730                           ;gemsecs.c: 424:    *t_link = LINK_STATE_ERROR;
  3731                           ;stkvar	_t_link @ sp[(-1)+-2]
  3732  012132  0EFD               	movlw	-3
  3733  012134  006F FF8F FFD9     	movff	plusw1,fsr2l
  3734  01213A  0EFE               	movlw	-2
  3735  01213C  006F FF8F FFDA     	movff	plusw1,fsr2h
  3736  012142  0E06               	movlw	6
  3737  012144  D08F               	goto	L8
  3738  012146                     l9009:
  3739                           
  3740                           ;gemsecs.c: 426:    if (!requeue) {
  3741  012146  502C               	movf	t_protocol@requeue,w,c
  3742  012148  A4D8               	btfss	status,2,c
  3743  01214A  D016               	goto	l1727
  3744                           
  3745                           ;gemsecs.c: 427:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  3746  01214C  0E01               	movlw	1
  3747  01214E  6EE6               	movwf	postinc1,c
  3748  012150  0E00               	movlw	0
  3749  012152  6EE6               	movwf	postinc1,c
  3750  012154  0100               	movlb	0	; () banked
  3751  012156  51D3               	movf	(t_protocol@block+2)& (0+255),w,b
  3752  012158  6EE6               	movwf	postinc1,c
  3753  01215A  0060  F347  FFE6   	movff	t_protocol@block,postinc1
  3754  012160  0060  F34B  FFE6   	movff	t_protocol@block+1,postinc1
  3755  012166  EC7C  F095         	call	_secs_send	;wreg free
  3756                           
  3757                           ;gemsecs.c: 428:     if (V.queue)
  3758  01216A  EE21  F0F9         	lfsr	2,_V+259	;volatile
  3759  01216E  A8DF               	btfss	indf2,4,c
  3760  012170  D016               	goto	l9021
  3761                           
  3762                           ;gemsecs.c: 429:      requeue = 1;
  3763  012172  0E01               	movlw	1
  3764  012174  6E2C               	movwf	t_protocol@requeue,c
  3765  012176  D013               	goto	l9021
  3766  012178                     l1727:
  3767                           
  3768                           ;gemsecs.c: 431:     requeue = 0;
  3769  012178  6A2C               	clrf	t_protocol@requeue,c
  3770                           
  3771                           ;gemsecs.c: 432:     V.queue = 0;
  3772  01217A  EE21  F0F9         	lfsr	2,_V+259	;volatile
  3773  01217E  98DF               	bcf	indf2,4,c
  3774                           
  3775                           ;gemsecs.c: 433:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  3776  012180  0E01               	movlw	1
  3777  012182  6EE6               	movwf	postinc1,c
  3778  012184  0E00               	movlw	0
  3779  012186  6EE6               	movwf	postinc1,c
  3780  012188  0100               	movlb	0	; () banked
  3781  01218A  51D6               	movf	(t_protocol@block+5)& (0+255),w,b
  3782  01218C  6EE6               	movwf	postinc1,c
  3783  01218E  0060  F353  FFE6   	movff	t_protocol@block+3,postinc1
  3784  012194  0060  F357  FFE6   	movff	t_protocol@block+4,postinc1
  3785  01219A  EC7C  F095         	call	_secs_send	;wreg free
  3786  01219E                     l9021:
  3787                           
  3788                           ;gemsecs.c: 435:    if (V.error == LINK_ERROR_NONE) {
  3789  01219E  0061  F3AB  FFE8   	movff	_V+244,wreg	;volatile
  3790  0121A4  0A0A               	xorlw	10
  3791  0121A6  A4D8               	btfss	status,2,c
  3792  0121A8  D00A               	goto	l9025
  3793                           
  3794                           ;gemsecs.c: 436:     *t_link = LINK_STATE_ACK;
  3795                           ;stkvar	_t_link @ sp[(-1)+-2]
  3796  0121AA  0EFD               	movlw	-3
  3797  0121AC  006F FF8F FFD9     	movff	plusw1,fsr2l
  3798  0121B2  0EFE               	movlw	-2
  3799  0121B4  006F FF8F FFDA     	movff	plusw1,fsr2h
  3800  0121BA  0E03               	movlw	3
  3801  0121BC  D053               	goto	L8
  3802  0121BE                     l9025:
  3803                           
  3804                           ;gemsecs.c: 438:     V.failed_send = 3;
  3805  0121BE  EE21  F0F8         	lfsr	2,_V+258	;volatile
  3806  0121C2  50DF               	movf	223,w,c
  3807  0121C4  0B87               	andlw	-121
  3808  0121C6  0918               	iorlw	24
  3809  0121C8  D7B3               	goto	L9
  3810  0121CA                     l9029:
  3811                           
  3812                           ;gemsecs.c: 451:   if (TimerDone(TMR_T3)) {
  3813  0121CA  0E03               	movlw	3
  3814  0121CC  6EE6               	movwf	postinc1,c
  3815  0121CE  EC03  F0A6         	call	_TimerDone	;wreg free
  3816  0121D2  503D               	movf	btemp,w,c
  3817  0121D4  B4D8               	btfsc	status,2,c
  3818  0121D6  D00F               	goto	l9039
  3819                           
  3820                           ;gemsecs.c: 452:    V.timer_error++;
  3821  0121D8  EE21  F0F4         	lfsr	2,_V+254	;volatile
  3822  0121DC  2ADE               	incf	postinc2,f,c
  3823  0121DE  0E00               	movlw	0
  3824  0121E0  22DD               	addwfc	postdec2,f,c
  3825                           
  3826                           ;gemsecs.c: 453:    V.error = LINK_ERROR_T3;
  3827  0121E2  0E0D               	movlw	13
  3828  0121E4  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  3829                           
  3830                           ;gemsecs.c: 454:    V.failed_send = 4;
  3831  0121EA  EE21  F0F8         	lfsr	2,_V+258	;volatile
  3832  0121EE  50DF               	movf	223,w,c
  3833  0121F0  0B87               	andlw	-121
  3834  0121F2  0920               	iorlw	32
  3835  0121F4  D71E               	goto	L10
  3836  0121F6                     l9039:
  3837                           
  3838                           ;gemsecs.c: 457:    if (UART1_is_rx_ready()) {
  3839  0121F6  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  3840  0121FA  503D               	movf	btemp,w,c
  3841  0121FC  B4D8               	btfsc	status,2,c
  3842  0121FE  D059               	goto	l9063
  3843                           
  3844                           ;gemsecs.c: 458:     rxData = UART1_Read();
  3845  012200  EC8E  F0A3         	call	_UART1_Read	;wreg free
  3846                           
  3847                           ;stkvar	_rxData @ sp[(-1)+0]
  3848  012204  0EFF               	movlw	-1
  3849  012206  0060  F0F7  FFE3   	movff	btemp,plusw1
  3850                           
  3851                           ; BSR set to: 57
  3852                           ;gemsecs.c: 459:     if (rxData == 0x06) {
  3853                           ;stkvar	_rxData @ sp[(-1)+0]
  3854  01220C  0EFF               	movlw	-1
  3855  01220E  006F FF8C  F03D    	movff	plusw1,btemp
  3856  012214  0E06               	movlw	6
  3857  012216  183D               	xorwf	btemp,w,c
  3858  012218  A4D8               	btfss	status,2,c
  3859  01221A  D04B               	goto	l9063
  3860                           
  3861                           ; BSR set to: 57
  3862                           ;gemsecs.c: 460:      V.failed_send = 0;
  3863  01221C  EE21  F0F8         	lfsr	2,_V+258	;volatile
  3864  012220  0E87               	movlw	-121
  3865  012222  16DF               	andwf	223,f,c
  3866  012224  D74B               	goto	l8995
  3867  012226                     l9049:
  3868                           
  3869                           ;gemsecs.c: 467:   *t_link = LINK_STATE_ERROR;
  3870                           ;stkvar	_t_link @ sp[(-1)+-2]
  3871  012226  0EFD               	movlw	-3
  3872  012228  006F FF8F FFD9     	movff	plusw1,fsr2l
  3873  01222E  0EFE               	movlw	-2
  3874  012230  006F FF8F FFDA     	movff	plusw1,fsr2h
  3875  012236  0E06               	movlw	6
  3876  012238  6EDF               	movwf	indf2,c
  3877                           
  3878                           ;gemsecs.c: 468:   while ((uart1RxCount)) {
  3879  01223A  D002               	goto	l9053
  3880  01223C                     l9051:
  3881                           
  3882                           ;gemsecs.c: 469:    UART1_Read();
  3883  01223C  EC8E  F0A3         	call	_UART1_Read	;wreg free
  3884  012240                     l9053:
  3885                           
  3886                           ;gemsecs.c: 468:   while ((uart1RxCount)) {
  3887  012240  5037               	movf	_uart1RxCount,w,c	;volatile
  3888  012242  B4D8               	btfsc	status,2,c
  3889  012244  D036               	goto	l9063
  3890  012246  D7FA               	goto	l9051
  3891  012248                     l9055:
  3892                           
  3893                           ;gemsecs.c: 475:   V.failed_send = 0;
  3894  012248  EE21  F0F8         	lfsr	2,_V+258	;volatile
  3895  01224C  0E87               	movlw	-121
  3896  01224E  16DF               	andwf	223,f,c
  3897                           
  3898                           ;gemsecs.c: 476:   break;
  3899  012250  D030               	goto	l9063
  3900  012252                     l9057:
  3901                           
  3902                           ;gemsecs.c: 478:   *t_link = LINK_STATE_IDLE;
  3903                           ;stkvar	_t_link @ sp[(-1)+-2]
  3904  012252  0EFD               	movlw	-3
  3905  012254  006F FF8F FFD9     	movff	plusw1,fsr2l
  3906  01225A  0EFE               	movlw	-2
  3907  01225C  006F FF8F FFDA     	movff	plusw1,fsr2h
  3908  012262  0E00               	movlw	0
  3909  012264                     L8:
  3910  012264  6EDF               	movwf	indf2,c
  3911                           
  3912                           ;gemsecs.c: 480:   break;
  3913  012266  D025               	goto	l9063
  3914  012268                     l9061:
  3915                           
  3916                           ;stkvar	_t_link @ sp[(-1)+-2]
  3917  012268  0EFD               	movlw	-3
  3918  01226A  006F FF8F FFD9     	movff	plusw1,fsr2l
  3919  012270  0EFE               	movlw	-2
  3920  012272  006F FF8F FFDA     	movff	plusw1,fsr2h
  3921  012278  50DF               	movf	indf2,w,c
  3922  01227A  6E47               	movwf	btemp+10,c
  3923  01227C  6A48               	clrf	btemp+11,c
  3924                           
  3925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3926                           ; Switch size 1, requested type "simple"
  3927                           ; Number of cases is 1, Range of values is 0 to 0
  3928                           ; switch strategies available:
  3929                           ; Name         Instructions Cycles
  3930                           ; simple_byte            4     3 (average)
  3931                           ;	Chosen strategy is simple_byte
  3932  01227E  5048               	movf	btemp+11,w,c
  3933  012280  0A00               	xorlw	0	; case 0
  3934  012282  A4D8               	btfss	status,2,c
  3935  012284  D7E6               	goto	l9057
  3936                           
  3937                           ; Switch size 1, requested type "simple"
  3938                           ; Number of cases is 7, Range of values is 0 to 6
  3939                           ; switch strategies available:
  3940                           ; Name         Instructions Cycles
  3941                           ; simple_byte           22    12 (average)
  3942                           ;	Chosen strategy is simple_byte
  3943  012286  5047               	movf	btemp+10,w,c
  3944  012288  0A00               	xorlw	0	; case 0
  3945  01228A  B4D8               	btfsc	status,2,c
  3946  01228C  D69D               	goto	l1713
  3947  01228E  0A01               	xorlw	1	; case 1
  3948  012290  B4D8               	btfsc	status,2,c
  3949  012292  D6B6               	goto	l8967
  3950  012294  0A03               	xorlw	3	; case 2
  3951  012296  B4D8               	btfsc	status,2,c
  3952  012298  D71B               	goto	l8997
  3953  01229A  0A01               	xorlw	1	; case 3
  3954  01229C  B4D8               	btfsc	status,2,c
  3955  01229E  D795               	goto	l9029
  3956  0122A0  0A07               	xorlw	7	; case 4
  3957  0122A2  B4D8               	btfsc	status,2,c
  3958  0122A4  D7D1               	goto	l9055
  3959  0122A6  0A01               	xorlw	1	; case 5
  3960  0122A8  B4D8               	btfsc	status,2,c
  3961  0122AA  D7BD               	goto	l9049
  3962  0122AC  0A03               	xorlw	3	; case 6
  3963  0122AE  A4D8               	btfss	status,2,c
  3964  0122B0  D7D0               	goto	l9057
  3965  0122B2                     l9063:
  3966                           
  3967                           ;gemsecs.c: 483:  return *t_link;
  3968                           ;stkvar	_t_link @ sp[(-1)+-2]
  3969  0122B2  0EFD               	movlw	-3
  3970  0122B4  006F FF8F FFD9     	movff	plusw1,fsr2l
  3971  0122BA  0EFE               	movlw	-2
  3972  0122BC  006F FF8F FFDA     	movff	plusw1,fsr2h
  3973  0122C2  50DF               	movf	indf2,w,c
  3974  0122C4  6E3D               	movwf	btemp,c
  3975                           
  3976                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  3977  0122C6  52E5               	movf	postdec1,f,c
  3978  0122C8  52E5               	movf	postdec1,f,c
  3979  0122CA  52E5               	movf	postdec1,f,c
  3980  0122CC  0012               	return		;funcret
  3981  0122CE                     __end_of_t_protocol:
  3982                           	opt callstack 0
  3983                           
  3984 ;; *************** function _secs_send *****************
  3985 ;; Defined at:
  3986 ;;		line 487 in file "gemsecs.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  byte_block      2  [STACK] PTR unsigned char 
  3989 ;;		 -> H53(112), H24(27), H17(20), H14(17), 
  3990 ;;		 -> H13(48), H12(30), H10(91), 
  3991 ;;  length          1  [STACK] unsigned char 
  3992 ;;  fake            1  [STACK] _Bool 
  3993 ;;  s_uart          1  [STACK] unsigned char 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  k               2  [STACK] PTR unsigned char 
  3996 ;;		 -> H53(112), H24(27), H17(20), H14(17), 
  3997 ;;		 -> H13(48), H12(30), H10(91), 
  3998 ;;  checksum        2  [STACK] unsigned short 
  3999 ;;  i               1  [STACK] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1  [STACK] _Bool 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  4004 ;; Tracked objects:
  4005 ;;		On entry : 3F/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4013 ;;Total ram usage:        0 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    4
  4016 ;; This function calls:
  4017 ;;		_UART1_Write
  4018 ;;		_UART1_is_tx_ready
  4019 ;;		_UART1_put_buffer
  4020 ;;		_UART2_Write
  4021 ;;		_UART2_is_tx_ready
  4022 ;;		_UART2_put_buffer
  4023 ;;		_block_checksum
  4024 ;; This function is called by:
  4025 ;;		_t_protocol
  4026 ;; This function uses a reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text2
  4030  012AF8                     __ptext2:
  4031                           	opt callstack 0
  4032  012AF8                     _secs_send:
  4033                           	opt callstack 0
  4034                           
  4035                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4036  012AF8  0E05               	movlw	5
  4037  012AFA  26E1               	addwf	fsr1l,f,c
  4038  012AFC  0E00               	movlw	0
  4039  012AFE  22E2               	addwfc	fsr1h,f,c
  4040                           
  4041                           ;gemsecs.c: 487: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 488: {;gemsecs.c: 489:  uint8_t i, *k;;gemsecs.c: 490:  uint16_t ch
      +                          ecksum;;gemsecs.c: 492:  k = (uint8_t *) byte_block;
  4042                           ;stkvar	_byte_block @ sp[(-5)+-2]
  4043                           
  4044                           ;incstack = 0
  4045  012B00  0EF9               	movlw	-7
  4046  012B02  006F FF8C  F047    	movff	plusw1,btemp+10
  4047  012B08  0EFA               	movlw	-6
  4048  012B0A  006F FF8C  F048    	movff	plusw1,btemp+11
  4049                           
  4050                           ;stkvar	_k @ sp[(-5)+0]
  4051  012B10  0EFC               	movlw	-4
  4052  012B12  0060  F123  FFE3   	movff	btemp+11,plusw1
  4053  012B18  0EFB               	movlw	-5
  4054  012B1A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  4055                           
  4056                           ;gemsecs.c: 494:  ++V.ticks;
  4057  012B20  EE21  F0DC         	lfsr	2,_V+230	;volatile
  4058  012B24  2ADE               	incf	postinc2,f,c
  4059  012B26  0E00               	movlw	0
  4060  012B28  22DE               	addwfc	postinc2,f,c
  4061  012B2A  22DE               	addwfc	postinc2,f,c
  4062  012B2C  22DE               	addwfc	postinc2,f,c
  4063                           
  4064                           ;gemsecs.c: 495:  V.error = LINK_ERROR_NONE;
  4065  012B2E  0E0A               	movlw	10
  4066  012B30  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  4067                           
  4068                           ;gemsecs.c: 496:  if ((length - 3) != k[length - 1]) {
  4069                           ;stkvar	_length @ sp[(-5)+-3]
  4070  012B36  0EF8               	movlw	-8
  4071  012B38  50E3               	movf	plusw1,w,c
  4072  012B3A  6E47               	movwf	btemp+10,c
  4073  012B3C  6A48               	clrf	btemp+11,c
  4074                           
  4075                           ;stkvar	_k @ sp[(-5)+0]
  4076  012B3E  0EFB               	movlw	-5
  4077  012B40  50E3               	movf	plusw1,w,c
  4078  012B42  2647               	addwf	btemp+10,f,c
  4079  012B44  0EFC               	movlw	-4
  4080  012B46  50E3               	movf	plusw1,w,c
  4081  012B48  2248               	addwfc	btemp+11,f,c
  4082  012B4A  0EFF               	movlw	255
  4083  012B4C  2447               	addwf	btemp+10,w,c
  4084  012B4E  6ED9               	movwf	fsr2l,c
  4085  012B50  0EFF               	movlw	255
  4086  012B52  2048               	addwfc	btemp+11,w,c
  4087  012B54  6EDA               	movwf	fsr2h,c
  4088  012B56  50DF               	movf	indf2,w,c
  4089  012B58  6E47               	movwf	btemp+10,c
  4090  012B5A  6A48               	clrf	btemp+11,c
  4091  012B5C  0EFD               	movlw	253
  4092  012B5E  6E45               	movwf	btemp+8,c
  4093  012B60  0EFF               	movlw	255
  4094  012B62  6E46               	movwf	btemp+9,c
  4095                           
  4096                           ;stkvar	_length @ sp[(-5)+-3]
  4097  012B64  0EF8               	movlw	-8
  4098  012B66  50E3               	movf	plusw1,w,c
  4099  012B68  6E43               	movwf	btemp+6,c
  4100  012B6A  6A44               	clrf	btemp+7,c
  4101  012B6C  5045               	movf	btemp+8,w,c
  4102  012B6E  2643               	addwf	btemp+6,f,c
  4103  012B70  5046               	movf	btemp+9,w,c
  4104  012B72  2244               	addwfc	btemp+7,f,c
  4105  012B74  5047               	movf	btemp+10,w,c
  4106  012B76  1843               	xorwf	btemp+6,w,c
  4107  012B78  E104               	bnz	u5660
  4108  012B7A  5048               	movf	btemp+11,w,c
  4109  012B7C  1844               	xorwf	btemp+7,w,c
  4110  012B7E  B4D8               	btfsc	status,2,c
  4111  012B80  D005               	goto	l8823
  4112  012B82                     u5660:
  4113                           
  4114                           ;gemsecs.c: 497:   V.error = LINK_ERROR_SEND;
  4115  012B82  0E12               	movlw	18
  4116  012B84  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  4117                           
  4118                           ;gemsecs.c: 498:   return 0;;	Return value of _secs_send is never used
  4119  012B8A  D0EF               	goto	l1748
  4120  012B8C                     l8823:
  4121                           
  4122                           ;gemsecs.c: 506:  checksum = block_checksum(&k[2], length - 3);
  4123  012B8C  0EFD               	movlw	253
  4124  012B8E  6E47               	movwf	btemp+10,c
  4125  012B90  0EFF               	movlw	255
  4126  012B92  6E48               	movwf	btemp+11,c
  4127                           
  4128                           ;stkvar	_length @ sp[(-5)+-3]
  4129  012B94  0EF8               	movlw	-8
  4130  012B96  50E3               	movf	plusw1,w,c
  4131  012B98  6E45               	movwf	btemp+8,c
  4132  012B9A  6A46               	clrf	btemp+9,c
  4133  012B9C  5047               	movf	btemp+10,w,c
  4134  012B9E  2645               	addwf	btemp+8,f,c
  4135  012BA0  5048               	movf	btemp+11,w,c
  4136  012BA2  2246               	addwfc	btemp+9,f,c
  4137  012BA4  0060  F117  FFE6   	movff	btemp+8,postinc1
  4138  012BAA  0060  F11B  FFE6   	movff	btemp+9,postinc1
  4139                           
  4140                           ;stkvar	_k @ sp[(-7)+0]
  4141  012BB0  0EF9               	movlw	-7
  4142  012BB2  50E3               	movf	plusw1,w,c
  4143  012BB4  0F02               	addlw	2
  4144  012BB6  6E47               	movwf	btemp+10,c
  4145  012BB8  0EFA               	movlw	-6
  4146  012BBA  006F FF8C  F048    	movff	plusw1,btemp+11
  4147  012BC0  0E00               	movlw	0
  4148  012BC2  2248               	addwfc	btemp+11,f,c
  4149  012BC4  0060  F11F  FFE6   	movff	btemp+10,postinc1
  4150  012BCA  0060  F123  FFE6   	movff	btemp+11,postinc1
  4151  012BD0  EC81  F09C         	call	_block_checksum	;wreg free
  4152                           
  4153                           ;stkvar	_checksum @ sp[(-5)+2]
  4154  012BD4  0EFD               	movlw	-3
  4155  012BD6  0060  F0F7  FFE3   	movff	btemp,plusw1
  4156  012BDC  0EFE               	movlw	-2
  4157  012BDE  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  4158                           
  4159                           ;gemsecs.c: 507:  k[0] = checksum & 0xff;
  4160                           ;stkvar	_checksum @ sp[(-5)+2]
  4161                           ;stkvar	_k @ sp[(-5)+0]
  4162  012BE4  0EFB               	movlw	-5
  4163  012BE6  006F FF8F FFD9     	movff	plusw1,fsr2l
  4164  012BEC  0EFC               	movlw	-4
  4165  012BEE  006F FF8F FFDA     	movff	plusw1,fsr2h
  4166  012BF4  0EFD               	movlw	-3
  4167  012BF6  006F FF8F FFDF     	movff	plusw1,indf2
  4168                           
  4169                           ;gemsecs.c: 508:  k[1] = (checksum >> 8)&0xff;
  4170                           ;stkvar	_checksum @ sp[(-5)+2]
  4171  012BFC  0EFE               	movlw	254
  4172  012BFE  24E1               	addwf	fsr1l,w,c
  4173  012C00  6ED9               	movwf	fsr2l,c
  4174  012C02  0EFF               	movlw	255
  4175  012C04  20E2               	addwfc	fsr1h,w,c
  4176  012C06  6EDA               	movwf	fsr2h,c
  4177                           
  4178                           ;stkvar	_k @ sp[(-5)+0]
  4179  012C08  0EFB               	movlw	-5
  4180  012C0A  006F FF8C  F047    	movff	plusw1,btemp+10
  4181  012C10  0EFC               	movlw	-4
  4182  012C12  006F FF8C  F048    	movff	plusw1,btemp+11
  4183  012C18  0E01               	movlw	1
  4184  012C1A  2447               	addwf	btemp+10,w,c
  4185  012C1C  6EE9               	movwf	fsr0l,c
  4186  012C1E  0E00               	movlw	0
  4187  012C20  2048               	addwfc	btemp+11,w,c
  4188  012C22  6EEA               	movwf	fsr0h,c
  4189  012C24  006F FF7F FFEF     	movff	indf2,indf0
  4190                           
  4191                           ;gemsecs.c: 509:  V.t_checksum = checksum;
  4192                           ;stkvar	_checksum @ sp[(-5)+2]
  4193  012C2A  50E1               	movf	fsr1l,w,c
  4194  012C2C  0FFD               	addlw	-3
  4195  012C2E  6ED9               	movwf	fsr2l,c
  4196  012C30  50E2               	movf	fsr1h,w,c
  4197  012C32  6EDA               	movwf	fsr2h,c
  4198  012C34  0EFF               	movlw	255
  4199  012C36  22DA               	addwfc	fsr2h,f,c
  4200  012C38  006F FF78  F4F0    	movff	postinc2,_V+250	;volatile
  4201  012C3E  006F FF74  F4F1    	movff	postdec2,_V+251	;volatile
  4202                           
  4203                           ;gemsecs.c: 511:  switch (s_uart) {
  4204  012C44  D082               	goto	l8869
  4205  012C46                     l8831:
  4206  012C46  EC5B  F0A7         	call	_UART2_is_tx_ready	;wreg free
  4207  012C4A  0E3F               	movlw	63
  4208  012C4C  643D               	cpfsgt	btemp,c
  4209  012C4E  D7FB               	goto	l8831
  4210                           
  4211                           ;gemsecs.c: 514:   for (i = length; i > 0; i--) {
  4212                           ;stkvar	_length @ sp[(-5)+-3]
  4213                           ;stkvar	_i @ sp[(-5)+4]
  4214  012C50  0EF8               	movlw	-8
  4215  012C52  006F FF8C  F03D    	movff	plusw1,btemp
  4216  012C58  0EFF               	movlw	-1
  4217  012C5A  0060  F0F7  FFE3   	movff	btemp,plusw1
  4218  012C60                     l8835:
  4219                           
  4220                           ;stkvar	_i @ sp[(-5)+4]
  4221  012C60  0EFF               	movlw	-1
  4222  012C62  50E3               	movf	plusw1,w,c
  4223  012C64  B4D8               	btfsc	status,2,c
  4224  012C66  D081               	goto	l1748
  4225                           
  4226                           ;gemsecs.c: 515:    if (fake) {
  4227                           ;stkvar	_fake @ sp[(-5)+-4]
  4228  012C68  0EF7               	movlw	-9
  4229  012C6A  50E3               	movf	plusw1,w,c
  4230  012C6C  B4D8               	btfsc	status,2,c
  4231  012C6E  D015               	goto	l8843
  4232                           
  4233                           ;gemsecs.c: 516:     UART2_put_buffer(k[i - 1]);
  4234                           ;stkvar	_i @ sp[(-5)+4]
  4235  012C70  0EFF               	movlw	-1
  4236  012C72  50E3               	movf	plusw1,w,c
  4237  012C74  6E47               	movwf	btemp+10,c
  4238  012C76  6A48               	clrf	btemp+11,c
  4239                           
  4240                           ;stkvar	_k @ sp[(-5)+0]
  4241  012C78  0EFB               	movlw	-5
  4242  012C7A  50E3               	movf	plusw1,w,c
  4243  012C7C  2647               	addwf	btemp+10,f,c
  4244  012C7E  0EFC               	movlw	-4
  4245  012C80  50E3               	movf	plusw1,w,c
  4246  012C82  2248               	addwfc	btemp+11,f,c
  4247  012C84  0EFF               	movlw	255
  4248  012C86  2447               	addwf	btemp+10,w,c
  4249  012C88  6ED9               	movwf	fsr2l,c
  4250  012C8A  0EFF               	movlw	255
  4251  012C8C  2048               	addwfc	btemp+11,w,c
  4252  012C8E  6EDA               	movwf	fsr2h,c
  4253  012C90  50DF               	movf	indf2,w,c
  4254  012C92  6EE6               	movwf	postinc1,c
  4255  012C94  EC5E  F0A4         	call	_UART2_put_buffer	;wreg free
  4256                           
  4257                           ;gemsecs.c: 517:    } else {
  4258  012C98  D014               	goto	l8845
  4259  012C9A                     l8843:
  4260                           
  4261                           ;gemsecs.c: 519:     UART2_Write(k[i - 1]);
  4262                           ;stkvar	_i @ sp[(-5)+4]
  4263  012C9A  0EFF               	movlw	-1
  4264  012C9C  50E3               	movf	plusw1,w,c
  4265  012C9E  6E47               	movwf	btemp+10,c
  4266  012CA0  6A48               	clrf	btemp+11,c
  4267                           
  4268                           ;stkvar	_k @ sp[(-5)+0]
  4269  012CA2  0EFB               	movlw	-5
  4270  012CA4  50E3               	movf	plusw1,w,c
  4271  012CA6  2647               	addwf	btemp+10,f,c
  4272  012CA8  0EFC               	movlw	-4
  4273  012CAA  50E3               	movf	plusw1,w,c
  4274  012CAC  2248               	addwfc	btemp+11,f,c
  4275  012CAE  0EFF               	movlw	255
  4276  012CB0  2447               	addwf	btemp+10,w,c
  4277  012CB2  6ED9               	movwf	fsr2l,c
  4278  012CB4  0EFF               	movlw	255
  4279  012CB6  2048               	addwfc	btemp+11,w,c
  4280  012CB8  6EDA               	movwf	fsr2h,c
  4281  012CBA  50DF               	movf	indf2,w,c
  4282  012CBC  6EE6               	movwf	postinc1,c
  4283  012CBE  EC31  F0A3         	call	_UART2_Write	;wreg free
  4284  012CC2                     l8845:
  4285                           
  4286                           ; BSR set to: 57
  4287                           ;gemsecs.c: 521:   }
  4288                           ;stkvar	_i @ sp[(-5)+4]
  4289  012CC2  0EFF               	movlw	-1
  4290  012CC4  06E3               	decf	plusw1,f,c
  4291  012CC6  D7CC               	goto	l8835
  4292  012CC8                     l8849:
  4293  012CC8  EC5F  F0A7         	call	_UART1_is_tx_ready	;wreg free
  4294  012CCC  0E3F               	movlw	63
  4295  012CCE  643D               	cpfsgt	btemp,c
  4296  012CD0  D7FB               	goto	l8849
  4297                           
  4298                           ;gemsecs.c: 526:   for (i = length; i > 0; i--) {
  4299                           ;stkvar	_length @ sp[(-5)+-3]
  4300                           ;stkvar	_i @ sp[(-5)+4]
  4301  012CD2  0EF8               	movlw	-8
  4302  012CD4  006F FF8C  F03D    	movff	plusw1,btemp
  4303  012CDA  0EFF               	movlw	-1
  4304  012CDC  0060  F0F7  FFE3   	movff	btemp,plusw1
  4305  012CE2                     l8853:
  4306                           
  4307                           ;stkvar	_i @ sp[(-5)+4]
  4308  012CE2  0EFF               	movlw	-1
  4309  012CE4  50E3               	movf	plusw1,w,c
  4310  012CE6  B4D8               	btfsc	status,2,c
  4311  012CE8  D040               	goto	l1748
  4312                           
  4313                           ;gemsecs.c: 527:    if (fake) {
  4314                           ;stkvar	_fake @ sp[(-5)+-4]
  4315  012CEA  0EF7               	movlw	-9
  4316  012CEC  50E3               	movf	plusw1,w,c
  4317  012CEE  B4D8               	btfsc	status,2,c
  4318  012CF0  D015               	goto	l8861
  4319                           
  4320                           ;gemsecs.c: 528:     UART1_put_buffer(k[i - 1]);
  4321                           ;stkvar	_i @ sp[(-5)+4]
  4322  012CF2  0EFF               	movlw	-1
  4323  012CF4  50E3               	movf	plusw1,w,c
  4324  012CF6  6E47               	movwf	btemp+10,c
  4325  012CF8  6A48               	clrf	btemp+11,c
  4326                           
  4327                           ;stkvar	_k @ sp[(-5)+0]
  4328  012CFA  0EFB               	movlw	-5
  4329  012CFC  50E3               	movf	plusw1,w,c
  4330  012CFE  2647               	addwf	btemp+10,f,c
  4331  012D00  0EFC               	movlw	-4
  4332  012D02  50E3               	movf	plusw1,w,c
  4333  012D04  2248               	addwfc	btemp+11,f,c
  4334  012D06  0EFF               	movlw	255
  4335  012D08  2447               	addwf	btemp+10,w,c
  4336  012D0A  6ED9               	movwf	fsr2l,c
  4337  012D0C  0EFF               	movlw	255
  4338  012D0E  2048               	addwfc	btemp+11,w,c
  4339  012D10  6EDA               	movwf	fsr2h,c
  4340  012D12  50DF               	movf	indf2,w,c
  4341  012D14  6EE6               	movwf	postinc1,c
  4342  012D16  EC73  F0A4         	call	_UART1_put_buffer	;wreg free
  4343                           
  4344                           ;gemsecs.c: 529:    } else {
  4345  012D1A  D014               	goto	l8863
  4346  012D1C                     l8861:
  4347                           
  4348                           ;gemsecs.c: 531:     UART1_Write(k[i - 1]);
  4349                           ;stkvar	_i @ sp[(-5)+4]
  4350  012D1C  0EFF               	movlw	-1
  4351  012D1E  50E3               	movf	plusw1,w,c
  4352  012D20  6E47               	movwf	btemp+10,c
  4353  012D22  6A48               	clrf	btemp+11,c
  4354                           
  4355                           ;stkvar	_k @ sp[(-5)+0]
  4356  012D24  0EFB               	movlw	-5
  4357  012D26  50E3               	movf	plusw1,w,c
  4358  012D28  2647               	addwf	btemp+10,f,c
  4359  012D2A  0EFC               	movlw	-4
  4360  012D2C  50E3               	movf	plusw1,w,c
  4361  012D2E  2248               	addwfc	btemp+11,f,c
  4362  012D30  0EFF               	movlw	255
  4363  012D32  2447               	addwf	btemp+10,w,c
  4364  012D34  6ED9               	movwf	fsr2l,c
  4365  012D36  0EFF               	movlw	255
  4366  012D38  2048               	addwfc	btemp+11,w,c
  4367  012D3A  6EDA               	movwf	fsr2h,c
  4368  012D3C  50DF               	movf	indf2,w,c
  4369  012D3E  6EE6               	movwf	postinc1,c
  4370  012D40  EC50  F0A3         	call	_UART1_Write	;wreg free
  4371  012D44                     l8863:
  4372                           
  4373                           ; BSR set to: 57
  4374                           ;gemsecs.c: 533:   }
  4375                           ;stkvar	_i @ sp[(-5)+4]
  4376  012D44  0EFF               	movlw	-1
  4377  012D46  06E3               	decf	plusw1,f,c
  4378  012D48  D7CC               	goto	l8853
  4379  012D4A                     l8869:
  4380                           
  4381                           ;stkvar	_s_uart @ sp[(-5)+-5]
  4382  012D4A  0EF6               	movlw	-10
  4383  012D4C  50E3               	movf	plusw1,w,c
  4384  012D4E  6E47               	movwf	btemp+10,c
  4385  012D50  6A48               	clrf	btemp+11,c
  4386                           
  4387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4388                           ; Switch size 1, requested type "simple"
  4389                           ; Number of cases is 1, Range of values is 0 to 0
  4390                           ; switch strategies available:
  4391                           ; Name         Instructions Cycles
  4392                           ; simple_byte            4     3 (average)
  4393                           ;	Chosen strategy is simple_byte
  4394  012D52  5048               	movf	btemp+11,w,c
  4395  012D54  0A00               	xorlw	0	; case 0
  4396  012D56  A4D8               	btfss	status,2,c
  4397  012D58  D7B7               	goto	l8849
  4398                           
  4399                           ; Switch size 1, requested type "simple"
  4400                           ; Number of cases is 2, Range of values is 1 to 2
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte            7     4 (average)
  4404                           ;	Chosen strategy is simple_byte
  4405  012D5A  5047               	movf	btemp+10,w,c
  4406  012D5C  0A01               	xorlw	1	; case 1
  4407  012D5E  B4D8               	btfsc	status,2,c
  4408  012D60  D7B3               	goto	l8849
  4409  012D62  0A03               	xorlw	3	; case 2
  4410  012D64  B4D8               	btfsc	status,2,c
  4411  012D66  D76F               	goto	l8831
  4412  012D68  D7AF               	goto	l8849
  4413  012D6A                     l1748:
  4414                           
  4415                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  4416  012D6A  0EF6               	movlw	246
  4417  012D6C  26E1               	addwf	fsr1l,f,c
  4418  012D6E  0EFF               	movlw	255
  4419  012D70  22E2               	addwfc	fsr1h,f,c
  4420  012D72  0012               	return		;funcret
  4421  012D74                     __end_of_secs_send:
  4422                           	opt callstack 0
  4423                           
  4424 ;; *************** function _block_checksum *****************
  4425 ;; Defined at:
  4426 ;;		line 19 in file "gemsecs.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  byte_block      2  [STACK] PTR unsigned char 
  4429 ;;		 -> H53(112), H24(27), H17(20), H14(17), 
  4430 ;;		 -> H13(48), H12(30), H10(91), 
  4431 ;;  byte_count      2  [STACK] unsigned short 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  i               2  [STACK] unsigned short 
  4434 ;;  sum             2  [STACK] unsigned short 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2  [STACK] unsigned short 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4448 ;;Total ram usage:        0 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    3
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_secs_send
  4455 ;; This function uses a reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text3
  4459  013902                     __ptext3:
  4460                           	opt callstack 0
  4461  013902                     _block_checksum:
  4462                           	opt callstack 0
  4463                           
  4464                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4465  013902  52E6               	movf	postinc1,f,c
  4466  013904  52E6               	movf	postinc1,f,c
  4467  013906  52E6               	movf	postinc1,f,c
  4468  013908  52E6               	movf	postinc1,f,c
  4469                           
  4470                           ;gemsecs.c: 19: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 20: {;gemsecs.c: 21:  uint16_t sum = 0, i;
  4471                           ;stkvar	_sum @ sp[(-4)+2]
  4472                           
  4473                           ;incstack = 0
  4474  01390A  0EFE               	movlw	-2
  4475  01390C  6AE3               	clrf	plusw1,c
  4476  01390E  0EFF               	movlw	-1
  4477  013910  6AE3               	clrf	plusw1,c
  4478                           
  4479                           ;gemsecs.c: 23:  for (i = 0; i < byte_count; i++) {
  4480                           ;stkvar	_i @ sp[(-4)+0]
  4481  013912  0EFC               	movlw	-4
  4482  013914  6AE3               	clrf	plusw1,c
  4483  013916  0EFD               	movlw	-3
  4484  013918  6AE3               	clrf	plusw1,c
  4485  01391A  D039               	goto	l8767
  4486  01391C                     l8763:
  4487                           
  4488                           ;gemsecs.c: 24:   sum += byte_block[i];
  4489                           ;stkvar	_i @ sp[(-4)+0]
  4490  01391C  0EFC               	movlw	-4
  4491  01391E  006F FF8C  F047    	movff	plusw1,btemp+10
  4492  013924  0EFD               	movlw	-3
  4493  013926  006F FF8C  F048    	movff	plusw1,btemp+11
  4494                           
  4495                           ;stkvar	_byte_block @ sp[(-4)+-2]
  4496  01392C  0EFA               	movlw	-6
  4497  01392E  006F FF8C  F045    	movff	plusw1,btemp+8
  4498  013934  0EFB               	movlw	-5
  4499  013936  006F FF8C  F046    	movff	plusw1,btemp+9
  4500  01393C  5047               	movf	btemp+10,w,c
  4501  01393E  2445               	addwf	btemp+8,w,c
  4502  013940  6ED9               	movwf	fsr2l,c
  4503  013942  5048               	movf	btemp+11,w,c
  4504  013944  2046               	addwfc	btemp+9,w,c
  4505  013946  6EDA               	movwf	fsr2h,c
  4506  013948  50DF               	movf	indf2,w,c
  4507  01394A  6E48               	movwf	btemp+11,c
  4508                           
  4509                           ;stkvar	_sum @ sp[(-4)+2]
  4510  01394C  0EFE               	movlw	-2
  4511  01394E  50E3               	movf	plusw1,w,c
  4512  013950  2448               	addwf	btemp+11,w,c
  4513  013952  6E3D               	movwf	btemp,c
  4514  013954  0EFE               	movlw	-2
  4515  013956  0060  F0F7  FFE3   	movff	btemp,plusw1
  4516  01395C  6A3D               	clrf	btemp,c
  4517  01395E  0EFF               	movlw	-1
  4518  013960  50E3               	movf	plusw1,w,c
  4519  013962  223D               	addwfc	btemp,f,c
  4520  013964  0EFF               	movlw	-1
  4521  013966  0060  F0F7  FFE3   	movff	btemp,plusw1
  4522                           
  4523                           ;gemsecs.c: 25:  }
  4524                           ;stkvar	_i @ sp[(-4)+0]
  4525  01396C  0EFC               	movlw	-4
  4526  01396E  50E3               	movf	plusw1,w,c
  4527  013970  0F01               	addlw	1
  4528  013972  6E3D               	movwf	btemp,c
  4529  013974  0EFC               	movlw	-4
  4530  013976  0060  F0F7  FFE3   	movff	btemp,plusw1
  4531  01397C  6A3D               	clrf	btemp,c
  4532  01397E  0EFD               	movlw	-3
  4533  013980  50E3               	movf	plusw1,w,c
  4534  013982  203D               	addwfc	btemp,w,c
  4535  013984  6E3D               	movwf	btemp,c
  4536  013986  0EFD               	movlw	-3
  4537  013988  0060  F0F7  FFE3   	movff	btemp,plusw1
  4538  01398E                     l8767:
  4539                           
  4540                           ;stkvar	_byte_count @ sp[(-4)+-4]
  4541  01398E  0EF8               	movlw	-8
  4542  013990  006F FF8C  F047    	movff	plusw1,btemp+10
  4543  013996  0EF9               	movlw	-7
  4544  013998  006F FF8C  F048    	movff	plusw1,btemp+11
  4545                           
  4546                           ;stkvar	_i @ sp[(-4)+0]
  4547  01399E  0EFC               	movlw	-4
  4548  0139A0  006F FF8C  F045    	movff	plusw1,btemp+8
  4549  0139A6  0EFD               	movlw	-3
  4550  0139A8  006F FF8C  F046    	movff	plusw1,btemp+9
  4551  0139AE  5047               	movf	btemp+10,w,c
  4552  0139B0  5C45               	subwf	btemp+8,w,c
  4553  0139B2  5048               	movf	btemp+11,w,c
  4554  0139B4  5846               	subwfb	btemp+9,w,c
  4555  0139B6  A0D8               	btfss	status,0,c
  4556  0139B8  D7B1               	goto	l8763
  4557                           
  4558                           ;gemsecs.c: 30:  return sum;
  4559                           ;stkvar	_sum @ sp[(-4)+2]
  4560  0139BA  0EFE               	movlw	-2
  4561  0139BC  006F FF8C  F03D    	movff	plusw1,btemp
  4562  0139C2  0EFF               	movlw	-1
  4563  0139C4  006F FF8C  F03E    	movff	plusw1,btemp+1
  4564                           
  4565                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  4566  0139CA  0EF8               	movlw	248
  4567  0139CC  26E1               	addwf	fsr1l,f,c
  4568  0139CE  0EFF               	movlw	255
  4569  0139D0  22E2               	addwfc	fsr1h,f,c
  4570  0139D2  0012               	return		;funcret
  4571  0139D4                     __end_of_block_checksum:
  4572                           	opt callstack 0
  4573                           
  4574 ;; *************** function _UART2_put_buffer *****************
  4575 ;; Defined at:
  4576 ;;		line 257 in file "mcc_generated_files/uart2.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  bufData         1  [STACK] unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1  [STACK] void 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 3F/39
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    3
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_secs_send
  4601 ;; This function uses a reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text4
  4605  0148BC                     __ptext4:
  4606                           	opt callstack 0
  4607  0148BC                     _UART2_put_buffer:
  4608                           	opt callstack 25
  4609                           
  4610                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  4611                           
  4612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4613                           ;incstack = 0
  4614  0148BC  0139               	movlb	57	; () banked
  4615  0148BE  9596               	bcf	150,2,b	;volatile
  4616                           
  4617                           ; BSR set to: 57
  4618                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  4619                           ;stkvar	_bufData @ sp[(0)+-1]
  4620  0148C0  0E00               	movlw	low _uart2RxBuffer
  4621  0148C2  2433               	addwf	_uart2RxHead,w,c	;volatile
  4622  0148C4  6ED9               	movwf	fsr2l,c
  4623  0148C6  6ADA               	clrf	fsr2h,c
  4624  0148C8  0E02               	movlw	high _uart2RxBuffer
  4625  0148CA  22DA               	addwfc	fsr2h,f,c
  4626  0148CC  0EFF               	movlw	-1
  4627  0148CE  006F FF8F FFDF     	movff	plusw1,indf2
  4628                           
  4629                           ; BSR set to: 57
  4630  0148D4  2A33               	incf	_uart2RxHead,f,c	;volatile
  4631                           
  4632                           ; BSR set to: 57
  4633                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  4634  0148D6  0E3F               	movlw	63
  4635  0148D8  6433               	cpfsgt	_uart2RxHead,c
  4636  0148DA  D001               	goto	l6127
  4637                           
  4638                           ; BSR set to: 57
  4639                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  4640  0148DC  6A33               	clrf	_uart2RxHead,c	;volatile
  4641  0148DE                     l6127:
  4642                           
  4643                           ; BSR set to: 57
  4644                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  4645  0148DE  2A31               	incf	_uart2RxCount,f,c	;volatile
  4646                           
  4647                           ; BSR set to: 57
  4648                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  4649  0148E0  8596               	bsf	150,2,b	;volatile
  4650                           
  4651                           ; BSR set to: 57
  4652                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4653  0148E2  52E5               	movf	postdec1,f,c
  4654  0148E4  0012               	return		;funcret
  4655  0148E6                     __end_of_UART2_put_buffer:
  4656                           	opt callstack 0
  4657                           
  4658 ;; *************** function _UART2_is_tx_ready *****************
  4659 ;; Defined at:
  4660 ;;		line 142 in file "mcc_generated_files/uart2.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1  [STACK] unsigned char 
  4667 ;; Registers used:
  4668 ;;		btemp
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    3
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_secs_send
  4685 ;; This function uses a reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text5
  4689  014EB6                     __ptext5:
  4690                           	opt callstack 0
  4691  014EB6                     _UART2_is_tx_ready:
  4692                           	opt callstack 25
  4693                           
  4694                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  4695                           
  4696                           ; BSR set to: 57
  4697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4698                           ;incstack = 0
  4699  014EB6  0060  F0D0  F03D   	movff	_uart2TxBufferRemaining,btemp	;volatile
  4700                           
  4701                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4702  014EBC  0012               	return		;funcret
  4703  014EBE                     __end_of_UART2_is_tx_ready:
  4704                           	opt callstack 0
  4705                           
  4706 ;; *************** function _UART2_Write *****************
  4707 ;; Defined at:
  4708 ;;		line 172 in file "mcc_generated_files/uart2.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  txData          1  [STACK] unsigned char 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1  [STACK] void 
  4715 ;; Registers used:
  4716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 3F/39
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4726 ;;Total ram usage:        0 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    3
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_secs_send
  4733 ;; This function uses a reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text6
  4737  014662                     __ptext6:
  4738                           	opt callstack 0
  4739  014662                     _UART2_Write:
  4740                           	opt callstack 25
  4741                           
  4742                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  4743                           
  4744                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  4745                           
  4746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4747                           ;incstack = 0
  4748  014662  5034               	movf	_uart2TxBufferRemaining,w,c	;volatile
  4749  014664  B4D8               	btfsc	status,2,c
  4750  014666  D7FD               	goto	_UART2_Write
  4751                           
  4752                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  4753  014668  0139               	movlb	57	; () banked
  4754  01466A  B796               	btfsc	150,3,b	;volatile
  4755  01466C  D005               	goto	l699
  4756                           
  4757                           ; BSR set to: 57
  4758                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  4759                           ;stkvar	_txData @ sp[(0)+-1]
  4760  01466E  0EFF               	movlw	-1
  4761  014670  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  4762                           
  4763                           ;mcc_generated_files/uart2.c: 181:     }
  4764  014676  D011               	goto	l6115
  4765  014678                     l699:
  4766                           
  4767                           ; BSR set to: 57
  4768                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  4769  014678  9796               	bcf	150,3,b	;volatile
  4770                           
  4771                           ; BSR set to: 57
  4772                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  4773                           ;stkvar	_txData @ sp[(0)+-1]
  4774  01467A  0E40               	movlw	low _uart2TxBuffer
  4775  01467C  2436               	addwf	_uart2TxHead,w,c	;volatile
  4776  01467E  6ED9               	movwf	fsr2l,c
  4777  014680  6ADA               	clrf	fsr2h,c
  4778  014682  0E02               	movlw	high _uart2TxBuffer
  4779  014684  22DA               	addwfc	fsr2h,f,c
  4780  014686  0EFF               	movlw	-1
  4781  014688  006F FF8F FFDF     	movff	plusw1,indf2
  4782                           
  4783                           ; BSR set to: 57
  4784  01468E  2A36               	incf	_uart2TxHead,f,c	;volatile
  4785                           
  4786                           ; BSR set to: 57
  4787                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  4788  014690  0E3F               	movlw	63
  4789  014692  6436               	cpfsgt	_uart2TxHead,c
  4790  014694  D001               	goto	l6113
  4791                           
  4792                           ; BSR set to: 57
  4793                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  4794  014696  6A36               	clrf	_uart2TxHead,c	;volatile
  4795  014698                     l6113:
  4796                           
  4797                           ; BSR set to: 57
  4798                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  4799  014698  0634               	decf	_uart2TxBufferRemaining,f,c	;volatile
  4800  01469A                     l6115:
  4801                           
  4802                           ; BSR set to: 57
  4803                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  4804  01469A  8796               	bsf	150,3,b	;volatile
  4805                           
  4806                           ; BSR set to: 57
  4807                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4808  01469C  52E5               	movf	postdec1,f,c
  4809  01469E  0012               	return		;funcret
  4810  0146A0                     __end_of_UART2_Write:
  4811                           	opt callstack 0
  4812                           
  4813 ;; *************** function _UART1_put_buffer *****************
  4814 ;; Defined at:
  4815 ;;		line 250 in file "mcc_generated_files/uart1.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  bufData         1  [STACK] unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1  [STACK] void 
  4822 ;; Registers used:
  4823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/39
  4826 ;;		On exit  : 3F/39
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4833 ;;Total ram usage:        0 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    3
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_t_protocol
  4840 ;;		_secs_send
  4841 ;; This function uses a reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text7
  4845  0148E6                     __ptext7:
  4846                           	opt callstack 0
  4847  0148E6                     _UART1_put_buffer:
  4848                           	opt callstack 25
  4849                           
  4850                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  4851                           
  4852                           ; BSR set to: 57
  4853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4854                           ;incstack = 0
  4855  0148E6  0139               	movlb	57	; () banked
  4856  0148E8  9793               	bcf	147,3,b	;volatile
  4857                           
  4858                           ; BSR set to: 57
  4859                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  4860                           ;stkvar	_bufData @ sp[(0)+-1]
  4861  0148EA  0E80               	movlw	low _uart1RxBuffer
  4862  0148EC  2439               	addwf	_uart1RxHead,w,c	;volatile
  4863  0148EE  6ED9               	movwf	fsr2l,c
  4864  0148F0  6ADA               	clrf	fsr2h,c
  4865  0148F2  0E02               	movlw	high _uart1RxBuffer
  4866  0148F4  22DA               	addwfc	fsr2h,f,c
  4867  0148F6  0EFF               	movlw	-1
  4868  0148F8  006F FF8F FFDF     	movff	plusw1,indf2
  4869                           
  4870                           ; BSR set to: 57
  4871  0148FE  2A39               	incf	_uart1RxHead,f,c	;volatile
  4872                           
  4873                           ; BSR set to: 57
  4874                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  4875  014900  0E3F               	movlw	63
  4876  014902  6439               	cpfsgt	_uart1RxHead,c
  4877  014904  D001               	goto	l6087
  4878                           
  4879                           ; BSR set to: 57
  4880                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  4881  014906  6A39               	clrf	_uart1RxHead,c	;volatile
  4882  014908                     l6087:
  4883                           
  4884                           ; BSR set to: 57
  4885                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  4886  014908  2A37               	incf	_uart1RxCount,f,c	;volatile
  4887                           
  4888                           ; BSR set to: 57
  4889                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  4890  01490A  8793               	bsf	147,3,b	;volatile
  4891                           
  4892                           ; BSR set to: 57
  4893                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4894  01490C  52E5               	movf	postdec1,f,c
  4895  01490E  0012               	return		;funcret
  4896  014910                     __end_of_UART1_put_buffer:
  4897                           	opt callstack 0
  4898                           
  4899 ;; *************** function _UART1_is_tx_ready *****************
  4900 ;; Defined at:
  4901 ;;		line 151 in file "mcc_generated_files/uart1.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1  [STACK] unsigned char 
  4908 ;; Registers used:
  4909 ;;		btemp
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    3
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_secs_send
  4926 ;; This function uses a reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text8
  4930  014EBE                     __ptext8:
  4931                           	opt callstack 0
  4932  014EBE                     _UART1_is_tx_ready:
  4933                           	opt callstack 25
  4934                           
  4935                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4936                           
  4937                           ; BSR set to: 57
  4938                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4939                           ;incstack = 0
  4940  014EBE  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4941                           
  4942                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4943  014EC4  0012               	return		;funcret
  4944  014EC6                     __end_of_UART1_is_tx_ready:
  4945                           	opt callstack 0
  4946                           
  4947 ;; *************** function _secs_II_message *****************
  4948 ;; Defined at:
  4949 ;;		line 606 in file "gemsecs.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  stream          1  [STACK] unsigned char 
  4952 ;;  function        1  [STACK] unsigned char 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  7  [STACK] struct response_type
  4957 ;; Registers used:
  4958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/3C
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    4
  4971 ;; This function calls:
  4972 ;;		_s10f1_opcmd
  4973 ;; This function is called by:
  4974 ;;		_t_protocol
  4975 ;; This function uses a reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text9
  4979  011CB8                     __ptext9:
  4980                           	opt callstack 0
  4981  011CB8                     _secs_II_message:
  4982                           	opt callstack 0
  4983                           
  4984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  4985  011CB8  0E05               	movlw	5
  4986  011CBA  26E1               	addwf	fsr1l,f,c
  4987  011CBC  0E00               	movlw	0
  4988  011CBE  22E2               	addwfc	fsr1h,f,c
  4989                           
  4990                           ;gemsecs.c: 606: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 607: {;gemsecs.c: 608:  static response_type block;;gemsecs.c: 610:  V.abort = LINK_
      +                          ERROR_NONE;
  4991                           
  4992                           ;incstack = 0
  4993  011CC0  0E0A               	movlw	10
  4994  011CC2  006F FFA0  F4EB    	movff	wreg,_V+245	;volatile
  4995                           
  4996                           ;gemsecs.c: 611:  V.queue = 0;
  4997  011CC8  EE21  F0F9         	lfsr	2,_V+259	;volatile
  4998  011CCC  98DF               	bcf	indf2,4,c
  4999                           
  5000                           ;gemsecs.c: 612:  block.respond = 0;
  5001  011CCE  9007               	bcf	secs_II_message@block+6,0,c
  5002                           
  5003                           ;gemsecs.c: 614:  switch (stream) {
  5004  011CD0  D151               	goto	l6905
  5005  011CD2                     l6729:
  5006                           
  5007                           ;gemsecs.c: 618:    block.header = (uint8_t*) & H12[0];
  5008  011CD2  0E67               	movlw	low _H12
  5009  011CD4  6E01               	movwf	secs_II_message@block,c
  5010  011CD6  6A02               	clrf	secs_II_message@block+1,c
  5011                           
  5012                           ;gemsecs.c: 619:    block.length = sizeof(header12);
  5013  011CD8  0E0F               	movlw	15
  5014  011CDA  6E03               	movwf	secs_II_message@block+2,c
  5015                           
  5016                           ;gemsecs.c: 620:    H12[0].block.block.systemb = V.systemb;
  5017  011CDC  C4E0  F06B         	movff	_V+234,_H12+4	;volatile
  5018  011CE0  C4E1  F06C         	movff	_V+235,_H12+5	;volatile
  5019  011CE4  C4E2  F06D         	movff	_V+236,_H12+6	;volatile
  5020  011CE8  C4E3  F06E         	movff	_V+237,_H12+7	;volatile
  5021                           
  5022                           ;gemsecs.c: 621:    H10[0].block.block.systemb = V.systemb;
  5023  011CEC  C4E0  F102         	movff	_V+234,_H10+2	;volatile
  5024  011CF0  C4E1  F103         	movff	_V+235,_H10+3	;volatile
  5025  011CF4  C4E2  F104         	movff	_V+236,_H10+4	;volatile
  5026  011CF8  C4E3  F105         	movff	_V+237,_H10+5	;volatile
  5027                           
  5028                           ;gemsecs.c: 622:    block.respond = 1;
  5029  011CFC  8007               	bsf	secs_II_message@block+6,0,c
  5030                           
  5031                           ;gemsecs.c: 623:    block.reply = (uint8_t*) & H10[0];
  5032  011CFE  0E00               	movlw	low _H10
  5033  011D00  6E04               	movwf	secs_II_message@block+3,c
  5034  011D02  0E01               	movlw	high _H10
  5035  011D04  6E05               	movwf	secs_II_message@block+4,c
  5036                           
  5037                           ;gemsecs.c: 624:    block.reply_length = sizeof(header10);
  5038  011D06  0E0D               	movlw	13
  5039  011D08  6E06               	movwf	secs_II_message@block+5,c
  5040  011D0A                     l6741:
  5041                           
  5042                           ;gemsecs.c: 625:    V.queue = 1;
  5043  011D0A  EE21  F0F9         	lfsr	2,_V+259	;volatile
  5044  011D0E  88DF               	bsf	indf2,4,c
  5045                           
  5046                           ;gemsecs.c: 626:    break;
  5047  011D10  D14D               	goto	l6907
  5048  011D12                     l6743:
  5049                           
  5050                           ;gemsecs.c: 628:    block.header = (uint8_t*) & H10[0];
  5051  011D12  0E00               	movlw	low _H10
  5052  011D14  6E01               	movwf	secs_II_message@block,c
  5053  011D16  0E01               	movlw	high _H10
  5054  011D18  6E02               	movwf	secs_II_message@block+1,c
  5055                           
  5056                           ;gemsecs.c: 629:    block.length = sizeof(header10);
  5057  011D1A  0E0D               	movlw	13
  5058  011D1C  6E03               	movwf	secs_II_message@block+2,c
  5059                           
  5060                           ;gemsecs.c: 630:    H10[0].block.block.systemb = V.systemb;
  5061  011D1E  C4E0  F102         	movff	_V+234,_H10+2	;volatile
  5062  011D22  C4E1  F103         	movff	_V+235,_H10+3	;volatile
  5063  011D26  C4E2  F104         	movff	_V+236,_H10+4	;volatile
  5064  011D2A  C4E3  F105         	movff	_V+237,_H10+5	;volatile
  5065                           
  5066                           ;gemsecs.c: 631:    break;
  5067  011D2E  D13E               	goto	l6907
  5068  011D30                     l6749:
  5069                           
  5070                           ;gemsecs.c: 633:    block.header = (uint8_t*) & H14[0];
  5071  011D30  0E99               	movlw	low _H14
  5072  011D32  6E01               	movwf	secs_II_message@block,c
  5073  011D34  6A02               	clrf	secs_II_message@block+1,c
  5074                           
  5075                           ;gemsecs.c: 634:    block.length = sizeof(header14);
  5076  011D36  0E11               	movlw	17
  5077  011D38  6E03               	movwf	secs_II_message@block+2,c
  5078                           
  5079                           ;gemsecs.c: 635:    H14[0].block.block.systemb = V.systemb;
  5080  011D3A  C4E0  F09F         	movff	_V+234,_H14+6	;volatile
  5081  011D3E  C4E1  F0A0         	movff	_V+235,_H14+7	;volatile
  5082  011D42  C4E2  F0A1         	movff	_V+236,_H14+8	;volatile
  5083  011D46  C4E3  F0A2         	movff	_V+237,_H14+9	;volatile
  5084                           
  5085                           ;gemsecs.c: 636:    break;
  5086  011D4A  D130               	goto	l6907
  5087  011D4C                     l6755:
  5088                           
  5089                           ;gemsecs.c: 638:    block.header = (uint8_t*) & H17[0];
  5090  011D4C  0E85               	movlw	low _H17
  5091  011D4E  6E01               	movwf	secs_II_message@block,c
  5092  011D50  6A02               	clrf	secs_II_message@block+1,c
  5093                           
  5094                           ;gemsecs.c: 639:    block.length = sizeof(header17);
  5095  011D52  0E14               	movlw	20
  5096  011D54  6E03               	movwf	secs_II_message@block+2,c
  5097                           
  5098                           ;gemsecs.c: 640:    H17[0].block.block.systemb = V.systemb;
  5099  011D56  C4E0  F08E         	movff	_V+234,_H17+9	;volatile
  5100  011D5A  C4E1  F08F         	movff	_V+235,_H17+10	;volatile
  5101  011D5E  C4E2  F090         	movff	_V+236,_H17+11	;volatile
  5102  011D62  C4E3  F091         	movff	_V+237,_H17+12	;volatile
  5103                           
  5104                           ;gemsecs.c: 641:    H12[1].block.block.systemb = V.systemb;
  5105  011D66  C4E0  F07A         	movff	_V+234,_H12+19	;volatile
  5106  011D6A  C4E1  F07B         	movff	_V+235,_H12+20	;volatile
  5107  011D6E  C4E2  F07C         	movff	_V+236,_H12+21	;volatile
  5108  011D72  C4E3  F07D         	movff	_V+237,_H12+22	;volatile
  5109                           
  5110                           ;gemsecs.c: 642:    block.respond = 1;
  5111  011D76  8007               	bsf	secs_II_message@block+6,0,c
  5112                           
  5113                           ;gemsecs.c: 643:    block.reply = (uint8_t*) & H12[1];
  5114  011D78  0E76               	movlw	low (_H12+15)
  5115  011D7A  6E04               	movwf	secs_II_message@block+3,c
  5116  011D7C  6A05               	clrf	secs_II_message@block+4,c
  5117                           
  5118                           ;gemsecs.c: 644:    block.reply_length = sizeof(header12);
  5119  011D7E  0E0F               	movlw	15
  5120  011D80  D7C3               	goto	L11
  5121  011D82                     l6769:
  5122                           
  5123                           ;gemsecs.c: 648:    block.header = (uint8_t*) & H12[1];
  5124  011D82  0E76               	movlw	low (_H12+15)
  5125  011D84  6E01               	movwf	secs_II_message@block,c
  5126  011D86  6A02               	clrf	secs_II_message@block+1,c
  5127                           
  5128                           ;gemsecs.c: 649:    block.length = sizeof(header12);
  5129  011D88  0E0F               	movlw	15
  5130  011D8A  6E03               	movwf	secs_II_message@block+2,c
  5131                           
  5132                           ;gemsecs.c: 650:    H12[1].block.block.systemb = V.systemb;
  5133  011D8C  C4E0  F07A         	movff	_V+234,_H12+19	;volatile
  5134  011D90  C4E1  F07B         	movff	_V+235,_H12+20	;volatile
  5135  011D94  C4E2  F07C         	movff	_V+236,_H12+21	;volatile
  5136  011D98  C4E3  F07D         	movff	_V+237,_H12+22	;volatile
  5137                           
  5138                           ;gemsecs.c: 651:    break;
  5139  011D9C  D107               	goto	l6907
  5140  011D9E                     l6775:
  5141                           
  5142                           ;gemsecs.c: 653:    block.header = (uint8_t*) & H10[2];
  5143  011D9E  0E1A               	movlw	low (_H10+26)
  5144  011DA0  6E01               	movwf	secs_II_message@block,c
  5145  011DA2  0E01               	movlw	high (_H10+26)
  5146  011DA4  6E02               	movwf	secs_II_message@block+1,c
  5147                           
  5148                           ;gemsecs.c: 654:    block.length = sizeof(header10);
  5149  011DA6  0E0D               	movlw	13
  5150  011DA8  6E03               	movwf	secs_II_message@block+2,c
  5151                           
  5152                           ;gemsecs.c: 655:    H10[2].block.block.systemb = V.systemb;
  5153  011DAA  C4E0  F11C         	movff	_V+234,_H10+28	;volatile
  5154  011DAE  C4E1  F11D         	movff	_V+235,_H10+29	;volatile
  5155  011DB2  C4E2  F11E         	movff	_V+236,_H10+30	;volatile
  5156  011DB6  C4E3  F11F         	movff	_V+237,_H10+31	;volatile
  5157                           
  5158                           ;gemsecs.c: 656:    V.abort = LINK_ERROR_ABORT;
  5159  011DBA  0E11               	movlw	17
  5160  011DBC  006F FFA0  F4EB    	movff	wreg,_V+245	;volatile
  5161                           
  5162                           ;gemsecs.c: 657:    break;
  5163  011DC2  D0F4               	goto	l6907
  5164  011DC4                     l6785:
  5165                           
  5166                           ;stkvar	_function @ sp[(0)+-7]
  5167  011DC4  0EF9               	movlw	-7
  5168  011DC6  50E3               	movf	plusw1,w,c
  5169  011DC8  6E47               	movwf	btemp+10,c
  5170  011DCA  6A48               	clrf	btemp+11,c
  5171                           
  5172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5173                           ; Switch size 1, requested type "simple"
  5174                           ; Number of cases is 1, Range of values is 0 to 0
  5175                           ; switch strategies available:
  5176                           ; Name         Instructions Cycles
  5177                           ; simple_byte            4     3 (average)
  5178                           ;	Chosen strategy is simple_byte
  5179  011DCC  5048               	movf	btemp+11,w,c
  5180  011DCE  0A00               	xorlw	0	; case 0
  5181  011DD0  A4D8               	btfss	status,2,c
  5182  011DD2  D7E5               	goto	l6775
  5183                           
  5184                           ; Switch size 1, requested type "simple"
  5185                           ; Number of cases is 5, Range of values is 1 to 14
  5186                           ; switch strategies available:
  5187                           ; Name         Instructions Cycles
  5188                           ; simple_byte           16     9 (average)
  5189                           ;	Chosen strategy is simple_byte
  5190  011DD4  5047               	movf	btemp+10,w,c
  5191  011DD6  0A01               	xorlw	1	; case 1
  5192  011DD8  B4D8               	btfsc	status,2,c
  5193  011DDA  D77B               	goto	l6729
  5194  011DDC  0A03               	xorlw	3	; case 2
  5195  011DDE  B4D8               	btfsc	status,2,c
  5196  011DE0  D798               	goto	l6743
  5197  011DE2  0A01               	xorlw	1	; case 3
  5198  011DE4  B4D8               	btfsc	status,2,c
  5199  011DE6  D7A4               	goto	l6749
  5200  011DE8  0A0E               	xorlw	14	; case 13
  5201  011DEA  B4D8               	btfsc	status,2,c
  5202  011DEC  D7AF               	goto	l6755
  5203  011DEE  0A03               	xorlw	3	; case 14
  5204  011DF0  B4D8               	btfsc	status,2,c
  5205  011DF2  D7C7               	goto	l6769
  5206  011DF4  D7D4               	goto	l6775
  5207  011DF6                     l6787:
  5208                           
  5209                           ;gemsecs.c: 663:    block.header = (uint8_t*) & H24[0];
  5210  011DF6  0E8B               	movlw	low _H24
  5211  011DF8  6E01               	movwf	secs_II_message@block,c
  5212  011DFA  0E01               	movlw	high _H24
  5213  011DFC  6E02               	movwf	secs_II_message@block+1,c
  5214                           
  5215                           ;gemsecs.c: 664:    block.length = sizeof(header24);
  5216  011DFE  0E1B               	movlw	27
  5217  011E00  6E03               	movwf	secs_II_message@block+2,c
  5218                           
  5219                           ;gemsecs.c: 665:    H24[0].block.block.systemb = V.systemb;
  5220  011E02  C4E0  F19B         	movff	_V+234,_H24+16	;volatile
  5221  011E06  C4E1  F19C         	movff	_V+235,_H24+17	;volatile
  5222  011E0A  C4E2  F19D         	movff	_V+236,_H24+18	;volatile
  5223  011E0E  C4E3  F19E         	movff	_V+237,_H24+19	;volatile
  5224                           
  5225                           ;gemsecs.c: 666:    H24[0].data[12] = 12;
  5226  011E12  0E0C               	movlw	12
  5227  011E14  0101               	movlb	1	; () banked
  5228  011E16  6F99               	movwf	(_H24+14)& (0+255),b
  5229                           
  5230                           ;gemsecs.c: 667:    break;
  5231  011E18  D0C9               	goto	l6907
  5232  011E1A                     l6805:
  5233                           
  5234                           ;stkvar	_function @ sp[(0)+-7]
  5235  011E1A  0EF9               	movlw	-7
  5236  011E1C  50E3               	movf	plusw1,w,c
  5237  011E1E  6E47               	movwf	btemp+10,c
  5238  011E20  6A48               	clrf	btemp+11,c
  5239                           
  5240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5241                           ; Switch size 1, requested type "simple"
  5242                           ; Number of cases is 1, Range of values is 0 to 0
  5243                           ; switch strategies available:
  5244                           ; Name         Instructions Cycles
  5245                           ; simple_byte            4     3 (average)
  5246                           ;	Chosen strategy is simple_byte
  5247  011E22  5048               	movf	btemp+11,w,c
  5248  011E24  0A00               	xorlw	0	; case 0
  5249  011E26  A4D8               	btfss	status,2,c
  5250  011E28  D7BA               	goto	l6775
  5251                           
  5252                           ; Switch size 1, requested type "simple"
  5253                           ; Number of cases is 1, Range of values is 17 to 17
  5254                           ; switch strategies available:
  5255                           ; Name         Instructions Cycles
  5256                           ; simple_byte            4     3 (average)
  5257                           ;	Chosen strategy is simple_byte
  5258  011E2A  5047               	movf	btemp+10,w,c
  5259  011E2C  0A11               	xorlw	17	; case 17
  5260  011E2E  B4D8               	btfsc	status,2,c
  5261  011E30  D7E2               	goto	l6787
  5262  011E32  D7B5               	goto	l6775
  5263  011E34                     l6807:
  5264                           
  5265                           ;gemsecs.c: 679:    block.header = (uint8_t*) & H13[2];
  5266  011E34  0E7B               	movlw	low (_H13+32)
  5267  011E36  6E01               	movwf	secs_II_message@block,c
  5268  011E38  0E01               	movlw	high (_H13+32)
  5269  011E3A  6E02               	movwf	secs_II_message@block+1,c
  5270                           
  5271                           ;gemsecs.c: 680:    block.length = sizeof(header13);
  5272  011E3C  0E10               	movlw	16
  5273  011E3E  6E03               	movwf	secs_II_message@block+2,c
  5274                           
  5275                           ;gemsecs.c: 681:    H13[2].block.block.systemb = V.systemb;
  5276  011E40  C4E0  F180         	movff	_V+234,_H13+37	;volatile
  5277  011E44  C4E1  F181         	movff	_V+235,_H13+38	;volatile
  5278  011E48  C4E2  F182         	movff	_V+236,_H13+39	;volatile
  5279  011E4C  C4E3  F183         	movff	_V+237,_H13+40	;volatile
  5280                           
  5281                           ;gemsecs.c: 682:    break;
  5282  011E50  D0AD               	goto	l6907
  5283  011E52                     l6823:
  5284                           
  5285                           ;stkvar	_function @ sp[(0)+-7]
  5286  011E52  0EF9               	movlw	-7
  5287  011E54  50E3               	movf	plusw1,w,c
  5288  011E56  6E47               	movwf	btemp+10,c
  5289  011E58  6A48               	clrf	btemp+11,c
  5290                           
  5291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5292                           ; Switch size 1, requested type "simple"
  5293                           ; Number of cases is 1, Range of values is 0 to 0
  5294                           ; switch strategies available:
  5295                           ; Name         Instructions Cycles
  5296                           ; simple_byte            4     3 (average)
  5297                           ;	Chosen strategy is simple_byte
  5298  011E5A  5048               	movf	btemp+11,w,c
  5299  011E5C  0A00               	xorlw	0	; case 0
  5300  011E5E  A4D8               	btfss	status,2,c
  5301  011E60  D79E               	goto	l6775
  5302                           
  5303                           ; Switch size 1, requested type "simple"
  5304                           ; Number of cases is 1, Range of values is 1 to 1
  5305                           ; switch strategies available:
  5306                           ; Name         Instructions Cycles
  5307                           ; simple_byte            4     3 (average)
  5308                           ;	Chosen strategy is simple_byte
  5309  011E62  5047               	movf	btemp+10,w,c
  5310  011E64  0A01               	xorlw	1	; case 1
  5311  011E66  B4D8               	btfsc	status,2,c
  5312  011E68  D7E5               	goto	l6807
  5313  011E6A  D799               	goto	l6775
  5314  011E6C                     l6825:
  5315                           
  5316                           ;gemsecs.c: 694:    block.header = (uint8_t*) & H13[0];
  5317  011E6C  0E5B               	movlw	low _H13
  5318  011E6E  6E01               	movwf	secs_II_message@block,c
  5319  011E70  0E01               	movlw	high _H13
  5320  011E72  6E02               	movwf	secs_II_message@block+1,c
  5321                           
  5322                           ;gemsecs.c: 695:    block.length = sizeof(header13);
  5323  011E74  0E10               	movlw	16
  5324  011E76  6E03               	movwf	secs_II_message@block+2,c
  5325                           
  5326                           ;gemsecs.c: 696:    H13[0].block.block.systemb = V.systemb;
  5327  011E78  C4E0  F160         	movff	_V+234,_H13+5	;volatile
  5328  011E7C  C4E1  F161         	movff	_V+235,_H13+6	;volatile
  5329  011E80  C4E2  F162         	movff	_V+236,_H13+7	;volatile
  5330  011E84  C4E3  F163         	movff	_V+237,_H13+8	;volatile
  5331                           
  5332                           ;gemsecs.c: 697:    break;
  5333  011E88  D091               	goto	l6907
  5334  011E8A                     l6841:
  5335                           
  5336                           ;stkvar	_function @ sp[(0)+-7]
  5337  011E8A  0EF9               	movlw	-7
  5338  011E8C  50E3               	movf	plusw1,w,c
  5339  011E8E  6E47               	movwf	btemp+10,c
  5340  011E90  6A48               	clrf	btemp+11,c
  5341                           
  5342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5343                           ; Switch size 1, requested type "simple"
  5344                           ; Number of cases is 1, Range of values is 0 to 0
  5345                           ; switch strategies available:
  5346                           ; Name         Instructions Cycles
  5347                           ; simple_byte            4     3 (average)
  5348                           ;	Chosen strategy is simple_byte
  5349  011E92  5048               	movf	btemp+11,w,c
  5350  011E94  0A00               	xorlw	0	; case 0
  5351  011E96  A4D8               	btfss	status,2,c
  5352  011E98  D782               	goto	l6775
  5353                           
  5354                           ; Switch size 1, requested type "simple"
  5355                           ; Number of cases is 1, Range of values is 11 to 11
  5356                           ; switch strategies available:
  5357                           ; Name         Instructions Cycles
  5358                           ; simple_byte            4     3 (average)
  5359                           ;	Chosen strategy is simple_byte
  5360  011E9A  5047               	movf	btemp+10,w,c
  5361  011E9C  0A0B               	xorlw	11	; case 11
  5362  011E9E  B4D8               	btfsc	status,2,c
  5363  011EA0  D7E5               	goto	l6825
  5364  011EA2  D77D               	goto	l6775
  5365  011EA4                     l6853:
  5366                           
  5367                           ;stkvar	_function @ sp[(0)+-7]
  5368  011EA4  0EF9               	movlw	-7
  5369  011EA6  50E3               	movf	plusw1,w,c
  5370  011EA8  6E47               	movwf	btemp+10,c
  5371  011EAA  6A48               	clrf	btemp+11,c
  5372                           
  5373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5374                           ; Switch size 1, requested type "simple"
  5375                           ; Number of cases is 1, Range of values is 0 to 0
  5376                           ; switch strategies available:
  5377                           ; Name         Instructions Cycles
  5378                           ; simple_byte            4     3 (average)
  5379                           ;	Chosen strategy is simple_byte
  5380  011EAC  5048               	movf	btemp+11,w,c
  5381  011EAE  0A00               	xorlw	0	; case 0
  5382  011EB0  A4D8               	btfss	status,2,c
  5383  011EB2  D775               	goto	l6775
  5384                           
  5385                           ; Switch size 1, requested type "simple"
  5386                           ; Number of cases is 7, Range of values is 1 to 13
  5387                           ; switch strategies available:
  5388                           ; Name         Instructions Cycles
  5389                           ; simple_byte           22    12 (average)
  5390                           ;	Chosen strategy is simple_byte
  5391  011EB4  5047               	movf	btemp+10,w,c
  5392  011EB6  0A01               	xorlw	1	; case 1
  5393  011EB8  B4D8               	btfsc	status,2,c
  5394  011EBA  D078               	goto	l6907
  5395  011EBC  0A02               	xorlw	2	; case 3
  5396  011EBE  B4D8               	btfsc	status,2,c
  5397  011EC0  D075               	goto	l6907
  5398  011EC2  0A06               	xorlw	6	; case 5
  5399  011EC4  B4D8               	btfsc	status,2,c
  5400  011EC6  D072               	goto	l6907
  5401  011EC8  0A02               	xorlw	2	; case 7
  5402  011ECA  B4D8               	btfsc	status,2,c
  5403  011ECC  D06F               	goto	l6907
  5404  011ECE  0A0E               	xorlw	14	; case 9
  5405  011ED0  B4D8               	btfsc	status,2,c
  5406  011ED2  D06C               	goto	l6907
  5407  011ED4  0A02               	xorlw	2	; case 11
  5408  011ED6  B4D8               	btfsc	status,2,c
  5409  011ED8  D069               	goto	l6907
  5410  011EDA  0A06               	xorlw	6	; case 13
  5411  011EDC  B4D8               	btfsc	status,2,c
  5412  011EDE  D066               	goto	l6907
  5413  011EE0  D75E               	goto	l6775
  5414  011EE2                     l6855:
  5415                           
  5416                           ;gemsecs.c: 733:    block.header = (uint8_t*) & H13[1];
  5417  011EE2  0E6B               	movlw	low (_H13+16)
  5418  011EE4  6E01               	movwf	secs_II_message@block,c
  5419  011EE6  0E01               	movlw	high (_H13+16)
  5420  011EE8  6E02               	movwf	secs_II_message@block+1,c
  5421                           
  5422                           ;gemsecs.c: 734:    block.length = sizeof(header13);
  5423  011EEA  0E10               	movlw	16
  5424  011EEC  6E03               	movwf	secs_II_message@block+2,c
  5425                           
  5426                           ;gemsecs.c: 735:    H13[1].block.block.systemb = V.systemb;
  5427  011EEE  C4E0  F170         	movff	_V+234,_H13+21	;volatile
  5428  011EF2  C4E1  F171         	movff	_V+235,_H13+22	;volatile
  5429  011EF6  C4E2  F172         	movff	_V+236,_H13+23	;volatile
  5430  011EFA  C4E3  F173         	movff	_V+237,_H13+24	;volatile
  5431                           
  5432                           ;gemsecs.c: 736:    H53[0].block.block.systemb = V.systemb;
  5433  011EFE  C4E0  F3B3         	movff	_V+234,_H53+45	;volatile
  5434  011F02  C4E1  F3B4         	movff	_V+235,_H53+46	;volatile
  5435  011F06  C4E2  F3B5         	movff	_V+236,_H53+47	;volatile
  5436  011F0A  C4E3  F3B6         	movff	_V+237,_H53+48	;volatile
  5437                           
  5438                           ;gemsecs.c: 738:    switch (s10f1_opcmd()) {
  5439  011F0E  D014               	goto	l6881
  5440  011F10                     l1833:
  5441                           
  5442                           ;gemsecs.c: 740:     block.respond = 1;
  5443  011F10  8007               	bsf	secs_II_message@block+6,0,c
  5444                           
  5445                           ;gemsecs.c: 741:     block.reply = (uint8_t*) & H53[1];
  5446  011F12  0EBE               	movlw	low (_H53+56)
  5447  011F14  6E04               	movwf	secs_II_message@block+3,c
  5448  011F16  0E03               	movlw	high (_H53+56)
  5449  011F18  6E05               	movwf	secs_II_message@block+4,c
  5450                           
  5451                           ;gemsecs.c: 742:     block.reply_length = sizeof(header53);
  5452  011F1A  0E38               	movlw	56
  5453  011F1C  6E06               	movwf	secs_II_message@block+5,c
  5454                           
  5455                           ;gemsecs.c: 743:     H53[1].data[38] = V.response.TID;
  5456  011F1E  C51A  F3E6         	movff	_V+292,_H53+96	;volatile
  5457  011F22  D6F3               	goto	l6741
  5458  011F24                     l1835:
  5459                           
  5460                           ;gemsecs.c: 747:     block.respond = 1;
  5461  011F24  8007               	bsf	secs_II_message@block+6,0,c
  5462                           
  5463                           ;gemsecs.c: 748:     block.reply = (uint8_t*) & H53[0];
  5464  011F26  0E86               	movlw	low _H53
  5465  011F28  6E04               	movwf	secs_II_message@block+3,c
  5466  011F2A  0E03               	movlw	high _H53
  5467  011F2C  6E05               	movwf	secs_II_message@block+4,c
  5468                           
  5469                           ;gemsecs.c: 749:     block.reply_length = sizeof(header53);
  5470  011F2E  0E38               	movlw	56
  5471  011F30  6E06               	movwf	secs_II_message@block+5,c
  5472                           
  5473                           ;gemsecs.c: 750:     H53[0].data[38] = V.response.TID;
  5474  011F32  C51A  F3AE         	movff	_V+292,_H53+40	;volatile
  5475  011F36  D6E9               	goto	l6741
  5476  011F38                     l6881:
  5477  011F38  ECCE  F0A2         	call	_s10f1_opcmd	;wreg free
  5478  011F3C  503D               	movf	btemp,w,c
  5479  011F3E  6E47               	movwf	btemp+10,c
  5480  011F40  6A48               	clrf	btemp+11,c
  5481                           
  5482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5483                           ; Switch size 1, requested type "simple"
  5484                           ; Number of cases is 1, Range of values is 0 to 0
  5485                           ; switch strategies available:
  5486                           ; Name         Instructions Cycles
  5487                           ; simple_byte            4     3 (average)
  5488                           ;	Chosen strategy is simple_byte
  5489  011F42  5048               	movf	btemp+11,w,c
  5490  011F44  0A00               	xorlw	0	; case 0
  5491  011F46  A4D8               	btfss	status,2,c
  5492  011F48  D031               	goto	l6907
  5493                           
  5494                           ; Switch size 1, requested type "simple"
  5495                           ; Number of cases is 2, Range of values is 0 to 1
  5496                           ; switch strategies available:
  5497                           ; Name         Instructions Cycles
  5498                           ; simple_byte            7     4 (average)
  5499                           ;	Chosen strategy is simple_byte
  5500  011F4A  5047               	movf	btemp+10,w,c
  5501  011F4C  0A00               	xorlw	0	; case 0
  5502  011F4E  B4D8               	btfsc	status,2,c
  5503  011F50  D7E9               	goto	l1835
  5504  011F52  0A01               	xorlw	1	; case 1
  5505  011F54  B4D8               	btfsc	status,2,c
  5506  011F56  D7DC               	goto	l1833
  5507  011F58  D029               	goto	l6907
  5508  011F5A                     l6893:
  5509                           
  5510                           ;stkvar	_function @ sp[(0)+-7]
  5511  011F5A  0EF9               	movlw	-7
  5512  011F5C  50E3               	movf	plusw1,w,c
  5513  011F5E  6E47               	movwf	btemp+10,c
  5514  011F60  6A48               	clrf	btemp+11,c
  5515                           
  5516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5517                           ; Switch size 1, requested type "simple"
  5518                           ; Number of cases is 1, Range of values is 0 to 0
  5519                           ; switch strategies available:
  5520                           ; Name         Instructions Cycles
  5521                           ; simple_byte            4     3 (average)
  5522                           ;	Chosen strategy is simple_byte
  5523  011F62  5048               	movf	btemp+11,w,c
  5524  011F64  0A00               	xorlw	0	; case 0
  5525  011F66  A4D8               	btfss	status,2,c
  5526  011F68  D71A               	goto	l6775
  5527                           
  5528                           ; Switch size 1, requested type "simple"
  5529                           ; Number of cases is 1, Range of values is 1 to 1
  5530                           ; switch strategies available:
  5531                           ; Name         Instructions Cycles
  5532                           ; simple_byte            4     3 (average)
  5533                           ;	Chosen strategy is simple_byte
  5534  011F6A  5047               	movf	btemp+10,w,c
  5535  011F6C  0A01               	xorlw	1	; case 1
  5536  011F6E  B4D8               	btfsc	status,2,c
  5537  011F70  D7B8               	goto	l6855
  5538  011F72  D715               	goto	l6775
  5539  011F74                     l6905:
  5540                           
  5541                           ;stkvar	_stream @ sp[(0)+-6]
  5542  011F74  0EFA               	movlw	-6
  5543  011F76  50E3               	movf	plusw1,w,c
  5544  011F78  6E47               	movwf	btemp+10,c
  5545  011F7A  6A48               	clrf	btemp+11,c
  5546                           
  5547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5548                           ; Switch size 1, requested type "simple"
  5549                           ; Number of cases is 1, Range of values is 0 to 0
  5550                           ; switch strategies available:
  5551                           ; Name         Instructions Cycles
  5552                           ; simple_byte            4     3 (average)
  5553                           ;	Chosen strategy is simple_byte
  5554  011F7C  5048               	movf	btemp+11,w,c
  5555  011F7E  0A00               	xorlw	0	; case 0
  5556  011F80  A4D8               	btfss	status,2,c
  5557  011F82  D70D               	goto	l6775
  5558                           
  5559                           ; Switch size 1, requested type "simple"
  5560                           ; Number of cases is 6, Range of values is 1 to 10
  5561                           ; switch strategies available:
  5562                           ; Name         Instructions Cycles
  5563                           ; simple_byte           19    10 (average)
  5564                           ;	Chosen strategy is simple_byte
  5565  011F84  5047               	movf	btemp+10,w,c
  5566  011F86  0A01               	xorlw	1	; case 1
  5567  011F88  B4D8               	btfsc	status,2,c
  5568  011F8A  D71C               	goto	l6785
  5569  011F8C  0A03               	xorlw	3	; case 2
  5570  011F8E  B4D8               	btfsc	status,2,c
  5571  011F90  D744               	goto	l6805
  5572  011F92  0A07               	xorlw	7	; case 5
  5573  011F94  B4D8               	btfsc	status,2,c
  5574  011F96  D75D               	goto	l6823
  5575  011F98  0A03               	xorlw	3	; case 6
  5576  011F9A  B4D8               	btfsc	status,2,c
  5577  011F9C  D776               	goto	l6841
  5578  011F9E  0A0F               	xorlw	15	; case 9
  5579  011FA0  B4D8               	btfsc	status,2,c
  5580  011FA2  D780               	goto	l6853
  5581  011FA4  0A03               	xorlw	3	; case 10
  5582  011FA6  B4D8               	btfsc	status,2,c
  5583  011FA8  D7D8               	goto	l6893
  5584  011FAA  D6F9               	goto	l6775
  5585  011FAC                     l6907:
  5586                           
  5587                           ;gemsecs.c: 774:  return(block);
  5588  011FAC  EE20  F001         	lfsr	2,secs_II_message@block
  5589                           
  5590                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  5591  011FB0  0E07               	movlw	7
  5592  011FB2  6E3D               	movwf	btemp,c
  5593  011FB4  0EF9               	movlw	-7
  5594  011FB6                     us378999:
  5595  011FB6  006F FF7B FFE3     	movff	postinc2,plusw1
  5596  011FBC  28E8               	incf	wreg,w,c
  5597  011FBE  2E3D               	decfsz	btemp,f,c
  5598  011FC0  D7FA               	bra	us378999
  5599                           
  5600                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  5601  011FC2  0012               	return		;funcret
  5602  011FC4                     __end_of_secs_II_message:
  5603                           	opt callstack 0
  5604                           
  5605 ;; *************** function _s10f1_opcmd *****************
  5606 ;; Defined at:
  5607 ;;		line 574 in file "gemsecs.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1  [STACK] enum E16633
  5614 ;; Registers used:
  5615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/3C
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    3
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_secs_II_message
  5632 ;; This function uses a reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text10
  5636  01459C                     __ptext10:
  5637                           	opt callstack 0
  5638  01459C                     _s10f1_opcmd:
  5639                           	opt callstack 25
  5640                           
  5641                           ;gemsecs.c: 576:  V.response.cmdlen = V.response.ack[6];
  5642                           
  5643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5644                           ;incstack = 0
  5645  01459C  C500  F51D         	movff	_V+266,_V+295	;volatile
  5646                           
  5647                           ;gemsecs.c: 577:  V.response.TID = V.response.ack[4];
  5648  0145A0  C4FE  F51A         	movff	_V+264,_V+292	;volatile
  5649                           
  5650                           ;gemsecs.c: 578:  V.response.mcode = V.response.ack[7];
  5651  0145A4  C501  F51B         	movff	_V+267,_V+293	;volatile
  5652                           
  5653                           ;gemsecs.c: 579:  V.response.mparm = V.response.ack[8];
  5654  0145A8  C502  F51C         	movff	_V+268,_V+294	;volatile
  5655                           
  5656                           ;gemsecs.c: 581:  if (V.response.cmdlen == 0)
  5657  0145AC  EE21  F11D         	lfsr	2,_V+295	;volatile
  5658  0145B0  50DF               	movf	indf2,w,c
  5659  0145B2  A4D8               	btfss	status,2,c
  5660  0145B4  D003               	goto	l6197
  5661                           
  5662                           ;gemsecs.c: 582:   return CODE_ERR;
  5663  0145B6  0E05               	movlw	5
  5664  0145B8  6E3D               	movwf	btemp,c
  5665  0145BA  0012               	return	
  5666  0145BC                     l6197:
  5667                           
  5668                           ;gemsecs.c: 584:  if (V.response.mcode == 'M' || V.response.mcode == 'm')
  5669  0145BC  0061  F46F  FFE8   	movff	_V+293,wreg	;volatile
  5670  0145C2  0A4D               	xorlw	77
  5671  0145C4  B4D8               	btfsc	status,2,c
  5672  0145C6  D006               	goto	u3580
  5673  0145C8  0061  F46F  FFE8   	movff	_V+293,wreg	;volatile
  5674  0145CE  0A6D               	xorlw	109
  5675  0145D0  A4D8               	btfss	status,2,c
  5676  0145D2  D003               	goto	l6205
  5677  0145D4                     u3580:
  5678                           
  5679                           ;gemsecs.c: 585:   return CODE_TM;
  5680  0145D4  0E01               	movlw	1
  5681  0145D6  6E3D               	movwf	btemp,c
  5682  0145D8  0012               	return	
  5683  0145DA                     l6205:
  5684                           
  5685                           ;gemsecs.c: 587:  return CODE_TS;
  5686  0145DA  0E00               	movlw	0
  5687  0145DC  6E3D               	movwf	btemp,c
  5688                           
  5689                           ; _s10f1_opcmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  5690  0145DE  0012               	return		;funcret
  5691  0145E0                     __end_of_s10f1_opcmd:
  5692                           	opt callstack 0
  5693                           
  5694 ;; *************** function _srand *****************
  5695 ;; Defined at:
  5696 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  s               2  [STACK] unsigned int 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1  [STACK] void 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5705 ;; Tracked objects:
  5706 ;;		On entry : 3F/0
  5707 ;;		On exit  : 3F/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    3
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_main
  5721 ;; This function uses a reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text11
  5725  014802                     __ptext11:
  5726                           	opt callstack 0
  5727  014802                     _srand:
  5728                           	opt callstack 27
  5729                           
  5730                           ;stkvar	_s @ sp[(0)+-2]
  5731                           
  5732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5733                           ;incstack = 0
  5734  014802  0EFE               	movlw	-2
  5735  014804  50E3               	movf	plusw1,w,c
  5736  014806  0FFF               	addlw	255
  5737  014808  6E47               	movwf	btemp+10,c
  5738  01480A  0EFF               	movlw	-1
  5739  01480C  006F FF8C  F048    	movff	plusw1,btemp+11
  5740  014812  0EFF               	movlw	255
  5741  014814  2248               	addwfc	btemp+11,f,c
  5742  014816  0060  F11C  F0E7   	movff	btemp+10,_seed
  5743  01481C  0060  F120  F0E8   	movff	btemp+11,_seed+1
  5744  014822  0100               	movlb	0	; () banked
  5745  014824  6BE9               	clrf	(_seed+2)& (0+255),b
  5746  014826  6BEA               	clrf	(_seed+3)& (0+255),b
  5747  014828  6BEB               	clrf	(_seed+4)& (0+255),b
  5748  01482A  6BEC               	clrf	(_seed+5)& (0+255),b
  5749  01482C  6BED               	clrf	(_seed+6)& (0+255),b
  5750  01482E  6BEE               	clrf	(_seed+7)& (0+255),b
  5751                           
  5752                           ; BSR set to: 0
  5753                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5754  014830  52E5               	movf	postdec1,f,c
  5755  014832  52E5               	movf	postdec1,f,c
  5756  014834  0012               	return		;funcret
  5757  014836                     __end_of_srand:
  5758                           	opt callstack 0
  5759                           
  5760 ;; *************** function _sprintf *****************
  5761 ;; Defined at:
  5762 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  s               2  [STACK] PTR unsigned char 
  5765 ;;		 -> V(302), 
  5766 ;;  fmt             2  [STACK] PTR const unsigned char 
  5767 ;;		 -> STR_21(91), STR_17(26), STR_16(26), STR_15(4), 
  5768 ;;		 -> STR_14(18), STR_13(26), STR_12(17), STR_11(21), 
  5769 ;;		 -> STR_10(18), STR_9(6), STR_8(6), STR_7(14), 
  5770 ;;		 -> STR_6(15), STR_5(21), STR_4(15), STR_2(12), 
  5771 ;;		 -> STR_1(17), 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  f               6  [STACK] struct _IO_FILE
  5774 ;;  ap              2  [STACK] PTR void [1]
  5775 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5776 ;;  ret             2    0        int 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  2  [STACK] int 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 3F/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5790 ;;Total ram usage:        0 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:   11
  5793 ;; This function calls:
  5794 ;;		_vfprintf
  5795 ;; This function is called by:
  5796 ;;		_main
  5797 ;; This function uses a reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text12
  5801  013618                     __ptext12:
  5802                           	opt callstack 0
  5803  013618                     _sprintf:
  5804                           	opt callstack 0
  5805                           
  5806                           ; BSR set to: 0
  5807                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5808  013618  0E08               	movlw	8
  5809  01361A  26E1               	addwf	fsr1l,f,c
  5810  01361C  0E00               	movlw	0
  5811  01361E  22E2               	addwfc	fsr1h,f,c
  5812                           
  5813                           ;incstack = 0
  5814  013620  0EFE               	movlw	254
  5815  013622  6E47               	movwf	btemp+10,c
  5816  013624  0EFF               	movlw	255
  5817  013626  6E48               	movwf	btemp+11,c
  5818                           
  5819                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5820  013628  0EF5               	movlw	245
  5821  01362A  24E1               	addwf	fsr1l,w,c
  5822  01362C  6E45               	movwf	btemp+8,c
  5823  01362E  0EFF               	movlw	255
  5824  013630  20E2               	addwfc	fsr1h,w,c
  5825  013632  6E46               	movwf	btemp+9,c
  5826  013634  5047               	movf	btemp+10,w,c
  5827  013636  2645               	addwf	btemp+8,f,c
  5828  013638  5048               	movf	btemp+11,w,c
  5829  01363A  2246               	addwfc	btemp+9,f,c
  5830                           
  5831                           ;stkvar	_ap @ sp[(-8)+6]
  5832  01363C  0EFF               	movlw	-1
  5833  01363E  0060  F11B  FFE3   	movff	btemp+9,plusw1
  5834  013644  0EFE               	movlw	-2
  5835  013646  0060  F117  FFE3   	movff	btemp+8,plusw1
  5836                           
  5837                           ;stkvar	_s @ sp[(-8)+-3]
  5838  01364C  0EF5               	movlw	-11
  5839  01364E  006F FF8C  F047    	movff	plusw1,btemp+10
  5840  013654  0EF6               	movlw	-10
  5841  013656  006F FF8C  F048    	movff	plusw1,btemp+11
  5842                           
  5843                           ;stkvar	_f @ sp[(-8)+0]
  5844  01365C  0EF9               	movlw	-7
  5845  01365E  0060  F123  FFE3   	movff	btemp+11,plusw1
  5846  013664  0EF8               	movlw	-8
  5847  013666  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5848                           
  5849                           ;stkvar	_f @ sp[(-8)+0]
  5850  01366C  0EFA               	movlw	250
  5851  01366E  24E1               	addwf	fsr1l,w,c
  5852  013670  6ED9               	movwf	fsr2l,c
  5853  013672  0EFF               	movlw	255
  5854  013674  20E2               	addwfc	fsr1h,w,c
  5855  013676  6EDA               	movwf	fsr2h,c
  5856  013678  0E00               	movlw	0
  5857  01367A  6EDE               	movwf	postinc2,c
  5858  01367C  0E00               	movlw	0
  5859  01367E  6EDD               	movwf	postdec2,c
  5860                           
  5861                           ;stkvar	_f @ sp[(-8)+0]
  5862  013680  0EFC               	movlw	252
  5863  013682  24E1               	addwf	fsr1l,w,c
  5864  013684  6ED9               	movwf	fsr2l,c
  5865  013686  0EFF               	movlw	255
  5866  013688  20E2               	addwfc	fsr1h,w,c
  5867  01368A  6EDA               	movwf	fsr2h,c
  5868  01368C  0E00               	movlw	0
  5869  01368E  6EDE               	movwf	postinc2,c
  5870  013690  0E00               	movlw	0
  5871  013692  6EDD               	movwf	postdec2,c
  5872                           
  5873                           ;stkvar	_ap @ sp[(-8)+6]
  5874  013694  0EFE               	movlw	254
  5875  013696  24E1               	addwf	fsr1l,w,c
  5876  013698  6E3D               	movwf	btemp,c
  5877  01369A  0EFF               	movlw	255
  5878  01369C  20E2               	addwfc	fsr1h,w,c
  5879  01369E  6E3E               	movwf	btemp+1,c
  5880  0136A0  0060  F0F7  FFE6   	movff	btemp,postinc1
  5881  0136A6  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  5882                           
  5883                           ;stkvar	_fmt @ sp[(-10)+-5]
  5884  0136AC  0EF1               	movlw	-15
  5885  0136AE  006F FF8F FFE6     	movff	plusw1,postinc1
  5886  0136B4  006F FF8F FFE6     	movff	plusw1,postinc1
  5887                           
  5888                           ;stkvar	_f @ sp[(-12)+0]
  5889  0136BA  0EF4               	movlw	244
  5890  0136BC  24E1               	addwf	fsr1l,w,c
  5891  0136BE  6E3D               	movwf	btemp,c
  5892  0136C0  0EFF               	movlw	255
  5893  0136C2  20E2               	addwfc	fsr1h,w,c
  5894  0136C4  6E3E               	movwf	btemp+1,c
  5895  0136C6  0060  F0F7  FFE6   	movff	btemp,postinc1
  5896  0136CC  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  5897  0136D2  EC4B  F09D         	call	_vfprintf	;wreg free
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;stkvar	_f @ sp[(-8)+0]
  5901  0136D6  0EFA               	movlw	250
  5902  0136D8  24E1               	addwf	fsr1l,w,c
  5903  0136DA  6ED9               	movwf	fsr2l,c
  5904  0136DC  0EFF               	movlw	255
  5905  0136DE  20E2               	addwfc	fsr1h,w,c
  5906  0136E0  6EDA               	movwf	fsr2h,c
  5907  0136E2  006F FF78  F047    	movff	postinc2,btemp+10
  5908  0136E8  006F FF74  F048    	movff	postdec2,btemp+11
  5909                           
  5910                           ;stkvar	_s @ sp[(-8)+-3]
  5911  0136EE  0EF5               	movlw	-11
  5912  0136F0  006F FF8C  F045    	movff	plusw1,btemp+8
  5913  0136F6  0EF6               	movlw	-10
  5914  0136F8  006F FF8C  F046    	movff	plusw1,btemp+9
  5915  0136FE  5047               	movf	btemp+10,w,c
  5916  013700  2445               	addwf	btemp+8,w,c
  5917  013702  6ED9               	movwf	fsr2l,c
  5918  013704  5048               	movf	btemp+11,w,c
  5919  013706  2046               	addwfc	btemp+9,w,c
  5920  013708  6EDA               	movwf	fsr2h,c
  5921  01370A  0E00               	movlw	0
  5922  01370C  6EDF               	movwf	indf2,c
  5923                           
  5924                           ; BSR set to: 0
  5925                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5926  01370E  0EF8               	movlw	248
  5927  013710  26E1               	addwf	fsr1l,f,c
  5928  013712  0EFF               	movlw	255
  5929  013714  22E2               	addwfc	fsr1h,f,c
  5930  013716  52E5               	movf	postdec1,f,c
  5931  013718  50E7               	movf	indf1,w,c
  5932  01371A  5EE1               	subwf	fsr1l,f,c
  5933  01371C  0E00               	movlw	0
  5934  01371E  5AE2               	subwfb	fsr1h,f,c
  5935  013720  0012               	return		;funcret
  5936  013722                     __end_of_sprintf:
  5937                           	opt callstack 0
  5938                           
  5939 ;; *************** function _r_protocol *****************
  5940 ;; Defined at:
  5941 ;;		line 239 in file "gemsecs.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  r_link          2  [STACK] PTR enum E16674
  5944 ;;		 -> V(302), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  rxData          1  [STACK] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1  [STACK] enum E16929
  5949 ;; Registers used:
  5950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/3C
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5960 ;;Total ram usage:        0 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:    5
  5963 ;; This function calls:
  5964 ;;		_StartTimer
  5965 ;;		_TimerDone
  5966 ;;		_UART1_Read
  5967 ;;		_UART1_Write
  5968 ;;		_UART1_is_rx_ready
  5969 ;;		_WaitMs
  5970 ;;		_run_checksum
  5971 ;;		_secs_gem_state
  5972 ;; This function is called by:
  5973 ;;		_main
  5974 ;; This function uses a reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text13
  5978  0113A4                     __ptext13:
  5979                           	opt callstack 0
  5980  0113A4                     _r_protocol:
  5981                           	opt callstack 0
  5982                           
  5983                           ; BSR set to: 0
  5984                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5985  0113A4  52E6               	movf	postinc1,f,c
  5986                           
  5987                           ;gemsecs.c: 239: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 240: {;gemsecs.
      +                          c: 241:  uint8_t rxData;;gemsecs.c: 242:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck;;gemsecs.c: 244:  switch (*r_link) {
  5988                           
  5989                           ;incstack = 0
  5990  0113A6  D215               	goto	l7349
  5991  0113A8                     l7187:
  5992                           
  5993                           ;gemsecs.c: 246:   if (UART1_is_rx_ready()) {
  5994  0113A8  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  5995  0113AC  503D               	movf	btemp,w,c
  5996  0113AE  B4D8               	btfsc	status,2,c
  5997  0113B0  D235               	goto	l7351
  5998                           
  5999                           ;gemsecs.c: 247:    rxData = UART1_Read();
  6000  0113B2  EC8E  F0A3         	call	_UART1_Read	;wreg free
  6001                           
  6002                           ;stkvar	_rxData @ sp[(-1)+0]
  6003  0113B6  0EFF               	movlw	-1
  6004  0113B8  0060  F0F7  FFE3   	movff	btemp,plusw1
  6005                           
  6006                           ; BSR set to: 57
  6007                           ;gemsecs.c: 248:    if (rxData == 0x05) {
  6008                           ;stkvar	_rxData @ sp[(-1)+0]
  6009  0113BE  0EFF               	movlw	-1
  6010  0113C0  006F FF8C  F03D    	movff	plusw1,btemp
  6011  0113C6  0E05               	movlw	5
  6012  0113C8  183D               	xorwf	btemp,w,c
  6013  0113CA  A4D8               	btfss	status,2,c
  6014  0113CC  D227               	goto	l7351
  6015                           
  6016                           ; BSR set to: 57
  6017                           ;gemsecs.c: 249:     V.error = LINK_ERROR_NONE;
  6018  0113CE  0E0A               	movlw	10
  6019  0113D0  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  6020                           
  6021                           ; BSR set to: 57
  6022                           ;gemsecs.c: 250:     *r_link = LINK_STATE_ENQ;
  6023                           ;stkvar	_r_link @ sp[(-1)+-2]
  6024  0113D6  0EFD               	movlw	-3
  6025  0113D8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6026  0113DE  0EFE               	movlw	-2
  6027  0113E0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6028  0113E6  0E01               	movlw	1
  6029  0113E8  D1D6               	goto	L16
  6030  0113EA                     l1666:
  6031                           
  6032                           ;gemsecs.c: 255:   rxData_l = 0;
  6033  0113EA  6A2E               	clrf	r_protocol@rxData_l,c
  6034                           
  6035                           ;gemsecs.c: 256:   b_block = (uint8_t*) & H254[0];
  6036  0113EC  0E24               	movlw	low _H254
  6037  0113EE  6E23               	movwf	r_protocol@b_block,c
  6038  0113F0  0E05               	movlw	high _H254
  6039  0113F2  6E24               	movwf	r_protocol@b_block+1,c
  6040                           
  6041                           ;gemsecs.c: 257:   UART1_Write(0x04);
  6042  0113F4  0E04               	movlw	4
  6043  0113F6  6EE6               	movwf	postinc1,c
  6044  0113F8  EC50  F0A3         	call	_UART1_Write	;wreg free
  6045                           
  6046                           ; BSR set to: 57
  6047                           ;gemsecs.c: 258:   StartTimer(TMR_T2, 2000);
  6048  0113FC  0ED0               	movlw	208
  6049  0113FE  6EE6               	movwf	postinc1,c
  6050  011400  0E07               	movlw	7
  6051  011402  6EE6               	movwf	postinc1,c
  6052  011404  0E02               	movlw	2
  6053  011406  6EE6               	movwf	postinc1,c
  6054  011408  ECAD  F0A3         	call	_StartTimer	;wreg free
  6055                           
  6056                           ;gemsecs.c: 259:   *r_link = LINK_STATE_EOT;
  6057                           ;stkvar	_r_link @ sp[(-1)+-2]
  6058  01140C  0EFD               	movlw	-3
  6059  01140E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6060  011414  0EFE               	movlw	-2
  6061  011416  006F FF8F FFDA     	movff	plusw1,fsr2h
  6062  01141C  0E02               	movlw	2
  6063  01141E  D1BB               	goto	L16
  6064  011420                     l7205:
  6065                           
  6066                           ;gemsecs.c: 269:   if (TimerDone(TMR_T2)) {
  6067  011420  0E02               	movlw	2
  6068  011422  6EE6               	movwf	postinc1,c
  6069  011424  EC03  F0A6         	call	_TimerDone	;wreg free
  6070  011428  503D               	movf	btemp,w,c
  6071  01142A  B4D8               	btfsc	status,2,c
  6072  01142C  D027               	goto	l7219
  6073                           
  6074                           ;gemsecs.c: 270:    V.timer_error++;
  6075  01142E  EE21  F0F4         	lfsr	2,_V+254	;volatile
  6076  011432  2ADE               	incf	postinc2,f,c
  6077  011434  0E00               	movlw	0
  6078  011436  22DD               	addwfc	postdec2,f,c
  6079                           
  6080                           ;gemsecs.c: 271:    if (!retry--) {
  6081  011438  065D               	decf	r_protocol@retry,f,c
  6082  01143A  285D               	incf	r_protocol@retry,w,c
  6083  01143C  A4D8               	btfss	status,2,c
  6084  01143E  D014               	goto	l7217
  6085                           
  6086                           ;gemsecs.c: 272:     V.error = LINK_ERROR_T2;
  6087  011440  0E0C               	movlw	12
  6088  011442  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  6089                           
  6090                           ;gemsecs.c: 273:     V.failed_receive = 1;
  6091  011448  EE21  F0F9         	lfsr	2,_V+259	;volatile
  6092  01144C  50DF               	movf	223,w,c
  6093  01144E  0BF0               	andlw	-16
  6094  011450  0901               	iorlw	1
  6095  011452  6EDF               	movwf	223,c
  6096                           
  6097                           ;gemsecs.c: 274:     *r_link = LINK_STATE_NAK;
  6098                           ;stkvar	_r_link @ sp[(-1)+-2]
  6099  011454  0EFD               	movlw	-3
  6100  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  6101  01145C  0EFE               	movlw	-2
  6102  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6103  011464  0E05               	movlw	5
  6104  011466  D197               	goto	L16
  6105  011468                     l7217:
  6106                           
  6107                           ;gemsecs.c: 276:     *r_link = LINK_STATE_IDLE;
  6108                           ;stkvar	_r_link @ sp[(-1)+-2]
  6109  011468  0EFD               	movlw	-3
  6110  01146A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6111  011470  0EFE               	movlw	-2
  6112  011472  006F FF8F FFDA     	movff	plusw1,fsr2h
  6113  011478  0E00               	movlw	0
  6114  01147A  D18D               	goto	L16
  6115  01147C                     l7219:
  6116                           
  6117                           ;gemsecs.c: 279:    if (UART1_is_rx_ready()) {
  6118  01147C  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  6119  011480  503D               	movf	btemp,w,c
  6120  011482  B4D8               	btfsc	status,2,c
  6121  011484  D1CB               	goto	l7351
  6122                           
  6123                           ;gemsecs.c: 280:     rxData = UART1_Read();
  6124  011486  EC8E  F0A3         	call	_UART1_Read	;wreg free
  6125                           
  6126                           ;stkvar	_rxData @ sp[(-1)+0]
  6127  01148A  0EFF               	movlw	-1
  6128  01148C  0060  F0F7  FFE3   	movff	btemp,plusw1
  6129                           
  6130                           ; BSR set to: 57
  6131                           ;gemsecs.c: 281:     if (rxData_l == 0) {
  6132  011492  502E               	movf	r_protocol@rxData_l,w,c
  6133  011494  A4D8               	btfss	status,2,c
  6134  011496  D01C               	goto	l7233
  6135                           
  6136                           ; BSR set to: 57
  6137                           ;gemsecs.c: 282:      r_block.length = rxData;
  6138                           ;stkvar	_rxData @ sp[(-1)+0]
  6139  011498  0EFF               	movlw	-1
  6140  01149A  006F FF8C  F0C4    	movff	plusw1,_r_block+12
  6141                           
  6142                           ; BSR set to: 57
  6143                           ;gemsecs.c: 283:      run_checksum(0, 1);
  6144  0114A0  0E01               	movlw	1
  6145  0114A2  6EE6               	movwf	postinc1,c
  6146  0114A4  0E00               	movlw	0
  6147  0114A6  6EE6               	movwf	postinc1,c
  6148  0114A8  EC88  F0A4         	call	_run_checksum	;wreg free
  6149                           
  6150                           ;gemsecs.c: 284:      rxData_l++;
  6151  0114AC  2A2E               	incf	r_protocol@rxData_l,f,c
  6152                           
  6153                           ;gemsecs.c: 285:      b_block[sizeof(header254) - rxData_l] = rxData;
  6154                           ;stkvar	_rxData @ sp[(-1)+0]
  6155  0114AE  502E               	movf	r_protocol@rxData_l,w,c
  6156  0114B0  5C23               	subwf	r_protocol@b_block,w,c
  6157  0114B2  6E47               	movwf	btemp+10,c
  6158  0114B4  0E00               	movlw	0
  6159  0114B6  5824               	subwfb	r_protocol@b_block+1,w,c
  6160  0114B8  6E48               	movwf	btemp+11,c
  6161  0114BA  0E01               	movlw	1
  6162  0114BC  2447               	addwf	btemp+10,w,c
  6163  0114BE  6ED9               	movwf	fsr2l,c
  6164  0114C0  0E01               	movlw	1
  6165  0114C2  2048               	addwfc	btemp+11,w,c
  6166  0114C4  6EDA               	movwf	fsr2h,c
  6167  0114C6  0EFF               	movlw	-1
  6168  0114C8  006F FF8F FFDF     	movff	plusw1,indf2
  6169                           
  6170                           ;gemsecs.c: 286:     } else {
  6171  0114CE  D1A6               	goto	l7351
  6172  0114D0                     l7233:
  6173                           
  6174                           ; BSR set to: 57
  6175                           ;gemsecs.c: 290:      if (rxData_l <= sizeof(block10))
  6176  0114D0  0E0B               	movlw	11
  6177  0114D2  602E               	cpfslt	r_protocol@rxData_l,c
  6178  0114D4  D00C               	goto	l7237
  6179                           
  6180                           ; BSR set to: 57
  6181                           ;gemsecs.c: 291:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  6182                           ;stkvar	_rxData @ sp[(-1)+0]
  6183  0114D6  502E               	movf	r_protocol@rxData_l,w,c
  6184  0114D8  0819               	sublw	low (_H10+25)
  6185  0114DA  6ED9               	movwf	fsr2l,c
  6186  0114DC  0E00               	movlw	0
  6187  0114DE  A0D8               	btfss	status,0,c
  6188  0114E0  2AE8               	incf	wreg,f,c
  6189  0114E2  0801               	sublw	high (_H10+25)
  6190  0114E4  6EDA               	movwf	fsr2h,c
  6191  0114E6  0EFF               	movlw	-1
  6192  0114E8  006F FF8F FFDF     	movff	plusw1,indf2
  6193  0114EE                     l7237:
  6194                           
  6195                           ; BSR set to: 57
  6196                           ;gemsecs.c: 294:      if (rxData_l == sizeof(block10) + 1)
  6197  0114EE  0E0B               	movlw	11
  6198  0114F0  182E               	xorwf	r_protocol@rxData_l,w,c
  6199  0114F2  A4D8               	btfss	status,2,c
  6200  0114F4  D007               	goto	l7241
  6201                           
  6202                           ; BSR set to: 57
  6203                           ;gemsecs.c: 295:       V.response.ack[0] = rxData;
  6204                           ;stkvar	_rxData @ sp[(-1)+0]
  6205  0114F6  0EFF               	movlw	-1
  6206  0114F8  006F FF8C  F048    	movff	plusw1,btemp+11
  6207  0114FE  0060  F120  F4FA   	movff	btemp+11,_V+260	;volatile
  6208  011504                     l7241:
  6209                           
  6210                           ; BSR set to: 57
  6211                           ;gemsecs.c: 296:      if (rxData_l == sizeof(block10) + 2)
  6212  011504  0E0C               	movlw	12
  6213  011506  182E               	xorwf	r_protocol@rxData_l,w,c
  6214  011508  A4D8               	btfss	status,2,c
  6215  01150A  D007               	goto	l7245
  6216                           
  6217                           ; BSR set to: 57
  6218                           ;gemsecs.c: 297:       V.response.ack[1] = rxData;
  6219                           ;stkvar	_rxData @ sp[(-1)+0]
  6220  01150C  0EFF               	movlw	-1
  6221  01150E  006F FF8C  F048    	movff	plusw1,btemp+11
  6222  011514  0060  F120  F4FB   	movff	btemp+11,_V+261	;volatile
  6223  01151A                     l7245:
  6224                           
  6225                           ; BSR set to: 57
  6226                           ;gemsecs.c: 298:      if (rxData_l == sizeof(block10) + 3)
  6227  01151A  0E0D               	movlw	13
  6228  01151C  182E               	xorwf	r_protocol@rxData_l,w,c
  6229  01151E  A4D8               	btfss	status,2,c
  6230  011520  D007               	goto	l7249
  6231                           
  6232                           ; BSR set to: 57
  6233                           ;gemsecs.c: 299:       V.response.ack[2] = rxData;
  6234                           ;stkvar	_rxData @ sp[(-1)+0]
  6235  011522  0EFF               	movlw	-1
  6236  011524  006F FF8C  F048    	movff	plusw1,btemp+11
  6237  01152A  0060  F120  F4FC   	movff	btemp+11,_V+262	;volatile
  6238  011530                     l7249:
  6239                           
  6240                           ; BSR set to: 57
  6241                           ;gemsecs.c: 300:      if (rxData_l == sizeof(block10) + 4)
  6242  011530  0E0E               	movlw	14
  6243  011532  182E               	xorwf	r_protocol@rxData_l,w,c
  6244  011534  A4D8               	btfss	status,2,c
  6245  011536  D007               	goto	l7253
  6246                           
  6247                           ; BSR set to: 57
  6248                           ;gemsecs.c: 301:       V.response.ack[3] = rxData;
  6249                           ;stkvar	_rxData @ sp[(-1)+0]
  6250  011538  0EFF               	movlw	-1
  6251  01153A  006F FF8C  F048    	movff	plusw1,btemp+11
  6252  011540  0060  F120  F4FD   	movff	btemp+11,_V+263	;volatile
  6253  011546                     l7253:
  6254                           
  6255                           ; BSR set to: 57
  6256                           ;gemsecs.c: 302:      if (rxData_l == sizeof(block10) + 5)
  6257  011546  0E0F               	movlw	15
  6258  011548  182E               	xorwf	r_protocol@rxData_l,w,c
  6259  01154A  A4D8               	btfss	status,2,c
  6260  01154C  D007               	goto	l7257
  6261                           
  6262                           ; BSR set to: 57
  6263                           ;gemsecs.c: 303:       V.response.ack[4] = rxData;
  6264                           ;stkvar	_rxData @ sp[(-1)+0]
  6265  01154E  0EFF               	movlw	-1
  6266  011550  006F FF8C  F048    	movff	plusw1,btemp+11
  6267  011556  0060  F120  F4FE   	movff	btemp+11,_V+264	;volatile
  6268  01155C                     l7257:
  6269                           
  6270                           ; BSR set to: 57
  6271                           ;gemsecs.c: 304:      if (rxData_l == sizeof(block10) + 6)
  6272  01155C  0E10               	movlw	16
  6273  01155E  182E               	xorwf	r_protocol@rxData_l,w,c
  6274  011560  A4D8               	btfss	status,2,c
  6275  011562  D007               	goto	l7261
  6276                           
  6277                           ; BSR set to: 57
  6278                           ;gemsecs.c: 305:       V.response.ack[5] = rxData;
  6279                           ;stkvar	_rxData @ sp[(-1)+0]
  6280  011564  0EFF               	movlw	-1
  6281  011566  006F FF8C  F048    	movff	plusw1,btemp+11
  6282  01156C  0060  F120  F4FF   	movff	btemp+11,_V+265	;volatile
  6283  011572                     l7261:
  6284                           
  6285                           ; BSR set to: 57
  6286                           ;gemsecs.c: 306:      if (rxData_l == sizeof(block10) + 7)
  6287  011572  0E11               	movlw	17
  6288  011574  182E               	xorwf	r_protocol@rxData_l,w,c
  6289  011576  A4D8               	btfss	status,2,c
  6290  011578  D007               	goto	l7265
  6291                           
  6292                           ; BSR set to: 57
  6293                           ;gemsecs.c: 307:       V.response.ack[6] = rxData;
  6294                           ;stkvar	_rxData @ sp[(-1)+0]
  6295  01157A  0EFF               	movlw	-1
  6296  01157C  006F FF8C  F048    	movff	plusw1,btemp+11
  6297  011582  0060  F120  F500   	movff	btemp+11,_V+266	;volatile
  6298  011588                     l7265:
  6299                           
  6300                           ; BSR set to: 57
  6301                           ;gemsecs.c: 308:      if (rxData_l == sizeof(block10) + 8)
  6302  011588  0E12               	movlw	18
  6303  01158A  182E               	xorwf	r_protocol@rxData_l,w,c
  6304  01158C  A4D8               	btfss	status,2,c
  6305  01158E  D007               	goto	l7269
  6306                           
  6307                           ; BSR set to: 57
  6308                           ;gemsecs.c: 309:       V.response.ack[7] = rxData;
  6309                           ;stkvar	_rxData @ sp[(-1)+0]
  6310  011590  0EFF               	movlw	-1
  6311  011592  006F FF8C  F048    	movff	plusw1,btemp+11
  6312  011598  0060  F120  F501   	movff	btemp+11,_V+267	;volatile
  6313  01159E                     l7269:
  6314                           
  6315                           ; BSR set to: 57
  6316                           ;gemsecs.c: 310:      if (rxData_l == sizeof(block10) + 9)
  6317  01159E  0E13               	movlw	19
  6318  0115A0  182E               	xorwf	r_protocol@rxData_l,w,c
  6319  0115A2  A4D8               	btfss	status,2,c
  6320  0115A4  D007               	goto	l7273
  6321                           
  6322                           ; BSR set to: 57
  6323                           ;gemsecs.c: 311:       V.response.ack[8] = rxData;
  6324                           ;stkvar	_rxData @ sp[(-1)+0]
  6325  0115A6  0EFF               	movlw	-1
  6326  0115A8  006F FF8C  F048    	movff	plusw1,btemp+11
  6327  0115AE  0060  F120  F502   	movff	btemp+11,_V+268	;volatile
  6328  0115B4                     l7273:
  6329                           
  6330                           ; BSR set to: 57
  6331                           ;gemsecs.c: 312:      if (rxData_l == sizeof(block10) + 10)
  6332  0115B4  0E14               	movlw	20
  6333  0115B6  182E               	xorwf	r_protocol@rxData_l,w,c
  6334  0115B8  A4D8               	btfss	status,2,c
  6335  0115BA  D007               	goto	l7277
  6336                           
  6337                           ; BSR set to: 57
  6338                           ;gemsecs.c: 313:       V.response.ack[9] = rxData;
  6339                           ;stkvar	_rxData @ sp[(-1)+0]
  6340  0115BC  0EFF               	movlw	-1
  6341  0115BE  006F FF8C  F048    	movff	plusw1,btemp+11
  6342  0115C4  0060  F120  F503   	movff	btemp+11,_V+269	;volatile
  6343  0115CA                     l7277:
  6344                           
  6345                           ; BSR set to: 57
  6346                           ;gemsecs.c: 315:      if (rxData_l <= r_block.length)
  6347  0115CA  502E               	movf	r_protocol@rxData_l,w,c
  6348  0115CC  0100               	movlb	0	; () banked
  6349  0115CE  5DC4               	subwf	(_r_block+12)& (0+255),w,b
  6350  0115D0  A0D8               	btfss	status,0,c
  6351  0115D2  D00D               	goto	l7281
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;gemsecs.c: 316:       V.r_checksum = run_checksum(rxData, 0);
  6355  0115D4  0E00               	movlw	0
  6356  0115D6  6EE6               	movwf	postinc1,c
  6357                           
  6358                           ;stkvar	_rxData @ sp[(-2)+0]
  6359  0115D8  0EFE               	movlw	-2
  6360  0115DA  50E3               	movf	plusw1,w,c
  6361  0115DC  6EE6               	movwf	postinc1,c
  6362  0115DE  EC88  F0A4         	call	_run_checksum	;wreg free
  6363  0115E2  0060  F0F4  F4EE   	movff	btemp,_V+248	;volatile
  6364  0115E8  0060  F0F8  F4EF   	movff	btemp+1,_V+249	;volatile
  6365  0115EE                     l7281:
  6366                           
  6367                           ;gemsecs.c: 318:      if (rxData_l == r_block.length + 1)
  6368  0115EE  502E               	movf	r_protocol@rxData_l,w,c
  6369  0115F0  6E47               	movwf	btemp+10,c
  6370  0115F2  6A48               	clrf	btemp+11,c
  6371  0115F4  0100               	movlb	0	; () banked
  6372  0115F6  51C4               	movf	(_r_block+12)& (0+255),w,b
  6373  0115F8  6E45               	movwf	btemp+8,c
  6374  0115FA  6A46               	clrf	btemp+9,c
  6375  0115FC  0E01               	movlw	1
  6376  0115FE  2645               	addwf	btemp+8,f,c
  6377  011600  0E00               	movlw	0
  6378  011602  2246               	addwfc	btemp+9,f,c
  6379  011604  5047               	movf	btemp+10,w,c
  6380  011606  1845               	xorwf	btemp+8,w,c
  6381  011608  E109               	bnz	l7285
  6382  01160A  5048               	movf	btemp+11,w,c
  6383  01160C  1846               	xorwf	btemp+9,w,c
  6384  01160E  A4D8               	btfss	status,2,c
  6385  011610  D005               	goto	l7285
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;gemsecs.c: 319:       H10[1].checksum = (uint16_t) rxData << 8;
  6389                           ;stkvar	_rxData @ sp[(-1)+0]
  6390  011612  0EFF               	movlw	-1
  6391  011614  50E3               	movf	plusw1,w,c
  6392  011616  0101               	movlb	1	; () banked
  6393  011618  6F0E               	movwf	(_H10+14)& (0+255),b
  6394  01161A  6B0D               	clrf	(_H10+13)& (0+255),b
  6395  01161C                     l7285:
  6396                           
  6397                           ;gemsecs.c: 320:      if (rxData_l == r_block.length + 2)
  6398  01161C  502E               	movf	r_protocol@rxData_l,w,c
  6399  01161E  6E47               	movwf	btemp+10,c
  6400  011620  6A48               	clrf	btemp+11,c
  6401  011622  0100               	movlb	0	; () banked
  6402  011624  51C4               	movf	(_r_block+12)& (0+255),w,b
  6403  011626  6E45               	movwf	btemp+8,c
  6404  011628  6A46               	clrf	btemp+9,c
  6405  01162A  0E02               	movlw	2
  6406  01162C  2645               	addwf	btemp+8,f,c
  6407  01162E  0E00               	movlw	0
  6408  011630  2246               	addwfc	btemp+9,f,c
  6409  011632  5047               	movf	btemp+10,w,c
  6410  011634  1845               	xorwf	btemp+8,w,c
  6411  011636  E10A               	bnz	l7289
  6412  011638  5048               	movf	btemp+11,w,c
  6413  01163A  1846               	xorwf	btemp+9,w,c
  6414  01163C  A4D8               	btfss	status,2,c
  6415  01163E  D006               	goto	l7289
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;gemsecs.c: 321:       H10[1].checksum += rxData;
  6419                           ;stkvar	_rxData @ sp[(-1)+0]
  6420  011640  0EFF               	movlw	-1
  6421  011642  50E3               	movf	plusw1,w,c
  6422  011644  0101               	movlb	1	; () banked
  6423  011646  270D               	addwf	(_H10+13)& (0+255),f,b
  6424  011648  0E00               	movlw	0
  6425  01164A  230E               	addwfc	(_H10+14)& (0+255),f,b
  6426  01164C                     l7289:
  6427                           
  6428                           ;gemsecs.c: 323:      rxData_l++;
  6429  01164C  2A2E               	incf	r_protocol@rxData_l,f,c
  6430                           
  6431                           ;gemsecs.c: 324:      b_block[sizeof(header254) - rxData_l] = rxData;
  6432                           ;stkvar	_rxData @ sp[(-1)+0]
  6433  01164E  502E               	movf	r_protocol@rxData_l,w,c
  6434  011650  5C23               	subwf	r_protocol@b_block,w,c
  6435  011652  6E47               	movwf	btemp+10,c
  6436  011654  0E00               	movlw	0
  6437  011656  5824               	subwfb	r_protocol@b_block+1,w,c
  6438  011658  6E48               	movwf	btemp+11,c
  6439  01165A  0E01               	movlw	1
  6440  01165C  2447               	addwf	btemp+10,w,c
  6441  01165E  6ED9               	movwf	fsr2l,c
  6442  011660  0E01               	movlw	1
  6443  011662  2048               	addwfc	btemp+11,w,c
  6444  011664  6EDA               	movwf	fsr2h,c
  6445  011666  0EFF               	movlw	-1
  6446  011668  006F FF8F FFDF     	movff	plusw1,indf2
  6447                           
  6448                           ;gemsecs.c: 325:      if (rxData_l > (r_block.length + 2)) {
  6449  01166E  502E               	movf	r_protocol@rxData_l,w,c
  6450  011670  6E47               	movwf	btemp+10,c
  6451  011672  6A48               	clrf	btemp+11,c
  6452  011674  0100               	movlb	0	; () banked
  6453  011676  51C4               	movf	(_r_block+12)& (0+255),w,b
  6454  011678  6E45               	movwf	btemp+8,c
  6455  01167A  6A46               	clrf	btemp+9,c
  6456  01167C  0E02               	movlw	2
  6457  01167E  2645               	addwf	btemp+8,f,c
  6458  011680  0E00               	movlw	0
  6459  011682  2246               	addwfc	btemp+9,f,c
  6460  011684  5047               	movf	btemp+10,w,c
  6461  011686  5C45               	subwf	btemp+8,w,c
  6462  011688  5046               	movf	btemp+9,w,c
  6463  01168A  0A80               	xorlw	128
  6464  01168C  6E3D               	movwf	btemp,c
  6465  01168E  5048               	movf	btemp+11,w,c
  6466  011690  0A80               	xorlw	128
  6467  011692  583D               	subwfb	btemp,w,c
  6468  011694  B0D8               	btfsc	status,0,c
  6469  011696  D0C2               	goto	l7351
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;gemsecs.c: 326:       if (V.r_checksum == H10[1].checksum) {
  6473  011698  EE21  F0EE         	lfsr	2,_V+248	;volatile
  6474  01169C  0101               	movlb	1	; () banked
  6475  01169E  510D               	movf	(_H10+13)& (0+255),w,b
  6476  0116A0  18DE               	xorwf	postinc2,w,c
  6477  0116A2  E110               	bnz	l7301
  6478  0116A4  510E               	movf	(_H10+14)& (0+255),w,b
  6479  0116A6  18DE               	xorwf	postinc2,w,c
  6480  0116A8  A4D8               	btfss	status,2,c
  6481  0116AA  D00C               	goto	l7301
  6482                           
  6483                           ; BSR set to: 1
  6484                           ;gemsecs.c: 327:        *r_link = LINK_STATE_ACK;
  6485                           ;stkvar	_r_link @ sp[(-1)+-2]
  6486  0116AC  0EFD               	movlw	-3
  6487  0116AE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6488  0116B4  0EFE               	movlw	-2
  6489  0116B6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6490  0116BC  0E03               	movlw	3
  6491  0116BE  D06B               	goto	L16
  6492  0116C0                     l7299:
  6493  0116C0  EC8E  F0A3         	call	_UART1_Read	;wreg free
  6494  0116C4                     l7301:
  6495                           
  6496                           ;gemsecs.c: 329:        while (UART1_is_rx_ready())
  6497  0116C4  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  6498  0116C8  503D               	movf	btemp,w,c
  6499  0116CA  A4D8               	btfss	status,2,c
  6500  0116CC  D7F9               	goto	l7299
  6501                           
  6502                           ;gemsecs.c: 331:        WaitMs(500);
  6503  0116CE  0EF4               	movlw	244
  6504  0116D0  6EE6               	movwf	postinc1,c
  6505  0116D2  0E01               	movlw	1
  6506  0116D4  6EE6               	movwf	postinc1,c
  6507  0116D6  ECCB  F0A3         	call	_WaitMs	;wreg free
  6508                           
  6509                           ;gemsecs.c: 332:        V.error = LINK_ERROR_CHECKSUM;
  6510  0116DA  0E0F               	movlw	15
  6511  0116DC  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  6512                           
  6513                           ;gemsecs.c: 333:        V.checksum_error++;
  6514  0116E2  EE21  F0F2         	lfsr	2,_V+252	;volatile
  6515  0116E6  2ADE               	incf	postinc2,f,c
  6516  0116E8  0E00               	movlw	0
  6517  0116EA  22DD               	addwfc	postdec2,f,c
  6518                           
  6519                           ;gemsecs.c: 334:        V.failed_receive = 2;
  6520  0116EC  EE21  F0F9         	lfsr	2,_V+259	;volatile
  6521  0116F0  50DF               	movf	223,w,c
  6522  0116F2  0BF0               	andlw	-16
  6523  0116F4  0902               	iorlw	2
  6524  0116F6  D6AD               	goto	L17
  6525  0116F8                     l7313:
  6526                           
  6527                           ;gemsecs.c: 343:   V.stream = H10[1].block.block.stream;
  6528  0116F8  0101               	movlb	1	; () banked
  6529  0116FA  5116               	movf	(_H10+22)& (0+255),w,b
  6530  0116FC  0B7F               	andlw	127
  6531  0116FE  6E48               	movwf	btemp+11,c
  6532  011700  0060  F120  F4E8   	movff	btemp+11,_V+242	;volatile
  6533                           
  6534                           ; BSR set to: 1
  6535                           ;gemsecs.c: 344:   V.function = H10[1].block.block.function;
  6536  011706  EE21  F0E9         	lfsr	2,_V+243	;volatile
  6537  01170A  0060  F457  FFDF   	movff	_H10+21,indf2
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;gemsecs.c: 345:   V.systemb = H10[1].block.block.systemb;
  6541  011710  EE20  F10F         	lfsr	2,_H10+15
  6542  011714  006F FF78  F4E0    	movff	postinc2,_V+234	;volatile
  6543  01171A  006F FF78  F4E1    	movff	postinc2,_V+235	;volatile
  6544  011720  006F FF78  F4E2    	movff	postinc2,_V+236	;volatile
  6545  011726  006F FF74  F4E3    	movff	postdec2,_V+237	;volatile
  6546                           
  6547                           ; BSR set to: 1
  6548                           ;gemsecs.c: 346:   V.rbit = H10[1].block.block.rbit;
  6549  01172C  EE21  F0F8         	lfsr	2,_V+258	;volatile
  6550  011730  BF18               	btfsc	(_H10+24)& (0+255),7,b
  6551  011732  D002               	bra	u4205
  6552  011734  90DF               	bcf	indf2,0,c
  6553  011736  D001               	bra	u4206
  6554  011738                     u4205:
  6555  011738  80DF               	bsf	indf2,0,c
  6556  01173A                     u4206:
  6557                           
  6558                           ;gemsecs.c: 347:   V.wbit = H10[1].block.block.wbit;
  6559  01173A  EE21  F0F8         	lfsr	2,_V+258	;volatile
  6560  01173E  0101               	movlb	1	; () banked
  6561  011740  BF16               	btfsc	(_H10+22)& (0+255),7,b
  6562  011742  D002               	bra	u4215
  6563  011744  92DF               	bcf	indf2,1,c
  6564  011746  D001               	bra	u4216
  6565  011748                     u4215:
  6566  011748  82DF               	bsf	indf2,1,c
  6567  01174A                     u4216:
  6568                           
  6569                           ;gemsecs.c: 348:   V.ebit = H10[1].block.block.ebit;
  6570  01174A  EE21  F0F8         	lfsr	2,_V+258	;volatile
  6571  01174E  0101               	movlb	1	; () banked
  6572  011750  BF14               	btfsc	(_H10+20)& (0+255),7,b
  6573  011752  D002               	bra	u4225
  6574  011754  94DF               	bcf	indf2,2,c
  6575  011756  D001               	bra	u4226
  6576  011758                     u4225:
  6577  011758  84DF               	bsf	indf2,2,c
  6578  01175A                     u4226:
  6579                           
  6580                           ;gemsecs.c: 349:   V.g_state = secs_gem_state(V.stream, V.function);
  6581  01175A  EE21  F0E9         	lfsr	2,_V+243	;volatile
  6582  01175E  50DF               	movf	indf2,w,c
  6583  011760  6EE6               	movwf	postinc1,c
  6584  011762  EE21  F0E8         	lfsr	2,_V+242	;volatile
  6585  011766  50DF               	movf	indf2,w,c
  6586  011768  6EE6               	movwf	postinc1,c
  6587  01176A  ECEA  F09C         	call	_secs_gem_state	;wreg free
  6588  01176E  0060  F0F4  F3F8   	movff	btemp,_V+2	;volatile
  6589                           
  6590                           ;gemsecs.c: 350:   UART1_Write(0x06);
  6591  011774  0E06               	movlw	6
  6592  011776  6EE6               	movwf	postinc1,c
  6593  011778  EC50  F0A3         	call	_UART1_Write	;wreg free
  6594                           
  6595                           ; BSR set to: 57
  6596                           ;gemsecs.c: 351:   V.failed_receive = 0;
  6597  01177C  EE21  F0F9         	lfsr	2,_V+259	;volatile
  6598  011780  0EF0               	movlw	-16
  6599  011782  16DF               	andwf	223,f,c
  6600                           
  6601                           ; BSR set to: 57
  6602                           ;gemsecs.c: 352:   *r_link = LINK_STATE_DONE;
  6603                           ;stkvar	_r_link @ sp[(-1)+-2]
  6604  011784  0EFD               	movlw	-3
  6605  011786  006F FF8F FFD9     	movff	plusw1,fsr2l
  6606  01178C  0EFE               	movlw	-2
  6607  01178E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6608  011794  0E04               	movlw	4
  6609  011796                     L16:
  6610  011796  6EDF               	movwf	indf2,c
  6611                           
  6612                           ;gemsecs.c: 353:   break;
  6613  011798  D041               	goto	l7351
  6614  01179A                     l7333:
  6615                           
  6616                           ;gemsecs.c: 355:   UART1_Write(0x15);
  6617  01179A  0E15               	movlw	21
  6618  01179C  6EE6               	movwf	postinc1,c
  6619  01179E  EC50  F0A3         	call	_UART1_Write	;wreg free
  6620                           
  6621                           ; BSR set to: 57
  6622                           ;gemsecs.c: 356:   *r_link = LINK_STATE_ERROR;
  6623                           ;stkvar	_r_link @ sp[(-1)+-2]
  6624  0117A2  0EFD               	movlw	-3
  6625  0117A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6626  0117AA  0EFE               	movlw	-2
  6627  0117AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6628  0117B2  0E06               	movlw	6
  6629  0117B4  6EDF               	movwf	indf2,c
  6630                           
  6631                           ;gemsecs.c: 357:   while ((uart1RxCount)) {
  6632  0117B6  D002               	goto	l7339
  6633  0117B8                     l7337:
  6634                           
  6635                           ; BSR set to: 57
  6636                           ;gemsecs.c: 358:    UART1_Read();
  6637  0117B8  EC8E  F0A3         	call	_UART1_Read	;wreg free
  6638  0117BC                     l7339:
  6639                           
  6640                           ; BSR set to: 57
  6641                           ;gemsecs.c: 357:   while ((uart1RxCount)) {
  6642  0117BC  5037               	movf	_uart1RxCount,w,c	;volatile
  6643  0117BE  A4D8               	btfss	status,2,c
  6644  0117C0  D7FB               	goto	l7337
  6645                           
  6646                           ; BSR set to: 57
  6647                           ;gemsecs.c: 360:   retry = 3;
  6648  0117C2  0E03               	movlw	3
  6649  0117C4  6E5D               	movwf	r_protocol@retry,c
  6650                           
  6651                           ;gemsecs.c: 361:   break;
  6652  0117C6  D02A               	goto	l7351
  6653  0117C8                     l7343:
  6654                           
  6655                           ;gemsecs.c: 365:   V.failed_receive = 0;
  6656  0117C8  EE21  F0F9         	lfsr	2,_V+259	;volatile
  6657  0117CC  0EF0               	movlw	-16
  6658  0117CE  16DF               	andwf	223,f,c
  6659  0117D0  D64B               	goto	l7217
  6660  0117D2                     l7349:
  6661                           
  6662                           ;stkvar	_r_link @ sp[(-1)+-2]
  6663  0117D2  0EFD               	movlw	-3
  6664  0117D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6665  0117DA  0EFE               	movlw	-2
  6666  0117DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6667  0117E2  50DF               	movf	indf2,w,c
  6668  0117E4  6E47               	movwf	btemp+10,c
  6669  0117E6  6A48               	clrf	btemp+11,c
  6670                           
  6671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6672                           ; Switch size 1, requested type "simple"
  6673                           ; Number of cases is 1, Range of values is 0 to 0
  6674                           ; switch strategies available:
  6675                           ; Name         Instructions Cycles
  6676                           ; simple_byte            4     3 (average)
  6677                           ;	Chosen strategy is simple_byte
  6678  0117E8  5048               	movf	btemp+11,w,c
  6679  0117EA  0A00               	xorlw	0	; case 0
  6680  0117EC  A4D8               	btfss	status,2,c
  6681  0117EE  D63C               	goto	l7217
  6682                           
  6683                           ; Switch size 1, requested type "simple"
  6684                           ; Number of cases is 7, Range of values is 0 to 6
  6685                           ; switch strategies available:
  6686                           ; Name         Instructions Cycles
  6687                           ; simple_byte           22    12 (average)
  6688                           ;	Chosen strategy is simple_byte
  6689  0117F0  5047               	movf	btemp+10,w,c
  6690  0117F2  0A00               	xorlw	0	; case 0
  6691  0117F4  B4D8               	btfsc	status,2,c
  6692  0117F6  D5D8               	goto	l7187
  6693  0117F8  0A01               	xorlw	1	; case 1
  6694  0117FA  B4D8               	btfsc	status,2,c
  6695  0117FC  D5F6               	goto	l1666
  6696  0117FE  0A03               	xorlw	3	; case 2
  6697  011800  B4D8               	btfsc	status,2,c
  6698  011802  D60E               	goto	l7205
  6699  011804  0A01               	xorlw	1	; case 3
  6700  011806  B4D8               	btfsc	status,2,c
  6701  011808  D777               	goto	l7313
  6702  01180A  0A07               	xorlw	7	; case 4
  6703  01180C  B4D8               	btfsc	status,2,c
  6704  01180E  D7DC               	goto	l7343
  6705  011810  0A01               	xorlw	1	; case 5
  6706  011812  B4D8               	btfsc	status,2,c
  6707  011814  D7C2               	goto	l7333
  6708  011816  0A03               	xorlw	3	; case 6
  6709  011818  A4D8               	btfss	status,2,c
  6710  01181A  D626               	goto	l7217
  6711  01181C                     l7351:
  6712                           
  6713                           ;gemsecs.c: 372:  return *r_link;
  6714                           ;stkvar	_r_link @ sp[(-1)+-2]
  6715  01181C  0EFD               	movlw	-3
  6716  01181E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6717  011824  0EFE               	movlw	-2
  6718  011826  006F FF8F FFDA     	movff	plusw1,fsr2h
  6719  01182C  50DF               	movf	indf2,w,c
  6720  01182E  6E3D               	movwf	btemp,c
  6721                           
  6722                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  6723  011830  52E5               	movf	postdec1,f,c
  6724  011832  52E5               	movf	postdec1,f,c
  6725  011834  52E5               	movf	postdec1,f,c
  6726  011836  0012               	return		;funcret
  6727  011838                     __end_of_r_protocol:
  6728                           	opt callstack 0
  6729                           
  6730 ;; *************** function _UART1_Write *****************
  6731 ;; Defined at:
  6732 ;;		line 179 in file "mcc_generated_files/uart1.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  txData          1  [STACK] unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1  [STACK] void 
  6739 ;; Registers used:
  6740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/3C
  6743 ;;		On exit  : 3F/39
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6750 ;;Total ram usage:        0 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    3
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_r_protocol
  6757 ;;		_t_protocol
  6758 ;;		_secs_send
  6759 ;; This function uses a reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text14
  6763  0146A0                     __ptext14:
  6764                           	opt callstack 0
  6765  0146A0                     _UART1_Write:
  6766                           	opt callstack 25
  6767                           
  6768                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6769                           
  6770                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6771                           
  6772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6773                           ;incstack = 0
  6774  0146A0  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  6775  0146A2  B4D8               	btfsc	status,2,c
  6776  0146A4  D7FD               	goto	_UART1_Write
  6777                           
  6778                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  6779  0146A6  0139               	movlb	57	; () banked
  6780  0146A8  B993               	btfsc	147,4,b	;volatile
  6781  0146AA  D005               	goto	l579
  6782                           
  6783                           ; BSR set to: 57
  6784                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  6785                           ;stkvar	_txData @ sp[(0)+-1]
  6786  0146AC  0EFF               	movlw	-1
  6787  0146AE  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  6788                           
  6789                           ;mcc_generated_files/uart1.c: 186:  } else {
  6790  0146B4  D011               	goto	l6075
  6791  0146B6                     l579:
  6792                           
  6793                           ; BSR set to: 57
  6794                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  6795  0146B6  9993               	bcf	147,4,b	;volatile
  6796                           
  6797                           ; BSR set to: 57
  6798                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  6799                           ;stkvar	_txData @ sp[(0)+-1]
  6800  0146B8  0EC0               	movlw	low _uart1TxBuffer
  6801  0146BA  243C               	addwf	_uart1TxHead,w,c	;volatile
  6802  0146BC  6ED9               	movwf	fsr2l,c
  6803  0146BE  6ADA               	clrf	fsr2h,c
  6804  0146C0  0E02               	movlw	high _uart1TxBuffer
  6805  0146C2  22DA               	addwfc	fsr2h,f,c
  6806  0146C4  0EFF               	movlw	-1
  6807  0146C6  006F FF8F FFDF     	movff	plusw1,indf2
  6808                           
  6809                           ; BSR set to: 57
  6810  0146CC  2A3C               	incf	_uart1TxHead,f,c	;volatile
  6811                           
  6812                           ; BSR set to: 57
  6813                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  6814  0146CE  0E3F               	movlw	63
  6815  0146D0  643C               	cpfsgt	_uart1TxHead,c
  6816  0146D2  D001               	goto	l6073
  6817                           
  6818                           ; BSR set to: 57
  6819                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  6820  0146D4  6A3C               	clrf	_uart1TxHead,c	;volatile
  6821  0146D6                     l6073:
  6822                           
  6823                           ; BSR set to: 57
  6824                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  6825  0146D6  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  6826  0146D8                     l6075:
  6827                           
  6828                           ; BSR set to: 57
  6829                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  6830  0146D8  8993               	bsf	147,4,b	;volatile
  6831                           
  6832                           ; BSR set to: 57
  6833                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6834  0146DA  52E5               	movf	postdec1,f,c
  6835  0146DC  0012               	return		;funcret
  6836  0146DE                     __end_of_UART1_Write:
  6837                           	opt callstack 0
  6838                           
  6839 ;; *************** function _m_protocol *****************
  6840 ;; Defined at:
  6841 ;;		line 47 in file "gemsecs.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  m_link          2  [STACK] PTR enum E16674
  6844 ;;		 -> V(302), 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  rxData          1  [STACK] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1  [STACK] enum E16929
  6849 ;; Registers used:
  6850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/3C
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6860 ;;Total ram usage:        0 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    5
  6863 ;; This function calls:
  6864 ;;		_StartTimer
  6865 ;;		_TimerDone
  6866 ;;		_UART1_Read
  6867 ;;		_UART1_is_rx_ready
  6868 ;;		_UART2_Read
  6869 ;;		_UART2_is_rx_ready
  6870 ;;		_WaitMs
  6871 ;;		_run_checksum
  6872 ;;		_secs_gem_state
  6873 ;; This function is called by:
  6874 ;;		_main
  6875 ;; This function uses a reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text15
  6879  0108BA                     __ptext15:
  6880                           	opt callstack 0
  6881  0108BA                     _m_protocol:
  6882                           	opt callstack 0
  6883                           
  6884                           ; BSR set to: 57
  6885                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6886  0108BA  52E6               	movf	postinc1,f,c
  6887                           
  6888                           ;gemsecs.c: 47: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 48: {;gemsecs.c: 
      +                          49:  uint8_t rxData;;gemsecs.c: 50:  static uint8_t rxData_l = 0;;gemsecs.c: 52:  switch
      +                           (*m_link) {
  6889                           
  6890                           ;incstack = 0
  6891  0108BC  D2BA               	goto	l7699
  6892  0108BE                     l7489:
  6893                           
  6894                           ;gemsecs.c: 57:   if (UART1_is_rx_ready()) {
  6895  0108BE  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  6896  0108C2  503D               	movf	btemp,w,c
  6897  0108C4  B4D8               	btfsc	status,2,c
  6898  0108C6  D028               	goto	l7503
  6899                           
  6900                           ;gemsecs.c: 58:    rxData = UART1_Read();
  6901  0108C8  EC8E  F0A3         	call	_UART1_Read	;wreg free
  6902                           
  6903                           ;stkvar	_rxData @ sp[(-1)+0]
  6904  0108CC  0EFF               	movlw	-1
  6905  0108CE  0060  F0F7  FFE3   	movff	btemp,plusw1
  6906                           
  6907                           ; BSR set to: 57
  6908                           ;gemsecs.c: 59:    if (rxData == 0x05) {
  6909                           ;stkvar	_rxData @ sp[(-1)+0]
  6910  0108D4  0EFF               	movlw	-1
  6911  0108D6  006F FF8C  F03D    	movff	plusw1,btemp
  6912  0108DC  0E05               	movlw	5
  6913  0108DE  183D               	xorwf	btemp,w,c
  6914  0108E0  A4D8               	btfss	status,2,c
  6915  0108E2  D01A               	goto	l7503
  6916                           
  6917                           ; BSR set to: 57
  6918                           ;gemsecs.c: 60:     V.uart = 1;
  6919  0108E4  0E01               	movlw	1
  6920  0108E6  006F FFA0  F522    	movff	wreg,_V+300	;volatile
  6921                           
  6922                           ; BSR set to: 57
  6923                           ;gemsecs.c: 61:     StartTimer(TMR_T2, 2000);
  6924  0108EC  0ED0               	movlw	208
  6925  0108EE  6EE6               	movwf	postinc1,c
  6926  0108F0  0E07               	movlw	7
  6927  0108F2  6EE6               	movwf	postinc1,c
  6928  0108F4  0E02               	movlw	2
  6929  0108F6  6EE6               	movwf	postinc1,c
  6930  0108F8  ECAD  F0A3         	call	_StartTimer	;wreg free
  6931                           
  6932                           ;gemsecs.c: 62:     V.error = LINK_ERROR_NONE;
  6933  0108FC  0E0A               	movlw	10
  6934  0108FE  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  6935                           
  6936                           ;gemsecs.c: 63:     *m_link = LINK_STATE_ENQ;
  6937                           ;stkvar	_m_link @ sp[(-1)+-2]
  6938  010904  0EFD               	movlw	-3
  6939  010906  006F FF8F FFD9     	movff	plusw1,fsr2l
  6940  01090C  0EFE               	movlw	-2
  6941  01090E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6942  010914  0E01               	movlw	1
  6943  010916  6EDF               	movwf	indf2,c
  6944  010918                     l7503:
  6945                           
  6946                           ;gemsecs.c: 66:   if (UART2_is_rx_ready()) {
  6947  010918  EC63  F0A7         	call	_UART2_is_rx_ready	;wreg free
  6948  01091C  503D               	movf	btemp,w,c
  6949  01091E  B4D8               	btfsc	status,2,c
  6950  010920  D2AD               	goto	l7701
  6951                           
  6952                           ;gemsecs.c: 67:    rxData = UART2_Read();
  6953  010922  EC6F  F0A3         	call	_UART2_Read	;wreg free
  6954                           
  6955                           ;stkvar	_rxData @ sp[(-1)+0]
  6956  010926  0EFF               	movlw	-1
  6957  010928  0060  F0F7  FFE3   	movff	btemp,plusw1
  6958                           
  6959                           ; BSR set to: 57
  6960                           ;gemsecs.c: 68:    if (rxData == 0x05) {
  6961                           ;stkvar	_rxData @ sp[(-1)+0]
  6962  01092E  0EFF               	movlw	-1
  6963  010930  006F FF8C  F03D    	movff	plusw1,btemp
  6964  010936  0E05               	movlw	5
  6965  010938  183D               	xorwf	btemp,w,c
  6966  01093A  A4D8               	btfss	status,2,c
  6967  01093C  D29F               	goto	l7701
  6968                           
  6969                           ; BSR set to: 57
  6970                           ;gemsecs.c: 69:     V.uart = 2;
  6971  01093E  0E02               	movlw	2
  6972  010940  006F FFA0  F522    	movff	wreg,_V+300	;volatile
  6973                           
  6974                           ; BSR set to: 57
  6975                           ;gemsecs.c: 70:     StartTimer(TMR_T2, 2000);
  6976  010946  0ED0               	movlw	208
  6977  010948  6EE6               	movwf	postinc1,c
  6978  01094A  0E07               	movlw	7
  6979  01094C  6EE6               	movwf	postinc1,c
  6980  01094E  0E02               	movlw	2
  6981  010950  6EE6               	movwf	postinc1,c
  6982  010952  ECAD  F0A3         	call	_StartTimer	;wreg free
  6983                           
  6984                           ;gemsecs.c: 71:     V.error = LINK_ERROR_NONE;
  6985  010956  0E0A               	movlw	10
  6986  010958  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  6987                           
  6988                           ;gemsecs.c: 72:     *m_link = LINK_STATE_ENQ;
  6989                           ;stkvar	_m_link @ sp[(-1)+-2]
  6990  01095E  0EFD               	movlw	-3
  6991  010960  006F FF8F FFD9     	movff	plusw1,fsr2l
  6992  010966  0EFE               	movlw	-2
  6993  010968  006F FF8F FFDA     	movff	plusw1,fsr2h
  6994  01096E  0E01               	movlw	1
  6995  010970  D25E               	goto	L24
  6996  010972                     l1602:
  6997                           
  6998                           ;gemsecs.c: 77:   rxData_l = 0;
  6999  010972  6A2F               	clrf	m_protocol@rxData_l,c
  7000                           
  7001                           ;gemsecs.c: 78:   if (TimerDone(TMR_T2)) {
  7002  010974  0E02               	movlw	2
  7003  010976  6EE6               	movwf	postinc1,c
  7004  010978  EC03  F0A6         	call	_TimerDone	;wreg free
  7005  01097C  503D               	movf	btemp,w,c
  7006  01097E  B4D8               	btfsc	status,2,c
  7007  010980  D019               	goto	l7527
  7008  010982                     u4440:
  7009                           
  7010                           ;gemsecs.c: 79:    V.error = LINK_ERROR_T2;
  7011  010982  0E0C               	movlw	12
  7012  010984  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  7013                           
  7014                           ;gemsecs.c: 80:    V.timer_error++;
  7015  01098A  EE21  F0F4         	lfsr	2,_V+254	;volatile
  7016  01098E  2ADE               	incf	postinc2,f,c
  7017  010990  0E00               	movlw	0
  7018  010992  22DD               	addwfc	postdec2,f,c
  7019                           
  7020                           ;gemsecs.c: 81:    V.failed_receive = 2;
  7021  010994  EE21  F0F9         	lfsr	2,_V+259	;volatile
  7022  010998  50DF               	movf	223,w,c
  7023  01099A  0BF0               	andlw	-16
  7024  01099C  0902               	iorlw	2
  7025  01099E  6EDF               	movwf	223,c
  7026                           
  7027                           ;gemsecs.c: 82:    *m_link = LINK_STATE_NAK;
  7028                           ;stkvar	_m_link @ sp[(-1)+-2]
  7029  0109A0  0EFD               	movlw	-3
  7030  0109A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7031  0109A8  0EFE               	movlw	-2
  7032  0109AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7033  0109B0  0E05               	movlw	5
  7034  0109B2  D23D               	goto	L24
  7035  0109B4                     l7527:
  7036                           
  7037                           ;gemsecs.c: 100:    if (UART2_is_rx_ready() || UART2_is_rx_ready()) {
  7038  0109B4  EC63  F0A7         	call	_UART2_is_rx_ready	;wreg free
  7039  0109B8  503D               	movf	btemp,w,c
  7040  0109BA  A4D8               	btfss	status,2,c
  7041  0109BC  D005               	goto	u4460
  7042  0109BE  EC63  F0A7         	call	_UART2_is_rx_ready	;wreg free
  7043  0109C2  503D               	movf	btemp,w,c
  7044  0109C4  B4D8               	btfsc	status,2,c
  7045  0109C6  D25A               	goto	l7701
  7046  0109C8                     u4460:
  7047                           
  7048                           ;gemsecs.c: 101:     if (UART1_is_rx_ready()) {
  7049  0109C8  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  7050  0109CC  503D               	movf	btemp,w,c
  7051  0109CE  B4D8               	btfsc	status,2,c
  7052  0109D0  D024               	goto	l7543
  7053                           
  7054                           ;gemsecs.c: 102:      rxData = UART1_Read();
  7055  0109D2  EC8E  F0A3         	call	_UART1_Read	;wreg free
  7056                           
  7057                           ;stkvar	_rxData @ sp[(-1)+0]
  7058  0109D6  0EFF               	movlw	-1
  7059  0109D8  0060  F0F7  FFE3   	movff	btemp,plusw1
  7060                           
  7061                           ; BSR set to: 57
  7062                           ;gemsecs.c: 103:      if (rxData == 0x04) {
  7063                           ;stkvar	_rxData @ sp[(-1)+0]
  7064  0109DE  0EFF               	movlw	-1
  7065  0109E0  006F FF8C  F03D    	movff	plusw1,btemp
  7066  0109E6  0E04               	movlw	4
  7067  0109E8  183D               	xorwf	btemp,w,c
  7068  0109EA  A4D8               	btfss	status,2,c
  7069  0109EC  D016               	goto	l7543
  7070                           
  7071                           ; BSR set to: 57
  7072                           ;gemsecs.c: 104:       StartTimer(TMR_T2, 2000);
  7073  0109EE  0ED0               	movlw	208
  7074  0109F0  6EE6               	movwf	postinc1,c
  7075  0109F2  0E07               	movlw	7
  7076  0109F4  6EE6               	movwf	postinc1,c
  7077  0109F6  0E02               	movlw	2
  7078  0109F8  6EE6               	movwf	postinc1,c
  7079  0109FA  ECAD  F0A3         	call	_StartTimer	;wreg free
  7080                           
  7081                           ;gemsecs.c: 105:       V.error = LINK_ERROR_NONE;
  7082  0109FE  0E0A               	movlw	10
  7083  010A00  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  7084                           
  7085                           ;gemsecs.c: 106:       *m_link = LINK_STATE_EOT;
  7086                           ;stkvar	_m_link @ sp[(-1)+-2]
  7087  010A06  0EFD               	movlw	-3
  7088  010A08  006F FF8F FFD9     	movff	plusw1,fsr2l
  7089  010A0E  0EFE               	movlw	-2
  7090  010A10  006F FF8F FFDA     	movff	plusw1,fsr2h
  7091  010A16  0E02               	movlw	2
  7092  010A18  6EDF               	movwf	indf2,c
  7093  010A1A                     l7543:
  7094                           
  7095                           ;gemsecs.c: 109:     if (UART2_is_rx_ready()) {
  7096  010A1A  EC63  F0A7         	call	_UART2_is_rx_ready	;wreg free
  7097  010A1E  503D               	movf	btemp,w,c
  7098  010A20  B4D8               	btfsc	status,2,c
  7099  010A22  D22C               	goto	l7701
  7100                           
  7101                           ;gemsecs.c: 110:      rxData = UART2_Read();
  7102  010A24  EC6F  F0A3         	call	_UART2_Read	;wreg free
  7103                           
  7104                           ;stkvar	_rxData @ sp[(-1)+0]
  7105  010A28  0EFF               	movlw	-1
  7106  010A2A  0060  F0F7  FFE3   	movff	btemp,plusw1
  7107                           
  7108                           ; BSR set to: 57
  7109                           ;gemsecs.c: 111:      if (rxData == 0x04) {
  7110                           ;stkvar	_rxData @ sp[(-1)+0]
  7111  010A30  0EFF               	movlw	-1
  7112  010A32  006F FF8C  F03D    	movff	plusw1,btemp
  7113  010A38  0E04               	movlw	4
  7114  010A3A  183D               	xorwf	btemp,w,c
  7115  010A3C  A4D8               	btfss	status,2,c
  7116  010A3E  D21E               	goto	l7701
  7117                           
  7118                           ; BSR set to: 57
  7119                           ;gemsecs.c: 112:       StartTimer(TMR_T2, 2000);
  7120  010A40  0ED0               	movlw	208
  7121  010A42  6EE6               	movwf	postinc1,c
  7122  010A44  0E07               	movlw	7
  7123  010A46  6EE6               	movwf	postinc1,c
  7124  010A48  0E02               	movlw	2
  7125  010A4A  6EE6               	movwf	postinc1,c
  7126  010A4C  ECAD  F0A3         	call	_StartTimer	;wreg free
  7127                           
  7128                           ;gemsecs.c: 113:       V.error = LINK_ERROR_NONE;
  7129  010A50  0E0A               	movlw	10
  7130  010A52  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  7131                           
  7132                           ;gemsecs.c: 114:       *m_link = LINK_STATE_EOT;
  7133                           ;stkvar	_m_link @ sp[(-1)+-2]
  7134  010A58  0EFD               	movlw	-3
  7135  010A5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7136  010A60  0EFE               	movlw	-2
  7137  010A62  006F FF8F FFDA     	movff	plusw1,fsr2h
  7138  010A68  0E02               	movlw	2
  7139  010A6A  D1E1               	goto	L24
  7140  010A6C                     l7555:
  7141                           
  7142                           ;gemsecs.c: 122:   if (TimerDone(TMR_T2)) {
  7143  010A6C  0E02               	movlw	2
  7144  010A6E  6EE6               	movwf	postinc1,c
  7145  010A70  EC03  F0A6         	call	_TimerDone	;wreg free
  7146  010A74  503D               	movf	btemp,w,c
  7147  010A76  A4D8               	btfss	status,2,c
  7148  010A78  D784               	goto	u4440
  7149                           
  7150                           ;gemsecs.c: 128:    if (UART1_is_rx_ready()) {
  7151  010A7A  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  7152  010A7E  503D               	movf	btemp,w,c
  7153  010A80  B4D8               	btfsc	status,2,c
  7154  010A82  D0B5               	goto	l7615
  7155                           
  7156                           ;gemsecs.c: 129:     rxData = UART1_Read();
  7157  010A84  EC8E  F0A3         	call	_UART1_Read	;wreg free
  7158                           
  7159                           ;stkvar	_rxData @ sp[(-1)+0]
  7160  010A88  0EFF               	movlw	-1
  7161  010A8A  0060  F0F7  FFE3   	movff	btemp,plusw1
  7162                           
  7163                           ; BSR set to: 57
  7164                           ;gemsecs.c: 130:     if (rxData_l == 0) {
  7165  010A90  502F               	movf	m_protocol@rxData_l,w,c
  7166  010A92  A4D8               	btfss	status,2,c
  7167  010A94  D00C               	goto	l7577
  7168                           
  7169                           ; BSR set to: 57
  7170                           ;gemsecs.c: 131:      r_block.length = rxData;
  7171                           ;stkvar	_rxData @ sp[(-1)+0]
  7172  010A96  0EFF               	movlw	-1
  7173  010A98  006F FF8C  F0C4    	movff	plusw1,_r_block+12
  7174                           
  7175                           ; BSR set to: 57
  7176                           ;gemsecs.c: 132:      run_checksum(0, 1);
  7177  010A9E  0E01               	movlw	1
  7178  010AA0  6EE6               	movwf	postinc1,c
  7179  010AA2  0E00               	movlw	0
  7180  010AA4  6EE6               	movwf	postinc1,c
  7181  010AA6  EC88  F0A4         	call	_run_checksum	;wreg free
  7182                           
  7183                           ;gemsecs.c: 133:      rxData_l++;
  7184  010AAA  2A2F               	incf	m_protocol@rxData_l,f,c
  7185                           
  7186                           ;gemsecs.c: 134:     } else {
  7187  010AAC  D0A0               	goto	l7615
  7188  010AAE                     l7577:
  7189                           
  7190                           ; BSR set to: 57
  7191                           ;gemsecs.c: 138:      if (rxData_l <= sizeof(block10))
  7192  010AAE  0E0B               	movlw	11
  7193  010AB0  602F               	cpfslt	m_protocol@rxData_l,c
  7194  010AB2  D00C               	goto	l7581
  7195                           
  7196                           ; BSR set to: 57
  7197                           ;gemsecs.c: 139:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  7198                           ;stkvar	_rxData @ sp[(-1)+0]
  7199  010AB4  502F               	movf	m_protocol@rxData_l,w,c
  7200  010AB6  0819               	sublw	low (_H10+25)
  7201  010AB8  6ED9               	movwf	fsr2l,c
  7202  010ABA  0E00               	movlw	0
  7203  010ABC  A0D8               	btfss	status,0,c
  7204  010ABE  2AE8               	incf	wreg,f,c
  7205  010AC0  0801               	sublw	high (_H10+25)
  7206  010AC2  6EDA               	movwf	fsr2h,c
  7207  010AC4  0EFF               	movlw	-1
  7208  010AC6  006F FF8F FFDF     	movff	plusw1,indf2
  7209  010ACC                     l7581:
  7210                           
  7211                           ; BSR set to: 57
  7212                           ;gemsecs.c: 140:      if (rxData_l <= r_block.length)
  7213  010ACC  502F               	movf	m_protocol@rxData_l,w,c
  7214  010ACE  0100               	movlb	0	; () banked
  7215  010AD0  5DC4               	subwf	(_r_block+12)& (0+255),w,b
  7216  010AD2  A0D8               	btfss	status,0,c
  7217  010AD4  D00D               	goto	l7585
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;gemsecs.c: 141:       V.r_checksum = run_checksum(rxData, 0);
  7221  010AD6  0E00               	movlw	0
  7222  010AD8  6EE6               	movwf	postinc1,c
  7223                           
  7224                           ;stkvar	_rxData @ sp[(-2)+0]
  7225  010ADA  0EFE               	movlw	-2
  7226  010ADC  50E3               	movf	plusw1,w,c
  7227  010ADE  6EE6               	movwf	postinc1,c
  7228  010AE0  EC88  F0A4         	call	_run_checksum	;wreg free
  7229  010AE4  0060  F0F4  F4EE   	movff	btemp,_V+248	;volatile
  7230  010AEA  0060  F0F8  F4EF   	movff	btemp+1,_V+249	;volatile
  7231  010AF0                     l7585:
  7232                           
  7233                           ;gemsecs.c: 143:      if (rxData_l == r_block.length + 1)
  7234  010AF0  502F               	movf	m_protocol@rxData_l,w,c
  7235  010AF2  6E47               	movwf	btemp+10,c
  7236  010AF4  6A48               	clrf	btemp+11,c
  7237  010AF6  0100               	movlb	0	; () banked
  7238  010AF8  51C4               	movf	(_r_block+12)& (0+255),w,b
  7239  010AFA  6E45               	movwf	btemp+8,c
  7240  010AFC  6A46               	clrf	btemp+9,c
  7241  010AFE  0E01               	movlw	1
  7242  010B00  2645               	addwf	btemp+8,f,c
  7243  010B02  0E00               	movlw	0
  7244  010B04  2246               	addwfc	btemp+9,f,c
  7245  010B06  5047               	movf	btemp+10,w,c
  7246  010B08  1845               	xorwf	btemp+8,w,c
  7247  010B0A  E109               	bnz	l7589
  7248  010B0C  5048               	movf	btemp+11,w,c
  7249  010B0E  1846               	xorwf	btemp+9,w,c
  7250  010B10  A4D8               	btfss	status,2,c
  7251  010B12  D005               	goto	l7589
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;gemsecs.c: 144:       H10[1].checksum = (uint16_t) rxData << 8;
  7255                           ;stkvar	_rxData @ sp[(-1)+0]
  7256  010B14  0EFF               	movlw	-1
  7257  010B16  50E3               	movf	plusw1,w,c
  7258  010B18  0101               	movlb	1	; () banked
  7259  010B1A  6F0E               	movwf	(_H10+14)& (0+255),b
  7260  010B1C  6B0D               	clrf	(_H10+13)& (0+255),b
  7261  010B1E                     l7589:
  7262                           
  7263                           ;gemsecs.c: 145:      if (rxData_l == r_block.length + 2)
  7264  010B1E  502F               	movf	m_protocol@rxData_l,w,c
  7265  010B20  6E47               	movwf	btemp+10,c
  7266  010B22  6A48               	clrf	btemp+11,c
  7267  010B24  0100               	movlb	0	; () banked
  7268  010B26  51C4               	movf	(_r_block+12)& (0+255),w,b
  7269  010B28  6E45               	movwf	btemp+8,c
  7270  010B2A  6A46               	clrf	btemp+9,c
  7271  010B2C  0E02               	movlw	2
  7272  010B2E  2645               	addwf	btemp+8,f,c
  7273  010B30  0E00               	movlw	0
  7274  010B32  2246               	addwfc	btemp+9,f,c
  7275  010B34  5047               	movf	btemp+10,w,c
  7276  010B36  1845               	xorwf	btemp+8,w,c
  7277  010B38  E10A               	bnz	l7593
  7278  010B3A  5048               	movf	btemp+11,w,c
  7279  010B3C  1846               	xorwf	btemp+9,w,c
  7280  010B3E  A4D8               	btfss	status,2,c
  7281  010B40  D006               	goto	l7593
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;gemsecs.c: 146:       H10[1].checksum += rxData;
  7285                           ;stkvar	_rxData @ sp[(-1)+0]
  7286  010B42  0EFF               	movlw	-1
  7287  010B44  50E3               	movf	plusw1,w,c
  7288  010B46  0101               	movlb	1	; () banked
  7289  010B48  270D               	addwf	(_H10+13)& (0+255),f,b
  7290  010B4A  0E00               	movlw	0
  7291  010B4C  230E               	addwfc	(_H10+14)& (0+255),f,b
  7292  010B4E                     l7593:
  7293                           
  7294                           ;gemsecs.c: 148:      rxData_l++;
  7295  010B4E  2A2F               	incf	m_protocol@rxData_l,f,c
  7296                           
  7297                           ;gemsecs.c: 149:      if (rxData_l > (r_block.length + 2)) {
  7298  010B50  502F               	movf	m_protocol@rxData_l,w,c
  7299  010B52  6E47               	movwf	btemp+10,c
  7300  010B54  6A48               	clrf	btemp+11,c
  7301  010B56  0100               	movlb	0	; () banked
  7302  010B58  51C4               	movf	(_r_block+12)& (0+255),w,b
  7303  010B5A  6E45               	movwf	btemp+8,c
  7304  010B5C  6A46               	clrf	btemp+9,c
  7305  010B5E  0E02               	movlw	2
  7306  010B60  2645               	addwf	btemp+8,f,c
  7307  010B62  0E00               	movlw	0
  7308  010B64  2246               	addwfc	btemp+9,f,c
  7309  010B66  5047               	movf	btemp+10,w,c
  7310  010B68  5C45               	subwf	btemp+8,w,c
  7311  010B6A  5046               	movf	btemp+9,w,c
  7312  010B6C  0A80               	xorlw	128
  7313  010B6E  6E3D               	movwf	btemp,c
  7314  010B70  5048               	movf	btemp+11,w,c
  7315  010B72  0A80               	xorlw	128
  7316  010B74  583D               	subwfb	btemp,w,c
  7317  010B76  B0D8               	btfsc	status,0,c
  7318  010B78  D03A               	goto	l7615
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;gemsecs.c: 150:       if (V.r_checksum == H10[1].checksum) {
  7322  010B7A  EE21  F0EE         	lfsr	2,_V+248	;volatile
  7323  010B7E  0101               	movlb	1	; () banked
  7324  010B80  510D               	movf	(_H10+13)& (0+255),w,b
  7325  010B82  18DE               	xorwf	postinc2,w,c
  7326  010B84  E110               	bnz	l7603
  7327  010B86  510E               	movf	(_H10+14)& (0+255),w,b
  7328  010B88  18DE               	xorwf	postinc2,w,c
  7329  010B8A  A4D8               	btfss	status,2,c
  7330  010B8C  D00C               	goto	l7603
  7331                           
  7332                           ; BSR set to: 1
  7333                           ;gemsecs.c: 151:        *m_link = LINK_STATE_ACK;
  7334                           ;stkvar	_m_link @ sp[(-1)+-2]
  7335  010B8E  0EFD               	movlw	-3
  7336  010B90  006F FF8F FFD9     	movff	plusw1,fsr2l
  7337  010B96  0EFE               	movlw	-2
  7338  010B98  006F FF8F FFDA     	movff	plusw1,fsr2h
  7339  010B9E  0E03               	movlw	3
  7340  010BA0  D025               	goto	L21
  7341  010BA2                     l7601:
  7342  010BA2  EC8E  F0A3         	call	_UART1_Read	;wreg free
  7343  010BA6                     l7603:
  7344                           
  7345                           ;gemsecs.c: 153:        while (UART1_is_rx_ready())
  7346  010BA6  EC67  F0A7         	call	_UART1_is_rx_ready	;wreg free
  7347  010BAA  503D               	movf	btemp,w,c
  7348  010BAC  A4D8               	btfss	status,2,c
  7349  010BAE  D7F9               	goto	l7601
  7350                           
  7351                           ;gemsecs.c: 155:        WaitMs(500);
  7352  010BB0  0EF4               	movlw	244
  7353  010BB2  6EE6               	movwf	postinc1,c
  7354  010BB4  0E01               	movlw	1
  7355  010BB6  6EE6               	movwf	postinc1,c
  7356  010BB8  ECCB  F0A3         	call	_WaitMs	;wreg free
  7357                           
  7358                           ;gemsecs.c: 156:        V.error = LINK_ERROR_CHECKSUM;
  7359  010BBC  0E0F               	movlw	15
  7360  010BBE  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  7361                           
  7362                           ;gemsecs.c: 157:        V.checksum_error++;
  7363  010BC4  EE21  F0F2         	lfsr	2,_V+252	;volatile
  7364  010BC8  2ADE               	incf	postinc2,f,c
  7365  010BCA  0E00               	movlw	0
  7366  010BCC  22DD               	addwfc	postdec2,f,c
  7367                           
  7368                           ;gemsecs.c: 158:        V.failed_receive = 3;
  7369  010BCE  EE21  F0F9         	lfsr	2,_V+259	;volatile
  7370  010BD2  50DF               	movf	223,w,c
  7371  010BD4  0BF0               	andlw	-16
  7372  010BD6  0903               	iorlw	3
  7373  010BD8  6EDF               	movwf	223,c
  7374                           
  7375                           ;gemsecs.c: 159:        *m_link = LINK_STATE_NAK;
  7376                           ;stkvar	_m_link @ sp[(-1)+-2]
  7377  010BDA  0EFD               	movlw	-3
  7378  010BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7379  010BE2  0EFE               	movlw	-2
  7380  010BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7381  010BEA  0E05               	movlw	5
  7382  010BEC                     L21:
  7383  010BEC  6EDF               	movwf	indf2,c
  7384  010BEE                     l7615:
  7385                           
  7386                           ;gemsecs.c: 165:    if (UART2_is_rx_ready()) {
  7387  010BEE  EC63  F0A7         	call	_UART2_is_rx_ready	;wreg free
  7388  010BF2  503D               	movf	btemp,w,c
  7389  010BF4  B4D8               	btfsc	status,2,c
  7390  010BF6  D142               	goto	l7701
  7391                           
  7392                           ;gemsecs.c: 166:     rxData = UART2_Read();
  7393  010BF8  EC6F  F0A3         	call	_UART2_Read	;wreg free
  7394                           
  7395                           ;stkvar	_rxData @ sp[(-1)+0]
  7396  010BFC  0EFF               	movlw	-1
  7397  010BFE  0060  F0F7  FFE3   	movff	btemp,plusw1
  7398                           
  7399                           ; BSR set to: 57
  7400                           ;gemsecs.c: 167:     if (rxData_l == 0) {
  7401  010C04  502F               	movf	m_protocol@rxData_l,w,c
  7402  010C06  A4D8               	btfss	status,2,c
  7403  010C08  D00C               	goto	l7627
  7404                           
  7405                           ; BSR set to: 57
  7406                           ;gemsecs.c: 168:      r_block.length = rxData;
  7407                           ;stkvar	_rxData @ sp[(-1)+0]
  7408  010C0A  0EFF               	movlw	-1
  7409  010C0C  006F FF8C  F0C4    	movff	plusw1,_r_block+12
  7410                           
  7411                           ; BSR set to: 57
  7412                           ;gemsecs.c: 169:      run_checksum(0, 1);
  7413  010C12  0E01               	movlw	1
  7414  010C14  6EE6               	movwf	postinc1,c
  7415  010C16  0E00               	movlw	0
  7416  010C18  6EE6               	movwf	postinc1,c
  7417  010C1A  EC88  F0A4         	call	_run_checksum	;wreg free
  7418                           
  7419                           ;gemsecs.c: 170:      rxData_l++;
  7420  010C1E  2A2F               	incf	m_protocol@rxData_l,f,c
  7421                           
  7422                           ;gemsecs.c: 171:     } else {
  7423  010C20  D12D               	goto	l7701
  7424  010C22                     l7627:
  7425                           
  7426                           ; BSR set to: 57
  7427                           ;gemsecs.c: 175:      if (rxData_l <= sizeof(block10))
  7428  010C22  0E0B               	movlw	11
  7429  010C24  602F               	cpfslt	m_protocol@rxData_l,c
  7430  010C26  D00C               	goto	l7631
  7431                           
  7432                           ; BSR set to: 57
  7433                           ;gemsecs.c: 176:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  7434                           ;stkvar	_rxData @ sp[(-1)+0]
  7435  010C28  502F               	movf	m_protocol@rxData_l,w,c
  7436  010C2A  0819               	sublw	low (_H10+25)
  7437  010C2C  6ED9               	movwf	fsr2l,c
  7438  010C2E  0E00               	movlw	0
  7439  010C30  A0D8               	btfss	status,0,c
  7440  010C32  2AE8               	incf	wreg,f,c
  7441  010C34  0801               	sublw	high (_H10+25)
  7442  010C36  6EDA               	movwf	fsr2h,c
  7443  010C38  0EFF               	movlw	-1
  7444  010C3A  006F FF8F FFDF     	movff	plusw1,indf2
  7445  010C40                     l7631:
  7446                           
  7447                           ; BSR set to: 57
  7448                           ;gemsecs.c: 177:      if (rxData_l <= r_block.length)
  7449  010C40  502F               	movf	m_protocol@rxData_l,w,c
  7450  010C42  0100               	movlb	0	; () banked
  7451  010C44  5DC4               	subwf	(_r_block+12)& (0+255),w,b
  7452  010C46  A0D8               	btfss	status,0,c
  7453  010C48  D00D               	goto	l7635
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;gemsecs.c: 178:       V.r_checksum = run_checksum(rxData, 0);
  7457  010C4A  0E00               	movlw	0
  7458  010C4C  6EE6               	movwf	postinc1,c
  7459                           
  7460                           ;stkvar	_rxData @ sp[(-2)+0]
  7461  010C4E  0EFE               	movlw	-2
  7462  010C50  50E3               	movf	plusw1,w,c
  7463  010C52  6EE6               	movwf	postinc1,c
  7464  010C54  EC88  F0A4         	call	_run_checksum	;wreg free
  7465  010C58  0060  F0F4  F4EE   	movff	btemp,_V+248	;volatile
  7466  010C5E  0060  F0F8  F4EF   	movff	btemp+1,_V+249	;volatile
  7467  010C64                     l7635:
  7468                           
  7469                           ;gemsecs.c: 180:      if (rxData_l == r_block.length + 1)
  7470  010C64  502F               	movf	m_protocol@rxData_l,w,c
  7471  010C66  6E47               	movwf	btemp+10,c
  7472  010C68  6A48               	clrf	btemp+11,c
  7473  010C6A  0100               	movlb	0	; () banked
  7474  010C6C  51C4               	movf	(_r_block+12)& (0+255),w,b
  7475  010C6E  6E45               	movwf	btemp+8,c
  7476  010C70  6A46               	clrf	btemp+9,c
  7477  010C72  0E01               	movlw	1
  7478  010C74  2645               	addwf	btemp+8,f,c
  7479  010C76  0E00               	movlw	0
  7480  010C78  2246               	addwfc	btemp+9,f,c
  7481  010C7A  5047               	movf	btemp+10,w,c
  7482  010C7C  1845               	xorwf	btemp+8,w,c
  7483  010C7E  E109               	bnz	l7639
  7484  010C80  5048               	movf	btemp+11,w,c
  7485  010C82  1846               	xorwf	btemp+9,w,c
  7486  010C84  A4D8               	btfss	status,2,c
  7487  010C86  D005               	goto	l7639
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;gemsecs.c: 181:       H10[1].checksum = (uint16_t) rxData << 8;
  7491                           ;stkvar	_rxData @ sp[(-1)+0]
  7492  010C88  0EFF               	movlw	-1
  7493  010C8A  50E3               	movf	plusw1,w,c
  7494  010C8C  0101               	movlb	1	; () banked
  7495  010C8E  6F0E               	movwf	(_H10+14)& (0+255),b
  7496  010C90  6B0D               	clrf	(_H10+13)& (0+255),b
  7497  010C92                     l7639:
  7498                           
  7499                           ;gemsecs.c: 182:      if (rxData_l == r_block.length + 2)
  7500  010C92  502F               	movf	m_protocol@rxData_l,w,c
  7501  010C94  6E47               	movwf	btemp+10,c
  7502  010C96  6A48               	clrf	btemp+11,c
  7503  010C98  0100               	movlb	0	; () banked
  7504  010C9A  51C4               	movf	(_r_block+12)& (0+255),w,b
  7505  010C9C  6E45               	movwf	btemp+8,c
  7506  010C9E  6A46               	clrf	btemp+9,c
  7507  010CA0  0E02               	movlw	2
  7508  010CA2  2645               	addwf	btemp+8,f,c
  7509  010CA4  0E00               	movlw	0
  7510  010CA6  2246               	addwfc	btemp+9,f,c
  7511  010CA8  5047               	movf	btemp+10,w,c
  7512  010CAA  1845               	xorwf	btemp+8,w,c
  7513  010CAC  E10A               	bnz	l7643
  7514  010CAE  5048               	movf	btemp+11,w,c
  7515  010CB0  1846               	xorwf	btemp+9,w,c
  7516  010CB2  A4D8               	btfss	status,2,c
  7517  010CB4  D006               	goto	l7643
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;gemsecs.c: 183:       H10[1].checksum += rxData;
  7521                           ;stkvar	_rxData @ sp[(-1)+0]
  7522  010CB6  0EFF               	movlw	-1
  7523  010CB8  50E3               	movf	plusw1,w,c
  7524  010CBA  0101               	movlb	1	; () banked
  7525  010CBC  270D               	addwf	(_H10+13)& (0+255),f,b
  7526  010CBE  0E00               	movlw	0
  7527  010CC0  230E               	addwfc	(_H10+14)& (0+255),f,b
  7528  010CC2                     l7643:
  7529                           
  7530                           ;gemsecs.c: 185:      rxData_l++;
  7531  010CC2  2A2F               	incf	m_protocol@rxData_l,f,c
  7532                           
  7533                           ;gemsecs.c: 186:      if (rxData_l > (r_block.length + 2)) {
  7534  010CC4  502F               	movf	m_protocol@rxData_l,w,c
  7535  010CC6  6E47               	movwf	btemp+10,c
  7536  010CC8  6A48               	clrf	btemp+11,c
  7537  010CCA  0100               	movlb	0	; () banked
  7538  010CCC  51C4               	movf	(_r_block+12)& (0+255),w,b
  7539  010CCE  6E45               	movwf	btemp+8,c
  7540  010CD0  6A46               	clrf	btemp+9,c
  7541  010CD2  0E02               	movlw	2
  7542  010CD4  2645               	addwf	btemp+8,f,c
  7543  010CD6  0E00               	movlw	0
  7544  010CD8  2246               	addwfc	btemp+9,f,c
  7545  010CDA  5047               	movf	btemp+10,w,c
  7546  010CDC  5C45               	subwf	btemp+8,w,c
  7547  010CDE  5046               	movf	btemp+9,w,c
  7548  010CE0  0A80               	xorlw	128
  7549  010CE2  6E3D               	movwf	btemp,c
  7550  010CE4  5048               	movf	btemp+11,w,c
  7551  010CE6  0A80               	xorlw	128
  7552  010CE8  583D               	subwfb	btemp,w,c
  7553  010CEA  B0D8               	btfsc	status,0,c
  7554  010CEC  D0C7               	goto	l7701
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;gemsecs.c: 187:       if (V.r_checksum == H10[1].checksum) {
  7558  010CEE  EE21  F0EE         	lfsr	2,_V+248	;volatile
  7559  010CF2  0101               	movlb	1	; () banked
  7560  010CF4  510D               	movf	(_H10+13)& (0+255),w,b
  7561  010CF6  18DE               	xorwf	postinc2,w,c
  7562  010CF8  E110               	bnz	l7653
  7563  010CFA  510E               	movf	(_H10+14)& (0+255),w,b
  7564  010CFC  18DE               	xorwf	postinc2,w,c
  7565  010CFE  A4D8               	btfss	status,2,c
  7566  010D00  D00C               	goto	l7653
  7567                           
  7568                           ; BSR set to: 1
  7569                           ;gemsecs.c: 188:        *m_link = LINK_STATE_ACK;
  7570                           ;stkvar	_m_link @ sp[(-1)+-2]
  7571  010D02  0EFD               	movlw	-3
  7572  010D04  006F FF8F FFD9     	movff	plusw1,fsr2l
  7573  010D0A  0EFE               	movlw	-2
  7574  010D0C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7575  010D12  0E03               	movlw	3
  7576  010D14  D08C               	goto	L24
  7577  010D16                     l7651:
  7578  010D16  EC6F  F0A3         	call	_UART2_Read	;wreg free
  7579  010D1A                     l7653:
  7580                           
  7581                           ;gemsecs.c: 190:        while (UART2_is_rx_ready())
  7582  010D1A  EC63  F0A7         	call	_UART2_is_rx_ready	;wreg free
  7583  010D1E  503D               	movf	btemp,w,c
  7584  010D20  A4D8               	btfss	status,2,c
  7585  010D22  D7F9               	goto	l7651
  7586                           
  7587                           ;gemsecs.c: 192:        WaitMs(500);
  7588  010D24  0EF4               	movlw	244
  7589  010D26  6EE6               	movwf	postinc1,c
  7590  010D28  0E01               	movlw	1
  7591  010D2A  6EE6               	movwf	postinc1,c
  7592  010D2C  ECCB  F0A3         	call	_WaitMs	;wreg free
  7593                           
  7594                           ;gemsecs.c: 193:        V.error = LINK_ERROR_CHECKSUM;
  7595  010D30  0E0F               	movlw	15
  7596  010D32  006F FFA0  F4EA    	movff	wreg,_V+244	;volatile
  7597                           
  7598                           ;gemsecs.c: 194:        V.checksum_error++;
  7599  010D38  EE21  F0F2         	lfsr	2,_V+252	;volatile
  7600  010D3C  2ADE               	incf	postinc2,f,c
  7601  010D3E  0E00               	movlw	0
  7602  010D40  22DD               	addwfc	postdec2,f,c
  7603                           
  7604                           ;gemsecs.c: 195:        V.failed_receive = 4;
  7605  010D42  EE21  F0F9         	lfsr	2,_V+259	;volatile
  7606  010D46  50DF               	movf	223,w,c
  7607  010D48  0BF0               	andlw	-16
  7608  010D4A  0904               	iorlw	4
  7609  010D4C  D628               	goto	L23
  7610  010D4E                     l7665:
  7611                           
  7612                           ;gemsecs.c: 207:   V.stream = H10[1].block.block.stream;
  7613  010D4E  0101               	movlb	1	; () banked
  7614  010D50  5116               	movf	(_H10+22)& (0+255),w,b
  7615  010D52  0B7F               	andlw	127
  7616  010D54  6E48               	movwf	btemp+11,c
  7617  010D56  0060  F120  F4E8   	movff	btemp+11,_V+242	;volatile
  7618                           
  7619                           ; BSR set to: 1
  7620                           ;gemsecs.c: 208:   V.function = H10[1].block.block.function;
  7621  010D5C  EE21  F0E9         	lfsr	2,_V+243	;volatile
  7622  010D60  0060  F457  FFDF   	movff	_H10+21,indf2
  7623                           
  7624                           ; BSR set to: 1
  7625                           ;gemsecs.c: 209:   V.systemb = H10[1].block.block.systemb;
  7626  010D66  EE20  F10F         	lfsr	2,_H10+15
  7627  010D6A  006F FF78  F4E0    	movff	postinc2,_V+234	;volatile
  7628  010D70  006F FF78  F4E1    	movff	postinc2,_V+235	;volatile
  7629  010D76  006F FF78  F4E2    	movff	postinc2,_V+236	;volatile
  7630  010D7C  006F FF74  F4E3    	movff	postdec2,_V+237	;volatile
  7631                           
  7632                           ; BSR set to: 1
  7633                           ;gemsecs.c: 210:   V.rbit = H10[1].block.block.rbit;
  7634  010D82  EE21  F0F8         	lfsr	2,_V+258	;volatile
  7635  010D86  BF18               	btfsc	(_H10+24)& (0+255),7,b
  7636  010D88  D002               	bra	u4705
  7637  010D8A  90DF               	bcf	indf2,0,c
  7638  010D8C  D001               	bra	u4706
  7639  010D8E                     u4705:
  7640  010D8E  80DF               	bsf	indf2,0,c
  7641  010D90                     u4706:
  7642                           
  7643                           ;gemsecs.c: 211:   V.wbit = H10[1].block.block.wbit;
  7644  010D90  EE21  F0F8         	lfsr	2,_V+258	;volatile
  7645  010D94  0101               	movlb	1	; () banked
  7646  010D96  BF16               	btfsc	(_H10+22)& (0+255),7,b
  7647  010D98  D002               	bra	u4715
  7648  010D9A  92DF               	bcf	indf2,1,c
  7649  010D9C  D001               	bra	u4716
  7650  010D9E                     u4715:
  7651  010D9E  82DF               	bsf	indf2,1,c
  7652  010DA0                     u4716:
  7653                           
  7654                           ;gemsecs.c: 212:   V.ebit = H10[1].block.block.ebit;
  7655  010DA0  EE21  F0F8         	lfsr	2,_V+258	;volatile
  7656  010DA4  0101               	movlb	1	; () banked
  7657  010DA6  BF14               	btfsc	(_H10+20)& (0+255),7,b
  7658  010DA8  D002               	bra	u4725
  7659  010DAA  94DF               	bcf	indf2,2,c
  7660  010DAC  D001               	bra	u4726
  7661  010DAE                     u4725:
  7662  010DAE  84DF               	bsf	indf2,2,c
  7663  010DB0                     u4726:
  7664                           
  7665                           ;gemsecs.c: 213:   V.failed_receive = 0;
  7666  010DB0  EE21  F0F9         	lfsr	2,_V+259	;volatile
  7667  010DB4  0EF0               	movlw	-16
  7668  010DB6  16DF               	andwf	223,f,c
  7669                           
  7670                           ;gemsecs.c: 214:   V.g_state = secs_gem_state(V.stream, V.function);
  7671  010DB8  EE21  F0E9         	lfsr	2,_V+243	;volatile
  7672  010DBC  50DF               	movf	indf2,w,c
  7673  010DBE  6EE6               	movwf	postinc1,c
  7674  010DC0  EE21  F0E8         	lfsr	2,_V+242	;volatile
  7675  010DC4  50DF               	movf	indf2,w,c
  7676  010DC6  6EE6               	movwf	postinc1,c
  7677  010DC8  ECEA  F09C         	call	_secs_gem_state	;wreg free
  7678  010DCC  0060  F0F4  F3F8   	movff	btemp,_V+2	;volatile
  7679                           
  7680                           ;gemsecs.c: 215:   *m_link = LINK_STATE_DONE;
  7681                           ;stkvar	_m_link @ sp[(-1)+-2]
  7682  010DD2  0EFD               	movlw	-3
  7683  010DD4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7684  010DDA  0EFE               	movlw	-2
  7685  010DDC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7686  010DE2  0E04               	movlw	4
  7687  010DE4  D024               	goto	L24
  7688  010DE6                     l7683:
  7689                           
  7690                           ;gemsecs.c: 218:   *m_link = LINK_STATE_ERROR;
  7691                           ;stkvar	_m_link @ sp[(-1)+-2]
  7692  010DE6  0EFD               	movlw	-3
  7693  010DE8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7694  010DEE  0EFE               	movlw	-2
  7695  010DF0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7696  010DF6  0E06               	movlw	6
  7697  010DF8  6EDF               	movwf	indf2,c
  7698                           
  7699                           ;gemsecs.c: 219:   while ((uart1RxCount)) {
  7700  010DFA  D002               	goto	l7687
  7701  010DFC                     l7685:
  7702                           
  7703                           ;gemsecs.c: 220:    UART1_Read();
  7704  010DFC  EC8E  F0A3         	call	_UART1_Read	;wreg free
  7705  010E00                     l7687:
  7706                           
  7707                           ;gemsecs.c: 219:   while ((uart1RxCount)) {
  7708  010E00  5037               	movf	_uart1RxCount,w,c	;volatile
  7709  010E02  B4D8               	btfsc	status,2,c
  7710  010E04  D003               	goto	l7691
  7711  010E06  D7FA               	goto	l7685
  7712  010E08                     l7689:
  7713                           
  7714                           ;gemsecs.c: 223:    UART2_Read();
  7715  010E08  EC6F  F0A3         	call	_UART2_Read	;wreg free
  7716  010E0C                     l7691:
  7717                           
  7718                           ;gemsecs.c: 222:   while ((uart2RxCount)) {
  7719  010E0C  5031               	movf	_uart2RxCount,w,c	;volatile
  7720  010E0E  B4D8               	btfsc	status,2,c
  7721  010E10  D035               	goto	l7701
  7722  010E12  D7FA               	goto	l7689
  7723  010E14                     l7693:
  7724                           
  7725                           ;gemsecs.c: 229:   V.failed_receive = 0;
  7726  010E14  EE21  F0F9         	lfsr	2,_V+259	;volatile
  7727  010E18  0EF0               	movlw	-16
  7728  010E1A  16DF               	andwf	223,f,c
  7729  010E1C                     l7695:
  7730                           
  7731                           ;gemsecs.c: 231:   *m_link = LINK_STATE_IDLE;
  7732                           ;stkvar	_m_link @ sp[(-1)+-2]
  7733  010E1C  0EFD               	movlw	-3
  7734  010E1E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7735  010E24  0EFE               	movlw	-2
  7736  010E26  006F FF8F FFDA     	movff	plusw1,fsr2h
  7737  010E2C  0E00               	movlw	0
  7738  010E2E                     L24:
  7739  010E2E  6EDF               	movwf	indf2,c
  7740                           
  7741                           ;gemsecs.c: 233:   break;
  7742  010E30  D025               	goto	l7701
  7743  010E32                     l7699:
  7744                           
  7745                           ;stkvar	_m_link @ sp[(-1)+-2]
  7746  010E32  0EFD               	movlw	-3
  7747  010E34  006F FF8F FFD9     	movff	plusw1,fsr2l
  7748  010E3A  0EFE               	movlw	-2
  7749  010E3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7750  010E42  50DF               	movf	indf2,w,c
  7751  010E44  6E47               	movwf	btemp+10,c
  7752  010E46  6A48               	clrf	btemp+11,c
  7753                           
  7754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7755                           ; Switch size 1, requested type "simple"
  7756                           ; Number of cases is 1, Range of values is 0 to 0
  7757                           ; switch strategies available:
  7758                           ; Name         Instructions Cycles
  7759                           ; simple_byte            4     3 (average)
  7760                           ;	Chosen strategy is simple_byte
  7761  010E48  5048               	movf	btemp+11,w,c
  7762  010E4A  0A00               	xorlw	0	; case 0
  7763  010E4C  A4D8               	btfss	status,2,c
  7764  010E4E  D7E6               	goto	l7695
  7765                           
  7766                           ; Switch size 1, requested type "simple"
  7767                           ; Number of cases is 7, Range of values is 0 to 6
  7768                           ; switch strategies available:
  7769                           ; Name         Instructions Cycles
  7770                           ; simple_byte           22    12 (average)
  7771                           ;	Chosen strategy is simple_byte
  7772  010E50  5047               	movf	btemp+10,w,c
  7773  010E52  0A00               	xorlw	0	; case 0
  7774  010E54  B4D8               	btfsc	status,2,c
  7775  010E56  D533               	goto	l7489
  7776  010E58  0A01               	xorlw	1	; case 1
  7777  010E5A  B4D8               	btfsc	status,2,c
  7778  010E5C  D58A               	goto	l1602
  7779  010E5E  0A03               	xorlw	3	; case 2
  7780  010E60  B4D8               	btfsc	status,2,c
  7781  010E62  D604               	goto	l7555
  7782  010E64  0A01               	xorlw	1	; case 3
  7783  010E66  B4D8               	btfsc	status,2,c
  7784  010E68  D772               	goto	l7665
  7785  010E6A  0A07               	xorlw	7	; case 4
  7786  010E6C  B4D8               	btfsc	status,2,c
  7787  010E6E  D7D2               	goto	l7693
  7788  010E70  0A01               	xorlw	1	; case 5
  7789  010E72  B4D8               	btfsc	status,2,c
  7790  010E74  D7B8               	goto	l7683
  7791  010E76  0A03               	xorlw	3	; case 6
  7792  010E78  A4D8               	btfss	status,2,c
  7793  010E7A  D7D0               	goto	l7695
  7794  010E7C                     l7701:
  7795                           
  7796                           ;gemsecs.c: 236:  return *m_link;
  7797                           ;stkvar	_m_link @ sp[(-1)+-2]
  7798  010E7C  0EFD               	movlw	-3
  7799  010E7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7800  010E84  0EFE               	movlw	-2
  7801  010E86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7802  010E8C  50DF               	movf	indf2,w,c
  7803  010E8E  6E3D               	movwf	btemp,c
  7804                           
  7805                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  7806  010E90  52E5               	movf	postdec1,f,c
  7807  010E92  52E5               	movf	postdec1,f,c
  7808  010E94  52E5               	movf	postdec1,f,c
  7809  010E96  0012               	return		;funcret
  7810  010E98                     __end_of_m_protocol:
  7811                           	opt callstack 0
  7812                           
  7813 ;; *************** function _secs_gem_state *****************
  7814 ;; Defined at:
  7815 ;;		line 780 in file "gemsecs.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  stream          1  [STACK] unsigned char 
  7818 ;;  function        1  [STACK] unsigned char 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1  [STACK] enum E16665
  7823 ;; Registers used:
  7824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/1
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    4
  7837 ;; This function calls:
  7838 ;;		_StartTimer
  7839 ;; This function is called by:
  7840 ;;		_m_protocol
  7841 ;;		_r_protocol
  7842 ;; This function uses a reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text16
  7846  0139D4                     __ptext16:
  7847                           	opt callstack 0
  7848  0139D4                     _secs_gem_state:
  7849                           	opt callstack 25
  7850                           
  7851                           ;gemsecs.c: 780: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          781: {;gemsecs.c: 782:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 784:  sw
      +                          itch (stream) {
  7852                           
  7853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7854                           ;incstack = 0
  7855  0139D4  D047               	goto	l6709
  7856  0139D6                     l6659:
  7857                           
  7858                           ;gemsecs.c: 791:    if (block != GEM_STATE_REMOTE)
  7859  0139D6  0E04               	movlw	4
  7860  0139D8  182B               	xorwf	secs_gem_state@block,w,c
  7861  0139DA  B4D8               	btfsc	status,2,c
  7862  0139DC  D008               	goto	l6663
  7863                           
  7864                           ;gemsecs.c: 792:     StartTimer(TMR_HBIO, 30000);
  7865  0139DE  0E30               	movlw	48
  7866  0139E0  6EE6               	movwf	postinc1,c
  7867  0139E2  0E75               	movlw	117
  7868  0139E4  6EE6               	movwf	postinc1,c
  7869  0139E6  0E06               	movlw	6
  7870  0139E8  6EE6               	movwf	postinc1,c
  7871  0139EA  ECAD  F0A3         	call	_StartTimer	;wreg free
  7872  0139EE                     l6663:
  7873                           
  7874                           ;gemsecs.c: 794:    block = GEM_STATE_REMOTE;
  7875  0139EE  0E04               	movlw	4
  7876  0139F0                     L27:
  7877  0139F0  6E2B               	movwf	secs_gem_state@block,c
  7878                           
  7879                           ;gemsecs.c: 795:    V.ticker = 0;
  7880  0139F2  0E00               	movlw	0
  7881  0139F4  D033               	goto	L26
  7882  0139F6                     l6667:
  7883                           
  7884                           ;gemsecs.c: 802:    block = GEM_STATE_COMM;
  7885  0139F6  0E01               	movlw	1
  7886  0139F8  6E2B               	movwf	secs_gem_state@block,c
  7887  0139FA                     l6669:
  7888                           
  7889                           ;gemsecs.c: 803:    V.ticker = 15;
  7890  0139FA  0E0F               	movlw	15
  7891  0139FC  D02F               	goto	L26
  7892  0139FE                     l6671:
  7893                           
  7894                           ;gemsecs.c: 809:    block = GEM_STATE_OFFLINE;
  7895  0139FE  0E02               	movlw	2
  7896  013A00  D7F7               	goto	L27
  7897  013A02                     l6675:
  7898                           
  7899                           ;gemsecs.c: 816:    block = GEM_STATE_ONLINE;
  7900  013A02  0E03               	movlw	3
  7901  013A04  D7F5               	goto	L27
  7902  013A06                     l6679:
  7903                           
  7904                           ;gemsecs.c: 820:    if (block == GEM_STATE_DISABLE) {
  7905  013A06  502B               	movf	secs_gem_state@block,w,c
  7906  013A08  B4D8               	btfsc	status,2,c
  7907  013A0A  D7F5               	goto	l6667
  7908  013A0C  D03E               	goto	l6711
  7909  013A0E                     l6687:
  7910                           
  7911                           ;stkvar	_function @ sp[(0)+-2]
  7912  013A0E  0EFE               	movlw	-2
  7913  013A10  50E3               	movf	plusw1,w,c
  7914  013A12  6E47               	movwf	btemp+10,c
  7915  013A14  6A48               	clrf	btemp+11,c
  7916                           
  7917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7918                           ; Switch size 1, requested type "simple"
  7919                           ; Number of cases is 1, Range of values is 0 to 0
  7920                           ; switch strategies available:
  7921                           ; Name         Instructions Cycles
  7922                           ; simple_byte            4     3 (average)
  7923                           ;	Chosen strategy is simple_byte
  7924  013A16  5048               	movf	btemp+11,w,c
  7925  013A18  0A00               	xorlw	0	; case 0
  7926  013A1A  A4D8               	btfss	status,2,c
  7927  013A1C  D7F4               	goto	l6679
  7928                           
  7929                           ; Switch size 1, requested type "simple"
  7930                           ; Number of cases is 4, Range of values is 2 to 18
  7931                           ; switch strategies available:
  7932                           ; Name         Instructions Cycles
  7933                           ; simple_byte           13     7 (average)
  7934                           ;	Chosen strategy is simple_byte
  7935  013A1E  5047               	movf	btemp+10,w,c
  7936  013A20  0A02               	xorlw	2	; case 2
  7937  013A22  B4D8               	btfsc	status,2,c
  7938  013A24  D7D8               	goto	l6659
  7939  013A26  0A0C               	xorlw	12	; case 14
  7940  013A28  B4D8               	btfsc	status,2,c
  7941  013A2A  D7E5               	goto	l6667
  7942  013A2C  0A1E               	xorlw	30	; case 16
  7943  013A2E  B4D8               	btfsc	status,2,c
  7944  013A30  D7E6               	goto	l6671
  7945  013A32  0A02               	xorlw	2	; case 18
  7946  013A34  B4D8               	btfsc	status,2,c
  7947  013A36  D7E5               	goto	l6675
  7948  013A38  D7E6               	goto	l6679
  7949  013A3A                     l6689:
  7950                           
  7951                           ;gemsecs.c: 830:    block = GEM_STATE_ALARM;
  7952  013A3A  0E05               	movlw	5
  7953  013A3C  6E2B               	movwf	secs_gem_state@block,c
  7954                           
  7955                           ;gemsecs.c: 831:    if (V.ticker != 45)
  7956  013A3E  0061  F48F  FFE8   	movff	_V+301,wreg	;volatile
  7957  013A44  0A2D               	xorlw	45
  7958  013A46  A4D8               	btfss	status,2,c
  7959  013A48  D7D8               	goto	l6669
  7960  013A4A  D01F               	goto	l6711
  7961  013A4C                     l6695:
  7962                           
  7963                           ;gemsecs.c: 839:    block = GEM_STATE_ERROR;
  7964  013A4C  0E06               	movlw	6
  7965  013A4E  D7F6               	goto	L28
  7966  013A50                     l6701:
  7967                           
  7968                           ;gemsecs.c: 846:   if (block == GEM_STATE_DISABLE) {
  7969  013A50  502B               	movf	secs_gem_state@block,w,c
  7970  013A52  A4D8               	btfss	status,2,c
  7971  013A54  D01A               	goto	l6711
  7972                           
  7973                           ;gemsecs.c: 847:    block = GEM_STATE_COMM;
  7974  013A56  0E01               	movlw	1
  7975  013A58  6E2B               	movwf	secs_gem_state@block,c
  7976                           
  7977                           ;gemsecs.c: 848:    V.ticker = 45;
  7978  013A5A  0E2D               	movlw	45
  7979  013A5C                     L26:
  7980  013A5C  006F FFA0  F523    	movff	wreg,_V+301	;volatile
  7981  013A62  D013               	goto	l6711
  7982  013A64                     l6709:
  7983                           
  7984                           ;stkvar	_stream @ sp[(0)+-1]
  7985  013A64  0EFF               	movlw	-1
  7986  013A66  50E3               	movf	plusw1,w,c
  7987  013A68  6E47               	movwf	btemp+10,c
  7988  013A6A  6A48               	clrf	btemp+11,c
  7989                           
  7990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7991                           ; Switch size 1, requested type "simple"
  7992                           ; Number of cases is 1, Range of values is 0 to 0
  7993                           ; switch strategies available:
  7994                           ; Name         Instructions Cycles
  7995                           ; simple_byte            4     3 (average)
  7996                           ;	Chosen strategy is simple_byte
  7997  013A6C  5048               	movf	btemp+11,w,c
  7998  013A6E  0A00               	xorlw	0	; case 0
  7999  013A70  A4D8               	btfss	status,2,c
  8000  013A72  D7EE               	goto	l6701
  8001                           
  8002                           ; Switch size 1, requested type "simple"
  8003                           ; Number of cases is 3, Range of values is 1 to 9
  8004                           ; switch strategies available:
  8005                           ; Name         Instructions Cycles
  8006                           ; simple_byte           10     6 (average)
  8007                           ;	Chosen strategy is simple_byte
  8008  013A74  5047               	movf	btemp+10,w,c
  8009  013A76  0A01               	xorlw	1	; case 1
  8010  013A78  B4D8               	btfsc	status,2,c
  8011  013A7A  D7C9               	goto	l6687
  8012  013A7C  0A04               	xorlw	4	; case 5
  8013  013A7E  B4D8               	btfsc	status,2,c
  8014  013A80  D7DC               	goto	l6689
  8015  013A82  0A0C               	xorlw	12	; case 9
  8016  013A84  B4D8               	btfsc	status,2,c
  8017  013A86  D7E2               	goto	l6695
  8018  013A88  D7E3               	goto	l6701
  8019  013A8A                     l6711:
  8020                           
  8021                           ;gemsecs.c: 853:  return(block);
  8022  013A8A  0060  F0AC  F03D   	movff	secs_gem_state@block,btemp
  8023                           
  8024                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  8025  013A90  52E5               	movf	postdec1,f,c
  8026  013A92  52E5               	movf	postdec1,f,c
  8027  013A94  0012               	return		;funcret
  8028  013A96                     __end_of_secs_gem_state:
  8029                           	opt callstack 0
  8030                           
  8031 ;; *************** function _run_checksum *****************
  8032 ;; Defined at:
  8033 ;;		line 36 in file "gemsecs.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;  byte_block      1  [STACK] unsigned char 
  8036 ;;  clear           1  [STACK] _Bool 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  2  [STACK] unsigned short 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8043 ;; Tracked objects:
  8044 ;;		On entry : 6/39
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    3
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_m_protocol
  8059 ;;		_r_protocol
  8060 ;; This function uses a reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text17
  8064  014910                     __ptext17:
  8065                           	opt callstack 0
  8066  014910                     _run_checksum:
  8067                           	opt callstack 26
  8068                           
  8069                           ;gemsecs.c: 36: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 37: {;
      +                          gemsecs.c: 38:  static uint16_t sum = 0;;gemsecs.c: 40:  if (clear)
  8070                           ;stkvar	_clear @ sp[(0)+-2]
  8071                           
  8072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8073                           ;incstack = 0
  8074  014910  0EFE               	movlw	-2
  8075  014912  50E3               	movf	plusw1,w,c
  8076  014914  B4D8               	btfsc	status,2,c
  8077  014916  D002               	goto	l6651
  8078                           
  8079                           ;gemsecs.c: 41:   sum = 0;
  8080  014918  6A25               	clrf	run_checksum@sum,c
  8081  01491A  6A26               	clrf	run_checksum@sum+1,c
  8082  01491C                     l6651:
  8083                           
  8084                           ;gemsecs.c: 43:  sum += byte_block;
  8085                           ;stkvar	_byte_block @ sp[(0)+-1]
  8086  01491C  0EFF               	movlw	-1
  8087  01491E  50E3               	movf	plusw1,w,c
  8088  014920  2625               	addwf	run_checksum@sum,f,c
  8089  014922  0E00               	movlw	0
  8090  014924  2226               	addwfc	run_checksum@sum+1,f,c
  8091                           
  8092                           ;gemsecs.c: 44:  return sum;
  8093  014926  0060  F094  F03D   	movff	run_checksum@sum,btemp
  8094  01492C  0060  F098  F03E   	movff	run_checksum@sum+1,btemp+1
  8095                           
  8096                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  8097  014932  52E5               	movf	postdec1,f,c
  8098  014934  52E5               	movf	postdec1,f,c
  8099  014936  0012               	return		;funcret
  8100  014938                     __end_of_run_checksum:
  8101                           	opt callstack 0
  8102                           
  8103 ;; *************** function _WaitMs *****************
  8104 ;; Defined at:
  8105 ;;		line 32 in file "timers.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  numMilliseco    2  [STACK] unsigned short 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1  [STACK] void 
  8112 ;; Registers used:
  8113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/3C
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8123 ;;Total ram usage:        0 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:    4
  8126 ;; This function calls:
  8127 ;;		_StartTimer
  8128 ;;		_TimerDone
  8129 ;; This function is called by:
  8130 ;;		_main
  8131 ;;		_m_protocol
  8132 ;;		_r_protocol
  8133 ;; This function uses a reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text18
  8137  014796                     __ptext18:
  8138                           	opt callstack 0
  8139  014796                     _WaitMs:
  8140                           	opt callstack 25
  8141                           
  8142                           ;timers.c: 32: void WaitMs(uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  8143                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8144                           
  8145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8146                           ;incstack = 0
  8147  014796  0EFE               	movlw	-2
  8148  014798  006F FF8F FFE6     	movff	plusw1,postinc1
  8149  01479E  006F FF8F FFE6     	movff	plusw1,postinc1
  8150  0147A4  0E00               	movlw	0
  8151  0147A6  6EE6               	movwf	postinc1,c
  8152  0147A8  ECAD  F0A3         	call	_StartTimer	;wreg free
  8153                           
  8154                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8155  0147AC  D005               	goto	l6593
  8156  0147AE                     l1884:
  8157                           
  8158                           ;timers.c: 36:   __nop();
  8159  0147AE  F000               	nop	
  8160                           
  8161                           ;timers.c: 37:   __nop();
  8162  0147B0  F000               	nop	
  8163                           
  8164                           ;timers.c: 38:   __nop();
  8165  0147B2  F000               	nop	
  8166                           
  8167                           ;timers.c: 39:   __nop();
  8168  0147B4  F000               	nop	
  8169  0147B6  0004               	clrwdt		;# 
  8170  0147B8                     l6593:
  8171                           
  8172                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8173  0147B8  0E00               	movlw	0
  8174  0147BA  6EE6               	movwf	postinc1,c
  8175  0147BC  EC03  F0A6         	call	_TimerDone	;wreg free
  8176  0147C0  503D               	movf	btemp,w,c
  8177  0147C2  B4D8               	btfsc	status,2,c
  8178  0147C4  D7F4               	goto	l1884
  8179                           
  8180                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8181  0147C6  52E5               	movf	postdec1,f,c
  8182  0147C8  52E5               	movf	postdec1,f,c
  8183  0147CA  0012               	return		;funcret
  8184  0147CC                     __end_of_WaitMs:
  8185                           	opt callstack 0
  8186                           
  8187 ;; *************** function _TimerDone *****************
  8188 ;; Defined at:
  8189 ;;		line 20 in file "timers.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  timer           1  [STACK] unsigned char 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1  [STACK] _Bool 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/3B
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8207 ;;Total ram usage:        0 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; Hardware stack levels required when called:    3
  8210 ;; This function calls:
  8211 ;;		Nothing
  8212 ;; This function is called by:
  8213 ;;		_main
  8214 ;;		_m_protocol
  8215 ;;		_r_protocol
  8216 ;;		_t_protocol
  8217 ;;		_WaitMs
  8218 ;; This function uses a reentrant model
  8219 ;;
  8220                           
  8221                           	psect	text19
  8222  014C06                     __ptext19:
  8223                           	opt callstack 0
  8224  014C06                     _TimerDone:
  8225                           	opt callstack 26
  8226                           
  8227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8228                           ;incstack = 0
  8229  014C06  0004               	clrwdt		;# 
  8230                           
  8231                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  8232                           ;stkvar	_timer @ sp[(0)+-1]
  8233  014C08  0EFF               	movlw	-1
  8234  014C0A  50E3               	movf	plusw1,w,c
  8235  014C0C  0D02               	mullw	2
  8236  014C0E  50F3               	movf	prodl,w,c
  8237  014C10  0FAA               	addlw	low _tickCount
  8238  014C12  6ED9               	movwf	fsr2l,c
  8239  014C14  6ADA               	clrf	fsr2h,c
  8240  014C16  50DE               	movf	postinc2,w,c
  8241  014C18  10DE               	iorwf	postinc2,w,c
  8242  014C1A  A4D8               	btfss	status,2,c
  8243  014C1C  D002               	goto	l6155
  8244                           
  8245                           ;timers.c: 24:   return 1;
  8246  014C1E  0E01               	movlw	1
  8247  014C20  D001               	goto	L29
  8248  014C22                     l6155:
  8249                           
  8250                           ;timers.c: 26:  return 0;
  8251  014C22  0E00               	movlw	0
  8252  014C24                     L29:
  8253  014C24  6E3D               	movwf	btemp,c
  8254                           
  8255                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8256  014C26  52E5               	movf	postdec1,f,c
  8257  014C28  0012               	return		;funcret
  8258  014C2A                     __end_of_TimerDone:
  8259                           	opt callstack 0
  8260                           
  8261 ;; *************** function _StartTimer *****************
  8262 ;; Defined at:
  8263 ;;		line 12 in file "timers.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  timer           1  [STACK] unsigned char 
  8266 ;;  count           2  [STACK] unsigned short 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1  [STACK] void 
  8271 ;; Registers used:
  8272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/3B
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;Total ram usage:        0 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    3
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_main
  8289 ;;		_m_protocol
  8290 ;;		_r_protocol
  8291 ;;		_t_protocol
  8292 ;;		_secs_gem_state
  8293 ;;		_WaitMs
  8294 ;; This function uses a reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text20
  8298  01475A                     __ptext20:
  8299                           	opt callstack 0
  8300  01475A                     _StartTimer:
  8301                           	opt callstack 26
  8302                           
  8303                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  8304                           ;stkvar	_count @ sp[(0)+-3]
  8305                           
  8306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8307                           ;incstack = 0
  8308  01475A  0EFD               	movlw	-3
  8309  01475C  006F FF8C  F047    	movff	plusw1,btemp+10
  8310  014762  0EFE               	movlw	-2
  8311  014764  006F FF8C  F048    	movff	plusw1,btemp+11
  8312  01476A  90D8               	bcf	status,0,c
  8313  01476C  3447               	rlcf	btemp+10,w,c
  8314  01476E  6E45               	movwf	btemp+8,c
  8315  014770  3448               	rlcf	btemp+11,w,c
  8316  014772  6E46               	movwf	btemp+9,c
  8317                           
  8318                           ;stkvar	_timer @ sp[(0)+-1]
  8319  014774  0EFF               	movlw	-1
  8320  014776  50E3               	movf	plusw1,w,c
  8321  014778  0D02               	mullw	2
  8322  01477A  50F3               	movf	prodl,w,c
  8323  01477C  0FAA               	addlw	low _tickCount
  8324  01477E  6ED9               	movwf	fsr2l,c
  8325  014780  6ADA               	clrf	fsr2h,c
  8326  014782  0060  F117  FFDE   	movff	btemp+8,postinc2
  8327  014788  0060  F11B  FFDD   	movff	btemp+9,postdec2
  8328                           
  8329                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  8330  01478E  52E5               	movf	postdec1,f,c
  8331  014790  52E5               	movf	postdec1,f,c
  8332  014792  52E5               	movf	postdec1,f,c
  8333  014794  0012               	return		;funcret
  8334  014796                     __end_of_StartTimer:
  8335                           	opt callstack 0
  8336                           
  8337 ;; *************** function _UART2_is_rx_ready *****************
  8338 ;; Defined at:
  8339 ;;		line 137 in file "mcc_generated_files/uart2.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;		None
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1  [STACK] unsigned char 
  8346 ;; Registers used:
  8347 ;;		btemp
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/3C
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8357 ;;Total ram usage:        0 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    3
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		_m_protocol
  8364 ;; This function uses a reentrant model
  8365 ;;
  8366                           
  8367                           	psect	text21
  8368  014EC6                     __ptext21:
  8369                           	opt callstack 0
  8370  014EC6                     _UART2_is_rx_ready:
  8371                           	opt callstack 26
  8372                           
  8373                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  8374                           
  8375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8376                           ;incstack = 0
  8377  014EC6  0060  F0C4  F03D   	movff	_uart2RxCount,btemp	;volatile
  8378                           
  8379                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  8380  014ECC  0012               	return		;funcret
  8381  014ECE                     __end_of_UART2_is_rx_ready:
  8382                           	opt callstack 0
  8383                           
  8384 ;; *************** function _UART2_Read *****************
  8385 ;; Defined at:
  8386 ;;		line 152 in file "mcc_generated_files/uart2.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;		None
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  readValue       1  [STACK] unsigned char 
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1  [STACK] unsigned char 
  8393 ;; Registers used:
  8394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/3C
  8397 ;;		On exit  : 3F/39
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8404 ;;Total ram usage:        0 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    3
  8407 ;; This function calls:
  8408 ;;		Nothing
  8409 ;; This function is called by:
  8410 ;;		_m_protocol
  8411 ;; This function uses a reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text22
  8415  0146DE                     __ptext22:
  8416                           	opt callstack 0
  8417  0146DE                     _UART2_Read:
  8418                           	opt callstack 0
  8419                           
  8420                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8421  0146DE  52E6               	movf	postinc1,f,c
  8422  0146E0                     
  8423                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  8424                           
  8425                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  8426  0146E0  5031               	movf	_uart2RxCount,w,c	;volatile
  8427  0146E2  B4D8               	btfsc	status,2,c
  8428  0146E4  D7FD               	goto	l6555
  8429                           
  8430                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  8431  0146E6  0E00               	movlw	low _uart2RxBuffer
  8432  0146E8  2432               	addwf	_uart2RxTail,w,c	;volatile
  8433  0146EA  6ED9               	movwf	fsr2l,c
  8434  0146EC  6ADA               	clrf	fsr2h,c
  8435  0146EE  0E02               	movlw	high _uart2RxBuffer
  8436  0146F0  22DA               	addwfc	fsr2h,f,c
  8437  0146F2  50DF               	movf	indf2,w,c
  8438  0146F4  6E48               	movwf	btemp+11,c
  8439                           
  8440                           ;stkvar	_readValue @ sp[(-1)+0]
  8441  0146F6  0EFF               	movlw	-1
  8442  0146F8  0060  F123  FFE3   	movff	btemp+11,plusw1
  8443  0146FE  2A32               	incf	_uart2RxTail,f,c	;volatile
  8444                           
  8445                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  8446  014700  0E3F               	movlw	63
  8447  014702  6432               	cpfsgt	_uart2RxTail,c
  8448  014704  D001               	goto	l692
  8449                           
  8450                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  8451  014706  6A32               	clrf	_uart2RxTail,c	;volatile
  8452  014708                     l692:
  8453                           
  8454                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  8455  014708  0139               	movlb	57	; () banked
  8456  01470A  9596               	bcf	150,2,b	;volatile
  8457                           
  8458                           ; BSR set to: 57
  8459                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  8460  01470C  0631               	decf	_uart2RxCount,f,c	;volatile
  8461                           
  8462                           ; BSR set to: 57
  8463                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  8464  01470E  8596               	bsf	150,2,b	;volatile
  8465                           
  8466                           ; BSR set to: 57
  8467                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  8468                           ;stkvar	_readValue @ sp[(-1)+0]
  8469  014710  0EFF               	movlw	-1
  8470  014712  006F FF8C  F03D    	movff	plusw1,btemp
  8471                           
  8472                           ; BSR set to: 57
  8473                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8474  014718  52E5               	movf	postdec1,f,c
  8475  01471A  0012               	return		;funcret
  8476  01471C                     __end_of_UART2_Read:
  8477                           	opt callstack 0
  8478                           
  8479 ;; *************** function _UART1_is_rx_ready *****************
  8480 ;; Defined at:
  8481 ;;		line 146 in file "mcc_generated_files/uart1.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1  [STACK] unsigned char 
  8488 ;; Registers used:
  8489 ;;		btemp
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/3C
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8499 ;;Total ram usage:        0 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    3
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		_m_protocol
  8506 ;;		_r_protocol
  8507 ;;		_t_protocol
  8508 ;; This function uses a reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text23
  8512  014ECE                     __ptext23:
  8513                           	opt callstack 0
  8514  014ECE                     _UART1_is_rx_ready:
  8515                           	opt callstack 26
  8516                           
  8517                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  8518                           
  8519                           ; BSR set to: 57
  8520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8521                           ;incstack = 0
  8522  014ECE  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  8523                           
  8524                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  8525  014ED4  0012               	return		;funcret
  8526  014ED6                     __end_of_UART1_is_rx_ready:
  8527                           	opt callstack 0
  8528                           
  8529 ;; *************** function _UART1_Read *****************
  8530 ;; Defined at:
  8531 ;;		line 161 in file "mcc_generated_files/uart1.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  readValue       1  [STACK] unsigned char 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1  [STACK] unsigned char 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/3C
  8542 ;;		On exit  : 3F/39
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8549 ;;Total ram usage:        0 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    3
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_m_protocol
  8556 ;;		_r_protocol
  8557 ;;		_t_protocol
  8558 ;; This function uses a reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text24
  8562  01471C                     __ptext24:
  8563                           	opt callstack 0
  8564  01471C                     _UART1_Read:
  8565                           	opt callstack 0
  8566                           
  8567                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8568  01471C  52E6               	movf	postinc1,f,c
  8569  01471E                     
  8570                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  8571                           
  8572                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  8573  01471E  5037               	movf	_uart1RxCount,w,c	;volatile
  8574  014720  B4D8               	btfsc	status,2,c
  8575  014722  D7FD               	goto	l6531
  8576                           
  8577                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  8578  014724  0E80               	movlw	low _uart1RxBuffer
  8579  014726  2438               	addwf	_uart1RxTail,w,c	;volatile
  8580  014728  6ED9               	movwf	fsr2l,c
  8581  01472A  6ADA               	clrf	fsr2h,c
  8582  01472C  0E02               	movlw	high _uart1RxBuffer
  8583  01472E  22DA               	addwfc	fsr2h,f,c
  8584  014730  50DF               	movf	indf2,w,c
  8585  014732  6E48               	movwf	btemp+11,c
  8586                           
  8587                           ;stkvar	_readValue @ sp[(-1)+0]
  8588  014734  0EFF               	movlw	-1
  8589  014736  0060  F123  FFE3   	movff	btemp+11,plusw1
  8590  01473C  2A38               	incf	_uart1RxTail,f,c	;volatile
  8591                           
  8592                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  8593  01473E  0E3F               	movlw	63
  8594  014740  6438               	cpfsgt	_uart1RxTail,c
  8595  014742  D001               	goto	l572
  8596                           
  8597                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  8598  014744  6A38               	clrf	_uart1RxTail,c	;volatile
  8599  014746                     l572:
  8600                           
  8601                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  8602  014746  0139               	movlb	57	; () banked
  8603  014748  9793               	bcf	147,3,b	;volatile
  8604                           
  8605                           ; BSR set to: 57
  8606                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  8607  01474A  0637               	decf	_uart1RxCount,f,c	;volatile
  8608                           
  8609                           ; BSR set to: 57
  8610                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  8611  01474C  8793               	bsf	147,3,b	;volatile
  8612                           
  8613                           ; BSR set to: 57
  8614                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  8615                           ;stkvar	_readValue @ sp[(-1)+0]
  8616  01474E  0EFF               	movlw	-1
  8617  014750  006F FF8C  F03D    	movff	plusw1,btemp
  8618                           
  8619                           ; BSR set to: 57
  8620                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8621  014756  52E5               	movf	postdec1,f,c
  8622  014758  0012               	return		;funcret
  8623  01475A                     __end_of_UART1_Read:
  8624                           	opt callstack 0
  8625                           
  8626 ;; *************** function _init_display *****************
  8627 ;; Defined at:
  8628 ;;		line 35 in file "eadog.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;		None
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;		None
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1  [STACK] void 
  8635 ;; Registers used:
  8636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/3C
  8639 ;;		On exit  : 3F/3D
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8646 ;;Total ram usage:        0 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    5
  8649 ;; This function calls:
  8650 ;;		_ringBufS_init
  8651 ;;		_send_lcd_cmd
  8652 ;;		_send_lcd_cmd_long
  8653 ;;		_wdtdelay
  8654 ;; This function is called by:
  8655 ;;		_main
  8656 ;; This function uses a reentrant model
  8657 ;;
  8658                           
  8659                           	psect	text25
  8660  013818                     __ptext25:
  8661                           	opt callstack 0
  8662  013818                     _init_display:
  8663                           	opt callstack 25
  8664                           
  8665                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  8666                           
  8667                           ; BSR set to: 57
  8668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8669                           ;incstack = 0
  8670  013818  0E43               	movlw	low _ring_buf1
  8671  01381A  0100               	movlb	0	; () banked
  8672  01381C  6FCB               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8673  01381E  0E03               	movlw	high _ring_buf1
  8674  013820  6FCC               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8675                           
  8676                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  8677  013822  0E00               	movlw	low _ring_buf2
  8678  013824  6FC9               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8679  013826  0E03               	movlw	high _ring_buf2
  8680  013828  6FCA               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  8684  01382A  0060  F32F  FFE6   	movff	_spi_link+6,postinc1
  8685  013830  0060  F333  FFE6   	movff	_spi_link+7,postinc1
  8686  013836  ECC4  F0A4         	call	_ringBufS_init	;wreg free
  8687                           
  8688                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  8689  01383A  0060  F327  FFE6   	movff	_spi_link+4,postinc1
  8690  013840  0060  F32B  FFE6   	movff	_spi_link+5,postinc1
  8691  013846  ECC4  F0A4         	call	_ringBufS_init	;wreg free
  8692                           
  8693                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  8694  01384A  80BE               	bsf	16318,0,c	;volatile
  8695  01384C  84BC               	bsf	16316,2,c	;volatile
  8696                           
  8697                           ;eadog.c: 44:  wdtdelay(350000);
  8698  01384E  0E30               	movlw	48
  8699  013850  6EE6               	movwf	postinc1,c
  8700  013852  0E57               	movlw	87
  8701  013854  6EE6               	movwf	postinc1,c
  8702  013856  0E05               	movlw	5
  8703  013858  6EE6               	movwf	postinc1,c
  8704  01385A  0E00               	movlw	0
  8705  01385C  6EE6               	movwf	postinc1,c
  8706  01385E  EC4B  F0A1         	call	_wdtdelay	;wreg free
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  8710  013862  0E39               	movlw	57
  8711  013864  6EE6               	movwf	postinc1,c
  8712  013866  ECB0  F0A4         	call	_send_lcd_cmd	;wreg free
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  8716  01386A  0E1D               	movlw	29
  8717  01386C  6EE6               	movwf	postinc1,c
  8718  01386E  ECB0  F0A4         	call	_send_lcd_cmd	;wreg free
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  8722  013872  0E50               	movlw	80
  8723  013874  6EE6               	movwf	postinc1,c
  8724  013876  ECB0  F0A4         	call	_send_lcd_cmd	;wreg free
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  8728  01387A  0E6C               	movlw	108
  8729  01387C  6EE6               	movwf	postinc1,c
  8730  01387E  ECB0  F0A4         	call	_send_lcd_cmd	;wreg free
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  8734  013882  0E76               	movlw	118
  8735  013884  6EE6               	movwf	postinc1,c
  8736  013886  ECB0  F0A4         	call	_send_lcd_cmd	;wreg free
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  8740  01388A  0E38               	movlw	56
  8741  01388C  6EE6               	movwf	postinc1,c
  8742  01388E  EC9C  F0A4         	call	_send_lcd_cmd_long	;wreg free
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  8746  013892  0E0F               	movlw	15
  8747  013894  6EE6               	movwf	postinc1,c
  8748  013896  ECB0  F0A4         	call	_send_lcd_cmd	;wreg free
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  8752  01389A  0E01               	movlw	1
  8753  01389C  6EE6               	movwf	postinc1,c
  8754  01389E  EC9C  F0A4         	call	_send_lcd_cmd_long	;wreg free
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  8758  0138A2  0E02               	movlw	2
  8759  0138A4  6EE6               	movwf	postinc1,c
  8760  0138A6  ECB0  F0A4         	call	_send_lcd_cmd	;wreg free
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  8764  0138AA  0E06               	movlw	6
  8765  0138AC  6EE6               	movwf	postinc1,c
  8766  0138AE  ECB0  F0A4         	call	_send_lcd_cmd	;wreg free
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;eadog.c: 55:  wdtdelay(30);
  8770  0138B2  0E1E               	movlw	30
  8771  0138B4  6EE6               	movwf	postinc1,c
  8772  0138B6  0E00               	movlw	0
  8773  0138B8  6EE6               	movwf	postinc1,c
  8774  0138BA  0E00               	movlw	0
  8775  0138BC  6EE6               	movwf	postinc1,c
  8776  0138BE  0E00               	movlw	0
  8777  0138C0  6EE6               	movwf	postinc1,c
  8778  0138C2  EC4B  F0A1         	call	_wdtdelay	;wreg free
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  8782  0138C6  0E02               	movlw	2
  8783  0138C8  013D               	movlb	61	; () banked
  8784  0138CA  6F16               	movwf	22,b	;volatile
  8785                           
  8786                           ; BSR set to: 61
  8787                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  8788  0138CC  0E40               	movlw	64
  8789  0138CE  6F15               	movwf	21,b	;volatile
  8790                           
  8791                           ; BSR set to: 61
  8792                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  8793  0138D0  0E83               	movlw	131
  8794  0138D2  6F14               	movwf	20,b	;volatile
  8795                           
  8796                           ; BSR set to: 61
  8797                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  8798  0138D4  931A               	bcf	26,1,b	;volatile
  8799                           
  8800                           ; BSR set to: 61
  8801                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  8802  0138D6  0E3F               	movlw	-193
  8803  0138D8  013B               	movlb	59	; () banked
  8804  0138DA  17FD               	andwf	253,f,b	;volatile
  8805                           
  8806                           ; BSR set to: 59
  8807                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  8808  0138DC  9BFD               	bcf	253,5,b	;volatile
  8809                           
  8810                           ; BSR set to: 59
  8811                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  8812  0138DE  51FD               	movf	253,w,b	;volatile
  8813  0138E0  0BF9               	andlw	-7
  8814  0138E2  0902               	iorlw	2
  8815  0138E4  6FFD               	movwf	253,b	;volatile
  8816                           
  8817                           ; BSR set to: 59
  8818                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  8819  0138E6  0EE7               	movlw	-25
  8820  0138E8  17FD               	andwf	253,f,b	;volatile
  8821                           
  8822                           ; BSR set to: 59
  8823                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  8824  0138EA  81FD               	bsf	253,0,b	;volatile
  8825                           
  8826                           ; BSR set to: 59
  8827                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  8828  0138EC  0E43               	movlw	low _ring_buf1
  8829  0138EE  6FF9               	movwf	249,b	;volatile
  8830  0138F0  0E03               	movlw	high _ring_buf1
  8831  0138F2  6FFA               	movwf	250,b	;volatile
  8832  0138F4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8833  0138F6  6FFB               	movwf	251,b	;volatile
  8834                           
  8835                           ; BSR set to: 59
  8836                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  8837  0138F8  9BFC               	bcf	252,5,b	;volatile
  8838                           
  8839                           ; BSR set to: 59
  8840                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  8841  0138FA  013D               	movlb	61	; () banked
  8842  0138FC  831A               	bsf	26,1,b	;volatile
  8843                           
  8844                           ; BSR set to: 61
  8845                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  8846  0138FE  90BE               	bcf	16318,0,c	;volatile
  8847                           
  8848                           ; BSR set to: 61
  8849                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8850  013900  0012               	return		;funcret
  8851  013902                     __end_of_init_display:
  8852                           	opt callstack 0
  8853                           
  8854 ;; *************** function _send_lcd_cmd_long *****************
  8855 ;; Defined at:
  8856 ;;		line 97 in file "eadog.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  cmd             1  [STACK] unsigned char 
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;		None
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  1  [STACK] void 
  8863 ;; Registers used:
  8864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8865 ;; Tracked objects:
  8866 ;;		On entry : 3F/0
  8867 ;;		On exit  : 3F/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8874 ;;Total ram usage:        0 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    4
  8877 ;; This function calls:
  8878 ;;		_SPI1_Exchange8bit
  8879 ;;		_wdtdelay
  8880 ;; This function is called by:
  8881 ;;		_init_display
  8882 ;; This function uses a reentrant model
  8883 ;;
  8884                           
  8885                           	psect	text26
  8886  014938                     __ptext26:
  8887                           	opt callstack 0
  8888  014938                     _send_lcd_cmd_long:
  8889                           	opt callstack 25
  8890                           
  8891                           ; BSR set to: 61
  8892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8893                           ;incstack = 0
  8894                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  8895  014938  92BC               	bcf	16316,1,c	;volatile
  8896                           
  8897                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  8898  01493A  94BC               	bcf	16316,2,c	;volatile
  8899                           
  8900                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  8901                           ;stkvar	_cmd @ sp[(0)+-1]
  8902  01493C  0EFF               	movlw	-1
  8903  01493E  50E3               	movf	plusw1,w,c
  8904  014940  6EE6               	movwf	postinc1,c
  8905  014942  EC9D  F0A6         	call	_SPI1_Exchange8bit	;wreg free
  8906                           
  8907                           ; BSR set to: 57
  8908                           ;eadog.c: 102:  wdtdelay(800);
  8909  014946  0E20               	movlw	32
  8910  014948  6EE6               	movwf	postinc1,c
  8911  01494A  0E03               	movlw	3
  8912  01494C  6EE6               	movwf	postinc1,c
  8913  01494E  0E00               	movlw	0
  8914  014950  6EE6               	movwf	postinc1,c
  8915  014952  0E00               	movlw	0
  8916  014954  6EE6               	movwf	postinc1,c
  8917  014956  EC4B  F0A1         	call	_wdtdelay	;wreg free
  8918                           
  8919                           ; BSR set to: 0
  8920  01495A  82BC               	bsf	16316,1,c	;volatile
  8921                           
  8922                           ; BSR set to: 0
  8923                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8924  01495C  52E5               	movf	postdec1,f,c
  8925  01495E  0012               	return		;funcret
  8926  014960                     __end_of_send_lcd_cmd_long:
  8927                           	opt callstack 0
  8928                           
  8929 ;; *************** function _send_lcd_cmd *****************
  8930 ;; Defined at:
  8931 ;;		line 85 in file "eadog.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  cmd             1  [STACK] unsigned char 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1  [STACK] void 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8940 ;; Tracked objects:
  8941 ;;		On entry : 3F/0
  8942 ;;		On exit  : 3F/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8949 ;;Total ram usage:        0 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    4
  8952 ;; This function calls:
  8953 ;;		_SPI1_Exchange8bit
  8954 ;;		_wdtdelay
  8955 ;; This function is called by:
  8956 ;;		_init_display
  8957 ;; This function uses a reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text27
  8961  014960                     __ptext27:
  8962                           	opt callstack 0
  8963  014960                     _send_lcd_cmd:
  8964                           	opt callstack 25
  8965                           
  8966                           ; BSR set to: 0
  8967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8968                           ;incstack = 0
  8969                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  8970  014960  92BC               	bcf	16316,1,c	;volatile
  8971                           
  8972                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  8973  014962  94BC               	bcf	16316,2,c	;volatile
  8974                           
  8975                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  8976                           ;stkvar	_cmd @ sp[(0)+-1]
  8977  014964  0EFF               	movlw	-1
  8978  014966  50E3               	movf	plusw1,w,c
  8979  014968  6EE6               	movwf	postinc1,c
  8980  01496A  EC9D  F0A6         	call	_SPI1_Exchange8bit	;wreg free
  8981                           
  8982                           ; BSR set to: 57
  8983                           ;eadog.c: 90:  wdtdelay(30);
  8984  01496E  0E1E               	movlw	30
  8985  014970  6EE6               	movwf	postinc1,c
  8986  014972  0E00               	movlw	0
  8987  014974  6EE6               	movwf	postinc1,c
  8988  014976  0E00               	movlw	0
  8989  014978  6EE6               	movwf	postinc1,c
  8990  01497A  0E00               	movlw	0
  8991  01497C  6EE6               	movwf	postinc1,c
  8992  01497E  EC4B  F0A1         	call	_wdtdelay	;wreg free
  8993                           
  8994                           ; BSR set to: 0
  8995  014982  82BC               	bsf	16316,1,c	;volatile
  8996                           
  8997                           ; BSR set to: 0
  8998                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8999  014984  52E5               	movf	postdec1,f,c
  9000  014986  0012               	return		;funcret
  9001  014988                     __end_of_send_lcd_cmd:
  9002                           	opt callstack 0
  9003                           
  9004 ;; *************** function _SPI1_Exchange8bit *****************
  9005 ;; Defined at:
  9006 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  data            1  [STACK] unsigned char 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1  [STACK] unsigned char 
  9013 ;; Registers used:
  9014 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 3F/39
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9024 ;;Total ram usage:        0 bytes
  9025 ;; Hardware stack levels used:    1
  9026 ;; Hardware stack levels required when called:    3
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		_send_lcd_cmd
  9031 ;;		_send_lcd_cmd_long
  9032 ;; This function uses a reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text28
  9036  014D3A                     __ptext28:
  9037                           	opt callstack 0
  9038  014D3A                     _SPI1_Exchange8bit:
  9039                           	opt callstack 25
  9040                           
  9041                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9042                           
  9043                           ; BSR set to: 0
  9044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9045                           ;incstack = 0
  9046  014D3A  0E01               	movlw	1
  9047  014D3C  013D               	movlb	61	; () banked
  9048  014D3E  6F12               	movwf	18,b	;volatile
  9049                           
  9050                           ; BSR set to: 61
  9051                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9052                           ;stkvar	_data @ sp[(0)+-1]
  9053  014D40  0EFF               	movlw	-1
  9054  014D42  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9055  014D48                     l851:
  9056                           
  9057                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9058  014D48  0139               	movlb	57	; () banked
  9059  014D4A  A9A2               	btfss	162,4,b	;volatile
  9060  014D4C  D7FD               	goto	l851
  9061                           
  9062                           ; BSR set to: 57
  9063                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9064  014D4E  006F F440  F03D    	movff	15632,btemp	;volatile
  9065                           
  9066                           ; BSR set to: 57
  9067                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9068  014D54  52E5               	movf	postdec1,f,c
  9069  014D56  0012               	return		;funcret
  9070  014D58                     __end_of_SPI1_Exchange8bit:
  9071                           	opt callstack 0
  9072                           
  9073 ;; *************** function _ringBufS_init *****************
  9074 ;; Defined at:
  9075 ;;		line 22 in file "ringbufs.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  _this           2  [STACK] PTR volatile struct ring
  9078 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;		None
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1  [STACK] void 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9094 ;;Total ram usage:        0 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    4
  9097 ;; This function calls:
  9098 ;;		_memset
  9099 ;; This function is called by:
  9100 ;;		_init_display
  9101 ;; This function uses a reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text29
  9105  014988                     __ptext29:
  9106                           	opt callstack 0
  9107  014988                     _ringBufS_init:
  9108                           	opt callstack 25
  9109                           
  9110                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9111                           
  9112                           ; BSR set to: 57
  9113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9114                           ;incstack = 0
  9115  014988  0E43               	movlw	67
  9116  01498A  6EE6               	movwf	postinc1,c
  9117  01498C  0E00               	movlw	0
  9118  01498E  6EE6               	movwf	postinc1,c
  9119  014990  0E00               	movlw	0
  9120  014992  6EE6               	movwf	postinc1,c
  9121  014994  0E00               	movlw	0
  9122  014996  6EE6               	movwf	postinc1,c
  9123                           
  9124                           ;stkvar	__this @ sp[(-4)+-2]
  9125  014998  0EFA               	movlw	-6
  9126  01499A  006F FF8F FFE6     	movff	plusw1,postinc1
  9127  0149A0  006F FF8F FFE6     	movff	plusw1,postinc1
  9128  0149A6  EC67  F091         	call	_memset	;wreg free
  9129                           
  9130                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9131  0149AA  52E5               	movf	postdec1,f,c
  9132  0149AC  52E5               	movf	postdec1,f,c
  9133  0149AE  0012               	return		;funcret
  9134  0149B0                     __end_of_ringBufS_init:
  9135                           	opt callstack 0
  9136                           
  9137 ;; *************** function _hb_message *****************
  9138 ;; Defined at:
  9139 ;;		line 543 in file "gemsecs.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;		None
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;		None
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1  [STACK] void 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/3B
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9157 ;;Total ram usage:        0 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    3
  9160 ;; This function calls:
  9161 ;;		Nothing
  9162 ;; This function is called by:
  9163 ;;		_main
  9164 ;; This function uses a reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text30
  9168  01439A                     __ptext30:
  9169                           	opt callstack 0
  9170  01439A                     _hb_message:
  9171                           	opt callstack 27
  9172                           
  9173                           ;gemsecs.c: 545:  V.ping++;
  9174                           
  9175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9176                           ;incstack = 0
  9177  01439A  EE21  F0F6         	lfsr	2,_V+256	;volatile
  9178  01439E  2ADE               	incf	postinc2,f,c
  9179  0143A0  0E00               	movlw	0
  9180  0143A2  22DD               	addwfc	postdec2,f,c
  9181                           
  9182                           ;gemsecs.c: 546:  V.s_state = SEQ_STATE_TX;
  9183  0143A4  0E02               	movlw	2
  9184  0143A6  006F FFA0  F3F6    	movff	wreg,_V
  9185                           
  9186                           ;gemsecs.c: 547:  V.failed_send = 0;
  9187  0143AC  EE21  F0F8         	lfsr	2,_V+258	;volatile
  9188  0143B0  0E87               	movlw	-121
  9189  0143B2  16DF               	andwf	223,f,c
  9190                           
  9191                           ;gemsecs.c: 548:  V.t_l_state = LINK_STATE_IDLE;
  9192  0143B4  0E00               	movlw	0
  9193  0143B6  006F FFA0  F3FB    	movff	wreg,_V+5	;volatile
  9194                           
  9195                           ;gemsecs.c: 549:  if (V.msg_error == MSG_ERROR_NONE) {
  9196  0143BC  EE21  F0EC         	lfsr	2,_V+246	;volatile
  9197  0143C0  50DF               	movf	indf2,w,c
  9198  0143C2  A4D8               	btfss	status,2,c
  9199  0143C4  D009               	goto	l1770
  9200                           
  9201                           ;gemsecs.c: 550:   V.stream = 1;
  9202  0143C6  0E01               	movlw	1
  9203  0143C8  006F FFA0  F4E8    	movff	wreg,_V+242	;volatile
  9204                           
  9205                           ;gemsecs.c: 551:   V.function = 2;
  9206  0143CE  0E02               	movlw	2
  9207  0143D0  006F FFA0  F4E9    	movff	wreg,_V+243	;volatile
  9208                           
  9209                           ;gemsecs.c: 552:  } else {
  9210  0143D6  0012               	return	
  9211  0143D8                     l1770:
  9212                           
  9213                           ;gemsecs.c: 553:   V.stream = 1;
  9214  0143D8  0E01               	movlw	1
  9215  0143DA  006F FFA0  F4E8    	movff	wreg,_V+242	;volatile
  9216                           
  9217                           ;gemsecs.c: 554:   V.function = 14;
  9218  0143E0  0E0E               	movlw	14
  9219  0143E2  006F FFA0  F4E9    	movff	wreg,_V+243	;volatile
  9220                           
  9221                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9222  0143E8  0012               	return		;funcret
  9223  0143EA                     __end_of_hb_message:
  9224                           	opt callstack 0
  9225                           
  9226 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9227 ;; Defined at:
  9228 ;;		line 223 in file "eadog.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  r               1  [STACK] unsigned char 
  9231 ;;  c               1  [STACK] unsigned char 
  9232 ;;  strPtr          2  [STACK] PTR unsigned char 
  9233 ;;		 -> V(302), 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1  [STACK] void 
  9238 ;; Registers used:
  9239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  9240 ;; Tracked objects:
  9241 ;;		On entry : 3F/0
  9242 ;;		On exit  : 3F/3B
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9249 ;;Total ram usage:        0 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:   13
  9252 ;; This function calls:
  9253 ;;		_eaDogM_WriteString
  9254 ;;		_send_lcd_cmd_dma
  9255 ;; This function is called by:
  9256 ;;		_main
  9257 ;; This function uses a reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text31
  9261  0147CC                     __ptext31:
  9262                           	opt callstack 0
  9263  0147CC                     _eaDogM_WriteStringAtPos:
  9264                           	opt callstack 17
  9265                           
  9266                           ;eadog.c: 223: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           224: {;eadog.c: 225:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9267                           ;stkvar	_c @ sp[(0)+-2]
  9268                           
  9269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9270                           ;incstack = 0
  9271  0147CC  0EFE               	movlw	-2
  9272  0147CE  006F FF8C  F048    	movff	plusw1,btemp+11
  9273                           
  9274                           ;stkvar	_r @ sp[(0)+-1]
  9275  0147D4  0EFF               	movlw	-1
  9276  0147D6  50E3               	movf	plusw1,w,c
  9277  0147D8  0D10               	mullw	16
  9278  0147DA  50F3               	movf	prodl,w,c
  9279  0147DC  2448               	addwf	btemp+11,w,c
  9280  0147DE  0F80               	addlw	128
  9281  0147E0  6EE6               	movwf	postinc1,c
  9282  0147E2  EC79  F0A1         	call	_send_lcd_cmd_dma	;wreg free
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;eadog.c: 226:  eaDogM_WriteString(strPtr);
  9286                           ;stkvar	_strPtr @ sp[(0)+-4]
  9287  0147E6  0EFC               	movlw	-4
  9288  0147E8  006F FF8F FFE6     	movff	plusw1,postinc1
  9289  0147EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9290  0147F4  ECF6  F09D         	call	_eaDogM_WriteString	;wreg free
  9291                           
  9292                           ; BSR set to: 59
  9293                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9294  0147F8  52E5               	movf	postdec1,f,c
  9295  0147FA  52E5               	movf	postdec1,f,c
  9296  0147FC  52E5               	movf	postdec1,f,c
  9297  0147FE  52E5               	movf	postdec1,f,c
  9298  014800  0012               	return		;funcret
  9299  014802                     __end_of_eaDogM_WriteStringAtPos:
  9300                           	opt callstack 0
  9301                           
  9302 ;; *************** function _eaDogM_WriteString *****************
  9303 ;; Defined at:
  9304 ;;		line 167 in file "eadog.c"
  9305 ;; Parameters:    Size  Location     Type
  9306 ;;  strPtr          2  [STACK] PTR unsigned char 
  9307 ;;		 -> V(302), 
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;		None
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  1  [STACK] void 
  9312 ;; Registers used:
  9313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9314 ;; Tracked objects:
  9315 ;;		On entry : 3F/0
  9316 ;;		On exit  : 3F/3B
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9323 ;;Total ram usage:        0 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:   12
  9326 ;; This function calls:
  9327 ;;		_printf
  9328 ;;		_ringBufS_flush
  9329 ;;		_start_lcd
  9330 ;;		_strlen
  9331 ;;		_wait_lcd_set
  9332 ;; This function is called by:
  9333 ;;		_eaDogM_WriteStringAtPos
  9334 ;; This function uses a reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text32
  9338  013BEC                     __ptext32:
  9339                           	opt callstack 0
  9340  013BEC                     _eaDogM_WriteString:
  9341                           	opt callstack 17
  9342                           
  9343                           ; BSR set to: 59
  9344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9345                           ;incstack = 0
  9346                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  9347  013BEC  82BE               	bsf	16318,1,c	;volatile
  9348                           
  9349                           ;eadog.c: 170:  wait_lcd_set();
  9350  013BEE  EC6B  F0A7         	call	_wait_lcd_set	;wreg free
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;eadog.c: 172:  ringBufS_flush(spi_link.tx1a, 0);
  9354  013BF2  0E00               	movlw	0
  9355  013BF4  6EE6               	movwf	postinc1,c
  9356  013BF6  0060  F32F  FFE6   	movff	_spi_link+6,postinc1
  9357  013BFC  0060  F333  FFE6   	movff	_spi_link+7,postinc1
  9358  013C02  EC8C  F09F         	call	_ringBufS_flush	;wreg free
  9359  013C06  94BC               	bcf	16316,2,c	;volatile
  9360                           
  9361                           ;eadog.c: 174:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9362                           ;stkvar	_strPtr @ sp[(0)+-2]
  9363  013C08  0EFE               	movlw	-2
  9364  013C0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9365  013C10  006F FF8F FFE6     	movff	plusw1,postinc1
  9366  013C16  ECEF  F09E         	call	_strlen	;wreg free
  9367  013C1A  503E               	movf	btemp+1,w,c
  9368  013C1C  E104               	bnz	u5650
  9369  013C1E  0E41               	movlw	65
  9370  013C20  5C3D               	subwf	btemp,w,c
  9371  013C22  A0D8               	btfss	status,0,c
  9372  013C24  D010               	goto	l8803
  9373  013C26                     u5650:
  9374                           
  9375                           ;stkvar	_strPtr @ sp[(0)+-2]
  9376  013C26  0EFE               	movlw	-2
  9377  013C28  006F FF8C  F047    	movff	plusw1,btemp+10
  9378  013C2E  0EFF               	movlw	-1
  9379  013C30  006F FF8C  F048    	movff	plusw1,btemp+11
  9380  013C36  0E40               	movlw	64
  9381  013C38  2447               	addwf	btemp+10,w,c
  9382  013C3A  6ED9               	movwf	fsr2l,c
  9383  013C3C  0E00               	movlw	0
  9384  013C3E  2048               	addwfc	btemp+11,w,c
  9385  013C40  6EDA               	movwf	fsr2h,c
  9386  013C42  0E00               	movlw	0
  9387  013C44  6EDF               	movwf	indf2,c
  9388  013C46                     l8803:
  9389                           
  9390                           ;eadog.c: 175:  DMA1CON0bits.EN = 0;
  9391  013C46  013B               	movlb	59	; () banked
  9392  013C48  9FFC               	bcf	252,7,b	;volatile
  9393                           
  9394                           ; BSR set to: 59
  9395                           ;eadog.c: 176:  DMA1SSZ = strlen(strPtr);
  9396                           ;stkvar	_strPtr @ sp[(0)+-2]
  9397  013C4A  0EFE               	movlw	-2
  9398  013C4C  006F FF8F FFE6     	movff	plusw1,postinc1
  9399  013C52  006F FF8F FFE6     	movff	plusw1,postinc1
  9400  013C58  ECEF  F09E         	call	_strlen	;wreg free
  9401  013C5C  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  9402  013C62  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  9403                           
  9404                           ;eadog.c: 177:  DMA1CON0bits.EN = 1;
  9405  013C68  013B               	movlb	59	; () banked
  9406  013C6A  8FFC               	bsf	252,7,b	;volatile
  9407                           
  9408                           ; BSR set to: 59
  9409                           ;eadog.c: 178:  printf("%s", strPtr);
  9410                           ;stkvar	_strPtr @ sp[(0)+-2]
  9411  013C6C  0EFE               	movlw	-2
  9412  013C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  9413  013C74  006F FF8F FFE6     	movff	plusw1,postinc1
  9414  013C7A  0EE0               	movlw	low (STR_2+9)
  9415  013C7C  6EE6               	movwf	postinc1,c
  9416  013C7E  0EFF               	movlw	high (STR_2+9)
  9417  013C80  6EE6               	movwf	postinc1,c
  9418  013C82  0E04               	movlw	4
  9419  013C84  6EE6               	movwf	postinc1,c
  9420  013C86  ECEB  F0A0         	call	_printf	;wreg free
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;eadog.c: 179:  start_lcd();
  9424  013C8A  EC6E  F0A7         	call	_start_lcd	;wreg free
  9425                           
  9426                           ; BSR set to: 59
  9427                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9428  013C8E  52E5               	movf	postdec1,f,c
  9429  013C90  52E5               	movf	postdec1,f,c
  9430  013C92  0012               	return		;funcret
  9431  013C94                     __end_of_eaDogM_WriteString:
  9432                           	opt callstack 0
  9433                           
  9434 ;; *************** function _eaDogM_WriteCommand *****************
  9435 ;; Defined at:
  9436 ;;		line 143 in file "eadog.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  cmd             1  [STACK] unsigned char 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1  [STACK] void 
  9443 ;; Registers used:
  9444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9445 ;; Tracked objects:
  9446 ;;		On entry : 3F/3D
  9447 ;;		On exit  : 3F/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9454 ;;Total ram usage:        0 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:   13
  9457 ;; This function calls:
  9458 ;;		_send_lcd_cmd_dma
  9459 ;; This function is called by:
  9460 ;;		_main
  9461 ;; This function uses a reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text33
  9465  014E4C                     __ptext33:
  9466                           	opt callstack 0
  9467  014E4C                     _eaDogM_WriteCommand:
  9468                           	opt callstack 17
  9469                           
  9470                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  9471                           ;stkvar	_cmd @ sp[(0)+-1]
  9472                           
  9473                           ; BSR set to: 59
  9474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9475                           ;incstack = 0
  9476  014E4C  0EFF               	movlw	-1
  9477  014E4E  50E3               	movf	plusw1,w,c
  9478  014E50  6EE6               	movwf	postinc1,c
  9479  014E52  EC79  F0A1         	call	_send_lcd_cmd_dma	;wreg free
  9480                           
  9481                           ; BSR set to: 0
  9482                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9483  014E56  52E5               	movf	postdec1,f,c
  9484  014E58  0012               	return		;funcret
  9485  014E5A                     __end_of_eaDogM_WriteCommand:
  9486                           	opt callstack 0
  9487                           
  9488 ;; *************** function _send_lcd_cmd_dma *****************
  9489 ;; Defined at:
  9490 ;;		line 188 in file "eadog.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  strPtr          1  [STACK] unsigned char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1  [STACK] void 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 3F/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9508 ;;Total ram usage:        0 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:   12
  9511 ;; This function calls:
  9512 ;;		_printf
  9513 ;;		_ringBufS_flush
  9514 ;;		_start_lcd
  9515 ;;		_wait_lcd_done
  9516 ;;		_wait_lcd_set
  9517 ;; This function is called by:
  9518 ;;		_eaDogM_WriteCommand
  9519 ;;		_eaDogM_WriteStringAtPos
  9520 ;; This function uses a reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text34
  9524  0142F2                     __ptext34:
  9525                           	opt callstack 0
  9526  0142F2                     _send_lcd_cmd_dma:
  9527                           	opt callstack 17
  9528                           
  9529                           ; BSR set to: 0
  9530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9531                           ;incstack = 0
  9532                           ;eadog.c: 188: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 189: {;eadog.c: 190:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  9533  0142F2  82BE               	bsf	16318,1,c	;volatile
  9534                           
  9535                           ;eadog.c: 191:  wait_lcd_set();
  9536  0142F4  EC6B  F0A7         	call	_wait_lcd_set	;wreg free
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;eadog.c: 193:  ringBufS_flush(spi_link.tx1a, 0);
  9540  0142F8  0E00               	movlw	0
  9541  0142FA  6EE6               	movwf	postinc1,c
  9542  0142FC  0060  F32F  FFE6   	movff	_spi_link+6,postinc1
  9543  014302  0060  F333  FFE6   	movff	_spi_link+7,postinc1
  9544  014308  EC8C  F09F         	call	_ringBufS_flush	;wreg free
  9545  01430C  92BC               	bcf	16316,1,c	;volatile
  9546  01430E  94BC               	bcf	16316,2,c	;volatile
  9547                           
  9548                           ;eadog.c: 196:  DMA1CON0bits.EN = 0;
  9549  014310  013B               	movlb	59	; () banked
  9550  014312  9FFC               	bcf	252,7,b	;volatile
  9551                           
  9552                           ; BSR set to: 59
  9553                           ;eadog.c: 197:  DMA1SSZ = 1;
  9554  014314  0E00               	movlw	0
  9555  014316  6FF8               	movwf	248,b	;volatile
  9556  014318  0E01               	movlw	1
  9557  01431A  6FF7               	movwf	247,b	;volatile
  9558                           
  9559                           ; BSR set to: 59
  9560                           ;eadog.c: 198:  DMA1CON0bits.EN = 1;
  9561  01431C  8FFC               	bsf	252,7,b	;volatile
  9562                           
  9563                           ; BSR set to: 59
  9564                           ;eadog.c: 199:  printf("%c", strPtr);
  9565                           ;stkvar	_strPtr @ sp[(0)+-1]
  9566  01431E  0EFF               	movlw	-1
  9567  014320  50E3               	movf	plusw1,w,c
  9568  014322  6EE6               	movwf	postinc1,c
  9569  014324  0E00               	movlw	0
  9570  014326  6EE6               	movwf	postinc1,c
  9571  014328  0EFC               	movlw	low STR_19
  9572  01432A  6EE6               	movwf	postinc1,c
  9573  01432C  0EFF               	movlw	high STR_19
  9574  01432E  6EE6               	movwf	postinc1,c
  9575  014330  0E04               	movlw	4
  9576  014332  6EE6               	movwf	postinc1,c
  9577  014334  ECEB  F0A0         	call	_printf	;wreg free
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;eadog.c: 200:  start_lcd();
  9581  014338  EC6E  F0A7         	call	_start_lcd	;wreg free
  9582                           
  9583                           ; BSR set to: 59
  9584                           ;eadog.c: 201:  wait_lcd_done();
  9585  01433C  ECAC  F0A6         	call	_wait_lcd_done	;wreg free
  9586                           
  9587                           ; BSR set to: 0
  9588  014340  82BC               	bsf	16316,1,c	;volatile
  9589                           
  9590                           ; BSR set to: 0
  9591                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9592  014342  52E5               	movf	postdec1,f,c
  9593  014344  0012               	return		;funcret
  9594  014346                     __end_of_send_lcd_cmd_dma:
  9595                           	opt callstack 0
  9596                           
  9597 ;; *************** function _wait_lcd_set *****************
  9598 ;; Defined at:
  9599 ;;		line 114 in file "eadog.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;		None
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;		None
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1  [STACK] void 
  9606 ;; Registers used:
  9607 ;;		None
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 3F/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;Total ram usage:        0 bytes
  9618 ;; Hardware stack levels used:    1
  9619 ;; Hardware stack levels required when called:    3
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_eaDogM_WriteString
  9624 ;;		_send_lcd_cmd_dma
  9625 ;; This function uses a reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text35
  9629  014ED6                     __ptext35:
  9630                           	opt callstack 0
  9631  014ED6                     _wait_lcd_set:
  9632                           	opt callstack 25
  9633                           
  9634                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  9635                           
  9636                           ; BSR set to: 0
  9637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9638                           ;incstack = 0
  9639  014ED6  0100               	movlb	0	; () banked
  9640  014ED8  87C5               	bsf	_spi_link& (0+255),3,b	;volatile
  9641                           
  9642                           ; BSR set to: 0
  9643                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9644  014EDA  0012               	return		;funcret
  9645  014EDC                     __end_of_wait_lcd_set:
  9646                           	opt callstack 0
  9647                           
  9648 ;; *************** function _wait_lcd_done *****************
  9649 ;; Defined at:
  9650 ;;		line 124 in file "eadog.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;		None
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;		None
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1  [STACK] void 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9659 ;; Tracked objects:
  9660 ;;		On entry : 4/0
  9661 ;;		On exit  : 3F/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9668 ;;Total ram usage:        0 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:    4
  9671 ;; This function calls:
  9672 ;;		_wdtdelay
  9673 ;; This function is called by:
  9674 ;;		_main
  9675 ;;		_send_lcd_cmd_dma
  9676 ;; This function uses a reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text36
  9680  014D58                     __ptext36:
  9681                           	opt callstack 0
  9682  014D58                     _wait_lcd_done:
  9683                           	opt callstack 26
  9684                           
  9685                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  9686                           
  9687                           ; BSR set to: 0
  9688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9689                           ;incstack = 0
  9690  014D58  0100               	movlb	0	; () banked
  9691  014D5A  B7C5               	btfsc	_spi_link& (0+255),3,b	;volatile
  9692  014D5C  D7FD               	goto	_wait_lcd_done
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;eadog.c: 127:  wdtdelay(50);
  9696  014D5E  0E32               	movlw	50
  9697  014D60  6EE6               	movwf	postinc1,c
  9698  014D62  0E00               	movlw	0
  9699  014D64  6EE6               	movwf	postinc1,c
  9700  014D66  0E00               	movlw	0
  9701  014D68  6EE6               	movwf	postinc1,c
  9702  014D6A  0E00               	movlw	0
  9703  014D6C  6EE6               	movwf	postinc1,c
  9704  014D6E  EC4B  F0A1         	call	_wdtdelay	;wreg free
  9705                           
  9706                           ; BSR set to: 0
  9707                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9708  014D72  0012               	return		;funcret
  9709  014D74                     __end_of_wait_lcd_done:
  9710                           	opt callstack 0
  9711                           
  9712 ;; *************** function _wdtdelay *****************
  9713 ;; Defined at:
  9714 ;;		line 21 in file "eadog.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  delay           4  [STACK] unsigned long 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;		None
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1  [STACK] void 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 3F/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9732 ;;Total ram usage:        0 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    3
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		_init_display
  9739 ;;		_send_lcd_cmd
  9740 ;;		_send_lcd_cmd_long
  9741 ;;		_wait_lcd_done
  9742 ;; This function uses a reentrant model
  9743 ;;
  9744                           
  9745                           	psect	text37
  9746  014296                     __ptext37:
  9747                           	opt callstack 0
  9748  014296                     _wdtdelay:
  9749                           	opt callstack 26
  9750                           
  9751                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  9752                           
  9753                           ; BSR set to: 0
  9754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9755                           ;incstack = 0
  9756  014296  0100               	movlb	0	; () banked
  9757  014298  6BD8               	clrf	wdtdelay@dcount& (0+255),b
  9758  01429A  6BD9               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9759  01429C  6BDA               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9760  01429E  6BDB               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9761  0142A0  D009               	goto	l5987
  9762  0142A2                     l1370:
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;eadog.c: 26:   __nop();
  9766  0142A2  F000               	nop	
  9767  0142A4  0004               	clrwdt		;# 
  9768                           
  9769                           ;eadog.c: 28:  };
  9770  0142A6  0E01               	movlw	1
  9771  0142A8  0100               	movlb	0	; () banked
  9772  0142AA  27D8               	addwf	wdtdelay@dcount& (0+255),f,b
  9773  0142AC  0E00               	movlw	0
  9774  0142AE  23D9               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9775  0142B0  23DA               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9776  0142B2  23DB               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9777  0142B4                     l5987:
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;stkvar	_delay @ sp[(0)+-4]
  9781  0142B4  0EFC               	movlw	-4
  9782  0142B6  006F FF8C  F03D    	movff	plusw1,btemp
  9783  0142BC  51D8               	movf	wdtdelay@dcount& (0+255),w,b
  9784  0142BE  5C3D               	subwf	btemp,w,c
  9785  0142C0  0EFD               	movlw	-3
  9786  0142C2  006F FF8C  F03D    	movff	plusw1,btemp
  9787  0142C8  51D9               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9788  0142CA  583D               	subwfb	btemp,w,c
  9789  0142CC  0EFE               	movlw	-2
  9790  0142CE  006F FF8C  F03D    	movff	plusw1,btemp
  9791  0142D4  51DA               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9792  0142D6  583D               	subwfb	btemp,w,c
  9793  0142D8  0EFF               	movlw	-1
  9794  0142DA  006F FF8C  F03D    	movff	plusw1,btemp
  9795  0142E0  51DB               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9796  0142E2  583D               	subwfb	btemp,w,c
  9797  0142E4  B0D8               	btfsc	status,0,c
  9798  0142E6  D7DD               	goto	l1370
  9799                           
  9800                           ; BSR set to: 0
  9801                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9802  0142E8  52E5               	movf	postdec1,f,c
  9803  0142EA  52E5               	movf	postdec1,f,c
  9804  0142EC  52E5               	movf	postdec1,f,c
  9805  0142EE  52E5               	movf	postdec1,f,c
  9806  0142F0  0012               	return		;funcret
  9807  0142F2                     __end_of_wdtdelay:
  9808                           	opt callstack 0
  9809                           
  9810 ;; *************** function _start_lcd *****************
  9811 ;; Defined at:
  9812 ;;		line 109 in file "eadog.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1  [STACK] void 
  9819 ;; Registers used:
  9820 ;;		None
  9821 ;; Tracked objects:
  9822 ;;		On entry : 3F/0
  9823 ;;		On exit  : 3F/3B
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:    3
  9833 ;; This function calls:
  9834 ;;		Nothing
  9835 ;; This function is called by:
  9836 ;;		_eaDogM_WriteString
  9837 ;;		_send_lcd_cmd_dma
  9838 ;; This function uses a reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text38
  9842  014EDC                     __ptext38:
  9843                           	opt callstack 0
  9844  014EDC                     _start_lcd:
  9845                           	opt callstack 25
  9846                           
  9847                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  9848                           
  9849                           ; BSR set to: 0
  9850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9851                           ;incstack = 0
  9852  014EDC  013B               	movlb	59	; () banked
  9853  014EDE  8DFC               	bsf	252,6,b	;volatile
  9854                           
  9855                           ; BSR set to: 59
  9856                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9857  014EE0  0012               	return		;funcret
  9858  014EE2                     __end_of_start_lcd:
  9859                           	opt callstack 0
  9860                           
  9861 ;; *************** function _ringBufS_flush *****************
  9862 ;; Defined at:
  9863 ;;		line 76 in file "ringbufs.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9866 ;;		 -> ring_buf1(67), 
  9867 ;;  clearBuffer     1  [STACK] const char 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;		None
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  1  [STACK] void 
  9872 ;; Registers used:
  9873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9874 ;; Tracked objects:
  9875 ;;		On entry : 3F/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9883 ;;Total ram usage:        0 bytes
  9884 ;; Hardware stack levels used:    1
  9885 ;; Hardware stack levels required when called:    4
  9886 ;; This function calls:
  9887 ;;		_memset
  9888 ;; This function is called by:
  9889 ;;		_eaDogM_WriteString
  9890 ;;		_send_lcd_cmd_dma
  9891 ;; This function uses a reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text39
  9895  013F18                     __ptext39:
  9896                           	opt callstack 0
  9897  013F18                     _ringBufS_flush:
  9898                           	opt callstack 24
  9899                           
  9900                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9901                           ;stkvar	__this @ sp[(0)+-2]
  9902                           
  9903                           ; BSR set to: 59
  9904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9905                           ;incstack = 0
  9906  013F18  0EFE               	movlw	-2
  9907  013F1A  006F FF8C  F047    	movff	plusw1,btemp+10
  9908  013F20  0EFF               	movlw	-1
  9909  013F22  006F FF8C  F048    	movff	plusw1,btemp+11
  9910  013F28  0E42               	movlw	66
  9911  013F2A  2447               	addwf	btemp+10,w,c
  9912  013F2C  6ED9               	movwf	fsr2l,c
  9913  013F2E  0E00               	movlw	0
  9914  013F30  2048               	addwfc	btemp+11,w,c
  9915  013F32  6EDA               	movwf	fsr2h,c
  9916  013F34  0E00               	movlw	0
  9917  013F36  6EDF               	movwf	indf2,c
  9918                           
  9919                           ;ringbufs.c: 79:  _this->head = 0;
  9920                           ;stkvar	__this @ sp[(0)+-2]
  9921  013F38  0EFE               	movlw	-2
  9922  013F3A  006F FF8C  F047    	movff	plusw1,btemp+10
  9923  013F40  0EFF               	movlw	-1
  9924  013F42  006F FF8C  F048    	movff	plusw1,btemp+11
  9925  013F48  0E40               	movlw	64
  9926  013F4A  2447               	addwf	btemp+10,w,c
  9927  013F4C  6ED9               	movwf	fsr2l,c
  9928  013F4E  0E00               	movlw	0
  9929  013F50  2048               	addwfc	btemp+11,w,c
  9930  013F52  6EDA               	movwf	fsr2h,c
  9931  013F54  0E00               	movlw	0
  9932  013F56  6EDF               	movwf	indf2,c
  9933                           
  9934                           ;ringbufs.c: 80:  _this->tail = 0;
  9935                           ;stkvar	__this @ sp[(0)+-2]
  9936  013F58  0EFE               	movlw	-2
  9937  013F5A  006F FF8C  F047    	movff	plusw1,btemp+10
  9938  013F60  0EFF               	movlw	-1
  9939  013F62  006F FF8C  F048    	movff	plusw1,btemp+11
  9940  013F68  0E41               	movlw	65
  9941  013F6A  2447               	addwf	btemp+10,w,c
  9942  013F6C  6ED9               	movwf	fsr2l,c
  9943  013F6E  0E00               	movlw	0
  9944  013F70  2048               	addwfc	btemp+11,w,c
  9945  013F72  6EDA               	movwf	fsr2h,c
  9946  013F74  0E00               	movlw	0
  9947  013F76  6EDF               	movwf	indf2,c
  9948                           
  9949                           ;ringbufs.c: 81:  if (clearBuffer) {
  9950                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9951  013F78  0EFD               	movlw	-3
  9952  013F7A  50E3               	movf	plusw1,w,c
  9953  013F7C  B4D8               	btfsc	status,2,c
  9954  013F7E  D011               	goto	l1510
  9955                           
  9956                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9957  013F80  0E40               	movlw	64
  9958  013F82  6EE6               	movwf	postinc1,c
  9959  013F84  0E00               	movlw	0
  9960  013F86  6EE6               	movwf	postinc1,c
  9961  013F88  0E00               	movlw	0
  9962  013F8A  6EE6               	movwf	postinc1,c
  9963  013F8C  0E00               	movlw	0
  9964  013F8E  6EE6               	movwf	postinc1,c
  9965                           
  9966                           ;stkvar	__this @ sp[(-4)+-2]
  9967  013F90  0EFA               	movlw	-6
  9968  013F92  006F FF8F FFE6     	movff	plusw1,postinc1
  9969  013F98  006F FF8F FFE6     	movff	plusw1,postinc1
  9970  013F9E  EC67  F091         	call	_memset	;wreg free
  9971  013FA2                     l1510:
  9972                           
  9973                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9974  013FA2  52E5               	movf	postdec1,f,c
  9975  013FA4  52E5               	movf	postdec1,f,c
  9976  013FA6  52E5               	movf	postdec1,f,c
  9977  013FA8  0012               	return		;funcret
  9978  013FAA                     __end_of_ringBufS_flush:
  9979                           	opt callstack 0
  9980                           
  9981 ;; *************** function _memset *****************
  9982 ;; Defined at:
  9983 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  dest            2  [STACK] PTR void 
  9986 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9987 ;;  c               2  [STACK] int 
  9988 ;;  n               2  [STACK] unsigned int 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;  s               2  [STACK] PTR unsigned char 
  9991 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9992 ;;  k               2  [STACK] unsigned int 
  9993 ;; Return value:  Size  Location     Type
  9994 ;;                  2  [STACK] PTR void 
  9995 ;; Registers used:
  9996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9997 ;; Tracked objects:
  9998 ;;		On entry : 0/0
  9999 ;;		On exit  : 0/0
 10000 ;;		Unchanged: 0/0
 10001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10006 ;;Total ram usage:        0 bytes
 10007 ;; Hardware stack levels used:    1
 10008 ;; Hardware stack levels required when called:    3
 10009 ;; This function calls:
 10010 ;;		Nothing
 10011 ;; This function is called by:
 10012 ;;		_ringBufS_init
 10013 ;;		_ringBufS_flush
 10014 ;; This function uses a reentrant model
 10015 ;;
 10016                           
 10017                           	psect	text40
 10018  0122CE                     __ptext40:
 10019                           	opt callstack 0
 10020  0122CE                     _memset:
 10021                           	opt callstack 0
 10022                           
 10023                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10024  0122CE  52E6               	movf	postinc1,f,c
 10025  0122D0  52E6               	movf	postinc1,f,c
 10026  0122D2  52E6               	movf	postinc1,f,c
 10027  0122D4  52E6               	movf	postinc1,f,c
 10028                           
 10029                           ;stkvar	_dest @ sp[(-4)+-2]
 10030                           
 10031                           ;incstack = 0
 10032  0122D6  0EFA               	movlw	-6
 10033  0122D8  006F FF8C  F047    	movff	plusw1,btemp+10
 10034  0122DE  0EFB               	movlw	-5
 10035  0122E0  006F FF8C  F048    	movff	plusw1,btemp+11
 10036                           
 10037                           ;stkvar	_s @ sp[(-4)+0]
 10038  0122E6  0EFD               	movlw	-3
 10039  0122E8  0060  F123  FFE3   	movff	btemp+11,plusw1
 10040  0122EE  0EFC               	movlw	-4
 10041  0122F0  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10042                           
 10043                           ;stkvar	_n @ sp[(-4)+-6]
 10044  0122F6  0EF6               	movlw	-10
 10045  0122F8  006F FF8C  F03D    	movff	plusw1,btemp
 10046  0122FE  0EF7               	movlw	-9
 10047  012300  50E3               	movf	plusw1,w,c
 10048  012302  103D               	iorwf	btemp,w,c
 10049  012304  B4D8               	btfsc	status,2,c
 10050  012306  D154               	goto	u5610
 10051                           
 10052                           ;stkvar	_c @ sp[(-4)+-4]
 10053                           ;stkvar	_s @ sp[(-4)+0]
 10054  012308  0EFC               	movlw	-4
 10055  01230A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10056  012310  0EFD               	movlw	-3
 10057  012312  006F FF8F FFDA     	movff	plusw1,fsr2h
 10058  012318  0EF8               	movlw	-8
 10059  01231A  006F FF8F FFDF     	movff	plusw1,indf2
 10060                           
 10061                           ;stkvar	_c @ sp[(-4)+-4]
 10062                           ;stkvar	_n @ sp[(-4)+-6]
 10063                           ;stkvar	_s @ sp[(-4)+0]
 10064  012320  0EFC               	movlw	-4
 10065  012322  006F FF8C  F047    	movff	plusw1,btemp+10
 10066  012328  0EFD               	movlw	-3
 10067  01232A  006F FF8C  F048    	movff	plusw1,btemp+11
 10068  012330  0EF6               	movlw	-10
 10069  012332  50E3               	movf	plusw1,w,c
 10070  012334  2647               	addwf	btemp+10,f,c
 10071  012336  0EF7               	movlw	-9
 10072  012338  50E3               	movf	plusw1,w,c
 10073  01233A  2248               	addwfc	btemp+11,f,c
 10074  01233C  0EFF               	movlw	255
 10075  01233E  2447               	addwf	btemp+10,w,c
 10076  012340  6ED9               	movwf	fsr2l,c
 10077  012342  0EFF               	movlw	255
 10078  012344  2048               	addwfc	btemp+11,w,c
 10079  012346  6EDA               	movwf	fsr2h,c
 10080  012348  0EF8               	movlw	-8
 10081  01234A  006F FF8F FFDF     	movff	plusw1,indf2
 10082                           
 10083                           ;stkvar	_n @ sp[(-4)+-6]
 10084  012350  0EF7               	movlw	-9
 10085  012352  50E3               	movf	plusw1,w,c
 10086  012354  E108               	bnz	l8709
 10087  012356  0EF6               	movlw	-10
 10088  012358  006F FF8C  F03D    	movff	plusw1,btemp
 10089  01235E  0E03               	movlw	3
 10090  012360  5E3D               	subwf	btemp,f,c
 10091  012362  A0D8               	btfss	status,0,c
 10092  012364  D125               	goto	u5610
 10093  012366                     l8709:
 10094                           
 10095                           ;stkvar	_c @ sp[(-4)+-4]
 10096                           ;stkvar	_s @ sp[(-4)+0]
 10097  012366  0EFC               	movlw	-4
 10098  012368  006F FF8C  F047    	movff	plusw1,btemp+10
 10099  01236E  0EFD               	movlw	-3
 10100  012370  006F FF8C  F048    	movff	plusw1,btemp+11
 10101  012376  0E01               	movlw	1
 10102  012378  2447               	addwf	btemp+10,w,c
 10103  01237A  6ED9               	movwf	fsr2l,c
 10104  01237C  0E00               	movlw	0
 10105  01237E  2048               	addwfc	btemp+11,w,c
 10106  012380  6EDA               	movwf	fsr2h,c
 10107  012382  0EF8               	movlw	-8
 10108  012384  006F FF8F FFDF     	movff	plusw1,indf2
 10109                           
 10110                           ;stkvar	_c @ sp[(-4)+-4]
 10111                           ;stkvar	_s @ sp[(-4)+0]
 10112  01238A  0EFC               	movlw	-4
 10113  01238C  006F FF8C  F047    	movff	plusw1,btemp+10
 10114  012392  0EFD               	movlw	-3
 10115  012394  006F FF8C  F048    	movff	plusw1,btemp+11
 10116  01239A  0E02               	movlw	2
 10117  01239C  2447               	addwf	btemp+10,w,c
 10118  01239E  6ED9               	movwf	fsr2l,c
 10119  0123A0  0E00               	movlw	0
 10120  0123A2  2048               	addwfc	btemp+11,w,c
 10121  0123A4  6EDA               	movwf	fsr2h,c
 10122  0123A6  0EF8               	movlw	-8
 10123  0123A8  006F FF8F FFDF     	movff	plusw1,indf2
 10124                           
 10125                           ;stkvar	_c @ sp[(-4)+-4]
 10126                           ;stkvar	_n @ sp[(-4)+-6]
 10127                           ;stkvar	_s @ sp[(-4)+0]
 10128  0123AE  0EFC               	movlw	-4
 10129  0123B0  006F FF8C  F047    	movff	plusw1,btemp+10
 10130  0123B6  0EFD               	movlw	-3
 10131  0123B8  006F FF8C  F048    	movff	plusw1,btemp+11
 10132  0123BE  0EF6               	movlw	-10
 10133  0123C0  50E3               	movf	plusw1,w,c
 10134  0123C2  2647               	addwf	btemp+10,f,c
 10135  0123C4  0EF7               	movlw	-9
 10136  0123C6  50E3               	movf	plusw1,w,c
 10137  0123C8  2248               	addwfc	btemp+11,f,c
 10138  0123CA  0EFE               	movlw	254
 10139  0123CC  2447               	addwf	btemp+10,w,c
 10140  0123CE  6ED9               	movwf	fsr2l,c
 10141  0123D0  0EFF               	movlw	255
 10142  0123D2  2048               	addwfc	btemp+11,w,c
 10143  0123D4  6EDA               	movwf	fsr2h,c
 10144  0123D6  0EF8               	movlw	-8
 10145  0123D8  006F FF8F FFDF     	movff	plusw1,indf2
 10146                           
 10147                           ;stkvar	_c @ sp[(-4)+-4]
 10148                           ;stkvar	_n @ sp[(-4)+-6]
 10149                           ;stkvar	_s @ sp[(-4)+0]
 10150  0123DE  0EFC               	movlw	-4
 10151  0123E0  006F FF8C  F047    	movff	plusw1,btemp+10
 10152  0123E6  0EFD               	movlw	-3
 10153  0123E8  006F FF8C  F048    	movff	plusw1,btemp+11
 10154  0123EE  0EF6               	movlw	-10
 10155  0123F0  50E3               	movf	plusw1,w,c
 10156  0123F2  2647               	addwf	btemp+10,f,c
 10157  0123F4  0EF7               	movlw	-9
 10158  0123F6  50E3               	movf	plusw1,w,c
 10159  0123F8  2248               	addwfc	btemp+11,f,c
 10160  0123FA  0EFD               	movlw	253
 10161  0123FC  2447               	addwf	btemp+10,w,c
 10162  0123FE  6ED9               	movwf	fsr2l,c
 10163  012400  0EFF               	movlw	255
 10164  012402  2048               	addwfc	btemp+11,w,c
 10165  012404  6EDA               	movwf	fsr2h,c
 10166  012406  0EF8               	movlw	-8
 10167  012408  006F FF8F FFDF     	movff	plusw1,indf2
 10168                           
 10169                           ;stkvar	_n @ sp[(-4)+-6]
 10170  01240E  0EF7               	movlw	-9
 10171  012410  50E3               	movf	plusw1,w,c
 10172  012412  E108               	bnz	l8715
 10173  012414  0EF6               	movlw	-10
 10174  012416  006F FF8C  F03D    	movff	plusw1,btemp
 10175  01241C  0E07               	movlw	7
 10176  01241E  5E3D               	subwf	btemp,f,c
 10177  012420  A0D8               	btfss	status,0,c
 10178  012422  D0C6               	goto	u5610
 10179  012424                     l8715:
 10180                           
 10181                           ;stkvar	_c @ sp[(-4)+-4]
 10182                           ;stkvar	_s @ sp[(-4)+0]
 10183  012424  0EFC               	movlw	-4
 10184  012426  006F FF8C  F047    	movff	plusw1,btemp+10
 10185  01242C  0EFD               	movlw	-3
 10186  01242E  006F FF8C  F048    	movff	plusw1,btemp+11
 10187  012434  0E03               	movlw	3
 10188  012436  2447               	addwf	btemp+10,w,c
 10189  012438  6ED9               	movwf	fsr2l,c
 10190  01243A  0E00               	movlw	0
 10191  01243C  2048               	addwfc	btemp+11,w,c
 10192  01243E  6EDA               	movwf	fsr2h,c
 10193  012440  0EF8               	movlw	-8
 10194  012442  006F FF8F FFDF     	movff	plusw1,indf2
 10195                           
 10196                           ;stkvar	_c @ sp[(-4)+-4]
 10197                           ;stkvar	_n @ sp[(-4)+-6]
 10198                           ;stkvar	_s @ sp[(-4)+0]
 10199  012448  0EFC               	movlw	-4
 10200  01244A  006F FF8C  F047    	movff	plusw1,btemp+10
 10201  012450  0EFD               	movlw	-3
 10202  012452  006F FF8C  F048    	movff	plusw1,btemp+11
 10203  012458  0EF6               	movlw	-10
 10204  01245A  50E3               	movf	plusw1,w,c
 10205  01245C  2647               	addwf	btemp+10,f,c
 10206  01245E  0EF7               	movlw	-9
 10207  012460  50E3               	movf	plusw1,w,c
 10208  012462  2248               	addwfc	btemp+11,f,c
 10209  012464  0EFC               	movlw	252
 10210  012466  2447               	addwf	btemp+10,w,c
 10211  012468  6ED9               	movwf	fsr2l,c
 10212  01246A  0EFF               	movlw	255
 10213  01246C  2048               	addwfc	btemp+11,w,c
 10214  01246E  6EDA               	movwf	fsr2h,c
 10215  012470  0EF8               	movlw	-8
 10216  012472  006F FF8F FFDF     	movff	plusw1,indf2
 10217                           
 10218                           ;stkvar	_n @ sp[(-4)+-6]
 10219  012478  0EF7               	movlw	-9
 10220  01247A  50E3               	movf	plusw1,w,c
 10221  01247C  E108               	bnz	l8721
 10222  01247E  0EF6               	movlw	-10
 10223  012480  006F FF8C  F03D    	movff	plusw1,btemp
 10224  012486  0E09               	movlw	9
 10225  012488  5E3D               	subwf	btemp,f,c
 10226  01248A  A0D8               	btfss	status,0,c
 10227  01248C  D091               	goto	u5610
 10228  01248E                     l8721:
 10229                           
 10230                           ;stkvar	_s @ sp[(-4)+0]
 10231  01248E  0EFC               	movlw	-4
 10232  012490  006F FF8C  F047    	movff	plusw1,btemp+10
 10233  012496  1E47               	comf	btemp+10,f,c
 10234  012498  0EFD               	movlw	-3
 10235  01249A  006F FF8C  F048    	movff	plusw1,btemp+11
 10236  0124A0  1E48               	comf	btemp+11,f,c
 10237  0124A2  2A47               	incf	btemp+10,f,c
 10238  0124A4  B4D8               	btfsc	status,2,c
 10239  0124A6  2A48               	incf	btemp+11,f,c
 10240  0124A8  0E03               	movlw	3
 10241  0124AA  1647               	andwf	btemp+10,f,c
 10242  0124AC  0E00               	movlw	0
 10243  0124AE  1648               	andwf	btemp+11,f,c
 10244                           
 10245                           ;stkvar	_k @ sp[(-4)+2]
 10246  0124B0  0EFE               	movlw	-2
 10247  0124B2  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10248  0124B8  0EFF               	movlw	-1
 10249  0124BA  0060  F123  FFE3   	movff	btemp+11,plusw1
 10250                           
 10251                           ;stkvar	_k @ sp[(-4)+2]
 10252                           ;stkvar	_s @ sp[(-4)+0]
 10253  0124C0  0EFC               	movlw	-4
 10254  0124C2  50E3               	movf	plusw1,w,c
 10255  0124C4  6E3D               	movwf	btemp,c
 10256  0124C6  0EFE               	movlw	-2
 10257  0124C8  50E3               	movf	plusw1,w,c
 10258  0124CA  263D               	addwf	btemp,f,c
 10259  0124CC  0EFC               	movlw	-4
 10260  0124CE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10261  0124D4  0EFD               	movlw	-3
 10262  0124D6  50E3               	movf	plusw1,w,c
 10263  0124D8  6E3D               	movwf	btemp,c
 10264  0124DA  0EFF               	movlw	-1
 10265  0124DC  50E3               	movf	plusw1,w,c
 10266  0124DE  223D               	addwfc	btemp,f,c
 10267  0124E0  0EFD               	movlw	-3
 10268  0124E2  0060  F0F7  FFE3   	movff	btemp,plusw1
 10269                           
 10270                           ;stkvar	_k @ sp[(-4)+2]
 10271                           ;stkvar	_n @ sp[(-4)+-6]
 10272  0124E8  0EF6               	movlw	-10
 10273  0124EA  50E3               	movf	plusw1,w,c
 10274  0124EC  6E3D               	movwf	btemp,c
 10275  0124EE  0EFE               	movlw	-2
 10276  0124F0  50E3               	movf	plusw1,w,c
 10277  0124F2  5E3D               	subwf	btemp,f,c
 10278  0124F4  0EF6               	movlw	-10
 10279  0124F6  0060  F0F7  FFE3   	movff	btemp,plusw1
 10280  0124FC  0EF7               	movlw	-9
 10281  0124FE  50E3               	movf	plusw1,w,c
 10282  012500  6E3D               	movwf	btemp,c
 10283  012502  0EFF               	movlw	-1
 10284  012504  50E3               	movf	plusw1,w,c
 10285  012506  5A3D               	subwfb	btemp,f,c
 10286  012508  0EF7               	movlw	-9
 10287  01250A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10288  012510  0EFC               	movlw	252
 10289  012512  6E47               	movwf	btemp+10,c
 10290  012514  0EFF               	movlw	255
 10291  012516  6E48               	movwf	btemp+11,c
 10292                           
 10293                           ;stkvar	_n @ sp[(-4)+-6]
 10294  012518  0EF6               	movlw	-10
 10295  01251A  006F FF8C  F03D    	movff	plusw1,btemp
 10296  012520  5047               	movf	btemp+10,w,c
 10297  012522  163D               	andwf	btemp,f,c
 10298  012524  0EF6               	movlw	-10
 10299  012526  0060  F0F7  FFE3   	movff	btemp,plusw1
 10300  01252C  0EF7               	movlw	-9
 10301  01252E  006F FF8C  F03D    	movff	plusw1,btemp
 10302  012534  5048               	movf	btemp+11,w,c
 10303  012536  163D               	andwf	btemp,f,c
 10304  012538  0EF7               	movlw	-9
 10305  01253A  D02E               	goto	L30
 10306  01253C                     l8729:
 10307                           
 10308                           ;stkvar	_c @ sp[(-4)+-4]
 10309                           ;stkvar	_s @ sp[(-4)+0]
 10310  01253C  0EFC               	movlw	-4
 10311  01253E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10312  012544  0EFD               	movlw	-3
 10313  012546  006F FF8F FFDA     	movff	plusw1,fsr2h
 10314  01254C  0EF8               	movlw	-8
 10315  01254E  006F FF8F FFDF     	movff	plusw1,indf2
 10316                           
 10317                           ;stkvar	_n @ sp[(-4)+-6]
 10318  012554  0EF6               	movlw	-10
 10319  012556  006F FF8C  F03D    	movff	plusw1,btemp
 10320  01255C  0E01               	movlw	1
 10321  01255E  5E3D               	subwf	btemp,f,c
 10322  012560  0EF6               	movlw	-10
 10323  012562  0060  F0F7  FFE3   	movff	btemp,plusw1
 10324  012568  0EF7               	movlw	-9
 10325  01256A  006F FF8C  F03D    	movff	plusw1,btemp
 10326  012570  0E00               	movlw	0
 10327  012572  5A3D               	subwfb	btemp,f,c
 10328  012574  0EF7               	movlw	-9
 10329  012576  0060  F0F7  FFE3   	movff	btemp,plusw1
 10330                           
 10331                           ;stkvar	_s @ sp[(-4)+0]
 10332  01257C  0EFC               	movlw	-4
 10333  01257E  50E3               	movf	plusw1,w,c
 10334  012580  0F01               	addlw	1
 10335  012582  6E3D               	movwf	btemp,c
 10336  012584  0EFC               	movlw	-4
 10337  012586  0060  F0F7  FFE3   	movff	btemp,plusw1
 10338  01258C  6A3D               	clrf	btemp,c
 10339  01258E  0EFD               	movlw	-3
 10340  012590  50E3               	movf	plusw1,w,c
 10341  012592  203D               	addwfc	btemp,w,c
 10342  012594  6E3D               	movwf	btemp,c
 10343  012596  0EFD               	movlw	-3
 10344  012598                     L30:
 10345  012598  0060  F0F7  FFE3   	movff	btemp,plusw1
 10346                           
 10347                           ;stkvar	_n @ sp[(-4)+-6]
 10348  01259E  0EF6               	movlw	-10
 10349  0125A0  006F FF8C  F03D    	movff	plusw1,btemp
 10350  0125A6  0EF7               	movlw	-9
 10351  0125A8  50E3               	movf	plusw1,w,c
 10352  0125AA  103D               	iorwf	btemp,w,c
 10353  0125AC  A4D8               	btfss	status,2,c
 10354  0125AE  D7C6               	goto	l8729
 10355  0125B0                     u5610:
 10356                           
 10357                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10358  0125B0  0EF6               	movlw	246
 10359  0125B2  26E1               	addwf	fsr1l,f,c
 10360  0125B4  0EFF               	movlw	255
 10361  0125B6  22E2               	addwfc	fsr1h,f,c
 10362  0125B8  0012               	return		;funcret
 10363  0125BA                     __end_of_memset:
 10364                           	opt callstack 0
 10365                           
 10366 ;; *************** function _printf *****************
 10367 ;; Defined at:
 10368 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  fmt             2  [STACK] PTR const unsigned char 
 10371 ;;		 -> STR_20(3), STR_19(3), STR_18(3), 
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  ap              2  [STACK] PTR void [1]
 10374 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10375 ;;  ret             2    0        int 
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  2  [STACK] int 
 10378 ;; Registers used:
 10379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10380 ;; Tracked objects:
 10381 ;;		On entry : 3F/3B
 10382 ;;		On exit  : 3F/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10389 ;;Total ram usage:        0 bytes
 10390 ;; Hardware stack levels used:    1
 10391 ;; Hardware stack levels required when called:   11
 10392 ;; This function calls:
 10393 ;;		_vfprintf
 10394 ;; This function is called by:
 10395 ;;		_eaDogM_WriteString
 10396 ;;		_send_lcd_cmd_dma
 10397 ;; This function uses a reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text41
 10401  0141D6                     __ptext41:
 10402                           	opt callstack 0
 10403  0141D6                     _printf:
 10404                           	opt callstack 0
 10405                           
 10406                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10407  0141D6  52E6               	movf	postinc1,f,c
 10408  0141D8  52E6               	movf	postinc1,f,c
 10409                           
 10410                           ;stkvar	?_printf @ sp[(-2)+-3]
 10411                           
 10412                           ;incstack = 0
 10413  0141DA  0EFB               	movlw	251
 10414  0141DC  24E1               	addwf	fsr1l,w,c
 10415  0141DE  6E47               	movwf	btemp+10,c
 10416  0141E0  0EFF               	movlw	255
 10417  0141E2  20E2               	addwfc	fsr1h,w,c
 10418  0141E4  6E48               	movwf	btemp+11,c
 10419                           
 10420                           ;stkvar	_ap @ sp[(-2)+0]
 10421  0141E6  0EFF               	movlw	-1
 10422  0141E8  0060  F123  FFE3   	movff	btemp+11,plusw1
 10423  0141EE  0EFE               	movlw	-2
 10424  0141F0  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10425                           
 10426                           ;stkvar	_ap @ sp[(-2)+0]
 10427  0141F6  0EFE               	movlw	254
 10428  0141F8  24E1               	addwf	fsr1l,w,c
 10429  0141FA  6E3D               	movwf	btemp,c
 10430  0141FC  0EFF               	movlw	255
 10431  0141FE  20E2               	addwfc	fsr1h,w,c
 10432  014200  6E3E               	movwf	btemp+1,c
 10433  014202  0060  F0F7  FFE6   	movff	btemp,postinc1
 10434  014208  0060  F0FB  FFE6   	movff	btemp+1,postinc1
 10435                           
 10436                           ;stkvar	_fmt @ sp[(-4)+-3]
 10437  01420E  0EF9               	movlw	-7
 10438  014210  006F FF8F FFE6     	movff	plusw1,postinc1
 10439  014216  006F FF8F FFE6     	movff	plusw1,postinc1
 10440  01421C  0E00               	movlw	0
 10441  01421E  6EE6               	movwf	postinc1,c
 10442  014220  0E00               	movlw	0
 10443  014222  6EE6               	movwf	postinc1,c
 10444  014224  EC4B  F09D         	call	_vfprintf	;wreg free
 10445                           
 10446                           ; BSR set to: 0
 10447                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10448  014228  52E5               	movf	postdec1,f,c
 10449  01422A  52E5               	movf	postdec1,f,c
 10450  01422C  52E5               	movf	postdec1,f,c
 10451  01422E  50E7               	movf	indf1,w,c
 10452  014230  5EE1               	subwf	fsr1l,f,c
 10453  014232  0E00               	movlw	0
 10454  014234  5AE2               	subwfb	fsr1h,f,c
 10455  014236  0012               	return		;funcret
 10456  014238                     __end_of_printf:
 10457                           	opt callstack 0
 10458                           
 10459 ;; *************** function _vfprintf *****************
 10460 ;; Defined at:
 10461 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10464 ;;		 -> f(6), NULL(0), 
 10465 ;;  fmt             2  [STACK] PTR const unsigned char 
 10466 ;;		 -> STR_21(91), STR_20(3), STR_19(3), STR_18(3), 
 10467 ;;		 -> STR_17(26), STR_16(26), STR_15(4), STR_14(18), 
 10468 ;;		 -> STR_13(26), STR_12(17), STR_11(21), STR_10(18), 
 10469 ;;		 -> STR_9(6), STR_8(6), STR_7(14), STR_6(15), 
 10470 ;;		 -> STR_5(21), STR_4(15), STR_2(12), STR_1(17), 
 10471 ;;  ap              2  [STACK] PTR PTR void 
 10472 ;;		 -> ap(2), ap(2), 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  cfmt            2  [STACK] PTR unsigned char 
 10475 ;;		 -> STR_21(91), STR_20(3), STR_19(3), STR_18(3), 
 10476 ;;		 -> STR_17(26), STR_16(26), STR_15(4), STR_14(18), 
 10477 ;;		 -> STR_13(26), STR_12(17), STR_11(21), STR_10(18), 
 10478 ;;		 -> STR_9(6), STR_8(6), STR_7(14), STR_6(15), 
 10479 ;;		 -> STR_5(21), STR_4(15), STR_2(12), STR_1(17), 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  2  [STACK] int 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 3F/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10493 ;;Total ram usage:        0 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:   10
 10496 ;; This function calls:
 10497 ;;		_vfpfcnvrt
 10498 ;; This function is called by:
 10499 ;;		_sprintf
 10500 ;;		_printf
 10501 ;; This function uses a reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text42
 10505  013A96                     __ptext42:
 10506                           	opt callstack 0
 10507  013A96                     _vfprintf:
 10508                           	opt callstack 0
 10509                           
 10510                           ; BSR set to: 0
 10511                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10512  013A96  52E6               	movf	postinc1,f,c
 10513  013A98  52E6               	movf	postinc1,f,c
 10514                           
 10515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10516                           ;stkvar	_fmt @ sp[(-2)+-4]
 10517                           
 10518                           ;incstack = 0
 10519  013A9A  0EFA               	movlw	-6
 10520  013A9C  006F FF8C  F047    	movff	plusw1,btemp+10
 10521  013AA2  0EFB               	movlw	-5
 10522  013AA4  006F FF8C  F048    	movff	plusw1,btemp+11
 10523                           
 10524                           ;stkvar	_cfmt @ sp[(-2)+0]
 10525  013AAA  0EFF               	movlw	-1
 10526  013AAC  0060  F123  FFE3   	movff	btemp+11,plusw1
 10527  013AB2  0EFE               	movlw	-2
 10528  013AB4  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10529                           
 10530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10531  013ABA  0100               	movlb	0	; () banked
 10532  013ABC  6BE5               	clrf	_nout& (0+255),b
 10533  013ABE  6BE6               	clrf	(_nout+1)& (0+255),b
 10534                           
 10535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10536  013AC0  D021               	goto	l8743
 10537  013AC2                     l8741:
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10541                           ;stkvar	_ap @ sp[(-2)+-6]
 10542  013AC2  0EF8               	movlw	-8
 10543  013AC4  006F FF8F FFE6     	movff	plusw1,postinc1
 10544  013ACA  006F FF8F FFE6     	movff	plusw1,postinc1
 10545                           
 10546                           ;stkvar	_cfmt @ sp[(-4)+0]
 10547  013AD0  0EFC               	movlw	252
 10548  013AD2  24E1               	addwf	fsr1l,w,c
 10549  013AD4  6E3D               	movwf	btemp,c
 10550  013AD6  0EFF               	movlw	255
 10551  013AD8  20E2               	addwfc	fsr1h,w,c
 10552  013ADA  6E3E               	movwf	btemp+1,c
 10553  013ADC  0060  F0F7  FFE6   	movff	btemp,postinc1
 10554  013AE2  0060  F0FB  FFE6   	movff	btemp+1,postinc1
 10555                           
 10556                           ;stkvar	_fp @ sp[(-6)+-2]
 10557  013AE8  0EF8               	movlw	-8
 10558  013AEA  006F FF8F FFE6     	movff	plusw1,postinc1
 10559  013AF0  006F FF8F FFE6     	movff	plusw1,postinc1
 10560  013AF6  EC4C  F087         	call	_vfpfcnvrt	;wreg free
 10561  013AFA  503D               	movf	btemp,w,c
 10562  013AFC  0100               	movlb	0	; () banked
 10563  013AFE  27E5               	addwf	_nout& (0+255),f,b
 10564  013B00  503E               	movf	btemp+1,w,c
 10565  013B02  23E6               	addwfc	(_nout+1)& (0+255),f,b
 10566  013B04                     l8743:
 10567                           
 10568                           ; BSR set to: 0
 10569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10570                           ;stkvar	_cfmt @ sp[(-2)+0]
 10571  013B04  50E1               	movf	fsr1l,w,c
 10572  013B06  0FFE               	addlw	-2
 10573  013B08  6ED9               	movwf	fsr2l,c
 10574  013B0A  50E2               	movf	fsr1h,w,c
 10575  013B0C  6EDA               	movwf	fsr2h,c
 10576  013B0E  0EFF               	movlw	255
 10577  013B10  22DA               	addwfc	fsr2h,f,c
 10578  013B12  006F FF7B FFF6     	movff	postinc2,tblptrl
 10579  013B18  006F FF77 FFF7     	movff	postdec2,tblptrh
 10580  013B1E                     	if	0	;tblptru may be non-zero
 10581  013B1E                     	endif
 10582  013B1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10583  013B1E  0E00               	movlw	low (__mediumconst shr (0+16))
 10584  013B20  6EF8               	movwf	tblptru,c
 10585  013B22                     	endif
 10586  013B22  0008               	tblrd		*
 10587  013B24  50F5               	movf	tablat,w,c
 10588  013B26  0900               	iorlw	0
 10589  013B28  A4D8               	btfss	status,2,c
 10590  013B2A  D7CB               	goto	l8741
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10594  013B2C  0060  F394  F03D   	movff	_nout,btemp
 10595  013B32  0060  F398  F03E   	movff	_nout+1,btemp+1
 10596                           
 10597                           ; BSR set to: 0
 10598                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10599  013B38  0EF8               	movlw	248
 10600  013B3A  26E1               	addwf	fsr1l,f,c
 10601  013B3C  0EFF               	movlw	255
 10602  013B3E  22E2               	addwfc	fsr1h,f,c
 10603  013B40  0012               	return		;funcret
 10604  013B42                     __end_of_vfprintf:
 10605                           	opt callstack 0
 10606                           
 10607 ;; *************** function _vfpfcnvrt *****************
 10608 ;; Defined at:
 10609 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10612 ;;		 -> f(6), NULL(0), 
 10613 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10614 ;;		 -> cfmt(2), 
 10615 ;;  ap              2  [STACK] PTR PTR void 
 10616 ;;		 -> ap(2), ap(2), 
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;  ll              8  [STACK] long long 
 10619 ;;  llu             8    0        unsigned long long 
 10620 ;;  f               4    0        unsigned long long 
 10621 ;;  vp              3    0        PTR void 
 10622 ;;  ct              3    0        unsigned char [3]
 10623 ;;  cp              2  [STACK] PTR unsigned char 
 10624 ;;		 -> ?_printf(2), ?_sprintf(2), STR_22(6), STR_3(6), 
 10625 ;;		 -> V(302), 
 10626 ;;  i               2    0        int 
 10627 ;;  done            2    0        int 
 10628 ;;  c               1  [STACK] unsigned char 
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  2  [STACK] int 
 10631 ;; Registers used:
 10632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/0
 10635 ;;		On exit  : 0/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10642 ;;Total ram usage:        0 bytes
 10643 ;; Hardware stack levels used:    1
 10644 ;; Hardware stack levels required when called:    9
 10645 ;; This function calls:
 10646 ;;		_ctoa
 10647 ;;		_dtoa
 10648 ;;		_fputc
 10649 ;;		_stoa
 10650 ;;		_strncmp
 10651 ;; This function is called by:
 10652 ;;		_vfprintf
 10653 ;; This function uses a reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text43
 10657  010E98                     __ptext43:
 10658                           	opt callstack 0
 10659  010E98                     _vfpfcnvrt:
 10660                           	opt callstack 0
 10661                           
 10662                           ; BSR set to: 0
 10663                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10664  010E98  0E0B               	movlw	11
 10665  010E9A  26E1               	addwf	fsr1l,f,c
 10666  010E9C  0E00               	movlw	0
 10667  010E9E  22E2               	addwfc	fsr1h,f,c
 10668                           
 10669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10670                           ;stkvar	_fmt @ sp[(-11)+-4]
 10671                           
 10672                           ;incstack = 0
 10673  010EA0  0EF1               	movlw	-15
 10674  010EA2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10675  010EA8  0EF2               	movlw	-14
 10676  010EAA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10677  010EB0  006F FF7B FFF6     	movff	postinc2,tblptrl
 10678  010EB6  006F FF77 FFF7     	movff	postdec2,tblptrh
 10679  010EBC                     	if	0	;tblptru may be non-zero
 10680  010EBC                     	endif
 10681  010EBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10682  010EBC  0E00               	movlw	low (__mediumconst shr (0+16))
 10683  010EBE  6EF8               	movwf	tblptru,c
 10684  010EC0                     	endif
 10685  010EC0  0008               	tblrd		*
 10686  010EC2  50F5               	movf	tablat,w,c
 10687  010EC4  0A25               	xorlw	37
 10688  010EC6  A4D8               	btfss	status,2,c
 10689  010EC8  D23E               	goto	l8687
 10690                           
 10691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10692                           ;stkvar	_fmt @ sp[(-11)+-4]
 10693  010ECA  0EF1               	movlw	-15
 10694  010ECC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10695  010ED2  0EF2               	movlw	-14
 10696  010ED4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10697  010EDA  2ADE               	incf	postinc2,f,c
 10698  010EDC  0E00               	movlw	0
 10699  010EDE  22DD               	addwfc	postdec2,f,c
 10700                           
 10701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10702  010EE0  6A1D               	clrf	_width,c
 10703  010EE2  6A1E               	clrf	_width+1,c
 10704  010EE4  6A21               	clrf	_flags,c
 10705  010EE6  6A22               	clrf	_flags+1,c
 10706                           
 10707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10708  010EE8  681F               	setf	_prec,c
 10709  010EEA  6820               	setf	_prec+1,c
 10710                           
 10711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10712                           ;stkvar	_fmt @ sp[(-11)+-4]
 10713  010EEC  0EF1               	movlw	-15
 10714  010EEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10715  010EF4  0EF2               	movlw	-14
 10716  010EF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10717  010EFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 10718  010F02  006F FF77 FFF7     	movff	postdec2,tblptrh
 10719  010F08                     	if	0	;tblptru may be non-zero
 10720  010F08                     	endif
 10721  010F08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10722  010F08  0E00               	movlw	low (__mediumconst shr (0+16))
 10723  010F0A  6EF8               	movwf	tblptru,c
 10724  010F0C                     	endif
 10725  010F0C  0008               	tblrd		*
 10726  010F0E  50F5               	movf	tablat,w,c
 10727  010F10  0A63               	xorlw	99
 10728  010F12  A4D8               	btfss	status,2,c
 10729  010F14  D036               	goto	l8637
 10730                           
 10731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10732                           ;stkvar	_fmt @ sp[(-11)+-4]
 10733  010F16  0EF1               	movlw	-15
 10734  010F18  006F FF8F FFD9     	movff	plusw1,fsr2l
 10735  010F1E  0EF2               	movlw	-14
 10736  010F20  006F FF8F FFDA     	movff	plusw1,fsr2h
 10737  010F26  2ADE               	incf	postinc2,f,c
 10738  010F28  0E00               	movlw	0
 10739  010F2A  22DD               	addwfc	postdec2,f,c
 10740                           
 10741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10742                           ;stkvar	_ap @ sp[(-11)+-6]
 10743  010F2C  0EEF               	movlw	-17
 10744  010F2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10745  010F34  0EF0               	movlw	-16
 10746  010F36  006F FF8F FFDA     	movff	plusw1,fsr2h
 10747  010F3C  0E02               	movlw	2
 10748  010F3E  5EDE               	subwf	postinc2,f,c
 10749  010F40  0E00               	movlw	0
 10750  010F42  5ADD               	subwfb	postdec2,f,c
 10751  010F44  006F FF78  F047    	movff	postinc2,btemp+10
 10752  010F4A  006F FF74  F048    	movff	postdec2,btemp+11
 10753  010F50  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10754  010F56  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10755  010F5C  50DF               	movf	indf2,w,c
 10756  010F5E  6E48               	movwf	btemp+11,c
 10757                           
 10758                           ;stkvar	_c @ sp[(-11)+10]
 10759  010F60  0EFF               	movlw	-1
 10760  010F62  0060  F123  FFE3   	movff	btemp+11,plusw1
 10761                           
 10762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10763                           ;stkvar	_c @ sp[(-11)+10]
 10764  010F68  0EFF               	movlw	-1
 10765  010F6A  50E3               	movf	plusw1,w,c
 10766  010F6C  6EE6               	movwf	postinc1,c
 10767                           
 10768                           ;stkvar	_fp @ sp[(-12)+-2]
 10769  010F6E  0EF2               	movlw	-14
 10770  010F70  006F FF8F FFE6     	movff	plusw1,postinc1
 10771  010F76  006F FF8F FFE6     	movff	plusw1,postinc1
 10772  010F7C  ECD5  F09F         	call	_ctoa	;wreg free
 10773  010F80  D20C               	goto	l1981
 10774  010F82                     l8637:
 10775                           
 10776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10777                           ;stkvar	_fmt @ sp[(-11)+-4]
 10778  010F82  0EF1               	movlw	-15
 10779  010F84  006F FF8F FFD9     	movff	plusw1,fsr2l
 10780  010F8A  0EF2               	movlw	-14
 10781  010F8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10782  010F92  006F FF7B FFF6     	movff	postinc2,tblptrl
 10783  010F98  006F FF77 FFF7     	movff	postdec2,tblptrh
 10784  010F9E                     	if	0	;tblptru may be non-zero
 10785  010F9E                     	endif
 10786  010F9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10787  010F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 10788  010FA0  6EF8               	movwf	tblptru,c
 10789  010FA2                     	endif
 10790  010FA2  0008               	tblrd		*
 10791  010FA4  50F5               	movf	tablat,w,c
 10792  010FA6  0A64               	xorlw	100
 10793  010FA8  B4D8               	btfsc	status,2,c
 10794  010FAA  D015               	goto	u5520
 10795                           
 10796                           ;stkvar	_fmt @ sp[(-11)+-4]
 10797  010FAC  0EF1               	movlw	-15
 10798  010FAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10799  010FB4  0EF2               	movlw	-14
 10800  010FB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10801  010FBC  006F FF7B FFF6     	movff	postinc2,tblptrl
 10802  010FC2  006F FF77 FFF7     	movff	postdec2,tblptrh
 10803  010FC8                     	if	0	;tblptru may be non-zero
 10804  010FC8                     	endif
 10805  010FC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10806  010FC8  0E00               	movlw	low (__mediumconst shr (0+16))
 10807  010FCA  6EF8               	movwf	tblptru,c
 10808  010FCC                     	endif
 10809  010FCC  0008               	tblrd		*
 10810  010FCE  50F5               	movf	tablat,w,c
 10811  010FD0  0A69               	xorlw	105
 10812  010FD2  A4D8               	btfss	status,2,c
 10813  010FD4  D075               	goto	l8649
 10814  010FD6                     u5520:
 10815                           
 10816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10817                           ;stkvar	_fmt @ sp[(-11)+-4]
 10818  010FD6  0EF1               	movlw	-15
 10819  010FD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10820  010FDE  0EF2               	movlw	-14
 10821  010FE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10822  010FE6  2ADE               	incf	postinc2,f,c
 10823  010FE8  0E00               	movlw	0
 10824  010FEA  22DD               	addwfc	postdec2,f,c
 10825                           
 10826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10827                           ;stkvar	_ap @ sp[(-11)+-6]
 10828  010FEC  0EEF               	movlw	-17
 10829  010FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10830  010FF4  0EF0               	movlw	-16
 10831  010FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10832  010FFC  0E02               	movlw	2
 10833  010FFE  5EDE               	subwf	postinc2,f,c
 10834  011000  0E00               	movlw	0
 10835  011002  5ADD               	subwfb	postdec2,f,c
 10836  011004  006F FF78  F047    	movff	postinc2,btemp+10
 10837  01100A  006F FF74  F048    	movff	postdec2,btemp+11
 10838  011010  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10839  011016  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10840  01101C  006F FF78  F047    	movff	postinc2,btemp+10
 10841  011022  006F FF74  F048    	movff	postdec2,btemp+11
 10842                           
 10843                           ;stkvar	_ll @ sp[(-11)+0]
 10844  011028  0EF5               	movlw	-11
 10845  01102A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10846  011030  0EF6               	movlw	-10
 10847  011032  0060  F123  FFE3   	movff	btemp+11,plusw1
 10848  011038  6A3D               	clrf	btemp,c
 10849  01103A  BEE3               	btfsc	plusw1,7,c
 10850  01103C  683D               	setf	btemp,c
 10851  01103E  0EF7               	movlw	-9
 10852  011040  0060  F0F7  FFE3   	movff	btemp,plusw1
 10853  011046  0EF8               	movlw	-8
 10854  011048  0060  F0F7  FFE3   	movff	btemp,plusw1
 10855  01104E  0EF9               	movlw	-7
 10856  011050  0060  F0F7  FFE3   	movff	btemp,plusw1
 10857  011056  0EFA               	movlw	-6
 10858  011058  0060  F0F7  FFE3   	movff	btemp,plusw1
 10859  01105E  0EFB               	movlw	-5
 10860  011060  0060  F0F7  FFE3   	movff	btemp,plusw1
 10861  011066  0EFC               	movlw	-4
 10862  011068  0060  F0F7  FFE3   	movff	btemp,plusw1
 10863  01106E                     l8645:
 10864                           
 10865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10866                           ;stkvar	_ll @ sp[(-11)+0]
 10867  01106E  50E1               	movf	fsr1l,w,c
 10868  011070  0FF5               	addlw	-11
 10869  011072  6ED9               	movwf	fsr2l,c
 10870  011074  50E2               	movf	fsr1h,w,c
 10871  011076  6EDA               	movwf	fsr2h,c
 10872  011078  0EFF               	movlw	255
 10873  01107A  22DA               	addwfc	fsr2h,f,c
 10874  01107C  006F FF7B FFE6     	movff	postinc2,postinc1
 10875  011082  006F FF7B FFE6     	movff	postinc2,postinc1
 10876  011088  006F FF7B FFE6     	movff	postinc2,postinc1
 10877  01108E  006F FF7B FFE6     	movff	postinc2,postinc1
 10878  011094  006F FF7B FFE6     	movff	postinc2,postinc1
 10879  01109A  006F FF7B FFE6     	movff	postinc2,postinc1
 10880  0110A0  006F FF7B FFE6     	movff	postinc2,postinc1
 10881  0110A6  006F FF7B FFE6     	movff	postinc2,postinc1
 10882                           
 10883                           ;stkvar	_fp @ sp[(-19)+-2]
 10884  0110AC  0EEB               	movlw	-21
 10885  0110AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10886  0110B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10887  0110BA  EC1C  F08C         	call	_dtoa	;wreg free
 10888  0110BE  D16D               	goto	l1981
 10889  0110C0                     l8649:
 10890                           
 10891                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10892  0110C0  0E02               	movlw	2
 10893  0110C2  6EE6               	movwf	postinc1,c
 10894  0110C4  0E00               	movlw	0
 10895  0110C6  6EE6               	movwf	postinc1,c
 10896  0110C8  0EC6               	movlw	low (STR_4+12)
 10897  0110CA  6EE6               	movwf	postinc1,c
 10898  0110CC  0EFF               	movlw	high (STR_4+12)
 10899  0110CE  6EE6               	movwf	postinc1,c
 10900                           
 10901                           ;stkvar	_fmt @ sp[(-15)+-4]
 10902  0110D0  0EED               	movlw	-19
 10903  0110D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10904  0110D8  0EEE               	movlw	-18
 10905  0110DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10906  0110E0  006F FF78  F047    	movff	postinc2,btemp+10
 10907  0110E6  006F FF74  F048    	movff	postdec2,btemp+11
 10908  0110EC  0060  F11F  FFE6   	movff	btemp+10,postinc1
 10909  0110F2  0060  F123  FFE6   	movff	btemp+11,postinc1
 10910  0110F8  ECF2  F098         	call	_strncmp	;wreg free
 10911  0110FC  503D               	movf	btemp,w,c
 10912  0110FE  103E               	iorwf	btemp+1,w,c
 10913  011100  B4D8               	btfsc	status,2,c
 10914  011102  D022               	goto	u5540
 10915  011104  0E02               	movlw	2
 10916  011106  6EE6               	movwf	postinc1,c
 10917  011108  0E00               	movlw	0
 10918  01110A  6EE6               	movwf	postinc1,c
 10919  01110C  0EF9               	movlw	low STR_27
 10920  01110E  6EE6               	movwf	postinc1,c
 10921  011110  0EFF               	movlw	high STR_27
 10922  011112  6EE6               	movwf	postinc1,c
 10923                           
 10924                           ;stkvar	_fmt @ sp[(-15)+-4]
 10925  011114  0EED               	movlw	-19
 10926  011116  006F FF8F FFD9     	movff	plusw1,fsr2l
 10927  01111C  0EEE               	movlw	-18
 10928  01111E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10929  011124  006F FF78  F047    	movff	postinc2,btemp+10
 10930  01112A  006F FF74  F048    	movff	postdec2,btemp+11
 10931  011130  0060  F11F  FFE6   	movff	btemp+10,postinc1
 10932  011136  0060  F123  FFE6   	movff	btemp+11,postinc1
 10933  01113C  ECF2  F098         	call	_strncmp	;wreg free
 10934  011140  503D               	movf	btemp,w,c
 10935  011142  103E               	iorwf	btemp+1,w,c
 10936  011144  A4D8               	btfss	status,2,c
 10937  011146  D069               	goto	l8661
 10938  011148                     u5540:
 10939                           
 10940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10941                           ;stkvar	_fmt @ sp[(-11)+-4]
 10942  011148  0EF1               	movlw	-15
 10943  01114A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10944  011150  0EF2               	movlw	-14
 10945  011152  006F FF8F FFDA     	movff	plusw1,fsr2h
 10946  011158  0E02               	movlw	2
 10947  01115A  26DE               	addwf	postinc2,f,c
 10948  01115C  0E00               	movlw	0
 10949  01115E  22DD               	addwfc	postdec2,f,c
 10950                           
 10951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10952                           ;stkvar	_ap @ sp[(-11)+-6]
 10953  011160  0EEF               	movlw	-17
 10954  011162  006F FF8F FFD9     	movff	plusw1,fsr2l
 10955  011168  0EF0               	movlw	-16
 10956  01116A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10957  011170  0E04               	movlw	4
 10958  011172  5EDE               	subwf	postinc2,f,c
 10959  011174  0E00               	movlw	0
 10960  011176  5ADD               	subwfb	postdec2,f,c
 10961  011178  006F FF78  F047    	movff	postinc2,btemp+10
 10962  01117E  006F FF74  F048    	movff	postdec2,btemp+11
 10963  011184  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10964  01118A  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10965  011190  006F FF78  F045    	movff	postinc2,btemp+8
 10966  011196  006F FF78  F046    	movff	postinc2,btemp+9
 10967  01119C  006F FF78  F047    	movff	postinc2,btemp+10
 10968  0111A2  006F FF78  F048    	movff	postinc2,btemp+11
 10969  0111A8  0060  F114  F04D   	movff	btemp+8,btemp+16
 10970  0111AE  0060  F118  F04E   	movff	btemp+9,btemp+17
 10971  0111B4  0060  F11C  F04F   	movff	btemp+10,btemp+18
 10972  0111BA  0060  F120  F050   	movff	btemp+11,btemp+19
 10973  0111C0  6A51               	clrf	btemp+20,c
 10974  0111C2  BE50               	btfsc	btemp+19,7,c
 10975  0111C4  6851               	setf	btemp+20,c
 10976  0111C6  0060  F144  F052   	movff	btemp+20,btemp+21
 10977  0111CC  0060  F144  F053   	movff	btemp+20,btemp+22
 10978  0111D2  0060  F144  F054   	movff	btemp+20,btemp+23
 10979                           
 10980                           ;stkvar	_ll @ sp[(-11)+0]
 10981  0111D8  0EF5               	movlw	-11
 10982  0111DA  0060  F137  FFE3   	movff	btemp+16,plusw1
 10983  0111E0  0EF6               	movlw	-10
 10984  0111E2  0060  F13B  FFE3   	movff	btemp+17,plusw1
 10985  0111E8  0EF7               	movlw	-9
 10986  0111EA  0060  F13F  FFE3   	movff	btemp+18,plusw1
 10987  0111F0  0EF8               	movlw	-8
 10988  0111F2  0060  F143  FFE3   	movff	btemp+19,plusw1
 10989  0111F8  0EF9               	movlw	-7
 10990  0111FA  0060  F147  FFE3   	movff	btemp+20,plusw1
 10991  011200  0EFA               	movlw	-6
 10992  011202  0060  F14B  FFE3   	movff	btemp+21,plusw1
 10993  011208  0EFB               	movlw	-5
 10994  01120A  0060  F14F  FFE3   	movff	btemp+22,plusw1
 10995  011210  0EFC               	movlw	-4
 10996  011212  0060  F153  FFE3   	movff	btemp+23,plusw1
 10997  011218  D72A               	goto	l8645
 10998  01121A                     l8661:
 10999                           
 11000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 11001                           ;stkvar	_fmt @ sp[(-11)+-4]
 11002  01121A  0EF1               	movlw	-15
 11003  01121C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11004  011222  0EF2               	movlw	-14
 11005  011224  006F FF8F FFDA     	movff	plusw1,fsr2h
 11006  01122A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11007  011230  006F FF77 FFF7     	movff	postdec2,tblptrh
 11008  011236                     	if	0	;tblptru may be non-zero
 11009  011236                     	endif
 11010  011236                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11011  011236  0E00               	movlw	low (__mediumconst shr (0+16))
 11012  011238  6EF8               	movwf	tblptru,c
 11013  01123A                     	endif
 11014  01123A  0008               	tblrd		*
 11015  01123C  50F5               	movf	tablat,w,c
 11016  01123E  0A73               	xorlw	115
 11017  011240  A4D8               	btfss	status,2,c
 11018  011242  D042               	goto	l8671
 11019                           
 11020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 11021                           ;stkvar	_fmt @ sp[(-11)+-4]
 11022  011244  0EF1               	movlw	-15
 11023  011246  006F FF8F FFD9     	movff	plusw1,fsr2l
 11024  01124C  0EF2               	movlw	-14
 11025  01124E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11026  011254  2ADE               	incf	postinc2,f,c
 11027  011256  0E00               	movlw	0
 11028  011258  22DD               	addwfc	postdec2,f,c
 11029                           
 11030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 11031                           ;stkvar	_ap @ sp[(-11)+-6]
 11032  01125A  0EEF               	movlw	-17
 11033  01125C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11034  011262  0EF0               	movlw	-16
 11035  011264  006F FF8F FFDA     	movff	plusw1,fsr2h
 11036  01126A  0E02               	movlw	2
 11037  01126C  5EDE               	subwf	postinc2,f,c
 11038  01126E  0E00               	movlw	0
 11039  011270  5ADD               	subwfb	postdec2,f,c
 11040  011272  006F FF78  F047    	movff	postinc2,btemp+10
 11041  011278  006F FF74  F048    	movff	postdec2,btemp+11
 11042  01127E  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 11043  011284  0060  F123  FFDA   	movff	btemp+11,fsr2h
 11044  01128A  006F FF78  F047    	movff	postinc2,btemp+10
 11045  011290  006F FF74  F048    	movff	postdec2,btemp+11
 11046                           
 11047                           ;stkvar	_cp @ sp[(-11)+8]
 11048  011296  0EFE               	movlw	-2
 11049  011298  0060  F123  FFE3   	movff	btemp+11,plusw1
 11050  01129E  0EFD               	movlw	-3
 11051  0112A0  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11052                           
 11053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11054                           ;stkvar	_cp @ sp[(-11)+8]
 11055  0112A6  0EFD               	movlw	-3
 11056  0112A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11057  0112AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11058                           
 11059                           ;stkvar	_fp @ sp[(-13)+-2]
 11060  0112B4  0EF1               	movlw	-15
 11061  0112B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11062  0112BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11063  0112C2  ECDD  F092         	call	_stoa	;wreg free
 11064  0112C6  D069               	goto	l1981
 11065  0112C8                     l8671:
 11066                           
 11067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11068                           ;stkvar	_fmt @ sp[(-11)+-4]
 11069  0112C8  0EF1               	movlw	-15
 11070  0112CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11071  0112D0  0EF2               	movlw	-14
 11072  0112D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11073  0112D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11074  0112DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11075  0112E4                     	if	0	;tblptru may be non-zero
 11076  0112E4                     	endif
 11077  0112E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11078  0112E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11079  0112E6  6EF8               	movwf	tblptru,c
 11080  0112E8                     	endif
 11081  0112E8  0008               	tblrd		*
 11082  0112EA  50F5               	movf	tablat,w,c
 11083  0112EC  0A25               	xorlw	37
 11084  0112EE  A4D8               	btfss	status,2,c
 11085  0112F0  D01A               	goto	l8681
 11086                           
 11087                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11088                           ;stkvar	_fmt @ sp[(-11)+-4]
 11089  0112F2  0EF1               	movlw	-15
 11090  0112F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11091  0112FA  0EF2               	movlw	-14
 11092  0112FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11093  011302  2ADE               	incf	postinc2,f,c
 11094  011304  0E00               	movlw	0
 11095  011306  22DD               	addwfc	postdec2,f,c
 11096                           
 11097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11098                           ;stkvar	_fp @ sp[(-11)+-2]
 11099  011308  0EF3               	movlw	-13
 11100  01130A  006F FF8F FFE6     	movff	plusw1,postinc1
 11101  011310  006F FF8F FFE6     	movff	plusw1,postinc1
 11102  011316  0E25               	movlw	37
 11103  011318  6EE6               	movwf	postinc1,c
 11104  01131A  0E00               	movlw	0
 11105  01131C  6EE6               	movwf	postinc1,c
 11106  01131E  ECF0  F099         	call	_fputc	;wreg free
 11107  011322                     l8677:
 11108                           
 11109                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11110  011322  0E01               	movlw	1
 11111  011324  D00C               	goto	L31
 11112  011326                     l8681:
 11113                           
 11114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11115                           ;stkvar	_fmt @ sp[(-11)+-4]
 11116  011326  0EF1               	movlw	-15
 11117  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 11118  01132E  0EF2               	movlw	-14
 11119  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 11120  011336  2ADE               	incf	postinc2,f,c
 11121  011338  0E00               	movlw	0
 11122  01133A  22DD               	addwfc	postdec2,f,c
 11123                           
 11124                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11125  01133C  0E00               	movlw	0
 11126  01133E                     L31:
 11127  01133E  6E3D               	movwf	btemp,c
 11128  011340  0E00               	movlw	0
 11129  011342  6E3E               	movwf	btemp+1,c
 11130  011344  D02A               	goto	l1981
 11131  011346                     l8687:
 11132                           
 11133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11134                           ;stkvar	_fp @ sp[(-11)+-2]
 11135  011346  0EF3               	movlw	-13
 11136  011348  006F FF8F FFE6     	movff	plusw1,postinc1
 11137  01134E  006F FF8F FFE6     	movff	plusw1,postinc1
 11138                           
 11139                           ;stkvar	_fmt @ sp[(-13)+-4]
 11140  011354  0EEF               	movlw	-17
 11141  011356  006F FF8F FFD9     	movff	plusw1,fsr2l
 11142  01135C  0EF0               	movlw	-16
 11143  01135E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11144  011364  006F FF7B FFF6     	movff	postinc2,tblptrl
 11145  01136A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11146  011370                     	if	0	;tblptru may be non-zero
 11147  011370                     	endif
 11148  011370                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11149  011370  0E00               	movlw	low (__mediumconst shr (0+16))
 11150  011372  6EF8               	movwf	tblptru,c
 11151  011374                     	endif
 11152  011374  0008               	tblrd		*
 11153  011376  50F5               	movf	tablat,w,c
 11154  011378  6EE6               	movwf	postinc1,c
 11155  01137A  0E00               	movlw	0
 11156  01137C  6EE6               	movwf	postinc1,c
 11157  01137E  ECF0  F099         	call	_fputc	;wreg free
 11158                           
 11159                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11160                           ;stkvar	_fmt @ sp[(-11)+-4]
 11161  011382  0EF1               	movlw	-15
 11162  011384  006F FF8F FFD9     	movff	plusw1,fsr2l
 11163  01138A  0EF2               	movlw	-14
 11164  01138C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11165  011392  2ADE               	incf	postinc2,f,c
 11166  011394  0E00               	movlw	0
 11167  011396  22DD               	addwfc	postdec2,f,c
 11168  011398  D7C4               	goto	l8677
 11169  01139A                     l1981:
 11170                           
 11171                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11172  01139A  0EEF               	movlw	239
 11173  01139C  26E1               	addwf	fsr1l,f,c
 11174  01139E  0EFF               	movlw	255
 11175  0113A0  22E2               	addwfc	fsr1h,f,c
 11176  0113A2  0012               	return		;funcret
 11177  0113A4                     __end_of_vfpfcnvrt:
 11178                           	opt callstack 0
 11179                           
 11180 ;; *************** function _strncmp *****************
 11181 ;; Defined at:
 11182 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  _l              2  [STACK] PTR const unsigned char 
 11185 ;;		 -> STR_21(91), STR_20(3), STR_19(3), STR_18(3), 
 11186 ;;		 -> STR_17(26), STR_16(26), STR_15(4), STR_14(18), 
 11187 ;;		 -> STR_13(26), STR_12(17), STR_11(21), STR_10(18), 
 11188 ;;		 -> STR_9(6), STR_8(6), STR_7(14), STR_6(15), 
 11189 ;;		 -> STR_5(21), STR_4(15), STR_2(12), STR_1(17), 
 11190 ;;  _r              2  [STACK] PTR const unsigned char 
 11191 ;;		 -> STR_29(3), STR_25(3), 
 11192 ;;  n               2  [STACK] unsigned int 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  r               2  [STACK] PTR const unsigned char 
 11195 ;;		 -> STR_29(3), STR_25(3), 
 11196 ;;  l               2  [STACK] PTR const unsigned char 
 11197 ;;		 -> STR_21(91), STR_20(3), STR_19(3), STR_18(3), 
 11198 ;;		 -> STR_17(26), STR_16(26), STR_15(4), STR_14(18), 
 11199 ;;		 -> STR_13(26), STR_12(17), STR_11(21), STR_10(18), 
 11200 ;;		 -> STR_9(6), STR_8(6), STR_7(14), STR_6(15), 
 11201 ;;		 -> STR_5(21), STR_4(15), STR_2(12), STR_1(17), 
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  2  [STACK] int 
 11204 ;; Registers used:
 11205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11215 ;;Total ram usage:        0 bytes
 11216 ;; Hardware stack levels used:    1
 11217 ;; Hardware stack levels required when called:    3
 11218 ;; This function calls:
 11219 ;;		Nothing
 11220 ;; This function is called by:
 11221 ;;		_vfpfcnvrt
 11222 ;; This function uses a reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text44
 11226  0131E4                     __ptext44:
 11227                           	opt callstack 0
 11228  0131E4                     _strncmp:
 11229                           	opt callstack 0
 11230                           
 11231                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11232  0131E4  52E6               	movf	postinc1,f,c
 11233  0131E6  52E6               	movf	postinc1,f,c
 11234  0131E8  52E6               	movf	postinc1,f,c
 11235  0131EA  52E6               	movf	postinc1,f,c
 11236                           
 11237                           ;stkvar	__l @ sp[(-4)+-2]
 11238                           
 11239                           ;incstack = 0
 11240  0131EC  0EFA               	movlw	-6
 11241  0131EE  006F FF8C  F047    	movff	plusw1,btemp+10
 11242  0131F4  0EFB               	movlw	-5
 11243  0131F6  006F FF8C  F048    	movff	plusw1,btemp+11
 11244                           
 11245                           ;stkvar	_l @ sp[(-4)+2]
 11246  0131FC  0EFF               	movlw	-1
 11247  0131FE  0060  F123  FFE3   	movff	btemp+11,plusw1
 11248  013204  0EFE               	movlw	-2
 11249  013206  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11250                           
 11251                           ;stkvar	__r @ sp[(-4)+-4]
 11252  01320C  0EF8               	movlw	-8
 11253  01320E  006F FF8C  F047    	movff	plusw1,btemp+10
 11254  013214  0EF9               	movlw	-7
 11255  013216  006F FF8C  F048    	movff	plusw1,btemp+11
 11256                           
 11257                           ;stkvar	_r @ sp[(-4)+0]
 11258  01321C  0EFD               	movlw	-3
 11259  01321E  0060  F123  FFE3   	movff	btemp+11,plusw1
 11260  013224  0EFC               	movlw	-4
 11261  013226  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11262                           
 11263                           ;stkvar	_n @ sp[(-4)+-6]
 11264  01322C  0EF6               	movlw	-10
 11265  01322E  006F FF8C  F03D    	movff	plusw1,btemp
 11266  013234  0E01               	movlw	1
 11267  013236  5E3D               	subwf	btemp,f,c
 11268  013238  0EF6               	movlw	-10
 11269  01323A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11270  013240  0EF7               	movlw	-9
 11271  013242  006F FF8C  F03D    	movff	plusw1,btemp
 11272  013248  0E00               	movlw	0
 11273  01324A  5A3D               	subwfb	btemp,f,c
 11274  01324C  0EF7               	movlw	-9
 11275  01324E  0060  F0F7  FFE3   	movff	btemp,plusw1
 11276  013254  0EF6               	movlw	-10
 11277  013256  28E3               	incf	plusw1,w,c
 11278  013258  E13F               	bnz	l5895
 11279  01325A  0EF7               	movlw	-9
 11280  01325C  28E3               	incf	plusw1,w,c
 11281  01325E  A4D8               	btfss	status,2,c
 11282  013260  D03B               	goto	l5895
 11283  013262  0E00               	movlw	0
 11284  013264  6E3D               	movwf	btemp,c
 11285  013266  0E00               	movlw	0
 11286  013268  6E3E               	movwf	btemp+1,c
 11287  01326A  D0B5               	goto	l2738
 11288  01326C                     l5893:
 11289                           
 11290                           ;stkvar	_l @ sp[(-4)+2]
 11291  01326C  0EFE               	movlw	-2
 11292  01326E  50E3               	movf	plusw1,w,c
 11293  013270  0F01               	addlw	1
 11294  013272  6E3D               	movwf	btemp,c
 11295  013274  0EFE               	movlw	-2
 11296  013276  0060  F0F7  FFE3   	movff	btemp,plusw1
 11297  01327C  6A3D               	clrf	btemp,c
 11298  01327E  0EFF               	movlw	-1
 11299  013280  50E3               	movf	plusw1,w,c
 11300  013282  203D               	addwfc	btemp,w,c
 11301  013284  6E3D               	movwf	btemp,c
 11302  013286  0EFF               	movlw	-1
 11303  013288  0060  F0F7  FFE3   	movff	btemp,plusw1
 11304                           
 11305                           ;stkvar	_r @ sp[(-4)+0]
 11306  01328E  0EFC               	movlw	-4
 11307  013290  50E3               	movf	plusw1,w,c
 11308  013292  0F01               	addlw	1
 11309  013294  6E3D               	movwf	btemp,c
 11310  013296  0EFC               	movlw	-4
 11311  013298  0060  F0F7  FFE3   	movff	btemp,plusw1
 11312  01329E  6A3D               	clrf	btemp,c
 11313  0132A0  0EFD               	movlw	-3
 11314  0132A2  50E3               	movf	plusw1,w,c
 11315  0132A4  203D               	addwfc	btemp,w,c
 11316  0132A6  6E3D               	movwf	btemp,c
 11317  0132A8  0EFD               	movlw	-3
 11318  0132AA  0060  F0F7  FFE3   	movff	btemp,plusw1
 11319                           
 11320                           ;stkvar	_n @ sp[(-4)+-6]
 11321  0132B0  0EF6               	movlw	-10
 11322  0132B2  006F FF8C  F03D    	movff	plusw1,btemp
 11323  0132B8  0E01               	movlw	1
 11324  0132BA  5E3D               	subwf	btemp,f,c
 11325  0132BC  0EF6               	movlw	-10
 11326  0132BE  0060  F0F7  FFE3   	movff	btemp,plusw1
 11327  0132C4  0EF7               	movlw	-9
 11328  0132C6  006F FF8C  F03D    	movff	plusw1,btemp
 11329  0132CC  0E00               	movlw	0
 11330  0132CE  5A3D               	subwfb	btemp,f,c
 11331  0132D0  0EF7               	movlw	-9
 11332  0132D2  0060  F0F7  FFE3   	movff	btemp,plusw1
 11333  0132D8                     l5895:
 11334                           
 11335                           ;stkvar	_l @ sp[(-4)+2]
 11336  0132D8  50E1               	movf	fsr1l,w,c
 11337  0132DA  0FFE               	addlw	-2
 11338  0132DC  6ED9               	movwf	fsr2l,c
 11339  0132DE  50E2               	movf	fsr1h,w,c
 11340  0132E0  6EDA               	movwf	fsr2h,c
 11341  0132E2  0EFF               	movlw	255
 11342  0132E4  22DA               	addwfc	fsr2h,f,c
 11343  0132E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11344  0132EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11345  0132F2                     	if	0	;tblptru may be non-zero
 11346  0132F2                     	endif
 11347  0132F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11348  0132F2  0E00               	movlw	low (__mediumconst shr (0+16))
 11349  0132F4  6EF8               	movwf	tblptru,c
 11350  0132F6                     	endif
 11351  0132F6  0008               	tblrd		*
 11352  0132F8  50F5               	movf	tablat,w,c
 11353  0132FA  0900               	iorlw	0
 11354  0132FC  B4D8               	btfsc	status,2,c
 11355  0132FE  D044               	goto	u3270
 11356                           
 11357                           ;stkvar	_r @ sp[(-4)+0]
 11358  013300  50E1               	movf	fsr1l,w,c
 11359  013302  0FFC               	addlw	-4
 11360  013304  6ED9               	movwf	fsr2l,c
 11361  013306  50E2               	movf	fsr1h,w,c
 11362  013308  6EDA               	movwf	fsr2h,c
 11363  01330A  0EFF               	movlw	255
 11364  01330C  22DA               	addwfc	fsr2h,f,c
 11365  01330E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11366  013314  006F FF77 FFF7     	movff	postdec2,tblptrh
 11367  01331A                     	if	0	;tblptru may be non-zero
 11368  01331A                     	endif
 11369  01331A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11370  01331A  0E00               	movlw	low (__mediumconst shr (0+16))
 11371  01331C  6EF8               	movwf	tblptru,c
 11372  01331E                     	endif
 11373  01331E  0008               	tblrd		*
 11374  013320  50F5               	movf	tablat,w,c
 11375  013322  0900               	iorlw	0
 11376  013324  B4D8               	btfsc	status,2,c
 11377  013326  D030               	goto	u3270
 11378                           
 11379                           ;stkvar	_n @ sp[(-4)+-6]
 11380  013328  0EF6               	movlw	-10
 11381  01332A  006F FF8C  F03D    	movff	plusw1,btemp
 11382  013330  0EF7               	movlw	-9
 11383  013332  50E3               	movf	plusw1,w,c
 11384  013334  103D               	iorwf	btemp,w,c
 11385  013336  B4D8               	btfsc	status,2,c
 11386  013338  D027               	goto	u3270
 11387                           
 11388                           ;stkvar	_l @ sp[(-4)+2]
 11389  01333A  50E1               	movf	fsr1l,w,c
 11390  01333C  0FFE               	addlw	-2
 11391  01333E  6ED9               	movwf	fsr2l,c
 11392  013340  50E2               	movf	fsr1h,w,c
 11393  013342  6EDA               	movwf	fsr2h,c
 11394  013344  0EFF               	movlw	255
 11395  013346  22DA               	addwfc	fsr2h,f,c
 11396  013348  006F FF7B FFF6     	movff	postinc2,tblptrl
 11397  01334E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11398  013354                     	if	0	;tblptru may be non-zero
 11399  013354                     	endif
 11400  013354                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11401  013354  0E00               	movlw	low (__mediumconst shr (0+16))
 11402  013356  6EF8               	movwf	tblptru,c
 11403  013358                     	endif
 11404  013358  0008               	tblrd		*
 11405  01335A  006F FFD4  F048    	movff	tablat,btemp+11
 11406                           
 11407                           ;stkvar	_r @ sp[(-4)+0]
 11408  013360  50E1               	movf	fsr1l,w,c
 11409  013362  0FFC               	addlw	-4
 11410  013364  6ED9               	movwf	fsr2l,c
 11411  013366  50E2               	movf	fsr1h,w,c
 11412  013368  6EDA               	movwf	fsr2h,c
 11413  01336A  0EFF               	movlw	255
 11414  01336C  22DA               	addwfc	fsr2h,f,c
 11415  01336E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11416  013374  006F FF77 FFF7     	movff	postdec2,tblptrh
 11417  01337A                     	if	0	;tblptru may be non-zero
 11418  01337A                     	endif
 11419  01337A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11420  01337A  0E00               	movlw	low (__mediumconst shr (0+16))
 11421  01337C  6EF8               	movwf	tblptru,c
 11422  01337E                     	endif
 11423  01337E  0008               	tblrd		*
 11424  013380  50F5               	movf	tablat,w,c
 11425  013382  1848               	xorwf	btemp+11,w,c
 11426  013384  B4D8               	btfsc	status,2,c
 11427  013386  D772               	goto	l5893
 11428  013388                     u3270:
 11429                           
 11430                           ;stkvar	_l @ sp[(-4)+2]
 11431  013388  50E1               	movf	fsr1l,w,c
 11432  01338A  0FFE               	addlw	-2
 11433  01338C  6ED9               	movwf	fsr2l,c
 11434  01338E  50E2               	movf	fsr1h,w,c
 11435  013390  6EDA               	movwf	fsr2h,c
 11436  013392  0EFF               	movlw	255
 11437  013394  22DA               	addwfc	fsr2h,f,c
 11438  013396  006F FF7B FFF6     	movff	postinc2,tblptrl
 11439  01339C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11440  0133A2                     	if	0	;tblptru may be non-zero
 11441  0133A2                     	endif
 11442  0133A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11443  0133A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11444  0133A4  6EF8               	movwf	tblptru,c
 11445  0133A6                     	endif
 11446  0133A6  0008               	tblrd		*
 11447  0133A8  50F5               	movf	tablat,w,c
 11448  0133AA  6E3D               	movwf	btemp,c
 11449  0133AC  6A3E               	clrf	btemp+1,c
 11450                           
 11451                           ;stkvar	_r @ sp[(-4)+0]
 11452  0133AE  50E1               	movf	fsr1l,w,c
 11453  0133B0  0FFC               	addlw	-4
 11454  0133B2  6ED9               	movwf	fsr2l,c
 11455  0133B4  50E2               	movf	fsr1h,w,c
 11456  0133B6  6EDA               	movwf	fsr2h,c
 11457  0133B8  0EFF               	movlw	255
 11458  0133BA  22DA               	addwfc	fsr2h,f,c
 11459  0133BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11460  0133C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11461  0133C8                     	if	0	;tblptru may be non-zero
 11462  0133C8                     	endif
 11463  0133C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11464  0133C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11465  0133CA  6EF8               	movwf	tblptru,c
 11466  0133CC                     	endif
 11467  0133CC  0008               	tblrd		*
 11468  0133CE  50F5               	movf	tablat,w,c
 11469  0133D0  5E3D               	subwf	btemp,f,c
 11470  0133D2  0E00               	movlw	0
 11471  0133D4  5A3E               	subwfb	btemp+1,f,c
 11472  0133D6                     l2738:
 11473                           
 11474                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 11475  0133D6  0EF6               	movlw	246
 11476  0133D8  26E1               	addwf	fsr1l,f,c
 11477  0133DA  0EFF               	movlw	255
 11478  0133DC  22E2               	addwfc	fsr1h,f,c
 11479  0133DE  0012               	return		;funcret
 11480  0133E0                     __end_of_strncmp:
 11481                           	opt callstack 0
 11482                           
 11483 ;; *************** function _stoa *****************
 11484 ;; Defined at:
 11485 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11488 ;;		 -> f(6), NULL(0), 
 11489 ;;  s               2  [STACK] PTR unsigned char 
 11490 ;;		 -> ?_printf(2), ?_sprintf(2), STR_22(6), STR_3(6), 
 11491 ;;		 -> V(302), 
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;  nuls            7  [STACK] unsigned char [7]
 11494 ;;  l               2  [STACK] int 
 11495 ;;  p               2  [STACK] int 
 11496 ;;  cp              2  [STACK] PTR unsigned char 
 11497 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_22(6), 
 11498 ;;		 -> STR_3(6), V(302), 
 11499 ;;  w               2  [STACK] int 
 11500 ;;  i               2  [STACK] int 
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  2  [STACK] int 
 11503 ;; Registers used:
 11504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11514 ;;Total ram usage:        0 bytes
 11515 ;; Hardware stack levels used:    1
 11516 ;; Hardware stack levels required when called:    6
 11517 ;; This function calls:
 11518 ;;		_fputc
 11519 ;;		_strlen
 11520 ;; This function is called by:
 11521 ;;		_vfpfcnvrt
 11522 ;; This function uses a reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text45
 11526  0125BA                     __ptext45:
 11527                           	opt callstack 0
 11528  0125BA                     _stoa:
 11529                           	opt callstack 0
 11530                           
 11531                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11532  0125BA  0E11               	movlw	17
 11533  0125BC  26E1               	addwf	fsr1l,f,c
 11534  0125BE  0E00               	movlw	0
 11535  0125C0  22E2               	addwfc	fsr1h,f,c
 11536                           
 11537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11538                           
 11539                           ;incstack = 0
 11540  0125C2  EE20  F060         	lfsr	2,stoa@F1144
 11541                           
 11542                           ;stkvar	_nuls @ sp[(-17)+0]
 11543  0125C6  0E07               	movlw	7
 11544  0125C8  6E3D               	movwf	btemp,c
 11545  0125CA  0EEF               	movlw	-17
 11546  0125CC                     us539999:
 11547  0125CC  006F FF7B FFE3     	movff	postinc2,plusw1
 11548  0125D2  28E8               	incf	wreg,w,c
 11549  0125D4  2E3D               	decfsz	btemp,f,c
 11550  0125D6  D7FA               	bra	us539999
 11551                           
 11552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 11553                           ;stkvar	_s @ sp[(-17)+-4]
 11554  0125D8  0EEB               	movlw	-21
 11555  0125DA  006F FF8C  F047    	movff	plusw1,btemp+10
 11556  0125E0  0EEC               	movlw	-20
 11557  0125E2  006F FF8C  F048    	movff	plusw1,btemp+11
 11558                           
 11559                           ;stkvar	_cp @ sp[(-17)+11]
 11560  0125E8  0EFB               	movlw	-5
 11561  0125EA  0060  F123  FFE3   	movff	btemp+11,plusw1
 11562  0125F0  0EFA               	movlw	-6
 11563  0125F2  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11564                           
 11565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 11566                           ;stkvar	_cp @ sp[(-17)+11]
 11567  0125F8  0EFA               	movlw	-6
 11568  0125FA  006F FF8C  F03D    	movff	plusw1,btemp
 11569  012600  0EFB               	movlw	-5
 11570  012602  50E3               	movf	plusw1,w,c
 11571  012604  103D               	iorwf	btemp,w,c
 11572  012606  A4D8               	btfss	status,2,c
 11573  012608  D00E               	goto	l8575
 11574                           
 11575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11576                           ;stkvar	_nuls @ sp[(-17)+0]
 11577  01260A  0EEF               	movlw	239
 11578  01260C  24E1               	addwf	fsr1l,w,c
 11579  01260E  6E47               	movwf	btemp+10,c
 11580  012610  0EFF               	movlw	255
 11581  012612  20E2               	addwfc	fsr1h,w,c
 11582  012614  6E48               	movwf	btemp+11,c
 11583                           
 11584                           ;stkvar	_cp @ sp[(-17)+11]
 11585  012616  0EFB               	movlw	-5
 11586  012618  0060  F123  FFE3   	movff	btemp+11,plusw1
 11587  01261E  0EFA               	movlw	-6
 11588  012620  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11589  012626                     l8575:
 11590                           
 11591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11592                           ;stkvar	_cp @ sp[(-17)+11]
 11593  012626  0EFA               	movlw	-6
 11594  012628  006F FF8F FFE6     	movff	plusw1,postinc1
 11595  01262E  006F FF8F FFE6     	movff	plusw1,postinc1
 11596  012634  ECEF  F09E         	call	_strlen	;wreg free
 11597                           
 11598                           ;stkvar	_l @ sp[(-17)+7]
 11599  012638  0EF6               	movlw	-10
 11600  01263A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11601  012640  0EF7               	movlw	-9
 11602  012642  0060  F0FB  FFE3   	movff	btemp+1,plusw1
 11603                           
 11604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11605                           ;stkvar	_p @ sp[(-17)+9]
 11606  012648  0EF8               	movlw	-8
 11607  01264A  0060  F07F  FFE3   	movff	_prec,plusw1
 11608  012650  0EF9               	movlw	-7
 11609  012652  0060  F083  FFE3   	movff	_prec+1,plusw1
 11610                           
 11611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11612                           ;stkvar	_p @ sp[(-17)+9]
 11613  012658  0EF9               	movlw	-7
 11614  01265A  BEE3               	btfsc	plusw1,7,c
 11615  01265C  D023               	goto	l1962
 11616                           
 11617                           ;stkvar	_l @ sp[(-17)+7]
 11618                           ;stkvar	_p @ sp[(-17)+9]
 11619  01265E  50E1               	movf	fsr1l,w,c
 11620  012660  0FF8               	addlw	-8
 11621  012662  6ED9               	movwf	fsr2l,c
 11622  012664  50E2               	movf	fsr1h,w,c
 11623  012666  6EDA               	movwf	fsr2h,c
 11624  012668  0EFF               	movlw	255
 11625  01266A  22DA               	addwfc	fsr2h,f,c
 11626  01266C  0EF6               	movlw	-10
 11627  01266E  50E3               	movf	plusw1,w,c
 11628  012670  5CDE               	subwf	postinc2,w,c
 11629  012672  50DE               	movf	postinc2,w,c
 11630  012674  0A80               	xorlw	128
 11631  012676  6E3D               	movwf	btemp,c
 11632  012678  0EF7               	movlw	-9
 11633  01267A  50E3               	movf	plusw1,w,c
 11634  01267C  0A80               	xorlw	128
 11635  01267E  583D               	subwfb	btemp,w,c
 11636  012680  B0D8               	btfsc	status,0,c
 11637  012682  D010               	goto	l1962
 11638                           
 11639                           ;stkvar	_p @ sp[(-17)+9]
 11640                           ;stkvar	_l @ sp[(-17)+7]
 11641  012684  0EF8               	movlw	-8
 11642  012686  006F FF8C  F03D    	movff	plusw1,btemp
 11643  01268C  0EF6               	movlw	-10
 11644  01268E  0060  F0F7  FFE3   	movff	btemp,plusw1
 11645  012694  0EF9               	movlw	-7
 11646  012696  006F FF8C  F03D    	movff	plusw1,btemp
 11647  01269C  0EF7               	movlw	-9
 11648  01269E  0060  F0F7  FFE3   	movff	btemp,plusw1
 11649  0126A4                     l1962:
 11650                           
 11651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11652                           ;stkvar	_l @ sp[(-17)+7]
 11653                           ;stkvar	_p @ sp[(-17)+9]
 11654  0126A4  0EF6               	movlw	-10
 11655  0126A6  006F FF8C  F03D    	movff	plusw1,btemp
 11656  0126AC  0EF8               	movlw	-8
 11657  0126AE  0060  F0F7  FFE3   	movff	btemp,plusw1
 11658  0126B4  0EF7               	movlw	-9
 11659  0126B6  006F FF8C  F03D    	movff	plusw1,btemp
 11660  0126BC  0EF9               	movlw	-7
 11661  0126BE  0060  F0F7  FFE3   	movff	btemp,plusw1
 11662                           
 11663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11664                           ;stkvar	_w @ sp[(-17)+13]
 11665  0126C4  0EFC               	movlw	-4
 11666  0126C6  0060  F077  FFE3   	movff	_width,plusw1
 11667  0126CC  0EFD               	movlw	-3
 11668  0126CE  0060  F07B  FFE3   	movff	_width+1,plusw1
 11669                           
 11670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11671  0126D4  A021               	btfss	_flags,0,c
 11672  0126D6  D01F               	goto	l8595
 11673  0126D8  D031               	goto	u5440
 11674  0126DA                     l8591:
 11675                           
 11676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11677                           ;stkvar	_fp @ sp[(-17)+-2]
 11678  0126DA  0EED               	movlw	-19
 11679  0126DC  006F FF8F FFE6     	movff	plusw1,postinc1
 11680  0126E2  006F FF8F FFE6     	movff	plusw1,postinc1
 11681  0126E8  0E20               	movlw	32
 11682  0126EA  6EE6               	movwf	postinc1,c
 11683  0126EC  0E00               	movlw	0
 11684  0126EE  6EE6               	movwf	postinc1,c
 11685  0126F0  ECF0  F099         	call	_fputc	;wreg free
 11686                           
 11687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11688                           ;stkvar	_l @ sp[(-17)+7]
 11689  0126F4  0EF6               	movlw	-10
 11690  0126F6  50E3               	movf	plusw1,w,c
 11691  0126F8  0F01               	addlw	1
 11692  0126FA  6E3D               	movwf	btemp,c
 11693  0126FC  0EF6               	movlw	-10
 11694  0126FE  0060  F0F7  FFE3   	movff	btemp,plusw1
 11695  012704  6A3D               	clrf	btemp,c
 11696  012706  0EF7               	movlw	-9
 11697  012708  50E3               	movf	plusw1,w,c
 11698  01270A  203D               	addwfc	btemp,w,c
 11699  01270C  6E3D               	movwf	btemp,c
 11700  01270E  0EF7               	movlw	-9
 11701  012710  0060  F0F7  FFE3   	movff	btemp,plusw1
 11702  012716                     l8595:
 11703                           
 11704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11705                           ;stkvar	_w @ sp[(-17)+13]
 11706                           ;stkvar	_l @ sp[(-17)+7]
 11707  012716  50E1               	movf	fsr1l,w,c
 11708  012718  0FF6               	addlw	-10
 11709  01271A  6ED9               	movwf	fsr2l,c
 11710  01271C  50E2               	movf	fsr1h,w,c
 11711  01271E  6EDA               	movwf	fsr2h,c
 11712  012720  0EFF               	movlw	255
 11713  012722  22DA               	addwfc	fsr2h,f,c
 11714  012724  0EFC               	movlw	-4
 11715  012726  50E3               	movf	plusw1,w,c
 11716  012728  5CDE               	subwf	postinc2,w,c
 11717  01272A  50DE               	movf	postinc2,w,c
 11718  01272C  0A80               	xorlw	128
 11719  01272E  6E3D               	movwf	btemp,c
 11720  012730  0EFD               	movlw	-3
 11721  012732  50E3               	movf	plusw1,w,c
 11722  012734  0A80               	xorlw	128
 11723  012736  583D               	subwfb	btemp,w,c
 11724  012738  A0D8               	btfss	status,0,c
 11725  01273A  D7CF               	goto	l8591
 11726  01273C                     u5440:
 11727                           
 11728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11729                           ;stkvar	_i @ sp[(-17)+15]
 11730  01273C  0EFE               	movlw	-2
 11731  01273E  6AE3               	clrf	plusw1,c
 11732  012740  0EFF               	movlw	-1
 11733  012742  6AE3               	clrf	plusw1,c
 11734                           
 11735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11736  012744  D045               	goto	l8605
 11737  012746                     l8599:
 11738                           
 11739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11740                           ;stkvar	_fp @ sp[(-17)+-2]
 11741  012746  0EED               	movlw	-19
 11742  012748  006F FF8F FFE6     	movff	plusw1,postinc1
 11743  01274E  006F FF8F FFE6     	movff	plusw1,postinc1
 11744                           
 11745                           ;stkvar	_cp @ sp[(-19)+11]
 11746  012754  0EF8               	movlw	-8
 11747  012756  006F FF8F FFF6     	movff	plusw1,tblptrl
 11748  01275C  0EF9               	movlw	-7
 11749  01275E  006F FF8F FFF7     	movff	plusw1,tblptrh
 11750  012764  0E00               	movlw	low (__mediumconst shr (0+16))
 11751  012766  6EF8               	movwf	tblptru,c
 11752  012768  0E1F               	movlw	(high __ramtop+-1)
 11753  01276A  64F7               	cpfsgt	tblptrh,c
 11754  01276C  D003               	bra	u5457
 11755  01276E  0008               	tblrd		*
 11756  012770  50F5               	movf	tablat,w,c
 11757  012772  D007               	bra	u5450
 11758  012774                     u5457:
 11759  012774  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11760  01277A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11761  012780  50EF               	movf	indf0,w,c
 11762  012782                     u5450:
 11763  012782  6EE6               	movwf	postinc1,c
 11764  012784  0E00               	movlw	0
 11765  012786  6EE6               	movwf	postinc1,c
 11766  012788  ECF0  F099         	call	_fputc	;wreg free
 11767                           
 11768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11769                           ;stkvar	_cp @ sp[(-17)+11]
 11770  01278C  0EFA               	movlw	-6
 11771  01278E  50E3               	movf	plusw1,w,c
 11772  012790  0F01               	addlw	1
 11773  012792  6E3D               	movwf	btemp,c
 11774  012794  0EFA               	movlw	-6
 11775  012796  0060  F0F7  FFE3   	movff	btemp,plusw1
 11776  01279C  6A3D               	clrf	btemp,c
 11777  01279E  0EFB               	movlw	-5
 11778  0127A0  50E3               	movf	plusw1,w,c
 11779  0127A2  203D               	addwfc	btemp,w,c
 11780  0127A4  6E3D               	movwf	btemp,c
 11781  0127A6  0EFB               	movlw	-5
 11782  0127A8  0060  F0F7  FFE3   	movff	btemp,plusw1
 11783                           
 11784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11785                           ;stkvar	_i @ sp[(-17)+15]
 11786  0127AE  0EFE               	movlw	-2
 11787  0127B0  50E3               	movf	plusw1,w,c
 11788  0127B2  0F01               	addlw	1
 11789  0127B4  6E3D               	movwf	btemp,c
 11790  0127B6  0EFE               	movlw	-2
 11791  0127B8  0060  F0F7  FFE3   	movff	btemp,plusw1
 11792  0127BE  6A3D               	clrf	btemp,c
 11793  0127C0  0EFF               	movlw	-1
 11794  0127C2  50E3               	movf	plusw1,w,c
 11795  0127C4  203D               	addwfc	btemp,w,c
 11796  0127C6  6E3D               	movwf	btemp,c
 11797  0127C8  0EFF               	movlw	-1
 11798  0127CA  0060  F0F7  FFE3   	movff	btemp,plusw1
 11799  0127D0                     l8605:
 11800                           
 11801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11802                           ;stkvar	_p @ sp[(-17)+9]
 11803                           ;stkvar	_i @ sp[(-17)+15]
 11804  0127D0  50E1               	movf	fsr1l,w,c
 11805  0127D2  0FFE               	addlw	-2
 11806  0127D4  6ED9               	movwf	fsr2l,c
 11807  0127D6  50E2               	movf	fsr1h,w,c
 11808  0127D8  6EDA               	movwf	fsr2h,c
 11809  0127DA  0EFF               	movlw	255
 11810  0127DC  22DA               	addwfc	fsr2h,f,c
 11811  0127DE  0EF8               	movlw	-8
 11812  0127E0  50E3               	movf	plusw1,w,c
 11813  0127E2  5CDE               	subwf	postinc2,w,c
 11814  0127E4  50DE               	movf	postinc2,w,c
 11815  0127E6  0A80               	xorlw	128
 11816  0127E8  6E3D               	movwf	btemp,c
 11817  0127EA  0EF9               	movlw	-7
 11818  0127EC  50E3               	movf	plusw1,w,c
 11819  0127EE  0A80               	xorlw	128
 11820  0127F0  583D               	subwfb	btemp,w,c
 11821  0127F2  A0D8               	btfss	status,0,c
 11822  0127F4  D7A8               	goto	l8599
 11823                           
 11824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11825  0127F6  B021               	btfsc	_flags,0,c
 11826  0127F8  D01F               	goto	l8613
 11827  0127FA  D031               	goto	u5480
 11828  0127FC                     l8609:
 11829                           
 11830                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11831                           ;stkvar	_fp @ sp[(-17)+-2]
 11832  0127FC  0EED               	movlw	-19
 11833  0127FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11834  012804  006F FF8F FFE6     	movff	plusw1,postinc1
 11835  01280A  0E20               	movlw	32
 11836  01280C  6EE6               	movwf	postinc1,c
 11837  01280E  0E00               	movlw	0
 11838  012810  6EE6               	movwf	postinc1,c
 11839  012812  ECF0  F099         	call	_fputc	;wreg free
 11840                           
 11841                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11842                           ;stkvar	_l @ sp[(-17)+7]
 11843  012816  0EF6               	movlw	-10
 11844  012818  50E3               	movf	plusw1,w,c
 11845  01281A  0F01               	addlw	1
 11846  01281C  6E3D               	movwf	btemp,c
 11847  01281E  0EF6               	movlw	-10
 11848  012820  0060  F0F7  FFE3   	movff	btemp,plusw1
 11849  012826  6A3D               	clrf	btemp,c
 11850  012828  0EF7               	movlw	-9
 11851  01282A  50E3               	movf	plusw1,w,c
 11852  01282C  203D               	addwfc	btemp,w,c
 11853  01282E  6E3D               	movwf	btemp,c
 11854  012830  0EF7               	movlw	-9
 11855  012832  0060  F0F7  FFE3   	movff	btemp,plusw1
 11856  012838                     l8613:
 11857                           
 11858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11859                           ;stkvar	_w @ sp[(-17)+13]
 11860                           ;stkvar	_l @ sp[(-17)+7]
 11861  012838  50E1               	movf	fsr1l,w,c
 11862  01283A  0FF6               	addlw	-10
 11863  01283C  6ED9               	movwf	fsr2l,c
 11864  01283E  50E2               	movf	fsr1h,w,c
 11865  012840  6EDA               	movwf	fsr2h,c
 11866  012842  0EFF               	movlw	255
 11867  012844  22DA               	addwfc	fsr2h,f,c
 11868  012846  0EFC               	movlw	-4
 11869  012848  50E3               	movf	plusw1,w,c
 11870  01284A  5CDE               	subwf	postinc2,w,c
 11871  01284C  50DE               	movf	postinc2,w,c
 11872  01284E  0A80               	xorlw	128
 11873  012850  6E3D               	movwf	btemp,c
 11874  012852  0EFD               	movlw	-3
 11875  012854  50E3               	movf	plusw1,w,c
 11876  012856  0A80               	xorlw	128
 11877  012858  583D               	subwfb	btemp,w,c
 11878  01285A  A0D8               	btfss	status,0,c
 11879  01285C  D7CF               	goto	l8609
 11880  01285E                     u5480:
 11881                           
 11882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 11883                           ;stkvar	_l @ sp[(-17)+7]
 11884  01285E  0EF6               	movlw	-10
 11885  012860  006F FF8C  F03D    	movff	plusw1,btemp
 11886  012866  0EF7               	movlw	-9
 11887  012868  006F FF8C  F03E    	movff	plusw1,btemp+1
 11888                           
 11889                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11890  01286E  0EEB               	movlw	235
 11891  012870  26E1               	addwf	fsr1l,f,c
 11892  012872  0EFF               	movlw	255
 11893  012874  22E2               	addwfc	fsr1h,f,c
 11894  012876  0012               	return		;funcret
 11895  012878                     __end_of_stoa:
 11896                           	opt callstack 0
 11897                           
 11898 ;; *************** function _dtoa *****************
 11899 ;; Defined at:
 11900 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11901 ;; Parameters:    Size  Location     Type
 11902 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11903 ;;		 -> f(6), NULL(0), 
 11904 ;;  d               8  [STACK] long long 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;  n               8  [STACK] long long 
 11907 ;;  i               2  [STACK] int 
 11908 ;;  s               2  [STACK] int 
 11909 ;;  w               2  [STACK] int 
 11910 ;;  p               2  [STACK] int 
 11911 ;; Return value:  Size  Location     Type
 11912 ;;                  2  [STACK] int 
 11913 ;; Registers used:
 11914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11924 ;;Total ram usage:        0 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    8
 11927 ;; This function calls:
 11928 ;;		___aodiv
 11929 ;;		___aomod
 11930 ;;		_abs
 11931 ;;		_pad
 11932 ;; This function is called by:
 11933 ;;		_vfpfcnvrt
 11934 ;; This function uses a reentrant model
 11935 ;;
 11936                           
 11937                           	psect	text46
 11938  011838                     __ptext46:
 11939                           	opt callstack 0
 11940  011838                     _dtoa:
 11941                           	opt callstack 0
 11942                           
 11943                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11944  011838  0E12               	movlw	18
 11945  01183A  26E1               	addwf	fsr1l,f,c
 11946  01183C  0E00               	movlw	0
 11947  01183E  22E2               	addwfc	fsr1h,f,c
 11948                           
 11949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 11950                           ;stkvar	_d @ sp[(-18)+-10]
 11951                           
 11952                           ;incstack = 0
 11953  011840  0EE4               	movlw	228
 11954  011842  24E1               	addwf	fsr1l,w,c
 11955  011844  6ED9               	movwf	fsr2l,c
 11956  011846  0EFF               	movlw	255
 11957  011848  20E2               	addwfc	fsr1h,w,c
 11958  01184A  6EDA               	movwf	fsr2h,c
 11959                           
 11960                           ;stkvar	_n @ sp[(-18)+2]
 11961  01184C  0E08               	movlw	8
 11962  01184E  6E3D               	movwf	btemp,c
 11963  011850  0EF0               	movlw	-16
 11964  011852                     us522999:
 11965  011852  006F FF7B FFE3     	movff	postinc2,plusw1
 11966  011858  28E8               	incf	wreg,w,c
 11967  01185A  2E3D               	decfsz	btemp,f,c
 11968  01185C  D7FA               	bra	us522999
 11969                           
 11970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 11971                           ;stkvar	_n @ sp[(-18)+2]
 11972  01185E  0EF7               	movlw	-9
 11973  011860  AEE3               	btfss	plusw1,7,c
 11974  011862  D002               	goto	u5230
 11975  011864  0E01               	movlw	1
 11976  011866  D001               	goto	u5240
 11977  011868                     u5230:
 11978  011868  0E00               	movlw	0
 11979  01186A                     u5240:
 11980  01186A  6E47               	movwf	btemp+10,c
 11981  01186C  6A48               	clrf	btemp+11,c
 11982                           
 11983                           ;stkvar	_s @ sp[(-18)+12]
 11984  01186E  0EFA               	movlw	-6
 11985  011870  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11986  011876  0EFB               	movlw	-5
 11987  011878  0060  F123  FFE3   	movff	btemp+11,plusw1
 11988                           
 11989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 11990                           ;stkvar	_s @ sp[(-18)+12]
 11991  01187E  0EFA               	movlw	-6
 11992  011880  006F FF8C  F03D    	movff	plusw1,btemp
 11993  011886  0EFB               	movlw	-5
 11994  011888  50E3               	movf	plusw1,w,c
 11995  01188A  103D               	iorwf	btemp,w,c
 11996  01188C  B4D8               	btfsc	status,2,c
 11997  01188E  D025               	goto	u5260
 11998                           
 11999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 12000                           ;stkvar	_n @ sp[(-18)+2]
 12001                           ;stkvar	_n @ sp[(-18)+2]
 12002  011890  0EF0               	movlw	-16
 12003  011892  6CE3               	negf	plusw1,c
 12004  011894  0EF1               	movlw	-15
 12005  011896  1EE3               	comf	plusw1,f,c
 12006  011898  0EF2               	movlw	-14
 12007  01189A  1EE3               	comf	plusw1,f,c
 12008  01189C  0EF3               	movlw	-13
 12009  01189E  1EE3               	comf	plusw1,f,c
 12010  0118A0  0EF4               	movlw	-12
 12011  0118A2  1EE3               	comf	plusw1,f,c
 12012  0118A4  0EF5               	movlw	-11
 12013  0118A6  1EE3               	comf	plusw1,f,c
 12014  0118A8  0EF6               	movlw	-10
 12015  0118AA  1EE3               	comf	plusw1,f,c
 12016  0118AC  0EF7               	movlw	-9
 12017  0118AE  1EE3               	comf	plusw1,f,c
 12018  0118B0  E314               	bnc	u5260
 12019  0118B2  0EF1               	movlw	-15
 12020  0118B4  2AE3               	incf	plusw1,f,c
 12021  0118B6  E311               	bnc	u5260
 12022  0118B8  0EF2               	movlw	-14
 12023  0118BA  2AE3               	incf	plusw1,f,c
 12024  0118BC  E30E               	bnc	u5260
 12025  0118BE  0EF3               	movlw	-13
 12026  0118C0  2AE3               	incf	plusw1,f,c
 12027  0118C2  E30B               	bnc	u5260
 12028  0118C4  0EF4               	movlw	-12
 12029  0118C6  2AE3               	incf	plusw1,f,c
 12030  0118C8  E308               	bnc	u5260
 12031  0118CA  0EF5               	movlw	-11
 12032  0118CC  2AE3               	incf	plusw1,f,c
 12033  0118CE  E305               	bnc	u5260
 12034  0118D0  0EF6               	movlw	-10
 12035  0118D2  2AE3               	incf	plusw1,f,c
 12036  0118D4  E302               	bnc	u5260
 12037  0118D6  0EF7               	movlw	-9
 12038  0118D8  2AE3               	incf	plusw1,f,c
 12039  0118DA                     u5260:
 12040                           
 12041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 12042  0118DA  AE20               	btfss	_prec+1,7,c
 12043                           
 12044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 12045  0118DC  9221               	bcf	_flags,1,c
 12046                           
 12047                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 12048  0118DE  BE20               	btfsc	_prec+1,7,c
 12049  0118E0  D005               	goto	u5280
 12050  0118E2  5020               	movf	_prec+1,w,c
 12051  0118E4  E110               	bnz	l8517
 12052  0118E6  041F               	decf	_prec,w,c
 12053  0118E8  B0D8               	btfsc	status,0,c
 12054  0118EA  D00D               	goto	l8517
 12055  0118EC                     u5280:
 12056  0118EC  0E01               	movlw	1
 12057  0118EE  6E47               	movwf	btemp+10,c
 12058  0118F0  0E00               	movlw	0
 12059  0118F2  6E48               	movwf	btemp+11,c
 12060                           
 12061                           ;stkvar	_p @ sp[(-18)+16]
 12062  0118F4  0EFE               	movlw	-2
 12063  0118F6  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12064  0118FC  0EFF               	movlw	-1
 12065  0118FE  0060  F123  FFE3   	movff	btemp+11,plusw1
 12066  011904  D008               	goto	l1935
 12067  011906                     l8517:
 12068                           
 12069                           ;stkvar	_p @ sp[(-18)+16]
 12070  011906  0EFE               	movlw	-2
 12071  011908  0060  F07F  FFE3   	movff	_prec,plusw1
 12072  01190E  0EFF               	movlw	-1
 12073  011910  0060  F083  FFE3   	movff	_prec+1,plusw1
 12074  011916                     l1935:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 12077                           ;stkvar	_w @ sp[(-18)+14]
 12078  011916  0EFC               	movlw	-4
 12079  011918  0060  F077  FFE3   	movff	_width,plusw1
 12080  01191E  0EFD               	movlw	-3
 12081  011920  0060  F07B  FFE3   	movff	_width+1,plusw1
 12082                           
 12083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 12084                           ;stkvar	_s @ sp[(-18)+12]
 12085  011926  0EFA               	movlw	-6
 12086  011928  006F FF8C  F03D    	movff	plusw1,btemp
 12087  01192E  0EFB               	movlw	-5
 12088  011930  50E3               	movf	plusw1,w,c
 12089  011932  103D               	iorwf	btemp,w,c
 12090  011934  A4D8               	btfss	status,2,c
 12091  011936  D002               	goto	u5300
 12092  011938  A421               	btfss	_flags,2,c
 12093  01193A  D00A               	goto	l8525
 12094  01193C                     u5300:
 12095                           
 12096                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 12097                           ;stkvar	_w @ sp[(-18)+14]
 12098  01193C  50E1               	movf	fsr1l,w,c
 12099  01193E  0FFC               	addlw	-4
 12100  011940  6ED9               	movwf	fsr2l,c
 12101  011942  50E2               	movf	fsr1h,w,c
 12102  011944  6EDA               	movwf	fsr2h,c
 12103  011946  0EFF               	movlw	255
 12104  011948  22DA               	addwfc	fsr2h,f,c
 12105  01194A  06DE               	decf	postinc2,f,c
 12106  01194C  0E00               	movlw	0
 12107  01194E  5ADD               	subwfb	postdec2,f,c
 12108  011950                     l8525:
 12109                           
 12110                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 12111  011950  0E1F               	movlw	31
 12112  011952  6E47               	movwf	btemp+10,c
 12113  011954  0E00               	movlw	0
 12114  011956  6E48               	movwf	btemp+11,c
 12115                           
 12116                           ;stkvar	_i @ sp[(-18)+10]
 12117  011958  0EF8               	movlw	-8
 12118  01195A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12119  011960  0EF9               	movlw	-7
 12120  011962  0060  F123  FFE3   	movff	btemp+11,plusw1
 12121                           
 12122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 12123  011968  0101               	movlb	1	; () banked
 12124  01196A  6BC5               	clrf	(_dbuf+31)& (0+255),b
 12125                           
 12126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12127  01196C  D109               	goto	l8539
 12128  01196E                     l8529:
 12129                           
 12130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 12131                           ;stkvar	_i @ sp[(-18)+10]
 12132  01196E  50E1               	movf	fsr1l,w,c
 12133  011970  0FF8               	addlw	-8
 12134  011972  6ED9               	movwf	fsr2l,c
 12135  011974  50E2               	movf	fsr1h,w,c
 12136  011976  6EDA               	movwf	fsr2h,c
 12137  011978  0EFF               	movlw	255
 12138  01197A  22DA               	addwfc	fsr2h,f,c
 12139  01197C  06DE               	decf	postinc2,f,c
 12140  01197E  0E00               	movlw	0
 12141  011980  5ADD               	subwfb	postdec2,f,c
 12142                           
 12143                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 12144  011982  0E0A               	movlw	10
 12145  011984  6EE6               	movwf	postinc1,c
 12146  011986  0E00               	movlw	0
 12147  011988  6EE6               	movwf	postinc1,c
 12148  01198A  0E00               	movlw	0
 12149  01198C  6EE6               	movwf	postinc1,c
 12150  01198E  0E00               	movlw	0
 12151  011990  6EE6               	movwf	postinc1,c
 12152  011992  0E00               	movlw	0
 12153  011994  6EE6               	movwf	postinc1,c
 12154  011996  0E00               	movlw	0
 12155  011998  6EE6               	movwf	postinc1,c
 12156  01199A  0E00               	movlw	0
 12157  01199C  6EE6               	movwf	postinc1,c
 12158  01199E  0E00               	movlw	0
 12159  0119A0  6EE6               	movwf	postinc1,c
 12160                           
 12161                           ;stkvar	_n @ sp[(-26)+2]
 12162  0119A2  50E1               	movf	fsr1l,w,c
 12163  0119A4  0FE8               	addlw	-24
 12164  0119A6  6ED9               	movwf	fsr2l,c
 12165  0119A8  50E2               	movf	fsr1h,w,c
 12166  0119AA  6EDA               	movwf	fsr2h,c
 12167  0119AC  0EFF               	movlw	255
 12168  0119AE  22DA               	addwfc	fsr2h,f,c
 12169  0119B0  006F FF7B FFE6     	movff	postinc2,postinc1
 12170  0119B6  006F FF7B FFE6     	movff	postinc2,postinc1
 12171  0119BC  006F FF7B FFE6     	movff	postinc2,postinc1
 12172  0119C2  006F FF7B FFE6     	movff	postinc2,postinc1
 12173  0119C8  006F FF7B FFE6     	movff	postinc2,postinc1
 12174  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
 12175  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
 12176  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
 12177  0119E0  ECBA  F096         	call	___aomod	;wreg free
 12178  0119E4  52E5               	movf	postdec1,f,c
 12179  0119E6  006F FF9C  F054    	movff	indf1,btemp+23
 12180  0119EC  52E5               	movf	postdec1,f,c
 12181  0119EE  006F FF9C  F053    	movff	indf1,btemp+22
 12182  0119F4  52E5               	movf	postdec1,f,c
 12183  0119F6  006F FF9C  F052    	movff	indf1,btemp+21
 12184  0119FC  52E5               	movf	postdec1,f,c
 12185  0119FE  006F FF9C  F051    	movff	indf1,btemp+20
 12186  011A04  52E5               	movf	postdec1,f,c
 12187  011A06  006F FF9C  F050    	movff	indf1,btemp+19
 12188  011A0C  52E5               	movf	postdec1,f,c
 12189  011A0E  006F FF9C  F04F    	movff	indf1,btemp+18
 12190  011A14  52E5               	movf	postdec1,f,c
 12191  011A16  006F FF9C  F04E    	movff	indf1,btemp+17
 12192  011A1C  52E5               	movf	postdec1,f,c
 12193  011A1E  006F FF9C  F04D    	movff	indf1,btemp+16
 12194  011A24  0EF8               	movlw	248
 12195  011A26  26E1               	addwf	fsr1l,f,c
 12196  011A28  0EFF               	movlw	255
 12197  011A2A  22E2               	addwfc	fsr1h,f,c
 12198  011A2C  0060  F134  F047   	movff	btemp+16,btemp+10
 12199  011A32  0060  F138  F048   	movff	btemp+17,btemp+11
 12200  011A38  0060  F11F  FFE6   	movff	btemp+10,postinc1
 12201  011A3E  0060  F123  FFE6   	movff	btemp+11,postinc1
 12202  011A44  EC65  F0A2         	call	_abs	;wreg free
 12203  011A48  0E30               	movlw	48
 12204  011A4A  263D               	addwf	btemp,f,c
 12205                           
 12206                           ;stkvar	_i @ sp[(-18)+10]
 12207  011A4C  0EF8               	movlw	-8
 12208  011A4E  006F FF8C  F047    	movff	plusw1,btemp+10
 12209  011A54  0EF9               	movlw	-7
 12210  011A56  006F FF8C  F048    	movff	plusw1,btemp+11
 12211  011A5C  0EA6               	movlw	low _dbuf
 12212  011A5E  2447               	addwf	btemp+10,w,c
 12213  011A60  6ED9               	movwf	fsr2l,c
 12214  011A62  0E01               	movlw	high _dbuf
 12215  011A64  2048               	addwfc	btemp+11,w,c
 12216  011A66  6EDA               	movwf	fsr2h,c
 12217  011A68  0060  F0F7  FFDF   	movff	btemp,indf2
 12218                           
 12219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 12220                           ;stkvar	_p @ sp[(-18)+16]
 12221  011A6E  50E1               	movf	fsr1l,w,c
 12222  011A70  0FFE               	addlw	-2
 12223  011A72  6ED9               	movwf	fsr2l,c
 12224  011A74  50E2               	movf	fsr1h,w,c
 12225  011A76  6EDA               	movwf	fsr2h,c
 12226  011A78  0EFF               	movlw	255
 12227  011A7A  22DA               	addwfc	fsr2h,f,c
 12228  011A7C  06DE               	decf	postinc2,f,c
 12229  011A7E  0E00               	movlw	0
 12230  011A80  5ADD               	subwfb	postdec2,f,c
 12231                           
 12232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 12233                           ;stkvar	_w @ sp[(-18)+14]
 12234  011A82  50E1               	movf	fsr1l,w,c
 12235  011A84  0FFC               	addlw	-4
 12236  011A86  6ED9               	movwf	fsr2l,c
 12237  011A88  50E2               	movf	fsr1h,w,c
 12238  011A8A  6EDA               	movwf	fsr2h,c
 12239  011A8C  0EFF               	movlw	255
 12240  011A8E  22DA               	addwfc	fsr2h,f,c
 12241  011A90  06DE               	decf	postinc2,f,c
 12242  011A92  0E00               	movlw	0
 12243  011A94  5ADD               	subwfb	postdec2,f,c
 12244                           
 12245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 12246  011A96  0E0A               	movlw	10
 12247  011A98  6EE6               	movwf	postinc1,c
 12248  011A9A  0E00               	movlw	0
 12249  011A9C  6EE6               	movwf	postinc1,c
 12250  011A9E  0E00               	movlw	0
 12251  011AA0  6EE6               	movwf	postinc1,c
 12252  011AA2  0E00               	movlw	0
 12253  011AA4  6EE6               	movwf	postinc1,c
 12254  011AA6  0E00               	movlw	0
 12255  011AA8  6EE6               	movwf	postinc1,c
 12256  011AAA  0E00               	movlw	0
 12257  011AAC  6EE6               	movwf	postinc1,c
 12258  011AAE  0E00               	movlw	0
 12259  011AB0  6EE6               	movwf	postinc1,c
 12260  011AB2  0E00               	movlw	0
 12261  011AB4  6EE6               	movwf	postinc1,c
 12262                           
 12263                           ;stkvar	_n @ sp[(-26)+2]
 12264  011AB6  50E1               	movf	fsr1l,w,c
 12265  011AB8  0FE8               	addlw	-24
 12266  011ABA  6ED9               	movwf	fsr2l,c
 12267  011ABC  50E2               	movf	fsr1h,w,c
 12268  011ABE  6EDA               	movwf	fsr2h,c
 12269  011AC0  0EFF               	movlw	255
 12270  011AC2  22DA               	addwfc	fsr2h,f,c
 12271  011AC4  006F FF7B FFE6     	movff	postinc2,postinc1
 12272  011ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 12273  011AD0  006F FF7B FFE6     	movff	postinc2,postinc1
 12274  011AD6  006F FF7B FFE6     	movff	postinc2,postinc1
 12275  011ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 12276  011AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 12277  011AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 12278  011AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 12279  011AF4  EC3C  F094         	call	___aodiv	;wreg free
 12280  011AF8  52E5               	movf	postdec1,f,c
 12281  011AFA  006F FF9C  F054    	movff	indf1,btemp+23
 12282  011B00  52E5               	movf	postdec1,f,c
 12283  011B02  006F FF9C  F053    	movff	indf1,btemp+22
 12284  011B08  52E5               	movf	postdec1,f,c
 12285  011B0A  006F FF9C  F052    	movff	indf1,btemp+21
 12286  011B10  52E5               	movf	postdec1,f,c
 12287  011B12  006F FF9C  F051    	movff	indf1,btemp+20
 12288  011B18  52E5               	movf	postdec1,f,c
 12289  011B1A  006F FF9C  F050    	movff	indf1,btemp+19
 12290  011B20  52E5               	movf	postdec1,f,c
 12291  011B22  006F FF9C  F04F    	movff	indf1,btemp+18
 12292  011B28  52E5               	movf	postdec1,f,c
 12293  011B2A  006F FF9C  F04E    	movff	indf1,btemp+17
 12294  011B30  52E5               	movf	postdec1,f,c
 12295  011B32  006F FF9C  F04D    	movff	indf1,btemp+16
 12296  011B38  0EF8               	movlw	248
 12297  011B3A  26E1               	addwf	fsr1l,f,c
 12298  011B3C  0EFF               	movlw	255
 12299  011B3E  22E2               	addwfc	fsr1h,f,c
 12300                           
 12301                           ;stkvar	_n @ sp[(-18)+2]
 12302  011B40  0EF0               	movlw	-16
 12303  011B42  0060  F137  FFE3   	movff	btemp+16,plusw1
 12304  011B48  0EF1               	movlw	-15
 12305  011B4A  0060  F13B  FFE3   	movff	btemp+17,plusw1
 12306  011B50  0EF2               	movlw	-14
 12307  011B52  0060  F13F  FFE3   	movff	btemp+18,plusw1
 12308  011B58  0EF3               	movlw	-13
 12309  011B5A  0060  F143  FFE3   	movff	btemp+19,plusw1
 12310  011B60  0EF4               	movlw	-12
 12311  011B62  0060  F147  FFE3   	movff	btemp+20,plusw1
 12312  011B68  0EF5               	movlw	-11
 12313  011B6A  0060  F14B  FFE3   	movff	btemp+21,plusw1
 12314  011B70  0EF6               	movlw	-10
 12315  011B72  0060  F14F  FFE3   	movff	btemp+22,plusw1
 12316  011B78  0EF7               	movlw	-9
 12317  011B7A  0060  F153  FFE3   	movff	btemp+23,plusw1
 12318  011B80                     l8539:
 12319                           
 12320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12321                           ;stkvar	_i @ sp[(-18)+10]
 12322  011B80  0EF9               	movlw	-7
 12323  011B82  BEE3               	btfsc	plusw1,7,c
 12324  011B84  D036               	goto	u5350
 12325  011B86  0EF9               	movlw	-7
 12326  011B88  50E3               	movf	plusw1,w,c
 12327  011B8A  E104               	bnz	u5310
 12328  011B8C  0EF8               	movlw	-8
 12329  011B8E  04E3               	decf	plusw1,w,c
 12330  011B90  A0D8               	btfss	status,0,c
 12331  011B92  D02F               	goto	u5350
 12332  011B94                     u5310:
 12333                           
 12334                           ;stkvar	_n @ sp[(-18)+2]
 12335  011B94  0EF0               	movlw	-16
 12336  011B96  50E3               	movf	plusw1,w,c
 12337  011B98  E115               	bnz	u5321
 12338  011B9A  0EF1               	movlw	-15
 12339  011B9C  50E3               	movf	plusw1,w,c
 12340  011B9E  E112               	bnz	u5321
 12341  011BA0  0EF2               	movlw	-14
 12342  011BA2  50E3               	movf	plusw1,w,c
 12343  011BA4  E10F               	bnz	u5321
 12344  011BA6  0EF3               	movlw	-13
 12345  011BA8  50E3               	movf	plusw1,w,c
 12346  011BAA  E10C               	bnz	u5321
 12347  011BAC  0EF4               	movlw	-12
 12348  011BAE  50E3               	movf	plusw1,w,c
 12349  011BB0  E109               	bnz	u5321
 12350  011BB2  0EF5               	movlw	-11
 12351  011BB4  50E3               	movf	plusw1,w,c
 12352  011BB6  E106               	bnz	u5321
 12353  011BB8  0EF6               	movlw	-10
 12354  011BBA  50E3               	movf	plusw1,w,c
 12355  011BBC  E103               	bnz	u5321
 12356  011BBE  0EF7               	movlw	-9
 12357  011BC0  50E3               	movf	plusw1,w,c
 12358  011BC2  A4D8               	btfss	status,2,c
 12359  011BC4                     u5321:
 12360  011BC4  D6D4               	goto	l8529
 12361                           
 12362                           ;stkvar	_p @ sp[(-18)+16]
 12363  011BC6  0EFF               	movlw	-1
 12364  011BC8  BEE3               	btfsc	plusw1,7,c
 12365  011BCA  D007               	goto	u5330
 12366  011BCC  0EFF               	movlw	-1
 12367  011BCE  50E3               	movf	plusw1,w,c
 12368  011BD0  E103               	bnz	u5331
 12369  011BD2  0EFE               	movlw	-2
 12370  011BD4  04E3               	decf	plusw1,w,c
 12371  011BD6  B0D8               	btfsc	status,0,c
 12372  011BD8                     u5331:
 12373  011BD8  D6CA               	goto	l8529
 12374  011BDA                     u5330:
 12375                           
 12376                           ;stkvar	_w @ sp[(-18)+14]
 12377  011BDA  0EFD               	movlw	-3
 12378  011BDC  BEE3               	btfsc	plusw1,7,c
 12379  011BDE  D009               	goto	u5350
 12380  011BE0  0EFD               	movlw	-3
 12381  011BE2  50E3               	movf	plusw1,w,c
 12382  011BE4  E104               	bnz	u5340
 12383  011BE6  0EFC               	movlw	-4
 12384  011BE8  04E3               	decf	plusw1,w,c
 12385  011BEA  A0D8               	btfss	status,0,c
 12386  011BEC  D002               	goto	u5350
 12387  011BEE                     u5340:
 12388  011BEE  B221               	btfsc	_flags,1,c
 12389  011BF0  D6BE               	goto	l8529
 12390  011BF2                     u5350:
 12391                           
 12392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 12393                           ;stkvar	_s @ sp[(-18)+12]
 12394  011BF2  0EFA               	movlw	-6
 12395  011BF4  006F FF8C  F03D    	movff	plusw1,btemp
 12396  011BFA  0EFB               	movlw	-5
 12397  011BFC  50E3               	movf	plusw1,w,c
 12398  011BFE  103D               	iorwf	btemp,w,c
 12399  011C00  A4D8               	btfss	status,2,c
 12400  011C02  D002               	goto	u5370
 12401  011C04  A421               	btfss	_flags,2,c
 12402  011C06  D033               	goto	l8563
 12403  011C08                     u5370:
 12404                           
 12405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 12406                           ;stkvar	_i @ sp[(-18)+10]
 12407  011C08  50E1               	movf	fsr1l,w,c
 12408  011C0A  0FF8               	addlw	-8
 12409  011C0C  6ED9               	movwf	fsr2l,c
 12410  011C0E  50E2               	movf	fsr1h,w,c
 12411  011C10  6EDA               	movwf	fsr2h,c
 12412  011C12  0EFF               	movlw	255
 12413  011C14  22DA               	addwfc	fsr2h,f,c
 12414  011C16  06DE               	decf	postinc2,f,c
 12415  011C18  0E00               	movlw	0
 12416  011C1A  5ADD               	subwfb	postdec2,f,c
 12417                           
 12418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 12419                           ;stkvar	_s @ sp[(-18)+12]
 12420  011C1C  0EFA               	movlw	-6
 12421  011C1E  006F FF8C  F03D    	movff	plusw1,btemp
 12422  011C24  0EFB               	movlw	-5
 12423  011C26  50E3               	movf	plusw1,w,c
 12424  011C28  103D               	iorwf	btemp,w,c
 12425  011C2A  A4D8               	btfss	status,2,c
 12426  011C2C  D002               	goto	l8559
 12427  011C2E  0E2B               	movlw	43
 12428  011C30  D001               	goto	L32
 12429  011C32                     l8559:
 12430  011C32  0E2D               	movlw	45
 12431  011C34                     L32:
 12432  011C34  6E47               	movwf	btemp+10,c
 12433  011C36  0E00               	movlw	0
 12434  011C38  6E48               	movwf	btemp+11,c
 12435                           
 12436                           ;stkvar	_dtoa$4076 @ sp[(-18)+0]
 12437  011C3A  0EEE               	movlw	-18
 12438  011C3C  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12439  011C42  0EEF               	movlw	-17
 12440  011C44  0060  F123  FFE3   	movff	btemp+11,plusw1
 12441                           
 12442                           ;stkvar	_dtoa$4076 @ sp[(-18)+0]
 12443                           ;stkvar	_i @ sp[(-18)+10]
 12444  011C4A  0EF8               	movlw	-8
 12445  011C4C  006F FF8C  F047    	movff	plusw1,btemp+10
 12446  011C52  0EF9               	movlw	-7
 12447  011C54  006F FF8C  F048    	movff	plusw1,btemp+11
 12448  011C5A  0EA6               	movlw	low _dbuf
 12449  011C5C  2447               	addwf	btemp+10,w,c
 12450  011C5E  6ED9               	movwf	fsr2l,c
 12451  011C60  0E01               	movlw	high _dbuf
 12452  011C62  2048               	addwfc	btemp+11,w,c
 12453  011C64  6EDA               	movwf	fsr2h,c
 12454  011C66  0EEE               	movlw	-18
 12455  011C68  006F FF8F FFDF     	movff	plusw1,indf2
 12456  011C6E                     l8563:
 12457                           
 12458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 12459                           ;stkvar	_w @ sp[(-18)+14]
 12460  011C6E  0EFC               	movlw	-4
 12461  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 12462  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 12463                           
 12464                           ;stkvar	_i @ sp[(-20)+10]
 12465  011C7C  0EA6               	movlw	low _dbuf
 12466  011C7E  6E47               	movwf	btemp+10,c
 12467  011C80  0E01               	movlw	high _dbuf
 12468  011C82  6E48               	movwf	btemp+11,c
 12469  011C84  0EF6               	movlw	-10
 12470  011C86  50E3               	movf	plusw1,w,c
 12471  011C88  2647               	addwf	btemp+10,f,c
 12472  011C8A  0EF7               	movlw	-9
 12473  011C8C  50E3               	movf	plusw1,w,c
 12474  011C8E  2248               	addwfc	btemp+11,f,c
 12475  011C90  0060  F11F  FFE6   	movff	btemp+10,postinc1
 12476  011C96  0060  F123  FFE6   	movff	btemp+11,postinc1
 12477                           
 12478                           ;stkvar	_fp @ sp[(-22)+-2]
 12479  011C9C  0EE8               	movlw	-24
 12480  011C9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12481  011CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12482  011CAA  EC82  F09A         	call	_pad	;wreg free
 12483                           
 12484                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12485  011CAE  0EE4               	movlw	228
 12486  011CB0  26E1               	addwf	fsr1l,f,c
 12487  011CB2  0EFF               	movlw	255
 12488  011CB4  22E2               	addwfc	fsr1h,f,c
 12489  011CB6  0012               	return		;funcret
 12490  011CB8                     __end_of_dtoa:
 12491                           	opt callstack 0
 12492                           
 12493 ;; *************** function _abs *****************
 12494 ;; Defined at:
 12495 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;  a               2  [STACK] int 
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;		None
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  2  [STACK] int 
 12502 ;; Registers used:
 12503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/1
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;Total ram usage:        0 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:    3
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_dtoa
 12520 ;; This function uses a reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text47
 12524  0144CA                     __ptext47:
 12525                           	opt callstack 0
 12526  0144CA                     _abs:
 12527                           	opt callstack 23
 12528                           
 12529                           ;stkvar	_a @ sp[(0)+-2]
 12530                           
 12531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12532                           ;incstack = 0
 12533  0144CA  0EFF               	movlw	-1
 12534  0144CC  BEE3               	btfsc	plusw1,7,c
 12535  0144CE  D007               	goto	u2710
 12536  0144D0  0EFF               	movlw	-1
 12537  0144D2  50E3               	movf	plusw1,w,c
 12538  0144D4  E112               	bnz	l5669
 12539  0144D6  0EFE               	movlw	-2
 12540  0144D8  04E3               	decf	plusw1,w,c
 12541  0144DA  B0D8               	btfsc	status,0,c
 12542  0144DC  D00E               	goto	l5669
 12543  0144DE                     u2710:
 12544                           
 12545                           ;stkvar	_a @ sp[(0)+-2]
 12546  0144DE  0EFE               	movlw	-2
 12547  0144E0  006F FF8C  F03D    	movff	plusw1,btemp
 12548  0144E6  1E3D               	comf	btemp,f,c
 12549  0144E8  0EFF               	movlw	-1
 12550  0144EA  006F FF8C  F03E    	movff	plusw1,btemp+1
 12551  0144F0  1E3E               	comf	btemp+1,f,c
 12552  0144F2  2A3D               	incf	btemp,f,c
 12553  0144F4  B4D8               	btfsc	status,2,c
 12554  0144F6  2A3E               	incf	btemp+1,f,c
 12555  0144F8  D008               	goto	l2676
 12556  0144FA                     l5669:
 12557                           
 12558                           ;stkvar	_a @ sp[(0)+-2]
 12559  0144FA  0EFE               	movlw	-2
 12560  0144FC  006F FF8C  F03D    	movff	plusw1,btemp
 12561  014502  0EFF               	movlw	-1
 12562  014504  006F FF8C  F03E    	movff	plusw1,btemp+1
 12563  01450A                     l2676:
 12564                           
 12565                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 12566  01450A  52E5               	movf	postdec1,f,c
 12567  01450C  52E5               	movf	postdec1,f,c
 12568  01450E  0012               	return		;funcret
 12569  014510                     __end_of_abs:
 12570                           	opt callstack 0
 12571                           
 12572 ;; *************** function ___aomod *****************
 12573 ;; Defined at:
 12574 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;  dividend        8  [STACK] long long 
 12577 ;;  divisor         8  [STACK] long long 
 12578 ;; Auto vars:     Size  Location     Type
 12579 ;;  sign            1  [STACK] unsigned char 
 12580 ;;  counter         1  [STACK] unsigned char 
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  8  [STACK] long long 
 12583 ;; Registers used:
 12584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/1
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12594 ;;Total ram usage:        0 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; Hardware stack levels required when called:    3
 12597 ;; This function calls:
 12598 ;;		Nothing
 12599 ;; This function is called by:
 12600 ;;		_dtoa
 12601 ;; This function uses a reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text48
 12605  012D74                     __ptext48:
 12606                           	opt callstack 0
 12607  012D74                     ___aomod:
 12608                           	opt callstack 0
 12609                           
 12610                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12611  012D74  52E6               	movf	postinc1,f,c
 12612  012D76  52E6               	movf	postinc1,f,c
 12613                           
 12614                           ;stkvar	_sign @ sp[(-2)+0]
 12615                           
 12616                           ;incstack = 0
 12617  012D78  0EFE               	movlw	-2
 12618  012D7A  6AE3               	clrf	plusw1,c
 12619                           
 12620                           ;stkvar	_dividend @ sp[(-2)+-8]
 12621  012D7C  0EFD               	movlw	-3
 12622  012D7E  AEE3               	btfss	plusw1,7,c
 12623  012D80  D028               	goto	l5725
 12624                           
 12625                           ;stkvar	_dividend @ sp[(-2)+-8]
 12626                           ;stkvar	_dividend @ sp[(-2)+-8]
 12627  012D82  0EF6               	movlw	-10
 12628  012D84  6CE3               	negf	plusw1,c
 12629  012D86  0EF7               	movlw	-9
 12630  012D88  1EE3               	comf	plusw1,f,c
 12631  012D8A  0EF8               	movlw	-8
 12632  012D8C  1EE3               	comf	plusw1,f,c
 12633  012D8E  0EF9               	movlw	-7
 12634  012D90  1EE3               	comf	plusw1,f,c
 12635  012D92  0EFA               	movlw	-6
 12636  012D94  1EE3               	comf	plusw1,f,c
 12637  012D96  0EFB               	movlw	-5
 12638  012D98  1EE3               	comf	plusw1,f,c
 12639  012D9A  0EFC               	movlw	-4
 12640  012D9C  1EE3               	comf	plusw1,f,c
 12641  012D9E  0EFD               	movlw	-3
 12642  012DA0  1EE3               	comf	plusw1,f,c
 12643  012DA2  E314               	bnc	u2850
 12644  012DA4  0EF7               	movlw	-9
 12645  012DA6  2AE3               	incf	plusw1,f,c
 12646  012DA8  E311               	bnc	u2850
 12647  012DAA  0EF8               	movlw	-8
 12648  012DAC  2AE3               	incf	plusw1,f,c
 12649  012DAE  E30E               	bnc	u2850
 12650  012DB0  0EF9               	movlw	-7
 12651  012DB2  2AE3               	incf	plusw1,f,c
 12652  012DB4  E30B               	bnc	u2850
 12653  012DB6  0EFA               	movlw	-6
 12654  012DB8  2AE3               	incf	plusw1,f,c
 12655  012DBA  E308               	bnc	u2850
 12656  012DBC  0EFB               	movlw	-5
 12657  012DBE  2AE3               	incf	plusw1,f,c
 12658  012DC0  E305               	bnc	u2850
 12659  012DC2  0EFC               	movlw	-4
 12660  012DC4  2AE3               	incf	plusw1,f,c
 12661  012DC6  E302               	bnc	u2850
 12662  012DC8  0EFD               	movlw	-3
 12663  012DCA  2AE3               	incf	plusw1,f,c
 12664  012DCC                     u2850:
 12665                           
 12666                           ;stkvar	_sign @ sp[(-2)+0]
 12667  012DCC  0EFE               	movlw	-2
 12668  012DCE  6AE3               	clrf	plusw1,c
 12669  012DD0  2AE3               	incf	plusw1,f,c
 12670  012DD2                     l5725:
 12671                           
 12672                           ;stkvar	_divisor @ sp[(-2)+-16]
 12673  012DD2  0EF5               	movlw	-11
 12674  012DD4  AEE3               	btfss	plusw1,7,c
 12675  012DD6  D025               	goto	u2870
 12676                           
 12677                           ;stkvar	_divisor @ sp[(-2)+-16]
 12678                           ;stkvar	_divisor @ sp[(-2)+-16]
 12679  012DD8  0EEE               	movlw	-18
 12680  012DDA  6CE3               	negf	plusw1,c
 12681  012DDC  0EEF               	movlw	-17
 12682  012DDE  1EE3               	comf	plusw1,f,c
 12683  012DE0  0EF0               	movlw	-16
 12684  012DE2  1EE3               	comf	plusw1,f,c
 12685  012DE4  0EF1               	movlw	-15
 12686  012DE6  1EE3               	comf	plusw1,f,c
 12687  012DE8  0EF2               	movlw	-14
 12688  012DEA  1EE3               	comf	plusw1,f,c
 12689  012DEC  0EF3               	movlw	-13
 12690  012DEE  1EE3               	comf	plusw1,f,c
 12691  012DF0  0EF4               	movlw	-12
 12692  012DF2  1EE3               	comf	plusw1,f,c
 12693  012DF4  0EF5               	movlw	-11
 12694  012DF6  1EE3               	comf	plusw1,f,c
 12695  012DF8  E314               	bnc	u2870
 12696  012DFA  0EEF               	movlw	-17
 12697  012DFC  2AE3               	incf	plusw1,f,c
 12698  012DFE  E311               	bnc	u2870
 12699  012E00  0EF0               	movlw	-16
 12700  012E02  2AE3               	incf	plusw1,f,c
 12701  012E04  E30E               	bnc	u2870
 12702  012E06  0EF1               	movlw	-15
 12703  012E08  2AE3               	incf	plusw1,f,c
 12704  012E0A  E30B               	bnc	u2870
 12705  012E0C  0EF2               	movlw	-14
 12706  012E0E  2AE3               	incf	plusw1,f,c
 12707  012E10  E308               	bnc	u2870
 12708  012E12  0EF3               	movlw	-13
 12709  012E14  2AE3               	incf	plusw1,f,c
 12710  012E16  E305               	bnc	u2870
 12711  012E18  0EF4               	movlw	-12
 12712  012E1A  2AE3               	incf	plusw1,f,c
 12713  012E1C  E302               	bnc	u2870
 12714  012E1E  0EF5               	movlw	-11
 12715  012E20  2AE3               	incf	plusw1,f,c
 12716  012E22                     u2870:
 12717                           
 12718                           ;stkvar	_divisor @ sp[(-2)+-16]
 12719  012E22  0EEE               	movlw	-18
 12720  012E24  50E3               	movf	plusw1,w,c
 12721  012E26  E116               	bnz	u2880
 12722  012E28  0EEF               	movlw	-17
 12723  012E2A  50E3               	movf	plusw1,w,c
 12724  012E2C  E113               	bnz	u2880
 12725  012E2E  0EF0               	movlw	-16
 12726  012E30  50E3               	movf	plusw1,w,c
 12727  012E32  E110               	bnz	u2880
 12728  012E34  0EF1               	movlw	-15
 12729  012E36  50E3               	movf	plusw1,w,c
 12730  012E38  E10D               	bnz	u2880
 12731  012E3A  0EF2               	movlw	-14
 12732  012E3C  50E3               	movf	plusw1,w,c
 12733  012E3E  E10A               	bnz	u2880
 12734  012E40  0EF3               	movlw	-13
 12735  012E42  50E3               	movf	plusw1,w,c
 12736  012E44  E107               	bnz	u2880
 12737  012E46  0EF4               	movlw	-12
 12738  012E48  50E3               	movf	plusw1,w,c
 12739  012E4A  E104               	bnz	u2880
 12740  012E4C  0EF5               	movlw	-11
 12741  012E4E  50E3               	movf	plusw1,w,c
 12742  012E50  B4D8               	btfsc	status,2,c
 12743  012E52  D075               	goto	u2910
 12744  012E54                     u2880:
 12745                           
 12746                           ;stkvar	_counter @ sp[(-2)+1]
 12747  012E54  0EFF               	movlw	-1
 12748  012E56  6AE3               	clrf	plusw1,c
 12749  012E58  D012               	goto	L33
 12750  012E5A                     l5733:
 12751                           
 12752                           ;stkvar	_divisor @ sp[(-2)+-16]
 12753  012E5A  90D8               	bcf	status,0,c
 12754  012E5C  0EEE               	movlw	-18
 12755  012E5E  36E3               	rlcf	plusw1,f,c
 12756  012E60  0EEF               	movlw	-17
 12757  012E62  36E3               	rlcf	plusw1,f,c
 12758  012E64  0EF0               	movlw	-16
 12759  012E66  36E3               	rlcf	plusw1,f,c
 12760  012E68  0EF1               	movlw	-15
 12761  012E6A  36E3               	rlcf	plusw1,f,c
 12762  012E6C  0EF2               	movlw	-14
 12763  012E6E  36E3               	rlcf	plusw1,f,c
 12764  012E70  0EF3               	movlw	-13
 12765  012E72  36E3               	rlcf	plusw1,f,c
 12766  012E74  0EF4               	movlw	-12
 12767  012E76  36E3               	rlcf	plusw1,f,c
 12768  012E78  0EF5               	movlw	-11
 12769  012E7A  36E3               	rlcf	plusw1,f,c
 12770                           
 12771                           ;stkvar	_counter @ sp[(-2)+1]
 12772  012E7C  0EFF               	movlw	-1
 12773  012E7E                     L33:
 12774  012E7E  2AE3               	incf	plusw1,f,c
 12775                           
 12776                           ;stkvar	_divisor @ sp[(-2)+-16]
 12777  012E80  0EF5               	movlw	-11
 12778  012E82  AEE3               	btfss	plusw1,7,c
 12779  012E84  D7EA               	goto	l5733
 12780  012E86                     u2890:
 12781                           
 12782                           ;stkvar	_divisor @ sp[(-2)+-16]
 12783                           ;stkvar	_dividend @ sp[(-2)+-8]
 12784  012E86  50E1               	movf	fsr1l,w,c
 12785  012E88  0FF6               	addlw	-10
 12786  012E8A  6ED9               	movwf	fsr2l,c
 12787  012E8C  50E2               	movf	fsr1h,w,c
 12788  012E8E  6EDA               	movwf	fsr2h,c
 12789  012E90  0EFF               	movlw	255
 12790  012E92  22DA               	addwfc	fsr2h,f,c
 12791  012E94  0EEE               	movlw	-18
 12792  012E96  50E3               	movf	plusw1,w,c
 12793  012E98  5CDE               	subwf	postinc2,w,c
 12794  012E9A  0EEF               	movlw	-17
 12795  012E9C  50E3               	movf	plusw1,w,c
 12796  012E9E  58DE               	subwfb	postinc2,w,c
 12797  012EA0  0EF0               	movlw	-16
 12798  012EA2  50E3               	movf	plusw1,w,c
 12799  012EA4  58DE               	subwfb	postinc2,w,c
 12800  012EA6  0EF1               	movlw	-15
 12801  012EA8  50E3               	movf	plusw1,w,c
 12802  012EAA  58DE               	subwfb	postinc2,w,c
 12803  012EAC  0EF2               	movlw	-14
 12804  012EAE  50E3               	movf	plusw1,w,c
 12805  012EB0  58DE               	subwfb	postinc2,w,c
 12806  012EB2  0EF3               	movlw	-13
 12807  012EB4  50E3               	movf	plusw1,w,c
 12808  012EB6  58DE               	subwfb	postinc2,w,c
 12809  012EB8  0EF4               	movlw	-12
 12810  012EBA  50E3               	movf	plusw1,w,c
 12811  012EBC  58DE               	subwfb	postinc2,w,c
 12812  012EBE  0EF5               	movlw	-11
 12813  012EC0  50E3               	movf	plusw1,w,c
 12814  012EC2  58DE               	subwfb	postinc2,w,c
 12815  012EC4  A0D8               	btfss	status,0,c
 12816  012EC6  D01F               	goto	l5741
 12817                           
 12818                           ;stkvar	_divisor @ sp[(-2)+-16]
 12819                           ;stkvar	_dividend @ sp[(-2)+-8]
 12820  012EC8  50E1               	movf	fsr1l,w,c
 12821  012ECA  0FF6               	addlw	-10
 12822  012ECC  6ED9               	movwf	fsr2l,c
 12823  012ECE  50E2               	movf	fsr1h,w,c
 12824  012ED0  6EDA               	movwf	fsr2h,c
 12825  012ED2  0EFF               	movlw	255
 12826  012ED4  22DA               	addwfc	fsr2h,f,c
 12827  012ED6  0EEE               	movlw	-18
 12828  012ED8  50E3               	movf	plusw1,w,c
 12829  012EDA  5EDE               	subwf	postinc2,f,c
 12830  012EDC  0EEF               	movlw	-17
 12831  012EDE  50E3               	movf	plusw1,w,c
 12832  012EE0  5ADE               	subwfb	postinc2,f,c
 12833  012EE2  0EF0               	movlw	-16
 12834  012EE4  50E3               	movf	plusw1,w,c
 12835  012EE6  5ADE               	subwfb	postinc2,f,c
 12836  012EE8  0EF1               	movlw	-15
 12837  012EEA  50E3               	movf	plusw1,w,c
 12838  012EEC  5ADE               	subwfb	postinc2,f,c
 12839  012EEE  0EF2               	movlw	-14
 12840  012EF0  50E3               	movf	plusw1,w,c
 12841  012EF2  5ADE               	subwfb	postinc2,f,c
 12842  012EF4  0EF3               	movlw	-13
 12843  012EF6  50E3               	movf	plusw1,w,c
 12844  012EF8  5ADE               	subwfb	postinc2,f,c
 12845  012EFA  0EF4               	movlw	-12
 12846  012EFC  50E3               	movf	plusw1,w,c
 12847  012EFE  5ADE               	subwfb	postinc2,f,c
 12848  012F00  0EF5               	movlw	-11
 12849  012F02  50E3               	movf	plusw1,w,c
 12850  012F04  5ADE               	subwfb	postinc2,f,c
 12851  012F06                     l5741:
 12852                           
 12853                           ;stkvar	_divisor @ sp[(-2)+-16]
 12854  012F06  90D8               	bcf	status,0,c
 12855  012F08  0EF5               	movlw	-11
 12856  012F0A  32E3               	rrcf	plusw1,f,c
 12857  012F0C  0EF4               	movlw	-12
 12858  012F0E  32E3               	rrcf	plusw1,f,c
 12859  012F10  0EF3               	movlw	-13
 12860  012F12  32E3               	rrcf	plusw1,f,c
 12861  012F14  0EF2               	movlw	-14
 12862  012F16  32E3               	rrcf	plusw1,f,c
 12863  012F18  0EF1               	movlw	-15
 12864  012F1A  32E3               	rrcf	plusw1,f,c
 12865  012F1C  0EF0               	movlw	-16
 12866  012F1E  32E3               	rrcf	plusw1,f,c
 12867  012F20  0EEF               	movlw	-17
 12868  012F22  32E3               	rrcf	plusw1,f,c
 12869  012F24  0EEE               	movlw	-18
 12870  012F26  32E3               	rrcf	plusw1,f,c
 12871                           
 12872                           ;stkvar	_counter @ sp[(-2)+1]
 12873  012F28  0EFF               	movlw	-1
 12874  012F2A  50E3               	movf	plusw1,w,c
 12875  012F2C  6E3D               	movwf	btemp,c
 12876  012F2E  0E01               	movlw	1
 12877  012F30  5E3D               	subwf	btemp,f,c
 12878  012F32  0EFF               	movlw	-1
 12879  012F34  0060  F0F7  FFE3   	movff	btemp,plusw1
 12880  012F3A  A4D8               	btfss	status,2,c
 12881  012F3C  D7A4               	goto	u2890
 12882  012F3E                     u2910:
 12883                           
 12884                           ;stkvar	_sign @ sp[(-2)+0]
 12885  012F3E  0EFE               	movlw	-2
 12886  012F40  50E3               	movf	plusw1,w,c
 12887  012F42  B4D8               	btfsc	status,2,c
 12888  012F44  D025               	goto	u2930
 12889                           
 12890                           ;stkvar	_dividend @ sp[(-2)+-8]
 12891                           ;stkvar	_dividend @ sp[(-2)+-8]
 12892  012F46  0EF6               	movlw	-10
 12893  012F48  6CE3               	negf	plusw1,c
 12894  012F4A  0EF7               	movlw	-9
 12895  012F4C  1EE3               	comf	plusw1,f,c
 12896  012F4E  0EF8               	movlw	-8
 12897  012F50  1EE3               	comf	plusw1,f,c
 12898  012F52  0EF9               	movlw	-7
 12899  012F54  1EE3               	comf	plusw1,f,c
 12900  012F56  0EFA               	movlw	-6
 12901  012F58  1EE3               	comf	plusw1,f,c
 12902  012F5A  0EFB               	movlw	-5
 12903  012F5C  1EE3               	comf	plusw1,f,c
 12904  012F5E  0EFC               	movlw	-4
 12905  012F60  1EE3               	comf	plusw1,f,c
 12906  012F62  0EFD               	movlw	-3
 12907  012F64  1EE3               	comf	plusw1,f,c
 12908  012F66  E314               	bnc	u2930
 12909  012F68  0EF7               	movlw	-9
 12910  012F6A  2AE3               	incf	plusw1,f,c
 12911  012F6C  E311               	bnc	u2930
 12912  012F6E  0EF8               	movlw	-8
 12913  012F70  2AE3               	incf	plusw1,f,c
 12914  012F72  E30E               	bnc	u2930
 12915  012F74  0EF9               	movlw	-7
 12916  012F76  2AE3               	incf	plusw1,f,c
 12917  012F78  E30B               	bnc	u2930
 12918  012F7A  0EFA               	movlw	-6
 12919  012F7C  2AE3               	incf	plusw1,f,c
 12920  012F7E  E308               	bnc	u2930
 12921  012F80  0EFB               	movlw	-5
 12922  012F82  2AE3               	incf	plusw1,f,c
 12923  012F84  E305               	bnc	u2930
 12924  012F86  0EFC               	movlw	-4
 12925  012F88  2AE3               	incf	plusw1,f,c
 12926  012F8A  E302               	bnc	u2930
 12927  012F8C  0EFD               	movlw	-3
 12928  012F8E  2AE3               	incf	plusw1,f,c
 12929  012F90                     u2930:
 12930                           
 12931                           ;stkvar	_dividend @ sp[(-2)+-8]
 12932  012F90  0EF6               	movlw	246
 12933  012F92  24E1               	addwf	fsr1l,w,c
 12934  012F94  6ED9               	movwf	fsr2l,c
 12935  012F96  0EFF               	movlw	255
 12936  012F98  20E2               	addwfc	fsr1h,w,c
 12937  012F9A  6EDA               	movwf	fsr2h,c
 12938                           
 12939                           ;stkvar	?___aomod @ sp[(-2)+-8]
 12940  012F9C  0E08               	movlw	8
 12941  012F9E  6E3D               	movwf	btemp,c
 12942  012FA0  0EF6               	movlw	-10
 12943  012FA2                     us294999:
 12944  012FA2  006F FF7B FFE3     	movff	postinc2,plusw1
 12945  012FA8  28E8               	incf	wreg,w,c
 12946  012FAA  2E3D               	decfsz	btemp,f,c
 12947  012FAC  D7FA               	bra	us294999
 12948                           
 12949                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 12950  012FAE  52E5               	movf	postdec1,f,c
 12951  012FB0  52E5               	movf	postdec1,f,c
 12952  012FB2  0012               	return		;funcret
 12953  012FB4                     __end_of___aomod:
 12954                           	opt callstack 0
 12955                           
 12956 ;; *************** function ___aodiv *****************
 12957 ;; Defined at:
 12958 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 12959 ;; Parameters:    Size  Location     Type
 12960 ;;  dividend        8  [STACK] long long 
 12961 ;;  divisor         8  [STACK] long long 
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;  quotient        8  [STACK] long long 
 12964 ;;  sign            1  [STACK] unsigned char 
 12965 ;;  counter         1  [STACK] unsigned char 
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  8  [STACK] long long 
 12968 ;; Registers used:
 12969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12970 ;; Tracked objects:
 12971 ;;		On entry : 0/1
 12972 ;;		On exit  : 0/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12979 ;;Total ram usage:        0 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:    3
 12982 ;; This function calls:
 12983 ;;		Nothing
 12984 ;; This function is called by:
 12985 ;;		_dtoa
 12986 ;; This function uses a reentrant model
 12987 ;;
 12988                           
 12989                           	psect	text49
 12990  012878                     __ptext49:
 12991                           	opt callstack 0
 12992  012878                     ___aodiv:
 12993                           	opt callstack 0
 12994                           
 12995                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 12996  012878  0E0A               	movlw	10
 12997  01287A  26E1               	addwf	fsr1l,f,c
 12998  01287C  0E00               	movlw	0
 12999  01287E  22E2               	addwfc	fsr1h,f,c
 13000                           
 13001                           ;stkvar	_sign @ sp[(-10)+8]
 13002                           
 13003                           ;incstack = 0
 13004  012880  0EFE               	movlw	-2
 13005  012882  6AE3               	clrf	plusw1,c
 13006                           
 13007                           ;stkvar	_divisor @ sp[(-10)+-16]
 13008  012884  0EED               	movlw	-19
 13009  012886  AEE3               	btfss	plusw1,7,c
 13010  012888  D028               	goto	l5681
 13011                           
 13012                           ;stkvar	_divisor @ sp[(-10)+-16]
 13013                           ;stkvar	_divisor @ sp[(-10)+-16]
 13014  01288A  0EE6               	movlw	-26
 13015  01288C  6CE3               	negf	plusw1,c
 13016  01288E  0EE7               	movlw	-25
 13017  012890  1EE3               	comf	plusw1,f,c
 13018  012892  0EE8               	movlw	-24
 13019  012894  1EE3               	comf	plusw1,f,c
 13020  012896  0EE9               	movlw	-23
 13021  012898  1EE3               	comf	plusw1,f,c
 13022  01289A  0EEA               	movlw	-22
 13023  01289C  1EE3               	comf	plusw1,f,c
 13024  01289E  0EEB               	movlw	-21
 13025  0128A0  1EE3               	comf	plusw1,f,c
 13026  0128A2  0EEC               	movlw	-20
 13027  0128A4  1EE3               	comf	plusw1,f,c
 13028  0128A6  0EED               	movlw	-19
 13029  0128A8  1EE3               	comf	plusw1,f,c
 13030  0128AA  E314               	bnc	u2730
 13031  0128AC  0EE7               	movlw	-25
 13032  0128AE  2AE3               	incf	plusw1,f,c
 13033  0128B0  E311               	bnc	u2730
 13034  0128B2  0EE8               	movlw	-24
 13035  0128B4  2AE3               	incf	plusw1,f,c
 13036  0128B6  E30E               	bnc	u2730
 13037  0128B8  0EE9               	movlw	-23
 13038  0128BA  2AE3               	incf	plusw1,f,c
 13039  0128BC  E30B               	bnc	u2730
 13040  0128BE  0EEA               	movlw	-22
 13041  0128C0  2AE3               	incf	plusw1,f,c
 13042  0128C2  E308               	bnc	u2730
 13043  0128C4  0EEB               	movlw	-21
 13044  0128C6  2AE3               	incf	plusw1,f,c
 13045  0128C8  E305               	bnc	u2730
 13046  0128CA  0EEC               	movlw	-20
 13047  0128CC  2AE3               	incf	plusw1,f,c
 13048  0128CE  E302               	bnc	u2730
 13049  0128D0  0EED               	movlw	-19
 13050  0128D2  2AE3               	incf	plusw1,f,c
 13051  0128D4                     u2730:
 13052                           
 13053                           ;stkvar	_sign @ sp[(-10)+8]
 13054  0128D4  0EFE               	movlw	-2
 13055  0128D6  6AE3               	clrf	plusw1,c
 13056  0128D8  2AE3               	incf	plusw1,f,c
 13057  0128DA                     l5681:
 13058                           
 13059                           ;stkvar	_dividend @ sp[(-10)+-8]
 13060  0128DA  0EF5               	movlw	-11
 13061  0128DC  AEE3               	btfss	plusw1,7,c
 13062  0128DE  D027               	goto	l5687
 13063                           
 13064                           ;stkvar	_dividend @ sp[(-10)+-8]
 13065                           ;stkvar	_dividend @ sp[(-10)+-8]
 13066  0128E0  0EEE               	movlw	-18
 13067  0128E2  6CE3               	negf	plusw1,c
 13068  0128E4  0EEF               	movlw	-17
 13069  0128E6  1EE3               	comf	plusw1,f,c
 13070  0128E8  0EF0               	movlw	-16
 13071  0128EA  1EE3               	comf	plusw1,f,c
 13072  0128EC  0EF1               	movlw	-15
 13073  0128EE  1EE3               	comf	plusw1,f,c
 13074  0128F0  0EF2               	movlw	-14
 13075  0128F2  1EE3               	comf	plusw1,f,c
 13076  0128F4  0EF3               	movlw	-13
 13077  0128F6  1EE3               	comf	plusw1,f,c
 13078  0128F8  0EF4               	movlw	-12
 13079  0128FA  1EE3               	comf	plusw1,f,c
 13080  0128FC  0EF5               	movlw	-11
 13081  0128FE  1EE3               	comf	plusw1,f,c
 13082  012900  E314               	bnc	u2750
 13083  012902  0EEF               	movlw	-17
 13084  012904  2AE3               	incf	plusw1,f,c
 13085  012906  E311               	bnc	u2750
 13086  012908  0EF0               	movlw	-16
 13087  01290A  2AE3               	incf	plusw1,f,c
 13088  01290C  E30E               	bnc	u2750
 13089  01290E  0EF1               	movlw	-15
 13090  012910  2AE3               	incf	plusw1,f,c
 13091  012912  E30B               	bnc	u2750
 13092  012914  0EF2               	movlw	-14
 13093  012916  2AE3               	incf	plusw1,f,c
 13094  012918  E308               	bnc	u2750
 13095  01291A  0EF3               	movlw	-13
 13096  01291C  2AE3               	incf	plusw1,f,c
 13097  01291E  E305               	bnc	u2750
 13098  012920  0EF4               	movlw	-12
 13099  012922  2AE3               	incf	plusw1,f,c
 13100  012924  E302               	bnc	u2750
 13101  012926  0EF5               	movlw	-11
 13102  012928  2AE3               	incf	plusw1,f,c
 13103  01292A                     u2750:
 13104                           
 13105                           ;stkvar	_sign @ sp[(-10)+8]
 13106  01292A  0EFE               	movlw	-2
 13107  01292C  70E3               	btg	plusw1,0,c
 13108  01292E                     l5687:
 13109                           
 13110                           ;stkvar	_quotient @ sp[(-10)+0]
 13111  01292E  0E07               	movlw	7
 13112  012930  6E3D               	movwf	btemp,c
 13113  012932  0EF6               	movlw	-10
 13114  012934                     u2761:
 13115  012934  6AE3               	clrf	plusw1,c
 13116  012936  2AE8               	incf	wreg,f,c
 13117  012938  063D               	decf	btemp,f,c
 13118  01293A  E2FC               	bc	u2761
 13119                           
 13120                           ;stkvar	_divisor @ sp[(-10)+-16]
 13121  01293C  0EE6               	movlw	-26
 13122  01293E  50E3               	movf	plusw1,w,c
 13123  012940  E116               	bnz	u2770
 13124  012942  0EE7               	movlw	-25
 13125  012944  50E3               	movf	plusw1,w,c
 13126  012946  E113               	bnz	u2770
 13127  012948  0EE8               	movlw	-24
 13128  01294A  50E3               	movf	plusw1,w,c
 13129  01294C  E110               	bnz	u2770
 13130  01294E  0EE9               	movlw	-23
 13131  012950  50E3               	movf	plusw1,w,c
 13132  012952  E10D               	bnz	u2770
 13133  012954  0EEA               	movlw	-22
 13134  012956  50E3               	movf	plusw1,w,c
 13135  012958  E10A               	bnz	u2770
 13136  01295A  0EEB               	movlw	-21
 13137  01295C  50E3               	movf	plusw1,w,c
 13138  01295E  E107               	bnz	u2770
 13139  012960  0EEC               	movlw	-20
 13140  012962  50E3               	movf	plusw1,w,c
 13141  012964  E104               	bnz	u2770
 13142  012966  0EED               	movlw	-19
 13143  012968  50E3               	movf	plusw1,w,c
 13144  01296A  B4D8               	btfsc	status,2,c
 13145  01296C  D088               	goto	u2800
 13146  01296E                     u2770:
 13147                           
 13148                           ;stkvar	_counter @ sp[(-10)+9]
 13149  01296E  0EFF               	movlw	-1
 13150  012970  6AE3               	clrf	plusw1,c
 13151  012972  D012               	goto	L34
 13152  012974                     l5693:
 13153                           
 13154                           ;stkvar	_divisor @ sp[(-10)+-16]
 13155  012974  90D8               	bcf	status,0,c
 13156  012976  0EE6               	movlw	-26
 13157  012978  36E3               	rlcf	plusw1,f,c
 13158  01297A  0EE7               	movlw	-25
 13159  01297C  36E3               	rlcf	plusw1,f,c
 13160  01297E  0EE8               	movlw	-24
 13161  012980  36E3               	rlcf	plusw1,f,c
 13162  012982  0EE9               	movlw	-23
 13163  012984  36E3               	rlcf	plusw1,f,c
 13164  012986  0EEA               	movlw	-22
 13165  012988  36E3               	rlcf	plusw1,f,c
 13166  01298A  0EEB               	movlw	-21
 13167  01298C  36E3               	rlcf	plusw1,f,c
 13168  01298E  0EEC               	movlw	-20
 13169  012990  36E3               	rlcf	plusw1,f,c
 13170  012992  0EED               	movlw	-19
 13171  012994  36E3               	rlcf	plusw1,f,c
 13172                           
 13173                           ;stkvar	_counter @ sp[(-10)+9]
 13174  012996  0EFF               	movlw	-1
 13175  012998                     L34:
 13176  012998  2AE3               	incf	plusw1,f,c
 13177                           
 13178                           ;stkvar	_divisor @ sp[(-10)+-16]
 13179  01299A  0EED               	movlw	-19
 13180  01299C  AEE3               	btfss	plusw1,7,c
 13181  01299E  D7EA               	goto	l5693
 13182  0129A0                     u2780:
 13183                           
 13184                           ;stkvar	_quotient @ sp[(-10)+0]
 13185  0129A0  90D8               	bcf	status,0,c
 13186  0129A2  0EF6               	movlw	-10
 13187  0129A4  36E3               	rlcf	plusw1,f,c
 13188  0129A6  0EF7               	movlw	-9
 13189  0129A8  36E3               	rlcf	plusw1,f,c
 13190  0129AA  0EF8               	movlw	-8
 13191  0129AC  36E3               	rlcf	plusw1,f,c
 13192  0129AE  0EF9               	movlw	-7
 13193  0129B0  36E3               	rlcf	plusw1,f,c
 13194  0129B2  0EFA               	movlw	-6
 13195  0129B4  36E3               	rlcf	plusw1,f,c
 13196  0129B6  0EFB               	movlw	-5
 13197  0129B8  36E3               	rlcf	plusw1,f,c
 13198  0129BA  0EFC               	movlw	-4
 13199  0129BC  36E3               	rlcf	plusw1,f,c
 13200  0129BE  0EFD               	movlw	-3
 13201  0129C0  36E3               	rlcf	plusw1,f,c
 13202                           
 13203                           ;stkvar	_divisor @ sp[(-10)+-16]
 13204                           ;stkvar	_dividend @ sp[(-10)+-8]
 13205  0129C2  50E1               	movf	fsr1l,w,c
 13206  0129C4  0FEE               	addlw	-18
 13207  0129C6  6ED9               	movwf	fsr2l,c
 13208  0129C8  50E2               	movf	fsr1h,w,c
 13209  0129CA  6EDA               	movwf	fsr2h,c
 13210  0129CC  0EFF               	movlw	255
 13211  0129CE  22DA               	addwfc	fsr2h,f,c
 13212  0129D0  0EE6               	movlw	-26
 13213  0129D2  50E3               	movf	plusw1,w,c
 13214  0129D4  5CDE               	subwf	postinc2,w,c
 13215  0129D6  0EE7               	movlw	-25
 13216  0129D8  50E3               	movf	plusw1,w,c
 13217  0129DA  58DE               	subwfb	postinc2,w,c
 13218  0129DC  0EE8               	movlw	-24
 13219  0129DE  50E3               	movf	plusw1,w,c
 13220  0129E0  58DE               	subwfb	postinc2,w,c
 13221  0129E2  0EE9               	movlw	-23
 13222  0129E4  50E3               	movf	plusw1,w,c
 13223  0129E6  58DE               	subwfb	postinc2,w,c
 13224  0129E8  0EEA               	movlw	-22
 13225  0129EA  50E3               	movf	plusw1,w,c
 13226  0129EC  58DE               	subwfb	postinc2,w,c
 13227  0129EE  0EEB               	movlw	-21
 13228  0129F0  50E3               	movf	plusw1,w,c
 13229  0129F2  58DE               	subwfb	postinc2,w,c
 13230  0129F4  0EEC               	movlw	-20
 13231  0129F6  50E3               	movf	plusw1,w,c
 13232  0129F8  58DE               	subwfb	postinc2,w,c
 13233  0129FA  0EED               	movlw	-19
 13234  0129FC  50E3               	movf	plusw1,w,c
 13235  0129FE  58DE               	subwfb	postinc2,w,c
 13236  012A00  A0D8               	btfss	status,0,c
 13237  012A02  D021               	goto	l5705
 13238                           
 13239                           ;stkvar	_divisor @ sp[(-10)+-16]
 13240                           ;stkvar	_dividend @ sp[(-10)+-8]
 13241  012A04  50E1               	movf	fsr1l,w,c
 13242  012A06  0FEE               	addlw	-18
 13243  012A08  6ED9               	movwf	fsr2l,c
 13244  012A0A  50E2               	movf	fsr1h,w,c
 13245  012A0C  6EDA               	movwf	fsr2h,c
 13246  012A0E  0EFF               	movlw	255
 13247  012A10  22DA               	addwfc	fsr2h,f,c
 13248  012A12  0EE6               	movlw	-26
 13249  012A14  50E3               	movf	plusw1,w,c
 13250  012A16  5EDE               	subwf	postinc2,f,c
 13251  012A18  0EE7               	movlw	-25
 13252  012A1A  50E3               	movf	plusw1,w,c
 13253  012A1C  5ADE               	subwfb	postinc2,f,c
 13254  012A1E  0EE8               	movlw	-24
 13255  012A20  50E3               	movf	plusw1,w,c
 13256  012A22  5ADE               	subwfb	postinc2,f,c
 13257  012A24  0EE9               	movlw	-23
 13258  012A26  50E3               	movf	plusw1,w,c
 13259  012A28  5ADE               	subwfb	postinc2,f,c
 13260  012A2A  0EEA               	movlw	-22
 13261  012A2C  50E3               	movf	plusw1,w,c
 13262  012A2E  5ADE               	subwfb	postinc2,f,c
 13263  012A30  0EEB               	movlw	-21
 13264  012A32  50E3               	movf	plusw1,w,c
 13265  012A34  5ADE               	subwfb	postinc2,f,c
 13266  012A36  0EEC               	movlw	-20
 13267  012A38  50E3               	movf	plusw1,w,c
 13268  012A3A  5ADE               	subwfb	postinc2,f,c
 13269  012A3C  0EED               	movlw	-19
 13270  012A3E  50E3               	movf	plusw1,w,c
 13271  012A40  5ADE               	subwfb	postinc2,f,c
 13272                           
 13273                           ;stkvar	_quotient @ sp[(-10)+0]
 13274  012A42  0EF6               	movlw	-10
 13275  012A44  80E3               	bsf	plusw1,0,c
 13276  012A46                     l5705:
 13277                           
 13278                           ;stkvar	_divisor @ sp[(-10)+-16]
 13279  012A46  90D8               	bcf	status,0,c
 13280  012A48  0EED               	movlw	-19
 13281  012A4A  32E3               	rrcf	plusw1,f,c
 13282  012A4C  0EEC               	movlw	-20
 13283  012A4E  32E3               	rrcf	plusw1,f,c
 13284  012A50  0EEB               	movlw	-21
 13285  012A52  32E3               	rrcf	plusw1,f,c
 13286  012A54  0EEA               	movlw	-22
 13287  012A56  32E3               	rrcf	plusw1,f,c
 13288  012A58  0EE9               	movlw	-23
 13289  012A5A  32E3               	rrcf	plusw1,f,c
 13290  012A5C  0EE8               	movlw	-24
 13291  012A5E  32E3               	rrcf	plusw1,f,c
 13292  012A60  0EE7               	movlw	-25
 13293  012A62  32E3               	rrcf	plusw1,f,c
 13294  012A64  0EE6               	movlw	-26
 13295  012A66  32E3               	rrcf	plusw1,f,c
 13296                           
 13297                           ;stkvar	_counter @ sp[(-10)+9]
 13298  012A68  0EFF               	movlw	-1
 13299  012A6A  50E3               	movf	plusw1,w,c
 13300  012A6C  6E3D               	movwf	btemp,c
 13301  012A6E  0E01               	movlw	1
 13302  012A70  5E3D               	subwf	btemp,f,c
 13303  012A72  0EFF               	movlw	-1
 13304  012A74  0060  F0F7  FFE3   	movff	btemp,plusw1
 13305  012A7A  A4D8               	btfss	status,2,c
 13306  012A7C  D791               	goto	u2780
 13307  012A7E                     u2800:
 13308                           
 13309                           ;stkvar	_sign @ sp[(-10)+8]
 13310  012A7E  0EFE               	movlw	-2
 13311  012A80  50E3               	movf	plusw1,w,c
 13312  012A82  B4D8               	btfsc	status,2,c
 13313  012A84  D025               	goto	u2820
 13314                           
 13315                           ;stkvar	_quotient @ sp[(-10)+0]
 13316                           ;stkvar	_quotient @ sp[(-10)+0]
 13317  012A86  0EF6               	movlw	-10
 13318  012A88  6CE3               	negf	plusw1,c
 13319  012A8A  0EF7               	movlw	-9
 13320  012A8C  1EE3               	comf	plusw1,f,c
 13321  012A8E  0EF8               	movlw	-8
 13322  012A90  1EE3               	comf	plusw1,f,c
 13323  012A92  0EF9               	movlw	-7
 13324  012A94  1EE3               	comf	plusw1,f,c
 13325  012A96  0EFA               	movlw	-6
 13326  012A98  1EE3               	comf	plusw1,f,c
 13327  012A9A  0EFB               	movlw	-5
 13328  012A9C  1EE3               	comf	plusw1,f,c
 13329  012A9E  0EFC               	movlw	-4
 13330  012AA0  1EE3               	comf	plusw1,f,c
 13331  012AA2  0EFD               	movlw	-3
 13332  012AA4  1EE3               	comf	plusw1,f,c
 13333  012AA6  E314               	bnc	u2820
 13334  012AA8  0EF7               	movlw	-9
 13335  012AAA  2AE3               	incf	plusw1,f,c
 13336  012AAC  E311               	bnc	u2820
 13337  012AAE  0EF8               	movlw	-8
 13338  012AB0  2AE3               	incf	plusw1,f,c
 13339  012AB2  E30E               	bnc	u2820
 13340  012AB4  0EF9               	movlw	-7
 13341  012AB6  2AE3               	incf	plusw1,f,c
 13342  012AB8  E30B               	bnc	u2820
 13343  012ABA  0EFA               	movlw	-6
 13344  012ABC  2AE3               	incf	plusw1,f,c
 13345  012ABE  E308               	bnc	u2820
 13346  012AC0  0EFB               	movlw	-5
 13347  012AC2  2AE3               	incf	plusw1,f,c
 13348  012AC4  E305               	bnc	u2820
 13349  012AC6  0EFC               	movlw	-4
 13350  012AC8  2AE3               	incf	plusw1,f,c
 13351  012ACA  E302               	bnc	u2820
 13352  012ACC  0EFD               	movlw	-3
 13353  012ACE  2AE3               	incf	plusw1,f,c
 13354  012AD0                     u2820:
 13355                           
 13356                           ;stkvar	_quotient @ sp[(-10)+0]
 13357  012AD0  0EF6               	movlw	246
 13358  012AD2  24E1               	addwf	fsr1l,w,c
 13359  012AD4  6ED9               	movwf	fsr2l,c
 13360  012AD6  0EFF               	movlw	255
 13361  012AD8  20E2               	addwfc	fsr1h,w,c
 13362  012ADA  6EDA               	movwf	fsr2h,c
 13363                           
 13364                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 13365  012ADC  0E08               	movlw	8
 13366  012ADE  6E3D               	movwf	btemp,c
 13367  012AE0  0EEE               	movlw	-18
 13368  012AE2                     us283999:
 13369  012AE2  006F FF7B FFE3     	movff	postinc2,plusw1
 13370  012AE8  28E8               	incf	wreg,w,c
 13371  012AEA  2E3D               	decfsz	btemp,f,c
 13372  012AEC  D7FA               	bra	us283999
 13373                           
 13374                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 13375  012AEE  0EF6               	movlw	246
 13376  012AF0  26E1               	addwf	fsr1l,f,c
 13377  012AF2  0EFF               	movlw	255
 13378  012AF4  22E2               	addwfc	fsr1h,f,c
 13379  012AF6  0012               	return		;funcret
 13380  012AF8                     __end_of___aodiv:
 13381                           	opt callstack 0
 13382                           
 13383 ;; *************** function _ctoa *****************
 13384 ;; Defined at:
 13385 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 13386 ;; Parameters:    Size  Location     Type
 13387 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13388 ;;		 -> f(6), NULL(0), 
 13389 ;;  c               1  [STACK] unsigned char 
 13390 ;; Auto vars:     Size  Location     Type
 13391 ;;  w               2  [STACK] int 
 13392 ;;  l               2    0        int 
 13393 ;; Return value:  Size  Location     Type
 13394 ;;                  2  [STACK] int 
 13395 ;; Registers used:
 13396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13397 ;; Tracked objects:
 13398 ;;		On entry : 0/0
 13399 ;;		On exit  : 0/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13406 ;;Total ram usage:        0 bytes
 13407 ;; Hardware stack levels used:    1
 13408 ;; Hardware stack levels required when called:    8
 13409 ;; This function calls:
 13410 ;;		_pad
 13411 ;; This function is called by:
 13412 ;;		_vfpfcnvrt
 13413 ;; This function uses a reentrant model
 13414 ;;
 13415                           
 13416                           	psect	text50
 13417  013FAA                     __ptext50:
 13418                           	opt callstack 0
 13419  013FAA                     _ctoa:
 13420                           	opt callstack 0
 13421                           
 13422                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13423  013FAA  52E6               	movf	postinc1,f,c
 13424  013FAC  52E6               	movf	postinc1,f,c
 13425                           
 13426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 13427                           
 13428                           ;incstack = 0
 13429  013FAE  501D               	movf	_width,w,c
 13430  013FB0  101E               	iorwf	_width+1,w,c
 13431  013FB2  A4D8               	btfss	status,2,c
 13432  013FB4  D009               	goto	l8491
 13433                           
 13434                           ;stkvar	_w @ sp[(-2)+0]
 13435  013FB6  0EFE               	movlw	-2
 13436  013FB8  0060  F077  FFE3   	movff	_width,plusw1
 13437  013FBE  0EFF               	movlw	-1
 13438  013FC0  0060  F07B  FFE3   	movff	_width+1,plusw1
 13439  013FC6  D016               	goto	l8493
 13440  013FC8                     l8491:
 13441  013FC8  0EFF               	movlw	255
 13442  013FCA  6E47               	movwf	btemp+10,c
 13443  013FCC  0EFF               	movlw	255
 13444  013FCE  6E48               	movwf	btemp+11,c
 13445  013FD0  0060  F074  F045   	movff	_width,btemp+8
 13446  013FD6  0060  F078  F046   	movff	_width+1,btemp+9
 13447  013FDC  5047               	movf	btemp+10,w,c
 13448  013FDE  2645               	addwf	btemp+8,f,c
 13449  013FE0  5048               	movf	btemp+11,w,c
 13450  013FE2  2246               	addwfc	btemp+9,f,c
 13451                           
 13452                           ;stkvar	_w @ sp[(-2)+0]
 13453  013FE4  0EFE               	movlw	-2
 13454  013FE6  0060  F117  FFE3   	movff	btemp+8,plusw1
 13455  013FEC  0EFF               	movlw	-1
 13456  013FEE  0060  F11B  FFE3   	movff	btemp+9,plusw1
 13457  013FF4                     l8493:
 13458                           
 13459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 13460                           ;stkvar	_c @ sp[(-2)+-3]
 13461  013FF4  0EFB               	movlw	-5
 13462  013FF6  006F FF8C  F1A6    	movff	plusw1,_dbuf
 13463                           
 13464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 13465  013FFC  0101               	movlb	1	; () banked
 13466  013FFE  6BA7               	clrf	(_dbuf+1)& (0+255),b
 13467                           
 13468                           ; BSR set to: 1
 13469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 13470                           ;stkvar	_w @ sp[(-2)+0]
 13471  014000  0EFE               	movlw	-2
 13472  014002  006F FF8F FFE6     	movff	plusw1,postinc1
 13473  014008  006F FF8F FFE6     	movff	plusw1,postinc1
 13474  01400E  0EA6               	movlw	low _dbuf
 13475  014010  6EE6               	movwf	postinc1,c
 13476  014012  0E01               	movlw	high _dbuf
 13477  014014  6EE6               	movwf	postinc1,c
 13478                           
 13479                           ;stkvar	_fp @ sp[(-6)+-2]
 13480  014016  0EF8               	movlw	-8
 13481  014018  006F FF8F FFE6     	movff	plusw1,postinc1
 13482  01401E  006F FF8F FFE6     	movff	plusw1,postinc1
 13483  014024  EC82  F09A         	call	_pad	;wreg free
 13484                           
 13485                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 13486  014028  0EFB               	movlw	251
 13487  01402A  26E1               	addwf	fsr1l,f,c
 13488  01402C  0EFF               	movlw	255
 13489  01402E  22E2               	addwfc	fsr1h,f,c
 13490  014030  0012               	return		;funcret
 13491  014032                     __end_of_ctoa:
 13492                           	opt callstack 0
 13493                           
 13494 ;; *************** function _pad *****************
 13495 ;; Defined at:
 13496 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13499 ;;		 -> f(6), NULL(0), 
 13500 ;;  buf             2  [STACK] PTR unsigned char 
 13501 ;;		 -> dbuf(32), 
 13502 ;;  p               2  [STACK] int 
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;  w               2  [STACK] int 
 13505 ;;  i               2  [STACK] int 
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  2  [STACK] int 
 13508 ;; Registers used:
 13509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13510 ;; Tracked objects:
 13511 ;;		On entry : 0/1
 13512 ;;		On exit  : 0/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13519 ;;Total ram usage:        0 bytes
 13520 ;; Hardware stack levels used:    1
 13521 ;; Hardware stack levels required when called:    7
 13522 ;; This function calls:
 13523 ;;		_fputc
 13524 ;;		_fputs
 13525 ;;		_strlen
 13526 ;; This function is called by:
 13527 ;;		_ctoa
 13528 ;;		_dtoa
 13529 ;; This function uses a reentrant model
 13530 ;;
 13531                           
 13532                           	psect	text51
 13533  013504                     __ptext51:
 13534                           	opt callstack 0
 13535  013504                     _pad:
 13536                           	opt callstack 0
 13537                           
 13538                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13539  013504  52E6               	movf	postinc1,f,c
 13540  013506  52E6               	movf	postinc1,f,c
 13541  013508  52E6               	movf	postinc1,f,c
 13542  01350A  52E6               	movf	postinc1,f,c
 13543                           
 13544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 13545                           
 13546                           ;incstack = 0
 13547  01350C  A021               	btfss	_flags,0,c
 13548  01350E  D010               	goto	l8469
 13549                           
 13550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 13551                           ;stkvar	_fp @ sp[(-4)+-2]
 13552  013510  0EFA               	movlw	-6
 13553  013512  006F FF8F FFE6     	movff	plusw1,postinc1
 13554  013518  006F FF8F FFE6     	movff	plusw1,postinc1
 13555                           
 13556                           ;stkvar	_buf @ sp[(-6)+-4]
 13557  01351E  0EF6               	movlw	-10
 13558  013520  006F FF8F FFE6     	movff	plusw1,postinc1
 13559  013526  006F FF8F FFE6     	movff	plusw1,postinc1
 13560  01352C  EC40  F09F         	call	_fputs	;wreg free
 13561  013530                     l8469:
 13562                           
 13563                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 13564                           ;stkvar	_p @ sp[(-4)+-6]
 13565  013530  0EF7               	movlw	-9
 13566  013532  BEE3               	btfsc	plusw1,7,c
 13567  013534  D011               	goto	l8473
 13568                           
 13569                           ;stkvar	_p @ sp[(-4)+-6]
 13570                           ;stkvar	_w @ sp[(-4)+0]
 13571  013536  0EF6               	movlw	-10
 13572  013538  006F FF8C  F03D    	movff	plusw1,btemp
 13573  01353E  0EFC               	movlw	-4
 13574  013540  0060  F0F7  FFE3   	movff	btemp,plusw1
 13575  013546  0EF7               	movlw	-9
 13576  013548  006F FF8C  F03D    	movff	plusw1,btemp
 13577  01354E  0EFD               	movlw	-3
 13578  013550  0060  F0F7  FFE3   	movff	btemp,plusw1
 13579  013556  D004               	goto	l1915
 13580  013558                     l8473:
 13581                           
 13582                           ;stkvar	_w @ sp[(-4)+0]
 13583  013558  0EFC               	movlw	-4
 13584  01355A  6AE3               	clrf	plusw1,c
 13585  01355C  0EFD               	movlw	-3
 13586  01355E  6AE3               	clrf	plusw1,c
 13587  013560                     l1915:
 13588                           
 13589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 13590                           ;stkvar	_i @ sp[(-4)+2]
 13591  013560  0EFE               	movlw	-2
 13592  013562  6AE3               	clrf	plusw1,c
 13593  013564  0EFF               	movlw	-1
 13594  013566  6AE3               	clrf	plusw1,c
 13595                           
 13596                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 13597  013568  D01E               	goto	l8479
 13598  01356A                     l8475:
 13599                           
 13600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 13601                           ;stkvar	_fp @ sp[(-4)+-2]
 13602  01356A  0EFA               	movlw	-6
 13603  01356C  006F FF8F FFE6     	movff	plusw1,postinc1
 13604  013572  006F FF8F FFE6     	movff	plusw1,postinc1
 13605  013578  0E20               	movlw	32
 13606  01357A  6EE6               	movwf	postinc1,c
 13607  01357C  0E00               	movlw	0
 13608  01357E  6EE6               	movwf	postinc1,c
 13609  013580  ECF0  F099         	call	_fputc	;wreg free
 13610                           
 13611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 13612                           ;stkvar	_i @ sp[(-4)+2]
 13613  013584  0EFE               	movlw	-2
 13614  013586  50E3               	movf	plusw1,w,c
 13615  013588  0F01               	addlw	1
 13616  01358A  6E3D               	movwf	btemp,c
 13617  01358C  0EFE               	movlw	-2
 13618  01358E  0060  F0F7  FFE3   	movff	btemp,plusw1
 13619  013594  6A3D               	clrf	btemp,c
 13620  013596  0EFF               	movlw	-1
 13621  013598  50E3               	movf	plusw1,w,c
 13622  01359A  203D               	addwfc	btemp,w,c
 13623  01359C  6E3D               	movwf	btemp,c
 13624  01359E  0EFF               	movlw	-1
 13625  0135A0  0060  F0F7  FFE3   	movff	btemp,plusw1
 13626  0135A6                     l8479:
 13627                           
 13628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 13629                           ;stkvar	_w @ sp[(-4)+0]
 13630                           ;stkvar	_i @ sp[(-4)+2]
 13631  0135A6  50E1               	movf	fsr1l,w,c
 13632  0135A8  0FFE               	addlw	-2
 13633  0135AA  6ED9               	movwf	fsr2l,c
 13634  0135AC  50E2               	movf	fsr1h,w,c
 13635  0135AE  6EDA               	movwf	fsr2h,c
 13636  0135B0  0EFF               	movlw	255
 13637  0135B2  22DA               	addwfc	fsr2h,f,c
 13638  0135B4  0EFC               	movlw	-4
 13639  0135B6  50E3               	movf	plusw1,w,c
 13640  0135B8  5CDE               	subwf	postinc2,w,c
 13641  0135BA  50DE               	movf	postinc2,w,c
 13642  0135BC  0A80               	xorlw	128
 13643  0135BE  6E3D               	movwf	btemp,c
 13644  0135C0  0EFD               	movlw	-3
 13645  0135C2  50E3               	movf	plusw1,w,c
 13646  0135C4  0A80               	xorlw	128
 13647  0135C6  583D               	subwfb	btemp,w,c
 13648  0135C8  A0D8               	btfss	status,0,c
 13649  0135CA  D7CF               	goto	l8475
 13650                           
 13651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 13652  0135CC  B021               	btfsc	_flags,0,c
 13653  0135CE  D010               	goto	l8483
 13654                           
 13655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 13656                           ;stkvar	_fp @ sp[(-4)+-2]
 13657  0135D0  0EFA               	movlw	-6
 13658  0135D2  006F FF8F FFE6     	movff	plusw1,postinc1
 13659  0135D8  006F FF8F FFE6     	movff	plusw1,postinc1
 13660                           
 13661                           ;stkvar	_buf @ sp[(-6)+-4]
 13662  0135DE  0EF6               	movlw	-10
 13663  0135E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13664  0135E6  006F FF8F FFE6     	movff	plusw1,postinc1
 13665  0135EC  EC40  F09F         	call	_fputs	;wreg free
 13666  0135F0                     l8483:
 13667                           
 13668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 13669                           ;stkvar	_w @ sp[(-4)+0]
 13670                           ;stkvar	_buf @ sp[(-4)+-4]
 13671  0135F0  0EF8               	movlw	-8
 13672  0135F2  006F FF8F FFE6     	movff	plusw1,postinc1
 13673  0135F8  006F FF8F FFE6     	movff	plusw1,postinc1
 13674  0135FE  ECEF  F09E         	call	_strlen	;wreg free
 13675  013602  0EFC               	movlw	-4
 13676  013604  50E3               	movf	plusw1,w,c
 13677  013606  263D               	addwf	btemp,f,c
 13678  013608  0EFD               	movlw	-3
 13679  01360A  50E3               	movf	plusw1,w,c
 13680  01360C  223E               	addwfc	btemp+1,f,c
 13681                           
 13682                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 13683  01360E  0EF6               	movlw	246
 13684  013610  26E1               	addwf	fsr1l,f,c
 13685  013612  0EFF               	movlw	255
 13686  013614  22E2               	addwfc	fsr1h,f,c
 13687  013616  0012               	return		;funcret
 13688  013618                     __end_of_pad:
 13689                           	opt callstack 0
 13690                           
 13691 ;; *************** function _strlen *****************
 13692 ;; Defined at:
 13693 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;  s               2  [STACK] PTR const unsigned char 
 13696 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 13697 ;;		 -> STR_22(6), STR_3(6), V.terminal(160), V(302), 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  a               2  [STACK] PTR const unsigned char 
 13700 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 13701 ;;		 -> STR_22(6), STR_3(6), V.terminal(160), V(302), 
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  2  [STACK] unsigned int 
 13704 ;; Registers used:
 13705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/0
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13715 ;;Total ram usage:        0 bytes
 13716 ;; Hardware stack levels used:    1
 13717 ;; Hardware stack levels required when called:    3
 13718 ;; This function calls:
 13719 ;;		Nothing
 13720 ;; This function is called by:
 13721 ;;		_eaDogM_WriteString
 13722 ;;		_pad
 13723 ;;		_stoa
 13724 ;; This function uses a reentrant model
 13725 ;;
 13726                           
 13727                           	psect	text52
 13728  013DDE                     __ptext52:
 13729                           	opt callstack 0
 13730  013DDE                     _strlen:
 13731                           	opt callstack 0
 13732                           
 13733                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13734  013DDE  52E6               	movf	postinc1,f,c
 13735  013DE0  52E6               	movf	postinc1,f,c
 13736                           
 13737                           ;stkvar	_s @ sp[(-2)+-2]
 13738                           
 13739                           ;incstack = 0
 13740  013DE2  0EFC               	movlw	-4
 13741  013DE4  006F FF8C  F047    	movff	plusw1,btemp+10
 13742  013DEA  0EFD               	movlw	-3
 13743  013DEC  006F FF8C  F048    	movff	plusw1,btemp+11
 13744                           
 13745                           ;stkvar	_a @ sp[(-2)+0]
 13746  013DF2  0EFF               	movlw	-1
 13747  013DF4  0060  F123  FFE3   	movff	btemp+11,plusw1
 13748  013DFA  0EFE               	movlw	-2
 13749  013DFC  0060  F11F  FFE3   	movff	btemp+10,plusw1
 13750  013E02  D011               	goto	l5629
 13751  013E04                     l5627:
 13752                           
 13753                           ;stkvar	_s @ sp[(-2)+-2]
 13754  013E04  0EFC               	movlw	-4
 13755  013E06  50E3               	movf	plusw1,w,c
 13756  013E08  0F01               	addlw	1
 13757  013E0A  6E3D               	movwf	btemp,c
 13758  013E0C  0EFC               	movlw	-4
 13759  013E0E  0060  F0F7  FFE3   	movff	btemp,plusw1
 13760  013E14  6A3D               	clrf	btemp,c
 13761  013E16  0EFD               	movlw	-3
 13762  013E18  50E3               	movf	plusw1,w,c
 13763  013E1A  203D               	addwfc	btemp,w,c
 13764  013E1C  6E3D               	movwf	btemp,c
 13765  013E1E  0EFD               	movlw	-3
 13766  013E20  0060  F0F7  FFE3   	movff	btemp,plusw1
 13767  013E26                     l5629:
 13768                           
 13769                           ;stkvar	_s @ sp[(-2)+-2]
 13770  013E26  0EFC               	movlw	-4
 13771  013E28  006F FF8F FFF6     	movff	plusw1,tblptrl
 13772  013E2E  0EFD               	movlw	-3
 13773  013E30  006F FF8F FFF7     	movff	plusw1,tblptrh
 13774  013E36  0E00               	movlw	low (__mediumconst shr (0+16))
 13775  013E38  6EF8               	movwf	tblptru,c
 13776  013E3A  0E1F               	movlw	(high __ramtop+-1)
 13777  013E3C  64F7               	cpfsgt	tblptrh,c
 13778  013E3E  D003               	bra	u2647
 13779  013E40  0008               	tblrd		*
 13780  013E42  50F5               	movf	tablat,w,c
 13781  013E44  D007               	bra	u2640
 13782  013E46                     u2647:
 13783  013E46  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13784  013E4C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13785  013E52  50EF               	movf	indf0,w,c
 13786  013E54                     u2640:
 13787  013E54  0900               	iorlw	0
 13788  013E56  A4D8               	btfss	status,2,c
 13789  013E58  D7D5               	goto	l5627
 13790                           
 13791                           ;stkvar	_a @ sp[(-2)+0]
 13792                           ;stkvar	_s @ sp[(-2)+-2]
 13793  013E5A  0EFC               	movlw	-4
 13794  013E5C  006F FF8C  F03D    	movff	plusw1,btemp
 13795  013E62  0EFD               	movlw	-3
 13796  013E64  006F FF8C  F03E    	movff	plusw1,btemp+1
 13797  013E6A  0EFE               	movlw	-2
 13798  013E6C  50E3               	movf	plusw1,w,c
 13799  013E6E  5E3D               	subwf	btemp,f,c
 13800  013E70  0EFF               	movlw	-1
 13801  013E72  50E3               	movf	plusw1,w,c
 13802  013E74  5A3E               	subwfb	btemp+1,f,c
 13803                           
 13804                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13805  013E76  52E5               	movf	postdec1,f,c
 13806  013E78  52E5               	movf	postdec1,f,c
 13807  013E7A  52E5               	movf	postdec1,f,c
 13808  013E7C  52E5               	movf	postdec1,f,c
 13809  013E7E  0012               	return		;funcret
 13810  013E80                     __end_of_strlen:
 13811                           	opt callstack 0
 13812                           
 13813 ;; *************** function _fputs *****************
 13814 ;; Defined at:
 13815 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;  s               2  [STACK] PTR const unsigned char 
 13818 ;;		 -> dbuf(32), 
 13819 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13820 ;;		 -> f(6), NULL(0), 
 13821 ;; Auto vars:     Size  Location     Type
 13822 ;;  i               2  [STACK] int 
 13823 ;;  c               1  [STACK] unsigned char 
 13824 ;; Return value:  Size  Location     Type
 13825 ;;                  2  [STACK] int 
 13826 ;; Registers used:
 13827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13828 ;; Tracked objects:
 13829 ;;		On entry : 0/1
 13830 ;;		On exit  : 0/0
 13831 ;;		Unchanged: 0/0
 13832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13837 ;;Total ram usage:        0 bytes
 13838 ;; Hardware stack levels used:    1
 13839 ;; Hardware stack levels required when called:    6
 13840 ;; This function calls:
 13841 ;;		_fputc
 13842 ;; This function is called by:
 13843 ;;		_pad
 13844 ;; This function uses a reentrant model
 13845 ;;
 13846                           
 13847                           	psect	text53
 13848  013E80                     __ptext53:
 13849                           	opt callstack 0
 13850  013E80                     _fputs:
 13851                           	opt callstack 0
 13852                           
 13853                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13854  013E80  52E6               	movf	postinc1,f,c
 13855  013E82  52E6               	movf	postinc1,f,c
 13856  013E84  52E6               	movf	postinc1,f,c
 13857                           
 13858                           ;stkvar	_i @ sp[(-3)+0]
 13859                           
 13860                           ;incstack = 0
 13861  013E86  0EFD               	movlw	-3
 13862  013E88  6AE3               	clrf	plusw1,c
 13863  013E8A  0EFE               	movlw	-2
 13864  013E8C  6AE3               	clrf	plusw1,c
 13865  013E8E  D01F               	goto	l8463
 13866  013E90                     l8459:
 13867                           
 13868                           ;stkvar	_fp @ sp[(-3)+-4]
 13869  013E90  0EF9               	movlw	-7
 13870  013E92  006F FF8F FFE6     	movff	plusw1,postinc1
 13871  013E98  006F FF8F FFE6     	movff	plusw1,postinc1
 13872                           
 13873                           ;stkvar	_c @ sp[(-5)+2]
 13874  013E9E  0EFD               	movlw	-3
 13875  013EA0  50E3               	movf	plusw1,w,c
 13876  013EA2  6EE6               	movwf	postinc1,c
 13877  013EA4  0E00               	movlw	0
 13878  013EA6  6EE6               	movwf	postinc1,c
 13879  013EA8  ECF0  F099         	call	_fputc	;wreg free
 13880                           
 13881                           ;stkvar	_i @ sp[(-3)+0]
 13882  013EAC  0EFD               	movlw	-3
 13883  013EAE  50E3               	movf	plusw1,w,c
 13884  013EB0  0F01               	addlw	1
 13885  013EB2  6E3D               	movwf	btemp,c
 13886  013EB4  0EFD               	movlw	-3
 13887  013EB6  0060  F0F7  FFE3   	movff	btemp,plusw1
 13888  013EBC  6A3D               	clrf	btemp,c
 13889  013EBE  0EFE               	movlw	-2
 13890  013EC0  50E3               	movf	plusw1,w,c
 13891  013EC2  203D               	addwfc	btemp,w,c
 13892  013EC4  6E3D               	movwf	btemp,c
 13893  013EC6  0EFE               	movlw	-2
 13894  013EC8  0060  F0F7  FFE3   	movff	btemp,plusw1
 13895  013ECE                     l8463:
 13896                           
 13897                           ;stkvar	_i @ sp[(-3)+0]
 13898  013ECE  0EFD               	movlw	-3
 13899  013ED0  006F FF8C  F047    	movff	plusw1,btemp+10
 13900  013ED6  0EFE               	movlw	-2
 13901  013ED8  006F FF8C  F048    	movff	plusw1,btemp+11
 13902                           
 13903                           ;stkvar	_s @ sp[(-3)+-2]
 13904  013EDE  0EFB               	movlw	-5
 13905  013EE0  006F FF8C  F045    	movff	plusw1,btemp+8
 13906  013EE6  0EFC               	movlw	-4
 13907  013EE8  006F FF8C  F046    	movff	plusw1,btemp+9
 13908  013EEE  5047               	movf	btemp+10,w,c
 13909  013EF0  2445               	addwf	btemp+8,w,c
 13910  013EF2  6ED9               	movwf	fsr2l,c
 13911  013EF4  5048               	movf	btemp+11,w,c
 13912  013EF6  2046               	addwfc	btemp+9,w,c
 13913  013EF8  6EDA               	movwf	fsr2h,c
 13914  013EFA  50DF               	movf	indf2,w,c
 13915  013EFC  6E48               	movwf	btemp+11,c
 13916                           
 13917                           ;stkvar	_c @ sp[(-3)+2]
 13918  013EFE  0EFF               	movlw	-1
 13919  013F00  0060  F123  FFE3   	movff	btemp+11,plusw1
 13920  013F06  0EFF               	movlw	-1
 13921  013F08  50E3               	movf	plusw1,w,c
 13922  013F0A  A4D8               	btfss	status,2,c
 13923  013F0C  D7C1               	goto	l8459
 13924                           
 13925                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13926  013F0E  0EF9               	movlw	249
 13927  013F10  26E1               	addwf	fsr1l,f,c
 13928  013F12  0EFF               	movlw	255
 13929  013F14  22E2               	addwfc	fsr1h,f,c
 13930  013F16  0012               	return		;funcret
 13931  013F18                     __end_of_fputs:
 13932                           	opt callstack 0
 13933                           
 13934 ;; *************** function _fputc *****************
 13935 ;; Defined at:
 13936 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 13937 ;; Parameters:    Size  Location     Type
 13938 ;;  c               2  [STACK] int 
 13939 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13940 ;;		 -> f(6), NULL(0), 
 13941 ;; Auto vars:     Size  Location     Type
 13942 ;;		None
 13943 ;; Return value:  Size  Location     Type
 13944 ;;                  2  [STACK] int 
 13945 ;; Registers used:
 13946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13947 ;; Tracked objects:
 13948 ;;		On entry : 0/0
 13949 ;;		On exit  : 0/0
 13950 ;;		Unchanged: 0/0
 13951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13956 ;;Total ram usage:        0 bytes
 13957 ;; Hardware stack levels used:    1
 13958 ;; Hardware stack levels required when called:    5
 13959 ;; This function calls:
 13960 ;;		_putch
 13961 ;; This function is called by:
 13962 ;;		_pad
 13963 ;;		_stoa
 13964 ;;		_vfpfcnvrt
 13965 ;;		_fputs
 13966 ;; This function uses a reentrant model
 13967 ;;
 13968                           
 13969                           	psect	text54
 13970  0133E0                     __ptext54:
 13971                           	opt callstack 0
 13972  0133E0                     _fputc:
 13973                           	opt callstack 21
 13974                           
 13975                           ;stkvar	_fp @ sp[(0)+-4]
 13976                           
 13977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13978                           ;incstack = 0
 13979  0133E0  0EFC               	movlw	-4
 13980  0133E2  006F FF8C  F03D    	movff	plusw1,btemp
 13981  0133E8  0EFD               	movlw	-3
 13982  0133EA  50E3               	movf	plusw1,w,c
 13983  0133EC  103D               	iorwf	btemp,w,c
 13984  0133EE  B4D8               	btfsc	status,2,c
 13985  0133F0  D009               	goto	u5130
 13986                           
 13987                           ;stkvar	_fp @ sp[(0)+-4]
 13988  0133F2  0EFC               	movlw	-4
 13989  0133F4  006F FF8C  F03D    	movff	plusw1,btemp
 13990  0133FA  0EFD               	movlw	-3
 13991  0133FC  50E3               	movf	plusw1,w,c
 13992  0133FE  103D               	iorwf	btemp,w,c
 13993  013400  A4D8               	btfss	status,2,c
 13994  013402  D006               	goto	l8447
 13995  013404                     u5130:
 13996                           
 13997                           ;stkvar	_c @ sp[(0)+-2]
 13998  013404  0EFE               	movlw	-2
 13999  013406  50E3               	movf	plusw1,w,c
 14000  013408  6EE6               	movwf	postinc1,c
 14001  01340A  ECD6  F0A6         	call	_putch	;wreg free
 14002  01340E  D075               	goto	l2698
 14003  013410                     l8447:
 14004                           
 14005                           ;stkvar	_fp @ sp[(0)+-4]
 14006  013410  0EFC               	movlw	-4
 14007  013412  006F FF8C  F047    	movff	plusw1,btemp+10
 14008  013418  0EFD               	movlw	-3
 14009  01341A  006F FF8C  F048    	movff	plusw1,btemp+11
 14010  013420  0E04               	movlw	4
 14011  013422  2447               	addwf	btemp+10,w,c
 14012  013424  6ED9               	movwf	fsr2l,c
 14013  013426  0E00               	movlw	0
 14014  013428  2048               	addwfc	btemp+11,w,c
 14015  01342A  6EDA               	movwf	fsr2h,c
 14016  01342C  50DE               	movf	postinc2,w,c
 14017  01342E  10DE               	iorwf	postinc2,w,c
 14018  013430  B4D8               	btfsc	status,2,c
 14019  013432  D026               	goto	u5150
 14020                           
 14021                           ;stkvar	_fp @ sp[(0)+-4]
 14022  013434  0EFC               	movlw	-4
 14023  013436  006F FF8C  F047    	movff	plusw1,btemp+10
 14024  01343C  0EFD               	movlw	-3
 14025  01343E  006F FF8C  F048    	movff	plusw1,btemp+11
 14026  013444  0E04               	movlw	4
 14027  013446  2447               	addwf	btemp+10,w,c
 14028  013448  6ED9               	movwf	fsr2l,c
 14029  01344A  0E00               	movlw	0
 14030  01344C  2048               	addwfc	btemp+11,w,c
 14031  01344E  6EDA               	movwf	fsr2h,c
 14032                           
 14033                           ;stkvar	_fp @ sp[(0)+-4]
 14034  013450  0EFC               	movlw	-4
 14035  013452  006F FF8C  F047    	movff	plusw1,btemp+10
 14036  013458  0EFD               	movlw	-3
 14037  01345A  006F FF8C  F048    	movff	plusw1,btemp+11
 14038  013460  0E02               	movlw	2
 14039  013462  2447               	addwf	btemp+10,w,c
 14040  013464  6EE9               	movwf	fsr0l,c
 14041  013466  0E00               	movlw	0
 14042  013468  2048               	addwfc	btemp+11,w,c
 14043  01346A  6EEA               	movwf	fsr0h,c
 14044  01346C  50DE               	movf	postinc2,w,c
 14045  01346E  5CEE               	subwf	postinc0,w,c
 14046  013470  50EE               	movf	postinc0,w,c
 14047  013472  0A80               	xorlw	128
 14048  013474  6E3D               	movwf	btemp,c
 14049  013476  50DE               	movf	postinc2,w,c
 14050  013478  0A80               	xorlw	128
 14051  01347A  583D               	subwfb	btemp,w,c
 14052  01347C  B0D8               	btfsc	status,0,c
 14053  01347E  D03D               	goto	l2698
 14054  013480                     u5150:
 14055                           
 14056                           ;stkvar	_c @ sp[(0)+-2]
 14057                           ;stkvar	_fp @ sp[(0)+-4]
 14058  013480  0EFC               	movlw	-4
 14059  013482  006F FF8C  F047    	movff	plusw1,btemp+10
 14060  013488  0EFD               	movlw	-3
 14061  01348A  006F FF8C  F048    	movff	plusw1,btemp+11
 14062  013490  0E02               	movlw	2
 14063  013492  2447               	addwf	btemp+10,w,c
 14064  013494  6ED9               	movwf	fsr2l,c
 14065  013496  0E00               	movlw	0
 14066  013498  2048               	addwfc	btemp+11,w,c
 14067  01349A  6EDA               	movwf	fsr2h,c
 14068  01349C  006F FF78  F047    	movff	postinc2,btemp+10
 14069  0134A2  006F FF74  F048    	movff	postdec2,btemp+11
 14070                           
 14071                           ;stkvar	_fp @ sp[(0)+-4]
 14072  0134A8  0EFC               	movlw	-4
 14073  0134AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14074  0134B0  0EFD               	movlw	-3
 14075  0134B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14076  0134B8  006F FF78  F045    	movff	postinc2,btemp+8
 14077  0134BE  006F FF74  F046    	movff	postdec2,btemp+9
 14078  0134C4  5047               	movf	btemp+10,w,c
 14079  0134C6  2445               	addwf	btemp+8,w,c
 14080  0134C8  6ED9               	movwf	fsr2l,c
 14081  0134CA  5048               	movf	btemp+11,w,c
 14082  0134CC  2046               	addwfc	btemp+9,w,c
 14083  0134CE  6EDA               	movwf	fsr2h,c
 14084  0134D0  0EFE               	movlw	-2
 14085  0134D2  006F FF8F FFDF     	movff	plusw1,indf2
 14086                           
 14087                           ;stkvar	_fp @ sp[(0)+-4]
 14088  0134D8  0EFC               	movlw	-4
 14089  0134DA  006F FF8C  F047    	movff	plusw1,btemp+10
 14090  0134E0  0EFD               	movlw	-3
 14091  0134E2  006F FF8C  F048    	movff	plusw1,btemp+11
 14092  0134E8  0E02               	movlw	2
 14093  0134EA  2447               	addwf	btemp+10,w,c
 14094  0134EC  6ED9               	movwf	fsr2l,c
 14095  0134EE  0E00               	movlw	0
 14096  0134F0  2048               	addwfc	btemp+11,w,c
 14097  0134F2  6EDA               	movwf	fsr2h,c
 14098  0134F4  2ADE               	incf	postinc2,f,c
 14099  0134F6  0E00               	movlw	0
 14100  0134F8  22DD               	addwfc	postdec2,f,c
 14101  0134FA                     l2698:
 14102                           
 14103                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14104  0134FA  52E5               	movf	postdec1,f,c
 14105  0134FC  52E5               	movf	postdec1,f,c
 14106  0134FE  52E5               	movf	postdec1,f,c
 14107  013500  52E5               	movf	postdec1,f,c
 14108  013502  0012               	return		;funcret
 14109  013504                     __end_of_fputc:
 14110                           	opt callstack 0
 14111                           
 14112 ;; *************** function _putch *****************
 14113 ;; Defined at:
 14114 ;;		line 138 in file "eadog.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;  c               1  [STACK] unsigned char 
 14117 ;; Auto vars:     Size  Location     Type
 14118 ;;		None
 14119 ;; Return value:  Size  Location     Type
 14120 ;;                  1  [STACK] void 
 14121 ;; Registers used:
 14122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14123 ;; Tracked objects:
 14124 ;;		On entry : 0/0
 14125 ;;		On exit  : 0/0
 14126 ;;		Unchanged: 0/0
 14127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14132 ;;Total ram usage:        0 bytes
 14133 ;; Hardware stack levels used:    1
 14134 ;; Hardware stack levels required when called:    4
 14135 ;; This function calls:
 14136 ;;		_ringBufS_put_dma
 14137 ;; This function is called by:
 14138 ;;		_fputc
 14139 ;; This function uses a reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text55
 14143  014DAC                     __ptext55:
 14144                           	opt callstack 0
 14145  014DAC                     _putch:
 14146                           	opt callstack 21
 14147                           
 14148                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 14149                           ;stkvar	_c @ sp[(0)+-1]
 14150                           
 14151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14152                           ;incstack = 0
 14153  014DAC  0EFF               	movlw	-1
 14154  014DAE  50E3               	movf	plusw1,w,c
 14155  014DB0  6EE6               	movwf	postinc1,c
 14156  014DB2  0060  F32F  FFE6   	movff	_spi_link+6,postinc1
 14157  014DB8  0060  F333  FFE6   	movff	_spi_link+7,postinc1
 14158  014DBE  ECA1  F09D         	call	_ringBufS_put_dma	;wreg free
 14159                           
 14160                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 14161  014DC2  52E5               	movf	postdec1,f,c
 14162  014DC4  0012               	return		;funcret
 14163  014DC6                     __end_of_putch:
 14164                           	opt callstack 0
 14165                           
 14166 ;; *************** function _ringBufS_put_dma *****************
 14167 ;; Defined at:
 14168 ;;		line 67 in file "ringbufs.c"
 14169 ;; Parameters:    Size  Location     Type
 14170 ;;  _this           2  [STACK] PTR struct ringBufS_t
 14171 ;;		 -> ring_buf1(67), 
 14172 ;;  c               1  [STACK] const unsigned char 
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;		None
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1  [STACK] void 
 14177 ;; Registers used:
 14178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14188 ;;Total ram usage:        0 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; Hardware stack levels required when called:    3
 14191 ;; This function calls:
 14192 ;;		Nothing
 14193 ;; This function is called by:
 14194 ;;		_putch
 14195 ;; This function uses a reentrant model
 14196 ;;
 14197                           
 14198                           	psect	text56
 14199  013B42                     __ptext56:
 14200                           	opt callstack 0
 14201  013B42                     _ringBufS_put_dma:
 14202                           	opt callstack 21
 14203                           
 14204                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 14205                           ;stkvar	__this @ sp[(0)+-2]
 14206                           
 14207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14208                           ;incstack = 0
 14209  013B42  0EFE               	movlw	-2
 14210  013B44  006F FF8C  F047    	movff	plusw1,btemp+10
 14211  013B4A  0EFF               	movlw	-1
 14212  013B4C  006F FF8C  F048    	movff	plusw1,btemp+11
 14213  013B52  0E42               	movlw	66
 14214  013B54  2447               	addwf	btemp+10,w,c
 14215  013B56  6ED9               	movwf	fsr2l,c
 14216  013B58  0E00               	movlw	0
 14217  013B5A  2048               	addwfc	btemp+11,w,c
 14218  013B5C  6EDA               	movwf	fsr2h,c
 14219  013B5E  0E40               	movlw	64
 14220  013B60  60DF               	cpfslt	indf2,c
 14221  013B62  D040               	goto	l1506
 14222                           
 14223                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 14224                           ;stkvar	_c @ sp[(0)+-3]
 14225                           ;stkvar	__this @ sp[(0)+-2]
 14226  013B64  0EFE               	movlw	-2
 14227  013B66  006F FF8C  F047    	movff	plusw1,btemp+10
 14228  013B6C  0EFF               	movlw	-1
 14229  013B6E  006F FF8C  F048    	movff	plusw1,btemp+11
 14230  013B74  0E40               	movlw	64
 14231  013B76  2447               	addwf	btemp+10,w,c
 14232  013B78  6ED9               	movwf	fsr2l,c
 14233  013B7A  0E00               	movlw	0
 14234  013B7C  2048               	addwfc	btemp+11,w,c
 14235  013B7E  6EDA               	movwf	fsr2h,c
 14236  013B80  50DF               	movf	indf2,w,c
 14237  013B82  6E48               	movwf	btemp+11,c
 14238                           
 14239                           ;stkvar	__this @ sp[(0)+-2]
 14240  013B84  0EFE               	movlw	-2
 14241  013B86  006F FF8C  F045    	movff	plusw1,btemp+8
 14242  013B8C  0EFF               	movlw	-1
 14243  013B8E  006F FF8C  F046    	movff	plusw1,btemp+9
 14244  013B94  5048               	movf	btemp+11,w,c
 14245  013B96  2445               	addwf	btemp+8,w,c
 14246  013B98  6ED9               	movwf	fsr2l,c
 14247  013B9A  0E00               	movlw	0
 14248  013B9C  2046               	addwfc	btemp+9,w,c
 14249  013B9E  6EDA               	movwf	fsr2h,c
 14250  013BA0  0EFD               	movlw	-3
 14251  013BA2  006F FF8F FFDF     	movff	plusw1,indf2
 14252                           
 14253                           ;ringbufs.c: 71:   ++_this->head;
 14254                           ;stkvar	__this @ sp[(0)+-2]
 14255  013BA8  0EFE               	movlw	-2
 14256  013BAA  006F FF8C  F047    	movff	plusw1,btemp+10
 14257  013BB0  0EFF               	movlw	-1
 14258  013BB2  006F FF8C  F048    	movff	plusw1,btemp+11
 14259  013BB8  0E40               	movlw	64
 14260  013BBA  2447               	addwf	btemp+10,w,c
 14261  013BBC  6ED9               	movwf	fsr2l,c
 14262  013BBE  0E00               	movlw	0
 14263  013BC0  2048               	addwfc	btemp+11,w,c
 14264  013BC2  6EDA               	movwf	fsr2h,c
 14265  013BC4  2ADF               	incf	indf2,f,c
 14266                           
 14267                           ;ringbufs.c: 72:   ++_this->count;
 14268                           ;stkvar	__this @ sp[(0)+-2]
 14269  013BC6  0EFE               	movlw	-2
 14270  013BC8  006F FF8C  F047    	movff	plusw1,btemp+10
 14271  013BCE  0EFF               	movlw	-1
 14272  013BD0  006F FF8C  F048    	movff	plusw1,btemp+11
 14273  013BD6  0E42               	movlw	66
 14274  013BD8  2447               	addwf	btemp+10,w,c
 14275  013BDA  6ED9               	movwf	fsr2l,c
 14276  013BDC  0E00               	movlw	0
 14277  013BDE  2048               	addwfc	btemp+11,w,c
 14278  013BE0  6EDA               	movwf	fsr2h,c
 14279  013BE2  2ADF               	incf	indf2,f,c
 14280  013BE4                     l1506:
 14281                           
 14282                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 14283  013BE4  52E5               	movf	postdec1,f,c
 14284  013BE6  52E5               	movf	postdec1,f,c
 14285  013BE8  52E5               	movf	postdec1,f,c
 14286  013BEA  0012               	return		;funcret
 14287  013BEC                     __end_of_ringBufS_put_dma:
 14288                           	opt callstack 0
 14289                           
 14290 ;; *************** function _SYSTEM_Initialize *****************
 14291 ;; Defined at:
 14292 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;		None
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;		None
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  1  [STACK] void 
 14299 ;; Registers used:
 14300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/0
 14303 ;;		On exit  : 3F/3C
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14310 ;;Total ram usage:        0 bytes
 14311 ;; Hardware stack levels used:    1
 14312 ;; Hardware stack levels required when called:    5
 14313 ;; This function calls:
 14314 ;;		_ADCC_Initialize
 14315 ;;		_CLC1_Initialize
 14316 ;;		_CLKREF_Initialize
 14317 ;;		_DMA1_Initialize
 14318 ;;		_DSM_Initialize
 14319 ;;		_EXT_INT_Initialize
 14320 ;;		_INTERRUPT_Initialize
 14321 ;;		_NCO1_Initialize
 14322 ;;		_OSCILLATOR_Initialize
 14323 ;;		_PIN_MANAGER_Initialize
 14324 ;;		_PMD_Initialize
 14325 ;;		_SPI1_Initialize
 14326 ;;		_TMR5_Initialize
 14327 ;;		_TMR6_Initialize
 14328 ;;		_UART1_Initialize
 14329 ;;		_UART2_Initialize
 14330 ;; This function is called by:
 14331 ;;		_main
 14332 ;; This function uses a reentrant model
 14333 ;;
 14334                           
 14335                           	psect	text57
 14336  0145E0                     __ptext57:
 14337                           	opt callstack 0
 14338  0145E0                     _SYSTEM_Initialize:
 14339                           	opt callstack 25
 14340                           
 14341                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14342                           
 14343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14344                           ;incstack = 0
 14345  0145E0  EC86  F0A0         	call	_INTERRUPT_Initialize	;wreg free
 14346                           
 14347                           ; BSR set to: 57
 14348                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14349  0145E4  EC14  F0A7         	call	_PMD_Initialize	;wreg free
 14350                           
 14351                           ; BSR set to: 57
 14352                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14353  0145E8  EC9D  F09E         	call	_PIN_MANAGER_Initialize	;wreg free
 14354                           
 14355                           ; BSR set to: 58
 14356                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14357  0145EC  EC09  F0A7         	call	_OSCILLATOR_Initialize	;wreg free
 14358                           
 14359                           ; BSR set to: 57
 14360                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 14361  0145F0  EC40  F0A2         	call	_ADCC_Initialize	;wreg free
 14362                           
 14363                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 14364  0145F4  ECBA  F0A6         	call	_NCO1_Initialize	;wreg free
 14365                           
 14366                           ; BSR set to: 63
 14367                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 14368  0145F8  ECF5  F0A1         	call	_EXT_INT_Initialize	;wreg free
 14369                           
 14370                           ; BSR set to: 57
 14371                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 14372  0145FC  EC28  F0A5         	call	_TMR6_Initialize	;wreg free
 14373                           
 14374                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 14375  014600  EC39  F0A6         	call	_CLC1_Initialize	;wreg free
 14376                           
 14377                           ; BSR set to: 60
 14378                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 14379  014604  EC88  F0A2         	call	_TMR5_Initialize	;wreg free
 14380                           
 14381                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 14382  014608  ECC8  F0A6         	call	_DSM_Initialize	;wreg free
 14383                           
 14384                           ; BSR set to: 60
 14385                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 14386  01460C  ECB9  F0A0         	call	_UART1_Initialize	;wreg free
 14387                           
 14388                           ; BSR set to: 57
 14389                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 14390  014610  EC1C  F0A1         	call	_UART2_Initialize	;wreg free
 14391                           
 14392                           ; BSR set to: 57
 14393                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 14394  014614  ECFE  F0A6         	call	_SPI1_Initialize	;wreg free
 14395                           
 14396                           ; BSR set to: 61
 14397                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 14398  014618  EC51  F0A0         	call	_DMA1_Initialize	;wreg free
 14399                           
 14400                           ; BSR set to: 59
 14401                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 14402  01461C  EC45  F0A7         	call	_CLKREF_Initialize	;wreg free
 14403                           
 14404                           ; BSR set to: 60
 14405                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14406  014620  0012               	return		;funcret
 14407  014622                     __end_of_SYSTEM_Initialize:
 14408                           	opt callstack 0
 14409                           
 14410 ;; *************** function _UART2_Initialize *****************
 14411 ;; Defined at:
 14412 ;;		line 78 in file "mcc_generated_files/uart2.c"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;		None
 14415 ;; Auto vars:     Size  Location     Type
 14416 ;;		None
 14417 ;; Return value:  Size  Location     Type
 14418 ;;                  1  [STACK] void 
 14419 ;; Registers used:
 14420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14421 ;; Tracked objects:
 14422 ;;		On entry : 3F/39
 14423 ;;		On exit  : 3F/39
 14424 ;;		Unchanged: 0/0
 14425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14430 ;;Total ram usage:        0 bytes
 14431 ;; Hardware stack levels used:    1
 14432 ;; Hardware stack levels required when called:    4
 14433 ;; This function calls:
 14434 ;;		_UART2_SetRxInterruptHandler
 14435 ;;		_UART2_SetTxInterruptHandler
 14436 ;; This function is called by:
 14437 ;;		_SYSTEM_Initialize
 14438 ;; This function uses a reentrant model
 14439 ;;
 14440                           
 14441                           	psect	text58
 14442  014238                     __ptext58:
 14443                           	opt callstack 0
 14444  014238                     _UART2_Initialize:
 14445                           	opt callstack 25
 14446                           
 14447                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 14448                           
 14449                           ; BSR set to: 60
 14450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14451                           ;incstack = 0
 14452  014238  0139               	movlb	57	; () banked
 14453  01423A  9596               	bcf	150,2,b	;volatile
 14454                           
 14455                           ; BSR set to: 57
 14456                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 14457  01423C  0E1A               	movlw	low _UART2_Receive_ISR
 14458  01423E  6EE6               	movwf	postinc1,c
 14459  014240  0E4D               	movlw	high _UART2_Receive_ISR
 14460  014242  6EE6               	movwf	postinc1,c
 14461  014244  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 14462  014246  6EE6               	movwf	postinc1,c
 14463  014248  ECEC  F0A4         	call	_UART2_SetRxInterruptHandler	;wreg free
 14464                           
 14465                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 14466  01424C  0139               	movlb	57	; () banked
 14467  01424E  9796               	bcf	150,3,b	;volatile
 14468                           
 14469                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 14470  014250  0E90               	movlw	low _UART2_Transmit_ISR
 14471  014252  6EE6               	movwf	postinc1,c
 14472  014254  0E48               	movlw	high _UART2_Transmit_ISR
 14473  014256  6EE6               	movwf	postinc1,c
 14474  014258  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 14475  01425A  6EE6               	movwf	postinc1,c
 14476  01425C  ECD8  F0A4         	call	_UART2_SetTxInterruptHandler	;wreg free
 14477                           
 14478                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 14479  014260  013D               	movlb	61	; () banked
 14480  014262  6BD4               	clrf	212,b	;volatile
 14481                           
 14482                           ; BSR set to: 61
 14483                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 14484  014264  6BD6               	clrf	214,b	;volatile
 14485                           
 14486                           ; BSR set to: 61
 14487                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 14488  014266  6BD8               	clrf	216,b	;volatile
 14489                           
 14490                           ; BSR set to: 61
 14491                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 14492  014268  0EB0               	movlw	176
 14493  01426A  6FDA               	movwf	218,b	;volatile
 14494                           
 14495                           ; BSR set to: 61
 14496                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 14497  01426C  0E80               	movlw	128
 14498  01426E  6FDB               	movwf	219,b	;volatile
 14499                           
 14500                           ; BSR set to: 61
 14501                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 14502  014270  6BDC               	clrf	220,b	;volatile
 14503                           
 14504                           ; BSR set to: 61
 14505                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 14506  014272  0E82               	movlw	130
 14507  014274  6FDD               	movwf	221,b	;volatile
 14508                           
 14509                           ; BSR set to: 61
 14510                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 14511  014276  0E06               	movlw	6
 14512  014278  6FDE               	movwf	222,b	;volatile
 14513                           
 14514                           ; BSR set to: 61
 14515                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 14516  01427A  6BDF               	clrf	223,b	;volatile
 14517                           
 14518                           ; BSR set to: 61
 14519                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 14520  01427C  6BE0               	clrf	224,b	;volatile
 14521                           
 14522                           ; BSR set to: 61
 14523                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 14524  01427E  6BE1               	clrf	225,b	;volatile
 14525                           
 14526                           ; BSR set to: 61
 14527                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 14528  014280  6BE2               	clrf	226,b	;volatile
 14529                           
 14530                           ; BSR set to: 61
 14531                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 14532  014282  6A36               	clrf	_uart2TxHead,c	;volatile
 14533                           
 14534                           ; BSR set to: 61
 14535                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 14536  014284  6A35               	clrf	_uart2TxTail,c	;volatile
 14537                           
 14538                           ; BSR set to: 61
 14539                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 14540  014286  0E40               	movlw	64
 14541  014288  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 14542                           
 14543                           ; BSR set to: 61
 14544                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 14545  01428A  6A33               	clrf	_uart2RxHead,c	;volatile
 14546                           
 14547                           ; BSR set to: 61
 14548                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 14549  01428C  6A32               	clrf	_uart2RxTail,c	;volatile
 14550                           
 14551                           ; BSR set to: 61
 14552                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 14553  01428E  6A31               	clrf	_uart2RxCount,c	;volatile
 14554                           
 14555                           ; BSR set to: 61
 14556                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 14557  014290  0139               	movlb	57	; () banked
 14558  014292  8596               	bsf	150,2,b	;volatile
 14559                           
 14560                           ; BSR set to: 57
 14561                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14562  014294  0012               	return		;funcret
 14563  014296                     __end_of_UART2_Initialize:
 14564                           	opt callstack 0
 14565                           
 14566 ;; *************** function _UART2_SetTxInterruptHandler *****************
 14567 ;; Defined at:
 14568 ;;		line 252 in file "mcc_generated_files/uart2.c"
 14569 ;; Parameters:    Size  Location     Type
 14570 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14571 ;;		 -> UART2_Transmit_ISR(1), 
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;		None
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1  [STACK] void 
 14576 ;; Registers used:
 14577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14578 ;; Tracked objects:
 14579 ;;		On entry : 3F/39
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14587 ;;Total ram usage:        0 bytes
 14588 ;; Hardware stack levels used:    1
 14589 ;; Hardware stack levels required when called:    3
 14590 ;; This function calls:
 14591 ;;		Nothing
 14592 ;; This function is called by:
 14593 ;;		_UART2_Initialize
 14594 ;; This function uses a reentrant model
 14595 ;;
 14596                           
 14597                           	psect	text59
 14598  0149B0                     __ptext59:
 14599                           	opt callstack 0
 14600  0149B0                     _UART2_SetTxInterruptHandler:
 14601                           	opt callstack 25
 14602                           
 14603                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 14604                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14605                           
 14606                           ; BSR set to: 57
 14607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14608                           ;incstack = 0
 14609  0149B0  50E1               	movf	fsr1l,w,c
 14610  0149B2  0FFD               	addlw	-3
 14611  0149B4  6ED9               	movwf	fsr2l,c
 14612  0149B6  50E2               	movf	fsr1h,w,c
 14613  0149B8  6EDA               	movwf	fsr2h,c
 14614  0149BA  0EFF               	movlw	255
 14615  0149BC  22DA               	addwfc	fsr2h,f,c
 14616  0149BE  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 14617  0149C4  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 14618  0149CA  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 14619                           
 14620                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14621  0149D0  52E5               	movf	postdec1,f,c
 14622  0149D2  52E5               	movf	postdec1,f,c
 14623  0149D4  52E5               	movf	postdec1,f,c
 14624  0149D6  0012               	return		;funcret
 14625  0149D8                     __end_of_UART2_SetTxInterruptHandler:
 14626                           	opt callstack 0
 14627                           
 14628 ;; *************** function _UART2_SetRxInterruptHandler *****************
 14629 ;; Defined at:
 14630 ;;		line 248 in file "mcc_generated_files/uart2.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14633 ;;		 -> UART2_Receive_ISR(1), 
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;		None
 14636 ;; Return value:  Size  Location     Type
 14637 ;;                  1  [STACK] void 
 14638 ;; Registers used:
 14639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14640 ;; Tracked objects:
 14641 ;;		On entry : 3F/39
 14642 ;;		On exit  : 0/0
 14643 ;;		Unchanged: 0/0
 14644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14649 ;;Total ram usage:        0 bytes
 14650 ;; Hardware stack levels used:    1
 14651 ;; Hardware stack levels required when called:    3
 14652 ;; This function calls:
 14653 ;;		Nothing
 14654 ;; This function is called by:
 14655 ;;		_UART2_Initialize
 14656 ;; This function uses a reentrant model
 14657 ;;
 14658                           
 14659                           	psect	text60
 14660  0149D8                     __ptext60:
 14661                           	opt callstack 0
 14662  0149D8                     _UART2_SetRxInterruptHandler:
 14663                           	opt callstack 25
 14664                           
 14665                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 14666                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14667                           
 14668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14669                           ;incstack = 0
 14670  0149D8  50E1               	movf	fsr1l,w,c
 14671  0149DA  0FFD               	addlw	-3
 14672  0149DC  6ED9               	movwf	fsr2l,c
 14673  0149DE  50E2               	movf	fsr1h,w,c
 14674  0149E0  6EDA               	movwf	fsr2h,c
 14675  0149E2  0EFF               	movlw	255
 14676  0149E4  22DA               	addwfc	fsr2h,f,c
 14677  0149E6  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 14678  0149EC  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 14679  0149F2  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 14680                           
 14681                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14682  0149F8  52E5               	movf	postdec1,f,c
 14683  0149FA  52E5               	movf	postdec1,f,c
 14684  0149FC  52E5               	movf	postdec1,f,c
 14685  0149FE  0012               	return		;funcret
 14686  014A00                     __end_of_UART2_SetRxInterruptHandler:
 14687                           	opt callstack 0
 14688                           
 14689 ;; *************** function _UART1_Initialize *****************
 14690 ;; Defined at:
 14691 ;;		line 78 in file "mcc_generated_files/uart1.c"
 14692 ;; Parameters:    Size  Location     Type
 14693 ;;		None
 14694 ;; Auto vars:     Size  Location     Type
 14695 ;;		None
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  1  [STACK] void 
 14698 ;; Registers used:
 14699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14700 ;; Tracked objects:
 14701 ;;		On entry : 3F/3C
 14702 ;;		On exit  : 3F/39
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14709 ;;Total ram usage:        0 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:    4
 14712 ;; This function calls:
 14713 ;;		_UART1_SetRxInterruptHandler
 14714 ;;		_UART1_SetTxInterruptHandler
 14715 ;; This function is called by:
 14716 ;;		_SYSTEM_Initialize
 14717 ;; This function uses a reentrant model
 14718 ;;
 14719                           
 14720                           	psect	text61
 14721  014172                     __ptext61:
 14722                           	opt callstack 0
 14723  014172                     _UART1_Initialize:
 14724                           	opt callstack 25
 14725                           
 14726                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 14727                           
 14728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14729                           ;incstack = 0
 14730  014172  0139               	movlb	57	; () banked
 14731  014174  9793               	bcf	147,3,b	;volatile
 14732                           
 14733                           ; BSR set to: 57
 14734                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14735  014176  0EFA               	movlw	low _UART1_Receive_ISR
 14736  014178  6EE6               	movwf	postinc1,c
 14737  01417A  0E4C               	movlw	high _UART1_Receive_ISR
 14738  01417C  6EE6               	movwf	postinc1,c
 14739  01417E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 14740  014180  6EE6               	movwf	postinc1,c
 14741  014182  EC14  F0A5         	call	_UART1_SetRxInterruptHandler	;wreg free
 14742                           
 14743                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 14744  014186  0139               	movlb	57	; () banked
 14745  014188  9993               	bcf	147,4,b	;volatile
 14746                           
 14747                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14748  01418A  0E64               	movlw	low _UART1_Transmit_ISR
 14749  01418C  6EE6               	movwf	postinc1,c
 14750  01418E  0E48               	movlw	high _UART1_Transmit_ISR
 14751  014190  6EE6               	movwf	postinc1,c
 14752  014192  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 14753  014194  6EE6               	movwf	postinc1,c
 14754  014196  EC00  F0A5         	call	_UART1_SetTxInterruptHandler	;wreg free
 14755                           
 14756                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 14757  01419A  013D               	movlb	61	; () banked
 14758  01419C  6BEC               	clrf	236,b	;volatile
 14759                           
 14760                           ; BSR set to: 61
 14761                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 14762  01419E  6BED               	clrf	237,b	;volatile
 14763                           
 14764                           ; BSR set to: 61
 14765                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 14766  0141A0  6BEE               	clrf	238,b	;volatile
 14767                           
 14768                           ; BSR set to: 61
 14769                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 14770  0141A2  6BEF               	clrf	239,b	;volatile
 14771                           
 14772                           ; BSR set to: 61
 14773                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 14774  0141A4  6BF0               	clrf	240,b	;volatile
 14775                           
 14776                           ; BSR set to: 61
 14777                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 14778  0141A6  6BF1               	clrf	241,b	;volatile
 14779                           
 14780                           ; BSR set to: 61
 14781                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 14782  0141A8  0EB0               	movlw	176
 14783  0141AA  6FF2               	movwf	242,b	;volatile
 14784                           
 14785                           ; BSR set to: 61
 14786                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 14787  0141AC  0E80               	movlw	128
 14788  0141AE  6FF3               	movwf	243,b	;volatile
 14789                           
 14790                           ; BSR set to: 61
 14791                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 14792  0141B0  6BF4               	clrf	244,b	;volatile
 14793                           
 14794                           ; BSR set to: 61
 14795                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 14796  0141B2  0E82               	movlw	130
 14797  0141B4  6FF5               	movwf	245,b	;volatile
 14798                           
 14799                           ; BSR set to: 61
 14800                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 14801  0141B6  0E06               	movlw	6
 14802  0141B8  6FF6               	movwf	246,b	;volatile
 14803                           
 14804                           ; BSR set to: 61
 14805                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 14806  0141BA  6BF7               	clrf	247,b	;volatile
 14807                           
 14808                           ; BSR set to: 61
 14809                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 14810  0141BC  6BF8               	clrf	248,b	;volatile
 14811                           
 14812                           ; BSR set to: 61
 14813                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 14814  0141BE  6BF9               	clrf	249,b	;volatile
 14815                           
 14816                           ; BSR set to: 61
 14817                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 14818  0141C0  6BFA               	clrf	250,b	;volatile
 14819                           
 14820                           ; BSR set to: 61
 14821                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 14822  0141C2  6A3C               	clrf	_uart1TxHead,c	;volatile
 14823                           
 14824                           ; BSR set to: 61
 14825                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 14826  0141C4  6A3B               	clrf	_uart1TxTail,c	;volatile
 14827                           
 14828                           ; BSR set to: 61
 14829                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14830  0141C6  0E40               	movlw	64
 14831  0141C8  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 14832                           
 14833                           ; BSR set to: 61
 14834                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 14835  0141CA  6A39               	clrf	_uart1RxHead,c	;volatile
 14836                           
 14837                           ; BSR set to: 61
 14838                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 14839  0141CC  6A38               	clrf	_uart1RxTail,c	;volatile
 14840                           
 14841                           ; BSR set to: 61
 14842                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 14843  0141CE  6A37               	clrf	_uart1RxCount,c	;volatile
 14844                           
 14845                           ; BSR set to: 61
 14846                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 14847  0141D0  0139               	movlb	57	; () banked
 14848  0141D2  8793               	bsf	147,3,b	;volatile
 14849                           
 14850                           ; BSR set to: 57
 14851                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14852  0141D4  0012               	return		;funcret
 14853  0141D6                     __end_of_UART1_Initialize:
 14854                           	opt callstack 0
 14855                           
 14856 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14857 ;; Defined at:
 14858 ;;		line 244 in file "mcc_generated_files/uart1.c"
 14859 ;; Parameters:    Size  Location     Type
 14860 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14861 ;;		 -> UART1_Transmit_ISR(1), 
 14862 ;; Auto vars:     Size  Location     Type
 14863 ;;		None
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  1  [STACK] void 
 14866 ;; Registers used:
 14867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14868 ;; Tracked objects:
 14869 ;;		On entry : 3F/39
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14877 ;;Total ram usage:        0 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; Hardware stack levels required when called:    3
 14880 ;; This function calls:
 14881 ;;		Nothing
 14882 ;; This function is called by:
 14883 ;;		_UART1_Initialize
 14884 ;; This function uses a reentrant model
 14885 ;;
 14886                           
 14887                           	psect	text62
 14888  014A00                     __ptext62:
 14889                           	opt callstack 0
 14890  014A00                     _UART1_SetTxInterruptHandler:
 14891                           	opt callstack 25
 14892                           
 14893                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 14894                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14895                           
 14896                           ; BSR set to: 57
 14897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14898                           ;incstack = 0
 14899  014A00  50E1               	movf	fsr1l,w,c
 14900  014A02  0FFD               	addlw	-3
 14901  014A04  6ED9               	movwf	fsr2l,c
 14902  014A06  50E2               	movf	fsr1h,w,c
 14903  014A08  6EDA               	movwf	fsr2h,c
 14904  014A0A  0EFF               	movlw	255
 14905  014A0C  22DA               	addwfc	fsr2h,f,c
 14906  014A0E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 14907  014A14  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 14908  014A1A  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 14909                           
 14910                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14911  014A20  52E5               	movf	postdec1,f,c
 14912  014A22  52E5               	movf	postdec1,f,c
 14913  014A24  52E5               	movf	postdec1,f,c
 14914  014A26  0012               	return		;funcret
 14915  014A28                     __end_of_UART1_SetTxInterruptHandler:
 14916                           	opt callstack 0
 14917                           
 14918 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14919 ;; Defined at:
 14920 ;;		line 239 in file "mcc_generated_files/uart1.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14923 ;;		 -> UART1_Receive_ISR(1), 
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;		None
 14926 ;; Return value:  Size  Location     Type
 14927 ;;                  1  [STACK] void 
 14928 ;; Registers used:
 14929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14930 ;; Tracked objects:
 14931 ;;		On entry : 3F/39
 14932 ;;		On exit  : 0/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14939 ;;Total ram usage:        0 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:    3
 14942 ;; This function calls:
 14943 ;;		Nothing
 14944 ;; This function is called by:
 14945 ;;		_UART1_Initialize
 14946 ;; This function uses a reentrant model
 14947 ;;
 14948                           
 14949                           	psect	text63
 14950  014A28                     __ptext63:
 14951                           	opt callstack 0
 14952  014A28                     _UART1_SetRxInterruptHandler:
 14953                           	opt callstack 25
 14954                           
 14955                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 14956                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14957                           
 14958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14959                           ;incstack = 0
 14960  014A28  50E1               	movf	fsr1l,w,c
 14961  014A2A  0FFD               	addlw	-3
 14962  014A2C  6ED9               	movwf	fsr2l,c
 14963  014A2E  50E2               	movf	fsr1h,w,c
 14964  014A30  6EDA               	movwf	fsr2h,c
 14965  014A32  0EFF               	movlw	255
 14966  014A34  22DA               	addwfc	fsr2h,f,c
 14967  014A36  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 14968  014A3C  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 14969  014A42  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 14970                           
 14971                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14972  014A48  52E5               	movf	postdec1,f,c
 14973  014A4A  52E5               	movf	postdec1,f,c
 14974  014A4C  52E5               	movf	postdec1,f,c
 14975  014A4E  0012               	return		;funcret
 14976  014A50                     __end_of_UART1_SetRxInterruptHandler:
 14977                           	opt callstack 0
 14978                           
 14979 ;; *************** function _TMR6_Initialize *****************
 14980 ;; Defined at:
 14981 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;		None
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;		None
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1  [STACK] void 
 14988 ;; Registers used:
 14989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14990 ;; Tracked objects:
 14991 ;;		On entry : 3F/39
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14999 ;;Total ram usage:        0 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:    4
 15002 ;; This function calls:
 15003 ;;		_TMR6_SetInterruptHandler
 15004 ;; This function is called by:
 15005 ;;		_SYSTEM_Initialize
 15006 ;; This function uses a reentrant model
 15007 ;;
 15008                           
 15009                           	psect	text64
 15010  014A50                     __ptext64:
 15011                           	opt callstack 0
 15012  014A50                     _TMR6_Initialize:
 15013                           	opt callstack 25
 15014                           
 15015                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 15016                           
 15017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15018                           ;incstack = 0
 15019  014A50  0E01               	movlw	1
 15020  014A52  6E96               	movwf	16278,c	;volatile
 15021                           
 15022                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 15023  014A54  6A95               	clrf	16277,c	;volatile
 15024                           
 15025                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 15026  014A56  6A97               	clrf	16279,c	;volatile
 15027                           
 15028                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 15029  014A58  0E03               	movlw	3
 15030  014A5A  6E93               	movwf	16275,c	;volatile
 15031                           
 15032                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 15033  014A5C  6A92               	clrf	16274,c	;volatile
 15034                           
 15035                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 15036  014A5E  0139               	movlb	57	; () banked
 15037  014A60  91A9               	bcf	169,0,b	;volatile
 15038                           
 15039                           ; BSR set to: 57
 15040                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 15041  014A62  8199               	bsf	153,0,b	;volatile
 15042                           
 15043                           ; BSR set to: 57
 15044                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 15045  014A64  0E56               	movlw	low _TMR6_DefaultInterruptHandler
 15046  014A66  6EE6               	movwf	postinc1,c
 15047  014A68  0E45               	movlw	high _TMR6_DefaultInterruptHandler
 15048  014A6A  6EE6               	movwf	postinc1,c
 15049  014A6C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 15050  014A6E  6EE6               	movwf	postinc1,c
 15051  014A70  EC3C  F0A5         	call	_TMR6_SetInterruptHandler	;wreg free
 15052                           
 15053                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 15054  014A74  6894               	setf	16276,c	;volatile
 15055                           
 15056                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15057  014A76  0012               	return		;funcret
 15058  014A78                     __end_of_TMR6_Initialize:
 15059                           	opt callstack 0
 15060                           
 15061 ;; *************** function _TMR6_SetInterruptHandler *****************
 15062 ;; Defined at:
 15063 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 15064 ;; Parameters:    Size  Location     Type
 15065 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15066 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 15067 ;; Auto vars:     Size  Location     Type
 15068 ;;		None
 15069 ;; Return value:  Size  Location     Type
 15070 ;;                  1  [STACK] void 
 15071 ;; Registers used:
 15072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15073 ;; Tracked objects:
 15074 ;;		On entry : 3F/39
 15075 ;;		On exit  : 0/0
 15076 ;;		Unchanged: 0/0
 15077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15082 ;;Total ram usage:        0 bytes
 15083 ;; Hardware stack levels used:    1
 15084 ;; Hardware stack levels required when called:    3
 15085 ;; This function calls:
 15086 ;;		Nothing
 15087 ;; This function is called by:
 15088 ;;		_TMR6_Initialize
 15089 ;; This function uses a reentrant model
 15090 ;;
 15091                           
 15092                           	psect	text65
 15093  014A78                     __ptext65:
 15094                           	opt callstack 0
 15095  014A78                     _TMR6_SetInterruptHandler:
 15096                           	opt callstack 25
 15097                           
 15098                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 15099                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15100                           
 15101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15102                           ;incstack = 0
 15103  014A78  50E1               	movf	fsr1l,w,c
 15104  014A7A  0FFD               	addlw	-3
 15105  014A7C  6ED9               	movwf	fsr2l,c
 15106  014A7E  50E2               	movf	fsr1h,w,c
 15107  014A80  6EDA               	movwf	fsr2h,c
 15108  014A82  0EFF               	movlw	255
 15109  014A84  22DA               	addwfc	fsr2h,f,c
 15110  014A86  006F FF78  F0DF    	movff	postinc2,_TMR6_InterruptHandler
 15111  014A8C  006F FF78  F0E0    	movff	postinc2,_TMR6_InterruptHandler+1
 15112  014A92  006F FF74  F0E1    	movff	postdec2,_TMR6_InterruptHandler+2
 15113                           
 15114                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15115  014A98  52E5               	movf	postdec1,f,c
 15116  014A9A  52E5               	movf	postdec1,f,c
 15117  014A9C  52E5               	movf	postdec1,f,c
 15118  014A9E  0012               	return		;funcret
 15119  014AA0                     __end_of_TMR6_SetInterruptHandler:
 15120                           	opt callstack 0
 15121                           
 15122 ;; *************** function _TMR5_Initialize *****************
 15123 ;; Defined at:
 15124 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 15125 ;; Parameters:    Size  Location     Type
 15126 ;;		None
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;		None
 15129 ;; Return value:  Size  Location     Type
 15130 ;;                  1  [STACK] void 
 15131 ;; Registers used:
 15132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 15133 ;; Tracked objects:
 15134 ;;		On entry : 3F/3C
 15135 ;;		On exit  : 0/0
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15142 ;;Total ram usage:        0 bytes
 15143 ;; Hardware stack levels used:    1
 15144 ;; Hardware stack levels required when called:    4
 15145 ;; This function calls:
 15146 ;;		_TMR5_SetInterruptHandler
 15147 ;; This function is called by:
 15148 ;;		_SYSTEM_Initialize
 15149 ;; This function uses a reentrant model
 15150 ;;
 15151                           
 15152                           	psect	text66
 15153  014510                     __ptext66:
 15154                           	opt callstack 0
 15155  014510                     _TMR5_Initialize:
 15156                           	opt callstack 25
 15157                           
 15158                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 15159                           
 15160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15161                           ;incstack = 0
 15162  014510  6A9B               	clrf	16283,c	;volatile
 15163                           
 15164                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 15165  014512  6A9C               	clrf	16284,c	;volatile
 15166                           
 15167                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 15168  014514  0E01               	movlw	1
 15169  014516  6E9D               	movwf	16285,c	;volatile
 15170                           
 15171                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 15172  014518  0E63               	movlw	99
 15173  01451A  6E99               	movwf	16281,c	;volatile
 15174                           
 15175                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 15176  01451C  0EC0               	movlw	192
 15177  01451E  6E98               	movwf	16280,c	;volatile
 15178                           
 15179                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 15180  014520  5098               	movf	16280,w,c	;volatile
 15181  014522  006F FE64  F03D    	movff	16281,btemp	;volatile
 15182  014528  6A3E               	clrf	btemp+1,c
 15183  01452A  0060  F0F4  F03E   	movff	btemp,btemp+1
 15184  014530  6A3D               	clrf	btemp,c
 15185  014532  103D               	iorwf	btemp,w,c
 15186  014534  6E29               	movwf	_timer5ReloadVal,c	;volatile
 15187  014536  503E               	movf	btemp+1,w,c
 15188  014538  6E2A               	movwf	_timer5ReloadVal+1,c	;volatile
 15189                           
 15190                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 15191  01453A  0139               	movlb	57	; () banked
 15192  01453C  9DA8               	bcf	168,6,b	;volatile
 15193                           
 15194                           ; BSR set to: 57
 15195                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 15196  01453E  8D98               	bsf	152,6,b	;volatile
 15197                           
 15198                           ; BSR set to: 57
 15199                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 15200  014540  0EE2               	movlw	low _TMR5_DefaultInterruptHandler
 15201  014542  6EE6               	movwf	postinc1,c
 15202  014544  0E4D               	movlw	high _TMR5_DefaultInterruptHandler
 15203  014546  6EE6               	movwf	postinc1,c
 15204  014548  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 15205  01454A  6EE6               	movwf	postinc1,c
 15206  01454C  EC50  F0A5         	call	_TMR5_SetInterruptHandler	;wreg free
 15207                           
 15208                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 15209  014550  0E31               	movlw	49
 15210  014552  6E9A               	movwf	16282,c	;volatile
 15211                           
 15212                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15213  014554  0012               	return		;funcret
 15214  014556                     __end_of_TMR5_Initialize:
 15215                           	opt callstack 0
 15216                           
 15217 ;; *************** function _TMR5_SetInterruptHandler *****************
 15218 ;; Defined at:
 15219 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 15220 ;; Parameters:    Size  Location     Type
 15221 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15222 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  1  [STACK] void 
 15227 ;; Registers used:
 15228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15229 ;; Tracked objects:
 15230 ;;		On entry : 3F/39
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15238 ;;Total ram usage:        0 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:    3
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		_TMR5_Initialize
 15245 ;; This function uses a reentrant model
 15246 ;;
 15247                           
 15248                           	psect	text67
 15249  014AA0                     __ptext67:
 15250                           	opt callstack 0
 15251  014AA0                     _TMR5_SetInterruptHandler:
 15252                           	opt callstack 25
 15253                           
 15254                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 15255                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15256                           
 15257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15258                           ;incstack = 0
 15259  014AA0  50E1               	movf	fsr1l,w,c
 15260  014AA2  0FFD               	addlw	-3
 15261  014AA4  6ED9               	movwf	fsr2l,c
 15262  014AA6  50E2               	movf	fsr1h,w,c
 15263  014AA8  6EDA               	movwf	fsr2h,c
 15264  014AAA  0EFF               	movlw	255
 15265  014AAC  22DA               	addwfc	fsr2h,f,c
 15266  014AAE  006F FF78  F0DC    	movff	postinc2,_TMR5_InterruptHandler
 15267  014AB4  006F FF78  F0DD    	movff	postinc2,_TMR5_InterruptHandler+1
 15268  014ABA  006F FF74  F0DE    	movff	postdec2,_TMR5_InterruptHandler+2
 15269                           
 15270                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15271  014AC0  52E5               	movf	postdec1,f,c
 15272  014AC2  52E5               	movf	postdec1,f,c
 15273  014AC4  52E5               	movf	postdec1,f,c
 15274  014AC6  0012               	return		;funcret
 15275  014AC8                     __end_of_TMR5_SetInterruptHandler:
 15276                           	opt callstack 0
 15277                           
 15278 ;; *************** function _SPI1_Initialize *****************
 15279 ;; Defined at:
 15280 ;;		line 64 in file "mcc_generated_files/spi1.c"
 15281 ;; Parameters:    Size  Location     Type
 15282 ;;		None
 15283 ;; Auto vars:     Size  Location     Type
 15284 ;;		None
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  1  [STACK] void 
 15287 ;; Registers used:
 15288 ;;		wreg, status,2
 15289 ;; Tracked objects:
 15290 ;;		On entry : 3F/39
 15291 ;;		On exit  : 3F/3D
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15298 ;;Total ram usage:        0 bytes
 15299 ;; Hardware stack levels used:    1
 15300 ;; Hardware stack levels required when called:    3
 15301 ;; This function calls:
 15302 ;;		Nothing
 15303 ;; This function is called by:
 15304 ;;		_SYSTEM_Initialize
 15305 ;; This function uses a reentrant model
 15306 ;;
 15307                           
 15308                           	psect	text68
 15309  014DFC                     __ptext68:
 15310                           	opt callstack 0
 15311  014DFC                     _SPI1_Initialize:
 15312                           	opt callstack 26
 15313                           
 15314                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 15315                           
 15316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15317                           ;incstack = 0
 15318  014DFC  0E40               	movlw	64
 15319  014DFE  013D               	movlb	61	; () banked
 15320  014E00  6F15               	movwf	21,b	;volatile
 15321                           
 15322                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 15323  014E02  0E03               	movlw	3
 15324  014E04  6F16               	movwf	22,b	;volatile
 15325                           
 15326                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 15327  014E06  0E4F               	movlw	79
 15328  014E08  6F19               	movwf	25,b	;volatile
 15329                           
 15330                           ; BSR set to: 61
 15331                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 15332  014E0A  6B1C               	clrf	28,b	;volatile
 15333                           
 15334                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 15335  014E0C  0E83               	movlw	131
 15336  014E0E  6F14               	movwf	20,b	;volatile
 15337                           
 15338                           ; BSR set to: 61
 15339                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15340  014E10  0012               	return		;funcret
 15341  014E12                     __end_of_SPI1_Initialize:
 15342                           	opt callstack 0
 15343                           
 15344 ;; *************** function _PMD_Initialize *****************
 15345 ;; Defined at:
 15346 ;;		line 88 in file "mcc_generated_files/mcc.c"
 15347 ;; Parameters:    Size  Location     Type
 15348 ;;		None
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;		None
 15351 ;; Return value:  Size  Location     Type
 15352 ;;                  1  [STACK] void 
 15353 ;; Registers used:
 15354 ;;		None
 15355 ;; Tracked objects:
 15356 ;;		On entry : 3F/39
 15357 ;;		On exit  : 3F/39
 15358 ;;		Unchanged: 0/0
 15359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15364 ;;Total ram usage:        0 bytes
 15365 ;; Hardware stack levels used:    1
 15366 ;; Hardware stack levels required when called:    3
 15367 ;; This function calls:
 15368 ;;		Nothing
 15369 ;; This function is called by:
 15370 ;;		_SYSTEM_Initialize
 15371 ;; This function uses a reentrant model
 15372 ;;
 15373                           
 15374                           	psect	text69
 15375  014E28                     __ptext69:
 15376                           	opt callstack 0
 15377  014E28                     _PMD_Initialize:
 15378                           	opt callstack 26
 15379                           
 15380                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 15381                           
 15382                           ; BSR set to: 61
 15383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15384                           ;incstack = 0
 15385  014E28  0139               	movlb	57	; () banked
 15386  014E2A  6BC0               	clrf	192,b	;volatile
 15387                           
 15388                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 15389  014E2C  6BC1               	clrf	193,b	;volatile
 15390                           
 15391                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 15392  014E2E  6BC2               	clrf	194,b	;volatile
 15393                           
 15394                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 15395  014E30  6BC3               	clrf	195,b	;volatile
 15396                           
 15397                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 15398  014E32  6BC4               	clrf	196,b	;volatile
 15399                           
 15400                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 15401  014E34  6BC5               	clrf	197,b	;volatile
 15402                           
 15403                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 15404  014E36  6BC6               	clrf	198,b	;volatile
 15405                           
 15406                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 15407  014E38  6BC7               	clrf	199,b	;volatile
 15408                           
 15409                           ; BSR set to: 57
 15410                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15411  014E3A  0012               	return		;funcret
 15412  014E3C                     __end_of_PMD_Initialize:
 15413                           	opt callstack 0
 15414                           
 15415 ;; *************** function _PIN_MANAGER_Initialize *****************
 15416 ;; Defined at:
 15417 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;		None
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;		None
 15422 ;; Return value:  Size  Location     Type
 15423 ;;                  1  [STACK] void 
 15424 ;; Registers used:
 15425 ;;		wreg, status,2
 15426 ;; Tracked objects:
 15427 ;;		On entry : 3F/39
 15428 ;;		On exit  : 3F/3A
 15429 ;;		Unchanged: 0/0
 15430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15435 ;;Total ram usage:        0 bytes
 15436 ;; Hardware stack levels used:    1
 15437 ;; Hardware stack levels required when called:    3
 15438 ;; This function calls:
 15439 ;;		Nothing
 15440 ;; This function is called by:
 15441 ;;		_SYSTEM_Initialize
 15442 ;; This function uses a reentrant model
 15443 ;;
 15444                           
 15445                           	psect	text70
 15446  013D3A                     __ptext70:
 15447                           	opt callstack 0
 15448  013D3A                     _PIN_MANAGER_Initialize:
 15449                           	opt callstack 26
 15450                           
 15451                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 15452                           
 15453                           ; BSR set to: 57
 15454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15455                           ;incstack = 0
 15456  013D3A  0E07               	movlw	7
 15457  013D3C  6EBE               	movwf	16318,c	;volatile
 15458                           
 15459                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 15460  013D3E  6ABD               	clrf	16317,c	;volatile
 15461                           
 15462                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 15463  013D40  6ABA               	clrf	16314,c	;volatile
 15464                           
 15465                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 15466  013D42  6ABF               	clrf	16319,c	;volatile
 15467                           
 15468                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 15469  013D44  6ABB               	clrf	16315,c	;volatile
 15470                           
 15471                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 15472  013D46  0E06               	movlw	6
 15473  013D48  6EBC               	movwf	16316,c	;volatile
 15474                           
 15475                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 15476  013D4A  6AC6               	clrf	16326,c	;volatile
 15477                           
 15478                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 15479  013D4C  0E0F               	movlw	15
 15480  013D4E  6EC7               	movwf	16327,c	;volatile
 15481                           
 15482                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 15483  013D50  0E8F               	movlw	143
 15484  013D52  6EC2               	movwf	16322,c	;volatile
 15485                           
 15486                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 15487  013D54  0EBF               	movlw	191
 15488  013D56  6EC3               	movwf	16323,c	;volatile
 15489                           
 15490                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 15491  013D58  0E91               	movlw	145
 15492  013D5A  6EC4               	movwf	16324,c	;volatile
 15493                           
 15494                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 15495  013D5C  0E0C               	movlw	12
 15496  013D5E  6EC5               	movwf	16325,c	;volatile
 15497                           
 15498                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 15499  013D60  013A               	movlb	58	; () banked
 15500  013D62  6B70               	clrf	112,b	;volatile
 15501                           
 15502                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 15503  013D64  0E01               	movlw	1
 15504  013D66  6F60               	movwf	96,b	;volatile
 15505                           
 15506                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 15507  013D68  0E38               	movlw	56
 15508  013D6A  6F50               	movwf	80,b	;volatile
 15509                           
 15510                           ; BSR set to: 58
 15511                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 15512  013D6C  6B80               	clrf	128,b	;volatile
 15513                           
 15514                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x0F;
 15515  013D6E  0E0F               	movlw	15
 15516  013D70  6F90               	movwf	144,b	;volatile
 15517                           
 15518                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 15519  013D72  0E8F               	movlw	143
 15520  013D74  6F40               	movwf	64,b	;volatile
 15521                           
 15522                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 15523  013D76  0EFC               	movlw	252
 15524  013D78  6F71               	movwf	113,b	;volatile
 15525                           
 15526                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0xF0;
 15527  013D7A  0EF0               	movlw	240
 15528  013D7C  6F91               	movwf	145,b	;volatile
 15529                           
 15530                           ; BSR set to: 58
 15531                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 15532  013D7E  6B81               	clrf	129,b	;volatile
 15533                           
 15534                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 15535  013D80  0E87               	movlw	135
 15536  013D82  6F51               	movwf	81,b	;volatile
 15537                           
 15538                           ; BSR set to: 58
 15539                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 15540  013D84  6B41               	clrf	65,b	;volatile
 15541                           
 15542                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 15543  013D86  0E90               	movlw	144
 15544  013D88  6F61               	movwf	97,b	;volatile
 15545                           
 15546                           ; BSR set to: 58
 15547                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 15548  013D8A  6B82               	clrf	130,b	;volatile
 15549                           
 15550                           ; BSR set to: 58
 15551                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 15552  013D8C  6B92               	clrf	146,b	;volatile
 15553                           
 15554                           ; BSR set to: 58
 15555                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 15556  013D8E  6B42               	clrf	66,b	;volatile
 15557                           
 15558                           ; BSR set to: 58
 15559                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 15560  013D90  6B52               	clrf	82,b	;volatile
 15561                           
 15562                           ; BSR set to: 58
 15563                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 15564  013D92  6B62               	clrf	98,b	;volatile
 15565                           
 15566                           ; BSR set to: 58
 15567                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 15568  013D94  6B72               	clrf	114,b	;volatile
 15569                           
 15570                           ; BSR set to: 58
 15571                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 15572  013D96  6943               	setf	67,b	;volatile
 15573                           
 15574                           ; BSR set to: 58
 15575                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 15576  013D98  6953               	setf	83,b	;volatile
 15577                           
 15578                           ; BSR set to: 58
 15579                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 15580  013D9A  6963               	setf	99,b	;volatile
 15581                           
 15582                           ; BSR set to: 58
 15583                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 15584  013D9C  6973               	setf	115,b	;volatile
 15585                           
 15586                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 15587  013D9E  0E07               	movlw	7
 15588  013DA0  6F83               	movwf	131,b	;volatile
 15589                           
 15590                           ; BSR set to: 58
 15591                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 15592  013DA2  6993               	setf	147,b	;volatile
 15593                           
 15594                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 15595  013DA4  0E0F               	movlw	15
 15596  013DA6  6FE8               	movwf	232,b	;volatile
 15597                           
 15598                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 15599  013DA8  0E16               	movlw	22
 15600  013DAA  6F0E               	movwf	14,b	;volatile
 15601                           
 15602                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 15603  013DAC  0E1E               	movlw	30
 15604  013DAE  6F13               	movwf	19,b	;volatile
 15605                           
 15606                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 15607  013DB0  0E08               	movlw	8
 15608  013DB2  6FC0               	movwf	192,b	;volatile
 15609                           
 15610                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 15611  013DB4  0E0A               	movlw	10
 15612  013DB6  6FC2               	movwf	194,b	;volatile
 15613                           
 15614                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 15615  013DB8  0E09               	movlw	9
 15616  013DBA  6FC1               	movwf	193,b	;volatile
 15617                           
 15618                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 15619  013DBC  0E17               	movlw	23
 15620  013DBE  6FE5               	movwf	229,b	;volatile
 15621                           
 15622                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 15623  013DC0  0E13               	movlw	19
 15624  013DC2  6FDE               	movwf	222,b	;volatile
 15625                           
 15626                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 15627  013DC4  0E01               	movlw	1
 15628  013DC6  6F04               	movwf	4,b	;volatile
 15629                           
 15630                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 15631  013DC8  0E26               	movlw	38
 15632  013DCA  6F05               	movwf	5,b	;volatile
 15633                           
 15634                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 15635  013DCC  0E28               	movlw	40
 15636  013DCE  6F06               	movwf	6,b	;volatile
 15637                           
 15638                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 15639  013DD0  0E1F               	movlw	31
 15640  013DD2  6F15               	movwf	21,b	;volatile
 15641                           
 15642                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 15643  013DD4  0E13               	movlw	19
 15644  013DD6  6F16               	movwf	22,b	;volatile
 15645                           
 15646                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 15647  013DD8  0E14               	movlw	20
 15648  013DDA  6FDF               	movwf	223,b	;volatile
 15649                           
 15650                           ; BSR set to: 58
 15651                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 15652  013DDC  0012               	return		;funcret
 15653  013DDE                     __end_of_PIN_MANAGER_Initialize:
 15654                           	opt callstack 0
 15655                           
 15656 ;; *************** function _OSCILLATOR_Initialize *****************
 15657 ;; Defined at:
 15658 ;;		line 70 in file "mcc_generated_files/mcc.c"
 15659 ;; Parameters:    Size  Location     Type
 15660 ;;		None
 15661 ;; Auto vars:     Size  Location     Type
 15662 ;;		None
 15663 ;; Return value:  Size  Location     Type
 15664 ;;                  1  [STACK] void 
 15665 ;; Registers used:
 15666 ;;		wreg, status,2
 15667 ;; Tracked objects:
 15668 ;;		On entry : 3F/3A
 15669 ;;		On exit  : 3F/39
 15670 ;;		Unchanged: 0/0
 15671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15676 ;;Total ram usage:        0 bytes
 15677 ;; Hardware stack levels used:    1
 15678 ;; Hardware stack levels required when called:    3
 15679 ;; This function calls:
 15680 ;;		Nothing
 15681 ;; This function is called by:
 15682 ;;		_SYSTEM_Initialize
 15683 ;; This function uses a reentrant model
 15684 ;;
 15685                           
 15686                           	psect	text71
 15687  014E12                     __ptext71:
 15688                           	opt callstack 0
 15689  014E12                     _OSCILLATOR_Initialize:
 15690                           	opt callstack 26
 15691                           
 15692                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 15693                           
 15694                           ; BSR set to: 58
 15695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15696                           ;incstack = 0
 15697  014E12  0E20               	movlw	32
 15698  014E14  0139               	movlb	57	; () banked
 15699  014E16  6FD9               	movwf	217,b	;volatile
 15700                           
 15701                           ; BSR set to: 57
 15702                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 15703  014E18  6BDB               	clrf	219,b	;volatile
 15704                           
 15705                           ; BSR set to: 57
 15706                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 15707  014E1A  6BDD               	clrf	221,b	;volatile
 15708                           
 15709                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 15710  014E1C  0E02               	movlw	2
 15711  014E1E  6FDF               	movwf	223,b	;volatile
 15712                           
 15713                           ; BSR set to: 57
 15714                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 15715  014E20  6BDE               	clrf	222,b	;volatile
 15716  014E22                     l194:
 15717                           
 15718                           ; BSR set to: 57
 15719                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 15720  014E22  B1DC               	btfsc	220,0,b	;volatile
 15721  014E24  0012               	return	
 15722  014E26  D7FD               	goto	l194
 15723  014E28                     __end_of_OSCILLATOR_Initialize:
 15724                           	opt callstack 0
 15725                           
 15726 ;; *************** function _NCO1_Initialize *****************
 15727 ;; Defined at:
 15728 ;;		line 58 in file "mcc_generated_files/nco1.c"
 15729 ;; Parameters:    Size  Location     Type
 15730 ;;		None
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;		None
 15733 ;; Return value:  Size  Location     Type
 15734 ;;                  1  [STACK] void 
 15735 ;; Registers used:
 15736 ;;		wreg, status,2
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/39
 15739 ;;		On exit  : 3F/3F
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15746 ;;Total ram usage:        0 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:    3
 15749 ;; This function calls:
 15750 ;;		Nothing
 15751 ;; This function is called by:
 15752 ;;		_SYSTEM_Initialize
 15753 ;; This function uses a reentrant model
 15754 ;;
 15755                           
 15756                           	psect	text72
 15757  014D74                     __ptext72:
 15758                           	opt callstack 0
 15759  014D74                     _NCO1_Initialize:
 15760                           	opt callstack 26
 15761                           
 15762                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 15763                           
 15764                           ; BSR set to: 57
 15765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15766                           ;incstack = 0
 15767  014D74  013F               	movlb	63	; () banked
 15768  014D76  6B3E               	clrf	62,b	;volatile
 15769                           
 15770                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 15771  014D78  6B3F               	clrf	63,b	;volatile
 15772                           
 15773                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 15774  014D7A  6B3A               	clrf	58,b	;volatile
 15775                           
 15776                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 15777  014D7C  6B39               	clrf	57,b	;volatile
 15778                           
 15779                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 15780  014D7E  6B38               	clrf	56,b	;volatile
 15781                           
 15782                           ; BSR set to: 63
 15783                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 15784  014D80  0E06               	movlw	6
 15785  014D82  6F3D               	movwf	61,b	;volatile
 15786                           
 15787                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 15788  014D84  0EC7               	movlw	199
 15789  014D86  6F3C               	movwf	60,b	;volatile
 15790                           
 15791                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 15792  014D88  0EAE               	movlw	174
 15793  014D8A  6F3B               	movwf	59,b	;volatile
 15794                           
 15795                           ; BSR set to: 63
 15796                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 15797  014D8C  8F3E               	bsf	62,7,b	;volatile
 15798                           
 15799                           ; BSR set to: 63
 15800                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15801  014D8E  0012               	return		;funcret
 15802  014D90                     __end_of_NCO1_Initialize:
 15803                           	opt callstack 0
 15804                           
 15805 ;; *************** function _INTERRUPT_Initialize *****************
 15806 ;; Defined at:
 15807 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15808 ;; Parameters:    Size  Location     Type
 15809 ;;		None
 15810 ;; Auto vars:     Size  Location     Type
 15811 ;;  state           1  [STACK] _Bool 
 15812 ;; Return value:  Size  Location     Type
 15813 ;;                  1  [STACK] void 
 15814 ;; Registers used:
 15815 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 15816 ;; Tracked objects:
 15817 ;;		On entry : 0/0
 15818 ;;		On exit  : 3F/39
 15819 ;;		Unchanged: 0/0
 15820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15825 ;;Total ram usage:        0 bytes
 15826 ;; Hardware stack levels used:    1
 15827 ;; Hardware stack levels required when called:    3
 15828 ;; This function calls:
 15829 ;;		Nothing
 15830 ;; This function is called by:
 15831 ;;		_SYSTEM_Initialize
 15832 ;; This function uses a reentrant model
 15833 ;;
 15834                           
 15835                           	psect	text73
 15836  01410C                     __ptext73:
 15837                           	opt callstack 0
 15838  01410C                     _INTERRUPT_Initialize:
 15839                           	opt callstack 0
 15840                           
 15841                           ; BSR set to: 63
 15842                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15843  01410C  52E6               	movf	postinc1,f,c
 15844                           
 15845                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15846                           
 15847                           ;incstack = 0
 15848  01410E  8AD2               	bsf	16338,5,c	;volatile
 15849                           
 15850                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15851  014110  AED2               	btfss	16338,7,c	;volatile
 15852  014112  D003               	goto	u3590
 15853  014114  6A48               	clrf	btemp+11,c
 15854  014116  2A48               	incf	btemp+11,f,c
 15855  014118  D001               	goto	u3608
 15856  01411A                     u3590:
 15857  01411A  6A48               	clrf	btemp+11,c
 15858  01411C                     u3608:
 15859                           
 15860                           ;stkvar	_state @ sp[(-1)+0]
 15861  01411C  0EFF               	movlw	-1
 15862  01411E  0060  F123  FFE3   	movff	btemp+11,plusw1
 15863                           
 15864                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15865  014124  9ED2               	bcf	16338,7,c	;volatile
 15866                           
 15867                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15868  014126  0E55               	movlw	85
 15869  014128  6ED4               	movwf	16340,c	;volatile
 15870                           
 15871                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15872  01412A  0EAA               	movlw	170
 15873  01412C  6ED4               	movwf	16340,c	;volatile
 15874                           
 15875                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15876  01412E  90D4               	bcf	16340,0,c	;volatile
 15877                           
 15878                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 15879  014130  0138               	movlb	56	; () banked
 15880  014132  6B9F               	clrf	159,b	;volatile
 15881                           
 15882                           ; BSR set to: 56
 15883                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 15884  014134  6B9E               	clrf	158,b	;volatile
 15885                           
 15886                           ; BSR set to: 56
 15887                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 15888  014136  0E08               	movlw	8
 15889  014138  6F9D               	movwf	157,b	;volatile
 15890                           
 15891                           ; BSR set to: 56
 15892                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15893  01413A  0E55               	movlw	85
 15894  01413C  6ED4               	movwf	16340,c	;volatile
 15895                           
 15896                           ; BSR set to: 56
 15897                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15898  01413E  0EAA               	movlw	170
 15899  014140  6ED4               	movwf	16340,c	;volatile
 15900                           
 15901                           ; BSR set to: 56
 15902                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15903  014142  80D4               	bsf	16340,0,c	;volatile
 15904                           
 15905                           ; BSR set to: 56
 15906                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15907                           ;stkvar	_state @ sp[(-1)+0]
 15908  014144  0EFF               	movlw	-1
 15909  014146  B0E3               	btfsc	plusw1,0,c
 15910  014148  D002               	bra	u3615
 15911  01414A  9ED2               	bcf	16338,7,c	;volatile
 15912  01414C  D001               	bra	u3616
 15913  01414E                     u3615:
 15914  01414E  8ED2               	bsf	16338,7,c	;volatile
 15915  014150                     u3616:
 15916                           
 15917                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 15918  014150  0139               	movlb	57	; () banked
 15919  014152  8782               	bsf	130,3,b	;volatile
 15920                           
 15921                           ; BSR set to: 57
 15922                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 15923  014154  8382               	bsf	130,1,b	;volatile
 15924                           
 15925                           ; BSR set to: 57
 15926                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 15927  014156  8182               	bsf	130,0,b	;volatile
 15928                           
 15929                           ; BSR set to: 57
 15930                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 15931  014158  8582               	bsf	130,2,b	;volatile
 15932                           
 15933                           ; BSR set to: 57
 15934                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 15935  01415A  8786               	bsf	134,3,b	;volatile
 15936                           
 15937                           ; BSR set to: 57
 15938                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 15939  01415C  8586               	bsf	134,2,b	;volatile
 15940                           
 15941                           ; BSR set to: 57
 15942                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 15943  01415E  8983               	bsf	131,4,b	;volatile
 15944                           
 15945                           ; BSR set to: 57
 15946                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 15947  014160  8783               	bsf	131,3,b	;volatile
 15948                           
 15949                           ; BSR set to: 57
 15950                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 15951  014162  8181               	bsf	129,0,b	;volatile
 15952                           
 15953                           ; BSR set to: 57
 15954                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 15955  014164  8185               	bsf	133,0,b	;volatile
 15956                           
 15957                           ; BSR set to: 57
 15958                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 15959  014166  8B87               	bsf	135,5,b	;volatile
 15960                           
 15961                           ; BSR set to: 57
 15962                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 15963  014168  8189               	bsf	137,0,b	;volatile
 15964                           
 15965                           ; BSR set to: 57
 15966                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 15967  01416A  8D88               	bsf	136,6,b	;volatile
 15968                           
 15969                           ; BSR set to: 57
 15970                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 15971  01416C  8581               	bsf	129,2,b	;volatile
 15972                           
 15973                           ; BSR set to: 57
 15974                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 15975  01416E  52E5               	movf	postdec1,f,c
 15976  014170  0012               	return		;funcret
 15977  014172                     __end_of_INTERRUPT_Initialize:
 15978                           	opt callstack 0
 15979                           
 15980 ;; *************** function _EXT_INT_Initialize *****************
 15981 ;; Defined at:
 15982 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 15983 ;; Parameters:    Size  Location     Type
 15984 ;;		None
 15985 ;; Auto vars:     Size  Location     Type
 15986 ;;		None
 15987 ;; Return value:  Size  Location     Type
 15988 ;;                  1  [STACK] void 
 15989 ;; Registers used:
 15990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15991 ;; Tracked objects:
 15992 ;;		On entry : 3F/3F
 15993 ;;		On exit  : 3F/39
 15994 ;;		Unchanged: 0/0
 15995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16000 ;;Total ram usage:        0 bytes
 16001 ;; Hardware stack levels used:    1
 16002 ;; Hardware stack levels required when called:    4
 16003 ;; This function calls:
 16004 ;;		_INT0_SetInterruptHandler
 16005 ;;		_INT1_SetInterruptHandler
 16006 ;;		_INT2_SetInterruptHandler
 16007 ;; This function is called by:
 16008 ;;		_SYSTEM_Initialize
 16009 ;; This function uses a reentrant model
 16010 ;;
 16011                           
 16012                           	psect	text74
 16013  0143EA                     __ptext74:
 16014                           	opt callstack 0
 16015  0143EA                     _EXT_INT_Initialize:
 16016                           	opt callstack 25
 16017                           
 16018                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 16019                           
 16020                           ; BSR set to: 57
 16021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16022                           ;incstack = 0
 16023  0143EA  0139               	movlb	57	; () banked
 16024  0143EC  91A1               	bcf	161,0,b	;volatile
 16025                           
 16026                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 16027  0143EE  90D2               	bcf	16338,0,c	;volatile
 16028                           
 16029                           ; BSR set to: 57
 16030                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 16031  0143F0  0EEA               	movlw	low _INT0_DefaultInterruptHandler
 16032  0143F2  6EE6               	movwf	postinc1,c
 16033  0143F4  0E4E               	movlw	high _INT0_DefaultInterruptHandler
 16034  0143F6  6EE6               	movwf	postinc1,c
 16035  0143F8  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 16036  0143FA  6EE6               	movwf	postinc1,c
 16037  0143FC  EC8C  F0A5         	call	_INT0_SetInterruptHandler	;wreg free
 16038                           
 16039                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 16040  014400  0139               	movlb	57	; () banked
 16041  014402  8191               	bsf	145,0,b	;volatile
 16042                           
 16043                           ; BSR set to: 57
 16044                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 16045  014404  91A5               	bcf	165,0,b	;volatile
 16046                           
 16047                           ; BSR set to: 57
 16048                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 16049  014406  92D2               	bcf	16338,1,c	;volatile
 16050                           
 16051                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 16052  014408  0EEC               	movlw	low _INT1_DefaultInterruptHandler
 16053  01440A  6EE6               	movwf	postinc1,c
 16054  01440C  0E4E               	movlw	high _INT1_DefaultInterruptHandler
 16055  01440E  6EE6               	movwf	postinc1,c
 16056  014410  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 16057  014412  6EE6               	movwf	postinc1,c
 16058  014414  EC78  F0A5         	call	_INT1_SetInterruptHandler	;wreg free
 16059                           
 16060                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 16061  014418  0139               	movlb	57	; () banked
 16062  01441A  8195               	bsf	149,0,b	;volatile
 16063                           
 16064                           ; BSR set to: 57
 16065                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 16066  01441C  9BA7               	bcf	167,5,b	;volatile
 16067                           
 16068                           ; BSR set to: 57
 16069                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 16070  01441E  94D2               	bcf	16338,2,c	;volatile
 16071                           
 16072                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 16073  014420  0EEE               	movlw	low _INT2_DefaultInterruptHandler
 16074  014422  6EE6               	movwf	postinc1,c
 16075  014424  0E4E               	movlw	high _INT2_DefaultInterruptHandler
 16076  014426  6EE6               	movwf	postinc1,c
 16077  014428  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 16078  01442A  6EE6               	movwf	postinc1,c
 16079  01442C  EC64  F0A5         	call	_INT2_SetInterruptHandler	;wreg free
 16080                           
 16081                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 16082  014430  0139               	movlb	57	; () banked
 16083  014432  8B97               	bsf	151,5,b	;volatile
 16084                           
 16085                           ; BSR set to: 57
 16086                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16087  014434  0012               	return		;funcret
 16088  014436                     __end_of_EXT_INT_Initialize:
 16089                           	opt callstack 0
 16090                           
 16091 ;; *************** function _INT2_SetInterruptHandler *****************
 16092 ;; Defined at:
 16093 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 16094 ;; Parameters:    Size  Location     Type
 16095 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16096 ;;		 -> INT2_DefaultInterruptHandler(1), 
 16097 ;; Auto vars:     Size  Location     Type
 16098 ;;		None
 16099 ;; Return value:  Size  Location     Type
 16100 ;;                  1  [STACK] void 
 16101 ;; Registers used:
 16102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16103 ;; Tracked objects:
 16104 ;;		On entry : 3F/39
 16105 ;;		On exit  : 0/0
 16106 ;;		Unchanged: 0/0
 16107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16112 ;;Total ram usage:        0 bytes
 16113 ;; Hardware stack levels used:    1
 16114 ;; Hardware stack levels required when called:    3
 16115 ;; This function calls:
 16116 ;;		Nothing
 16117 ;; This function is called by:
 16118 ;;		_EXT_INT_Initialize
 16119 ;; This function uses a reentrant model
 16120 ;;
 16121                           
 16122                           	psect	text75
 16123  014AC8                     __ptext75:
 16124                           	opt callstack 0
 16125  014AC8                     _INT2_SetInterruptHandler:
 16126                           	opt callstack 25
 16127                           
 16128                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 16129                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16130                           
 16131                           ; BSR set to: 57
 16132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16133                           ;incstack = 0
 16134  014AC8  50E1               	movf	fsr1l,w,c
 16135  014ACA  0FFD               	addlw	-3
 16136  014ACC  6ED9               	movwf	fsr2l,c
 16137  014ACE  50E2               	movf	fsr1h,w,c
 16138  014AD0  6EDA               	movwf	fsr2h,c
 16139  014AD2  0EFF               	movlw	255
 16140  014AD4  22DA               	addwfc	fsr2h,f,c
 16141  014AD6  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 16142  014ADC  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 16143  014AE2  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 16144                           
 16145                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16146  014AE8  52E5               	movf	postdec1,f,c
 16147  014AEA  52E5               	movf	postdec1,f,c
 16148  014AEC  52E5               	movf	postdec1,f,c
 16149  014AEE  0012               	return		;funcret
 16150  014AF0                     __end_of_INT2_SetInterruptHandler:
 16151                           	opt callstack 0
 16152                           
 16153 ;; *************** function _INT1_SetInterruptHandler *****************
 16154 ;; Defined at:
 16155 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 16156 ;; Parameters:    Size  Location     Type
 16157 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16158 ;;		 -> INT1_DefaultInterruptHandler(1), 
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;		None
 16161 ;; Return value:  Size  Location     Type
 16162 ;;                  1  [STACK] void 
 16163 ;; Registers used:
 16164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16165 ;; Tracked objects:
 16166 ;;		On entry : 3F/39
 16167 ;;		On exit  : 0/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16174 ;;Total ram usage:        0 bytes
 16175 ;; Hardware stack levels used:    1
 16176 ;; Hardware stack levels required when called:    3
 16177 ;; This function calls:
 16178 ;;		Nothing
 16179 ;; This function is called by:
 16180 ;;		_EXT_INT_Initialize
 16181 ;; This function uses a reentrant model
 16182 ;;
 16183                           
 16184                           	psect	text76
 16185  014AF0                     __ptext76:
 16186                           	opt callstack 0
 16187  014AF0                     _INT1_SetInterruptHandler:
 16188                           	opt callstack 25
 16189                           
 16190                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 16191                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16192                           
 16193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16194                           ;incstack = 0
 16195  014AF0  50E1               	movf	fsr1l,w,c
 16196  014AF2  0FFD               	addlw	-3
 16197  014AF4  6ED9               	movwf	fsr2l,c
 16198  014AF6  50E2               	movf	fsr1h,w,c
 16199  014AF8  6EDA               	movwf	fsr2h,c
 16200  014AFA  0EFF               	movlw	255
 16201  014AFC  22DA               	addwfc	fsr2h,f,c
 16202  014AFE  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 16203  014B04  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 16204  014B0A  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 16205                           
 16206                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16207  014B10  52E5               	movf	postdec1,f,c
 16208  014B12  52E5               	movf	postdec1,f,c
 16209  014B14  52E5               	movf	postdec1,f,c
 16210  014B16  0012               	return		;funcret
 16211  014B18                     __end_of_INT1_SetInterruptHandler:
 16212                           	opt callstack 0
 16213                           
 16214 ;; *************** function _INT0_SetInterruptHandler *****************
 16215 ;; Defined at:
 16216 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16219 ;;		 -> INT0_DefaultInterruptHandler(1), 
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;		None
 16222 ;; Return value:  Size  Location     Type
 16223 ;;                  1  [STACK] void 
 16224 ;; Registers used:
 16225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16226 ;; Tracked objects:
 16227 ;;		On entry : 3F/39
 16228 ;;		On exit  : 0/0
 16229 ;;		Unchanged: 0/0
 16230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16235 ;;Total ram usage:        0 bytes
 16236 ;; Hardware stack levels used:    1
 16237 ;; Hardware stack levels required when called:    3
 16238 ;; This function calls:
 16239 ;;		Nothing
 16240 ;; This function is called by:
 16241 ;;		_EXT_INT_Initialize
 16242 ;; This function uses a reentrant model
 16243 ;;
 16244                           
 16245                           	psect	text77
 16246  014B18                     __ptext77:
 16247                           	opt callstack 0
 16248  014B18                     _INT0_SetInterruptHandler:
 16249                           	opt callstack 25
 16250                           
 16251                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 16252                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16253                           
 16254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16255                           ;incstack = 0
 16256  014B18  50E1               	movf	fsr1l,w,c
 16257  014B1A  0FFD               	addlw	-3
 16258  014B1C  6ED9               	movwf	fsr2l,c
 16259  014B1E  50E2               	movf	fsr1h,w,c
 16260  014B20  6EDA               	movwf	fsr2h,c
 16261  014B22  0EFF               	movlw	255
 16262  014B24  22DA               	addwfc	fsr2h,f,c
 16263  014B26  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 16264  014B2C  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 16265  014B32  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 16266                           
 16267                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16268  014B38  52E5               	movf	postdec1,f,c
 16269  014B3A  52E5               	movf	postdec1,f,c
 16270  014B3C  52E5               	movf	postdec1,f,c
 16271  014B3E  0012               	return		;funcret
 16272  014B40                     __end_of_INT0_SetInterruptHandler:
 16273                           	opt callstack 0
 16274                           
 16275 ;; *************** function _DSM_Initialize *****************
 16276 ;; Defined at:
 16277 ;;		line 58 in file "mcc_generated_files/dsm.c"
 16278 ;; Parameters:    Size  Location     Type
 16279 ;;		None
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;		None
 16282 ;; Return value:  Size  Location     Type
 16283 ;;                  1  [STACK] void 
 16284 ;; Registers used:
 16285 ;;		wreg, status,2
 16286 ;; Tracked objects:
 16287 ;;		On entry : 0/3C
 16288 ;;		On exit  : 3F/3C
 16289 ;;		Unchanged: 0/0
 16290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16295 ;;Total ram usage:        0 bytes
 16296 ;; Hardware stack levels used:    1
 16297 ;; Hardware stack levels required when called:    3
 16298 ;; This function calls:
 16299 ;;		Nothing
 16300 ;; This function is called by:
 16301 ;;		_SYSTEM_Initialize
 16302 ;; This function uses a reentrant model
 16303 ;;
 16304                           
 16305                           	psect	text78
 16306  014D90                     __ptext78:
 16307                           	opt callstack 0
 16308  014D90                     _DSM_Initialize:
 16309                           	opt callstack 26
 16310                           
 16311                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 16312                           
 16313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16314                           ;incstack = 0
 16315  014D90  013C               	movlb	60	; () banked
 16316  014D92  99FA               	bcf	250,4,b	;volatile
 16317                           
 16318                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 16319  014D94  81FB               	bsf	251,0,b	;volatile
 16320                           
 16321                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 16322  014D96  93FB               	bcf	251,1,b	;volatile
 16323                           
 16324                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 16325  014D98  89FB               	bsf	251,4,b	;volatile
 16326                           
 16327                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 16328  014D9A  9BFB               	bcf	251,5,b	;volatile
 16329                           
 16330                           ; BSR set to: 60
 16331                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 16332  014D9C  0E13               	movlw	19
 16333  014D9E  6FFC               	movwf	252,b	;volatile
 16334                           
 16335                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 16336  014DA0  0E0E               	movlw	14
 16337  014DA2  6FFE               	movwf	254,b	;volatile
 16338                           
 16339                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 16340  014DA4  0E04               	movlw	4
 16341  014DA6  6FFD               	movwf	253,b	;volatile
 16342                           
 16343                           ; BSR set to: 60
 16344                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 16345  014DA8  8FFA               	bsf	250,7,b	;volatile
 16346                           
 16347                           ; BSR set to: 60
 16348                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 16349  014DAA  0012               	return		;funcret
 16350  014DAC                     __end_of_DSM_Initialize:
 16351                           	opt callstack 0
 16352                           
 16353 ;; *************** function _DMA1_Initialize *****************
 16354 ;; Defined at:
 16355 ;;		line 86 in file "mcc_generated_files/dma1.c"
 16356 ;; Parameters:    Size  Location     Type
 16357 ;;		None
 16358 ;; Auto vars:     Size  Location     Type
 16359 ;;		None
 16360 ;; Return value:  Size  Location     Type
 16361 ;;                  1  [STACK] void 
 16362 ;; Registers used:
 16363 ;;		wreg, status,2
 16364 ;; Tracked objects:
 16365 ;;		On entry : 3F/3D
 16366 ;;		On exit  : 3F/3B
 16367 ;;		Unchanged: 0/0
 16368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16373 ;;Total ram usage:        0 bytes
 16374 ;; Hardware stack levels used:    1
 16375 ;; Hardware stack levels required when called:    3
 16376 ;; This function calls:
 16377 ;;		Nothing
 16378 ;; This function is called by:
 16379 ;;		_SYSTEM_Initialize
 16380 ;; This function uses a reentrant model
 16381 ;;
 16382                           
 16383                           	psect	text79
 16384  0140A2                     __ptext79:
 16385                           	opt callstack 0
 16386  0140A2                     _DMA1_Initialize:
 16387                           	opt callstack 26
 16388                           
 16389                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 16390                           
 16391                           ; BSR set to: 60
 16392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16393                           ;incstack = 0
 16394  0140A2  0E00               	movlw	0
 16395  0140A4  013B               	movlb	59	; () banked
 16396  0140A6  6FF9               	movwf	249,b	;volatile
 16397  0140A8  0E10               	movlw	16
 16398  0140AA  6FFA               	movwf	250,b	;volatile
 16399  0140AC  0E00               	movlw	0
 16400  0140AE  6FFB               	movwf	251,b	;volatile
 16401                           
 16402                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 16403  0140B0  0E3D               	movlw	61
 16404  0140B2  6FF1               	movwf	241,b	;volatile
 16405  0140B4  0E11               	movlw	17
 16406  0140B6  6FF0               	movwf	240,b	;volatile
 16407                           
 16408                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 16409  0140B8  0E03               	movlw	3
 16410  0140BA  6FFD               	movwf	253,b	;volatile
 16411                           
 16412                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 16413  0140BC  0E00               	movlw	0
 16414  0140BE  6FF8               	movwf	248,b	;volatile
 16415  0140C0  0E01               	movlw	1
 16416  0140C2  6FF7               	movwf	247,b	;volatile
 16417                           
 16418                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 16419  0140C4  0E00               	movlw	0
 16420  0140C6  6FEF               	movwf	239,b	;volatile
 16421  0140C8  0E01               	movlw	1
 16422  0140CA  6FEE               	movwf	238,b	;volatile
 16423                           
 16424                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 16425  0140CC  0E15               	movlw	21
 16426  0140CE  6FFF               	movwf	255,b	;volatile
 16427                           
 16428                           ; BSR set to: 59
 16429                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 16430  0140D0  6BFE               	clrf	254,b	;volatile
 16431                           
 16432                           ; BSR set to: 59
 16433                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 16434  0140D2  0139               	movlb	57	; () banked
 16435  0140D4  93A2               	bcf	162,1,b	;volatile
 16436                           
 16437                           ; BSR set to: 57
 16438                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 16439  0140D6  91A2               	bcf	162,0,b	;volatile
 16440                           
 16441                           ; BSR set to: 57
 16442                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 16443  0140D8  97A2               	bcf	162,3,b	;volatile
 16444                           
 16445                           ; BSR set to: 57
 16446                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 16447  0140DA  95A2               	bcf	162,2,b	;volatile
 16448                           
 16449                           ; BSR set to: 57
 16450                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 16451  0140DC  8392               	bsf	146,1,b	;volatile
 16452                           
 16453                           ; BSR set to: 57
 16454                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 16455  0140DE  8192               	bsf	146,0,b	;volatile
 16456                           
 16457                           ; BSR set to: 57
 16458                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 16459  0140E0  8792               	bsf	146,3,b	;volatile
 16460                           
 16461                           ; BSR set to: 57
 16462                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 16463  0140E2  8592               	bsf	146,2,b	;volatile
 16464                           
 16465                           ; BSR set to: 57
 16466                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 16467  0140E4  6BF1               	clrf	241,b	;volatile
 16468                           
 16469                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 16470  0140E6  0E01               	movlw	1
 16471  0140E8  6FF2               	movwf	242,b	;volatile
 16472                           
 16473                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 16474  0140EA  0E04               	movlw	4
 16475  0140EC  6FF3               	movwf	243,b	;volatile
 16476                           
 16477                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 16478  0140EE  0E02               	movlw	2
 16479  0140F0  6FF4               	movwf	244,b	;volatile
 16480                           
 16481                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 16482  0140F2  0E03               	movlw	3
 16483  0140F4  6FF7               	movwf	247,b	;volatile
 16484  0140F6  9ED2               	bcf	16338,7,c	;# 
 16485  0140F8  0139               	banksel	14831	;# 
 16486  0140FA  0E55               	movlw	85	;# 
 16487  0140FC  6FEF               	movwf	14831,b	;# 
 16488  0140FE  0EAA               	movlw	170	;# 
 16489  014100  6FEF               	movwf	14831,b	;# 
 16490  014102  81EF               	bsf	14831,0,b	;# 
 16491  014104  8ED2               	bsf	16338,7,c	;# 
 16492                           
 16493                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 16494  014106  013B               	movlb	59	; () banked
 16495  014108  6BFC               	clrf	252,b	;volatile
 16496                           
 16497                           ; BSR set to: 59
 16498                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16499  01410A  0012               	return		;funcret
 16500  01410C                     __end_of_DMA1_Initialize:
 16501                           	opt callstack 0
 16502                           
 16503 ;; *************** function _CLKREF_Initialize *****************
 16504 ;; Defined at:
 16505 ;;		line 58 in file "mcc_generated_files/clkref.c"
 16506 ;; Parameters:    Size  Location     Type
 16507 ;;		None
 16508 ;; Auto vars:     Size  Location     Type
 16509 ;;		None
 16510 ;; Return value:  Size  Location     Type
 16511 ;;                  1  [STACK] void 
 16512 ;; Registers used:
 16513 ;;		wreg, status,2
 16514 ;; Tracked objects:
 16515 ;;		On entry : 3F/3B
 16516 ;;		On exit  : 3F/3C
 16517 ;;		Unchanged: 0/0
 16518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16523 ;;Total ram usage:        0 bytes
 16524 ;; Hardware stack levels used:    1
 16525 ;; Hardware stack levels required when called:    3
 16526 ;; This function calls:
 16527 ;;		Nothing
 16528 ;; This function is called by:
 16529 ;;		_SYSTEM_Initialize
 16530 ;; This function uses a reentrant model
 16531 ;;
 16532                           
 16533                           	psect	text80
 16534  014E8A                     __ptext80:
 16535                           	opt callstack 0
 16536  014E8A                     _CLKREF_Initialize:
 16537                           	opt callstack 26
 16538                           
 16539                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 16540                           
 16541                           ; BSR set to: 59
 16542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16543                           ;incstack = 0
 16544  014E8A  013C               	movlb	60	; () banked
 16545  014E8C  6BE6               	clrf	230,b	;volatile
 16546                           
 16547                           ; BSR set to: 60
 16548                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 16549  014E8E  0E94               	movlw	148
 16550  014E90  6FE5               	movwf	229,b	;volatile
 16551                           
 16552                           ; BSR set to: 60
 16553                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16554  014E92  0012               	return		;funcret
 16555  014E94                     __end_of_CLKREF_Initialize:
 16556                           	opt callstack 0
 16557                           
 16558 ;; *************** function _CLC1_Initialize *****************
 16559 ;; Defined at:
 16560 ;;		line 58 in file "mcc_generated_files/clc1.c"
 16561 ;; Parameters:    Size  Location     Type
 16562 ;;		None
 16563 ;; Auto vars:     Size  Location     Type
 16564 ;;		None
 16565 ;; Return value:  Size  Location     Type
 16566 ;;                  1  [STACK] void 
 16567 ;; Registers used:
 16568 ;;		wreg, status,2
 16569 ;; Tracked objects:
 16570 ;;		On entry : 0/39
 16571 ;;		On exit  : 3F/3C
 16572 ;;		Unchanged: 0/0
 16573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16578 ;;Total ram usage:        0 bytes
 16579 ;; Hardware stack levels used:    1
 16580 ;; Hardware stack levels required when called:    3
 16581 ;; This function calls:
 16582 ;;		Nothing
 16583 ;; This function is called by:
 16584 ;;		_SYSTEM_Initialize
 16585 ;; This function uses a reentrant model
 16586 ;;
 16587                           
 16588                           	psect	text81
 16589  014C72                     __ptext81:
 16590                           	opt callstack 0
 16591  014C72                     _CLC1_Initialize:
 16592                           	opt callstack 26
 16593                           
 16594                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 16595                           
 16596                           ; BSR set to: 60
 16597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16598                           ;incstack = 0
 16599  014C72  013C               	movlb	60	; () banked
 16600  014C74  6B75               	clrf	117,b	;volatile
 16601                           
 16602                           ; BSR set to: 60
 16603                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 16604  014C76  0E04               	movlw	4
 16605  014C78  6F76               	movwf	118,b	;volatile
 16606                           
 16607                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 16608  014C7A  0E04               	movlw	4
 16609  014C7C  6F77               	movwf	119,b	;volatile
 16610                           
 16611                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 16612  014C7E  0E04               	movlw	4
 16613  014C80  6F78               	movwf	120,b	;volatile
 16614                           
 16615                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 16616  014C82  0E04               	movlw	4
 16617  014C84  6F79               	movwf	121,b	;volatile
 16618                           
 16619                           ; BSR set to: 60
 16620                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 16621  014C86  6B7A               	clrf	122,b	;volatile
 16622                           
 16623                           ; BSR set to: 60
 16624                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 16625  014C88  6B7B               	clrf	123,b	;volatile
 16626                           
 16627                           ; BSR set to: 60
 16628                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 16629  014C8A  6B7C               	clrf	124,b	;volatile
 16630                           
 16631                           ; BSR set to: 60
 16632                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 16633  014C8C  6B7D               	clrf	125,b	;volatile
 16634                           
 16635                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 16636  014C8E  0E81               	movlw	129
 16637  014C90  6F74               	movwf	116,b	;volatile
 16638                           
 16639                           ; BSR set to: 60
 16640                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16641  014C92  0012               	return		;funcret
 16642  014C94                     __end_of_CLC1_Initialize:
 16643                           	opt callstack 0
 16644                           
 16645 ;; *************** function _ADCC_Initialize *****************
 16646 ;; Defined at:
 16647 ;;		line 64 in file "mcc_generated_files/adcc.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;		None
 16650 ;; Auto vars:     Size  Location     Type
 16651 ;;		None
 16652 ;; Return value:  Size  Location     Type
 16653 ;;                  1  [STACK] void 
 16654 ;; Registers used:
 16655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 16656 ;; Tracked objects:
 16657 ;;		On entry : 3F/39
 16658 ;;		On exit  : 0/0
 16659 ;;		Unchanged: 0/0
 16660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16665 ;;Total ram usage:        0 bytes
 16666 ;; Hardware stack levels used:    1
 16667 ;; Hardware stack levels required when called:    4
 16668 ;; This function calls:
 16669 ;;		_ADCC_SetADIInterruptHandler
 16670 ;; This function is called by:
 16671 ;;		_SYSTEM_Initialize
 16672 ;; This function uses a reentrant model
 16673 ;;
 16674                           
 16675                           	psect	text82
 16676  014480                     __ptext82:
 16677                           	opt callstack 0
 16678  014480                     _ADCC_Initialize:
 16679                           	opt callstack 25
 16680                           
 16681                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 16682                           
 16683                           ; BSR set to: 60
 16684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16685                           ;incstack = 0
 16686  014480  013E               	movlb	62	; () banked
 16687  014482  6BDE               	clrf	222,b	;volatile
 16688                           
 16689                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 16690  014484  6BDF               	clrf	223,b	;volatile
 16691                           
 16692                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 16693  014486  6BE0               	clrf	224,b	;volatile
 16694                           
 16695                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 16696  014488  6BE1               	clrf	225,b	;volatile
 16697                           
 16698                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 16699  01448A  6BE4               	clrf	228,b	;volatile
 16700                           
 16701                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 16702  01448C  6BE5               	clrf	229,b	;volatile
 16703                           
 16704                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 16705  01448E  6BEA               	clrf	234,b	;volatile
 16706                           
 16707                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 16708  014490  6BEC               	clrf	236,b	;volatile
 16709                           
 16710                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 16711  014492  6BF1               	clrf	241,b	;volatile
 16712                           
 16713                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 16714  014494  6BF3               	clrf	243,b	;volatile
 16715                           
 16716                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 16717  014496  6BF4               	clrf	244,b	;volatile
 16718                           
 16719                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 16720  014498  6BF5               	clrf	245,b	;volatile
 16721                           
 16722                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 16723  01449A  6BF6               	clrf	246,b	;volatile
 16724                           
 16725                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 16726  01449C  6BF7               	clrf	247,b	;volatile
 16727                           
 16728                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 16729  01449E  6BF9               	clrf	249,b	;volatile
 16730                           
 16731                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 16732  0144A0  6BFA               	clrf	250,b	;volatile
 16733                           
 16734                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 16735  0144A2  6BFB               	clrf	251,b	;volatile
 16736                           
 16737                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 16738  0144A4  6BFC               	clrf	252,b	;volatile
 16739                           
 16740                           ; BSR set to: 62
 16741                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 16742  0144A6  0E02               	movlw	2
 16743  0144A8  6FFD               	movwf	253,b	;volatile
 16744                           
 16745                           ; BSR set to: 62
 16746                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 16747  0144AA  6BFE               	clrf	254,b	;volatile
 16748                           
 16749                           ; BSR set to: 62
 16750                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 16751  0144AC  6BFF               	clrf	255,b	;volatile
 16752                           
 16753                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 16754  0144AE  0E94               	movlw	148
 16755  0144B0  6FF8               	movwf	248,b	;volatile
 16756                           
 16757                           ; BSR set to: 62
 16758                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 16759  0144B2  0139               	movlb	57	; () banked
 16760  0144B4  95A1               	bcf	161,2,b	;volatile
 16761                           
 16762                           ; BSR set to: 57
 16763                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 16764  0144B6  8591               	bsf	145,2,b	;volatile
 16765                           
 16766                           ; BSR set to: 57
 16767                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 16768  0144B8  0EF0               	movlw	low _ADCC_DefaultInterruptHandler
 16769  0144BA  6EE6               	movwf	postinc1,c
 16770  0144BC  0E4E               	movlw	high _ADCC_DefaultInterruptHandler
 16771  0144BE  6EE6               	movwf	postinc1,c
 16772  0144C0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 16773  0144C2  6EE6               	movwf	postinc1,c
 16774  0144C4  ECA0  F0A5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 16775                           
 16776                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16777  0144C8  0012               	return		;funcret
 16778  0144CA                     __end_of_ADCC_Initialize:
 16779                           	opt callstack 0
 16780                           
 16781 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 16782 ;; Defined at:
 16783 ;;		line 316 in file "mcc_generated_files/adcc.c"
 16784 ;; Parameters:    Size  Location     Type
 16785 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16786 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 16787 ;; Auto vars:     Size  Location     Type
 16788 ;;		None
 16789 ;; Return value:  Size  Location     Type
 16790 ;;                  1  [STACK] void 
 16791 ;; Registers used:
 16792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16793 ;; Tracked objects:
 16794 ;;		On entry : 3F/39
 16795 ;;		On exit  : 0/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16802 ;;Total ram usage:        0 bytes
 16803 ;; Hardware stack levels used:    1
 16804 ;; Hardware stack levels required when called:    3
 16805 ;; This function calls:
 16806 ;;		Nothing
 16807 ;; This function is called by:
 16808 ;;		_ADCC_Initialize
 16809 ;; This function uses a reentrant model
 16810 ;;
 16811                           
 16812                           	psect	text83
 16813  014B40                     __ptext83:
 16814                           	opt callstack 0
 16815  014B40                     _ADCC_SetADIInterruptHandler:
 16816                           	opt callstack 25
 16817                           
 16818                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 16819                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16820                           
 16821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16822                           ;incstack = 0
 16823  014B40  50E1               	movf	fsr1l,w,c
 16824  014B42  0FFD               	addlw	-3
 16825  014B44  6ED9               	movwf	fsr2l,c
 16826  014B46  50E2               	movf	fsr1h,w,c
 16827  014B48  6EDA               	movwf	fsr2h,c
 16828  014B4A  0EFF               	movlw	255
 16829  014B4C  22DA               	addwfc	fsr2h,f,c
 16830  014B4E  006F FF78  F0E2    	movff	postinc2,_ADCC_ADI_InterruptHandler
 16831  014B54  006F FF78  F0E3    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 16832  014B5A  006F FF74  F0E4    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 16833                           
 16834                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 16835  014B60  52E5               	movf	postdec1,f,c
 16836  014B62  52E5               	movf	postdec1,f,c
 16837  014B64  52E5               	movf	postdec1,f,c
 16838  014B66  0012               	return		;funcret
 16839  014B68                     __end_of_ADCC_SetADIInterruptHandler:
 16840                           	opt callstack 0
 16841                           
 16842 ;; *************** function _INT0_ISR *****************
 16843 ;; Defined at:
 16844 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 16845 ;; Parameters:    Size  Location     Type
 16846 ;;		None
 16847 ;; Auto vars:     Size  Location     Type
 16848 ;;		None
 16849 ;; Return value:  Size  Location     Type
 16850 ;;                  1    wreg      void 
 16851 ;; Registers used:
 16852 ;;		wreg, status,2, status,0, pclath, tosl
 16853 ;; Tracked objects:
 16854 ;;		On entry : 0/0
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16862 ;;Total ram usage:        0 bytes
 16863 ;; Hardware stack levels used:    1
 16864 ;; Hardware stack levels required when called:    2
 16865 ;; This function calls:
 16866 ;;		_INT0_CallBack
 16867 ;; This function is called by:
 16868 ;;		Interrupt level 2
 16869 ;; This function uses a non-reentrant model
 16870 ;;
 16871                           
 16872                           	psect	text84
 16873  014E5C                     __ptext84:
 16874                           	opt callstack 0
 16875  014E5C                     _INT0_ISR:
 16876                           	opt callstack 17
 16877                           
 16878                           ;incstack = 0
 16879  014E5C  EE13  F2C4         	lfsr	1,___inthi_sp
 16880                           
 16881                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 16882  014E60  0139               	movlb	57	; () banked
 16883  014E62  91A1               	bcf	161,0,b	;volatile
 16884                           
 16885                           ; BSR set to: 57
 16886                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 16887  014E64  EC4A  F0A6         	call	_INT0_CallBack	;wreg free
 16888  014E68  0011               	retfie		f
 16889  014E6A                     __end_of_INT0_ISR:
 16890                           	opt callstack 0
 16891                           
 16892 ;; *************** function _INT0_CallBack *****************
 16893 ;; Defined at:
 16894 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 16895 ;; Parameters:    Size  Location     Type
 16896 ;;		None
 16897 ;; Auto vars:     Size  Location     Type
 16898 ;;		None
 16899 ;; Return value:  Size  Location     Type
 16900 ;;                  1  [STACK] void 
 16901 ;; Registers used:
 16902 ;;		wreg, status,2, status,0, pclath, tosl
 16903 ;; Tracked objects:
 16904 ;;		On entry : 3F/39
 16905 ;;		On exit  : 0/0
 16906 ;;		Unchanged: 0/0
 16907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16912 ;;Total ram usage:        0 bytes
 16913 ;; Hardware stack levels used:    1
 16914 ;; Hardware stack levels required when called:    1
 16915 ;; This function calls:
 16916 ;;		Absolute function
 16917 ;;		_INT0_DefaultInterruptHandler
 16918 ;; This function is called by:
 16919 ;;		_INT0_ISR
 16920 ;; This function uses a reentrant model
 16921 ;;
 16922                           
 16923                           	psect	text85
 16924  014C94                     __ptext85:
 16925                           	opt callstack 0
 16926  014C94                     _INT0_CallBack:
 16927                           	opt callstack 17
 16928                           
 16929                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 16930                           
 16931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16932                           ;incstack = 0
 16933  014C94  501A               	movf	_INT0_InterruptHandler,w,c
 16934  014C96  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 16935  014C98  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 16936  014C9A  B4D8               	btfsc	status,2,c
 16937  014C9C  0012               	return	
 16938                           
 16939                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 16940  014C9E  D801               	call	u129_48
 16941  014CA0  0012               	return	
 16942  014CA2                     u129_48:
 16943  014CA2  0005               	push	
 16944  014CA4  6EFA               	movwf	pclath,c
 16945  014CA6  501A               	movf	_INT0_InterruptHandler,w,c
 16946  014CA8  6EFD               	movwf	tosl,c
 16947  014CAA  501B               	movf	_INT0_InterruptHandler+1,w,c
 16948  014CAC  6EFE               	movwf	tosh,c
 16949  014CAE  501C               	movf	_INT0_InterruptHandler+2,w,c
 16950  014CB0  6EFF               	movwf	tosu,c
 16951  014CB2  50FA               	movf	pclath,w,c
 16952  014CB4  0012               	return		;indir
 16953  014CB6                     __end_of_INT0_CallBack:
 16954                           	opt callstack 0
 16955                           
 16956 ;; *************** function _INT0_DefaultInterruptHandler *****************
 16957 ;; Defined at:
 16958 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;		None
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;		None
 16963 ;; Return value:  Size  Location     Type
 16964 ;;                  1  [STACK] void 
 16965 ;; Registers used:
 16966 ;;		None
 16967 ;; Tracked objects:
 16968 ;;		On entry : 0/39
 16969 ;;		On exit  : 0/0
 16970 ;;		Unchanged: 0/0
 16971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16976 ;;Total ram usage:        0 bytes
 16977 ;; Hardware stack levels used:    1
 16978 ;; This function calls:
 16979 ;;		Nothing
 16980 ;; This function is called by:
 16981 ;;		_EXT_INT_Initialize
 16982 ;;		_INT0_CallBack
 16983 ;; This function uses a reentrant model
 16984 ;;
 16985                           
 16986                           	psect	text86
 16987  014EEA                     __ptext86:
 16988                           	opt callstack 0
 16989  014EEA                     _INT0_DefaultInterruptHandler:
 16990                           	opt callstack 17
 16991                           
 16992                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16993                           
 16994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16995                           ;incstack = 0
 16996  014EEA  0012               	return		;funcret
 16997  014EEC                     __end_of_INT0_DefaultInterruptHandler:
 16998                           	opt callstack 0
 16999                           
 17000 ;; *************** function _INT1_ISR *****************
 17001 ;; Defined at:
 17002 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 17003 ;; Parameters:    Size  Location     Type
 17004 ;;		None
 17005 ;; Auto vars:     Size  Location     Type
 17006 ;;		None
 17007 ;; Return value:  Size  Location     Type
 17008 ;;                  1    wreg      void 
 17009 ;; Registers used:
 17010 ;;		wreg, status,2, status,0, pclath, tosl
 17011 ;; Tracked objects:
 17012 ;;		On entry : 0/0
 17013 ;;		On exit  : 0/0
 17014 ;;		Unchanged: 0/0
 17015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17020 ;;Total ram usage:        0 bytes
 17021 ;; Hardware stack levels used:    1
 17022 ;; Hardware stack levels required when called:    2
 17023 ;; This function calls:
 17024 ;;		_INT1_CallBack
 17025 ;; This function is called by:
 17026 ;;		Interrupt level 2
 17027 ;; This function uses a non-reentrant model
 17028 ;;
 17029                           
 17030                           	psect	text87
 17031  014E6C                     __ptext87:
 17032                           	opt callstack 0
 17033  014E6C                     _INT1_ISR:
 17034                           	opt callstack 17
 17035                           
 17036                           ;incstack = 0
 17037  014E6C  EE13  F2C4         	lfsr	1,___inthi_sp
 17038                           
 17039                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 17040  014E70  0139               	movlb	57	; () banked
 17041  014E72  91A5               	bcf	165,0,b	;volatile
 17042                           
 17043                           ; BSR set to: 57
 17044                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 17045  014E74  EC5B  F0A6         	call	_INT1_CallBack	;wreg free
 17046  014E78  0011               	retfie		f
 17047  014E7A                     __end_of_INT1_ISR:
 17048                           	opt callstack 0
 17049                           
 17050 ;; *************** function _INT1_CallBack *****************
 17051 ;; Defined at:
 17052 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 17053 ;; Parameters:    Size  Location     Type
 17054 ;;		None
 17055 ;; Auto vars:     Size  Location     Type
 17056 ;;		None
 17057 ;; Return value:  Size  Location     Type
 17058 ;;                  1  [STACK] void 
 17059 ;; Registers used:
 17060 ;;		wreg, status,2, status,0, pclath, tosl
 17061 ;; Tracked objects:
 17062 ;;		On entry : 3F/39
 17063 ;;		On exit  : 0/0
 17064 ;;		Unchanged: 0/0
 17065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17070 ;;Total ram usage:        0 bytes
 17071 ;; Hardware stack levels used:    1
 17072 ;; Hardware stack levels required when called:    1
 17073 ;; This function calls:
 17074 ;;		Absolute function
 17075 ;;		_INT1_DefaultInterruptHandler
 17076 ;; This function is called by:
 17077 ;;		_INT1_ISR
 17078 ;; This function uses a reentrant model
 17079 ;;
 17080                           
 17081                           	psect	text88
 17082  014CB6                     __ptext88:
 17083                           	opt callstack 0
 17084  014CB6                     _INT1_CallBack:
 17085                           	opt callstack 17
 17086                           
 17087                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 17088                           
 17089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17090                           ;incstack = 0
 17091  014CB6  5017               	movf	_INT1_InterruptHandler,w,c
 17092  014CB8  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 17093  014CBA  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 17094  014CBC  B4D8               	btfsc	status,2,c
 17095  014CBE  0012               	return	
 17096                           
 17097                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 17098  014CC0  D801               	call	u131_48
 17099  014CC2  0012               	return	
 17100  014CC4                     u131_48:
 17101  014CC4  0005               	push	
 17102  014CC6  6EFA               	movwf	pclath,c
 17103  014CC8  5017               	movf	_INT1_InterruptHandler,w,c
 17104  014CCA  6EFD               	movwf	tosl,c
 17105  014CCC  5018               	movf	_INT1_InterruptHandler+1,w,c
 17106  014CCE  6EFE               	movwf	tosh,c
 17107  014CD0  5019               	movf	_INT1_InterruptHandler+2,w,c
 17108  014CD2  6EFF               	movwf	tosu,c
 17109  014CD4  50FA               	movf	pclath,w,c
 17110  014CD6  0012               	return		;indir
 17111  014CD8                     __end_of_INT1_CallBack:
 17112                           	opt callstack 0
 17113                           
 17114 ;; *************** function _INT1_DefaultInterruptHandler *****************
 17115 ;; Defined at:
 17116 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 17117 ;; Parameters:    Size  Location     Type
 17118 ;;		None
 17119 ;; Auto vars:     Size  Location     Type
 17120 ;;		None
 17121 ;; Return value:  Size  Location     Type
 17122 ;;                  1  [STACK] void 
 17123 ;; Registers used:
 17124 ;;		None
 17125 ;; Tracked objects:
 17126 ;;		On entry : 0/39
 17127 ;;		On exit  : 0/0
 17128 ;;		Unchanged: 0/0
 17129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17134 ;;Total ram usage:        0 bytes
 17135 ;; Hardware stack levels used:    1
 17136 ;; This function calls:
 17137 ;;		Nothing
 17138 ;; This function is called by:
 17139 ;;		_EXT_INT_Initialize
 17140 ;;		_INT1_CallBack
 17141 ;; This function uses a reentrant model
 17142 ;;
 17143                           
 17144                           	psect	text89
 17145  014EEC                     __ptext89:
 17146                           	opt callstack 0
 17147  014EEC                     _INT1_DefaultInterruptHandler:
 17148                           	opt callstack 17
 17149                           
 17150                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17151                           
 17152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17153                           ;incstack = 0
 17154  014EEC  0012               	return		;funcret
 17155  014EEE                     __end_of_INT1_DefaultInterruptHandler:
 17156                           	opt callstack 0
 17157                           
 17158 ;; *************** function _INT2_ISR *****************
 17159 ;; Defined at:
 17160 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 17161 ;; Parameters:    Size  Location     Type
 17162 ;;		None
 17163 ;; Auto vars:     Size  Location     Type
 17164 ;;		None
 17165 ;; Return value:  Size  Location     Type
 17166 ;;                  1    wreg      void 
 17167 ;; Registers used:
 17168 ;;		wreg, status,2, status,0, pclath, tosl
 17169 ;; Tracked objects:
 17170 ;;		On entry : 0/0
 17171 ;;		On exit  : 0/0
 17172 ;;		Unchanged: 0/0
 17173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17178 ;;Total ram usage:        0 bytes
 17179 ;; Hardware stack levels used:    1
 17180 ;; Hardware stack levels required when called:    2
 17181 ;; This function calls:
 17182 ;;		_INT2_CallBack
 17183 ;; This function is called by:
 17184 ;;		Interrupt level 2
 17185 ;; This function uses a non-reentrant model
 17186 ;;
 17187                           
 17188                           	psect	text90
 17189  014E7C                     __ptext90:
 17190                           	opt callstack 0
 17191  014E7C                     _INT2_ISR:
 17192                           	opt callstack 17
 17193                           
 17194                           ;incstack = 0
 17195  014E7C  EE13  F2C4         	lfsr	1,___inthi_sp
 17196                           
 17197                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 17198  014E80  0139               	movlb	57	; () banked
 17199  014E82  9BA7               	bcf	167,5,b	;volatile
 17200                           
 17201                           ; BSR set to: 57
 17202                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 17203  014E84  EC6C  F0A6         	call	_INT2_CallBack	;wreg free
 17204  014E88  0011               	retfie		f
 17205  014E8A                     __end_of_INT2_ISR:
 17206                           	opt callstack 0
 17207                           
 17208 ;; *************** function _INT2_CallBack *****************
 17209 ;; Defined at:
 17210 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;		None
 17213 ;; Auto vars:     Size  Location     Type
 17214 ;;		None
 17215 ;; Return value:  Size  Location     Type
 17216 ;;                  1  [STACK] void 
 17217 ;; Registers used:
 17218 ;;		wreg, status,2, status,0, pclath, tosl
 17219 ;; Tracked objects:
 17220 ;;		On entry : 3F/39
 17221 ;;		On exit  : 0/0
 17222 ;;		Unchanged: 0/0
 17223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17228 ;;Total ram usage:        0 bytes
 17229 ;; Hardware stack levels used:    1
 17230 ;; Hardware stack levels required when called:    1
 17231 ;; This function calls:
 17232 ;;		Absolute function
 17233 ;;		_INT2_DefaultInterruptHandler
 17234 ;; This function is called by:
 17235 ;;		_INT2_ISR
 17236 ;; This function uses a reentrant model
 17237 ;;
 17238                           
 17239                           	psect	text91
 17240  014CD8                     __ptext91:
 17241                           	opt callstack 0
 17242  014CD8                     _INT2_CallBack:
 17243                           	opt callstack 17
 17244                           
 17245                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 17246                           
 17247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17248                           ;incstack = 0
 17249  014CD8  5014               	movf	_INT2_InterruptHandler,w,c
 17250  014CDA  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 17251  014CDC  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 17252  014CDE  B4D8               	btfsc	status,2,c
 17253  014CE0  0012               	return	
 17254                           
 17255                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 17256  014CE2  D801               	call	u133_48
 17257  014CE4  0012               	return	
 17258  014CE6                     u133_48:
 17259  014CE6  0005               	push	
 17260  014CE8  6EFA               	movwf	pclath,c
 17261  014CEA  5014               	movf	_INT2_InterruptHandler,w,c
 17262  014CEC  6EFD               	movwf	tosl,c
 17263  014CEE  5015               	movf	_INT2_InterruptHandler+1,w,c
 17264  014CF0  6EFE               	movwf	tosh,c
 17265  014CF2  5016               	movf	_INT2_InterruptHandler+2,w,c
 17266  014CF4  6EFF               	movwf	tosu,c
 17267  014CF6  50FA               	movf	pclath,w,c
 17268  014CF8  0012               	return		;indir
 17269  014CFA                     __end_of_INT2_CallBack:
 17270                           	opt callstack 0
 17271                           
 17272 ;; *************** function _INT2_DefaultInterruptHandler *****************
 17273 ;; Defined at:
 17274 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;		None
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;		None
 17279 ;; Return value:  Size  Location     Type
 17280 ;;                  1  [STACK] void 
 17281 ;; Registers used:
 17282 ;;		None
 17283 ;; Tracked objects:
 17284 ;;		On entry : 0/39
 17285 ;;		On exit  : 0/0
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17292 ;;Total ram usage:        0 bytes
 17293 ;; Hardware stack levels used:    1
 17294 ;; This function calls:
 17295 ;;		Nothing
 17296 ;; This function is called by:
 17297 ;;		_EXT_INT_Initialize
 17298 ;;		_INT2_CallBack
 17299 ;; This function uses a reentrant model
 17300 ;;
 17301                           
 17302                           	psect	text92
 17303  014EEE                     __ptext92:
 17304                           	opt callstack 0
 17305  014EEE                     _INT2_DefaultInterruptHandler:
 17306                           	opt callstack 17
 17307                           
 17308                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17309                           
 17310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17311                           ;incstack = 0
 17312  014EEE  0012               	return		;funcret
 17313  014EF0                     __end_of_INT2_DefaultInterruptHandler:
 17314                           	opt callstack 0
 17315                           
 17316 ;; *************** function _Default_ISR *****************
 17317 ;; Defined at:
 17318 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 17319 ;; Parameters:    Size  Location     Type
 17320 ;;		None
 17321 ;; Auto vars:     Size  Location     Type
 17322 ;;		None
 17323 ;; Return value:  Size  Location     Type
 17324 ;;                  1    wreg      void 
 17325 ;; Registers used:
 17326 ;;		None
 17327 ;; Tracked objects:
 17328 ;;		On entry : 0/0
 17329 ;;		On exit  : 0/0
 17330 ;;		Unchanged: 0/0
 17331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17336 ;;Total ram usage:        0 bytes
 17337 ;; Hardware stack levels used:    1
 17338 ;; This function calls:
 17339 ;;		Nothing
 17340 ;; This function is called by:
 17341 ;;		Interrupt level 2
 17342 ;; This function uses a non-reentrant model
 17343 ;;
 17344                           
 17345                           	psect	text93
 17346  014EE4                     __ptext93:
 17347                           	opt callstack 0
 17348  014EE4                     _Default_ISR:
 17349                           	opt callstack 19
 17350                           
 17351                           ;incstack = 0
 17352  014EE4  EE13  F2C4         	lfsr	1,___inthi_sp
 17353  014EE8  0011               	retfie		f
 17354  014EEA                     __end_of_Default_ISR:
 17355                           	opt callstack 0
 17356                           
 17357 ;; *************** function _ADCC_ISR *****************
 17358 ;; Defined at:
 17359 ;;		line 307 in file "mcc_generated_files/adcc.c"
 17360 ;; Parameters:    Size  Location     Type
 17361 ;;		None
 17362 ;; Auto vars:     Size  Location     Type
 17363 ;;		None
 17364 ;; Return value:  Size  Location     Type
 17365 ;;                  1    wreg      void 
 17366 ;; Registers used:
 17367 ;;		wreg, status,2, status,0, pclath, tosl
 17368 ;; Tracked objects:
 17369 ;;		On entry : 0/0
 17370 ;;		On exit  : 0/0
 17371 ;;		Unchanged: 0/0
 17372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17377 ;;Total ram usage:        0 bytes
 17378 ;; Hardware stack levels used:    1
 17379 ;; Hardware stack levels required when called:    1
 17380 ;; This function calls:
 17381 ;;		Absolute function
 17382 ;;		_ADCC_DefaultInterruptHandler
 17383 ;; This function is called by:
 17384 ;;		Interrupt level 2
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388                           	psect	text94
 17389  014838                     __ptext94:
 17390                           	opt callstack 0
 17391  014838                     _ADCC_ISR:
 17392                           	opt callstack 18
 17393                           
 17394                           ;incstack = 0
 17395  014838  EE13  F2C4         	lfsr	1,___inthi_sp
 17396                           
 17397                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 17398  01483C  0139               	movlb	57	; () banked
 17399  01483E  95A1               	bcf	161,2,b	;volatile
 17400                           
 17401                           ; BSR set to: 57
 17402                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 17403  014840  0100               	movlb	0	; () banked
 17404  014842  51E2               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 17405  014844  11E3               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 17406  014846  11E4               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 17407  014848  B4D8               	btfsc	status,2,c
 17408  01484A  0011               	retfie		f
 17409                           
 17410                           ; BSR set to: 0
 17411                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 17412  01484C  D801               	call	i2u476_48
 17413  01484E  0011               	retfie		f
 17414  014850                     i2u476_48:
 17415  014850  0005               	push	
 17416  014852  6EFA               	movwf	pclath,c
 17417  014854  51E2               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 17418  014856  6EFD               	movwf	tosl,c
 17419  014858  51E3               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 17420  01485A  6EFE               	movwf	tosh,c
 17421  01485C  51E4               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 17422  01485E  6EFF               	movwf	tosu,c
 17423  014860  50FA               	movf	pclath,w,c
 17424  014862  0012               	return		;indir
 17425  014864                     __end_of_ADCC_ISR:
 17426                           	opt callstack 0
 17427                           
 17428 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 17429 ;; Defined at:
 17430 ;;		line 320 in file "mcc_generated_files/adcc.c"
 17431 ;; Parameters:    Size  Location     Type
 17432 ;;		None
 17433 ;; Auto vars:     Size  Location     Type
 17434 ;;		None
 17435 ;; Return value:  Size  Location     Type
 17436 ;;                  1  [STACK] void 
 17437 ;; Registers used:
 17438 ;;		None
 17439 ;; Tracked objects:
 17440 ;;		On entry : 3F/0
 17441 ;;		On exit  : 0/0
 17442 ;;		Unchanged: 0/0
 17443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17448 ;;Total ram usage:        0 bytes
 17449 ;; Hardware stack levels used:    1
 17450 ;; This function calls:
 17451 ;;		Nothing
 17452 ;; This function is called by:
 17453 ;;		_ADCC_Initialize
 17454 ;;		_ADCC_ISR
 17455 ;; This function uses a reentrant model
 17456 ;;
 17457                           
 17458                           	psect	text95
 17459  014EF0                     __ptext95:
 17460                           	opt callstack 0
 17461  014EF0                     _ADCC_DefaultInterruptHandler:
 17462                           	opt callstack 18
 17463                           
 17464                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17465                           
 17466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17467                           ;incstack = 0
 17468  014EF0  0012               	return		;funcret
 17469  014EF2                     __end_of_ADCC_DefaultInterruptHandler:
 17470                           	opt callstack 0
 17471                           
 17472 ;; *************** function _UART1_tx_vect_isr *****************
 17473 ;; Defined at:
 17474 ;;		line 197 in file "mcc_generated_files/uart1.c"
 17475 ;; Parameters:    Size  Location     Type
 17476 ;;		None
 17477 ;; Auto vars:     Size  Location     Type
 17478 ;;		None
 17479 ;; Return value:  Size  Location     Type
 17480 ;;                  1    wreg      void 
 17481 ;; Registers used:
 17482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17483 ;; Tracked objects:
 17484 ;;		On entry : 0/0
 17485 ;;		On exit  : 0/0
 17486 ;;		Unchanged: 0/0
 17487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17492 ;;Total ram usage:        0 bytes
 17493 ;; Hardware stack levels used:    1
 17494 ;; Hardware stack levels required when called:    1
 17495 ;; This function calls:
 17496 ;;		Absolute function
 17497 ;;		_UART1_Transmit_ISR
 17498 ;; This function is called by:
 17499 ;;		Interrupt level 2
 17500 ;; This function uses a non-reentrant model
 17501 ;;
 17502                           
 17503                           	psect	text96
 17504  014B68                     __ptext96:
 17505                           	opt callstack 0
 17506  014B68                     _UART1_tx_vect_isr:
 17507                           	opt callstack 18
 17508                           
 17509                           ;incstack = 0
 17510  014B68  EE13  F2C4         	lfsr	1,___inthi_sp
 17511                           
 17512                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 17513  014B6C  5008               	movf	_UART1_TxInterruptHandler,w,c
 17514  014B6E  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 17515  014B70  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 17516  014B72  B4D8               	btfsc	status,2,c
 17517  014B74  0011               	retfie		f
 17518                           
 17519                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 17520  014B76  D801               	call	i2u478_48
 17521  014B78  0011               	retfie		f
 17522  014B7A                     i2u478_48:
 17523  014B7A  0005               	push	
 17524  014B7C  6EFA               	movwf	pclath,c
 17525  014B7E  5008               	movf	_UART1_TxInterruptHandler,w,c
 17526  014B80  6EFD               	movwf	tosl,c
 17527  014B82  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 17528  014B84  6EFE               	movwf	tosh,c
 17529  014B86  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 17530  014B88  6EFF               	movwf	tosu,c
 17531  014B8A  50FA               	movf	pclath,w,c
 17532  014B8C  0012               	return		;indir
 17533  014B8E                     __end_of_UART1_tx_vect_isr:
 17534                           	opt callstack 0
 17535                           
 17536 ;; *************** function _UART1_Transmit_ISR *****************
 17537 ;; Defined at:
 17538 ;;		line 211 in file "mcc_generated_files/uart1.c"
 17539 ;; Parameters:    Size  Location     Type
 17540 ;;		None
 17541 ;; Auto vars:     Size  Location     Type
 17542 ;;		None
 17543 ;; Return value:  Size  Location     Type
 17544 ;;                  1  [STACK] void 
 17545 ;; Registers used:
 17546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17547 ;; Tracked objects:
 17548 ;;		On entry : 0/0
 17549 ;;		On exit  : 3B/39
 17550 ;;		Unchanged: 0/0
 17551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17556 ;;Total ram usage:        0 bytes
 17557 ;; Hardware stack levels used:    1
 17558 ;; This function calls:
 17559 ;;		Nothing
 17560 ;; This function is called by:
 17561 ;;		_UART1_Initialize
 17562 ;;		_UART1_tx_vect_isr
 17563 ;; This function uses a reentrant model
 17564 ;;
 17565                           
 17566                           	psect	text97
 17567  014864                     __ptext97:
 17568                           	opt callstack 0
 17569  014864                     _UART1_Transmit_ISR:
 17570                           	opt callstack 18
 17571                           
 17572                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 17573                           
 17574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17575                           ;incstack = 0
 17576  014864  0E40               	movlw	64
 17577  014866  603A               	cpfslt	_uart1TxBufferRemaining,c
 17578  014868  D010               	goto	l597
 17579                           
 17580                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 17581  01486A  0EC0               	movlw	low _uart1TxBuffer
 17582  01486C  243B               	addwf	_uart1TxTail,w,c	;volatile
 17583  01486E  6ED9               	movwf	fsr2l,c
 17584  014870  6ADA               	clrf	fsr2h,c
 17585  014872  0E02               	movlw	high _uart1TxBuffer
 17586  014874  22DA               	addwfc	fsr2h,f,c
 17587  014876  50DF               	movf	indf2,w,c
 17588  014878  013D               	movlb	61	; () banked
 17589  01487A  6FEA               	movwf	234,b	;volatile
 17590                           
 17591                           ; BSR set to: 61
 17592  01487C  2A3B               	incf	_uart1TxTail,f,c	;volatile
 17593                           
 17594                           ; BSR set to: 61
 17595                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 17596  01487E  0E3F               	movlw	63
 17597  014880  643B               	cpfsgt	_uart1TxTail,c
 17598  014882  D001               	goto	l7047
 17599                           
 17600                           ; BSR set to: 61
 17601                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 17602  014884  6A3B               	clrf	_uart1TxTail,c	;volatile
 17603  014886                     l7047:
 17604                           
 17605                           ; BSR set to: 61
 17606                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 17607  014886  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 17608                           
 17609                           ;mcc_generated_files/uart1.c: 220:  } else {
 17610  014888  0012               	return	
 17611  01488A                     l597:
 17612                           
 17613                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 17614  01488A  0139               	movlb	57	; () banked
 17615  01488C  9993               	bcf	147,4,b	;volatile
 17616                           
 17617                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 17618  01488E  0012               	return		;funcret
 17619  014890                     __end_of_UART1_Transmit_ISR:
 17620                           	opt callstack 0
 17621                           
 17622 ;; *************** function _UART1_rx_vect_isr *****************
 17623 ;; Defined at:
 17624 ;;		line 204 in file "mcc_generated_files/uart1.c"
 17625 ;; Parameters:    Size  Location     Type
 17626 ;;		None
 17627 ;; Auto vars:     Size  Location     Type
 17628 ;;		None
 17629 ;; Return value:  Size  Location     Type
 17630 ;;                  1    wreg      void 
 17631 ;; Registers used:
 17632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17633 ;; Tracked objects:
 17634 ;;		On entry : 0/0
 17635 ;;		On exit  : 0/0
 17636 ;;		Unchanged: 0/0
 17637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17642 ;;Total ram usage:        0 bytes
 17643 ;; Hardware stack levels used:    1
 17644 ;; Hardware stack levels required when called:    1
 17645 ;; This function calls:
 17646 ;;		Absolute function
 17647 ;;		_UART1_Receive_ISR
 17648 ;; This function is called by:
 17649 ;;		Interrupt level 2
 17650 ;; This function uses a non-reentrant model
 17651 ;;
 17652                           
 17653                           	psect	text98
 17654  014B90                     __ptext98:
 17655                           	opt callstack 0
 17656  014B90                     _UART1_rx_vect_isr:
 17657                           	opt callstack 18
 17658                           
 17659                           ;incstack = 0
 17660  014B90  EE13  F2C4         	lfsr	1,___inthi_sp
 17661                           
 17662                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 17663  014B94  500B               	movf	_UART1_RxInterruptHandler,w,c
 17664  014B96  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 17665  014B98  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 17666  014B9A  B4D8               	btfsc	status,2,c
 17667  014B9C  0011               	retfie		f
 17668                           
 17669                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 17670  014B9E  D801               	call	i2u480_48
 17671  014BA0  0011               	retfie		f
 17672  014BA2                     i2u480_48:
 17673  014BA2  0005               	push	
 17674  014BA4  6EFA               	movwf	pclath,c
 17675  014BA6  500B               	movf	_UART1_RxInterruptHandler,w,c
 17676  014BA8  6EFD               	movwf	tosl,c
 17677  014BAA  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 17678  014BAC  6EFE               	movwf	tosh,c
 17679  014BAE  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 17680  014BB0  6EFF               	movwf	tosu,c
 17681  014BB2  50FA               	movf	pclath,w,c
 17682  014BB4  0012               	return		;indir
 17683  014BB6                     __end_of_UART1_rx_vect_isr:
 17684                           	opt callstack 0
 17685                           
 17686 ;; *************** function _UART1_Receive_ISR *****************
 17687 ;; Defined at:
 17688 ;;		line 227 in file "mcc_generated_files/uart1.c"
 17689 ;; Parameters:    Size  Location     Type
 17690 ;;		None
 17691 ;; Auto vars:     Size  Location     Type
 17692 ;;		None
 17693 ;; Return value:  Size  Location     Type
 17694 ;;                  1  [STACK] void 
 17695 ;; Registers used:
 17696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17697 ;; Tracked objects:
 17698 ;;		On entry : 0/0
 17699 ;;		On exit  : 0/0
 17700 ;;		Unchanged: 0/0
 17701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17706 ;;Total ram usage:        0 bytes
 17707 ;; Hardware stack levels used:    1
 17708 ;; This function calls:
 17709 ;;		Nothing
 17710 ;; This function is called by:
 17711 ;;		_UART1_Initialize
 17712 ;;		_UART1_rx_vect_isr
 17713 ;; This function uses a reentrant model
 17714 ;;
 17715                           
 17716                           	psect	text99
 17717  014CFA                     __ptext99:
 17718                           	opt callstack 0
 17719  014CFA                     _UART1_Receive_ISR:
 17720                           	opt callstack 18
 17721                           
 17722                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 17723                           
 17724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17725                           ;incstack = 0
 17726  014CFA  0E80               	movlw	low _uart1RxBuffer
 17727  014CFC  2439               	addwf	_uart1RxHead,w,c	;volatile
 17728  014CFE  6ED9               	movwf	fsr2l,c
 17729  014D00  6ADA               	clrf	fsr2h,c
 17730  014D02  0E02               	movlw	high _uart1RxBuffer
 17731  014D04  22DA               	addwfc	fsr2h,f,c
 17732  014D06  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 17733  014D0C  2A39               	incf	_uart1RxHead,f,c	;volatile
 17734                           
 17735                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 17736  014D0E  0E3F               	movlw	63
 17737  014D10  6439               	cpfsgt	_uart1RxHead,c
 17738  014D12  D001               	goto	l7057
 17739                           
 17740                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 17741  014D14  6A39               	clrf	_uart1RxHead,c	;volatile
 17742  014D16                     l7057:
 17743                           
 17744                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 17745  014D16  2A37               	incf	_uart1RxCount,f,c	;volatile
 17746                           
 17747                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 17748  014D18  0012               	return		;funcret
 17749  014D1A                     __end_of_UART1_Receive_ISR:
 17750                           	opt callstack 0
 17751                           
 17752 ;; *************** function _UART2_tx_vect_isr *****************
 17753 ;; Defined at:
 17754 ;;		line 195 in file "mcc_generated_files/uart2.c"
 17755 ;; Parameters:    Size  Location     Type
 17756 ;;		None
 17757 ;; Auto vars:     Size  Location     Type
 17758 ;;		None
 17759 ;; Return value:  Size  Location     Type
 17760 ;;                  1    wreg      void 
 17761 ;; Registers used:
 17762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17763 ;; Tracked objects:
 17764 ;;		On entry : 0/0
 17765 ;;		On exit  : 0/0
 17766 ;;		Unchanged: 0/0
 17767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17772 ;;Total ram usage:        0 bytes
 17773 ;; Hardware stack levels used:    1
 17774 ;; Hardware stack levels required when called:    1
 17775 ;; This function calls:
 17776 ;;		Absolute function
 17777 ;;		_UART2_Transmit_ISR
 17778 ;; This function is called by:
 17779 ;;		Interrupt level 2
 17780 ;; This function uses a non-reentrant model
 17781 ;;
 17782                           
 17783                           	psect	text100
 17784  014BB8                     __ptext100:
 17785                           	opt callstack 0
 17786  014BB8                     _UART2_tx_vect_isr:
 17787                           	opt callstack 18
 17788                           
 17789                           ;incstack = 0
 17790  014BB8  EE13  F2C4         	lfsr	1,___inthi_sp
 17791                           
 17792                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 17793  014BBC  500E               	movf	_UART2_TxInterruptHandler,w,c
 17794  014BBE  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 17795  014BC0  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 17796  014BC2  B4D8               	btfsc	status,2,c
 17797  014BC4  0011               	retfie		f
 17798                           
 17799                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 17800  014BC6  D801               	call	i2u482_48
 17801  014BC8  0011               	retfie		f
 17802  014BCA                     i2u482_48:
 17803  014BCA  0005               	push	
 17804  014BCC  6EFA               	movwf	pclath,c
 17805  014BCE  500E               	movf	_UART2_TxInterruptHandler,w,c
 17806  014BD0  6EFD               	movwf	tosl,c
 17807  014BD2  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 17808  014BD4  6EFE               	movwf	tosh,c
 17809  014BD6  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 17810  014BD8  6EFF               	movwf	tosu,c
 17811  014BDA  50FA               	movf	pclath,w,c
 17812  014BDC  0012               	return		;indir
 17813  014BDE                     __end_of_UART2_tx_vect_isr:
 17814                           	opt callstack 0
 17815                           
 17816 ;; *************** function _UART2_Transmit_ISR *****************
 17817 ;; Defined at:
 17818 ;;		line 213 in file "mcc_generated_files/uart2.c"
 17819 ;; Parameters:    Size  Location     Type
 17820 ;;		None
 17821 ;; Auto vars:     Size  Location     Type
 17822 ;;		None
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  1  [STACK] void 
 17825 ;; Registers used:
 17826 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17827 ;; Tracked objects:
 17828 ;;		On entry : 0/0
 17829 ;;		On exit  : 3B/39
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17836 ;;Total ram usage:        0 bytes
 17837 ;; Hardware stack levels used:    1
 17838 ;; This function calls:
 17839 ;;		Nothing
 17840 ;; This function is called by:
 17841 ;;		_UART2_Initialize
 17842 ;;		_UART2_tx_vect_isr
 17843 ;; This function uses a reentrant model
 17844 ;;
 17845                           
 17846                           	psect	text101
 17847  014890                     __ptext101:
 17848                           	opt callstack 0
 17849  014890                     _UART2_Transmit_ISR:
 17850                           	opt callstack 18
 17851                           
 17852                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 17853                           
 17854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17855                           ;incstack = 0
 17856  014890  0E40               	movlw	64
 17857  014892  6034               	cpfslt	_uart2TxBufferRemaining,c
 17858  014894  D010               	goto	l717
 17859                           
 17860                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 17861  014896  0E40               	movlw	low _uart2TxBuffer
 17862  014898  2435               	addwf	_uart2TxTail,w,c	;volatile
 17863  01489A  6ED9               	movwf	fsr2l,c
 17864  01489C  6ADA               	clrf	fsr2h,c
 17865  01489E  0E02               	movlw	high _uart2TxBuffer
 17866  0148A0  22DA               	addwfc	fsr2h,f,c
 17867  0148A2  50DF               	movf	indf2,w,c
 17868  0148A4  013D               	movlb	61	; () banked
 17869  0148A6  6FD2               	movwf	210,b	;volatile
 17870                           
 17871                           ; BSR set to: 61
 17872  0148A8  2A35               	incf	_uart2TxTail,f,c	;volatile
 17873                           
 17874                           ; BSR set to: 61
 17875                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 17876  0148AA  0E3F               	movlw	63
 17877  0148AC  6435               	cpfsgt	_uart2TxTail,c
 17878  0148AE  D001               	goto	l7069
 17879                           
 17880                           ; BSR set to: 61
 17881                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 17882  0148B0  6A35               	clrf	_uart2TxTail,c	;volatile
 17883  0148B2                     l7069:
 17884                           
 17885                           ; BSR set to: 61
 17886                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 17887  0148B2  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 17888                           
 17889                           ;mcc_generated_files/uart2.c: 224:     }
 17890  0148B4  0012               	return	
 17891  0148B6                     l717:
 17892                           
 17893                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 17894  0148B6  0139               	movlb	57	; () banked
 17895  0148B8  9796               	bcf	150,3,b	;volatile
 17896                           
 17897                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 17898  0148BA  0012               	return		;funcret
 17899  0148BC                     __end_of_UART2_Transmit_ISR:
 17900                           	opt callstack 0
 17901                           
 17902 ;; *************** function _UART2_rx_vect_isr *****************
 17903 ;; Defined at:
 17904 ;;		line 203 in file "mcc_generated_files/uart2.c"
 17905 ;; Parameters:    Size  Location     Type
 17906 ;;		None
 17907 ;; Auto vars:     Size  Location     Type
 17908 ;;		None
 17909 ;; Return value:  Size  Location     Type
 17910 ;;                  1    wreg      void 
 17911 ;; Registers used:
 17912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17913 ;; Tracked objects:
 17914 ;;		On entry : 0/0
 17915 ;;		On exit  : 0/0
 17916 ;;		Unchanged: 0/0
 17917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17922 ;;Total ram usage:        0 bytes
 17923 ;; Hardware stack levels used:    1
 17924 ;; Hardware stack levels required when called:    1
 17925 ;; This function calls:
 17926 ;;		Absolute function
 17927 ;;		_UART2_Receive_ISR
 17928 ;; This function is called by:
 17929 ;;		Interrupt level 2
 17930 ;; This function uses a non-reentrant model
 17931 ;;
 17932                           
 17933                           	psect	text102
 17934  014BE0                     __ptext102:
 17935                           	opt callstack 0
 17936  014BE0                     _UART2_rx_vect_isr:
 17937                           	opt callstack 18
 17938                           
 17939                           ;incstack = 0
 17940  014BE0  EE13  F2C4         	lfsr	1,___inthi_sp
 17941                           
 17942                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 17943  014BE4  5011               	movf	_UART2_RxInterruptHandler,w,c
 17944  014BE6  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 17945  014BE8  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 17946  014BEA  B4D8               	btfsc	status,2,c
 17947  014BEC  0011               	retfie		f
 17948                           
 17949                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 17950  014BEE  D801               	call	i2u484_48
 17951  014BF0  0011               	retfie		f
 17952  014BF2                     i2u484_48:
 17953  014BF2  0005               	push	
 17954  014BF4  6EFA               	movwf	pclath,c
 17955  014BF6  5011               	movf	_UART2_RxInterruptHandler,w,c
 17956  014BF8  6EFD               	movwf	tosl,c
 17957  014BFA  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 17958  014BFC  6EFE               	movwf	tosh,c
 17959  014BFE  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 17960  014C00  6EFF               	movwf	tosu,c
 17961  014C02  50FA               	movf	pclath,w,c
 17962  014C04  0012               	return		;indir
 17963  014C06                     __end_of_UART2_rx_vect_isr:
 17964                           	opt callstack 0
 17965                           
 17966 ;; *************** function _UART2_Receive_ISR *****************
 17967 ;; Defined at:
 17968 ;;		line 233 in file "mcc_generated_files/uart2.c"
 17969 ;; Parameters:    Size  Location     Type
 17970 ;;		None
 17971 ;; Auto vars:     Size  Location     Type
 17972 ;;		None
 17973 ;; Return value:  Size  Location     Type
 17974 ;;                  1  [STACK] void 
 17975 ;; Registers used:
 17976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17977 ;; Tracked objects:
 17978 ;;		On entry : 0/0
 17979 ;;		On exit  : 0/0
 17980 ;;		Unchanged: 0/0
 17981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17986 ;;Total ram usage:        0 bytes
 17987 ;; Hardware stack levels used:    1
 17988 ;; This function calls:
 17989 ;;		Nothing
 17990 ;; This function is called by:
 17991 ;;		_UART2_Initialize
 17992 ;;		_UART2_rx_vect_isr
 17993 ;; This function uses a reentrant model
 17994 ;;
 17995                           
 17996                           	psect	text103
 17997  014D1A                     __ptext103:
 17998                           	opt callstack 0
 17999  014D1A                     _UART2_Receive_ISR:
 18000                           	opt callstack 18
 18001                           
 18002                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 18003                           
 18004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18005                           ;incstack = 0
 18006  014D1A  0E00               	movlw	low _uart2RxBuffer
 18007  014D1C  2433               	addwf	_uart2RxHead,w,c	;volatile
 18008  014D1E  6ED9               	movwf	fsr2l,c
 18009  014D20  6ADA               	clrf	fsr2h,c
 18010  014D22  0E02               	movlw	high _uart2RxBuffer
 18011  014D24  22DA               	addwfc	fsr2h,f,c
 18012  014D26  006F F743 FFDF     	movff	15824,indf2	;volatile
 18013  014D2C  2A33               	incf	_uart2RxHead,f,c	;volatile
 18014                           
 18015                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 18016  014D2E  0E3F               	movlw	63
 18017  014D30  6433               	cpfsgt	_uart2RxHead,c
 18018  014D32  D001               	goto	l7079
 18019                           
 18020                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 18021  014D34  6A33               	clrf	_uart2RxHead,c	;volatile
 18022  014D36                     l7079:
 18023                           
 18024                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 18025  014D36  2A31               	incf	_uart2RxCount,f,c	;volatile
 18026                           
 18027                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 18028  014D38  0012               	return		;funcret
 18029  014D3A                     __end_of_UART2_Receive_ISR:
 18030                           	opt callstack 0
 18031                           
 18032 ;; *************** function _TMR6_ISR *****************
 18033 ;; Defined at:
 18034 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;		None
 18037 ;; Auto vars:     Size  Location     Type
 18038 ;;		None
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  1    wreg      void 
 18041 ;; Registers used:
 18042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18052 ;;Total ram usage:        1 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; Hardware stack levels required when called:    2
 18055 ;; This function calls:
 18056 ;;		_TMR6_CallBack
 18057 ;; This function is called by:
 18058 ;;		Interrupt level 2
 18059 ;; This function uses a non-reentrant model
 18060 ;;
 18061                           
 18062                           	psect	text104
 18063  014DC8                     __ptext104:
 18064                           	opt callstack 0
 18065  014DC8                     _TMR6_ISR:
 18066                           	opt callstack 17
 18067                           
 18068                           ;incstack = 0
 18069  014DC8  0060  F0F4  F05E   	movff	btemp,??_TMR6_ISR
 18070  014DCE  EE13  F2C4         	lfsr	1,___inthi_sp
 18071                           
 18072                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 18073  014DD2  0139               	movlb	57	; () banked
 18074  014DD4  91A9               	bcf	169,0,b	;volatile
 18075                           
 18076                           ; BSR set to: 57
 18077                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 18078  014DD6  EC15  F0A6         	call	_TMR6_CallBack	;wreg free
 18079  014DDA  0060  F178  F03D   	movff	??_TMR6_ISR,btemp
 18080  014DE0  0011               	retfie		f
 18081  014DE2                     __end_of_TMR6_ISR:
 18082                           	opt callstack 0
 18083                           
 18084 ;; *************** function _TMR6_CallBack *****************
 18085 ;; Defined at:
 18086 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 18087 ;; Parameters:    Size  Location     Type
 18088 ;;		None
 18089 ;; Auto vars:     Size  Location     Type
 18090 ;;		None
 18091 ;; Return value:  Size  Location     Type
 18092 ;;                  1  [STACK] void 
 18093 ;; Registers used:
 18094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 18095 ;; Tracked objects:
 18096 ;;		On entry : 3F/39
 18097 ;;		On exit  : 0/0
 18098 ;;		Unchanged: 0/0
 18099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18104 ;;Total ram usage:        0 bytes
 18105 ;; Hardware stack levels used:    1
 18106 ;; Hardware stack levels required when called:    1
 18107 ;; This function calls:
 18108 ;;		Absolute function
 18109 ;;		_TMR6_DefaultInterruptHandler
 18110 ;; This function is called by:
 18111 ;;		_TMR6_ISR
 18112 ;; This function uses a reentrant model
 18113 ;;
 18114                           
 18115                           	psect	text105
 18116  014C2A                     __ptext105:
 18117                           	opt callstack 0
 18118  014C2A                     _TMR6_CallBack:
 18119                           	opt callstack 17
 18120                           
 18121                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 18122                           
 18123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18124                           ;incstack = 0
 18125  014C2A  0100               	movlb	0	; () banked
 18126  014C2C  51DF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 18127  014C2E  11E0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 18128  014C30  11E1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 18129  014C32  B4D8               	btfsc	status,2,c
 18130  014C34  0012               	return	
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 18134  014C36  D801               	call	u393_48
 18135  014C38  0012               	return	
 18136  014C3A                     u393_48:
 18137  014C3A  0005               	push	
 18138  014C3C  6EFA               	movwf	pclath,c
 18139  014C3E  51DF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 18140  014C40  6EFD               	movwf	tosl,c
 18141  014C42  51E0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 18142  014C44  6EFE               	movwf	tosh,c
 18143  014C46  51E1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 18144  014C48  6EFF               	movwf	tosu,c
 18145  014C4A  50FA               	movf	pclath,w,c
 18146  014C4C  0012               	return		;indir
 18147  014C4E                     __end_of_TMR6_CallBack:
 18148                           	opt callstack 0
 18149                           
 18150 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 18151 ;; Defined at:
 18152 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 18153 ;; Parameters:    Size  Location     Type
 18154 ;;		None
 18155 ;; Auto vars:     Size  Location     Type
 18156 ;;  i               1  [STACK] unsigned char 
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  1  [STACK] void 
 18159 ;; Registers used:
 18160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18161 ;; Tracked objects:
 18162 ;;		On entry : 3F/0
 18163 ;;		On exit  : 0/0
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18170 ;;Total ram usage:        0 bytes
 18171 ;; Hardware stack levels used:    1
 18172 ;; This function calls:
 18173 ;;		Nothing
 18174 ;; This function is called by:
 18175 ;;		_TMR6_Initialize
 18176 ;;		_TMR6_CallBack
 18177 ;; This function uses a reentrant model
 18178 ;;
 18179                           
 18180                           	psect	text106
 18181  014556                     __ptext106:
 18182                           	opt callstack 0
 18183  014556                     _TMR6_DefaultInterruptHandler:
 18184                           	opt callstack 0
 18185                           
 18186                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18187  014556  52E6               	movf	postinc1,f,c
 18188                           
 18189                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 18190                           ;stkvar	_i @ sp[(-1)+0]
 18191                           
 18192                           ;incstack = 0
 18193  014558  0EFF               	movlw	-1
 18194  01455A  6AE3               	clrf	plusw1,c
 18195  01455C                     l6581:
 18196                           
 18197                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 18198                           ;stkvar	_i @ sp[(-1)+0]
 18199  01455C  0EFF               	movlw	-1
 18200  01455E  50E3               	movf	plusw1,w,c
 18201  014560  0D02               	mullw	2
 18202  014562  50F3               	movf	prodl,w,c
 18203  014564  0FAA               	addlw	low _tickCount
 18204  014566  6ED9               	movwf	fsr2l,c
 18205  014568  6ADA               	clrf	fsr2h,c
 18206  01456A  50DE               	movf	postinc2,w,c
 18207  01456C  10DE               	iorwf	postinc2,w,c
 18208  01456E  B4D8               	btfsc	status,2,c
 18209  014570  D00A               	goto	l6585
 18210                           
 18211                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 18212                           ;stkvar	_i @ sp[(-1)+0]
 18213  014572  0EFF               	movlw	-1
 18214  014574  50E3               	movf	plusw1,w,c
 18215  014576  0D02               	mullw	2
 18216  014578  50F3               	movf	prodl,w,c
 18217  01457A  0FAA               	addlw	low _tickCount
 18218  01457C  6ED9               	movwf	fsr2l,c
 18219  01457E  6ADA               	clrf	fsr2h,c
 18220  014580  06DE               	decf	postinc2,f,c
 18221  014582  0E00               	movlw	0
 18222  014584  5ADD               	subwfb	postdec2,f,c
 18223  014586                     l6585:
 18224                           
 18225                           ;mcc_generated_files/tmr6.c: 207:  }
 18226                           ;stkvar	_i @ sp[(-1)+0]
 18227  014586  0EFF               	movlw	-1
 18228  014588  2AE3               	incf	plusw1,f,c
 18229                           
 18230                           ;stkvar	_i @ sp[(-1)+0]
 18231  01458A  0EFF               	movlw	-1
 18232  01458C  006F FF8C  F03D    	movff	plusw1,btemp
 18233  014592  0E06               	movlw	6
 18234  014594  643D               	cpfsgt	btemp,c
 18235  014596  D7E2               	goto	l6581
 18236                           
 18237                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 18238  014598  52E5               	movf	postdec1,f,c
 18239  01459A  0012               	return		;funcret
 18240  01459C                     __end_of_TMR6_DefaultInterruptHandler:
 18241                           	opt callstack 0
 18242                           
 18243 ;; *************** function _DMA1_DMASCNT_ISR *****************
 18244 ;; Defined at:
 18245 ;;		line 126 in file "mcc_generated_files/dma1.c"
 18246 ;; Parameters:    Size  Location     Type
 18247 ;;		None
 18248 ;; Auto vars:     Size  Location     Type
 18249 ;;		None
 18250 ;; Return value:  Size  Location     Type
 18251 ;;                  1    wreg      void 
 18252 ;; Registers used:
 18253 ;;		None
 18254 ;; Tracked objects:
 18255 ;;		On entry : 0/0
 18256 ;;		On exit  : 3F/0
 18257 ;;		Unchanged: 0/0
 18258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18263 ;;Total ram usage:        0 bytes
 18264 ;; Hardware stack levels used:    1
 18265 ;; This function calls:
 18266 ;;		Nothing
 18267 ;; This function is called by:
 18268 ;;		Interrupt level 2
 18269 ;; This function uses a non-reentrant model
 18270 ;;
 18271                           
 18272                           	psect	text107
 18273  014E3C                     __ptext107:
 18274                           	opt callstack 0
 18275  014E3C                     _DMA1_DMASCNT_ISR:
 18276                           	opt callstack 19
 18277                           
 18278                           ;incstack = 0
 18279  014E3C  EE13  F2C4         	lfsr	1,___inthi_sp
 18280                           
 18281                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 18282  014E40  0139               	movlb	57	; () banked
 18283  014E42  91A2               	bcf	162,0,b	;volatile
 18284                           
 18285                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 18286  014E44  0100               	movlb	0	; () banked
 18287  014E46  97C5               	bcf	_spi_link& (0+255),3,b	;volatile
 18288                           
 18289                           ; BSR set to: 0
 18290                           
 18291                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE1 = 0; } while(0);
 18292  014E48  92BE               	bcf	16318,1,c	;volatile
 18293                           
 18294                           ; BSR set to: 0
 18295  014E4A  0011               	retfie		f
 18296  014E4C                     __end_of_DMA1_DMASCNT_ISR:
 18297                           	opt callstack 0
 18298                           
 18299 ;; *************** function _DMA1_DMADCNT_ISR *****************
 18300 ;; Defined at:
 18301 ;;		line 134 in file "mcc_generated_files/dma1.c"
 18302 ;; Parameters:    Size  Location     Type
 18303 ;;		None
 18304 ;; Auto vars:     Size  Location     Type
 18305 ;;		None
 18306 ;; Return value:  Size  Location     Type
 18307 ;;                  1    wreg      void 
 18308 ;; Registers used:
 18309 ;;		None
 18310 ;; Tracked objects:
 18311 ;;		On entry : 0/0
 18312 ;;		On exit  : 3F/39
 18313 ;;		Unchanged: 0/0
 18314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18319 ;;Total ram usage:        0 bytes
 18320 ;; Hardware stack levels used:    1
 18321 ;; This function calls:
 18322 ;;		Nothing
 18323 ;; This function is called by:
 18324 ;;		Interrupt level 2
 18325 ;; This function uses a non-reentrant model
 18326 ;;
 18327                           
 18328                           	psect	text108
 18329  014E94                     __ptext108:
 18330                           	opt callstack 0
 18331  014E94                     _DMA1_DMADCNT_ISR:
 18332                           	opt callstack 19
 18333                           
 18334                           ; BSR set to: 0
 18335                           ;incstack = 0
 18336  014E94  EE13  F2C4         	lfsr	1,___inthi_sp
 18337                           
 18338                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 18339  014E98  0139               	movlb	57	; () banked
 18340  014E9A  93A2               	bcf	162,1,b	;volatile
 18341                           
 18342                           ; BSR set to: 57
 18343  014E9C  0011               	retfie		f
 18344  014E9E                     __end_of_DMA1_DMADCNT_ISR:
 18345                           	opt callstack 0
 18346                           
 18347 ;; *************** function _DMA1_DMAA_ISR *****************
 18348 ;; Defined at:
 18349 ;;		line 144 in file "mcc_generated_files/dma1.c"
 18350 ;; Parameters:    Size  Location     Type
 18351 ;;		None
 18352 ;; Auto vars:     Size  Location     Type
 18353 ;;		None
 18354 ;; Return value:  Size  Location     Type
 18355 ;;                  1    wreg      void 
 18356 ;; Registers used:
 18357 ;;		None
 18358 ;; Tracked objects:
 18359 ;;		On entry : 0/0
 18360 ;;		On exit  : 3F/39
 18361 ;;		Unchanged: 0/0
 18362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18367 ;;Total ram usage:        0 bytes
 18368 ;; Hardware stack levels used:    1
 18369 ;; This function calls:
 18370 ;;		Nothing
 18371 ;; This function is called by:
 18372 ;;		Interrupt level 2
 18373 ;; This function uses a non-reentrant model
 18374 ;;
 18375                           
 18376                           	psect	text109
 18377  014EA0                     __ptext109:
 18378                           	opt callstack 0
 18379  014EA0                     _DMA1_DMAA_ISR:
 18380                           	opt callstack 19
 18381                           
 18382                           ; BSR set to: 57
 18383                           ;incstack = 0
 18384  014EA0  EE13  F2C4         	lfsr	1,___inthi_sp
 18385                           
 18386                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 18387  014EA4  0139               	movlb	57	; () banked
 18388  014EA6  97A2               	bcf	162,3,b	;volatile
 18389                           
 18390                           ; BSR set to: 57
 18391  014EA8  0011               	retfie		f
 18392  014EAA                     __end_of_DMA1_DMAA_ISR:
 18393                           	opt callstack 0
 18394                           
 18395 ;; *************** function _DMA1_DMAOR_ISR *****************
 18396 ;; Defined at:
 18397 ;;		line 155 in file "mcc_generated_files/dma1.c"
 18398 ;; Parameters:    Size  Location     Type
 18399 ;;		None
 18400 ;; Auto vars:     Size  Location     Type
 18401 ;;		None
 18402 ;; Return value:  Size  Location     Type
 18403 ;;                  1    wreg      void 
 18404 ;; Registers used:
 18405 ;;		None
 18406 ;; Tracked objects:
 18407 ;;		On entry : 0/0
 18408 ;;		On exit  : 3F/39
 18409 ;;		Unchanged: 0/0
 18410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18415 ;;Total ram usage:        0 bytes
 18416 ;; Hardware stack levels used:    1
 18417 ;; This function calls:
 18418 ;;		Nothing
 18419 ;; This function is called by:
 18420 ;;		Interrupt level 2
 18421 ;; This function uses a non-reentrant model
 18422 ;;
 18423                           
 18424                           	psect	text110
 18425  014EAC                     __ptext110:
 18426                           	opt callstack 0
 18427  014EAC                     _DMA1_DMAOR_ISR:
 18428                           	opt callstack 19
 18429                           
 18430                           ; BSR set to: 57
 18431                           ;incstack = 0
 18432  014EAC  EE13  F2C4         	lfsr	1,___inthi_sp
 18433                           
 18434                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 18435  014EB0  0139               	movlb	57	; () banked
 18436  014EB2  95A2               	bcf	162,2,b	;volatile
 18437                           
 18438                           ; BSR set to: 57
 18439  014EB4  0011               	retfie		f
 18440  014EB6                     __end_of_DMA1_DMAOR_ISR:
 18441                           	opt callstack 0
 18442                           
 18443 ;; *************** function _TMR5_ISR *****************
 18444 ;; Defined at:
 18445 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 18446 ;; Parameters:    Size  Location     Type
 18447 ;;		None
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;		None
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1    wreg      void 
 18452 ;; Registers used:
 18453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18461 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18462 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18463 ;;Total ram usage:        3 bytes
 18464 ;; Hardware stack levels used:    1
 18465 ;; Hardware stack levels required when called:    2
 18466 ;; This function calls:
 18467 ;;		_TMR5_CallBack
 18468 ;;		_TMR5_WriteTimer
 18469 ;; This function is called by:
 18470 ;;		Interrupt level 2
 18471 ;; This function uses a non-reentrant model
 18472 ;;
 18473                           
 18474                           	psect	text111
 18475  014348                     __ptext111:
 18476                           	opt callstack 0
 18477  014348                     _TMR5_ISR:
 18478                           	opt callstack 17
 18479                           
 18480                           ; BSR set to: 57
 18481                           ;incstack = 0
 18482  014348  0060  F120  F0F1   	movff	btemp+11,??_TMR5_ISR+2
 18483  01434E  EE13  F2C4         	lfsr	1,___inthi_sp
 18484                           
 18485                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 18486  014352  0139               	movlb	57	; () banked
 18487  014354  9DA8               	bcf	168,6,b	;volatile
 18488                           
 18489                           ; BSR set to: 57
 18490                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 18491  014356  0060  F0A7  FFE6   	movff	_timer5ReloadVal,postinc1
 18492  01435C  0060  F0AB  FFE6   	movff	_timer5ReloadVal+1,postinc1
 18493  014362  EC11  F0A3         	call	_TMR5_WriteTimer	;wreg free
 18494                           
 18495                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 18496  014366  EE21  F123         	lfsr	2,_V+301	;volatile
 18497  01436A  50DF               	movf	indf2,w,c
 18498  01436C  0100               	movlb	0	; () banked
 18499  01436E  6FEF               	movwf	??_TMR5_ISR& (0+255),b
 18500  014370  6BF0               	clrf	(??_TMR5_ISR+1)& (0+255),b
 18501  014372  0E05               	movlw	5
 18502  014374  27EF               	addwf	??_TMR5_ISR& (0+255),f,b
 18503  014376  0E00               	movlw	0
 18504  014378  23F0               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 18505  01437A  4A27               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 18506  01437C  2A28               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 18507  01437E  51EF               	movf	??_TMR5_ISR& (0+255),w,b
 18508  014380  5C27               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 18509  014382  51F0               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 18510  014384  5828               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 18511  014386  A0D8               	btfss	status,0,c
 18512  014388  D004               	goto	i2l1145
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 18516  01438A  EC27  F0A6         	call	_TMR5_CallBack	;wreg free
 18517                           
 18518                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 18519  01438E  6A27               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 18520  014390  6A28               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 18521  014392                     i2l1145:
 18522  014392  0060  F3C4  F048   	movff	??_TMR5_ISR+2,btemp+11
 18523  014398  0011               	retfie		f
 18524  01439A                     __end_of_TMR5_ISR:
 18525                           	opt callstack 0
 18526                           
 18527 ;; *************** function _TMR5_WriteTimer *****************
 18528 ;; Defined at:
 18529 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 18530 ;; Parameters:    Size  Location     Type
 18531 ;;  timerVal        2  [STACK] unsigned short 
 18532 ;; Auto vars:     Size  Location     Type
 18533 ;;		None
 18534 ;; Return value:  Size  Location     Type
 18535 ;;                  1  [STACK] void 
 18536 ;; Registers used:
 18537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18538 ;; Tracked objects:
 18539 ;;		On entry : 3F/39
 18540 ;;		On exit  : 0/0
 18541 ;;		Unchanged: 0/0
 18542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18547 ;;Total ram usage:        0 bytes
 18548 ;; Hardware stack levels used:    1
 18549 ;; This function calls:
 18550 ;;		Nothing
 18551 ;; This function is called by:
 18552 ;;		_TMR5_ISR
 18553 ;; This function uses a reentrant model
 18554 ;;
 18555                           
 18556                           	psect	text112
 18557  014622                     __ptext112:
 18558                           	opt callstack 0
 18559  014622                     _TMR5_WriteTimer:
 18560                           	opt callstack 18
 18561                           
 18562                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 18563                           
 18564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18565                           ;incstack = 0
 18566  014622  A49A               	btfss	16282,2,c	;volatile
 18567  014624  D00F               	goto	l7095
 18568                           
 18569                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 18570  014626  909A               	bcf	16282,0,c	;volatile
 18571                           
 18572                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 18573                           ;stkvar	_timerVal @ sp[(0)+-2]
 18574  014628  0EFF               	movlw	255
 18575  01462A  24E1               	addwf	fsr1l,w,c
 18576  01462C  6ED9               	movwf	fsr2l,c
 18577  01462E  0EFF               	movlw	255
 18578  014630  20E2               	addwfc	fsr1h,w,c
 18579  014632  6EDA               	movwf	fsr2h,c
 18580  014634  50DF               	movf	indf2,w,c
 18581  014636  6E99               	movwf	16281,c	;volatile
 18582                           
 18583                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 18584                           ;stkvar	_timerVal @ sp[(0)+-2]
 18585  014638  0EFE               	movlw	-2
 18586  01463A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 18587                           
 18588                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 18589  014640  809A               	bsf	16282,0,c	;volatile
 18590                           
 18591                           ;mcc_generated_files/tmr5.c: 142:  } else {
 18592  014642  D00C               	goto	l1128
 18593  014644                     l7095:
 18594                           
 18595                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 18596                           ;stkvar	_timerVal @ sp[(0)+-2]
 18597  014644  0EFF               	movlw	255
 18598  014646  24E1               	addwf	fsr1l,w,c
 18599  014648  6ED9               	movwf	fsr2l,c
 18600  01464A  0EFF               	movlw	255
 18601  01464C  20E2               	addwfc	fsr1h,w,c
 18602  01464E  6EDA               	movwf	fsr2h,c
 18603  014650  50DF               	movf	indf2,w,c
 18604  014652  6E99               	movwf	16281,c	;volatile
 18605                           
 18606                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 18607                           ;stkvar	_timerVal @ sp[(0)+-2]
 18608  014654  0EFE               	movlw	-2
 18609  014656  006F FF8F FF98     	movff	plusw1,16280	;volatile
 18610  01465C                     l1128:
 18611                           
 18612                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 18613  01465C  52E5               	movf	postdec1,f,c
 18614  01465E  52E5               	movf	postdec1,f,c
 18615  014660  0012               	return		;funcret
 18616  014662                     __end_of_TMR5_WriteTimer:
 18617                           	opt callstack 0
 18618                           
 18619 ;; *************** function _TMR5_CallBack *****************
 18620 ;; Defined at:
 18621 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 18622 ;; Parameters:    Size  Location     Type
 18623 ;;		None
 18624 ;; Auto vars:     Size  Location     Type
 18625 ;;		None
 18626 ;; Return value:  Size  Location     Type
 18627 ;;                  1  [STACK] void 
 18628 ;; Registers used:
 18629 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 18630 ;; Tracked objects:
 18631 ;;		On entry : 3F/0
 18632 ;;		On exit  : 0/0
 18633 ;;		Unchanged: 0/0
 18634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18639 ;;Total ram usage:        0 bytes
 18640 ;; Hardware stack levels used:    1
 18641 ;; Hardware stack levels required when called:    1
 18642 ;; This function calls:
 18643 ;;		Absolute function
 18644 ;;		_TMR5_DefaultInterruptHandler
 18645 ;; This function is called by:
 18646 ;;		_TMR5_ISR
 18647 ;; This function uses a reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text113
 18651  014C4E                     __ptext113:
 18652                           	opt callstack 0
 18653  014C4E                     _TMR5_CallBack:
 18654                           	opt callstack 17
 18655                           
 18656                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 18657                           
 18658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18659                           ;incstack = 0
 18660  014C4E  0100               	movlb	0	; () banked
 18661  014C50  51DC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18662  014C52  11DD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18663  014C54  11DE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18664  014C56  B4D8               	btfsc	status,2,c
 18665  014C58  0012               	return	
 18666                           
 18667                           ; BSR set to: 0
 18668                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 18669  014C5A  D801               	call	u396_48
 18670  014C5C  0012               	return	
 18671  014C5E                     u396_48:
 18672  014C5E  0005               	push	
 18673  014C60  6EFA               	movwf	pclath,c
 18674  014C62  51DC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18675  014C64  6EFD               	movwf	tosl,c
 18676  014C66  51DD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18677  014C68  6EFE               	movwf	tosh,c
 18678  014C6A  51DE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18679  014C6C  6EFF               	movwf	tosu,c
 18680  014C6E  50FA               	movf	pclath,w,c
 18681  014C70  0012               	return		;indir
 18682  014C72                     __end_of_TMR5_CallBack:
 18683                           	opt callstack 0
 18684                           
 18685 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 18686 ;; Defined at:
 18687 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;		None
 18690 ;; Auto vars:     Size  Location     Type
 18691 ;;		None
 18692 ;; Return value:  Size  Location     Type
 18693 ;;                  1  [STACK] void 
 18694 ;; Registers used:
 18695 ;;		wreg, status,2, status,0, btemp+11
 18696 ;; Tracked objects:
 18697 ;;		On entry : 3F/0
 18698 ;;		On exit  : 0/0
 18699 ;;		Unchanged: 0/0
 18700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18705 ;;Total ram usage:        0 bytes
 18706 ;; Hardware stack levels used:    1
 18707 ;; This function calls:
 18708 ;;		Nothing
 18709 ;; This function is called by:
 18710 ;;		_TMR5_Initialize
 18711 ;;		_TMR5_CallBack
 18712 ;; This function uses a reentrant model
 18713 ;;
 18714                           
 18715                           	psect	text114
 18716  014DE2                     __ptext114:
 18717                           	opt callstack 0
 18718  014DE2                     _TMR5_DefaultInterruptHandler:
 18719                           	opt callstack 17
 18720                           
 18721                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 18722                           
 18723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18724                           ;incstack = 0
 18725  014DE2  A0BE               	btfss	16318,0,c	;volatile
 18726  014DE4  D002               	goto	u369_40
 18727  014DE6  0E01               	movlw	1
 18728  014DE8  D001               	goto	u369_46
 18729  014DEA                     u369_40:
 18730  014DEA  0E00               	movlw	0
 18731  014DEC                     u369_46:
 18732  014DEC  0AFF               	xorlw	255
 18733  014DEE  6E48               	movwf	btemp+11,c
 18734  014DF0  50BE               	movf	16318,w,c	;volatile
 18735  014DF2  1848               	xorwf	btemp+11,w,c
 18736  014DF4  0BFE               	andlw	-2
 18737  014DF6  1848               	xorwf	btemp+11,w,c
 18738  014DF8  6EBE               	movwf	16318,c	;volatile
 18739                           
 18740                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 18741  014DFA  0012               	return		;funcret
 18742  014DFC                     __end_of_TMR5_DefaultInterruptHandler:
 18743                           	opt callstack 0
 18744                           
 18745                           ;
 18746                           ; Interrupt Vector Table @ 0x8
 18747                           ;
 18748                           
 18749                           	psect	ivt0x8
 18750  000008                     __pivt0x8:
 18751                           	opt callstack 0
 18752  000008                     ivt0x8_base:
 18753                           	opt callstack 0
 18754                           
 18755                           ; Vector 0 : SWINT
 18756  000008  53B9               	dw	_Default_ISR shr (0+2)
 18757                           
 18758                           ; Vector 1 : HLVD
 18759  00000A  53B9               	dw	_Default_ISR shr (0+2)
 18760                           
 18761                           ; Vector 2 : OSF
 18762  00000C  53B9               	dw	_Default_ISR shr (0+2)
 18763                           
 18764                           ; Vector 3 : CSW
 18765  00000E  53B9               	dw	_Default_ISR shr (0+2)
 18766                           
 18767                           ; Vector 4 : NVM
 18768  000010  53B9               	dw	_Default_ISR shr (0+2)
 18769                           
 18770                           ; Vector 5 : SCAN
 18771  000012  53B9               	dw	_Default_ISR shr (0+2)
 18772                           
 18773                           ; Vector 6 : CRC
 18774  000014  53B9               	dw	_Default_ISR shr (0+2)
 18775                           
 18776                           ; Vector 7 : IOC
 18777  000016  53B9               	dw	_Default_ISR shr (0+2)
 18778                           
 18779                           ; Vector 8 : INT0
 18780  000018  5397               	dw	_INT0_ISR shr (0+2)
 18781                           
 18782                           ; Vector 9 : ZCD
 18783  00001A  53B9               	dw	_Default_ISR shr (0+2)
 18784                           
 18785                           ; Vector 10 : AD
 18786  00001C  520E               	dw	_ADCC_ISR shr (0+2)
 18787                           
 18788                           ; Vector 11 : ADT
 18789  00001E  53B9               	dw	_Default_ISR shr (0+2)
 18790                           
 18791                           ; Vector 12 : CMP1
 18792  000020  53B9               	dw	_Default_ISR shr (0+2)
 18793                           
 18794                           ; Vector 13 : SMT1
 18795  000022  53B9               	dw	_Default_ISR shr (0+2)
 18796                           
 18797                           ; Vector 14 : SMT1PRA
 18798  000024  53B9               	dw	_Default_ISR shr (0+2)
 18799                           
 18800                           ; Vector 15 : SMT1PRW
 18801  000026  53B9               	dw	_Default_ISR shr (0+2)
 18802                           
 18803                           ; Vector 16 : DMA1SCNT
 18804  000028  538F               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 18805                           
 18806                           ; Vector 17 : DMA1DCNT
 18807  00002A  53A5               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 18808                           
 18809                           ; Vector 18 : DMA1OR
 18810  00002C  53AB               	dw	_DMA1_DMAOR_ISR shr (0+2)
 18811                           
 18812                           ; Vector 19 : DMA1A
 18813  00002E  53A8               	dw	_DMA1_DMAA_ISR shr (0+2)
 18814                           
 18815                           ; Vector 20 : SPI1RX
 18816  000030  53B9               	dw	_Default_ISR shr (0+2)
 18817                           
 18818                           ; Vector 21 : SPI1TX
 18819  000032  53B9               	dw	_Default_ISR shr (0+2)
 18820                           
 18821                           ; Vector 22 : SPI1
 18822  000034  53B9               	dw	_Default_ISR shr (0+2)
 18823                           
 18824                           ; Vector 23 : I2C1RX
 18825  000036  53B9               	dw	_Default_ISR shr (0+2)
 18826                           
 18827                           ; Vector 24 : I2C1TX
 18828  000038  53B9               	dw	_Default_ISR shr (0+2)
 18829                           
 18830                           ; Vector 25 : I2C1
 18831  00003A  53B9               	dw	_Default_ISR shr (0+2)
 18832                           
 18833                           ; Vector 26 : I2C1E
 18834  00003C  53B9               	dw	_Default_ISR shr (0+2)
 18835                           
 18836                           ; Vector 27 : U1RX
 18837  00003E  52E4               	dw	_UART1_rx_vect_isr shr (0+2)
 18838                           
 18839                           ; Vector 28 : U1TX
 18840  000040  52DA               	dw	_UART1_tx_vect_isr shr (0+2)
 18841                           
 18842                           ; Vector 29 : U1E
 18843  000042  53B9               	dw	_Default_ISR shr (0+2)
 18844                           
 18845                           ; Vector 30 : U1
 18846  000044  53B9               	dw	_Default_ISR shr (0+2)
 18847                           
 18848                           ; Vector 31 : TMR0
 18849  000046  53B9               	dw	_Default_ISR shr (0+2)
 18850                           
 18851                           ; Vector 32 : TMR1
 18852  000048  53B9               	dw	_Default_ISR shr (0+2)
 18853                           
 18854                           ; Vector 33 : TMR1G
 18855  00004A  53B9               	dw	_Default_ISR shr (0+2)
 18856                           
 18857                           ; Vector 34 : TMR2
 18858  00004C  53B9               	dw	_Default_ISR shr (0+2)
 18859                           
 18860                           ; Vector 35 : CCP1
 18861  00004E  53B9               	dw	_Default_ISR shr (0+2)
 18862                           
 18863                           ; Vector 36 : Undefined
 18864  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 18865                           
 18866                           ; Vector 37 : NCO1
 18867  000052  53B9               	dw	_Default_ISR shr (0+2)
 18868                           
 18869                           ; Vector 38 : CWG1
 18870  000054  53B9               	dw	_Default_ISR shr (0+2)
 18871                           
 18872                           ; Vector 39 : CLC1
 18873  000056  53B9               	dw	_Default_ISR shr (0+2)
 18874                           
 18875                           ; Vector 40 : INT1
 18876  000058  539B               	dw	_INT1_ISR shr (0+2)
 18877                           
 18878                           ; Vector 41 : CMP2
 18879  00005A  53B9               	dw	_Default_ISR shr (0+2)
 18880                           
 18881                           ; Vector 42 : DMA2SCNT
 18882  00005C  53B9               	dw	_Default_ISR shr (0+2)
 18883                           
 18884                           ; Vector 43 : DMA2DCNT
 18885  00005E  53B9               	dw	_Default_ISR shr (0+2)
 18886                           
 18887                           ; Vector 44 : DMA2OR
 18888  000060  53B9               	dw	_Default_ISR shr (0+2)
 18889                           
 18890                           ; Vector 45 : DMA2A
 18891  000062  53B9               	dw	_Default_ISR shr (0+2)
 18892                           
 18893                           ; Vector 46 : I2C2RX
 18894  000064  53B9               	dw	_Default_ISR shr (0+2)
 18895                           
 18896                           ; Vector 47 : I2C2TX
 18897  000066  53B9               	dw	_Default_ISR shr (0+2)
 18898                           
 18899                           ; Vector 48 : I2C2
 18900  000068  53B9               	dw	_Default_ISR shr (0+2)
 18901                           
 18902                           ; Vector 49 : I2C2E
 18903  00006A  53B9               	dw	_Default_ISR shr (0+2)
 18904                           
 18905                           ; Vector 50 : U2RX
 18906  00006C  52F8               	dw	_UART2_rx_vect_isr shr (0+2)
 18907                           
 18908                           ; Vector 51 : U2TX
 18909  00006E  52EE               	dw	_UART2_tx_vect_isr shr (0+2)
 18910                           
 18911                           ; Vector 52 : U2E
 18912  000070  53B9               	dw	_Default_ISR shr (0+2)
 18913                           
 18914                           ; Vector 53 : U2
 18915  000072  53B9               	dw	_Default_ISR shr (0+2)
 18916                           
 18917                           ; Vector 54 : TMR3
 18918  000074  53B9               	dw	_Default_ISR shr (0+2)
 18919                           
 18920                           ; Vector 55 : TMR3G
 18921  000076  53B9               	dw	_Default_ISR shr (0+2)
 18922                           
 18923                           ; Vector 56 : TMR4
 18924  000078  53B9               	dw	_Default_ISR shr (0+2)
 18925                           
 18926                           ; Vector 57 : CCP2
 18927  00007A  53B9               	dw	_Default_ISR shr (0+2)
 18928                           
 18929                           ; Vector 58 : Undefined
 18930  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18931                           
 18932                           ; Vector 59 : CWG2
 18933  00007E  53B9               	dw	_Default_ISR shr (0+2)
 18934                           
 18935                           ; Vector 60 : CLC2
 18936  000080  53B9               	dw	_Default_ISR shr (0+2)
 18937                           
 18938                           ; Vector 61 : INT2
 18939  000082  539F               	dw	_INT2_ISR shr (0+2)
 18940                           
 18941                           ; Vector 62 : Undefined
 18942  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18943                           
 18944                           ; Vector 63 : Undefined
 18945  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18946                           
 18947                           ; Vector 64 : Undefined
 18948  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18949                           
 18950                           ; Vector 65 : Undefined
 18951  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18952                           
 18953                           ; Vector 66 : Undefined
 18954  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18955                           
 18956                           ; Vector 67 : Undefined
 18957  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18958                           
 18959                           ; Vector 68 : Undefined
 18960  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18961                           
 18962                           ; Vector 69 : Undefined
 18963  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18964                           
 18965                           ; Vector 70 : TMR5
 18966  000094  50D2               	dw	_TMR5_ISR shr (0+2)
 18967                           
 18968                           ; Vector 71 : TMR5G
 18969  000096  53B9               	dw	_Default_ISR shr (0+2)
 18970                           
 18971                           ; Vector 72 : TMR6
 18972  000098  5372               	dw	_TMR6_ISR shr (0+2)
 18973                           
 18974                           ; Vector 73 : CCP3
 18975  00009A  53B9               	dw	_Default_ISR shr (0+2)
 18976                           
 18977                           ; Vector 74 : CWG3
 18978  00009C  53B9               	dw	_Default_ISR shr (0+2)
 18979                           
 18980                           ; Vector 75 : CLC3
 18981  00009E  53B9               	dw	_Default_ISR shr (0+2)
 18982                           
 18983                           ; Vector 76 : Undefined
 18984  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18985                           
 18986                           ; Vector 77 : Undefined
 18987  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18988                           
 18989                           ; Vector 78 : Undefined
 18990  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18991                           
 18992                           ; Vector 79 : Undefined
 18993  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18994                           
 18995                           ; Vector 80 : CCP4
 18996  0000A8  53B9               	dw	_Default_ISR shr (0+2)
 18997                           
 18998                           ; Vector 81 : CLC4
 18999  0000AA  53B9               	dw	_Default_ISR shr (0+2)
 19000  0000AC                     ivt0x8_undefint:
 19001                           	opt callstack 0
 19002  0000AC  00FF               	reset	
 19003                           
 19004                           	psect	text115
 19005  000000                     __ptext115:
 19006                           	opt callstack 0
 19007                           
 19008                           	psect	rparam
 19009  0000                     
 19010                           	psect	temp
 19011  00003D                     btemp:
 19012                           	opt callstack 0
 19013  00003D                     	ds	32
 19014  0000                     wtemp0	set	btemp
 19015  0000                     wtemp1	set	btemp+2
 19016  0000                     wtemp2	set	btemp+4
 19017  0000                     wtemp3	set	btemp+6
 19018  0000                     wtemp4	set	btemp+8
 19019  0000                     wtemp5	set	btemp+10
 19020  0000                     wtemp8	set	btemp+1
 19021  0000                     ttemp0	set	btemp
 19022  0000                     ttemp1	set	btemp+3
 19023  0000                     ttemp2	set	btemp+6
 19024  0000                     ttemp3	set	btemp+9
 19025  0000                     ttemp5	set	btemp+1
 19026  0000                     ttemp6	set	btemp+4
 19027  0000                     ttemp7	set	btemp+8
 19028  0000                     ltemp0	set	btemp
 19029  0000                     ltemp1	set	btemp+4
 19030  0000                     ltemp2	set	btemp+8
 19031  0000                     lltemp0	set	btemp
 19032  0000                     lltemp1	set	btemp+8
 19033  0000                     lltemp2	set	btemp+16
 19034  0000                     lltemp3	set	btemp+24
 19035                           tosu	equ	0x3FFF
 19036                           tosh	equ	0x3FFE
 19037                           tosl	equ	0x3FFD
 19038                           stkptr	equ	0x3FFC
 19039                           pclatu	equ	0x3FFB
 19040                           pclath	equ	0x3FFA
 19041                           pcl	equ	0x3FF9
 19042                           tblptru	equ	0x3FF8
 19043                           tblptrh	equ	0x3FF7
 19044                           tblptrl	equ	0x3FF6
 19045                           tablat	equ	0x3FF5
 19046                           prodh	equ	0x3FF4
 19047                           prodl	equ	0x3FF3
 19048                           indf0	equ	0x3FEF
 19049                           postinc0	equ	0x3FEE
 19050                           postdec0	equ	0x3FED
 19051                           preinc0	equ	0x3FEC
 19052                           plusw0	equ	0x3FEB
 19053                           fsr0h	equ	0x3FEA
 19054                           fsr0l	equ	0x3FE9
 19055                           wreg	equ	0x3FE8
 19056                           indf1	equ	0x3FE7
 19057                           postinc1	equ	0x3FE6
 19058                           postdec1	equ	0x3FE5
 19059                           preinc1	equ	0x3FE4
 19060                           plusw1	equ	0x3FE3
 19061                           fsr1h	equ	0x3FE2
 19062                           fsr1l	equ	0x3FE1
 19063                           bsr	equ	0x3FE0
 19064                           indf2	equ	0x3FDF
 19065                           postinc2	equ	0x3FDE
 19066                           postdec2	equ	0x3FDD
 19067                           preinc2	equ	0x3FDC
 19068                           plusw2	equ	0x3FDB
 19069                           fsr2h	equ	0x3FDA
 19070                           fsr2l	equ	0x3FD9
 19071                           status	equ	0x3FD8


Data Sizes:
    Strings     318
    Constant    0
    Data        912
    BSS         551
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      62
    BANK0           160      3     146
    BANK1           256      0     198
    BANK2           256      0     256
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H12(BANK0[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), H13(BANK1[48]), 
		 -> H12(BANK0[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_25(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_25(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[4]), STR_14(CODE[18]), 
		 -> STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), STR_10(CODE[18]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[15]), 
		 -> STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[4]), STR_14(CODE[18]), 
		 -> STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), STR_10(CODE[18]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[15]), 
		 -> STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 302
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_22(CODE[6]), STR_3(CODE[6]), V.terminal(BIGRAM[160]), V(BIGRAM[302]), 

    a	PTR const unsigned char  size(2) Largest target is 302
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_22(CODE[6]), STR_3(CODE[6]), V.terminal(BIGRAM[160]), V(BIGRAM[302]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[4]), 
		 -> STR_14(CODE[18]), STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[18]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), 
		 -> STR_6(CODE[15]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4564_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[4]), STR_14(CODE[18]), 
		 -> STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), STR_10(CODE[18]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[15]), 
		 -> STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 91
		 -> STR_21(CODE[91]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[4]), STR_14(CODE[18]), 
		 -> STR_13(CODE[26]), STR_12(CODE[17]), STR_11(CODE[21]), STR_10(CODE[18]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[14]), STR_6(CODE[15]), 
		 -> STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_22(CODE[6]), STR_3(CODE[6]), 
		 -> V(BIGRAM[302]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_22(CODE[6]), STR_3(CODE[6]), 
		 -> V(BIGRAM[302]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_22(CODE[6]), 
		 -> STR_3(CODE[6]), V(BIGRAM[302]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F17177.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H12(BANK0[30]), H10(BANK1[91]), 

    F17177.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), H13(BANK1[48]), 
		 -> H12(BANK0[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), 
		 -> H13(BANK1[48]), H12(BANK0[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), 
		 -> H13(BANK1[48]), H12(BANK0[30]), H10(BANK1[91]), 

    t_link	PTR enum E16674 size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    S3844response_type$reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H12(BANK0[30]), H10(BANK1[91]), 

    F17158.reply	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H12(BANK0[30]), H10(BANK1[91]), 

    S3844response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), H13(BANK1[48]), 
		 -> H12(BANK0[30]), H10(BANK1[91]), 

    F17158.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), H13(BANK1[48]), 
		 -> H12(BANK0[30]), H10(BANK1[91]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    r_link	PTR enum E16674 size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    m_link	PTR enum E16674 size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H17(BANK0[20]), H14(BANK0[17]), 
		 -> H13(BANK1[48]), H12(BANK0[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    strPtr	PTR unsigned char  size(2) Largest target is 302
		 -> V(BIGRAM[302]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1987spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1987spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   42250
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                         _hb_message
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                              _srand
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           3     1      2    2000
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     154
                        _s10f1_opcmd
 ---------------------------------------------------------------------------------
 (3) _s10f1_opcmd                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           3     1      2     995
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           3     1      2     980
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      88
                         _StartTimer
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              4     0      4   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   2     0      2    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               8     4      4    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              0 BANK0      3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
       _StartTimer
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
       _StartTimer
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
       _s10f1_opcmd
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     22F      69        6.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C6       7       77.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      92       5       91.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     38C      58        0.0%
DATA                 0      0     5BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 12 23:43:23 2019

                    _SPI1_Exchange8bit 4D3A                                      _V 03F6  
     __end_of_TMR5_SetInterruptHandler 4AC8              __end_of_UART2_is_rx_ready 4ECE  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 4EBE                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0067  
                                  _H13 015B                                    _H14 0099  
                                  _H24 018B                                    _H17 0085  
                                  _H53 0386                                    l194 4E22  
                                  l572 4746                                    l717 48B6  
                                  l851 4D48                                    l579 46B6  
                                  l692 4708                                    l597 488A  
                                  l699 4678                                    _GIE 01FE97  
                                  _abs 44CA                                    _pad 3504  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 4C94  
                         _run_checksum 4910                     _UART1_Transmit_ISR 4864  
                        __CFG_BBEN$OFF 000000                    __end_of_s10f1_opcmd 45E0  
                        _INT1_CallBack 4CB6                           __CFG_ZCD$OFF 000000  
                                 _H254 0524                                   l1128 465C  
                                 l1307 0816                                   l1251 0226  
                                 l1260 0316                                   l1236 0040  
                                 l1253 02A0                                   l1510 3FA2  
                                 l1262 0350                                   l1246 013E  
                                 l1264 035A                                   l1506 3BE4  
                                 l1370 42A2                                   l1602 0972  
                                 l1282 069C                                   l1283 06DC  
                                 l1277 0564                                   l1287 07A0  
                                 l1288 07D4                                   l1713 1FC8  
                                 l1297 07FA                                   l1727 2178  
                                 l1833 1F10                                   l1770 43D8  
                                 l1666 13EA                                   l1915 3560  
                                 l1835 1F24                                   l1748 2D6A  
                                 l1935 1916                                   l6113 4698  
                                 l1962 26A4                                   l2738 33D6  
                                 l6115 469A                                   l2676 450A  
                                 l1884 47AE                                   l1981 139A  
                                 l6205 45DA                                   l6127 48DE  
                                 l6073 46D6                                   l2698 34FA  
                                 l6155 4C22                                   l6075 46D8  
                                 l7301 16C4                                   l7205 1420  
                                 l7047 4886                                   l6087 4908  
                                 l7057 4D16                                   l5705 2A46  
                                 l7313 16F8                                   l7241 1504  
                                 l7233 14D0                                   l7217 1468  
                                 l9001 20FC                                   l5627 3E04  
                                 l6531 471E                                   l7219 147C  
                                 l7069 48B2                                   l5629 3E26  
                                 l5741 2F06                                   l5733 2E5A  
                                 l5725 2DD2                                   l6701 3A50  
                                 l7333 179A                                   l7261 1572  
                                 l7253 1546                                   l7245 151A  
                                 l7237 14EE                                   l6197 45BC  
                                 l9021 219E                                   l9101 0046  
                                 l7095 4644                                   l7079 4D36  
                                 l6711 3A8A                                   l7503 0918  
                                 l7343 17C8                                   l7351 181C  
                                 l5681 28DA                                   l7601 0BA2  
                                 l7337 17B8                                   l7281 15EE  
                                 l7273 15B4                                   l7265 1588  
                                 l7257 155C                                   l7249 1530  
                                 l9025 21BE                                   l9009 2146  
                                 l6555 46E0                                   l6651 491C  
                                 l7603 0BA6                                   l7339 17BC  
                                 l7187 13A8                                   l9051 223C  
                                 l9203 03E8                                   l6581 455C  
                                 l5693 2974                                   l5669 44FA  
                                 l6709 3A64                                   l7701 0E7C  
                                 l7285 161C                                   l7277 15CA  
                                 l7269 159E                                   l7349 17D2  
                                 l6805 1E1A                                   l6741 1D0A  
                                 l9053 2240                                   l9029 21CA  
                                 l9061 2268                                   l9205 041E  
                                 l5687 292E                                   l6671 39FE  
                                 l6663 39EE                                   l7631 0C40  
                                 l7615 0BEE                                   l7543 0A1A  
                                 l7527 09B4                                   l6823 1E52  
                                 l6807 1E34                                   l6743 1D12  
                                 l9055 2248                                   l9039 21F6  
                                 l9063 22B2                                   l9143 01D0  
                                 l6585 4586                                   l6593 47B8  
                                 l7289 164C                                   l6841 1E8A  
                                 l6825 1E6C                                   l6729 1CD2  
                                 l6905 1F74                                   l9057 2252  
                                 l9049 2226                                   l9153 025E  
                                 l6675 3A02                                   l6667 39F6  
                                 l6659 39D6                                   l7651 0D16  
                                 l7643 0CC2                                   l7635 0C64  
                                 l7627 0C22                                   l7555 0A6C  
                                 l7299 16C0                                   l6755 1D4C  
                                 l6907 1FAC                                   l9243 0554  
                                 l9171 02B0                                   l8525 1950  
                                 l8517 1906                                   l8613 2838  
                                 l8605 27D0                                   l5893 326C  
                                 l6669 39FA                                   l7653 0D1A  
                                 l7581 0ACC                                   l6853 1EA4  
                                 l6749 1D30                                   l9309 08B6  
                                 l8447 3410                                   l8463 3ECE  
                                 l5895 32D8                                   l6695 3A4C  
                                 l6687 3A0E                                   l6679 3A06  
                                 l7639 0C92                                   l6855 1EE2  
                                 l6775 1D9E                                   l9255 05FE  
                                 l9175 02CC                                   l9167 02A8  
                                 l8473 3558                                   l8529 196E  
                                 l8609 27FC                                   l8721 248E  
                                 l6689 3A3A                                   l7665 0D4E  
                                 l7593 0B4E                                   l7585 0AF0  
                                 l7577 0AAE                                   l7489 08BE  
                                 l6881 1F38                                   l6785 1DC4  
                                 l6769 1D82                                   l9281 0716  
                                 l9097 002A                                   l8459 3E90  
                                 l8483 35F0                                   l8475 356A  
                                 l8491 3FC8                                   l8563 1C6E  
                                 l8539 1B80                                   l8715 2424  
                                 l5987 42B4                                   l8803 3C46  
                                 l7691 0E0C                                   l7683 0DE6  
                                 l6787 1DF6                                   l9267 068C  
                                 l9187 0336                                   l9179 02DC  
                                 l9291 07AA                                   l9099 0032  
                                 l8469 3530                                   l8493 3FF4  
                                 l8661 121A                                   l8645 106E  
                                 l8637 0F82                                   l8741 3AC2  
                                 l8709 2366                                   l7693 0E14  
                                 l7685 0DFC                                   l7589 0B1E  
                                 l6893 1F5A                                   l8479 35A6  
                                 l8559 1C32                                   l8591 26DA  
                                 l8575 2626                                   l8671 12C8  
                                 l8743 3B04                                   l7695 0E1C  
                                 l7687 0E00                                   l8831 2C46  
                                 l8823 2B8C                                   l9279 06E6  
                                 l8681 1326                                   l8649 10C0  
                                 l8729 253C                                   l7689 0E08  
                                 l9297 07FE                                   l8595 2716  
                                 l7699 0E32                                   l8763 391C  
                                 l8843 2C9A                                   l8835 2C60  
                                 l9299 081A                                   l8677 1322  
                                 l8861 2D1C                                   l8853 2CE2  
                                 l8845 2CC2                                   l8599 2746  
                                 l8687 1346                                   l8767 398E  
                                 l8863 2D44                                   l8849 2CC8  
                                 l8869 2D4A                                   l8981 205A  
                                 l8991 20A4                                   l8967 2000  
                                 STR_1 FF9A                                   STR_2 FFD7  
                                 STR_3 FFEF                                   STR_4 FFBA  
                                 l8995 20BC                                   l8979 2048  
                                 STR_5 FF50                                   STR_6 FFAB  
                                 l8997 20D0                                   STR_7 FFC9  
                                 STR_8 FFE9                                   STR_9 FFE3  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 u4205 1738                                   u2710 44DE  
                                 u3270 3388                                   u4206 173A  
                                 u4215 1748                                   u2640 3E54  
                                 u2800 2A7E                                   u4216 174A  
                                 u4225 1758                                   u5130 3404  
                                 u2730 28D4                                   u4226 175A  
                                 u2820 2AD0                                   u5300 193C  
                                 u5150 3480                                   u2750 292A  
                                 u2910 2F3E                                   u5310 1B94  
                                 u5230 1868                                   u6030 04AE  
                                 u3615 414E                                   u2647 3E46  
                                 u3616 4150                                   u3608 411C  
                                 u5240 186A                                   u4440 0982  
                                 u6040 04B6                                   u2761 2934  
                                 u5321 1BC4                                   u2770 296E  
                                 u2930 2F90                                   u2850 2DCC  
                                 u5330 1BDA                                   _T6PR 003F93  
                                 u5331 1BD8                                   u2780 29A0  
                                 u5340 1BEE                                   u5260 18DA  
                                 u4460 09C8                                   u3580 45D4  
                                 u6060 04CC                                   _PMD0 0039C0  
                                 _PMD1 0039C1                                   u3590 411A  
                                 u2870 2E22                                   u5350 1BF2  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u2880 2E54                                   u5280 18EC  
                                 u5440 273C                                   u5520 0FD6  
                                 _PMD4 0039C4                                   u4705 0D8E  
                                 _PMD5 0039C5                                   u2890 2E86  
                                 u5370 1C08                                   u5450 2782  
                                 u5610 25B0                                   u4706 0D90  
                                 _PMD6 0039C6                                   u4715 0D9E  
                                 _PMD7 0039C7                                   u5540 1148  
                                 u4716 0DA0                                   u4725 0DAE  
                                 u4726 0DB0                                   u5480 285E  
                                 u5457 2774                                   u5650 3C26  
                                 u5660 2B82                                   u5791 20F0  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 4CD8  
                     __end_of_ADCC_ISR 4864                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01A6                                   _ctoa 3FAA  
                                 _main 0000                                   _dtoa 1838  
                                 _seed 00E7                                   _prec 001F  
                                 _nout 00E5                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 25BA                                   btemp 003D  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0029  
            __end_of_SPI1_Exchange8bit 4D58                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 4B90                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005E  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 4E6A  
                     __end_of_INT1_ISR 4E7A                       __end_of_INT2_ISR 4E8A  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 3BEC  
        __end_of_OSCILLATOR_Initialize 4E28                                  PRLOCK 0039EF  
                      __end_of___aodiv 2AF8                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 2FB4                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 FF77  
                                STR_11 FF50                                  STR_12 FF89  
                                STR_13 FF1C                                  STR_21 FEC1  
                                STR_14 FF65                                  STR_15 FFF5  
                                STR_16 FF1C                                  STR_25 FFC6  
                                STR_17 FF36                          __CFG_WDTE$OFF 000000  
                                STR_18 FFE0                                  STR_19 FFFC  
                                STR_27 FFF9                                  STR_29 FFF9  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005E  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 4EE4      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 4B68                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 439A                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 4DE2                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002E                                  _flags 0021  
                                _fputc 33E0             __size_of_send_lcd_cmd_long 0028  
                                _fputs 3E80                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005E                                  _srand 4802  
                                _width 001D                                  _putch 4DAC  
             _INT1_SetInterruptHandler 4AF0                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003D                                  ltemp1 0041  
                                ltemp2 0045               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003D                                  ttemp1 0040  
                                ttemp2 0043                                  ttemp3 0046  
                                ttemp5 003E                                  ttemp6 0041  
                                ttemp7 0045                         _secs_gem_state 39D4  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 4A50  
          _UART1_SetRxInterruptHandler 4A28                                  wtemp0 003D  
                                wtemp1 003F                                  wtemp2 0041  
                                wtemp3 0043                                  wtemp4 0045  
                                wtemp5 0047                                  wtemp8 003E  
                      __end_of_sprintf 3722                        __end_of_strncmp 33E0  
                  ??_UART1_tx_vect_isr 005E              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 4BB6               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 4510                  __end_of_ringBufS_init 49B0  
                      __initialization 3722                      _UART2_rx_vect_isr 4BE0  
                         __end_of_ctoa 4032                           __end_of_main 08BA  
                         __end_of_dtoa 1CB8                           __end_of_stoa 2878  
           __size_of_UART2_is_rx_ready 0008                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 005E             __size_of_UART2_is_tx_ready 0008  
             _TMR5_SetInterruptHandler 4AA0                          __activetblptr 000003  
                          _s10f1_opcmd 459C              __size_of_DMA1_DMASCNT_ISR 0010  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005E  
            __end_of_UART1_tx_vect_isr 4B8E                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 4A50                       _UART1_Initialize 4172  
                    _UART2_tx_vect_isr 4BB8                     _UART2_Transmit_ISR 4890  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005E                                 _MD1SRC 003CFC  
               __end_of_secs_gem_state 3A96                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1145 4392  
                       __CFG_WDTCCS$SC 000000                                 u131_48 4CC4  
                               u133_48 4CE6                                 u129_48 4CA2  
                               _SCANPR 0039F7                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 u369_40 4DEA  
                               u369_46 4DEC                                 u393_48 4C3A  
                               _OSCFRQ 0039DF                                 u396_48 4C5E  
             __end_of_send_lcd_cmd_dma 4346                    ??_UART2_tx_vect_isr 005E  
            __end_of_UART2_rx_vect_isr 4C06             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 4E8A                       _UART2_Initialize 4238  
                               _WaitMs 4796   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 3F18  
                               _memset 22CE                                 clear_0 37C8  
                               clear_1 37D6                                 clear_2 37E8  
                               clear_3 37F4                                 clear_4 3800  
                               _printf 41D6                     _eaDogM_WriteString 3BEC  
                            ?_ADCC_ISR 005E                                 _strlen 3DDE  
                   __size_of_TimerDone 0024                           __pdataBIGRAM 03F6  
                      _ADCC_Initialize 4480                         _PMD_Initialize 4E28  
 __end_of_INT2_DefaultInterruptHandler 4EF0  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 4EEE                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 4BDE                                 lltemp0 003D  
                               lltemp1 0045                                 lltemp2 004D  
                               lltemp3 0055                           __mediumconst FEC0  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 42F2  
                     __end_of_vfprintf 3B42                             _StartTimer 475A  
                      _CLC1_Initialize 4C72          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 4556                      _SYSTEM_Initialize 45E0  
                           __accesstop 0060                __end_of__initialization 3812  
                            ?_INT0_ISR 005E                              ?_INT1_ISR 005E  
                            ?_INT2_ISR 005E              __end_of_CLKREF_Initialize 4E94  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 4622                 __end_of_ringBufS_flush 3FAA  
                       __pcstackCOMRAM 005E                             ___inthi_sp 0EC4  
                         __pidataBANK0 4436                           __pidataBANK1 3C94  
                         __pidataBANK3 4032                              ?_TMR5_ISR 005E  
                            ?_TMR6_ISR 005E                         ivt0x8_undefint 00AC  
                        __end_of_fputc 3504                          __end_of_fputs 3F18  
                        __end_of_srand 4836                  __end_of_TMR5_CallBack 4C72  
                        __end_of_putch 4DC6                __end_of_TMR6_Initialize 4A78  
               __end_of_PMD_Initialize 4E3C                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005E                  __end_of_TMR6_CallBack 4C4E  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 4EA0       __end_of_INT2_SetInterruptHandler 4AF0  
             _UART2_RxInterruptHandler 0011              __end_of_SYSTEM_Initialize 4622  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 4D90                             __pbssBANK0 00AA  
                           __pbssBANK1 01A6                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001A  
                           ??_INT0_ISR 005E                             ??_INT1_ISR 005E  
                           ??_INT2_ISR 005E                      __end_of_TimerDone 4C2A  
                     _DMA1_DMADCNT_ISR 4E94              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                           _hb_message 439A                  __end_of_wait_lcd_done 4D74  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 4AA0  
              __end_of_ADCC_Initialize 44CA                             ??_TMR5_ISR 00EF  
                           ??_TMR6_ISR 005E                     __size_of_secs_send 027C  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 4CFA                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005E                       _DMA1_DMASCNT_ISR 4E3C  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 4C94  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005E                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 050C                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 4DAC  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 4662  
                   __end_of_UART1_Read 475A                     __end_of_UART2_Read 471C  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 41D6  
                      __size_of_WaitMs 0036                                ___aodiv 2878  
                              ___aomod 2D74                             _m_protocol 08BA  
            __end_of_UART1_Receive_ISR 4D1A                   __end_of_init_display 3902  
                              __pcinit 3722                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 4E4C                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 0000                                __ptext1 1FC4  
                              __ptext2 2AF8                                __ptext3 3902  
                              __ptext4 48BC                                __ptext5 4EB6  
                              __ptext6 4662                                __ptext7 48E6  
                              __ptext8 4EBE                                __ptext9 1CB8  
                    _UART2_Receive_ISR 4D1A                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us522999 1852                                us283999 2AE2  
                _OSCILLATOR_Initialize 4E12                                us294999 2FA2  
                         __size_of_abs 0046                                _r_block 00B8  
                              us378999 1FB6                                us539999 25CC  
                         __size_of_pad 0114                                _mode_sw 0030  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 4296                     m_protocol@rxData_l 002F  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 3618  
                              _strncmp 31E4                   end_of_initialization 3812  
                    __end_of_secs_send 2D74               _INT2_SetInterruptHandler 4AC8  
             __size_of_secs_II_message 030C                             _r_protocol 13A4  
  __end_of_UART1_SetTxInterruptHandler 4A28            _UART1_SetTxInterruptHandler 4A00  
  __end_of_UART2_SetRxInterruptHandler 4A00            _UART2_SetRxInterruptHandler 49D8  
                           _t_protocol 1FC4                      __end_of_vfpfcnvrt 13A4  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 4EE2  
            __end_of_UART2_Receive_ISR 4D3A                         wdtdelay@dcount 00D8  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005F  
                       _block_checksum 3902                  _INT1_InterruptHandler 0017  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 4A78  
                _TMR5_InterruptHandler 00DC   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002C    __end_of_ADCC_SetADIInterruptHandler 4B68  
          _ADCC_SetADIInterruptHandler 4B40                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 40A2  
                      _SPI1_Initialize 4DFC                       _UART1_put_buffer 48E6  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                      r_protocol@b_block 0023  
                       __end_of_WaitMs 47CC           __end_of_INTERRUPT_Initialize 4172  
               __end_of_block_checksum 39D4   __end_of_INT0_DefaultInterruptHandler 4EEC  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 4EEA  
           __size_of_UART1_Receive_ISR 0020                          __pidataBIGRAM 2FB4  
                        __pidataCOMRAM 4EF2                      __size_of_TMR5_ISR 0052  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 25BA                         __end_of_printf 4238  
             __end_of_DMA1_DMADCNT_ISR 4E9E                       _UART2_put_buffer 48BC  
                __end_of_INT0_CallBack 4CB6                         __end_of_strlen 3E80  
                  start_initialization 3722   __end_of_TMR5_DefaultInterruptHandler 4DFC  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 4DE2  
      __size_of_PIN_MANAGER_Initialize 00A4                            __end_of_abs 4510  
                __end_of_INT1_CallBack 4CD8                            __end_of_pad 3618  
                 __size_of_Default_ISR 0006                    __size_of_hb_message 0050  
                 __end_of_send_lcd_cmd 4988                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 4CFA                   secs_II_message@block 0001  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 4E4C  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 4EAC  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A8                              _TimerDone 4C06  
                        _ringBufS_init 4988                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 4436  
                      run_checksum@sum 0025        __end_of_eaDogM_WriteStringAtPos 4802  
              __end_of_DMA1_Initialize 410C                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 4B40                   __size_of_s10f1_opcmd 0044  
                        __pcstackBANK0 00EF                __end_of_SPI1_Initialize 4E12  
             _UART1_RxInterruptHandler 000B               _UART2_TxInterruptHandler 000E  
                  __size_of_m_protocol 05DE              __size_of_ringBufS_put_dma 00AA  
                         _init_display 3818                 __end_of_DMA1_DMAOR_ISR 4EB6  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0014  
                _TMR6_InterruptHandler 00DF                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 3D3A                   __end_of_wait_lcd_set 4EDC  
                        __pmediumconst FEC0                              __ptext100 4BB8  
                            __ptext101 4890                              __ptext110 4EAC  
                            __ptext102 4BE0                              __ptext111 4348  
                            __ptext103 4D1A                              __ptext112 4622  
                            __ptext104 4DC8                              __ptext113 4C4E  
                            __ptext105 4C2A                              __ptext114 4DE2  
                            __ptext106 4556                              __ptext115 0000  
                            __ptext107 4E3C                              __ptext108 4E94  
                            __ptext109 4EA0                     __end_of_StartTimer 4796  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 00AC  
                             _ADCC_ISR 4838                    __size_of_r_protocol 0494  
               __CFG_BBSIZE$BBSIZE_512 000000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 030A                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                         __size_of_fputs 0098  
                       __size_of_srand 0034                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 410C  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005E                               _INT0_ISR 4E5C  
                             _INT1_ISR 4E6C                               _INT2_ISR 4E7C  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 2AF8                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 00AA                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0343  
                            _ring_buf2 0300                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u480_48 4BA2  
                             _PIR5bits 0039A5                               i2u482_48 4BCA  
                             i2u484_48 4BF2                               i2u476_48 4850  
                             _PIR7bits 0039A7                               i2u478_48 4B7A  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 4890  
                             _TMR5_ISR 4348                               _TMR6_ISR 4DC8  
                            _vfpfcnvrt 0E98                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 4C4E                              _start_lcd 4EDC  
            __size_of_send_lcd_cmd_dma 0054                          _TMR6_CallBack 4C2A  
             __end_of_UART1_put_buffer 4910                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 46DE  
                  __end_of_UART2_Write 46A0               __size_of_TMR6_Initialize 0028  
                   __end_of_hb_message 43EA                            _INTCON0bits 003FD2  
                            copy_data0 3736                              copy_data1 375C  
                            copy_data2 377E                              copy_data3 37A0  
             _INT0_SetInterruptHandler 4B18                 _uart1TxBufferRemaining 003A  
  __end_of_UART2_SetTxInterruptHandler 49D8            _UART2_SetTxInterruptHandler 49B0  
                         _uart1RxCount 0037               __end_of_UART2_put_buffer 48E6  
                         _uart2RxCount 0031                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 0036                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 4938                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 4D58  
                         _send_lcd_cmd 4960                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 4D74  
                __end_of_DMA1_DMAA_ISR 4EAA   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005E               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 4E5A                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005F                               __ptext10 459C  
                             __ptext11 4802                               __ptext20 475A  
                             __ptext12 3618                               __ptext21 4EC6  
                             __ptext13 13A4                               __ptext30 439A  
                             __ptext22 46DE                               __ptext14 46A0  
                             __ptext31 47CC                               __ptext23 4ECE  
                             __ptext15 08BA                               __ptext40 22CE  
                             __ptext32 3BEC                               __ptext24 471C  
                             __ptext16 39D4                               __ptext41 41D6  
                             __ptext33 4E4C                               __ptext25 3818  
                             __ptext17 4910                               __ptext50 3FAA  
                             __ptext42 3A96                               __ptext34 42F2  
                             __ptext26 4938                               __ptext18 4796  
                             __ptext51 3504                               __ptext43 0E98  
                             __ptext35 4ED6                               __ptext27 4960  
                             __ptext19 4C06                               __ptext60 49D8  
                             __ptext52 3DDE                               __ptext44 31E4  
                             __ptext36 4D58                               __ptext28 4D3A  
                             __ptext61 4172                               __ptext53 3E80  
                             __ptext45 25BA                               __ptext37 4296  
                             __ptext29 4988                               __ptext70 3D3A  
                             __ptext62 4A00                               __ptext54 33E0  
                             __ptext46 1838                               __ptext38 4EDC  
                             __ptext71 4E12                               __ptext63 4A28  
                             __ptext55 4DAC                               __ptext47 44CA  
                             __ptext39 3F18                               __ptext80 4E8A  
                             __ptext72 4D74                               __ptext64 4A50  
                             __ptext56 3B42                               __ptext48 2D74  
                             __ptext81 4C72                               __ptext73 410C  
                             __ptext65 4A78                               __ptext57 45E0  
                             __ptext49 2878                               __ptext90 4E7C  
                             __ptext82 4480                               __ptext74 43EA  
                             __ptext66 4510                               __ptext58 4238  
                             __ptext91 4CD8                               __ptext83 4B40  
                             __ptext75 4AC8                               __ptext67 4AA0  
                             __ptext59 49B0                               __ptext92 4EEE  
                             __ptext84 4E5C                               __ptext76 4AF0  
                             __ptext68 4DFC                               __ptext93 4EE4  
                             __ptext85 4C94                               __ptext77 4B18  
                             __ptext69 4E28                               __ptext94 4838  
                             __ptext86 4EEA                               __ptext78 4D90  
                             __ptext95 4EF0                               __ptext87 4E6C  
                             __ptext79 40A2                               __ptext96 4B68  
                             __ptext88 4CB6                               __ptext97 4864  
                             __ptext89 4EEC                               __ptext98 4B90  
                             __ptext99 4CFA                        _secs_II_message 1CB8  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 010A  
                     __size_of_strncmp 01FC                       _ringBufS_put_dma 3B42  
                   __end_of_m_protocol 0E98                          __size_of_ctoa 0088  
                        __size_of_main 08BA                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005E  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 00E2                              stoa@F1144 0060  
                   ??_DMA1_DMASCNT_ISR 005F                               _spi_link 00C5  
                             _wdtdelay 4296             __end_of_UART2_Transmit_ISR 48BC  
                             _vfprintf 3A96                    secs_gem_state@block 002B  
                    _UART1_is_rx_ready 4ECE                            _UART1_Write 46A0  
 __end_of_INT1_DefaultInterruptHandler 4EEE  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 4EEC                            _UART2_Write 4662  
                    _UART1_is_tx_ready 4EBE                        r_protocol@retry 005D  
                    t_protocol@requeue 002C                          ??_Default_ISR 005E  
                   __end_of_r_protocol 1838                            _uart1RxHead 0039  
                          _uart1TxHead 003C                            _uart2RxHead 0033  
                          _uart1RxTail 0038                            _uart2TxHead 0036  
                          _uart1TxTail 003B                            _uart2RxTail 0032  
                          _uart2TxTail 0035                           _wait_lcd_set 4ED6  
                   _EXT_INT_Initialize 43EA   __end_of_TMR6_DefaultInterruptHandler 459C  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 4556  
                   __end_of_t_protocol 22CE   __end_of_ADCC_DefaultInterruptHandler 4EF2  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 4EF0  
                             intlevel2 0000                      _send_lcd_cmd_long 4938  
              __size_of_secs_gem_state 00C2                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 3C94                __end_of_NCO1_Initialize 4D90  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 4ED6  
                           _UART1_Read 471C                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 46DE              __end_of_UART1_is_tx_ready 4EC6  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 4EC6  
               _uart2TxBufferRemaining 0034                      _UART2_is_tx_ready 4EB6  
                     _send_lcd_cmd_dma 42F2                  TMR5_ISR@CountCallBack 0027  
              __end_of_secs_II_message 1FC4       __end_of_INT1_SetInterruptHandler 4B18  
            __size_of_UART1_Initialize 0064                        t_protocol@block 00D1  
                     ??_DMA1_DMAOR_ISR 005F               _UART1_TxInterruptHandler 0008  
                      t_protocol@retry 002D              __end_of_send_lcd_cmd_long 4960  
                  __end_of_Default_ISR 4EEA         __end_of_PIN_MANAGER_Initialize 3DDE  
                __size_of_run_checksum 0028                _eaDogM_WriteStringAtPos 47CC  
            __size_of_UART2_Initialize 005E  
