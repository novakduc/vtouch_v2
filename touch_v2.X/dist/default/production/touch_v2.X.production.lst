

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec  7 18:13:17 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	text150,global,reloc=4,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=4,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=4,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=4,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   189                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   190                           	psect	text163,global,reloc=4,class=CODE,delta=1
   191                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   192                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   193  0000                     
   194                           ; Version 2.10
   195                           ; Generated 31/07/2019 GMT
   196                           ; 
   197                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   198                           ; All rights reserved.
   199                           ; 
   200                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   201                           ; 
   202                           ; Redistribution and use in source and binary forms, with or without modification, are
   203                           ; permitted provided that the following conditions are met:
   204                           ; 
   205                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   206                           ;        conditions and the following disclaimer.
   207                           ; 
   208                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   209                           ;        of conditions and the following disclaimer in the documentation and/or other
   210                           ;        materials provided with the distribution.
   211                           ; 
   212                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   213                           ;        software without specific prior written permission.
   214                           ; 
   215                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   216                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   217                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   218                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   219                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   220                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   221                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   222                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   223                           ; 
   224                           ; 
   225                           ; Code-generator required, PIC18F57K42 Definitions
   226                           ; 
   227                           ; SFR Addresses
   228  0000                     
   229 ;;_k	offset	0
   230 ;;_j	offset	1
   231 ;;_i	offset	2
   232 ;;_inp_index	offset	3
   233 ;;_mode	offset	4
   234 ;;_channel	offset=-1 (param)
   235 ;;_s	offset=-2 (param)
   236 ;;_cmd	offset=-1 (param)
   237 ;;_cmd	offset=-1 (param)
   238 ;;_data	offset=-1 (param)
   239 ;;__this	offset=-2 (param)
   240 ;;_cvoltage	offset=-4 (param)
   241 ;;_h	offset=-1 (param)
   242 ;;_h	offset=-1 (param)
   243 ;;_i	offset=-1 (param)
   244 ;;_cmd	offset=-1 (param)
   245 ;;_i	offset	0
   246 ;;_chan	offset=-1 (param)
   247 ;;_to_what	offset=-2 (param)
   248 ;;_u	offset	0
   249 ;;_s	offset=-2 (param)
   250 ;;_index	offset=-1 (param)
   251 ;;_arg	offset	0
   252 ;;_exp	offset	4
   253 ;;_sign	offset=-1 (param)
   254 ;;_val	offset=-5 (param)
   255 ;;_h	offset=-1 (param)
   256 ;;_flipper	offset=-1 (param)
   257 ;;_f	offset	0
   258 ;;_ap	offset	6
   259 ;;_s	offset=-3 (param)
   260 ;;_fmt	offset=-5 (param)
   261 ;;_line	offset=-1 (param)
   262 ;;_vterm	offset=-2 (param)
   263 ;;_numMilliseconds	offset=-2 (param)
   264 ;;_vterm	offset=-1 (param)
   265 ;;_r	offset=-1 (param)
   266 ;;_c	offset=-2 (param)
   267 ;;_strPtr	offset=-4 (param)
   268 ;;_strPtr	offset=-1 (param)
   269 ;;_delay	offset=-4 (param)
   270 ;;_strPtr	offset=-2 (param)
   271 ;;__this	offset=-2 (param)
   272 ;;_clearBuffer	offset=-3 (param)
   273 ;;_s	offset	0
   274 ;;_k	offset	2
   275 ;;_dest	offset=-2 (param)
   276 ;;_c	offset=-4 (param)
   277 ;;_n	offset=-6 (param)
   278 ;;_ap	offset	0
   279 ;;_fmt	offset=-3 (param)
   280 ;;_cfmt	offset	0
   281 ;;_fp	offset=-2 (param)
   282 ;;_fmt	offset=-4 (param)
   283 ;;_ap	offset=-6 (param)
   284 ;;_vfpfcnvrt$5190	offset	0
   285 ;;_vfpfcnvrt$5196	offset	2
   286 ;;_vfpfcnvrt$5189	offset	4
   287 ;;_llu	offset	6
   288 ;;_ll	offset	14
   289 ;;_f	offset	22
   290 ;;_ct	offset	26
   291 ;;_cp	offset	29
   292 ;;_c	offset	31
   293 ;;_fp	offset=-2 (param)
   294 ;;_fmt	offset=-4 (param)
   295 ;;_ap	offset=-6 (param)
   296 ;;_xtoa$5175	offset	0
   297 ;;_xtoa$5174	offset	2
   298 ;;_n	offset	4
   299 ;;_c	offset	12
   300 ;;_i	offset	14
   301 ;;_w	offset	16
   302 ;;_p	offset	18
   303 ;;_fp	offset=-2 (param)
   304 ;;_d	offset=-10 (param)
   305 ;;_x	offset=-11 (param)
   306 ;;_toupper$5950	offset	0
   307 ;;_c	offset=-2 (param)
   308 ;;_c	offset=-2 (param)
   309 ;;_c	offset=-2 (param)
   310 ;;_r	offset	0
   311 ;;_l	offset	2
   312 ;;__l	offset=-2 (param)
   313 ;;__r	offset=-4 (param)
   314 ;;_n	offset=-6 (param)
   315 ;;_nuls	offset	0
   316 ;;_l	offset	7
   317 ;;_p	offset	9
   318 ;;_cp	offset	11
   319 ;;_w	offset	13
   320 ;;_i	offset	15
   321 ;;_fp	offset=-2 (param)
   322 ;;_s	offset=-4 (param)
   323 ;;_efgtoa$5154	offset	0
   324 ;;_efgtoa$5153	offset	2
   325 ;;_efgtoa$5152	offset	4
   326 ;;_efgtoa$5148	offset	6
   327 ;;_efgtoa$5144	offset	8
   328 ;;_efgtoa$5143	offset	10
   329 ;;_u	offset	12
   330 ;;_g	offset	16
   331 ;;_l	offset	20
   332 ;;_h	offset	24
   333 ;;_ou	offset	28
   334 ;;_n	offset	32
   335 ;;_e	offset	34
   336 ;;_i	offset	36
   337 ;;_w	offset	38
   338 ;;_p	offset	40
   339 ;;_sign	offset	42
   340 ;;_d	offset	44
   341 ;;_ne	offset	46
   342 ;;_m	offset	48
   343 ;;_pp	offset	50
   344 ;;_t	offset	52
   345 ;;_mode	offset	54
   346 ;;_nmode	offset	55
   347 ;;_fp	offset=-2 (param)
   348 ;;_f	offset=-6 (param)
   349 ;;_c	offset=-7 (param)
   350 ;;_tolower$5935	offset	0
   351 ;;_c	offset=-2 (param)
   352 ;;_c	offset=-2 (param)
   353 ;;_d	offset	0
   354 ;;_s	offset	2
   355 ;;_dest	offset=-2 (param)
   356 ;;_src	offset=-4 (param)
   357 ;;_u	offset	0
   358 ;;_m	offset	4
   359 ;;_e	offset	8
   360 ;;_x	offset=-4 (param)
   361 ;;_u	offset	0
   362 ;;_e	offset	4
   363 ;;_x	offset=-4 (param)
   364 ;;_exp1	offset	0
   365 ;;_sign1	offset	1
   366 ;;_f1	offset=-4 (param)
   367 ;;_f1	offset=-4 (param)
   368 ;;_ff1	offset=-4 (param)
   369 ;;_ff2	offset=-8 (param)
   370 ;;_ff1	offset=-4 (param)
   371 ;;_ff2	offset=-8 (param)
   372 ;;_grs	offset	0
   373 ;;_rem	offset	4
   374 ;;_new_exp	offset	8
   375 ;;_aexp	offset	10
   376 ;;_bexp	offset	11
   377 ;;_sign	offset	12
   378 ;;_b	offset=-4 (param)
   379 ;;_a	offset=-8 (param)
   380 ;;_sign	offset	0
   381 ;;_counter	offset	1
   382 ;;_dividend	offset=-2 (param)
   383 ;;_divisor	offset=-4 (param)
   384 ;;_quotient	offset	0
   385 ;;_sign	offset	2
   386 ;;_counter	offset	3
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_dtoa$5120	offset	0
   390 ;;_n	offset	2
   391 ;;_i	offset	10
   392 ;;_s	offset	12
   393 ;;_w	offset	14
   394 ;;_p	offset	16
   395 ;;_fp	offset=-2 (param)
   396 ;;_d	offset=-10 (param)
   397 ;;_a	offset=-2 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-8 (param)
   401 ;;_divisor	offset=-16 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	8
   404 ;;_counter	offset	9
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_w	offset	0
   408 ;;_fp	offset=-2 (param)
   409 ;;_c	offset=-3 (param)
   410 ;;_w	offset	0
   411 ;;_i	offset	2
   412 ;;_fp	offset=-2 (param)
   413 ;;_buf	offset=-4 (param)
   414 ;;_p	offset=-6 (param)
   415 ;;_a	offset	0
   416 ;;_s	offset=-2 (param)
   417 ;;_i	offset	0
   418 ;;_c	offset	2
   419 ;;_s	offset=-2 (param)
   420 ;;_fp	offset=-4 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_fp	offset=-4 (param)
   423 ;;_c	offset=-1 (param)
   424 ;;__this	offset=-2 (param)
   425 ;;_c	offset=-3 (param)
   426 ;;_atoi$5673	offset	0
   427 ;;_atoi$5671	offset	2
   428 ;;_atoi$5672	offset	4
   429 ;;_n	offset	5
   430 ;;_neg	offset	7
   431 ;;_s	offset=-2 (param)
   432 ;;_isspace$5711	offset	0
   433 ;;_c	offset=-2 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_vterm	offset=-1 (param)
   436 ;;_new_response_info	offset=-1 (param)
   437 ;;_new_response_info	offset=-1 (param)
   438 ;;_level	offset=-2 (param)
   439 ;;_dutyValue	offset=-2 (param)
   440 ;;_timer	offset=-1 (param)
   441 ;;_timer	offset=-1 (param)
   442 ;;_count	offset=-3 (param)
   443 ;;_h	offset=-1 (param)
   444 ;;_lp_speed	offset	0
   445 ;;_new	offset=-4 (param)
   446 ;;_bn	offset=-5 (param)
   447 ;;_slow	offset=-6 (param)
   448 ;;_b	offset=-4 (param)
   449 ;;_a	offset=-8 (param)
   450 ;;_grs	offset	0
   451 ;;_bexp	offset	1
   452 ;;_aexp	offset	2
   453 ;;_signs	offset	3
   454 ;;_b	offset=-4 (param)
   455 ;;_a	offset=-8 (param)
   456 ;;_prod	offset	0
   457 ;;_grs	offset	4
   458 ;;_temp	offset	8
   459 ;;_bexp	offset	10
   460 ;;_aexp	offset	11
   461 ;;_sign	offset	12
   462 ;;_b	offset=-4 (param)
   463 ;;_a	offset=-8 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_InterruptHandler	offset=-3 (param)
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_state	offset	0
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_InterruptHandler	offset=-3 (param)
   474 ;;_InterruptHandler	offset=-3 (param)
   475 ;;_i	offset	0
   476 ;;_sw_value	offset	1
   477 ;;_timerVal	offset=-2 (param)
   478 ;;_timerVal	offset=-2 (param)
   479 ;;_log_ptr	offset	0
   480 ;;_temp	offset	2
   481 ;;_f	offset	0
   482 ;;_ap	offset	6
   483 ;;_s	offset=-3 (param)
   484 ;;_fmt	offset=-5 (param)
   485 ;;_cfmt	offset	0
   486 ;;_fp	offset=-2 (param)
   487 ;;_fmt	offset=-4 (param)
   488 ;;_ap	offset=-6 (param)
   489 ;;_vfpfcnvrt$5190	offset	0
   490 ;;_vfpfcnvrt$5196	offset	2
   491 ;;_vfpfcnvrt$5189	offset	4
   492 ;;_llu	offset	6
   493 ;;_ll	offset	14
   494 ;;_f	offset	22
   495 ;;_ct	offset	26
   496 ;;_cp	offset	29
   497 ;;_c	offset	31
   498 ;;_fp	offset=-2 (param)
   499 ;;_fmt	offset=-4 (param)
   500 ;;_ap	offset=-6 (param)
   501 ;;_xtoa$5175	offset	0
   502 ;;_xtoa$5174	offset	2
   503 ;;_n	offset	4
   504 ;;_c	offset	12
   505 ;;_i	offset	14
   506 ;;_w	offset	16
   507 ;;_p	offset	18
   508 ;;_fp	offset=-2 (param)
   509 ;;_d	offset=-10 (param)
   510 ;;_x	offset=-11 (param)
   511 ;;_toupper$5950	offset	0
   512 ;;_c	offset=-2 (param)
   513 ;;_c	offset=-2 (param)
   514 ;;_c	offset=-2 (param)
   515 ;;_r	offset	0
   516 ;;_l	offset	2
   517 ;;__l	offset=-2 (param)
   518 ;;__r	offset=-4 (param)
   519 ;;_n	offset=-6 (param)
   520 ;;_nuls	offset	0
   521 ;;_l	offset	7
   522 ;;_p	offset	9
   523 ;;_cp	offset	11
   524 ;;_w	offset	13
   525 ;;_i	offset	15
   526 ;;_fp	offset=-2 (param)
   527 ;;_s	offset=-4 (param)
   528 ;;_efgtoa$5154	offset	0
   529 ;;_efgtoa$5153	offset	2
   530 ;;_efgtoa$5152	offset	4
   531 ;;_efgtoa$5148	offset	6
   532 ;;_efgtoa$5144	offset	8
   533 ;;_efgtoa$5143	offset	10
   534 ;;_u	offset	12
   535 ;;_g	offset	16
   536 ;;_l	offset	20
   537 ;;_h	offset	24
   538 ;;_ou	offset	28
   539 ;;_n	offset	32
   540 ;;_e	offset	34
   541 ;;_i	offset	36
   542 ;;_w	offset	38
   543 ;;_p	offset	40
   544 ;;_sign	offset	42
   545 ;;_d	offset	44
   546 ;;_ne	offset	46
   547 ;;_m	offset	48
   548 ;;_pp	offset	50
   549 ;;_t	offset	52
   550 ;;_mode	offset	54
   551 ;;_nmode	offset	55
   552 ;;_fp	offset=-2 (param)
   553 ;;_f	offset=-6 (param)
   554 ;;_c	offset=-7 (param)
   555 ;;_tolower$5935	offset	0
   556 ;;_c	offset=-2 (param)
   557 ;;_c	offset=-2 (param)
   558 ;;_d	offset	0
   559 ;;_s	offset	2
   560 ;;_dest	offset=-2 (param)
   561 ;;_src	offset=-4 (param)
   562 ;;_u	offset	0
   563 ;;_m	offset	4
   564 ;;_e	offset	8
   565 ;;_x	offset=-4 (param)
   566 ;;_u	offset	0
   567 ;;_e	offset	4
   568 ;;_x	offset=-4 (param)
   569 ;;_exp1	offset	0
   570 ;;_sign1	offset	1
   571 ;;_f1	offset=-4 (param)
   572 ;;_b	offset=-4 (param)
   573 ;;_a	offset=-8 (param)
   574 ;;_grs	offset	0
   575 ;;_bexp	offset	1
   576 ;;_aexp	offset	2
   577 ;;_signs	offset	3
   578 ;;_b	offset=-4 (param)
   579 ;;_a	offset=-8 (param)
   580 ;;_f1	offset=-4 (param)
   581 ;;_prod	offset	0
   582 ;;_grs	offset	4
   583 ;;_temp	offset	8
   584 ;;_bexp	offset	10
   585 ;;_aexp	offset	11
   586 ;;_sign	offset	12
   587 ;;_b	offset=-4 (param)
   588 ;;_a	offset=-8 (param)
   589 ;;_ff1	offset=-4 (param)
   590 ;;_ff2	offset=-8 (param)
   591 ;;_ff1	offset=-4 (param)
   592 ;;_ff2	offset=-8 (param)
   593 ;;_grs	offset	0
   594 ;;_rem	offset	4
   595 ;;_new_exp	offset	8
   596 ;;_aexp	offset	10
   597 ;;_bexp	offset	11
   598 ;;_sign	offset	12
   599 ;;_b	offset=-4 (param)
   600 ;;_a	offset=-8 (param)
   601 ;;_sign	offset	0
   602 ;;_counter	offset	1
   603 ;;_dividend	offset=-2 (param)
   604 ;;_divisor	offset=-4 (param)
   605 ;;_quotient	offset	0
   606 ;;_sign	offset	2
   607 ;;_counter	offset	3
   608 ;;_dividend	offset=-2 (param)
   609 ;;_divisor	offset=-4 (param)
   610 ;;_dtoa$5120	offset	0
   611 ;;_n	offset	2
   612 ;;_i	offset	10
   613 ;;_s	offset	12
   614 ;;_w	offset	14
   615 ;;_p	offset	16
   616 ;;_fp	offset=-2 (param)
   617 ;;_d	offset=-10 (param)
   618 ;;_a	offset=-2 (param)
   619 ;;_sign	offset	0
   620 ;;_counter	offset	1
   621 ;;_dividend	offset=-8 (param)
   622 ;;_divisor	offset=-16 (param)
   623 ;;_quotient	offset	0
   624 ;;_sign	offset	8
   625 ;;_counter	offset	9
   626 ;;_dividend	offset=-8 (param)
   627 ;;_divisor	offset=-16 (param)
   628 ;;_w	offset	0
   629 ;;_fp	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_w	offset	0
   632 ;;_i	offset	2
   633 ;;_fp	offset=-2 (param)
   634 ;;_buf	offset=-4 (param)
   635 ;;_p	offset=-6 (param)
   636 ;;_a	offset	0
   637 ;;_s	offset=-2 (param)
   638 ;;_i	offset	0
   639 ;;_c	offset	2
   640 ;;_s	offset=-2 (param)
   641 ;;_fp	offset=-4 (param)
   642 ;;_c	offset=-2 (param)
   643 ;;_fp	offset=-4 (param)
   644 ;;_c	offset=-1 (param)
   645 ;;__this	offset=-2 (param)
   646 ;;_c	offset=-3 (param)
   647 ;;_atoi$5673	offset	0
   648 ;;_atoi$5671	offset	2
   649 ;;_atoi$5672	offset	4
   650 ;;_n	offset	5
   651 ;;_neg	offset	7
   652 ;;_s	offset=-2 (param)
   653 ;;_isspace$5711	offset	0
   654 ;;_c	offset=-2 (param)
   655 ;;_c	offset=-2 (param)
   656 ;;_dsize	offset=-2 (param)
   657 ;;_arg	offset	0
   658 ;;_exp	offset	4
   659 ;;_sign	offset=-1 (param)
   660 ;;_val	offset=-5 (param)
   661 ;;_cvoltage	offset=-4 (param)
   662 ;;_channel	offset=-1 (param)
   663 ;;_i	offset	0
   664                           
   665                           	psect	idataBIGRAM
   666  016644                     __pidataBIGRAM:
   667                           	opt callstack 0
   668                           
   669                           ;initializer for _port_data
   670  016644  FF                 	db	255
   671  016645  00                 	db	0
   672  016646  FF                 	db	255
   673  016647  00                 	db	0
   674  016648  FF                 	db	255
   675  016649  00                 	db	0
   676  01664A  FF                 	db	255
   677  01664B  00                 	db	0
   678  01664C  FF                 	db	255
   679  01664D  00                 	db	0
   680  01664E  FF                 	db	255
   681  01664F  00                 	db	0
   682  016650  FF                 	db	255
   683  016651  00                 	db	0
   684  016652  FF                 	db	255
   685  016653  00                 	db	0
   686  016654  00                 	db	0
   687  016655  00                 	db	0
   688  016656  00                 	db	0
   689  016657  00                 	db	0
   690  016658  00                 	db	0
   691  016659  00                 	db	0
   692  01665A  00                 	db	0
   693  01665B  00                 	db	0
   694  01665C  00                 	db	0
   695  01665D  00                 	db	0
   696  01665E  00                 	db	0
   697  01665F  00                 	db	0
   698  016660  00                 	db	0
   699  016661  00                 	db	0
   700  016662  00                 	db	0
   701  016663  00                 	db	0
   702  016664  00                 	db	0
   703  016665  00                 	db	0
   704  016666  00                 	db	0
   705  016667  00                 	db	0
   706  016668  00                 	db	0
   707  016669  00                 	db	0
   708  01666A  00                 	db	0
   709  01666B  00                 	db	0
   710  01666C  00                 	db	0
   711  01666D  00                 	db	0
   712  01666E  00                 	db	0
   713  01666F  00                 	db	0
   714  016670  00                 	db	0
   715  016671  00                 	db	0
   716  016672  00                 	db	0
   717  016673  00                 	db	0
   718  016674  00                 	db	0
   719  016675  00                 	db	0
   720  016676  00                 	db	0
   721  016677  00                 	db	0
   722  016678  00                 	db	0
   723  016679  00                 	db	0
   724  01667A  00                 	db	0
   725  01667B  00                 	db	0
   726  01667C  00                 	db	0
   727  01667D  00                 	db	0
   728  01667E  00                 	db	0
   729  01667F  00                 	db	0
   730  016680  00                 	db	0
   731  016681  00                 	db	0
   732  016682  00                 	db	0
   733  016683  00                 	db	0
   734  016684  00                 	db	0
   735  016685  00                 	db	0
   736  016686  00                 	db	0
   737  016687  00                 	db	0
   738  016688  00                 	db	0
   739  016689  00                 	db	0
   740  01668A  00                 	db	0
   741  01668B  00                 	db	0
   742  01668C  00                 	db	0
   743  01668D  00                 	db	0
   744  01668E  00                 	db	0
   745  01668F  00                 	db	0
   746  016690  00                 	db	0
   747  016691  00                 	db	0
   748  016692  00                 	db	0
   749  016693  00                 	db	0
   750  016694  00                 	db	0
   751  016695  00                 	db	0
   752  016696  00                 	db	0
   753  016697  00                 	db	0
   754  016698  00                 	db	0
   755  016699  00                 	db	0
   756  01669A  00                 	db	0
   757  01669B  00                 	db	0
   758  01669C  00                 	db	0
   759  01669D  00                 	db	0
   760  01669E  00                 	db	0
   761  01669F  00                 	db	0
   762  0166A0  00                 	db	0
   763  0166A1  00                 	db	0
   764  0166A2  00                 	db	0
   765  0166A3  00                 	db	0
   766  0166A4  00                 	db	0
   767  0166A5  00                 	db	0
   768  0166A6  00                 	db	0
   769  0166A7  00                 	db	0
   770  0166A8  00                 	db	0
   771  0166A9  00                 	db	0
   772  0166AA  00                 	db	0
   773  0166AB  00                 	db	0
   774  0166AC  00                 	db	0
   775  0166AD  00                 	db	0
   776  0166AE  00                 	db	0
   777  0166AF  00                 	db	0
   778  0166B0  00                 	db	0
   779  0166B1  00                 	db	0
   780  0166B2  00                 	db	0
   781  0166B3  00                 	db	0
   782  0166B4  00                 	db	0
   783  0166B5  00                 	db	0
   784  0166B6  00                 	db	0
   785  0166B7  00                 	db	0
   786  0166B8  00                 	db	0
   787  0166B9  00                 	db	0
   788  0166BA  00                 	db	0
   789  0166BB  00                 	db	0
   790  0166BC  00                 	db	0
   791  0166BD  00                 	db	0
   792  0166BE  00                 	db	0
   793  0166BF  00                 	db	0
   794  0166C0  00                 	db	0
   795  0166C1  00                 	db	0
   796  0166C2  00                 	db	0
   797  0166C3  00                 	db	0
   798  0166C4  00                 	db	0
   799  0166C5  00                 	db	0
   800  0166C6  00                 	db	0
   801  0166C7  00                 	db	0
   802  0166C8  00                 	db	0
   803  0166C9  00                 	db	0
   804  0166CA  00                 	db	0
   805  0166CB  00                 	db	0
   806  0166CC  00                 	db	0
   807  0166CD  00                 	db	0
   808  0166CE  00                 	db	0
   809  0166CF  00                 	db	0
   810  0166D0  00                 	db	0
   811  0166D1  00                 	db	0
   812  0166D2  00                 	db	0
   813  0166D3  00                 	db	0
   814  0166D4  00                 	db	0
   815  0166D5  00                 	db	0
   816  0166D6  00                 	db	0
   817  0166D7  00                 	db	0
   818  0166D8  00                 	db	0
   819  0166D9  00                 	db	0
   820  0166DA  00                 	db	0
   821  0166DB  00                 	db	0
   822  0166DC  00                 	db	0
   823  0166DD  00                 	db	0
   824  0166DE  00                 	db	0
   825  0166DF  00                 	db	0
   826  0166E0  00                 	db	0
   827  0166E1  00                 	db	0
   828  0166E2  00                 	db	0
   829  0166E3  00                 	db	0
   830  0166E4  00                 	db	0
   831  0166E5  00                 	db	0
   832  0166E6  00                 	db	0
   833  0166E7  00                 	db	0
   834  0166E8  00                 	db	0
   835  0166E9  00                 	db	0
   836  0166EA  00                 	db	0
   837  0166EB  00                 	db	0
   838  0166EC  00                 	db	0
   839  0166ED  00                 	db	0
   840  0166EE  00                 	db	0
   841  0166EF  00                 	db	0
   842  0166F0  00                 	db	0
   843  0166F1  00                 	db	0
   844  0166F2  00                 	db	0
   845  0166F3  00                 	db	0
   846  0166F4  00                 	db	0
   847  0166F5  00                 	db	0
   848  0166F6  00                 	db	0
   849  0166F7  00                 	db	0
   850  0166F8  00                 	db	0
   851  0166F9  00                 	db	0
   852  0166FA  00                 	db	0
   853  0166FB  00                 	db	0
   854  0166FC  00                 	db	0
   855  0166FD  00                 	db	0
   856  0166FE  00                 	db	0
   857  0166FF  00                 	db	0
   858  016700  00                 	db	0
   859  016701  00                 	db	0
   860  016702  00                 	db	0
   861  016703  00                 	db	0
   862  016704  00                 	db	0
   863  016705  00                 	db	0
   864  016706  00                 	db	0
   865  016707  00                 	db	0
   866  016708  00                 	db	0
   867  016709  00                 	db	0
   868  01670A  00                 	db	0
   869  01670B  00                 	db	0
   870  01670C  00                 	db	0
   871  01670D  00                 	db	0
   872  01670E  00                 	db	0
   873  01670F  00                 	db	0
   874  016710  00                 	db	0
   875  016711  00                 	db	0
   876  016712  00                 	db	0
   877  016713  00                 	db	0
   878  016714  00                 	db	0
   879  016715  00                 	db	0
   880  016716  00                 	db	0
   881  016717  00                 	db	0
   882  016718  00                 	db	0
   883  016719  00                 	db	0
   884  01671A  00                 	db	0
   885  01671B  00                 	db	0
   886  01671C  00                 	db	0
   887  01671D  00                 	db	0
   888  01671E  00                 	db	0
   889  01671F  00                 	db	0
   890  016720  00                 	db	0
   891  016721  00                 	db	0
   892  016722  00                 	db	0
   893  016723  00                 	db	0
   894  016724  00                 	db	0
   895  016725  00                 	db	0
   896  016726  00                 	db	0
   897  016727  00                 	db	0
   898  016728  00                 	db	0
   899  016729  00                 	db	0
   900  01672A  00                 	db	0
   901  01672B  00                 	db	0
   902  01672C  00                 	db	0
   903  01672D  00                 	db	0
   904  01672E  00                 	db	0
   905  01672F  00                 	db	0
   906  016730  00                 	db	0
   907  016731  00                 	db	0
   908  016732  00                 	db	0
   909  016733  00                 	db	0
   910  016734  00                 	db	0
   911  016735  00                 	db	0
   912  016736  00                 	db	0
   913  016737  00                 	db	0
   914  016738  00                 	db	0
   915  016739  00                 	db	0
   916  01673A  00                 	db	0
   917  01673B  00                 	db	0
   918  01673C  00                 	db	0
   919  01673D  00                 	db	0
   920  01673E  00                 	db	0
   921  01673F  00                 	db	0
   922  016740  00                 	db	0
   923  016741  00                 	db	0
   924  016742  00                 	db	0
   925  016743  00                 	db	0
   926  016744  00                 	db	0
   927  016745  00                 	db	0
   928  016746  00                 	db	0
   929  016747  00                 	db	0
   930  016748  00                 	db	0
   931  016749  00                 	db	0
   932  01674A  00                 	db	0
   933  01674B  00                 	db	0
   934  01674C  00                 	db	0
   935  01674D  00                 	db	0
   936  01674E  00                 	db	0
   937  01674F  00                 	db	0
   938  016750  00                 	db	0
   939  016751  00                 	db	0
   940  016752  00                 	db	0
   941  016753  00                 	db	0
   942  016754  00                 	db	0
   943  016755  00                 	db	0
   944  016756  00                 	db	0
   945  016757  00                 	db	0
   946  016758  00                 	db	0
   947  016759  00                 	db	0
   948  01675A  00                 	db	0
   949  01675B  00                 	db	0
   950  01675C  00                 	db	0
   951  01675D  00                 	db	0
   952  01675E  00                 	db	0
   953  01675F  00                 	db	0
   954  016760  00                 	db	0
   955  016761  00                 	db	0
   956  016762  00                 	db	0
   957  016763  00                 	db	0
   958  016764  00                 	db	0
   959  016765  00                 	db	0
   960  016766  00                 	db	0
   961  016767  00                 	db	0
   962  016768  00                 	db	0
   963  016769  00                 	db	0
   964  01676A  00                 	db	0
   965  01676B  00                 	db	0
   966  01676C  00                 	db	0
   967  01676D  00                 	db	0
   968  01676E  00                 	db	0
   969  01676F  00                 	db	0
   970  016770  00                 	db	0
   971  016771  00                 	db	0
   972  016772  00                 	db	0
   973  016773  00                 	db	0
   974  016774  00                 	db	0
   975  016775  00                 	db	0
   976  016776  00                 	db	0
   977  016777  00                 	db	0
   978  016778  00                 	db	0
   979  016779  00                 	db	0
   980  01677A  00                 	db	0
   981  01677B  00                 	db	0
   982  01677C  00                 	db	0
   983  01677D  00                 	db	0
   984  01677E  00                 	db	0
   985  01677F  00                 	db	0
   986  016780  00                 	db	0
   987  016781  00                 	db	0
   988  016782  00                 	db	0
   989  016783  00                 	db	0
   990  016784  00                 	db	0
   991  016785  00                 	db	0
   992  016786  00                 	db	0
   993  016787  00                 	db	0
   994  016788  00                 	db	0
   995  016789  00                 	db	0
   996  01678A  00                 	db	0
   997  01678B  00                 	db	0
   998  01678C  00                 	db	0
   999  01678D  00                 	db	0
  1000  01678E  00                 	db	0
  1001  01678F  00                 	db	0
  1002  016790  00                 	db	0
  1003  016791  00                 	db	0
  1004  016792  00                 	db	0
  1005  016793  00                 	db	0
  1006  016794  00                 	db	0
  1007  016795  00                 	db	0
  1008  016796  00                 	db	0
  1009  016797  00                 	db	0
  1010  016798  00                 	db	0
  1011  016799  00                 	db	0
  1012  01679A  00                 	db	0
  1013  01679B  00                 	db	0
  1014  01679C  00                 	db	0
  1015  01679D  00                 	db	0
  1016  01679E  00                 	db	0
  1017  01679F  00                 	db	0
  1018  0167A0  00                 	db	0
  1019  0167A1  00                 	db	0
  1020  0167A2  00                 	db	0
  1021  0167A3  00                 	db	0
  1022  0167A4  00                 	db	0
  1023  0167A5  00                 	db	0
  1024  0167A6  00                 	db	0
  1025  0167A7  00                 	db	0
  1026  0167A8  00                 	db	0
  1027  0167A9  00                 	db	0
  1028  0167AA  00                 	db	0
  1029  0167AB  00                 	db	0
  1030  0167AC  00                 	db	0
  1031  0167AD  00                 	db	0
  1032  0167AE  00                 	db	0
  1033  0167AF  00                 	db	0
  1034  0167B0  00                 	db	0
  1035  0167B1  00                 	db	0
  1036  0167B2  00                 	db	0
  1037  0167B3  00                 	db	0
  1038  0167B4  00                 	db	0
  1039  0167B5  00                 	db	0
  1040  0167B6  00                 	db	0
  1041  0167B7  00                 	db	0
  1042  0167B8  00                 	db	0
  1043  0167B9  00                 	db	0
  1044  0167BA  00                 	db	0
  1045  0167BB  00                 	db	0
  1046  0167BC  00                 	db	0
  1047  0167BD  00                 	db	0
  1048  0167BE  00                 	db	0
  1049  0167BF  00                 	db	0
  1050  0167C0  00                 	db	0
  1051  0167C1  00                 	db	0
  1052  0167C2  00                 	db	0
  1053  0167C3  00                 	db	0
  1054  0167C4  00                 	db	0
  1055  0167C5  00                 	db	0
  1056  0167C6  00                 	db	0
  1057  0167C7  00                 	db	0
  1058  0167C8  00                 	db	0
  1059  0167C9  00                 	db	0
  1060  0167CA  00                 	db	0
  1061  0167CB  00                 	db	0
  1062  0167CC  00                 	db	0
  1063  0167CD  00                 	db	0
  1064  0167CE  00                 	db	0
  1065  0167CF  00                 	db	0
  1066  0167D0  00                 	db	0
  1067  0167D1  00                 	db	0
  1068  0167D2  00                 	db	0
  1069  0167D3  00                 	db	0
  1070  0167D4  00                 	db	0
  1071  0167D5  00                 	db	0
  1072  0167D6  00                 	db	0
  1073  0167D7  00                 	db	0
  1074  0167D8  00                 	db	0
  1075  0167D9  00                 	db	0
  1076  0167DA  00                 	db	0
  1077  0167DB  00                 	db	0
  1078  0167DC  00                 	db	0
  1079  0167DD  00                 	db	0
  1080  0167DE  00                 	db	0
  1081  0167DF  00                 	db	0
  1082  0167E0  00                 	db	0
  1083  0167E1  00                 	db	0
  1084  0167E2  00                 	db	0
  1085  0167E3  00                 	db	0
  1086  0167E4  00                 	db	0
  1087  0167E5  00                 	db	0
  1088  0167E6  00                 	db	0
  1089  0167E7  00                 	db	0
  1090  0167E8  00                 	db	0
  1091  0167E9  00                 	db	0
  1092  0167EA  00                 	db	0
  1093  0167EB  00                 	db	0
  1094  0167EC  00                 	db	0
  1095  0167ED  00                 	db	0
  1096  0167EE  00                 	db	0
  1097  0167EF  00                 	db	0
  1098  0167F0  00                 	db	0
  1099  0167F1  00                 	db	0
  1100  0167F2  00                 	db	0
  1101  0167F3  00                 	db	0
  1102  0167F4  00                 	db	0
  1103  0167F5  00                 	db	0
  1104  0167F6  00                 	db	0
  1105  0167F7  00                 	db	0
  1106  0167F8  00                 	db	0
  1107  0167F9  00                 	db	0
  1108  0167FA  00                 	db	0
  1109  0167FB  00                 	db	0
  1110  0167FC  00                 	db	0
  1111  0167FD  00                 	db	0
  1112  0167FE  00                 	db	0
  1113  0167FF  00                 	db	0
  1114  016800  00                 	db	0
  1115  016801  00                 	db	0
  1116  016802  00                 	db	0
  1117  016803  00                 	db	0
  1118  016804  00                 	db	0
  1119  016805  00                 	db	0
  1120  016806  00                 	db	0
  1121  016807  00                 	db	0
  1122  016808  00                 	db	0
  1123  016809  00                 	db	0
  1124  01680A  00                 	db	0
  1125  01680B  00                 	db	0
  1126  01680C  00                 	db	0
  1127  01680D  00                 	db	0
  1128  01680E  00                 	db	0
  1129  01680F  00                 	db	0
  1130  016810  00                 	db	0
  1131  016811  00                 	db	0
  1132  016812  00                 	db	0
  1133  016813  00                 	db	0
  1134  016814  00                 	db	0
  1135  016815  00                 	db	0
  1136  016816  00                 	db	0
  1137  016817  00                 	db	0
  1138  016818  00                 	db	0
  1139  016819  00                 	db	0
  1140  01681A  00                 	db	0
  1141  01681B  00                 	db	0
  1142  01681C  00                 	db	0
  1143  01681D  00                 	db	0
  1144  01681E  00                 	db	0
  1145  01681F  00                 	db	0
  1146  016820  00                 	db	0
  1147  016821  00                 	db	0
  1148  016822  00                 	db	0
  1149  016823  00                 	db	0
  1150  016824  00                 	db	0
  1151  016825  00                 	db	0
  1152  016826  00                 	db	0
  1153  016827  00                 	db	0
  1154  016828  00                 	db	0
  1155  016829  00                 	db	0
  1156  01682A  00                 	db	0
  1157  01682B  00                 	db	0
  1158  01682C  00                 	db	0
  1159  01682D  00                 	db	0
  1160  01682E  00                 	db	0
  1161  01682F  00                 	db	0
  1162  016830  00                 	db	0
  1163  016831  00                 	db	0
  1164  016832  00                 	db	0
  1165  016833  00                 	db	0
  1166  016834  00                 	db	0
  1167  016835  00                 	db	0
  1168  016836  00                 	db	0
  1169  016837  00                 	db	0
  1170  016838  00                 	db	0
  1171  016839  00                 	db	0
  1172  01683A  00                 	db	0
  1173  01683B  00                 	db	0
  1174  01683C  00                 	db	0
  1175  01683D  00                 	db	0
  1176  01683E  00                 	db	0
  1177  01683F  00                 	db	0
  1178  016840  00                 	db	0
  1179  016841  00                 	db	0
  1180  016842  00                 	db	0
  1181  016843  00                 	db	0
  1182                           
  1183                           	psect	idataBANK0
  1184  019586                     __pidataBANK0:
  1185                           	opt callstack 0
  1186                           
  1187                           ;initializer for _R
  1188  019586  0000               	dw	0
  1189  019588  0000               	dw	0
  1190  01958A  0000               	dw	0
  1191  01958C  0000               	dw	0
  1192  01958E  0000               	dw	0
  1193  019590  0000               	dw	0
  1194  019592  0000               	dw	0
  1195  019594  0000               	dw	0
  1196  019596  0000               	dw	0
  1197  019598  0000               	dw	0
  1198  01959A  0000               	dw	0
  1199  01959C  0000               	dw	0
  1200  01959E  0000               	dw	0
  1201  0195A0  0000               	dw	0
  1202  0195A2  0000               	dw	0
  1203  0195A4  0000               	dw	0
  1204  0195A6  0F67               	dw	3943
  1205  0195A8  0F8F               	dw	3983
  1206  0195AA  00                 	db	0
  1207  0195AB  0000               	dw	0
  1208  0195AD  00                 	db	0
  1209                           
  1210                           ;initializer for _H
  1211  0195AE  00                 	db	0
  1212  0195AF  00                 	db	0
  1213  0195B0  01                 	db	1
  1214  0195B1  00                 	db	0
  1215  0195B2  01                 	db	1
  1216  0195B3  00                 	db	0
  1217  0195B4  00                 	db	0
  1218                           
  1219                           	psect	idataBANK1
  1220  017F12                     __pidataBANK1:
  1221                           	opt callstack 0
  1222                           
  1223                           ;initializer for _C
  1224  017F12  0000               	dw	0
  1225  017F14  0000               	dw	0
  1226  017F16  0000               	dw	0
  1227  017F18  0000               	dw	0
  1228  017F1A  0000               	dw	0
  1229  017F1C  0000               	dw	0
  1230  017F1E  0000               	dw	0
  1231  017F20  0000               	dw	0
  1232  017F22  0000               	dw	0
  1233  017F24  0000               	dw	0
  1234  017F26  0000               	dw	0
  1235  017F28  0000               	dw	0
  1236  017F2A  0000               	dw	0
  1237  017F2C  0000               	dw	0
  1238  017F2E  0000               	dw	0
  1239  017F30  0000               	dw	0
  1240  017F32  0000               	dw	0
  1241  017F34  0000               	dw	0
  1242  017F36  0000               	dw	0
  1243  017F38  0000               	dw	0
  1244  017F3A  0000               	dw	0
  1245  017F3C  0000               	dw	0
  1246  017F3E  0000               	dw	0
  1247  017F40  0000               	dw	0
  1248  017F42  0000               	dw	0
  1249  017F44  0000               	dw	0
  1250  017F46  0000               	dw	0
  1251  017F48  0000               	dw	0
  1252  017F4A  0000               	dw	0
  1253  017F4C  0000               	dw	0
  1254  017F4E  0000               	dw	0
  1255  017F50  0000               	dw	0
  1256  017F52  0000               	dw	0
  1257  017F54  0000               	dw	0
  1258  017F56  0000               	dw	0
  1259  017F58  0000               	dw	0
  1260  017F5A  0000               	dw	0
  1261  017F5C  0000               	dw	0
  1262  017F5E  0000               	dw	0
  1263  017F60  0000               	dw	0
  1264  017F62  0000               	dw	0
  1265  017F64  0000               	dw	0
  1266  017F66  0000               	dw	0
  1267  017F68  0000               	dw	0
  1268  017F6A  0000               	dw	0
  1269  017F6C  0000               	dw	0
  1270  017F6E  0000               	dw	0
  1271  017F70  0000               	dw	0
  1272  017F72  0000               	dw	0
  1273  017F74  0000               	dw	0
  1274  017F76  0000               	dw	0
  1275  017F78  0000               	dw	0
  1276  017F7A  0000               	dw	0
  1277  017F7C  0000               	dw	0
  1278  017F7E  0000               	dw	0
  1279  017F80  0000               	dw	0
  1280  017F82  0000               	dw	0
  1281  017F84  0000               	dw	0
  1282  017F86  0000               	dw	0
  1283  017F88  0000               	dw	0
  1284  017F8A  0000               	dw	0
  1285  017F8C  0000               	dw	0
  1286  017F8E  0000               	dw	0
  1287  017F90  42FA               	dw	17146
  1288  017F92  00                 	db	0
  1289  017F93  00                 	db	0
  1290  017F94  00                 	db	0
  1291  017F95  00                 	db	0
  1292  017F96  00                 	db	0
  1293  017F97  00                 	db	0
  1294  017F98  00                 	db	0
  1295  017F99  00                 	db	0
  1296  017F9A  00                 	db	0
  1297  017F9B  00                 	db	0
  1298  017F9C  00                 	db	0
  1299  017F9D  00                 	db	0
  1300  017F9E  00                 	db	0
  1301  017F9F  00                 	db	0
  1302  017FA0  00                 	db	0
  1303  017FA1  00                 	db	0
  1304  017FA2  00                 	db	0
  1305  017FA3  00                 	db	0
  1306  017FA4  00                 	db	0
  1307  017FA5  00                 	db	0
  1308  017FA6  00                 	db	0
  1309  017FA7  00                 	db	0
  1310  017FA8  00                 	db	0
  1311  017FA9  00                 	db	0
  1312  017FAA  00                 	db	0
  1313  017FAB  00                 	db	0
  1314  017FAC  00                 	db	0
  1315  017FAD  00                 	db	0
  1316  017FAE  00                 	db	0
  1317  017FAF  00                 	db	0
  1318  017FB0  00                 	db	0
  1319  017FB1  00                 	db	0
  1320  017FB2  00                 	db	0
  1321  017FB3  00                 	db	0
  1322  017FB4  00                 	db	0
  1323  017FB5  00                 	db	0
  1324  017FB6  00                 	db	0
  1325  017FB7  00                 	db	0
  1326  017FB8  00                 	db	0
  1327  017FB9  00                 	db	0
  1328  017FBA  00                 	db	0
  1329  017FBB  00                 	db	0
  1330  017FBC  00                 	db	0
  1331  017FBD  00                 	db	0
  1332  017FBE  00                 	db	0
  1333  017FBF  00                 	db	0
  1334  017FC0  00                 	db	0
  1335  017FC1  00                 	db	0
  1336  017FC2  00                 	db	0
  1337  017FC3  00                 	db	0
  1338  017FC4  00                 	db	0
  1339  017FC5  00                 	db	0
  1340  017FC6  00                 	db	0
  1341  017FC7  00                 	db	0
  1342  017FC8  00                 	db	0
  1343  017FC9  00                 	db	0
  1344  017FCA  00                 	db	0
  1345  017FCB  00                 	db	0
  1346  017FCC  00                 	db	0
  1347  017FCD  00                 	db	0
  1348  017FCE  00                 	db	0
  1349  017FCF  00                 	db	0
  1350  017FD0  00                 	db	0
  1351  017FD1  00                 	db	0
  1352  017FD2  00                 	db	0
  1353  017FD3  00                 	db	0
  1354  017FD4  00                 	db	0
  1355  017FD5  00                 	db	0
  1356  017FD6  00                 	db	0
  1357  017FD7  00                 	db	0
  1358  017FD8  00                 	db	0
  1359  017FD9  00                 	db	0
  1360  017FDA  00                 	db	0
  1361  017FDB  00                 	db	0
  1362  017FDC  00                 	db	0
  1363  017FDD  00                 	db	0
  1364  017FDE  00                 	db	0
  1365  017FDF  00                 	db	0
  1366  017FE0  00                 	db	0
  1367  017FE1  00                 	db	0
  1368  017FE2  00                 	db	0
  1369  017FE3  00                 	db	0
  1370  017FE4  00                 	db	0
  1371                           
  1372                           ;initializer for stoa@F1166
  1373  017FE5  28                 	db	40
  1374  017FE6  6E                 	db	110
  1375  017FE7  75                 	db	117
  1376  017FE8  6C                 	db	108
  1377  017FE9  6C                 	db	108
  1378  017FEA  29                 	db	41
  1379  017FEB  00                 	db	0
  1380                           
  1381                           	psect	idataBANK2
  1382  018184                     __pidataBANK2:
  1383                           	opt callstack 0
  1384                           
  1385                           ;initializer for _V
  1386  018184  00                 	db	0
  1387  018185  00                 	db	0
  1388  018186  00                 	db	0
  1389  018187  00                 	db	0
  1390  018188  00                 	db	0
  1391  018189  00                 	db	0
  1392  01818A  00                 	db	0
  1393  01818B  00                 	db	0
  1394  01818C  00                 	db	0
  1395  01818D  00                 	db	0
  1396  01818E  00                 	db	0
  1397  01818F  00                 	db	0
  1398  018190  00                 	db	0
  1399  018191  00                 	db	0
  1400  018192  00                 	db	0
  1401  018193  00                 	db	0
  1402  018194  00                 	db	0
  1403  018195  00                 	db	0
  1404  018196  00                 	db	0
  1405  018197  00                 	db	0
  1406  018198  00                 	db	0
  1407  018199  00                 	db	0
  1408  01819A  00                 	db	0
  1409  01819B  00                 	db	0
  1410  01819C  00                 	db	0
  1411  01819D  00                 	db	0
  1412  01819E  00                 	db	0
  1413  01819F  00                 	db	0
  1414  0181A0  00                 	db	0
  1415  0181A1  00                 	db	0
  1416  0181A2  00                 	db	0
  1417  0181A3  00                 	db	0
  1418  0181A4  00                 	db	0
  1419  0181A5  00                 	db	0
  1420  0181A6  00                 	db	0
  1421  0181A7  00                 	db	0
  1422  0181A8  00                 	db	0
  1423  0181A9  00                 	db	0
  1424  0181AA  00                 	db	0
  1425  0181AB  00                 	db	0
  1426  0181AC  00                 	db	0
  1427  0181AD  00                 	db	0
  1428  0181AE  00                 	db	0
  1429  0181AF  00                 	db	0
  1430  0181B0  00                 	db	0
  1431  0181B1  00                 	db	0
  1432  0181B2  00                 	db	0
  1433  0181B3  00                 	db	0
  1434  0181B4  00                 	db	0
  1435  0181B5  00                 	db	0
  1436  0181B6  00                 	db	0
  1437  0181B7  00                 	db	0
  1438  0181B8  00                 	db	0
  1439  0181B9  00                 	db	0
  1440  0181BA  00                 	db	0
  1441  0181BB  00                 	db	0
  1442  0181BC  00                 	db	0
  1443  0181BD  00                 	db	0
  1444  0181BE  00                 	db	0
  1445  0181BF  00                 	db	0
  1446  0181C0  00                 	db	0
  1447  0181C1  00                 	db	0
  1448  0181C2  00                 	db	0
  1449  0181C3  00                 	db	0
  1450  0181C4  00                 	db	0
  1451  0181C5  00                 	db	0
  1452  0181C6  00                 	db	0
  1453  0181C7  00                 	db	0
  1454  0181C8  00                 	db	0
  1455  0181C9  00                 	db	0
  1456  0181CA  00                 	db	0
  1457  0181CB  00                 	db	0
  1458  0181CC  00                 	db	0
  1459  0181CD  00                 	db	0
  1460  0181CE  00                 	db	0
  1461  0181CF  00                 	db	0
  1462  0181D0  00                 	db	0
  1463  0181D1  00                 	db	0
  1464  0181D2  00                 	db	0
  1465  0181D3  00                 	db	0
  1466  0181D4  00                 	db	0
  1467  0181D5  00                 	db	0
  1468  0181D6  00                 	db	0
  1469  0181D7  00                 	db	0
  1470  0181D8  00                 	db	0
  1471  0181D9  00                 	db	0
  1472  0181DA  00                 	db	0
  1473  0181DB  00                 	db	0
  1474  0181DC  00                 	db	0
  1475  0181DD  00                 	db	0
  1476  0181DE  00                 	db	0
  1477  0181DF  00                 	db	0
  1478  0181E0  00                 	db	0
  1479  0181E1  00                 	db	0
  1480  0181E2  00                 	db	0
  1481  0181E3  00                 	db	0
  1482  0181E4  00                 	db	0
  1483  0181E5  00                 	db	0
  1484  0181E6  00                 	db	0
  1485  0181E7  00                 	db	0
  1486  0181E8  00                 	db	0
  1487  0181E9  00                 	db	0
  1488  0181EA  00                 	db	0
  1489  0181EB  00                 	db	0
  1490  0181EC  00                 	db	0
  1491  0181ED  00                 	db	0
  1492  0181EE  00                 	db	0
  1493  0181EF  00                 	db	0
  1494  0181F0  00                 	db	0
  1495  0181F1  00                 	db	0
  1496  0181F2  00                 	db	0
  1497  0181F3  00                 	db	0
  1498  0181F4  00                 	db	0
  1499  0181F5  00                 	db	0
  1500  0181F6  00                 	db	0
  1501  0181F7  00                 	db	0
  1502  0181F8  00                 	db	0
  1503  0181F9  00                 	db	0
  1504  0181FA  00                 	db	0
  1505  0181FB  00                 	db	0
  1506  0181FC  00                 	db	0
  1507  0181FD  00                 	db	0
  1508  0181FE  00                 	db	0
  1509  0181FF  00                 	db	0
  1510  018200  00                 	db	0
  1511  018201  00                 	db	0
  1512  018202  00                 	db	0
  1513  018203  00                 	db	0
  1514  018204  00                 	db	0
  1515  018205  0000               	dw	0
  1516  018207  0000               	dw	0
  1517  018209  0000               	dw	0
  1518  01820B  0000               	dw	0
  1519  01820D  00                 	db	0
  1520  01820E  00                 	db	0
  1521  01820F  00                 	db	0
  1522  018210  00                 	db	0
  1523  018211  00                 	db	0
  1524  018212  00                 	db	0
  1525  018213  0000               	dw	0
  1526  018215  0000               	dw	0
  1527  018217  0000               	dw	0
  1528  018219  0000               	dw	0
  1529  01821B  0000               	dw	0
  1530  01821D  0000               	dw	0
  1531  01821F  00                 	db	0
  1532  018220  00                 	db	0
  1533  018221  00                 	db	0
  1534  018222  00                 	db	0
  1535  018223  00                 	db	0
  1536  018224  00                 	db	0
  1537  018225  00                 	db	0
  1538  018226  00                 	db	0
  1539  018227  00                 	db	0
  1540  018228  00                 	db	0
  1541  018229  0000               	dw	0
  1542  01822B  0000               	dw	0
  1543  01822D  2D                 	db	45
  1544  01822E  00                 	db	0
  1545  01822F  00                 	db	0
  1546  018230  0000               	dw	0
  1547  018232  0000               	dw	0
  1548  018234  0000               	dw	0
  1549  018236  0000               	dw	0
  1550  018238  0000               	dw	0
  1551  01823A  0000               	dw	0
  1552  01823C  0000               	dw	0
  1553  01823E  0000               	dw	0
  1554                           
  1555                           	psect	mediumconst
  1556  00FCB0                     __pmediumconst:
  1557                           	opt callstack 0
  1558  00FCB0  00                 	db	0
  1559  00FCB1                     _BVSOC_TABLE:
  1560                           	opt callstack 0
  1561  00FCB1  59D8               	dw	23000
  1562  00FCB3  0000               	dw	0
  1563  00FCB5  0005               	dw	5
  1564  00FCB7  0000               	dw	0
  1565  00FCB9  5B68               	dw	23400
  1566  00FCBB  0000               	dw	0
  1567  00FCBD  000A               	dw	10
  1568  00FCBF  0000               	dw	0
  1569  00FCC1  5C30               	dw	23600
  1570  00FCC3  0000               	dw	0
  1571  00FCC5  0014               	dw	20
  1572  00FCC7  0000               	dw	0
  1573  00FCC9  5E38               	dw	24120
  1574  00FCCB  0000               	dw	0
  1575  00FCCD  0019               	dw	25
  1576  00FCCF  0000               	dw	0
  1577  00FCD1  5E88               	dw	24200
  1578  00FCD3  0000               	dw	0
  1579  00FCD5  001E               	dw	30
  1580  00FCD7  0000               	dw	0
  1581  00FCD9  5F78               	dw	24440
  1582  00FCDB  0000               	dw	0
  1583  00FCDD  0028               	dw	40
  1584  00FCDF  0000               	dw	0
  1585  00FCE1  5FDC               	dw	24540
  1586  00FCE3  0000               	dw	0
  1587  00FCE5  002D               	dw	45
  1588  00FCE7  0000               	dw	0
  1589  00FCE9  6018               	dw	24600
  1590  00FCEB  0000               	dw	0
  1591  00FCED  0032               	dw	50
  1592  00FCEF  0000               	dw	0
  1593  00FCF1  6046               	dw	24646
  1594  00FCF3  0000               	dw	0
  1595  00FCF5  0035               	dw	53
  1596  00FCF7  0000               	dw	0
  1597  00FCF9  607C               	dw	24700
  1598  00FCFB  0000               	dw	0
  1599  00FCFD  0037               	dw	55
  1600  00FCFF  0000               	dw	0
  1601  00FD01  60AE               	dw	24750
  1602  00FD03  0000               	dw	0
  1603  00FD05  0039               	dw	57
  1604  00FD07  0000               	dw	0
  1605  00FD09  60E0               	dw	24800
  1606  00FD0B  0000               	dw	0
  1607  00FD0D  003C               	dw	60
  1608  00FD0F  0000               	dw	0
  1609  00FD11  6112               	dw	24850
  1610  00FD13  0000               	dw	0
  1611  00FD15  003F               	dw	63
  1612  00FD17  0000               	dw	0
  1613  00FD19  6176               	dw	24950
  1614  00FD1B  0000               	dw	0
  1615  00FD1D  0043               	dw	67
  1616  00FD1F  0000               	dw	0
  1617  00FD21  61A8               	dw	25000
  1618  00FD23  0000               	dw	0
  1619  00FD25  0046               	dw	70
  1620  00FD27  0000               	dw	0
  1621  00FD29  61BC               	dw	25020
  1622  00FD2B  0000               	dw	0
  1623  00FD2D  0048               	dw	72
  1624  00FD2F  0000               	dw	0
  1625  00FD31  61D0               	dw	25040
  1626  00FD33  0000               	dw	0
  1627  00FD35  004B               	dw	75
  1628  00FD37  0000               	dw	0
  1629  00FD39  61DA               	dw	25050
  1630  00FD3B  0000               	dw	0
  1631  00FD3D  0050               	dw	80
  1632  00FD3F  0000               	dw	0
  1633  00FD41  61E4               	dw	25060
  1634  00FD43  0000               	dw	0
  1635  00FD45  0055               	dw	85
  1636  00FD47  0000               	dw	0
  1637  00FD49  61F8               	dw	25080
  1638  00FD4B  0000               	dw	0
  1639  00FD4D  005A               	dw	90
  1640  00FD4F  0000               	dw	0
  1641  00FD51  6208               	dw	25096
  1642  00FD53  0000               	dw	0
  1643  00FD55  005C               	dw	92
  1644  00FD57  0000               	dw	0
  1645  00FD59  6222               	dw	25122
  1646  00FD5B  0000               	dw	0
  1647  00FD5D  005D               	dw	93
  1648  00FD5F  0000               	dw	0
  1649  00FD61  6234               	dw	25140
  1650  00FD63  0000               	dw	0
  1651  00FD65  005F               	dw	95
  1652  00FD67  0000               	dw	0
  1653  00FD69  6248               	dw	25160
  1654  00FD6B  0000               	dw	0
  1655  00FD6D  0061               	dw	97
  1656  00FD6F  0000               	dw	0
  1657  00FD71  625C               	dw	25180
  1658  00FD73  0000               	dw	0
  1659  00FD75  0064               	dw	100
  1660  00FD77  0000               	dw	0
  1661  00FD79  6658               	dw	26200
  1662  00FD7B  0000               	dw	0
  1663  00FD7D  005A               	dw	90
  1664  00FD7F  0000               	dw	0
  1665  00FD81                     __end_of_BVSOC_TABLE:
  1666                           	opt callstack 0
  1667  00FD81                     _T:
  1668                           	opt callstack 0
  1669  00FD81  63                 	db	99
  1670  00FD82  6F                 	db	111
  1671  00FD83  6D                 	db	109
  1672  00FD84  6D                 	db	109
  1673  00FD85  61                 	db	97
  1674  00FD86  6E                 	db	110
  1675  00FD87  64                 	db	100
  1676  00FD88  73                 	db	115
  1677  00FD89  20                 	db	32
  1678  00FD8A  31                 	db	49
  1679  00FD8B  00                 	db	0
  1680  00FD8C  00                 	db	0
  1681  00FD8D  00                 	db	0
  1682  00FD8E  00                 	db	0
  1683  00FD8F  00                 	db	0
  1684  00FD90  00                 	db	0
  1685  00FD91  00                 	db	0
  1686  00FD92  00                 	db	0
  1687  00FD93  64                 	db	100
  1688  00FD94  69                 	db	105
  1689  00FD95  73                 	db	115
  1690  00FD96  70                 	db	112
  1691  00FD97  6C                 	db	108
  1692  00FD98  61                 	db	97
  1693  00FD99  79                 	db	121
  1694  00FD9A  73                 	db	115
  1695  00FD9B  20                 	db	32
  1696  00FD9C  31                 	db	49
  1697  00FD9D  00                 	db	0
  1698  00FD9E  00                 	db	0
  1699  00FD9F  00                 	db	0
  1700  00FDA0  00                 	db	0
  1701  00FDA1  00                 	db	0
  1702  00FDA2  00                 	db	0
  1703  00FDA3  00                 	db	0
  1704  00FDA4  00                 	db	0
  1705  00FDA5  63                 	db	99
  1706  00FDA6  6F                 	db	111
  1707  00FDA7  6D                 	db	109
  1708  00FDA8  6D                 	db	109
  1709  00FDA9  61                 	db	97
  1710  00FDAA  6E                 	db	110
  1711  00FDAB  64                 	db	100
  1712  00FDAC  73                 	db	115
  1713  00FDAD  20                 	db	32
  1714  00FDAE  32                 	db	50
  1715  00FDAF  00                 	db	0
  1716  00FDB0  00                 	db	0
  1717  00FDB1  00                 	db	0
  1718  00FDB2  00                 	db	0
  1719  00FDB3  00                 	db	0
  1720  00FDB4  00                 	db	0
  1721  00FDB5  00                 	db	0
  1722  00FDB6  00                 	db	0
  1723  00FDB7  64                 	db	100
  1724  00FDB8  69                 	db	105
  1725  00FDB9  73                 	db	115
  1726  00FDBA  70                 	db	112
  1727  00FDBB  6C                 	db	108
  1728  00FDBC  61                 	db	97
  1729  00FDBD  79                 	db	121
  1730  00FDBE  73                 	db	115
  1731  00FDBF  20                 	db	32
  1732  00FDC0  32                 	db	50
  1733  00FDC1  00                 	db	0
  1734  00FDC2  00                 	db	0
  1735  00FDC3  00                 	db	0
  1736  00FDC4  00                 	db	0
  1737  00FDC5  00                 	db	0
  1738  00FDC6  00                 	db	0
  1739  00FDC7  00                 	db	0
  1740  00FDC8  00                 	db	0
  1741  00FDC9  63                 	db	99
  1742  00FDCA  6F                 	db	111
  1743  00FDCB  6D                 	db	109
  1744  00FDCC  6D                 	db	109
  1745  00FDCD  61                 	db	97
  1746  00FDCE  6E                 	db	110
  1747  00FDCF  64                 	db	100
  1748  00FDD0  73                 	db	115
  1749  00FDD1  20                 	db	32
  1750  00FDD2  33                 	db	51
  1751  00FDD3  00                 	db	0
  1752  00FDD4  00                 	db	0
  1753  00FDD5  00                 	db	0
  1754  00FDD6  00                 	db	0
  1755  00FDD7  00                 	db	0
  1756  00FDD8  00                 	db	0
  1757  00FDD9  00                 	db	0
  1758  00FDDA  00                 	db	0
  1759  00FDDB  64                 	db	100
  1760  00FDDC  69                 	db	105
  1761  00FDDD  73                 	db	115
  1762  00FDDE  70                 	db	112
  1763  00FDDF  6C                 	db	108
  1764  00FDE0  61                 	db	97
  1765  00FDE1  79                 	db	121
  1766  00FDE2  73                 	db	115
  1767  00FDE3  20                 	db	32
  1768  00FDE4  33                 	db	51
  1769  00FDE5  00                 	db	0
  1770  00FDE6  00                 	db	0
  1771  00FDE7  00                 	db	0
  1772  00FDE8  00                 	db	0
  1773  00FDE9  00                 	db	0
  1774  00FDEA  00                 	db	0
  1775  00FDEB  00                 	db	0
  1776  00FDEC  00                 	db	0
  1777  00FDED  63                 	db	99
  1778  00FDEE  6F                 	db	111
  1779  00FDEF  6D                 	db	109
  1780  00FDF0  6D                 	db	109
  1781  00FDF1  61                 	db	97
  1782  00FDF2  6E                 	db	110
  1783  00FDF3  64                 	db	100
  1784  00FDF4  73                 	db	115
  1785  00FDF5  20                 	db	32
  1786  00FDF6  34                 	db	52
  1787  00FDF7  00                 	db	0
  1788  00FDF8  00                 	db	0
  1789  00FDF9  00                 	db	0
  1790  00FDFA  00                 	db	0
  1791  00FDFB  00                 	db	0
  1792  00FDFC  00                 	db	0
  1793  00FDFD  00                 	db	0
  1794  00FDFE  00                 	db	0
  1795  00FDFF  64                 	db	100
  1796  00FE00  69                 	db	105
  1797  00FE01  73                 	db	115
  1798  00FE02  70                 	db	112
  1799  00FE03  6C                 	db	108
  1800  00FE04  61                 	db	97
  1801  00FE05  79                 	db	121
  1802  00FE06  73                 	db	115
  1803  00FE07  20                 	db	32
  1804  00FE08  34                 	db	52
  1805  00FE09  00                 	db	0
  1806  00FE0A  00                 	db	0
  1807  00FE0B  00                 	db	0
  1808  00FE0C  00                 	db	0
  1809  00FE0D  00                 	db	0
  1810  00FE0E  00                 	db	0
  1811  00FE0F  00                 	db	0
  1812  00FE10  00                 	db	0
  1813  00FE11                     __end_of_T:
  1814                           	opt callstack 0
  1815  00FE11  0000               	dw	0
  1816  00FE13  3F80               	dw	16256
  1817  00FE15  0000               	dw	0
  1818  00FE17  3FC0               	dw	16320
  1819  00FE19                     __end_of_bp:
  1820                           	opt callstack 0
  1821  00FE19  AA00               	dw	43520
  1822  00FE1B  3FB8               	dw	16312
  1823  00FE1D                     __end_of_ivln2_h:
  1824                           	opt callstack 0
  1825  00FE1D  23C6               	dw	9158
  1826  00FE1F  B8F6               	dw	47350
  1827  00FE21                     __end_of_cp_l:
  1828                           	opt callstack 0
  1829  00FE21  4000               	dw	16384
  1830  00FE23  3F76               	dw	16246
  1831  00FE25                     __end_of_cp_h:
  1832                           	opt callstack 0
  1833  0000                     _IVTADL	set	14493
  1834  0000                     _IVTADH	set	14494
  1835  0000                     _IVTADU	set	14495
  1836  0000                     _PIR6bits	set	14758
  1837  0000                     _PIR4bits	set	14756
  1838  0000                     _PIE8bits	set	14744
  1839  0000                     _PIR8bits	set	14760
  1840  0000                     _SCANPR	set	14839
  1841  0000                     _DMA2PR	set	14836
  1842  0000                     _DMA1PR	set	14835
  1843  0000                     _MAINPR	set	14834
  1844  0000                     _ISRPR	set	14833
  1845  0000                     _PIE2bits	set	14738
  1846  0000                     _PIR2bits	set	14754
  1847  0000                     _PIE9bits	set	14745
  1848  0000                     _PIR9bits	set	14761
  1849  0000                     _PIE6bits	set	14742
  1850  0000                     _PIE3bits	set	14739
  1851  0000                     _PMD7	set	14791
  1852  0000                     _PMD6	set	14790
  1853  0000                     _PMD5	set	14789
  1854  0000                     _PMD4	set	14788
  1855  0000                     _PMD3	set	14787
  1856  0000                     _PMD2	set	14786
  1857  0000                     _PMD1	set	14785
  1858  0000                     _PMD0	set	14784
  1859  0000                     _OSCTUNE	set	14814
  1860  0000                     _OSCFRQ	set	14815
  1861  0000                     _OSCEN	set	14813
  1862  0000                     _OSCCON3	set	14811
  1863  0000                     _OSCCON1	set	14809
  1864  0000                     _IPR8bits	set	14728
  1865  0000                     _IPR9bits	set	14729
  1866  0000                     _IPR5bits	set	14725
  1867  0000                     _IPR1bits	set	14721
  1868  0000                     _IPR3bits	set	14723
  1869  0000                     _IPR6bits	set	14726
  1870  0000                     _IPR2bits	set	14722
  1871  0000                     _PIE5bits	set	14741
  1872  0000                     _PIE1bits	set	14737
  1873  0000                     _PIR5bits	set	14757
  1874  0000                     _PIR1bits	set	14753
  1875  0000                     _PLLR	set	118496
  1876  0000                     _SPI1SDIPPS	set	15071
  1877  0000                     _U1RXPPS	set	15077
  1878  0000                     _RC6PPS	set	14870
  1879  0000                     _RC5PPS	set	14869
  1880  0000                     _INT1PPS	set	15041
  1881  0000                     _RD1PPS	set	14873
  1882  0000                     _INT0PPS	set	15040
  1883  0000                     _RC3PPS	set	14867
  1884  0000                     _RB6PPS	set	14862
  1885  0000                     _SPI1SCKPPS	set	15070
  1886  0000                     _U2RXPPS	set	15080
  1887  0000                     _SLRCONF	set	14995
  1888  0000                     _SLRCONE	set	14979
  1889  0000                     _SLRCOND	set	14963
  1890  0000                     _SLRCONC	set	14947
  1891  0000                     _SLRCONB	set	14931
  1892  0000                     _SLRCONA	set	14915
  1893  0000                     _ODCOND	set	14962
  1894  0000                     _ODCONC	set	14946
  1895  0000                     _ODCONB	set	14930
  1896  0000                     _ODCONA	set	14914
  1897  0000                     _ODCONF	set	14994
  1898  0000                     _ODCONE	set	14978
  1899  0000                     _WPUC	set	14945
  1900  0000                     _WPUA	set	14913
  1901  0000                     _WPUB	set	14929
  1902  0000                     _WPUE	set	14977
  1903  0000                     _WPUF	set	14993
  1904  0000                     _WPUD	set	14961
  1905  0000                     _ANSELA	set	14912
  1906  0000                     _ANSELF	set	14992
  1907  0000                     _ANSELE	set	14976
  1908  0000                     _ANSELB	set	14928
  1909  0000                     _ANSELC	set	14944
  1910  0000                     _ANSELD	set	14960
  1911  0000                     _DMA2SSA	set	15321
  1912  0000                     _DMA1SSA	set	15353
  1913  0000                     _DMA2DSZ	set	15310
  1914  0000                     _DMA2SSZ	set	15319
  1915  0000                     _DMA2DSA	set	15312
  1916  0000                     _DMA1DSZ	set	15342
  1917  0000                     _DMA1SSZ	set	15351
  1918  0000                     _DMA1DSA	set	15344
  1919  0000                     _DMA2CON0bits	set	15324
  1920  0000                     _DMA2CON1bits	set	15325
  1921  0000                     _DMA1CON0bits	set	15356
  1922  0000                     _DMA1CON1bits	set	15357
  1923  0000                     _DMA2CON0	set	15324
  1924  0000                     _DMA2AIRQ	set	15326
  1925  0000                     _DMA2SIRQ	set	15327
  1926  0000                     _DMA2CON1	set	15325
  1927  0000                     _DMA1CON0	set	15356
  1928  0000                     _DMA1AIRQ	set	15358
  1929  0000                     _DMA1SIRQ	set	15359
  1930  0000                     _DMA1CON1	set	15357
  1931  0000                     _CLKRCON	set	15589
  1932  0000                     _CLKRCLK	set	15590
  1933  0000                     _SPI1INTFbits	set	15642
  1934  0000                     _SPI1RXB	set	15632
  1935  0000                     _SPI1TXB	set	15633
  1936  0000                     _SPI1TCNTL	set	15634
  1937  0000                     _SPI1CON0	set	15636
  1938  0000                     _SPI1CLK	set	15644
  1939  0000                     _SPI1BAUD	set	15641
  1940  0000                     _SPI1CON2	set	15638
  1941  0000                     _SPI1CON1	set	15637
  1942  0000                     _U2RXB	set	15824
  1943  0000                     _U2TXB	set	15826
  1944  0000                     _U2ERRIE	set	15842
  1945  0000                     _U2ERRIR	set	15841
  1946  0000                     _U2UIR	set	15840
  1947  0000                     _U2FIFO	set	15839
  1948  0000                     _U2BRGH	set	15838
  1949  0000                     _U2BRGL	set	15837
  1950  0000                     _U2CON2	set	15836
  1951  0000                     _U2CON1	set	15835
  1952  0000                     _U2CON0	set	15834
  1953  0000                     _U2P3L	set	15832
  1954  0000                     _U2P2L	set	15830
  1955  0000                     _U2P1L	set	15828
  1956  0000                     _U1RXB	set	15848
  1957  0000                     _U1ERRIE	set	15866
  1958  0000                     _U1ERRIR	set	15865
  1959  0000                     _U1UIR	set	15864
  1960  0000                     _U1FIFO	set	15863
  1961  0000                     _U1BRGH	set	15862
  1962  0000                     _U1BRGL	set	15861
  1963  0000                     _U1CON2	set	15860
  1964  0000                     _U1CON1	set	15859
  1965  0000                     _U1CON0	set	15858
  1966  0000                     _U1P3H	set	15857
  1967  0000                     _U1P3L	set	15856
  1968  0000                     _U1P2H	set	15855
  1969  0000                     _U1P2L	set	15854
  1970  0000                     _U1P1H	set	15853
  1971  0000                     _U1P1L	set	15852
  1972  0000                     _FVRCON	set	16065
  1973  0000                     _ADFLTRL	set	16102
  1974  0000                     _ADFLTRH	set	16103
  1975  0000                     _ADCON0bits	set	16120
  1976  0000                     _ADCON0	set	16120
  1977  0000                     _ADCLK	set	16127
  1978  0000                     _ADACT	set	16126
  1979  0000                     _ADREF	set	16125
  1980  0000                     _ADSTAT	set	16124
  1981  0000                     _ADCON3	set	16123
  1982  0000                     _ADCON2	set	16122
  1983  0000                     _ADCON1	set	16121
  1984  0000                     _ADPREH	set	16119
  1985  0000                     _ADPREL	set	16118
  1986  0000                     _ADCAP	set	16117
  1987  0000                     _ADACQH	set	16116
  1988  0000                     _ADACQL	set	16115
  1989  0000                     _ADPCH	set	16113
  1990  0000                     _ADRPT	set	16108
  1991  0000                     _ADACCU	set	16106
  1992  0000                     _ADSTPTH	set	16101
  1993  0000                     _ADSTPTL	set	16100
  1994  0000                     _ADUTHH	set	16097
  1995  0000                     _ADUTHL	set	16096
  1996  0000                     _ADLTHH	set	16095
  1997  0000                     _ADLTHL	set	16094
  1998  0000                     _CCPTMRS1bits	set	16223
  1999  0000                     _PORTFbits	set	16335
  2000  0000                     _LATCbits	set	16316
  2001  0000                     _LATDbits	set	16317
  2002  0000                     _PORTBbits	set	16331
  2003  0000                     _T3CONbits	set	16294
  2004  0000                     _T3CON	set	16294
  2005  0000                     _TMR3L	set	16292
  2006  0000                     _TMR3H	set	16293
  2007  0000                     _T3CLK	set	16297
  2008  0000                     _T3GATE	set	16296
  2009  0000                     _T3GCON	set	16295
  2010  0000                     _T2CON	set	16300
  2011  0000                     _T2TMR	set	16298
  2012  0000                     _T2PR	set	16299
  2013  0000                     _T2RST	set	16303
  2014  0000                     _T2HLT	set	16301
  2015  0000                     _T2CLKCON	set	16302
  2016  0000                     _PWM8DCL	set	16224
  2017  0000                     _PWM8DCH	set	16225
  2018  0000                     _PWM8CON	set	16226
  2019  0000                     _LATEbits	set	16318
  2020  0000                     _T5CONbits	set	16282
  2021  0000                     _T5CON	set	16282
  2022  0000                     _TMR5L	set	16280
  2023  0000                     _TMR5H	set	16281
  2024  0000                     _T5CLK	set	16285
  2025  0000                     _T5GATE	set	16284
  2026  0000                     _T5GCON	set	16283
  2027  0000                     _T6CON	set	16276
  2028  0000                     _T6TMR	set	16274
  2029  0000                     _T6PR	set	16275
  2030  0000                     _T6RST	set	16279
  2031  0000                     _T6HLT	set	16277
  2032  0000                     _T6CLKCON	set	16278
  2033  0000                     _TRISD	set	16325
  2034  0000                     _TRISC	set	16324
  2035  0000                     _TRISB	set	16323
  2036  0000                     _TRISA	set	16322
  2037  0000                     _TRISF	set	16327
  2038  0000                     _TRISE	set	16326
  2039  0000                     _LATC	set	16316
  2040  0000                     _LATB	set	16315
  2041  0000                     _LATF	set	16319
  2042  0000                     _LATA	set	16314
  2043  0000                     _LATD	set	16317
  2044  0000                     _LATE	set	16318
  2045  0000                     _IVTLOCKbits	set	16340
  2046  0000                     _IVTLOCK	set	16340
  2047  0000                     _INTCON0bits	set	16338
  2048  0000                     _GIE	set	130711
  2049  00FE25                     STR_46:
  2050                           
  2051                           ; BSR set to: 57
  2052  00FE25  20                 	db	32
  2053  00FE26  25                 	db	37
  2054  00FE27  34                 	db	52	;'4'
  2055  00FE28  2E                 	db	46
  2056  00FE29  33                 	db	51	;'3'
  2057  00FE2A  66                 	db	102	;'f'
  2058  00FE2B  2C                 	db	44
  2059  00FE2C  25                 	db	37
  2060  00FE2D  34                 	db	52	;'4'
  2061  00FE2E  2E                 	db	46
  2062  00FE2F  33                 	db	51	;'3'
  2063  00FE30  66                 	db	102	;'f'
  2064  00FE31  2C                 	db	44
  2065  00FE32  25                 	db	37
  2066  00FE33  34                 	db	52	;'4'
  2067  00FE34  2E                 	db	46
  2068  00FE35  33                 	db	51	;'3'
  2069  00FE36  66                 	db	102	;'f'
  2070  00FE37  2C                 	db	44
  2071  00FE38  25                 	db	37
  2072  00FE39  34                 	db	52	;'4'
  2073  00FE3A  2E                 	db	46
  2074  00FE3B  33                 	db	51	;'3'
  2075  00FE3C  66                 	db	102	;'f'
  2076  00FE3D  0D                 	db	13
  2077  00FE3E  0A                 	db	10
  2078  00FE3F  00                 	db	0
  2079  00FE40                     
  2080                           ; BSR set to: 57
  2081  00FE40  20                 	db	32
  2082  00FE41  4D                 	db	77	;'M'
  2083  00FE42  65                 	db	101	;'e'
  2084  00FE43  73                 	db	115	;'s'
  2085  00FE44  67                 	db	103	;'g'
  2086  00FE45  20                 	db	32
  2087  00FE46  25                 	db	37
  2088  00FE47  64                 	db	100	;'d'
  2089  00FE48  20                 	db	32
  2090  00FE49  53                 	db	83	;'S'
  2091  00FE4A  74                 	db	116	;'t'
  2092  00FE4B  61                 	db	97	;'a'
  2093  00FE4C  63                 	db	99	;'c'
  2094  00FE4D  6B                 	db	107	;'k'
  2095  00FE4E  20                 	db	32
  2096  00FE4F  25                 	db	37
  2097  00FE50  64                 	db	100	;'d'
  2098  00FE51  20                 	db	32
  2099  00FE52  20                 	db	32
  2100  00FE53  20                 	db	32
  2101  00FE54  20                 	db	32
  2102  00FE55  20                 	db	32
  2103  00FE56  20                 	db	32
  2104  00FE57  00                 	db	0
  2105  00FE58                     STR_19:
  2106                           
  2107                           ; BSR set to: 57
  2108  00FE58  42                 	db	66	;'B'
  2109  00FE59  41                 	db	65	;'A'
  2110  00FE5A  48                 	db	72	;'H'
  2111  00FE5B  20                 	db	32
  2112  00FE5C  25                 	db	37
  2113  00FE5D  33                 	db	51	;'3'
  2114  00FE5E  2E                 	db	46
  2115  00FE5F  32                 	db	50	;'2'
  2116  00FE60  66                 	db	102	;'f'
  2117  00FE61  20                 	db	32
  2118  00FE62  50                 	db	80	;'P'
  2119  00FE63  25                 	db	37
  2120  00FE64  33                 	db	51	;'3'
  2121  00FE65  2E                 	db	46
  2122  00FE66  32                 	db	50	;'2'
  2123  00FE67  66                 	db	102	;'f'
  2124  00FE68  20                 	db	32
  2125  00FE69  20                 	db	32
  2126  00FE6A  20                 	db	32
  2127  00FE6B  00                 	db	0
  2128  00FE6C                     STR_39:
  2129                           
  2130                           ; BSR set to: 57
  2131  00FE6C  20                 	db	32
  2132  00FE6D  20                 	db	32
  2133  00FE6E  20                 	db	32
  2134  00FE6F  20                 	db	32
  2135  00FE70  20                 	db	32
  2136  00FE71  20                 	db	32
  2137  00FE72  20                 	db	32
  2138  00FE73  20                 	db	32
  2139  00FE74  20                 	db	32
  2140  00FE75  20                 	db	32
  2141  00FE76  20                 	db	32
  2142  00FE77  20                 	db	32
  2143  00FE78  20                 	db	32
  2144  00FE79  20                 	db	32
  2145  00FE7A  20                 	db	32
  2146  00FE7B  20                 	db	32
  2147  00FE7C  20                 	db	32
  2148  00FE7D  20                 	db	32
  2149  00FE7E  00                 	db	0
  2150  00FE7F                     STR_29:
  2151                           
  2152                           ; BSR set to: 57
  2153  00FE7F  48                 	db	72	;'H'
  2154  00FE80  45                 	db	69	;'E'
  2155  00FE81  4C                 	db	76	;'L'
  2156  00FE82  50                 	db	80	;'P'
  2157  00FE83  20                 	db	32
  2158  00FE84  25                 	db	37
  2159  00FE85  73                 	db	115	;'s'
  2160  00FE86  20                 	db	32
  2161  00FE87  20                 	db	32
  2162  00FE88  20                 	db	32
  2163  00FE89  20                 	db	32
  2164  00FE8A  20                 	db	32
  2165  00FE8B  20                 	db	32
  2166  00FE8C  20                 	db	32
  2167  00FE8D  20                 	db	32
  2168  00FE8E  20                 	db	32
  2169  00FE8F  20                 	db	32
  2170  00FE90  20                 	db	32
  2171  00FE91  00                 	db	0
  2172  00FE92                     
  2173                           ; BSR set to: 57
  2174  00FE92  44                 	db	68	;'D'
  2175  00FE93  49                 	db	73	;'I'
  2176  00FE94  53                 	db	83	;'S'
  2177  00FE95  50                 	db	80	;'P'
  2178  00FE96  4C                 	db	76	;'L'
  2179  00FE97  41                 	db	65	;'A'
  2180  00FE98  59                 	db	89	;'Y'
  2181  00FE99  20                 	db	32
  2182  00FE9A  25                 	db	37
  2183  00FE9B  73                 	db	115	;'s'
  2184  00FE9C  20                 	db	32
  2185  00FE9D  20                 	db	32
  2186  00FE9E  20                 	db	32
  2187  00FE9F  20                 	db	32
  2188  00FEA0  20                 	db	32
  2189  00FEA1  20                 	db	32
  2190  00FEA2  20                 	db	32
  2191  00FEA3  20                 	db	32
  2192  00FEA4  00                 	db	0
  2193  00FEA5                     STR_20:
  2194                           
  2195                           ; BSR set to: 57
  2196  00FEA5  53                 	db	83	;'S'
  2197  00FEA6  4F                 	db	79	;'O'
  2198  00FEA7  43                 	db	67	;'C'
  2199  00FEA8  20                 	db	32
  2200  00FEA9  25                 	db	37
  2201  00FEAA  64                 	db	100	;'d'
  2202  00FEAB  20                 	db	32
  2203  00FEAC  52                 	db	82	;'R'
  2204  00FEAD  55                 	db	85	;'U'
  2205  00FEAE  4E                 	db	78	;'N'
  2206  00FEAF  20                 	db	32
  2207  00FEB0  25                 	db	37
  2208  00FEB1  64                 	db	100	;'d'
  2209  00FEB2  20                 	db	32
  2210  00FEB3  20                 	db	32
  2211  00FEB4  20                 	db	32
  2212  00FEB5  20                 	db	32
  2213  00FEB6  20                 	db	32
  2214  00FEB7  00                 	db	0
  2215  00FEB8                     STR_12:
  2216                           
  2217                           ; BSR set to: 57
  2218  00FEB8  50                 	db	80	;'P'
  2219  00FEB9  56                 	db	86	;'V'
  2220  00FEBA  20                 	db	32
  2221  00FEBB  20                 	db	32
  2222  00FEBC  20                 	db	32
  2223  00FEBD  50                 	db	80	;'P'
  2224  00FEBE  57                 	db	87	;'W'
  2225  00FEBF  52                 	db	82	;'R'
  2226  00FEC0  20                 	db	32
  2227  00FEC1  25                 	db	37
  2228  00FEC2  33                 	db	51	;'3'
  2229  00FEC3  2E                 	db	46
  2230  00FEC4  32                 	db	50	;'2'
  2231  00FEC5  66                 	db	102	;'f'
  2232  00FEC6  20                 	db	32
  2233  00FEC7  20                 	db	32
  2234  00FEC8  20                 	db	32
  2235  00FEC9  20                 	db	32
  2236  00FECA  00                 	db	0
  2237  00FECB                     STR_14:
  2238                           
  2239                           ; BSR set to: 57
  2240  00FECB  49                 	db	73	;'I'
  2241  00FECC  4E                 	db	78	;'N'
  2242  00FECD  56                 	db	86	;'V'
  2243  00FECE  20                 	db	32
  2244  00FECF  20                 	db	32
  2245  00FED0  50                 	db	80	;'P'
  2246  00FED1  57                 	db	87	;'W'
  2247  00FED2  52                 	db	82	;'R'
  2248  00FED3  20                 	db	32
  2249  00FED4  25                 	db	37
  2250  00FED5  33                 	db	51	;'3'
  2251  00FED6  2E                 	db	46
  2252  00FED7  32                 	db	50	;'2'
  2253  00FED8  66                 	db	102	;'f'
  2254  00FED9  20                 	db	32
  2255  00FEDA  20                 	db	32
  2256  00FEDB  20                 	db	32
  2257  00FEDC  20                 	db	32
  2258  00FEDD  00                 	db	0
  2259  00FEDE                     STR_13:
  2260                           
  2261                           ; BSR set to: 57
  2262  00FEDE  4C                 	db	76	;'L'
  2263  00FEDF  4F                 	db	79	;'O'
  2264  00FEE0  41                 	db	65	;'A'
  2265  00FEE1  44                 	db	68	;'D'
  2266  00FEE2  20                 	db	32
  2267  00FEE3  50                 	db	80	;'P'
  2268  00FEE4  57                 	db	87	;'W'
  2269  00FEE5  52                 	db	82	;'R'
  2270  00FEE6  20                 	db	32
  2271  00FEE7  25                 	db	37
  2272  00FEE8  33                 	db	51	;'3'
  2273  00FEE9  2E                 	db	46
  2274  00FEEA  32                 	db	50	;'2'
  2275  00FEEB  66                 	db	102	;'f'
  2276  00FEEC  20                 	db	32
  2277  00FEED  20                 	db	32
  2278  00FEEE  20                 	db	32
  2279  00FEEF  20                 	db	32
  2280  00FEF0  00                 	db	0
  2281  00FEF1                     STR_18:
  2282                           
  2283                           ; BSR set to: 57
  2284  00FEF1  42                 	db	66	;'B'
  2285  00FEF2  41                 	db	65	;'A'
  2286  00FEF3  54                 	db	84	;'T'
  2287  00FEF4  54                 	db	84	;'T'
  2288  00FEF5  20                 	db	32
  2289  00FEF6  50                 	db	80	;'P'
  2290  00FEF7  57                 	db	87	;'W'
  2291  00FEF8  52                 	db	82	;'R'
  2292  00FEF9  20                 	db	32
  2293  00FEFA  25                 	db	37
  2294  00FEFB  33                 	db	51	;'3'
  2295  00FEFC  2E                 	db	46
  2296  00FEFD  32                 	db	50	;'2'
  2297  00FEFE  66                 	db	102	;'f'
  2298  00FEFF  20                 	db	32
  2299  00FF00  20                 	db	32
  2300  00FF01  20                 	db	32
  2301  00FF02  20                 	db	32
  2302  00FF03  00                 	db	0
  2303  00FF04                     STR_16:
  2304                           
  2305                           ; BSR set to: 57
  2306  00FF04  42                 	db	66	;'B'
  2307  00FF05  56                 	db	86	;'V'
  2308  00FF06  20                 	db	32
  2309  00FF07  25                 	db	37
  2310  00FF08  32                 	db	50	;'2'
  2311  00FF09  2E                 	db	46
  2312  00FF0A  32                 	db	50	;'2'
  2313  00FF0B  66                 	db	102	;'f'
  2314  00FF0C  20                 	db	32
  2315  00FF0D  42                 	db	66	;'B'
  2316  00FF0E  41                 	db	65	;'A'
  2317  00FF0F  20                 	db	32
  2318  00FF10  25                 	db	37
  2319  00FF11  32                 	db	50	;'2'
  2320  00FF12  2E                 	db	46
  2321  00FF13  32                 	db	50	;'2'
  2322  00FF14  66                 	db	102	;'f'
  2323  00FF15  20                 	db	32
  2324  00FF16  00                 	db	0
  2325  00FF17                     STR_17:
  2326                           
  2327                           ; BSR set to: 57
  2328  00FF17  43                 	db	67	;'C'
  2329  00FF18  56                 	db	86	;'V'
  2330  00FF19  20                 	db	32
  2331  00FF1A  25                 	db	37
  2332  00FF1B  32                 	db	50	;'2'
  2333  00FF1C  2E                 	db	46
  2334  00FF1D  32                 	db	50	;'2'
  2335  00FF1E  66                 	db	102	;'f'
  2336  00FF1F  20                 	db	32
  2337  00FF20  4C                 	db	76	;'L'
  2338  00FF21  41                 	db	65	;'A'
  2339  00FF22  20                 	db	32
  2340  00FF23  25                 	db	37
  2341  00FF24  32                 	db	50	;'2'
  2342  00FF25  2E                 	db	46
  2343  00FF26  32                 	db	50	;'2'
  2344  00FF27  66                 	db	102	;'f'
  2345  00FF28  20                 	db	32
  2346  00FF29  00                 	db	0
  2347  00FF2A                     STR_15:
  2348                           
  2349                           ; BSR set to: 57
  2350  00FF2A  50                 	db	80	;'P'
  2351  00FF2B  56                 	db	86	;'V'
  2352  00FF2C  20                 	db	32
  2353  00FF2D  25                 	db	37
  2354  00FF2E  32                 	db	50	;'2'
  2355  00FF2F  2E                 	db	46
  2356  00FF30  32                 	db	50	;'2'
  2357  00FF31  66                 	db	102	;'f'
  2358  00FF32  20                 	db	32
  2359  00FF33  50                 	db	80	;'P'
  2360  00FF34  41                 	db	65	;'A'
  2361  00FF35  20                 	db	32
  2362  00FF36  25                 	db	37
  2363  00FF37  32                 	db	50	;'2'
  2364  00FF38  2E                 	db	46
  2365  00FF39  32                 	db	50	;'2'
  2366  00FF3A  66                 	db	102	;'f'
  2367  00FF3B  20                 	db	32
  2368  00FF3C  00                 	db	0
  2369  00FF3D                     STR_8:
  2370                           
  2371                           ; BSR set to: 57
  2372  00FF3D  20                 	db	32
  2373  00FF3E  56                 	db	86	;'V'
  2374  00FF3F  54                 	db	84	;'T'
  2375  00FF40  45                 	db	69	;'E'
  2376  00FF41  52                 	db	82	;'R'
  2377  00FF42  4D                 	db	77	;'M'
  2378  00FF43  20                 	db	32
  2379  00FF44  23                 	db	35
  2380  00FF45  32                 	db	50	;'2'
  2381  00FF46  20                 	db	32
  2382  00FF47  20                 	db	32
  2383  00FF48  20                 	db	32
  2384  00FF49  20                 	db	32
  2385  00FF4A  20                 	db	32
  2386  00FF4B  20                 	db	32
  2387  00FF4C  20                 	db	32
  2388  00FF4D  00                 	db	0
  2389  00FF4E                     STR_4:
  2390                           
  2391                           ; BSR set to: 57
  2392  00FF4E  20                 	db	32
  2393  00FF4F  4E                 	db	78	;'N'
  2394  00FF50  53                 	db	83	;'S'
  2395  00FF51  41                 	db	65	;'A'
  2396  00FF52  53                 	db	83	;'S'
  2397  00FF53  50                 	db	80	;'P'
  2398  00FF54  4F                 	db	79	;'O'
  2399  00FF55  4F                 	db	79	;'O'
  2400  00FF56  4B                 	db	75	;'K'
  2401  00FF57  20                 	db	32
  2402  00FF58  20                 	db	32
  2403  00FF59  20                 	db	32
  2404  00FF5A  20                 	db	32
  2405  00FF5B  20                 	db	32
  2406  00FF5C  20                 	db	32
  2407  00FF5D  20                 	db	32
  2408  00FF5E  00                 	db	0
  2409  00FF5F                     STR_1:
  2410                           
  2411                           ; BSR set to: 57
  2412  00FF5F  20                 	db	32
  2413  00FF60  4D                 	db	77	;'M'
  2414  00FF61  42                 	db	66	;'B'
  2415  00FF62  4D                 	db	77	;'M'
  2416  00FF63  43                 	db	67	;'C'
  2417  00FF64  20                 	db	32
  2418  00FF65  53                 	db	83	;'S'
  2419  00FF66  4F                 	db	79	;'O'
  2420  00FF67  4C                 	db	76	;'L'
  2421  00FF68  41                 	db	65	;'A'
  2422  00FF69  52                 	db	82	;'R'
  2423  00FF6A  4D                 	db	77	;'M'
  2424  00FF6B  4F                 	db	79	;'O'
  2425  00FF6C  4E                 	db	78	;'N'
  2426  00FF6D  20                 	db	32
  2427  00FF6E  20                 	db	32
  2428  00FF6F  00                 	db	0
  2429  00FF70                     STR_5:
  2430                           
  2431                           ; BSR set to: 57
  2432  00FF70  20                 	db	32
  2433  00FF71  53                 	db	83	;'S'
  2434  00FF72  45                 	db	69	;'E'
  2435  00FF73  51                 	db	81	;'Q'
  2436  00FF74  55                 	db	85	;'U'
  2437  00FF75  45                 	db	69	;'E'
  2438  00FF76  4E                 	db	78	;'N'
  2439  00FF77  43                 	db	67	;'C'
  2440  00FF78  45                 	db	69	;'E'
  2441  00FF79  20                 	db	32
  2442  00FF7A  54                 	db	84	;'T'
  2443  00FF7B  45                 	db	69	;'E'
  2444  00FF7C  53                 	db	83	;'S'
  2445  00FF7D  54                 	db	84	;'T'
  2446  00FF7E  20                 	db	32
  2447  00FF7F  20                 	db	32
  2448  00FF80  00                 	db	0
  2449  00FF81                     STR_11:
  2450                           
  2451                           ; BSR set to: 57
  2452  00FF81  25                 	db	37
  2453  00FF82  64                 	db	100	;'d'
  2454  00FF83  20                 	db	32
  2455  00FF84  25                 	db	37
  2456  00FF85  32                 	db	50	;'2'
  2457  00FF86  2E                 	db	46
  2458  00FF87  34                 	db	52	;'4'
  2459  00FF88  66                 	db	102	;'f'
  2460  00FF89  2C                 	db	44
  2461  00FF8A  20                 	db	32
  2462  00FF8B  25                 	db	37
  2463  00FF8C  64                 	db	100	;'d'
  2464  00FF8D  20                 	db	32
  2465  00FF8E  20                 	db	32
  2466  00FF8F  20                 	db	32
  2467  00FF90  23                 	db	35
  2468  00FF91  00                 	db	0
  2469  00FF92                     STR_9:
  2470                           
  2471                           ; BSR set to: 57
  2472  00FF92  25                 	db	37
  2473  00FF93  64                 	db	100	;'d'
  2474  00FF94  20                 	db	32
  2475  00FF95  25                 	db	37
  2476  00FF96  32                 	db	50	;'2'
  2477  00FF97  2E                 	db	46
  2478  00FF98  34                 	db	52	;'4'
  2479  00FF99  66                 	db	102	;'f'
  2480  00FF9A  20                 	db	32
  2481  00FF9B  20                 	db	32
  2482  00FF9C  20                 	db	32
  2483  00FF9D  25                 	db	37
  2484  00FF9E  64                 	db	100	;'d'
  2485  00FF9F  20                 	db	32
  2486  00FFA0  20                 	db	32
  2487  00FFA1  00                 	db	0
  2488  00FFA2                     STR_33:
  2489                           
  2490                           ; BSR set to: 57
  2491  00FFA2  76                 	db	118	;'v'
  2492  00FFA3  74                 	db	116	;'t'
  2493  00FFA4  65                 	db	101	;'e'
  2494  00FFA5  72                 	db	114	;'r'
  2495  00FFA6  6D                 	db	109	;'m'
  2496  00FFA7  20                 	db	32
  2497  00FFA8  25                 	db	37
  2498  00FFA9  78                 	db	120	;'x'
  2499  00FFAA  3A                 	db	58	;':'
  2500  00FFAB  25                 	db	37
  2501  00FFAC  78                 	db	120	;'x'
  2502  00FFAD  20                 	db	32
  2503  00FFAE  20                 	db	32
  2504  00FFAF  20                 	db	32
  2505  00FFB0  00                 	db	0
  2506  00FFB1                     STR_2:
  2507                           
  2508                           ; BSR set to: 57
  2509  00FFB1  20                 	db	32
  2510  00FFB2  56                 	db	86	;'V'
  2511  00FFB3  65                 	db	101	;'e'
  2512  00FFB4  72                 	db	114	;'r'
  2513  00FFB5  73                 	db	115	;'s'
  2514  00FFB6  69                 	db	105	;'i'
  2515  00FFB7  6F                 	db	111	;'o'
  2516  00FFB8  6E                 	db	110	;'n'
  2517  00FFB9  20                 	db	32
  2518  00FFBA  25                 	db	37
  2519  00FFBB  73                 	db	115	;'s'
  2520  00FFBC  20                 	db	32
  2521  00FFBD  20                 	db	32
  2522  00FFBE  20                 	db	32
  2523  00FFBF  00                 	db	0
  2524  00FFC0                     STR_27:
  2525                           
  2526                           ; BSR set to: 57
  2527  00FFC0  44                 	db	68	;'D'
  2528  00FFC1  65                 	db	101	;'e'
  2529  00FFC2  63                 	db	99	;'c'
  2530  00FFC3  20                 	db	32
  2531  00FFC4  20                 	db	32
  2532  00FFC5  37                 	db	55	;'7'
  2533  00FFC6  20                 	db	32
  2534  00FFC7  32                 	db	50	;'2'
  2535  00FFC8  30                 	db	48	;'0'
  2536  00FFC9  31                 	db	49	;'1'
  2537  00FFCA  39                 	db	57	;'9'
  2538  00FFCB  00                 	db	0
  2539  00FFCC                     STR_31:
  2540                           
  2541                           ; BSR set to: 57
  2542  00FFCC  25                 	db	37
  2543  00FFCD  73                 	db	115	;'s'
  2544  00FFCE  20                 	db	32
  2545  00FFCF  20                 	db	32
  2546  00FFD0  20                 	db	32
  2547  00FFD1  20                 	db	32
  2548  00FFD2  20                 	db	32
  2549  00FFD3  20                 	db	32
  2550  00FFD4  20                 	db	32
  2551  00FFD5  00                 	db	0
  2552  00FFD6                     STR_28:
  2553                           
  2554                           ; BSR set to: 57
  2555  00FFD6  30                 	db	48	;'0'
  2556  00FFD7  39                 	db	57	;'9'
  2557  00FFD8  3A                 	db	58	;':'
  2558  00FFD9  33                 	db	51	;'3'
  2559  00FFDA  37                 	db	55	;'7'
  2560  00FFDB  3A                 	db	58	;':'
  2561  00FFDC  33                 	db	51	;'3'
  2562  00FFDD  36                 	db	54	;'6'
  2563  00FFDE  00                 	db	0
  2564  00FFDF                     STR_3:
  2565                           
  2566                           ; BSR set to: 57
  2567  00FFDF  30                 	db	48	;'0'
  2568  00FFE0  2E                 	db	46
  2569  00FFE1  39                 	db	57	;'9'
  2570  00FFE2  39                 	db	57	;'9'
  2571  00FFE3  39                 	db	57	;'9'
  2572  00FFE4  00                 	db	0
  2573  00FFE5                     STR_47:
  2574                           
  2575                           ; BSR set to: 57
  2576  00FFE5  49                 	db	73	;'I'
  2577  00FFE6  4E                 	db	78	;'N'
  2578  00FFE7  46                 	db	70	;'F'
  2579  00FFE8  00                 	db	0
  2580  00FFE9                     STR_51:
  2581                           
  2582                           ; BSR set to: 57
  2583  00FFE9  4E                 	db	78	;'N'
  2584  00FFEA  41                 	db	65	;'A'
  2585  00FFEB  4E                 	db	78	;'N'
  2586  00FFEC  00                 	db	0
  2587  00FFED                     STR_48:
  2588                           
  2589                           ; BSR set to: 57
  2590  00FFED  69                 	db	105	;'i'
  2591  00FFEE  6E                 	db	110	;'n'
  2592  00FFEF  66                 	db	102	;'f'
  2593  00FFF0  00                 	db	0
  2594  00FFF1                     STR_52:
  2595                           
  2596                           ; BSR set to: 57
  2597  00FFF1  6E                 	db	110	;'n'
  2598  00FFF2  61                 	db	97	;'a'
  2599  00FFF3  6E                 	db	110	;'n'
  2600  00FFF4  00                 	db	0
  2601  00FFF5                     STR_55:
  2602                           
  2603                           ; BSR set to: 57
  2604  00FFF5  6C                 	db	108	;'l'
  2605  00FFF6  66                 	db	102	;'f'
  2606  00FFF7  00                 	db	0
  2607  00FFF8                     STR_25:
  2608                           
  2609                           ; BSR set to: 57
  2610  00FFF8  25                 	db	37
  2611  00FFF9  63                 	db	99	;'c'
  2612  00FFFA  00                 	db	0
  2613  00FFFB                     STR_24:
  2614                           
  2615                           ; BSR set to: 57
  2616  00FFFB  25                 	db	37
  2617  00FFFC  73                 	db	115	;'s'
  2618  00FFFD  00                 	db	0
  2619  0000                     
  2620                           ; #config settings
  2621  00FFFE  00                 	db	0	; dummy byte at the end
  2622  0000                     
  2623                           	psect	cinit
  2624  017B0E                     __pcinit:
  2625                           	opt callstack 0
  2626  017B0E                     start_initialization:
  2627                           	opt callstack 0
  2628  017B0E                     __initialization:
  2629                           	opt callstack 0
  2630                           
  2631                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2632                           ; load TBLPTR registers with __pidataBIGRAM
  2633  017B0E  0E44               	movlw	low __pidataBIGRAM
  2634  017B10  6EF6               	movwf	tblptrl,c
  2635  017B12  0E66               	movlw	high __pidataBIGRAM
  2636  017B14  6EF7               	movwf	tblptrh,c
  2637  017B16  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2638  017B18  6EF8               	movwf	tblptru,c
  2639  017B1A  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2640  017B1E  EE20 F200          	lfsr	2,512
  2641  017B22                     copy_data0:
  2642  017B22  0009               	tblrd		*+
  2643  017B24  006F FFD7 FFEE     	movff	tablat,postinc0
  2644  017B2A  50DD               	movf	postdec2,w,c
  2645  017B2C  50D9               	movf	fsr2l,w,c
  2646  017B2E  E1F9               	bnz	copy_data0
  2647  017B30  50DA               	movf	fsr2h,w,c
  2648  017B32  E1F7               	bnz	copy_data0
  2649                           
  2650                           ; Initialize objects allocated to BANK2 (188 bytes)
  2651                           ; load TBLPTR registers with __pidataBANK2
  2652  017B34  0E84               	movlw	low __pidataBANK2
  2653  017B36  6EF6               	movwf	tblptrl,c
  2654  017B38  0E81               	movlw	high __pidataBANK2
  2655  017B3A  6EF7               	movwf	tblptrh,c
  2656  017B3C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2657  017B3E  6EF8               	movwf	tblptru,c
  2658  017B40  EE00  F200         	lfsr	0,__pdataBANK2
  2659  017B44  EE20 F0BC          	lfsr	2,188
  2660  017B48                     copy_data1:
  2661  017B48  0009               	tblrd		*+
  2662  017B4A  006F FFD7 FFEE     	movff	tablat,postinc0
  2663  017B50  50DD               	movf	postdec2,w,c
  2664  017B52  50D9               	movf	fsr2l,w,c
  2665  017B54  E1F9               	bnz	copy_data1
  2666                           
  2667                           ; Initialize objects allocated to BANK1 (218 bytes)
  2668                           ; load TBLPTR registers with __pidataBANK1
  2669  017B56  0E12               	movlw	low __pidataBANK1
  2670  017B58  6EF6               	movwf	tblptrl,c
  2671  017B5A  0E7F               	movlw	high __pidataBANK1
  2672  017B5C  6EF7               	movwf	tblptrh,c
  2673  017B5E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2674  017B60  6EF8               	movwf	tblptru,c
  2675  017B62  EE00  F100         	lfsr	0,__pdataBANK1
  2676  017B66  EE20 F0DA          	lfsr	2,218
  2677  017B6A                     copy_data2:
  2678  017B6A  0009               	tblrd		*+
  2679  017B6C  006F FFD7 FFEE     	movff	tablat,postinc0
  2680  017B72  50DD               	movf	postdec2,w,c
  2681  017B74  50D9               	movf	fsr2l,w,c
  2682  017B76  E1F9               	bnz	copy_data2
  2683                           
  2684                           ; Initialize objects allocated to BANK0 (47 bytes)
  2685                           ; load TBLPTR registers with __pidataBANK0
  2686  017B78  0E86               	movlw	low __pidataBANK0
  2687  017B7A  6EF6               	movwf	tblptrl,c
  2688  017B7C  0E95               	movlw	high __pidataBANK0
  2689  017B7E  6EF7               	movwf	tblptrh,c
  2690  017B80  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2691  017B82  6EF8               	movwf	tblptru,c
  2692  017B84  EE00  F0CB         	lfsr	0,__pdataBANK0
  2693  017B88  EE20 F02F          	lfsr	2,47
  2694  017B8C                     copy_data3:
  2695  017B8C  0009               	tblrd		*+
  2696  017B8E  006F FFD7 FFEE     	movff	tablat,postinc0
  2697  017B94  50DD               	movf	postdec2,w,c
  2698  017B96  50D9               	movf	fsr2l,w,c
  2699  017B98  E1F9               	bnz	copy_data3
  2700                           
  2701                           ; Clear objects allocated to BIGRAM (290 bytes)
  2702  017B9A  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2703  017B9E  EE20 F122          	lfsr	2,290
  2704  017BA2                     clear_0:
  2705  017BA2  6AEE               	clrf	postinc0,c
  2706  017BA4  50DD               	movf	postdec2,w,c
  2707  017BA6  50D9               	movf	fsr2l,w,c
  2708  017BA8  E1FC               	bnz	clear_0
  2709  017BAA  50DA               	movf	fsr2h,w,c
  2710  017BAC  E1FA               	bnz	clear_0
  2711                           
  2712                           ; Clear objects allocated to BANK5 (255 bytes)
  2713  017BAE  EE01  F100         	lfsr	0,__pbssBANK5
  2714  017BB2  EE20 F0FF          	lfsr	2,255
  2715  017BB6                     clear_1:
  2716  017BB6  6AEE               	clrf	postinc0,c
  2717  017BB8  50DD               	movf	postdec2,w,c
  2718  017BBA  50D9               	movf	fsr2l,w,c
  2719  017BBC  E1FC               	bnz	clear_1
  2720  017BBE  50DA               	movf	fsr2h,w,c
  2721  017BC0  E1FA               	bnz	clear_1
  2722                           
  2723                           ; Clear objects allocated to BANK4 (134 bytes)
  2724  017BC2  EE01  F000         	lfsr	0,__pbssBANK4
  2725  017BC6  0E86               	movlw	134
  2726  017BC8                     clear_2:
  2727  017BC8  6AEE               	clrf	postinc0,c
  2728  017BCA  06E8               	decf	wreg,f,c
  2729  017BCC  E1FD               	bnz	clear_2
  2730                           
  2731                           ; Clear objects allocated to BANK3 (228 bytes)
  2732  017BCE  EE00  F300         	lfsr	0,__pbssBANK3
  2733  017BD2  0EE4               	movlw	228
  2734  017BD4                     clear_3:
  2735  017BD4  6AEE               	clrf	postinc0,c
  2736  017BD6  06E8               	decf	wreg,f,c
  2737  017BD8  E1FD               	bnz	clear_3
  2738                           
  2739                           ; Clear objects allocated to BANK2 (8 bytes)
  2740  017BDA  EE00  F2D5         	lfsr	0,__pbssBANK2
  2741  017BDE  0E08               	movlw	8
  2742  017BE0                     clear_4:
  2743  017BE0  6AEE               	clrf	postinc0,c
  2744  017BE2  06E8               	decf	wreg,f,c
  2745  017BE4  E1FD               	bnz	clear_4
  2746                           
  2747                           ; Clear objects allocated to BANK1 (32 bytes)
  2748  017BE6  EE00  F1DA         	lfsr	0,__pbssBANK1
  2749  017BEA  0E20               	movlw	32
  2750  017BEC                     clear_5:
  2751  017BEC  6AEE               	clrf	postinc0,c
  2752  017BEE  06E8               	decf	wreg,f,c
  2753  017BF0  E1FD               	bnz	clear_5
  2754                           
  2755                           ; Clear objects allocated to BANK0 (107 bytes)
  2756  017BF2  EE00  F060         	lfsr	0,__pbssBANK0
  2757  017BF6  0E6B               	movlw	107
  2758  017BF8                     clear_6:
  2759  017BF8  6AEE               	clrf	postinc0,c
  2760  017BFA  06E8               	decf	wreg,f,c
  2761  017BFC  E1FD               	bnz	clear_6
  2762                           
  2763                           ; Clear objects allocated to COMRAM (23 bytes)
  2764  017BFE  EE00  F021         	lfsr	0,__pbssCOMRAM
  2765  017C02  0E17               	movlw	23
  2766  017C04                     clear_7:
  2767  017C04  6AEE               	clrf	postinc0,c
  2768  017C06  06E8               	decf	wreg,f,c
  2769  017C08  E1FD               	bnz	clear_7
  2770                           
  2771                           ;
  2772                           ; Setup IVTBASE
  2773                           ;
  2774  017C0A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2775  017C0C  6ED5               	movwf	213,c
  2776  017C0E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2777  017C10  6ED6               	movwf	214,c
  2778  017C12  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2779  017C14  6ED7               	movwf	215,c
  2780  017C16                     end_of_initialization:
  2781                           	opt callstack 0
  2782  017C16                     __end_of__initialization:
  2783                           	opt callstack 0
  2784  017C16  0100               	movlb	0
  2785  017C18  EFC1  F08E         	goto	_main	;jump to C main() function
  2786                           
  2787                           	psect	bssCOMRAM
  2788  000021                     __pbssCOMRAM:
  2789                           	opt callstack 0
  2790  000021                     _width:
  2791                           	opt callstack 0
  2792  000021                     	ds	2
  2793  000023                     _prec:
  2794                           	opt callstack 0
  2795  000023                     	ds	2
  2796  000025                     _flags:
  2797                           	opt callstack 0
  2798  000025                     	ds	2
  2799  000027                     _timer3ReloadVal:
  2800                           	opt callstack 0
  2801  000027                     	ds	2
  2802  000029                     TMR5_ISR@CountCallBack:
  2803                           	opt callstack 0
  2804  000029                     	ds	2
  2805  00002B                     _timer5ReloadVal:
  2806                           	opt callstack 0
  2807  00002B                     	ds	2
  2808  00002D                     Volts_to_SOC@slot:
  2809                           	opt callstack 0
  2810  00002D                     	ds	1
  2811  00002E                     _mode_sw:
  2812                           	opt callstack 0
  2813  00002E                     	ds	1
  2814  00002F                     _uart2RxCount:
  2815                           	opt callstack 0
  2816  00002F                     	ds	1
  2817  000030                     _uart2RxTail:
  2818                           	opt callstack 0
  2819  000030                     	ds	1
  2820  000031                     _uart2RxHead:
  2821                           	opt callstack 0
  2822  000031                     	ds	1
  2823  000032                     _uart2TxBufferRemaining:
  2824                           	opt callstack 0
  2825  000032                     	ds	1
  2826  000033                     _uart2TxTail:
  2827                           	opt callstack 0
  2828  000033                     	ds	1
  2829  000034                     _uart2TxHead:
  2830                           	opt callstack 0
  2831  000034                     	ds	1
  2832  000035                     _uart1RxCount:
  2833                           	opt callstack 0
  2834  000035                     	ds	1
  2835  000036                     _uart1RxTail:
  2836                           	opt callstack 0
  2837  000036                     	ds	1
  2838  000037                     _uart1RxHead:
  2839                           	opt callstack 0
  2840  000037                     	ds	1
  2841                           
  2842                           	psect	bssBANK0
  2843  000060                     __pbssBANK0:
  2844                           	opt callstack 0
  2845  000060                     _S:
  2846                           	opt callstack 0
  2847  000060                     	ds	41
  2848  000089                     _spi_link:
  2849                           	opt callstack 0
  2850  000089                     	ds	12
  2851  000095                     floorf@F524:
  2852                           	opt callstack 0
  2853  000095                     	ds	4
  2854  000099                     ___fpclassifyf@F463:
  2855                           	opt callstack 0
  2856  000099                     	ds	4
  2857  00009D                     _utctime:
  2858                           	opt callstack 0
  2859  00009D                     	ds	4
  2860  0000A1                     wdtdelay@dcount:
  2861                           	opt callstack 0
  2862  0000A1                     	ds	4
  2863  0000A5                     _P:
  2864                           	opt callstack 0
  2865  0000A5                     	ds	4
  2866  0000A9                     _TMR3_InterruptHandler:
  2867                           	opt callstack 0
  2868  0000A9                     	ds	3
  2869  0000AC                     _TMR5_InterruptHandler:
  2870                           	opt callstack 0
  2871  0000AC                     	ds	3
  2872  0000AF                     _TMR6_InterruptHandler:
  2873                           	opt callstack 0
  2874  0000AF                     	ds	3
  2875  0000B2                     _ADCC_ADTI_InterruptHandler:
  2876                           	opt callstack 0
  2877  0000B2                     	ds	3
  2878  0000B5                     _ADCC_ADI_InterruptHandler:
  2879                           	opt callstack 0
  2880  0000B5                     	ds	3
  2881  0000B8                     _UART1_RxInterruptHandler:
  2882                           	opt callstack 0
  2883  0000B8                     	ds	3
  2884  0000BB                     _UART2_TxInterruptHandler:
  2885                           	opt callstack 0
  2886  0000BB                     	ds	3
  2887  0000BE                     _UART2_RxInterruptHandler:
  2888                           	opt callstack 0
  2889  0000BE                     	ds	3
  2890  0000C1                     _INT1_InterruptHandler:
  2891                           	opt callstack 0
  2892  0000C1                     	ds	3
  2893  0000C4                     _INT0_InterruptHandler:
  2894                           	opt callstack 0
  2895  0000C4                     	ds	3
  2896  0000C7                     _nout:
  2897                           	opt callstack 0
  2898  0000C7                     	ds	2
  2899  0000C9                     TMR3_ISR@CountCallBack:
  2900                           	opt callstack 0
  2901  0000C9                     	ds	2
  2902                           
  2903                           	psect	dataBANK0
  2904  0000CB                     __pdataBANK0:
  2905                           	opt callstack 0
  2906  0000CB                     _R:
  2907                           	opt callstack 0
  2908  0000CB                     	ds	40
  2909  0000F3                     _H:
  2910                           	opt callstack 0
  2911  0000F3                     	ds	7
  2912                           
  2913                           	psect	bssBANK1
  2914  0001DA                     __pbssBANK1:
  2915                           	opt callstack 0
  2916  0001DA                     _tickCount:
  2917                           	opt callstack 0
  2918  0001DA                     	ds	24
  2919  0001F2                     _uart1RxBuffer:
  2920                           	opt callstack 0
  2921  0001F2                     	ds	8
  2922                           
  2923                           	psect	dataBANK1
  2924  000100                     __pdataBANK1:
  2925                           	opt callstack 0
  2926  000100                     _C:
  2927                           	opt callstack 0
  2928  000100                     	ds	211
  2929  0001D3                     stoa@F1166:
  2930                           	opt callstack 0
  2931  0001D3                     	ds	7
  2932                           
  2933                           	psect	bssBANK2
  2934  0002D5                     __pbssBANK2:
  2935                           	opt callstack 0
  2936  0002D5                     _seed:
  2937                           	opt callstack 0
  2938  0002D5                     	ds	8
  2939                           
  2940                           	psect	dataBANK2
  2941  000200                     __pdataBANK2:
  2942                           	opt callstack 0
  2943  000200                     _V:
  2944                           	opt callstack 0
  2945  000200                     	ds	188
  2946                           
  2947                           	psect	bssBANK3
  2948  000300                     __pbssBANK3:
  2949                           	opt callstack 0
  2950  000300                     lp_filter@smooth:
  2951                           	opt callstack 0
  2952  000300                     	ds	84
  2953  000354                     _uart2TxBuffer:
  2954                           	opt callstack 0
  2955  000354                     	ds	64
  2956  000394                     _dbuf:
  2957                           	opt callstack 0
  2958  000394                     	ds	80
  2959                           
  2960                           	psect	bssBANK4
  2961  000400                     __pbssBANK4:
  2962                           	opt callstack 0
  2963  000400                     _ring_buf2:
  2964                           	opt callstack 0
  2965  000400                     	ds	67
  2966  000443                     _ring_buf1:
  2967                           	opt callstack 0
  2968  000443                     	ds	67
  2969                           
  2970                           	psect	bssBANK5
  2971  000500                     __pbssBANK5:
  2972                           	opt callstack 0
  2973  000500                     _uart2RxBuffer:
  2974                           	opt callstack 0
  2975  000500                     	ds	255
  2976                           
  2977                           	psect	bssBIGRAM
  2978  0007FF                     __pbssBIGRAM:
  2979                           	opt callstack 0
  2980  0007FF                     _D:
  2981                           	opt callstack 0
  2982  0007FF                     	ds	290
  2983                           
  2984                           	psect	dataBIGRAM
  2985  0005FF                     __pdataBIGRAM:
  2986                           	opt callstack 0
  2987  0005FF                     _port_data:
  2988                           	opt callstack 0
  2989  0005FF                     	ds	512
  2990                           
  2991                           	psect	cstackBANK2
  2992  0002BC                     __pcstackBANK2:
  2993                           	opt callstack 0
  2994  0002BC                     ??_TMR3_ISR:
  2995                           
  2996                           ; 1 bytes @ 0x0
  2997  0002BC                     	ds	25
  2998                           
  2999                           	psect	cstackCOMRAM
  3000  000038                     __pcstackCOMRAM:
  3001                           	opt callstack 0
  3002  000038                     ??_ADCC_ThresholdISR:
  3003  000038                     
  3004                           ; 1 bytes @ 0x0
  3005  000038                     	ds	5
  3006  00003D                     ??_TMR6_ISR:
  3007                           
  3008                           ; 1 bytes @ 0x5
  3009  00003D                     	ds	1
  3010  00003E                     ??_INT1_ISR:
  3011  00003E                     
  3012                           ; 1 bytes @ 0x6
  3013  00003E                     	ds	4
  3014  000042                     ??_TMR5_ISR:
  3015                           
  3016                           ; 1 bytes @ 0xA
  3017  000042                     	ds	4
  3018                           
  3019 ;;
  3020 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  3021 ;;
  3022 ;; *************** function _main *****************
  3023 ;; Defined at:
  3024 ;;		line 174 in file "main.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  k               1  [STACK] unsigned char 
  3029 ;;  j               1  [STACK] unsigned char 
  3030 ;;  i               1  [STACK] unsigned char 
  3031 ;;  inp_index       1  [STACK] unsigned char 
  3032 ;;  mode            1  [STACK] enum E17013
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1  [STACK] void 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels required when called:   28
  3048 ;; This function calls:
  3049 ;;		_SYSTEM_Initialize
  3050 ;;		_StartTimer
  3051 ;;		_TimerDone
  3052 ;;		_WaitMs
  3053 ;;		_calc_model_data
  3054 ;;		_check_adc_scan
  3055 ;;		_check_enter_button
  3056 ;;		_check_help
  3057 ;;		_clear_adc_scan
  3058 ;;		_clear_hid_pflags
  3059 ;;		_convert_adc_data
  3060 ;;		_eaDogM_WriteCommand
  3061 ;;		_get_raw_result
  3062 ;;		_get_switch
  3063 ;;		_get_vterm_ptr
  3064 ;;		_hid_display
  3065 ;;		_init_bsoc
  3066 ;;		_init_display
  3067 ;;		_init_port_dma
  3068 ;;		_lp_filter
  3069 ;;		_mode_lamp_dim
  3070 ;;		_set_display_info
  3071 ;;		_set_vterm
  3072 ;;		_sprintf
  3073 ;;		_srand
  3074 ;;		_start_adc_scan
  3075 ;;		_start_switch_handler
  3076 ;;		_static_soc
  3077 ;;		_update_lcd
  3078 ;; This function is called by:
  3079 ;;		Startup code after reset
  3080 ;; This function uses a reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text0
  3084  011D82                     __ptext0:
  3085                           	opt callstack 0
  3086  011D82                     _main:
  3087                           	opt callstack 0
  3088                           
  3089                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3090  011D82  0E05               	movlw	5
  3091  011D84  26E1               	addwf	fsr1l,f,c
  3092  011D86  0E00               	movlw	0
  3093  011D88  22E2               	addwfc	fsr1h,f,c
  3094                           
  3095                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  3096                           ;stkvar	_inp_index @ sp[(-5)+3]
  3097                           
  3098                           ;incstack = 0
  3099  011D8A  0EFE               	movlw	-2
  3100  011D8C  6AE3               	clrf	plusw1,c
  3101                           
  3102                           ;stkvar	_i @ sp[(-5)+2]
  3103  011D8E  0EFD               	movlw	-3
  3104  011D90  6AE3               	clrf	plusw1,c
  3105                           
  3106                           ;stkvar	_j @ sp[(-5)+1]
  3107  011D92  0EFC               	movlw	-4
  3108  011D94  6AE3               	clrf	plusw1,c
  3109  011D96  2AE3               	incf	plusw1,f,c
  3110                           
  3111                           ;stkvar	_k @ sp[(-5)+0]
  3112  011D98  0EFB               	movlw	-5
  3113  011D9A  6AE3               	clrf	plusw1,c
  3114  011D9C  82E3               	bsf	plusw1,1,c
  3115                           
  3116                           ;main.c: 180:  SYSTEM_Initialize();
  3117  011D9E  EC03  F0C8         	call	_SYSTEM_Initialize	;wreg free
  3118                           
  3119                           ; BSR set to: 60
  3120                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3121  011DA2  8ED2               	bsf	210,7,c	;volatile
  3122                           
  3123                           ; BSR set to: 60
  3124                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3125  011DA4  8CD2               	bsf	210,6,c	;volatile
  3126                           
  3127                           ; BSR set to: 60
  3128                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3129  011DA6  0102               	movlb	2	; () banked
  3130  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  3131                           
  3132                           ; BSR set to: 2
  3133                           ;main.c: 193:  WaitMs(300);
  3134  011DAA  0E2C               	movlw	44
  3135  011DAC  6EE6               	movwf	postinc1,c
  3136  011DAE  0E01               	movlw	1
  3137  011DB0  6EE6               	movwf	postinc1,c
  3138  011DB2  ECF9  F0C9         	call	_WaitMs	;wreg free
  3139                           
  3140                           ;main.c: 194:  if (PORTBbits.RB0) {
  3141  011DB6  A0CB               	btfss	203,0,c	;volatile
  3142  011DB8  D004               	goto	l11720
  3143                           
  3144                           ;main.c: 195:   mode = UI_STATE_HOST;
  3145                           ;stkvar	_mode @ sp[(-5)+4]
  3146  011DBA  0EFF               	movlw	-1
  3147  011DBC  6AE3               	clrf	plusw1,c
  3148  011DBE  2AE3               	incf	plusw1,f,c
  3149                           
  3150                           ;main.c: 196:  } else {
  3151  011DC0  D004               	goto	l11722
  3152  011DC2                     l11720:
  3153                           
  3154                           ;main.c: 197:   mode = UI_STATE_LOG;
  3155                           ;stkvar	_mode @ sp[(-5)+4]
  3156  011DC2  0EFF               	movlw	-1
  3157  011DC4  6AE3               	clrf	plusw1,c
  3158  011DC6  80E3               	bsf	plusw1,0,c
  3159  011DC8  82E3               	bsf	plusw1,1,c	;indir
  3160  011DCA                     l11722:
  3161                           
  3162                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3163                           ;stkvar	_mode @ sp[(-5)+4]
  3164  011DCA  0EFF               	movlw	-1
  3165  011DCC  04E3               	decf	plusw1,w,c
  3166  011DCE  A4D8               	btfss	status,2,c
  3167  011DD0  D007               	goto	l1308
  3168                           
  3169                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3170  011DD2  80BD               	bsf	189,0,c	;volatile
  3171                           
  3172                           ;main.c: 202:   V.mode_pwm = 70;
  3173  011DD4  0E00               	movlw	0
  3174  011DD6  0102               	movlb	2	; () banked
  3175  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3176  011DDA  0E46               	movlw	70
  3177  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3178                           
  3179                           ;main.c: 203:  } else {
  3180  011DDE  D004               	goto	l11726
  3181  011DE0                     l1308:
  3182  011DE0  90BD               	bcf	189,0,c	;volatile
  3183                           
  3184                           ;main.c: 205:   V.mode_pwm = 0;
  3185  011DE2  0102               	movlb	2	; () banked
  3186  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3187  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3188  011DE8                     l11726:
  3189                           
  3190                           ; BSR set to: 2
  3191                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3192  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  3193  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3194  011DF4  ECD3  F0CD         	call	_mode_lamp_dim	;wreg free
  3195  011DF8  D0DC               	goto	l11778
  3196  011DFA                     l11728:
  3197                           
  3198                           ; BSR set to: 2
  3199                           ;main.c: 215:    init_port_dma();
  3200  011DFA  EC63  F0CA         	call	_init_port_dma	;wreg free
  3201                           
  3202                           ; BSR set to: 59
  3203                           ;main.c: 217:    init_display();
  3204  011DFE  EC14  F0BF         	call	_init_display	;wreg free
  3205                           
  3206                           ; BSR set to: 61
  3207                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3208  011E02  0E0C               	movlw	12
  3209  011E04  6EE6               	movwf	postinc1,c
  3210  011E06  EC27  F0CE         	call	_eaDogM_WriteCommand	;wreg free
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;main.c: 220:    V.ui_state = mode;
  3214                           ;stkvar	_mode @ sp[(-5)+4]
  3215  011E0A  0EFF               	movlw	-1
  3216  011E0C  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;main.c: 221:    srand(1957);
  3220  011E12  0EA5               	movlw	165
  3221  011E14  6EE6               	movwf	postinc1,c
  3222  011E16  0E07               	movlw	7
  3223  011E18  6EE6               	movwf	postinc1,c
  3224  011E1A  EC2F  F0CA         	call	_srand	;wreg free
  3225                           
  3226                           ; BSR set to: 2
  3227                           ;main.c: 222:    set_vterm(0);
  3228  011E1E  0E00               	movlw	0
  3229  011E20  6EE6               	movwf	postinc1,c
  3230  011E22  EC7D  F0CD         	call	_set_vterm	;wreg free
  3231                           
  3232                           ;main.c: 223:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3233  011E26  0E5F               	movlw	low STR_1
  3234  011E28  6EE6               	movwf	postinc1,c
  3235  011E2A  0EFF               	movlw	high STR_1
  3236  011E2C  6EE6               	movwf	postinc1,c
  3237  011E2E  0E00               	movlw	0
  3238  011E30  6EE6               	movwf	postinc1,c
  3239  011E32  0E00               	movlw	0
  3240  011E34  6EE6               	movwf	postinc1,c
  3241  011E36  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3242  011E3A  0060  F007  FFE6   	movff	btemp,postinc1
  3243  011E40  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3244  011E46  0E04               	movlw	4
  3245  011E48  6EE6               	movwf	postinc1,c
  3246  011E4A  EC0E  F0BE         	call	_sprintf	;wreg free
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;main.c: 224:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.999");
  3250  011E4E  0EDF               	movlw	low STR_3
  3251  011E50  6EE6               	movwf	postinc1,c
  3252  011E52  0EFF               	movlw	high STR_3
  3253  011E54  6EE6               	movwf	postinc1,c
  3254  011E56  0EB1               	movlw	low STR_2
  3255  011E58  6EE6               	movwf	postinc1,c
  3256  011E5A  0EFF               	movlw	high STR_2
  3257  011E5C  6EE6               	movwf	postinc1,c
  3258  011E5E  0E00               	movlw	0
  3259  011E60  6EE6               	movwf	postinc1,c
  3260  011E62  0E01               	movlw	1
  3261  011E64  6EE6               	movwf	postinc1,c
  3262  011E66  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3263  011E6A  0060  F007  FFE6   	movff	btemp,postinc1
  3264  011E70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3265  011E76  0E06               	movlw	6
  3266  011E78  6EE6               	movwf	postinc1,c
  3267  011E7A  EC0E  F0BE         	call	_sprintf	;wreg free
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;main.c: 225:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3271  011E7E  0E4E               	movlw	low STR_4
  3272  011E80  6EE6               	movwf	postinc1,c
  3273  011E82  0EFF               	movlw	high STR_4
  3274  011E84  6EE6               	movwf	postinc1,c
  3275  011E86  0E00               	movlw	0
  3276  011E88  6EE6               	movwf	postinc1,c
  3277  011E8A  0E02               	movlw	2
  3278  011E8C  6EE6               	movwf	postinc1,c
  3279  011E8E  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3280  011E92  0060  F007  FFE6   	movff	btemp,postinc1
  3281  011E98  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3282  011E9E  0E04               	movlw	4
  3283  011EA0  6EE6               	movwf	postinc1,c
  3284  011EA2  EC0E  F0BE         	call	_sprintf	;wreg free
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;main.c: 226:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3288  011EA6  0E70               	movlw	low STR_5
  3289  011EA8  6EE6               	movwf	postinc1,c
  3290  011EAA  0EFF               	movlw	high STR_5
  3291  011EAC  6EE6               	movwf	postinc1,c
  3292  011EAE  0E02               	movlw	2
  3293  011EB0  6EE6               	movwf	postinc1,c
  3294  011EB2  0E00               	movlw	0
  3295  011EB4  6EE6               	movwf	postinc1,c
  3296  011EB6  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3297  011EBA  0060  F007  FFE6   	movff	btemp,postinc1
  3298  011EC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3299  011EC6  0E04               	movlw	4
  3300  011EC8  6EE6               	movwf	postinc1,c
  3301  011ECA  EC0E  F0BE         	call	_sprintf	;wreg free
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;main.c: 227:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.999");
  3305  011ECE  0EDF               	movlw	low STR_3
  3306  011ED0  6EE6               	movwf	postinc1,c
  3307  011ED2  0EFF               	movlw	high STR_3
  3308  011ED4  6EE6               	movwf	postinc1,c
  3309  011ED6  0EB1               	movlw	low STR_2
  3310  011ED8  6EE6               	movwf	postinc1,c
  3311  011EDA  0EFF               	movlw	high STR_2
  3312  011EDC  6EE6               	movwf	postinc1,c
  3313  011EDE  0E02               	movlw	2
  3314  011EE0  6EE6               	movwf	postinc1,c
  3315  011EE2  0E01               	movlw	1
  3316  011EE4  6EE6               	movwf	postinc1,c
  3317  011EE6  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3318  011EEA  0060  F007  FFE6   	movff	btemp,postinc1
  3319  011EF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3320  011EF6  0E06               	movlw	6
  3321  011EF8  6EE6               	movwf	postinc1,c
  3322  011EFA  EC0E  F0BE         	call	_sprintf	;wreg free
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;main.c: 228:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3326  011EFE  0E3D               	movlw	low STR_8
  3327  011F00  6EE6               	movwf	postinc1,c
  3328  011F02  0EFF               	movlw	high STR_8
  3329  011F04  6EE6               	movwf	postinc1,c
  3330  011F06  0E02               	movlw	2
  3331  011F08  6EE6               	movwf	postinc1,c
  3332  011F0A  0E02               	movlw	2
  3333  011F0C  6EE6               	movwf	postinc1,c
  3334  011F0E  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3335  011F12  0060  F007  FFE6   	movff	btemp,postinc1
  3336  011F18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3337  011F1E  0E04               	movlw	4
  3338  011F20  6EE6               	movwf	postinc1,c
  3339  011F22  EC0E  F0BE         	call	_sprintf	;wreg free
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;main.c: 229:    update_lcd(0);
  3343  011F26  0E00               	movlw	0
  3344  011F28  6EE6               	movwf	postinc1,c
  3345  011F2A  ECFF  F0BC         	call	_update_lcd	;wreg free
  3346                           
  3347                           ;main.c: 230:    WaitMs(3000);
  3348  011F2E  0EB8               	movlw	184
  3349  011F30  6EE6               	movwf	postinc1,c
  3350  011F32  0E0B               	movlw	11
  3351  011F34  6EE6               	movwf	postinc1,c
  3352  011F36  ECF9  F0C9         	call	_WaitMs	;wreg free
  3353                           
  3354                           ;main.c: 231:    StartTimer(TMR_DISPLAY, 250);
  3355  011F3A  0EFA               	movlw	250
  3356  011F3C  6EE6               	movwf	postinc1,c
  3357  011F3E  0E00               	movlw	0
  3358  011F40  6EE6               	movwf	postinc1,c
  3359  011F42  0E0A               	movlw	10
  3360  011F44  6EE6               	movwf	postinc1,c
  3361  011F46  EC3E  F0C9         	call	_StartTimer	;wreg free
  3362                           
  3363                           ;main.c: 232:    StartTimer(TMR_ADC, 200);
  3364  011F4A  0EC8               	movlw	200
  3365  011F4C  6EE6               	movwf	postinc1,c
  3366  011F4E  0E00               	movlw	0
  3367  011F50  6EE6               	movwf	postinc1,c
  3368  011F52  0E01               	movlw	1
  3369  011F54  6EE6               	movwf	postinc1,c
  3370  011F56  EC3E  F0C9         	call	_StartTimer	;wreg free
  3371                           
  3372                           ;main.c: 233:    StartTimer(TMR_INFO, 3000);
  3373  011F5A  0EB8               	movlw	184
  3374  011F5C  6EE6               	movwf	postinc1,c
  3375  011F5E  0E0B               	movlw	11
  3376  011F60  6EE6               	movwf	postinc1,c
  3377  011F62  0E07               	movlw	7
  3378  011F64  6EE6               	movwf	postinc1,c
  3379  011F66  EC3E  F0C9         	call	_StartTimer	;wreg free
  3380                           
  3381                           ;main.c: 234:    StartTimer(TMR_FLIPPER, 1500);
  3382  011F6A  0EDC               	movlw	220
  3383  011F6C  6EE6               	movwf	postinc1,c
  3384  011F6E  0E05               	movlw	5
  3385  011F70  6EE6               	movwf	postinc1,c
  3386  011F72  0E0B               	movlw	11
  3387  011F74  6EE6               	movwf	postinc1,c
  3388  011F76  EC3E  F0C9         	call	_StartTimer	;wreg free
  3389                           
  3390                           ;main.c: 235:    StartTimer(TMR_HELPDIS, 3000);
  3391  011F7A  0EB8               	movlw	184
  3392  011F7C  6EE6               	movwf	postinc1,c
  3393  011F7E  0E0B               	movlw	11
  3394  011F80  6EE6               	movwf	postinc1,c
  3395  011F82  0E09               	movlw	9
  3396  011F84  6EE6               	movwf	postinc1,c
  3397  011F86  EC3E  F0C9         	call	_StartTimer	;wreg free
  3398                           
  3399                           ;main.c: 237:    start_adc_scan();
  3400  011F8A  EC16  F0C6         	call	_start_adc_scan	;wreg free
  3401                           
  3402                           ;main.c: 238:    start_switch_handler();
  3403  011F8E  EC3F  F0CD         	call	_start_switch_handler	;wreg free
  3404                           
  3405                           ; BSR set to: 57
  3406                           ;main.c: 239:    WaitMs(1000);
  3407  011F92  0EE8               	movlw	232
  3408  011F94  6EE6               	movwf	postinc1,c
  3409  011F96  0E03               	movlw	3
  3410  011F98  6EE6               	movwf	postinc1,c
  3411  011F9A  ECF9  F0C9         	call	_WaitMs	;wreg free
  3412                           
  3413                           ;main.c: 240:    static_soc();
  3414  011F9E  ECB0  F0CC         	call	_static_soc	;wreg free
  3415                           
  3416                           ; BSR set to: 1
  3417                           ;main.c: 241:    init_bsoc();
  3418  011FA2  EC6A  F0B7         	call	_init_bsoc	;wreg free
  3419                           
  3420                           ;main.c: 243:    break;
  3421  011FA6  D01C               	goto	l11780
  3422  011FA8                     l1316:
  3423                           
  3424                           ; BSR set to: 2
  3425                           ;main.c: 249:    P.SYSTEM_STABLE = 1;
  3426  011FA8  0100               	movlb	0	; () banked
  3427  011FAA  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  3428                           
  3429                           ;main.c: 250:    break;
  3430  011FAC  D019               	goto	l11780
  3431  011FAE                     l1318:
  3432                           
  3433                           ; BSR set to: 2
  3434                           ;main.c: 253:    V.ui_state = UI_STATE_INIT;
  3435  011FAE  6B00               	clrf	_V& (0+255),b	;volatile
  3436                           
  3437                           ;main.c: 254:    break;
  3438  011FB0  D017               	goto	l11780
  3439  011FB2                     l11778:
  3440  011FB2  0102               	movlb	2	; () banked
  3441  011FB4  5100               	movf	_V& (0+255),w,b	;volatile
  3442  011FB6  6E0B               	movwf	(btemp+10)^0,c
  3443  011FB8  6A0C               	clrf	(btemp+11)^0,c
  3444                           
  3445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3446                           ; Switch size 1, requested type "simple"
  3447                           ; Number of cases is 1, Range of values is 0 to 0
  3448                           ; switch strategies available:
  3449                           ; Name         Instructions Cycles
  3450                           ; simple_byte            4     3 (average)
  3451                           ;	Chosen strategy is simple_byte
  3452  011FBA  500C               	movf	(btemp+11)^0,w,c
  3453  011FBC  0A00               	xorlw	0	; case 0
  3454  011FBE  A4D8               	btfss	status,2,c
  3455  011FC0  D7F6               	goto	l1318
  3456                           
  3457                           ; BSR set to: 2
  3458                           ; Switch size 1, requested type "simple"
  3459                           ; Number of cases is 5, Range of values is 0 to 5
  3460                           ; switch strategies available:
  3461                           ; Name         Instructions Cycles
  3462                           ; simple_byte           16     9 (average)
  3463                           ;	Chosen strategy is simple_byte
  3464  011FC2  500B               	movf	(btemp+10)^0,w,c
  3465  011FC4  0A00               	xorlw	0	; case 0
  3466  011FC6  B4D8               	btfsc	status,2,c
  3467  011FC8  D718               	goto	l11728
  3468  011FCA  0A01               	xorlw	1	; case 1
  3469  011FCC  B4D8               	btfsc	status,2,c
  3470  011FCE  D008               	goto	l11780
  3471  011FD0  0A02               	xorlw	2	; case 3
  3472  011FD2  B4D8               	btfsc	status,2,c
  3473  011FD4  D005               	goto	l11780
  3474  011FD6  0A07               	xorlw	7	; case 4
  3475  011FD8  B4D8               	btfsc	status,2,c
  3476  011FDA  D7E6               	goto	l1316
  3477  011FDC  0A01               	xorlw	1	; case 5
  3478  011FDE  D7E7               	goto	l1318
  3479  011FE0                     l11780:
  3480                           
  3481                           ;main.c: 257:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3482  011FE0  0E01               	movlw	1
  3483  011FE2  6EE6               	movwf	postinc1,c
  3484  011FE4  EC83  F0CB         	call	_TimerDone	;wreg free
  3485  011FE8  5001               	movf	btemp^0,w,c
  3486  011FEA  B4D8               	btfsc	status,2,c
  3487  011FEC  D013               	goto	l11792
  3488  011FEE  EC6D  F0CE         	call	_check_adc_scan	;wreg free
  3489  011FF2  5001               	movf	btemp^0,w,c
  3490  011FF4  B4D8               	btfsc	status,2,c
  3491  011FF6  D00E               	goto	l11792
  3492                           
  3493                           ;main.c: 261:    convert_adc_data();
  3494  011FF8  EC20  F0C1         	call	_convert_adc_data	;wreg free
  3495                           
  3496                           ;main.c: 265:    clear_adc_scan();
  3497  011FFC  EC75  F0CE         	call	_clear_adc_scan	;wreg free
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;main.c: 266:    start_adc_scan();
  3501  012000  EC16  F0C6         	call	_start_adc_scan	;wreg free
  3502                           
  3503                           ;main.c: 267:    StartTimer(TMR_ADC, 200);
  3504  012004  0EC8               	movlw	200
  3505  012006  6EE6               	movwf	postinc1,c
  3506  012008  0E00               	movlw	0
  3507  01200A  6EE6               	movwf	postinc1,c
  3508  01200C  0E01               	movlw	1
  3509  01200E  6EE6               	movwf	postinc1,c
  3510  012010  EC3E  F0C9         	call	_StartTimer	;wreg free
  3511  012014                     l11792:
  3512                           
  3513                           ;main.c: 274:   if (TimerDone(TMR_DISPLAY)) {
  3514                           
  3515                           ;main.c: 270:   if (V.ticks) {
  3516  012014  0E0A               	movlw	10
  3517  012016  6EE6               	movwf	postinc1,c
  3518  012018  EC83  F0CB         	call	_TimerDone	;wreg free
  3519  01201C  5001               	movf	btemp^0,w,c
  3520  01201E  B4D8               	btfsc	status,2,c
  3521  012020  D27F               	goto	l11834
  3522                           
  3523                           ;main.c: 275:    if (TimerDone(TMR_HELPDIS)) {
  3524  012022  0E09               	movlw	9
  3525  012024  6EE6               	movwf	postinc1,c
  3526  012026  EC83  F0CB         	call	_TimerDone	;wreg free
  3527  01202A  5001               	movf	btemp^0,w,c
  3528  01202C  B4D8               	btfsc	status,2,c
  3529  01202E  D004               	goto	l11800
  3530                           
  3531                           ;main.c: 276:     set_display_info(DIS_STR);
  3532  012030  0E00               	movlw	0
  3533  012032  6EE6               	movwf	postinc1,c
  3534  012034  EC8C  F0CD         	call	_set_display_info	;wreg free
  3535  012038                     l11800:
  3536                           
  3537                           ;main.c: 278:    calc_model_data();
  3538  012038  ECB1  F0AA         	call	_calc_model_data	;wreg free
  3539                           
  3540                           ; BSR set to: 1
  3541                           ;main.c: 285:     hid_display(&H);
  3542                           
  3543                           ;main.c: 280:    if (0) {
  3544  01203C  0EF3               	movlw	_H& (0+255)
  3545  01203E  6EE6               	movwf	postinc1,c
  3546  012040  EC93  F0BE         	call	_hid_display	;wreg free
  3547                           
  3548                           ;main.c: 286:     switch (H.hid_display) {
  3549  012044  D248               	goto	l11826
  3550  012046                     l1326:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;main.c: 288:      V.calib = 0;
  3554  012046  0102               	movlb	2	; () banked
  3555  012048  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3556                           
  3557                           ; BSR set to: 2
  3558                           ;main.c: 289:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3559  01204A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3560  012050  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3561  012056  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3562  01205C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3563  012062  0EB8               	movlw	low STR_12
  3564  012064  6EE6               	movwf	postinc1,c
  3565  012066  0EFE               	movlw	high STR_12
  3566  012068  6EE6               	movwf	postinc1,c
  3567  01206A  0E00               	movlw	0
  3568  01206C  6EE6               	movwf	postinc1,c
  3569  01206E  0E00               	movlw	0
  3570  012070  6EE6               	movwf	postinc1,c
  3571  012072  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3572  012076  0060  F007  FFE6   	movff	btemp,postinc1
  3573  01207C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3574  012082  0E08               	movlw	8
  3575  012084  6EE6               	movwf	postinc1,c
  3576  012086  EC0E  F0BE         	call	_sprintf	;wreg free
  3577                           
  3578                           ;main.c: 290:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3579  01208A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3580  012090  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3581  012096  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3582  01209C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3583  0120A2  0EDE               	movlw	low STR_13
  3584  0120A4  6EE6               	movwf	postinc1,c
  3585  0120A6  0EFE               	movlw	high STR_13
  3586  0120A8  6EE6               	movwf	postinc1,c
  3587  0120AA  0E00               	movlw	0
  3588  0120AC  6EE6               	movwf	postinc1,c
  3589  0120AE  0E01               	movlw	1
  3590  0120B0  6EE6               	movwf	postinc1,c
  3591  0120B2  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3592  0120B6  0060  F007  FFE6   	movff	btemp,postinc1
  3593  0120BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3594  0120C2  0E08               	movlw	8
  3595  0120C4  6EE6               	movwf	postinc1,c
  3596  0120C6  EC0E  F0BE         	call	_sprintf	;wreg free
  3597                           
  3598                           ;main.c: 291:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3599  0120CA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  3600  0120D0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  3601  0120D6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  3602  0120DC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  3603  0120E2  0ECB               	movlw	low STR_14
  3604  0120E4  6EE6               	movwf	postinc1,c
  3605  0120E6  0EFE               	movlw	high STR_14
  3606  0120E8  6EE6               	movwf	postinc1,c
  3607  0120EA  0E00               	movlw	0
  3608  0120EC  6EE6               	movwf	postinc1,c
  3609  0120EE  0E02               	movlw	2
  3610  0120F0  6EE6               	movwf	postinc1,c
  3611  0120F2  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3612  0120F6  0060  F007  FFE6   	movff	btemp,postinc1
  3613  0120FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3614  012102  0E08               	movlw	8
  3615  012104  6EE6               	movwf	postinc1,c
  3616  012106  EC0E  F0BE         	call	_sprintf	;wreg free
  3617                           
  3618                           ;main.c: 292:      break;
  3619  01210A  D1FA               	goto	l11828
  3620  01210C                     l1328:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;main.c: 294:      V.calib = 0;
  3624  01210C  0102               	movlb	2	; () banked
  3625  01210E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3626                           
  3627                           ; BSR set to: 2
  3628                           ;main.c: 295:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3629  012110  0060  F413  FFE6   	movff	_C+4,postinc1
  3630  012116  0060  F417  FFE6   	movff	_C+5,postinc1
  3631  01211C  0060  F41B  FFE6   	movff	_C+6,postinc1
  3632  012122  0060  F41F  FFE6   	movff	_C+7,postinc1
  3633  012128  0060  F453  FFE6   	movff	_C+20,postinc1
  3634  01212E  0060  F457  FFE6   	movff	_C+21,postinc1
  3635  012134  0060  F45B  FFE6   	movff	_C+22,postinc1
  3636  01213A  0060  F45F  FFE6   	movff	_C+23,postinc1
  3637  012140  0E2A               	movlw	low STR_15
  3638  012142  6EE6               	movwf	postinc1,c
  3639  012144  0EFF               	movlw	high STR_15
  3640  012146  6EE6               	movwf	postinc1,c
  3641  012148  0E00               	movlw	0
  3642  01214A  6EE6               	movwf	postinc1,c
  3643  01214C  0E00               	movlw	0
  3644  01214E  6EE6               	movwf	postinc1,c
  3645  012150  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3646  012154  0060  F007  FFE6   	movff	btemp,postinc1
  3647  01215A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3648  012160  0E0C               	movlw	12
  3649  012162  6EE6               	movwf	postinc1,c
  3650  012164  EC0E  F0BE         	call	_sprintf	;wreg free
  3651                           
  3652                           ;main.c: 296:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3653  012168  0060  F403  FFE6   	movff	_C,postinc1
  3654  01216E  0060  F407  FFE6   	movff	_C+1,postinc1
  3655  012174  0060  F40B  FFE6   	movff	_C+2,postinc1
  3656  01217A  0060  F40F  FFE6   	movff	_C+3,postinc1
  3657  012180  0060  F443  FFE6   	movff	_C+16,postinc1
  3658  012186  0060  F447  FFE6   	movff	_C+17,postinc1
  3659  01218C  0060  F44B  FFE6   	movff	_C+18,postinc1
  3660  012192  0060  F44F  FFE6   	movff	_C+19,postinc1
  3661  012198  0E04               	movlw	low STR_16
  3662  01219A  6EE6               	movwf	postinc1,c
  3663  01219C  0EFF               	movlw	high STR_16
  3664  01219E  6EE6               	movwf	postinc1,c
  3665  0121A0  0E00               	movlw	0
  3666  0121A2  6EE6               	movwf	postinc1,c
  3667  0121A4  0E01               	movlw	1
  3668  0121A6  6EE6               	movwf	postinc1,c
  3669  0121A8  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3670  0121AC  0060  F007  FFE6   	movff	btemp,postinc1
  3671  0121B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3672  0121B8  0E0C               	movlw	12
  3673  0121BA  6EE6               	movwf	postinc1,c
  3674  0121BC  EC0E  F0BE         	call	_sprintf	;wreg free
  3675                           
  3676                           ;main.c: 297:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  3677  0121C0  0060  F503  FFE6   	movff	_C+64,postinc1
  3678  0121C6  0060  F507  FFE6   	movff	_C+65,postinc1
  3679  0121CC  0060  F50B  FFE6   	movff	_C+66,postinc1
  3680  0121D2  0060  F50F  FFE6   	movff	_C+67,postinc1
  3681  0121D8  0060  F423  FFE6   	movff	_C+8,postinc1
  3682  0121DE  0060  F427  FFE6   	movff	_C+9,postinc1
  3683  0121E4  0060  F42B  FFE6   	movff	_C+10,postinc1
  3684  0121EA  0060  F42F  FFE6   	movff	_C+11,postinc1
  3685  0121F0  0E17               	movlw	low STR_17
  3686  0121F2  6EE6               	movwf	postinc1,c
  3687  0121F4  0EFF               	movlw	high STR_17
  3688  0121F6  6EE6               	movwf	postinc1,c
  3689  0121F8  0E00               	movlw	0
  3690  0121FA  6EE6               	movwf	postinc1,c
  3691  0121FC  0E02               	movlw	2
  3692  0121FE  6EE6               	movwf	postinc1,c
  3693  012200  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3694  012204  0060  F007  FFE6   	movff	btemp,postinc1
  3695  01220A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3696  012210  0E0C               	movlw	12
  3697  012212  6EE6               	movwf	postinc1,c
  3698  012214  EC0E  F0BE         	call	_sprintf	;wreg free
  3699                           
  3700                           ;main.c: 298:      break;
  3701  012218  D173               	goto	l11828
  3702  01221A                     l1329:
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;main.c: 300:      V.calib = 0;
  3706  01221A  0102               	movlb	2	; () banked
  3707  01221C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3708                           
  3709                           ; BSR set to: 2
  3710                           ;main.c: 301:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3711  01221E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3712  012224  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3713  01222A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3714  012230  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3715  012236  0EF1               	movlw	low STR_18
  3716  012238  6EE6               	movwf	postinc1,c
  3717  01223A  0EFE               	movlw	high STR_18
  3718  01223C  6EE6               	movwf	postinc1,c
  3719  01223E  0E00               	movlw	0
  3720  012240  6EE6               	movwf	postinc1,c
  3721  012242  0E00               	movlw	0
  3722  012244  6EE6               	movwf	postinc1,c
  3723  012246  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3724  01224A  0060  F007  FFE6   	movff	btemp,postinc1
  3725  012250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3726  012256  0E08               	movlw	8
  3727  012258  6EE6               	movwf	postinc1,c
  3728  01225A  EC0E  F0BE         	call	_sprintf	;wreg free
  3729                           
  3730                           ;main.c: 302:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  3731  01225E  0060  F613  FFE6   	movff	_C+132,postinc1
  3732  012264  0060  F617  FFE6   	movff	_C+133,postinc1
  3733  01226A  0060  F61B  FFE6   	movff	_C+134,postinc1
  3734  012270  0060  F61F  FFE6   	movff	_C+135,postinc1
  3735  012276  0060  F603  FFE6   	movff	_C+128,postinc1
  3736  01227C  0060  F607  FFE6   	movff	_C+129,postinc1
  3737  012282  0060  F60B  FFE6   	movff	_C+130,postinc1
  3738  012288  0060  F60F  FFE6   	movff	_C+131,postinc1
  3739  01228E  0E58               	movlw	low STR_19
  3740  012290  6EE6               	movwf	postinc1,c
  3741  012292  0EFE               	movlw	high STR_19
  3742  012294  6EE6               	movwf	postinc1,c
  3743  012296  0E00               	movlw	0
  3744  012298  6EE6               	movwf	postinc1,c
  3745  01229A  0E01               	movlw	1
  3746  01229C  6EE6               	movwf	postinc1,c
  3747  01229E  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3748  0122A2  0060  F007  FFE6   	movff	btemp,postinc1
  3749  0122A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3750  0122AE  0E0C               	movlw	12
  3751  0122B0  6EE6               	movwf	postinc1,c
  3752  0122B2  EC0E  F0BE         	call	_sprintf	;wreg free
  3753                           
  3754                           ;main.c: 303:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  3755  0122B6  0060  F673  FFE6   	movff	_C+156,postinc1
  3756  0122BC  0060  F677  FFE6   	movff	_C+157,postinc1
  3757  0122C2  0060  F67B  FFE6   	movff	_C+158,postinc1
  3758  0122C8  0060  F67F  FFE6   	movff	_C+159,postinc1
  3759  0122CE  0EA5               	movlw	low STR_20
  3760  0122D0  6EE6               	movwf	postinc1,c
  3761  0122D2  0EFE               	movlw	high STR_20
  3762  0122D4  6EE6               	movwf	postinc1,c
  3763  0122D6  0E00               	movlw	0
  3764  0122D8  6EE6               	movwf	postinc1,c
  3765  0122DA  0E02               	movlw	2
  3766  0122DC  6EE6               	movwf	postinc1,c
  3767  0122DE  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3768  0122E2  0060  F007  FFE6   	movff	btemp,postinc1
  3769  0122E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3770  0122EE  0E08               	movlw	8
  3771  0122F0  6EE6               	movwf	postinc1,c
  3772  0122F2  EC0E  F0BE         	call	_sprintf	;wreg free
  3773                           
  3774                           ;main.c: 304:      break;
  3775  0122F6  D104               	goto	l11828
  3776  0122F8                     l11812:
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;main.c: 306:      if (!V.calib) {
  3780  0122F8  0102               	movlb	2	; () banked
  3781  0122FA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  3782  0122FC  A4D8               	btfss	status,2,c
  3783  0122FE  D02D               	goto	l11816
  3784                           
  3785                           ; BSR set to: 2
  3786                           ;main.c: 307:       lp_filter(0.0, i, -1);
  3787  012300  0EFF               	movlw	255
  3788  012302  6EE6               	movwf	postinc1,c
  3789                           
  3790                           ;stkvar	_i @ sp[(-6)+2]
  3791  012304  0EFC               	movlw	-4
  3792  012306  50E3               	movf	plusw1,w,c
  3793  012308  6EE6               	movwf	postinc1,c
  3794  01230A  0E00               	movlw	0
  3795  01230C  6EE6               	movwf	postinc1,c
  3796  01230E  0E00               	movlw	0
  3797  012310  6EE6               	movwf	postinc1,c
  3798  012312  0E00               	movlw	0
  3799  012314  6EE6               	movwf	postinc1,c
  3800  012316  0E00               	movlw	0
  3801  012318  6EE6               	movwf	postinc1,c
  3802  01231A  EC06  F0B5         	call	_lp_filter	;wreg free
  3803                           
  3804                           ;main.c: 308:       lp_filter(0.0, j, -1);
  3805  01231E  0EFF               	movlw	255
  3806  012320  6EE6               	movwf	postinc1,c
  3807                           
  3808                           ;stkvar	_j @ sp[(-6)+1]
  3809  012322  0EFB               	movlw	-5
  3810  012324  50E3               	movf	plusw1,w,c
  3811  012326  6EE6               	movwf	postinc1,c
  3812  012328  0E00               	movlw	0
  3813  01232A  6EE6               	movwf	postinc1,c
  3814  01232C  0E00               	movlw	0
  3815  01232E  6EE6               	movwf	postinc1,c
  3816  012330  0E00               	movlw	0
  3817  012332  6EE6               	movwf	postinc1,c
  3818  012334  0E00               	movlw	0
  3819  012336  6EE6               	movwf	postinc1,c
  3820  012338  EC06  F0B5         	call	_lp_filter	;wreg free
  3821                           
  3822                           ;main.c: 309:       lp_filter(0.0, k, -1);
  3823  01233C  0EFF               	movlw	255
  3824  01233E  6EE6               	movwf	postinc1,c
  3825                           
  3826                           ;stkvar	_k @ sp[(-6)+0]
  3827  012340  0EFA               	movlw	-6
  3828  012342  50E3               	movf	plusw1,w,c
  3829  012344  6EE6               	movwf	postinc1,c
  3830  012346  0E00               	movlw	0
  3831  012348  6EE6               	movwf	postinc1,c
  3832  01234A  0E00               	movlw	0
  3833  01234C  6EE6               	movwf	postinc1,c
  3834  01234E  0E00               	movlw	0
  3835  012350  6EE6               	movwf	postinc1,c
  3836  012352  0E00               	movlw	0
  3837  012354  6EE6               	movwf	postinc1,c
  3838  012356  EC06  F0B5         	call	_lp_filter	;wreg free
  3839  01235A                     l11816:
  3840                           
  3841                           ;main.c: 311:      V.calib = 1;
  3842  01235A  0E01               	movlw	1
  3843  01235C  0102               	movlb	2	; () banked
  3844  01235E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  3845                           
  3846                           ; BSR set to: 2
  3847                           ;main.c: 312:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  3848  012360  0E02               	movlw	2
  3849  012362  6EE6               	movwf	postinc1,c
  3850  012364  EC6F  F0CB         	call	_get_switch	;wreg free
  3851  012368  5001               	movf	btemp^0,w,c
  3852  01236A  6EE6               	movwf	postinc1,c
  3853  01236C  0E00               	movlw	0
  3854  01236E  6EE6               	movwf	postinc1,c
  3855                           
  3856                           ;stkvar	_i @ sp[(-7)+2]
  3857  012370  0EFB               	movlw	-5
  3858  012372  50E3               	movf	plusw1,w,c
  3859  012374  0D04               	mullw	4
  3860  012376  0E00               	movlw	low _C
  3861  012378  24F3               	addwf	243,w,c
  3862  01237A  6ED9               	movwf	fsr2l,c
  3863  01237C  0E01               	movlw	high _C
  3864  01237E  20F4               	addwfc	prodh,w,c
  3865  012380  6EDA               	movwf	fsr2h,c
  3866  012382  006F FF7B FFE6     	movff	postinc2,postinc1
  3867  012388  006F FF7B FFE6     	movff	postinc2,postinc1
  3868  01238E  006F FF7B FFE6     	movff	postinc2,postinc1
  3869  012394  006F FF7B FFE6     	movff	postinc2,postinc1
  3870                           
  3871                           ;stkvar	_i @ sp[(-11)+2]
  3872  01239A  0EF7               	movlw	-9
  3873  01239C  50E3               	movf	plusw1,w,c
  3874  01239E  6EE6               	movwf	postinc1,c
  3875  0123A0  EC6E  F0CD         	call	_get_raw_result	;wreg free
  3876  0123A4  0060  F007  FFE6   	movff	btemp,postinc1
  3877  0123AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3878  0123B0  0E92               	movlw	low STR_9
  3879  0123B2  6EE6               	movwf	postinc1,c
  3880  0123B4  0EFF               	movlw	high STR_9
  3881  0123B6  6EE6               	movwf	postinc1,c
  3882  0123B8  0E00               	movlw	0
  3883  0123BA  6EE6               	movwf	postinc1,c
  3884  0123BC  0E00               	movlw	0
  3885  0123BE  6EE6               	movwf	postinc1,c
  3886  0123C0  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3887  0123C4  0060  F007  FFE6   	movff	btemp,postinc1
  3888  0123CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3889  0123D0  0E0C               	movlw	12
  3890  0123D2  6EE6               	movwf	postinc1,c
  3891  0123D4  EC0E  F0BE         	call	_sprintf	;wreg free
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;main.c: 313:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3895  0123D8  0E03               	movlw	3
  3896  0123DA  6EE6               	movwf	postinc1,c
  3897  0123DC  EC6F  F0CB         	call	_get_switch	;wreg free
  3898  0123E0  5001               	movf	btemp^0,w,c
  3899  0123E2  6EE6               	movwf	postinc1,c
  3900  0123E4  0E00               	movlw	0
  3901  0123E6  6EE6               	movwf	postinc1,c
  3902                           
  3903                           ;stkvar	_j @ sp[(-7)+1]
  3904  0123E8  0EFA               	movlw	-6
  3905  0123EA  50E3               	movf	plusw1,w,c
  3906  0123EC  0D04               	mullw	4
  3907  0123EE  0E00               	movlw	low _C
  3908  0123F0  24F3               	addwf	243,w,c
  3909  0123F2  6ED9               	movwf	fsr2l,c
  3910  0123F4  0E01               	movlw	high _C
  3911  0123F6  20F4               	addwfc	prodh,w,c
  3912  0123F8  6EDA               	movwf	fsr2h,c
  3913  0123FA  006F FF7B FFE6     	movff	postinc2,postinc1
  3914  012400  006F FF7B FFE6     	movff	postinc2,postinc1
  3915  012406  006F FF7B FFE6     	movff	postinc2,postinc1
  3916  01240C  006F FF7B FFE6     	movff	postinc2,postinc1
  3917                           
  3918                           ;stkvar	_j @ sp[(-11)+1]
  3919  012412  0EF6               	movlw	-10
  3920  012414  50E3               	movf	plusw1,w,c
  3921  012416  6EE6               	movwf	postinc1,c
  3922  012418  EC6E  F0CD         	call	_get_raw_result	;wreg free
  3923  01241C  0060  F007  FFE6   	movff	btemp,postinc1
  3924  012422  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3925  012428  0E92               	movlw	low STR_9
  3926  01242A  6EE6               	movwf	postinc1,c
  3927  01242C  0EFF               	movlw	high STR_9
  3928  01242E  6EE6               	movwf	postinc1,c
  3929  012430  0E00               	movlw	0
  3930  012432  6EE6               	movwf	postinc1,c
  3931  012434  0E01               	movlw	1
  3932  012436  6EE6               	movwf	postinc1,c
  3933  012438  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3934  01243C  0060  F007  FFE6   	movff	btemp,postinc1
  3935  012442  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3936  012448  0E0C               	movlw	12
  3937  01244A  6EE6               	movwf	postinc1,c
  3938  01244C  EC0E  F0BE         	call	_sprintf	;wreg free
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;main.c: 314:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3942                           ;stkvar	_inp_index @ sp[(-5)+3]
  3943  012450  0EFE               	movlw	-2
  3944  012452  50E3               	movf	plusw1,w,c
  3945  012454  6E0B               	movwf	(btemp+10)^0,c
  3946  012456  6A0C               	clrf	(btemp+11)^0,c
  3947  012458  0E01               	movlw	1
  3948  01245A  260B               	addwf	(btemp+10)^0,f,c
  3949  01245C  0E00               	movlw	0
  3950  01245E  220C               	addwfc	(btemp+11)^0,f,c
  3951  012460  0060  F02F  FFE6   	movff	btemp+10,postinc1
  3952  012466  0060  F033  FFE6   	movff	btemp+11,postinc1
  3953                           
  3954                           ;stkvar	_k @ sp[(-7)+0]
  3955  01246C  0EF9               	movlw	-7
  3956  01246E  50E3               	movf	plusw1,w,c
  3957  012470  0D04               	mullw	4
  3958  012472  0E00               	movlw	low _C
  3959  012474  24F3               	addwf	243,w,c
  3960  012476  6ED9               	movwf	fsr2l,c
  3961  012478  0E01               	movlw	high _C
  3962  01247A  20F4               	addwfc	prodh,w,c
  3963  01247C  6EDA               	movwf	fsr2h,c
  3964  01247E  006F FF7B FFE6     	movff	postinc2,postinc1
  3965  012484  006F FF7B FFE6     	movff	postinc2,postinc1
  3966  01248A  006F FF7B FFE6     	movff	postinc2,postinc1
  3967  012490  006F FF7B FFE6     	movff	postinc2,postinc1
  3968                           
  3969                           ;stkvar	_k @ sp[(-11)+0]
  3970  012496  0EF5               	movlw	-11
  3971  012498  50E3               	movf	plusw1,w,c
  3972  01249A  6EE6               	movwf	postinc1,c
  3973  01249C  EC6E  F0CD         	call	_get_raw_result	;wreg free
  3974  0124A0  0060  F007  FFE6   	movff	btemp,postinc1
  3975  0124A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3976  0124AC  0E81               	movlw	low STR_11
  3977  0124AE  6EE6               	movwf	postinc1,c
  3978  0124B0  0EFF               	movlw	high STR_11
  3979  0124B2  6EE6               	movwf	postinc1,c
  3980  0124B4  0E00               	movlw	0
  3981  0124B6  6EE6               	movwf	postinc1,c
  3982  0124B8  0E02               	movlw	2
  3983  0124BA  6EE6               	movwf	postinc1,c
  3984  0124BC  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  3985  0124C0  0060  F007  FFE6   	movff	btemp,postinc1
  3986  0124C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3987  0124CC  0E0C               	movlw	12
  3988  0124CE  6EE6               	movwf	postinc1,c
  3989  0124D0  EC0E  F0BE         	call	_sprintf	;wreg free
  3990                           
  3991                           ;main.c: 315:      break;
  3992  0124D4  D015               	goto	l11828
  3993  0124D6                     l11826:
  3994  0124D6  0100               	movlb	0	; () banked
  3995  0124D8  51F3               	movf	_H& (0+255),w,b
  3996  0124DA  6E0B               	movwf	(btemp+10)^0,c
  3997  0124DC  6A0C               	clrf	(btemp+11)^0,c
  3998                           
  3999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4000                           ; Switch size 1, requested type "simple"
  4001                           ; Number of cases is 1, Range of values is 0 to 0
  4002                           ; switch strategies available:
  4003                           ; Name         Instructions Cycles
  4004                           ; simple_byte            4     3 (average)
  4005                           ;	Chosen strategy is simple_byte
  4006  0124DE  500C               	movf	(btemp+11)^0,w,c
  4007  0124E0  0A00               	xorlw	0	; case 0
  4008  0124E2  A4D8               	btfss	status,2,c
  4009  0124E4  D00D               	goto	l11828
  4010                           
  4011                           ; BSR set to: 0
  4012                           ; Switch size 1, requested type "simple"
  4013                           ; Number of cases is 4, Range of values is 0 to 3
  4014                           ; switch strategies available:
  4015                           ; Name         Instructions Cycles
  4016                           ; simple_byte           13     7 (average)
  4017                           ;	Chosen strategy is simple_byte
  4018  0124E6  500B               	movf	(btemp+10)^0,w,c
  4019  0124E8  0A00               	xorlw	0	; case 0
  4020  0124EA  B4D8               	btfsc	status,2,c
  4021  0124EC  D60F               	goto	l1328
  4022  0124EE  0A01               	xorlw	1	; case 1
  4023  0124F0  B4D8               	btfsc	status,2,c
  4024  0124F2  D5A9               	goto	l1326
  4025  0124F4  0A03               	xorlw	3	; case 2
  4026  0124F6  B4D8               	btfsc	status,2,c
  4027  0124F8  D690               	goto	l1329
  4028  0124FA  0A01               	xorlw	1	; case 3
  4029  0124FC  B4D8               	btfsc	status,2,c
  4030  0124FE  D6FC               	goto	l11812
  4031  012500                     l11828:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;main.c: 319:     clear_hid_pflags(&H);
  4035  012500  0EF3               	movlw	_H& (0+255)
  4036  012502  6EE6               	movwf	postinc1,c
  4037  012504  ECC2  F0CC         	call	_clear_hid_pflags	;wreg free
  4038                           
  4039                           ;main.c: 321:    StartTimer(TMR_DISPLAY, 250);
  4040  012508  0EFA               	movlw	250
  4041  01250A  6EE6               	movwf	postinc1,c
  4042  01250C  0E00               	movlw	0
  4043  01250E  6EE6               	movwf	postinc1,c
  4044  012510  0E0A               	movlw	10
  4045  012512  6EE6               	movwf	postinc1,c
  4046  012514  EC3E  F0C9         	call	_StartTimer	;wreg free
  4047                           
  4048                           ;main.c: 322:    update_lcd(0);
  4049  012518  0E00               	movlw	0
  4050  01251A  6EE6               	movwf	postinc1,c
  4051  01251C  ECFF  F0BC         	call	_update_lcd	;wreg free
  4052  012520                     l11834:
  4053                           
  4054                           ;main.c: 328:   check_help(V.flipper);
  4055  012520  0102               	movlb	2	; () banked
  4056  012522  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4057  012524  6EE6               	movwf	postinc1,c
  4058  012526  EC17  F0B1         	call	_check_help	;wreg free
  4059                           
  4060                           ;main.c: 330:   if (check_enter_button(&H)) {
  4061  01252A  0EF3               	movlw	_H& (0+255)
  4062  01252C  6EE6               	movwf	postinc1,c
  4063  01252E  EC5E  F0C9         	call	_check_enter_button	;wreg free
  4064  012532  5001               	movf	btemp^0,w,c
  4065  012534  B4D8               	btfsc	status,2,c
  4066  012536  D062               	goto	l1333
  4067                           
  4068                           ;main.c: 331:    V.calib = 0;
  4069  012538  0102               	movlb	2	; () banked
  4070  01253A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4071                           
  4072                           ; BSR set to: 2
  4073                           ;main.c: 332:    inp_index += 3;
  4074                           ;stkvar	_inp_index @ sp[(-5)+3]
  4075  01253C  0EFE               	movlw	-2
  4076  01253E  006F FF8C  F001    	movff	plusw1,btemp
  4077  012544  0E03               	movlw	3
  4078  012546  2601               	addwf	btemp^0,f,c
  4079  012548  0EFE               	movlw	-2
  4080  01254A  0060  F007  FFE3   	movff	btemp,plusw1
  4081                           
  4082                           ;main.c: 333:    if (inp_index > 9)
  4083                           ;stkvar	_inp_index @ sp[(-5)+3]
  4084  012550  0EFE               	movlw	-2
  4085  012552  006F FF8C  F001    	movff	plusw1,btemp
  4086  012558  0E09               	movlw	9
  4087  01255A  6401               	cpfsgt	btemp^0,c
  4088  01255C  D03A               	goto	l11862
  4089                           
  4090                           ; BSR set to: 2
  4091                           ;main.c: 334:     inp_index = 0;
  4092                           ;stkvar	_inp_index @ sp[(-5)+3]
  4093  01255E  0EFE               	movlw	-2
  4094  012560  6AE3               	clrf	plusw1,c
  4095  012562  D037               	goto	l11862
  4096  012564                     l11844:
  4097                           
  4098                           ; BSR set to: 2
  4099                           ;main.c: 337:     i = C_BATT;
  4100                           ;stkvar	_i @ sp[(-5)+2]
  4101  012564  0EFD               	movlw	-3
  4102  012566  6AE3               	clrf	plusw1,c
  4103                           
  4104                           ; BSR set to: 2
  4105                           ;main.c: 338:     j = C_PV;
  4106                           ;stkvar	_j @ sp[(-5)+1]
  4107  012568  0EFC               	movlw	-4
  4108  01256A  6AE3               	clrf	plusw1,c
  4109  01256C  2AE3               	incf	plusw1,f,c
  4110                           
  4111                           ; BSR set to: 2
  4112                           ;main.c: 339:     k = V_CC;
  4113                           ;stkvar	_k @ sp[(-5)+0]
  4114  01256E  0EFB               	movlw	-5
  4115  012570  6AE3               	clrf	plusw1,c
  4116  012572  82E3               	bsf	plusw1,1,c
  4117                           
  4118                           ;main.c: 340:     break;
  4119  012574  D043               	goto	l1333
  4120  012576                     l11850:
  4121                           
  4122                           ; BSR set to: 2
  4123                           ;main.c: 342:     i = V_BAT;
  4124                           ;stkvar	_i @ sp[(-5)+2]
  4125  012576  0EFD               	movlw	-3
  4126  012578  6AE3               	clrf	plusw1,c
  4127  01257A  84E3               	bsf	plusw1,2,c
  4128                           
  4129                           ;main.c: 343:     j = V_PV;
  4130                           ;stkvar	_j @ sp[(-5)+1]
  4131  01257C  0EFC               	movlw	-4
  4132  01257E  6AE3               	clrf	plusw1,c
  4133  012580  80E3               	bsf	plusw1,0,c
  4134  012582  84E3               	bsf	plusw1,2,c	;indir
  4135                           
  4136                           ;main.c: 344:     k = V_CBUS;
  4137                           ;stkvar	_k @ sp[(-5)+0]
  4138  012584  0EFB               	movlw	-5
  4139  012586  6AE3               	clrf	plusw1,c
  4140  012588  82E3               	bsf	plusw1,1,c
  4141  01258A  84E3               	bsf	plusw1,2,c	;indir
  4142                           
  4143                           ;main.c: 345:     break;
  4144  01258C  D037               	goto	l1333
  4145  01258E                     l11852:
  4146                           
  4147                           ; BSR set to: 2
  4148                           ;main.c: 347:     i = V_BBAT;
  4149                           ;stkvar	_i @ sp[(-5)+2]
  4150  01258E  0EFD               	movlw	-3
  4151  012590  6AE3               	clrf	plusw1,c
  4152  012592  82E3               	bsf	plusw1,1,c
  4153  012594  86E3               	bsf	plusw1,3,c	;indir
  4154                           
  4155                           ; BSR set to: 2
  4156                           ;main.c: 348:     j = V_TEMP;
  4157  012596  0E0B               	movlw	11
  4158  012598  6E0C               	movwf	(btemp+11)^0,c
  4159                           
  4160                           ;stkvar	_j @ sp[(-5)+1]
  4161  01259A  0EFC               	movlw	-4
  4162  01259C  0060  F033  FFE3   	movff	btemp+11,plusw1
  4163                           
  4164                           ; BSR set to: 2
  4165                           ;main.c: 349:     k = V_INVERTER;
  4166                           ;stkvar	_k @ sp[(-5)+0]
  4167  0125A2  0EFB               	movlw	-5
  4168  0125A4  6AE3               	clrf	plusw1,c
  4169  0125A6  84E3               	bsf	plusw1,2,c
  4170  0125A8  86E3               	bsf	plusw1,3,c	;indir
  4171                           
  4172                           ;main.c: 350:     break;
  4173  0125AA  D028               	goto	l1333
  4174  0125AC                     l11858:
  4175                           
  4176                           ; BSR set to: 2
  4177                           ;main.c: 352:     i = channel_ANB5;
  4178  0125AC  0E0D               	movlw	13
  4179  0125AE  6E0C               	movwf	(btemp+11)^0,c
  4180                           
  4181                           ;stkvar	_i @ sp[(-5)+2]
  4182  0125B0  0EFD               	movlw	-3
  4183  0125B2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4184                           
  4185                           ;main.c: 353:     j = channel_ANB5;
  4186  0125B8  0E0D               	movlw	13
  4187  0125BA  6E0C               	movwf	(btemp+11)^0,c
  4188                           
  4189                           ;stkvar	_j @ sp[(-5)+1]
  4190  0125BC  0EFC               	movlw	-4
  4191  0125BE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4192                           
  4193                           ;main.c: 354:     k = channel_ANB5;
  4194  0125C4  0E0D               	movlw	13
  4195  0125C6  6E0C               	movwf	(btemp+11)^0,c
  4196                           
  4197                           ;stkvar	_k @ sp[(-5)+0]
  4198  0125C8  0EFB               	movlw	-5
  4199  0125CA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4200                           
  4201                           ;main.c: 355:     break;
  4202  0125D0  D015               	goto	l1333
  4203  0125D2                     l11862:
  4204                           
  4205                           ; BSR set to: 2
  4206                           ;stkvar	_inp_index @ sp[(-5)+3]
  4207  0125D2  0EFE               	movlw	-2
  4208  0125D4  50E3               	movf	plusw1,w,c
  4209  0125D6  6E0B               	movwf	(btemp+10)^0,c
  4210  0125D8  6A0C               	clrf	(btemp+11)^0,c
  4211                           
  4212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4213                           ; Switch size 1, requested type "simple"
  4214                           ; Number of cases is 1, Range of values is 0 to 0
  4215                           ; switch strategies available:
  4216                           ; Name         Instructions Cycles
  4217                           ; simple_byte            4     3 (average)
  4218                           ;	Chosen strategy is simple_byte
  4219  0125DA  500C               	movf	(btemp+11)^0,w,c
  4220  0125DC  0A00               	xorlw	0	; case 0
  4221  0125DE  A4D8               	btfss	status,2,c
  4222  0125E0  D00D               	goto	l1333
  4223                           
  4224                           ; BSR set to: 2
  4225                           ; Switch size 1, requested type "simple"
  4226                           ; Number of cases is 4, Range of values is 0 to 9
  4227                           ; switch strategies available:
  4228                           ; Name         Instructions Cycles
  4229                           ; simple_byte           13     7 (average)
  4230                           ;	Chosen strategy is simple_byte
  4231  0125E2  500B               	movf	(btemp+10)^0,w,c
  4232  0125E4  0A00               	xorlw	0	; case 0
  4233  0125E6  B4D8               	btfsc	status,2,c
  4234  0125E8  D7BD               	goto	l11844
  4235  0125EA  0A03               	xorlw	3	; case 3
  4236  0125EC  B4D8               	btfsc	status,2,c
  4237  0125EE  D7C3               	goto	l11850
  4238  0125F0  0A05               	xorlw	5	; case 6
  4239  0125F2  B4D8               	btfsc	status,2,c
  4240  0125F4  D7CC               	goto	l11852
  4241  0125F6  0A0F               	xorlw	15	; case 9
  4242  0125F8  B4D8               	btfsc	status,2,c
  4243  0125FA  D7D8               	goto	l11858
  4244  0125FC                     l1333:
  4245                           
  4246                           ;main.c: 364:   if (V.set_sequ) {
  4247  0125FC  0102               	movlb	2	; () banked
  4248  0125FE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4249  012600  D4D8               	goto	l11778
  4250                           
  4251                           ; BSR set to: 2
  4252                           ;main.c: 365:    if (TimerDone(TMR_INFO)) {
  4253  012602  0E07               	movlw	7
  4254  012604  6EE6               	movwf	postinc1,c
  4255  012606  EC83  F0CB         	call	_TimerDone	;wreg free
  4256  01260A  5001               	movf	btemp^0,w,c
  4257  01260C  B4D8               	btfsc	status,2,c
  4258  01260E  D00B               	goto	l11872
  4259                           
  4260                           ;main.c: 366:     V.set_sequ = 0;
  4261  012610  0102               	movlb	2	; () banked
  4262  012612  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4263                           
  4264                           ; BSR set to: 2
  4265                           ;main.c: 367:     set_vterm(0);
  4266  012614  0E00               	movlw	0
  4267  012616  6EE6               	movwf	postinc1,c
  4268  012618  EC7D  F0CD         	call	_set_vterm	;wreg free
  4269                           
  4270                           ;main.c: 368:     update_lcd(0);
  4271  01261C  0E00               	movlw	0
  4272  01261E  6EE6               	movwf	postinc1,c
  4273  012620  ECFF  F0BC         	call	_update_lcd	;wreg free
  4274                           
  4275                           ;main.c: 369:    } else {
  4276  012624  D4C6               	goto	l11778
  4277  012626                     l11872:
  4278                           
  4279                           ;main.c: 370:     set_vterm(2);
  4280  012626  0E02               	movlw	2
  4281  012628  6EE6               	movwf	postinc1,c
  4282  01262A  EC7D  F0CD         	call	_set_vterm	;wreg free
  4283                           
  4284                           ;main.c: 371:     update_lcd(2);
  4285  01262E  0E02               	movlw	2
  4286  012630  6EE6               	movwf	postinc1,c
  4287  012632  ECFF  F0BC         	call	_update_lcd	;wreg free
  4288  012636  D4BD               	goto	l11778
  4289  012638                     __end_of_main:
  4290                           	opt callstack 0
  4291                           
  4292 ;; *************** function _static_soc *****************
  4293 ;; Defined at:
  4294 ;;		line 84 in file "mbmc.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1  [STACK] void 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/39
  4305 ;;		On exit  : 3F/1
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4312 ;;Total ram usage:        0 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:   15
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_main
  4319 ;; This function uses a reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text1
  4323  019960                     __ptext1:
  4324                           	opt callstack 0
  4325  019960                     _static_soc:
  4326                           	opt callstack 15
  4327                           
  4328                           ;mbmc.c: 86:  C.runtime = 120;
  4329                           
  4330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4331                           ;incstack = 0
  4332  019960  0E00               	movlw	0
  4333  019962  0101               	movlb	1	; () banked
  4334  019964  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  4335  019966  0E78               	movlw	120
  4336  019968  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  4337                           
  4338                           ;mbmc.c: 87:  C.soc = 100;
  4339  01996A  0E00               	movlw	0
  4340  01996C  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  4341  01996E  0E64               	movlw	100
  4342  019970  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;mbmc.c: 88:  C.dynamic_ah = C.bank_ah;
  4346  019972  C17C  F180         	movff	_C+124,_C+128	;volatile
  4347  019976  C17D  F181         	movff	_C+125,_C+129	;volatile
  4348  01997A  C17E  F182         	movff	_C+126,_C+130	;volatile
  4349  01997E  C17F  F183         	movff	_C+127,_C+131	;volatile
  4350                           
  4351                           ; BSR set to: 1
  4352                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4353  019982  0012               	return		;funcret
  4354  019984                     __end_of_static_soc:
  4355                           	opt callstack 0
  4356                           
  4357 ;; *************** function _start_switch_handler *****************
  4358 ;; Defined at:
  4359 ;;		line 119 in file "dio.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1  [STACK] void 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4368 ;; Tracked objects:
  4369 ;;		On entry : 1/0
  4370 ;;		On exit  : 3F/39
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:   16
  4380 ;; This function calls:
  4381 ;;		_INT1_SetInterruptHandler
  4382 ;; This function is called by:
  4383 ;;		_main
  4384 ;; This function uses a reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text2
  4388  019A7E                     __ptext2:
  4389                           	opt callstack 0
  4390  019A7E                     _start_switch_handler:
  4391                           	opt callstack 14
  4392                           
  4393                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4394                           
  4395                           ; BSR set to: 1
  4396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4397                           ;incstack = 0
  4398  019A7E  0139               	movlb	57	; () banked
  4399  019A80  9195               	bcf	149,0,b	;volatile
  4400                           
  4401                           ; BSR set to: 57
  4402                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4403  019A82  0E86               	movlw	low _switch_handler
  4404  019A84  6EE6               	movwf	postinc1,c
  4405  019A86  0E75               	movlw	high _switch_handler
  4406  019A88  6EE6               	movwf	postinc1,c
  4407  019A8A  0E01               	movlw	low (_switch_handler shr (0+16))
  4408  019A8C  6EE6               	movwf	postinc1,c
  4409  019A8E  EC0F  F0CC         	call	_INT1_SetInterruptHandler	;wreg free
  4410                           
  4411                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4412  019A92  0E02               	movlw	2
  4413  019A94  0100               	movlb	0	; () banked
  4414  019A96  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4418  019A98  0139               	movlb	57	; () banked
  4419  019A9A  8195               	bsf	149,0,b	;volatile
  4420                           
  4421                           ; BSR set to: 57
  4422                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4423  019A9C  0012               	return		;funcret
  4424  019A9E                     __end_of_start_switch_handler:
  4425                           	opt callstack 0
  4426                           
  4427 ;; *************** function _start_adc_scan *****************
  4428 ;; Defined at:
  4429 ;;		line 33 in file "daq.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1  [STACK] _Bool 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 1/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:   16
  4450 ;; This function calls:
  4451 ;;		_ADCC_DischargeSampleCapacitor
  4452 ;;		_ADCC_SetADIInterruptHandler
  4453 ;;		_ADCC_SetADTIInterruptHandler
  4454 ;;		_ADCC_StartConversion
  4455 ;; This function is called by:
  4456 ;;		_main
  4457 ;; This function uses a reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text3
  4461  018C2C                     __ptext3:
  4462                           	opt callstack 0
  4463  018C2C                     _start_adc_scan:
  4464                           	opt callstack 14
  4465                           
  4466                           ;daq.c: 35:  if (R.done)
  4467                           
  4468                           ; BSR set to: 57
  4469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4470                           ;incstack = 0
  4471  018C2C  0100               	movlb	0	; () banked
  4472  018C2E  51F2               	movf	(_R+39)& (0+255),w,b	;volatile
  4473  018C30  A4D8               	btfss	status,2,c
  4474  018C32  0012               	return	
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;daq.c: 38:  R.scan_index = 0;
  4478  018C34  6BEF               	clrf	(_R+36)& (0+255),b	;volatile
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4482  018C36  013A               	movlb	58	; () banked
  4483  018C38  5140               	movf	64,w,b	;volatile
  4484  018C3A  006E F940  F001    	movff	14928,btemp	;volatile
  4485  018C40  6A02               	clrf	(btemp+1)^0,c
  4486  018C42  0060  F004  F002   	movff	btemp,btemp+1
  4487  018C48  6A01               	clrf	btemp^0,c
  4488  018C4A  2601               	addwf	btemp^0,f,c
  4489  018C4C  0E00               	movlw	0
  4490  018C4E  2202               	addwfc	(btemp+1)^0,f,c
  4491  018C50  0E77               	movlw	119
  4492  018C52  1401               	andwf	btemp^0,w,c
  4493  018C54  0100               	movlb	0	; () banked
  4494  018C56  6FF0               	movwf	(_R+37)& (0+255),b	;volatile
  4495  018C58  0E3C               	movlw	60
  4496  018C5A  1402               	andwf	(btemp+1)^0,w,c
  4497  018C5C  6FF1               	movwf	(_R+38)& (0+255),b	;volatile
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4501  018C5E  0E12               	movlw	low _adc_int_handler
  4502  018C60  6EE6               	movwf	postinc1,c
  4503  018C62  0E9D               	movlw	high _adc_int_handler
  4504  018C64  6EE6               	movwf	postinc1,c
  4505  018C66  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4506  018C68  6EE6               	movwf	postinc1,c
  4507  018C6A  EC4B  F0CC         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4508                           
  4509                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4510  018C6E  0E08               	movlw	low _adc_int_t_handler
  4511  018C70  6EE6               	movwf	postinc1,c
  4512  018C72  0E8A               	movlw	high _adc_int_t_handler
  4513  018C74  6EE6               	movwf	postinc1,c
  4514  018C76  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4515  018C78  6EE6               	movwf	postinc1,c
  4516  018C7A  EC37  F0CC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4517                           
  4518                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  4519  018C7E  EC61  F0CE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4520                           
  4521                           ; BSR set to: 62
  4522                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  4523  018C82  0100               	movlb	0	; () banked
  4524  018C84  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
  4525  018C86  0B0F               	andlw	15
  4526  018C88  6EE6               	movwf	postinc1,c
  4527  018C8A  EC16  F0CE         	call	_ADCC_StartConversion	;wreg free
  4528                           
  4529                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4530  018C8E  0012               	return		;funcret
  4531  018C90                     __end_of_start_adc_scan:
  4532                           	opt callstack 0
  4533                           
  4534 ;; *************** function _ADCC_StartConversion *****************
  4535 ;; Defined at:
  4536 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  channel         1  [STACK] enum E16136
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1  [STACK] void 
  4543 ;; Registers used:
  4544 ;;		fsr1l, fsr1h
  4545 ;; Tracked objects:
  4546 ;;		On entry : 3F/0
  4547 ;;		On exit  : 3F/3E
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4554 ;;Total ram usage:        0 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:   15
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_start_adc_scan
  4561 ;;		_adc_int_t_handler
  4562 ;; This function uses a reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text4
  4566  019C2C                     __ptext4:
  4567                           	opt callstack 0
  4568  019C2C                     _ADCC_StartConversion:
  4569                           	opt callstack 0
  4570                           
  4571                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4572                           ;stkvar	_channel @ sp[(0)+-1]
  4573                           
  4574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4575                           ;incstack = 0
  4576 ;; hardware stack exceeded
  4577  019C2C  0EFF               	movlw	-1
  4578  019C2E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4579                           
  4580                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4581  019C34  013E               	movlb	62	; () banked
  4582  019C36  8FF8               	bsf	248,7,b	;volatile
  4583                           
  4584                           ; BSR set to: 62
  4585                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4586  019C38  81F8               	bsf	248,0,b	;volatile
  4587                           
  4588                           ; BSR set to: 62
  4589                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4590  019C3A  52E5               	movf	postdec1,f,c
  4591  019C3C  0012               	return		;funcret
  4592  019C3E                     __end_of_ADCC_StartConversion:
  4593                           	opt callstack 0
  4594                           
  4595 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4596 ;; Defined at:
  4597 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1  [STACK] void 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 3F/3E
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4615 ;;Total ram usage:        0 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:   15
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_start_adc_scan
  4622 ;;		_adc_int_t_handler
  4623 ;; This function uses a reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text5
  4627  019CC2                     __ptext5:
  4628                           	opt callstack 0
  4629  019CC2                     _ADCC_DischargeSampleCapacitor:
  4630                           	opt callstack 0
  4631                           
  4632                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4633                           
  4634                           ; BSR set to: 62
  4635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4636                           ;incstack = 0
  4637 ;; hardware stack exceeded
  4638  019CC2  0E3B               	movlw	59
  4639  019CC4  013E               	movlb	62	; () banked
  4640  019CC6  6FF1               	movwf	241,b	;volatile
  4641                           
  4642                           ; BSR set to: 62
  4643                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4644  019CC8  0012               	return		;funcret
  4645  019CCA                     __end_of_ADCC_DischargeSampleCapacitor:
  4646                           	opt callstack 0
  4647                           
  4648 ;; *************** function _srand *****************
  4649 ;; Defined at:
  4650 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  s               2  [STACK] unsigned int 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1  [STACK] void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4659 ;; Tracked objects:
  4660 ;;		On entry : 3F/0
  4661 ;;		On exit  : 3F/2
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:   15
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_main
  4675 ;; This function uses a reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text6
  4679  01945E                     __ptext6:
  4680                           	opt callstack 0
  4681  01945E                     _srand:
  4682                           	opt callstack 15
  4683                           
  4684                           ;stkvar	_s @ sp[(0)+-2]
  4685                           
  4686                           ; BSR set to: 62
  4687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4688                           ;incstack = 0
  4689  01945E  0EFE               	movlw	-2
  4690  019460  50E3               	movf	plusw1,w,c
  4691  019462  0FFF               	addlw	255
  4692  019464  6E0B               	movwf	(btemp+10)^0,c
  4693  019466  0EFF               	movlw	-1
  4694  019468  006F FF8C  F00C    	movff	plusw1,btemp+11
  4695  01946E  0EFF               	movlw	255
  4696  019470  220C               	addwfc	(btemp+11)^0,f,c
  4697  019472  0060  F02C  F2D5   	movff	btemp+10,_seed
  4698  019478  0060  F030  F2D6   	movff	btemp+11,_seed+1
  4699  01947E  0102               	movlb	2	; () banked
  4700  019480  6BD7               	clrf	(_seed+2)& (0+255),b
  4701  019482  6BD8               	clrf	(_seed+3)& (0+255),b
  4702  019484  6BD9               	clrf	(_seed+4)& (0+255),b
  4703  019486  6BDA               	clrf	(_seed+5)& (0+255),b
  4704  019488  6BDB               	clrf	(_seed+6)& (0+255),b
  4705  01948A  6BDC               	clrf	(_seed+7)& (0+255),b
  4706                           
  4707                           ; BSR set to: 2
  4708                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4709  01948C  52E5               	movf	postdec1,f,c
  4710  01948E  52E5               	movf	postdec1,f,c
  4711  019490  0012               	return		;funcret
  4712  019492                     __end_of_srand:
  4713                           	opt callstack 0
  4714                           
  4715 ;; *************** function _init_port_dma *****************
  4716 ;; Defined at:
  4717 ;;		line 90 in file "eadog.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;		None
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;		None
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1  [STACK] void 
  4724 ;; Registers used:
  4725 ;;		wreg, status,2
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/2
  4728 ;;		On exit  : 3F/3B
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4735 ;;Total ram usage:        0 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:   15
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_main
  4742 ;; This function uses a reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text7
  4746  0194C6                     __ptext7:
  4747                           	opt callstack 0
  4748  0194C6                     _init_port_dma:
  4749                           	opt callstack 15
  4750                           
  4751                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  4752                           
  4753                           ; BSR set to: 2
  4754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4755                           ;incstack = 0
  4756  0194C6  0E3F               	movlw	-193
  4757  0194C8  013B               	movlb	59	; () banked
  4758  0194CA  17DD               	andwf	221,f,b	;volatile
  4759                           
  4760                           ; BSR set to: 59
  4761                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  4762  0194CC  9BDD               	bcf	221,5,b	;volatile
  4763                           
  4764                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  4765  0194CE  51DD               	movf	221,w,b	;volatile
  4766  0194D0  0BF9               	andlw	-7
  4767  0194D2  0902               	iorlw	2
  4768  0194D4  6FDD               	movwf	221,b	;volatile
  4769                           
  4770                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  4771  0194D6  0EE7               	movlw	-25
  4772  0194D8  17DD               	andwf	221,f,b	;volatile
  4773                           
  4774                           ; BSR set to: 59
  4775                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  4776  0194DA  81DD               	bsf	221,0,b	;volatile
  4777                           
  4778                           ; BSR set to: 59
  4779                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  4780  0194DC  9DDC               	bcf	220,6,b	;volatile
  4781                           
  4782                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  4783  0194DE  0E3D               	movlw	61
  4784  0194E0  6FD1               	movwf	209,b	;volatile
  4785  0194E2  0EEA               	movlw	234
  4786  0194E4  6FD0               	movwf	208,b	;volatile
  4787                           
  4788                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  4789  0194E6  0EFF               	movlw	low _port_data
  4790  0194E8  6FD9               	movwf	217,b	;volatile
  4791  0194EA  0E05               	movlw	high _port_data
  4792  0194EC  6FDA               	movwf	218,b	;volatile
  4793  0194EE  0E00               	movlw	low (_port_data shr (0+16))
  4794  0194F0  6FDB               	movwf	219,b	;volatile
  4795                           
  4796                           ; BSR set to: 59
  4797                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  4798  0194F2  9BDC               	bcf	220,5,b	;volatile
  4799                           
  4800                           ; BSR set to: 59
  4801                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4802  0194F4  0012               	return		;funcret
  4803  0194F6                     __end_of_init_port_dma:
  4804                           	opt callstack 0
  4805                           
  4806 ;; *************** function _init_display *****************
  4807 ;; Defined at:
  4808 ;;		line 38 in file "eadog.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1  [STACK] void 
  4815 ;; Registers used:
  4816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4817 ;; Tracked objects:
  4818 ;;		On entry : 3F/3B
  4819 ;;		On exit  : 3F/3D
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4826 ;;Total ram usage:        0 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:   17
  4829 ;; This function calls:
  4830 ;;		_ringBufS_init
  4831 ;;		_send_lcd_cmd
  4832 ;;		_send_lcd_cmd_long
  4833 ;;		_wdtdelay
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text8
  4840  017E28                     __ptext8:
  4841                           	opt callstack 0
  4842  017E28                     _init_display:
  4843                           	opt callstack 13
  4844                           
  4845                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  4846                           
  4847                           ; BSR set to: 59
  4848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4849                           ;incstack = 0
  4850  017E28  0E43               	movlw	low _ring_buf1
  4851  017E2A  0100               	movlb	0	; () banked
  4852  017E2C  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4853  017E2E  0E04               	movlw	high _ring_buf1
  4854  017E30  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4855                           
  4856                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  4857  017E32  0E00               	movlw	low _ring_buf2
  4858  017E34  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4859  017E36  0E04               	movlw	high _ring_buf2
  4860  017E38  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  4864  017E3A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  4865  017E40  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  4866  017E46  EC5B  F0CB         	call	_ringBufS_init	;wreg free
  4867                           
  4868                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  4869  017E4A  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  4870  017E50  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  4871  017E56  EC5B  F0CB         	call	_ringBufS_init	;wreg free
  4872                           
  4873                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  4874  017E5A  84BE               	bsf	190,2,c	;volatile
  4875  017E5C  84BC               	bsf	188,2,c	;volatile
  4876                           
  4877                           ;eadog.c: 59:  wdtdelay(350000);
  4878  017E5E  0E30               	movlw	48
  4879  017E60  6EE6               	movwf	postinc1,c
  4880  017E62  0E57               	movlw	87
  4881  017E64  6EE6               	movwf	postinc1,c
  4882  017E66  0E05               	movlw	5
  4883  017E68  6EE6               	movwf	postinc1,c
  4884  017E6A  0E00               	movlw	0
  4885  017E6C  6EE6               	movwf	postinc1,c
  4886  017E6E  ECD9  F0C6         	call	_wdtdelay	;wreg free
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  4890  017E72  0E39               	movlw	57
  4891  017E74  6EE6               	movwf	postinc1,c
  4892  017E76  EC47  F0CB         	call	_send_lcd_cmd	;wreg free
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  4896  017E7A  0E1D               	movlw	29
  4897  017E7C  6EE6               	movwf	postinc1,c
  4898  017E7E  EC47  F0CB         	call	_send_lcd_cmd	;wreg free
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  4902  017E82  0E50               	movlw	80
  4903  017E84  6EE6               	movwf	postinc1,c
  4904  017E86  EC47  F0CB         	call	_send_lcd_cmd	;wreg free
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  4908  017E8A  0E6C               	movlw	108
  4909  017E8C  6EE6               	movwf	postinc1,c
  4910  017E8E  EC47  F0CB         	call	_send_lcd_cmd	;wreg free
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  4914  017E92  0E76               	movlw	118
  4915  017E94  6EE6               	movwf	postinc1,c
  4916  017E96  EC47  F0CB         	call	_send_lcd_cmd	;wreg free
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  4920  017E9A  0E38               	movlw	56
  4921  017E9C  6EE6               	movwf	postinc1,c
  4922  017E9E  EC33  F0CB         	call	_send_lcd_cmd_long	;wreg free
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  4926  017EA2  0E0F               	movlw	15
  4927  017EA4  6EE6               	movwf	postinc1,c
  4928  017EA6  EC47  F0CB         	call	_send_lcd_cmd	;wreg free
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  4932  017EAA  0E01               	movlw	1
  4933  017EAC  6EE6               	movwf	postinc1,c
  4934  017EAE  EC33  F0CB         	call	_send_lcd_cmd_long	;wreg free
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  4938  017EB2  0E02               	movlw	2
  4939  017EB4  6EE6               	movwf	postinc1,c
  4940  017EB6  EC47  F0CB         	call	_send_lcd_cmd	;wreg free
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  4944  017EBA  0E06               	movlw	6
  4945  017EBC  6EE6               	movwf	postinc1,c
  4946  017EBE  EC47  F0CB         	call	_send_lcd_cmd	;wreg free
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;eadog.c: 70:  wdtdelay(30);
  4950  017EC2  0E1E               	movlw	30
  4951  017EC4  6EE6               	movwf	postinc1,c
  4952  017EC6  0E00               	movlw	0
  4953  017EC8  6EE6               	movwf	postinc1,c
  4954  017ECA  0E00               	movlw	0
  4955  017ECC  6EE6               	movwf	postinc1,c
  4956  017ECE  0E00               	movlw	0
  4957  017ED0  6EE6               	movwf	postinc1,c
  4958  017ED2  ECD9  F0C6         	call	_wdtdelay	;wreg free
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  4962  017ED6  0E02               	movlw	2
  4963  017ED8  013D               	movlb	61	; () banked
  4964  017EDA  6F16               	movwf	22,b	;volatile
  4965                           
  4966                           ; BSR set to: 61
  4967                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  4968  017EDC  0E40               	movlw	64
  4969  017EDE  6F15               	movwf	21,b	;volatile
  4970                           
  4971                           ; BSR set to: 61
  4972                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  4973  017EE0  0E83               	movlw	131
  4974  017EE2  6F14               	movwf	20,b	;volatile
  4975                           
  4976                           ; BSR set to: 61
  4977                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  4978  017EE4  931A               	bcf	26,1,b	;volatile
  4979                           
  4980                           ; BSR set to: 61
  4981                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  4982  017EE6  0E3F               	movlw	-193
  4983  017EE8  013B               	movlb	59	; () banked
  4984  017EEA  17FD               	andwf	253,f,b	;volatile
  4985                           
  4986                           ; BSR set to: 59
  4987                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  4988  017EEC  9BFD               	bcf	253,5,b	;volatile
  4989                           
  4990                           ; BSR set to: 59
  4991                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  4992  017EEE  51FD               	movf	253,w,b	;volatile
  4993  017EF0  0BF9               	andlw	-7
  4994  017EF2  0902               	iorlw	2
  4995  017EF4  6FFD               	movwf	253,b	;volatile
  4996                           
  4997                           ; BSR set to: 59
  4998                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  4999  017EF6  0EE7               	movlw	-25
  5000  017EF8  17FD               	andwf	253,f,b	;volatile
  5001                           
  5002                           ; BSR set to: 59
  5003                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5004  017EFA  81FD               	bsf	253,0,b	;volatile
  5005                           
  5006                           ; BSR set to: 59
  5007                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5008  017EFC  0E43               	movlw	low _ring_buf1
  5009  017EFE  6FF9               	movwf	249,b	;volatile
  5010  017F00  0E04               	movlw	high _ring_buf1
  5011  017F02  6FFA               	movwf	250,b	;volatile
  5012  017F04  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5013  017F06  6FFB               	movwf	251,b	;volatile
  5014                           
  5015                           ; BSR set to: 59
  5016                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5017  017F08  9BFC               	bcf	252,5,b	;volatile
  5018                           
  5019                           ; BSR set to: 59
  5020                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5021  017F0A  013D               	movlb	61	; () banked
  5022  017F0C  831A               	bsf	26,1,b	;volatile
  5023                           
  5024                           ; BSR set to: 61
  5025                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5026  017F0E  94BE               	bcf	190,2,c	;volatile
  5027                           
  5028                           ; BSR set to: 61
  5029                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5030  017F10  0012               	return		;funcret
  5031  017F12                     __end_of_init_display:
  5032                           	opt callstack 0
  5033                           
  5034 ;; *************** function _send_lcd_cmd_long *****************
  5035 ;; Defined at:
  5036 ;;		line 129 in file "eadog.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  cmd             1  [STACK] const unsigned char 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1  [STACK] void 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5045 ;; Tracked objects:
  5046 ;;		On entry : 3F/0
  5047 ;;		On exit  : 3F/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5054 ;;Total ram usage:        0 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:   16
  5057 ;; This function calls:
  5058 ;;		_SPI1_Exchange8bit
  5059 ;;		_wdtdelay
  5060 ;; This function is called by:
  5061 ;;		_init_display
  5062 ;; This function uses a reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text9
  5066  019666                     __ptext9:
  5067                           	opt callstack 0
  5068  019666                     _send_lcd_cmd_long:
  5069                           	opt callstack 13
  5070                           
  5071                           ; BSR set to: 61
  5072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5073                           ;incstack = 0
  5074                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5075  019666  92BC               	bcf	188,1,c	;volatile
  5076                           
  5077                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5078  019668  94BC               	bcf	188,2,c	;volatile
  5079                           
  5080                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5081                           ;stkvar	_cmd @ sp[(0)+-1]
  5082  01966A  0EFF               	movlw	-1
  5083  01966C  50E3               	movf	plusw1,w,c
  5084  01966E  6EE6               	movwf	postinc1,c
  5085  019670  EC5F  F0CD         	call	_SPI1_Exchange8bit	;wreg free
  5086                           
  5087                           ; BSR set to: 57
  5088                           ;eadog.c: 134:  wdtdelay(800);
  5089  019674  0E20               	movlw	32
  5090  019676  6EE6               	movwf	postinc1,c
  5091  019678  0E03               	movlw	3
  5092  01967A  6EE6               	movwf	postinc1,c
  5093  01967C  0E00               	movlw	0
  5094  01967E  6EE6               	movwf	postinc1,c
  5095  019680  0E00               	movlw	0
  5096  019682  6EE6               	movwf	postinc1,c
  5097  019684  ECD9  F0C6         	call	_wdtdelay	;wreg free
  5098                           
  5099                           ; BSR set to: 0
  5100  019688  82BC               	bsf	188,1,c	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5104  01968A  52E5               	movf	postdec1,f,c
  5105  01968C  0012               	return		;funcret
  5106  01968E                     __end_of_send_lcd_cmd_long:
  5107                           	opt callstack 0
  5108                           
  5109 ;; *************** function _send_lcd_cmd *****************
  5110 ;; Defined at:
  5111 ;;		line 117 in file "eadog.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  cmd             1  [STACK] const unsigned char 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1  [STACK] void 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5120 ;; Tracked objects:
  5121 ;;		On entry : 3F/0
  5122 ;;		On exit  : 3F/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:   16
  5132 ;; This function calls:
  5133 ;;		_SPI1_Exchange8bit
  5134 ;;		_wdtdelay
  5135 ;; This function is called by:
  5136 ;;		_init_display
  5137 ;; This function uses a reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text10
  5141  01968E                     __ptext10:
  5142                           	opt callstack 0
  5143  01968E                     _send_lcd_cmd:
  5144                           	opt callstack 13
  5145                           
  5146                           ; BSR set to: 0
  5147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5148                           ;incstack = 0
  5149                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5150  01968E  92BC               	bcf	188,1,c	;volatile
  5151                           
  5152                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5153  019690  94BC               	bcf	188,2,c	;volatile
  5154                           
  5155                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5156                           ;stkvar	_cmd @ sp[(0)+-1]
  5157  019692  0EFF               	movlw	-1
  5158  019694  50E3               	movf	plusw1,w,c
  5159  019696  6EE6               	movwf	postinc1,c
  5160  019698  EC5F  F0CD         	call	_SPI1_Exchange8bit	;wreg free
  5161                           
  5162                           ; BSR set to: 57
  5163                           ;eadog.c: 122:  wdtdelay(30);
  5164  01969C  0E1E               	movlw	30
  5165  01969E  6EE6               	movwf	postinc1,c
  5166  0196A0  0E00               	movlw	0
  5167  0196A2  6EE6               	movwf	postinc1,c
  5168  0196A4  0E00               	movlw	0
  5169  0196A6  6EE6               	movwf	postinc1,c
  5170  0196A8  0E00               	movlw	0
  5171  0196AA  6EE6               	movwf	postinc1,c
  5172  0196AC  ECD9  F0C6         	call	_wdtdelay	;wreg free
  5173                           
  5174                           ; BSR set to: 0
  5175  0196B0  82BC               	bsf	188,1,c	;volatile
  5176                           
  5177                           ; BSR set to: 0
  5178                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5179  0196B2  52E5               	movf	postdec1,f,c
  5180  0196B4  0012               	return		;funcret
  5181  0196B6                     __end_of_send_lcd_cmd:
  5182                           	opt callstack 0
  5183                           
  5184 ;; *************** function _SPI1_Exchange8bit *****************
  5185 ;; Defined at:
  5186 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  data            1  [STACK] unsigned char 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1  [STACK] unsigned char 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 3F/39
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5204 ;;Total ram usage:        0 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:   15
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_send_lcd_cmd
  5211 ;;		_send_lcd_cmd_long
  5212 ;; This function uses a reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text11
  5216  019ABE                     __ptext11:
  5217                           	opt callstack 0
  5218  019ABE                     _SPI1_Exchange8bit:
  5219                           	opt callstack 13
  5220                           
  5221                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5222                           
  5223                           ; BSR set to: 0
  5224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5225                           ;incstack = 0
  5226  019ABE  0E01               	movlw	1
  5227  019AC0  013D               	movlb	61	; () banked
  5228  019AC2  6F12               	movwf	18,b	;volatile
  5229                           
  5230                           ; BSR set to: 61
  5231                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5232                           ;stkvar	_data @ sp[(0)+-1]
  5233  019AC4  0EFF               	movlw	-1
  5234  019AC6  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5235  019ACC                     l807:
  5236                           
  5237                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5238  019ACC  0139               	movlb	57	; () banked
  5239  019ACE  A9A2               	btfss	162,4,b	;volatile
  5240  019AD0  D7FD               	goto	l807
  5241                           
  5242                           ; BSR set to: 57
  5243                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5244  019AD2  006F F440  F001    	movff	15632,btemp	;volatile
  5245                           
  5246                           ; BSR set to: 57
  5247                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5248  019AD8  52E5               	movf	postdec1,f,c
  5249  019ADA  0012               	return		;funcret
  5250  019ADC                     __end_of_SPI1_Exchange8bit:
  5251                           	opt callstack 0
  5252                           
  5253 ;; *************** function _ringBufS_init *****************
  5254 ;; Defined at:
  5255 ;;		line 22 in file "ringbufs.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;  _this           2  [STACK] PTR volatile struct ring
  5258 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1  [STACK] void 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5274 ;;Total ram usage:        0 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:   16
  5277 ;; This function calls:
  5278 ;;		_memset
  5279 ;; This function is called by:
  5280 ;;		_init_display
  5281 ;; This function uses a reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text12
  5285  0196B6                     __ptext12:
  5286                           	opt callstack 0
  5287  0196B6                     _ringBufS_init:
  5288                           	opt callstack 13
  5289                           
  5290                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5291                           
  5292                           ; BSR set to: 57
  5293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5294                           ;incstack = 0
  5295  0196B6  0E43               	movlw	67
  5296  0196B8  6EE6               	movwf	postinc1,c
  5297  0196BA  0E00               	movlw	0
  5298  0196BC  6EE6               	movwf	postinc1,c
  5299  0196BE  0E00               	movlw	0
  5300  0196C0  6EE6               	movwf	postinc1,c
  5301  0196C2  0E00               	movlw	0
  5302  0196C4  6EE6               	movwf	postinc1,c
  5303                           
  5304                           ;stkvar	__this @ sp[(-4)+-2]
  5305  0196C6  0EFA               	movlw	-6
  5306  0196C8  006F FF8F FFE6     	movff	plusw1,postinc1
  5307  0196CE  006F FF8F FFE6     	movff	plusw1,postinc1
  5308  0196D4  EC3B  F0A9         	call	_memset	;wreg free
  5309                           
  5310                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5311  0196D8  52E5               	movf	postdec1,f,c
  5312  0196DA  52E5               	movf	postdec1,f,c
  5313  0196DC  0012               	return		;funcret
  5314  0196DE                     __end_of_ringBufS_init:
  5315                           	opt callstack 0
  5316                           
  5317 ;; *************** function _init_bsoc *****************
  5318 ;; Defined at:
  5319 ;;		line 80 in file "bsoc.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;		None
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1  [STACK] void 
  5326 ;; Registers used:
  5327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5328 ;; Tracked objects:
  5329 ;;		On entry : 3F/1
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5337 ;;Total ram usage:        0 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:   18
  5340 ;; This function calls:
  5341 ;;		_TMR3_SetInterruptHandler
  5342 ;;		_Volts_to_SOC
  5343 ;;		___fldiv
  5344 ;;		___flmul
  5345 ;;		___fltol
  5346 ;;		___xxtofl
  5347 ;;		_conv_raw_result
  5348 ;; This function is called by:
  5349 ;;		_main
  5350 ;; This function uses a reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text13
  5354  016ED4                     __ptext13:
  5355                           	opt callstack 0
  5356  016ED4                     _init_bsoc:
  5357                           	opt callstack 12
  5358                           
  5359                           ;bsoc.c: 85:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5360                           
  5361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5362                           ;incstack = 0
  5363  016ED4  0E00               	movlw	0
  5364  016ED6  6EE6               	movwf	postinc1,c
  5365  016ED8  0E00               	movlw	0
  5366  016EDA  6EE6               	movwf	postinc1,c
  5367  016EDC  0E7A               	movlw	122
  5368  016EDE  6EE6               	movwf	postinc1,c
  5369  016EE0  0E44               	movlw	68
  5370  016EE2  6EE6               	movwf	postinc1,c
  5371  016EE4  0E00               	movlw	0
  5372  016EE6  6EE6               	movwf	postinc1,c
  5373  016EE8  0E04               	movlw	4
  5374  016EEA  6EE6               	movwf	postinc1,c
  5375  016EEC  EC12  F0A1         	call	_conv_raw_result	;wreg free
  5376  016EF0  0060  F007  FFE6   	movff	btemp,postinc1
  5377  016EF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5378  016EFC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5379  016F02  0060  F013  FFE6   	movff	btemp+3,postinc1
  5380  016F08  ECB1  F0B6         	call	___fltol	;wreg free
  5381  016F0C  0060  F007  FFE6   	movff	btemp,postinc1
  5382  016F12  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5383  016F18  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5384  016F1E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5385  016F24  0E00               	movlw	0
  5386  016F26  6EE6               	movwf	postinc1,c
  5387  016F28  EC20  F0B2         	call	___xxtofl	;wreg free
  5388  016F2C  0060  F007  FFE6   	movff	btemp,postinc1
  5389  016F32  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5390  016F38  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5391  016F3E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5392  016F44  EC1C  F093         	call	___flmul	;wreg free
  5393  016F48  0060  F007  FFE6   	movff	btemp,postinc1
  5394  016F4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5395  016F54  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5396  016F5A  0060  F013  FFE6   	movff	btemp+3,postinc1
  5397  016F60  ECB1  F0B6         	call	___fltol	;wreg free
  5398  016F64  0060  F007  FFE6   	movff	btemp,postinc1
  5399  016F6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5400  016F70  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5401  016F76  0060  F013  FFE6   	movff	btemp+3,postinc1
  5402  016F7C  EC17  F0C3         	call	_Volts_to_SOC	;wreg free
  5403  016F80  0060  F004  F19E   	movff	btemp,_C+158	;volatile
  5404  016F86  0060  F008  F19F   	movff	btemp+1,_C+159	;volatile
  5405                           
  5406                           ;bsoc.c: 86:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5407  016F8C  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5408  016F92  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5409  016F98  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5410  016F9E  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5411  016FA4  0E00               	movlw	0
  5412  016FA6  6EE6               	movwf	postinc1,c
  5413  016FA8  0E00               	movlw	0
  5414  016FAA  6EE6               	movwf	postinc1,c
  5415  016FAC  0EC8               	movlw	200
  5416  016FAE  6EE6               	movwf	postinc1,c
  5417  016FB0  0E42               	movlw	66
  5418  016FB2  6EE6               	movwf	postinc1,c
  5419  016FB4  0101               	movlb	1	; () banked
  5420  016FB6  519E               	movf	(_C+158)& (0+255),w,b	;volatile
  5421  016FB8  6E09               	movwf	(btemp+8)^0,c
  5422  016FBA  519F               	movf	(_C+159)& (0+255),w,b	;volatile
  5423  016FBC  6E0A               	movwf	(btemp+9)^0,c
  5424  016FBE  6A0B               	clrf	(btemp+10)^0,c
  5425  016FC0  6A0C               	clrf	(btemp+11)^0,c
  5426  016FC2  0060  F027  FFE6   	movff	btemp+8,postinc1
  5427  016FC8  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5428  016FCE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5429  016FD4  0060  F033  FFE6   	movff	btemp+11,postinc1
  5430  016FDA  0E00               	movlw	0
  5431  016FDC  6EE6               	movwf	postinc1,c
  5432  016FDE  EC20  F0B2         	call	___xxtofl	;wreg free
  5433  016FE2  0060  F007  FFE6   	movff	btemp,postinc1
  5434  016FE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5435  016FEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5436  016FF4  0060  F013  FFE6   	movff	btemp+3,postinc1
  5437  016FFA  EC55  F09E         	call	___fldiv	;wreg free
  5438  016FFE  0060  F007  FFE6   	movff	btemp,postinc1
  5439  017004  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5440  01700A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5441  017010  0060  F013  FFE6   	movff	btemp+3,postinc1
  5442  017016  EC1C  F093         	call	___flmul	;wreg free
  5443  01701A  0060  F004  F180   	movff	btemp,_C+128	;volatile
  5444  017020  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
  5445  017026  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
  5446  01702C  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
  5447                           
  5448                           ;bsoc.c: 87:  TMR3_SetInterruptHandler(calc_bsoc);
  5449  017032  0E1E               	movlw	low _calc_bsoc
  5450  017034  6EE6               	movwf	postinc1,c
  5451  017036  0E36               	movlw	high _calc_bsoc
  5452  017038  6EE6               	movwf	postinc1,c
  5453  01703A  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5454  01703C  6EE6               	movwf	postinc1,c
  5455  01703E  ECFB  F0CB         	call	_TMR3_SetInterruptHandler	;wreg free
  5456                           
  5457                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5458  017042  0012               	return		;funcret
  5459  017044                     __end_of_init_bsoc:
  5460                           	opt callstack 0
  5461                           
  5462 ;; *************** function _Volts_to_SOC *****************
  5463 ;; Defined at:
  5464 ;;		line 144 in file "bsoc.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  cvoltage        4  [STACK] unsigned long 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;		None
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2  [STACK] unsigned short 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/1
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5482 ;;Total ram usage:        0 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:   15
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_calc_bsoc
  5489 ;;		_init_bsoc
  5490 ;; This function uses a reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text14
  5494  01862E                     __ptext14:
  5495                           	opt callstack 0
  5496  01862E                     _Volts_to_SOC:
  5497                           	opt callstack 0
  5498                           
  5499                           ;bsoc.c: 144: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 145: {;bsoc.c: 146:  stat
      +                          ic uint8_t slot;;bsoc.c: 148:  C.soc = 0;
  5500                           
  5501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5502                           ;incstack = 0
  5503 ;; hardware stack exceeded
  5504  01862E  0101               	movlb	1	; () banked
  5505  018630  6B9E               	clrf	(_C+158)& (0+255),b	;volatile
  5506  018632  6B9F               	clrf	(_C+159)& (0+255),b	;volatile
  5507                           
  5508                           ;bsoc.c: 149:  for (slot = 0; slot < 26; slot++) {
  5509  018634  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5510  018636                     l8848:
  5511  018636  0E19               	movlw	25
  5512  018638  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  5513  01863A  D001               	goto	l8852
  5514  01863C  D036               	goto	l8860
  5515  01863E                     l8852:
  5516                           
  5517                           ;bsoc.c: 150:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5518                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5519  01863E  502D               	movf	Volts_to_SOC@slot^0,w,c
  5520  018640  0D08               	mullw	8
  5521  018642  0EB1               	movlw	low _BVSOC_TABLE
  5522  018644  24F3               	addwf	243,w,c
  5523  018646  6EF6               	movwf	tblptrl,c
  5524  018648  0EFC               	movlw	high _BVSOC_TABLE
  5525  01864A  20F4               	addwfc	244,w,c
  5526  01864C  6EF7               	movwf	tblptrh,c
  5527  01864E                     	if	1	;There are 3 active tblptr bytes
  5528  01864E  6AF8               	clrf	tblptru,c
  5529  018650  0E00               	movlw	low (__mediumconst shr (0+16))
  5530  018652  22F8               	addwfc	tblptru,f,c
  5531  018654                     	endif
  5532  018654  0EFC               	movlw	-4
  5533  018656  50E3               	movf	plusw1,w,c
  5534  018658  0009               	tblrd		*+
  5535  01865A  5CF5               	subwf	tablat,w,c
  5536  01865C  0EFD               	movlw	-3
  5537  01865E  50E3               	movf	plusw1,w,c
  5538  018660  0009               	tblrd		*+
  5539  018662  58F5               	subwfb	tablat,w,c
  5540  018664  0EFE               	movlw	-2
  5541  018666  50E3               	movf	plusw1,w,c
  5542  018668  0009               	tblrd		*+
  5543  01866A  58F5               	subwfb	tablat,w,c
  5544  01866C  0EFF               	movlw	-1
  5545  01866E  50E3               	movf	plusw1,w,c
  5546  018670  0009               	tblrd		*+
  5547  018672  58F5               	subwfb	tablat,w,c
  5548  018674  B0D8               	btfsc	status,0,c
  5549  018676  D017               	goto	l8856
  5550                           
  5551                           ;bsoc.c: 151:    C.soc = BVSOC_TABLE[slot][1];
  5552  018678  502D               	movf	Volts_to_SOC@slot^0,w,c
  5553  01867A  0D08               	mullw	8
  5554  01867C  0E04               	movlw	4
  5555  01867E  26F3               	addwf	243,f,c
  5556  018680  0E00               	movlw	0
  5557  018682  22F4               	addwfc	244,f,c
  5558  018684  0EB1               	movlw	low _BVSOC_TABLE
  5559  018686  24F3               	addwf	243,w,c
  5560  018688  6EF6               	movwf	tblptrl,c
  5561  01868A  0EFC               	movlw	high _BVSOC_TABLE
  5562  01868C  20F4               	addwfc	244,w,c
  5563  01868E  6EF7               	movwf	tblptrh,c
  5564  018690                     	if	1	;There are 3 active tblptr bytes
  5565  018690  6AF8               	clrf	tblptru,c
  5566  018692  0E00               	movlw	low (__mediumconst shr (0+16))
  5567  018694  22F8               	addwfc	tblptru,f,c
  5568  018696                     	endif
  5569  018696  0009               	tblrd		*+
  5570  018698  006F FFD4  F19E    	movff	tablat,_C+158	;volatile
  5571  01869E  000A               	tblrd		*-
  5572  0186A0  006F FFD4  F19F    	movff	tablat,_C+159	;volatile
  5573  0186A6                     l8856:
  5574                           
  5575                           ;bsoc.c: 153:  }
  5576  0186A6  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  5577  0186A8  D7C6               	goto	l8848
  5578  0186AA                     l8860:
  5579                           
  5580                           ;bsoc.c: 155:  return C.soc;
  5581  0186AA  EE20  F19E         	lfsr	2,_C+158	;volatile
  5582  0186AE  006F FF78  F001    	movff	postinc2,btemp
  5583  0186B4  006F FF74  F002    	movff	postdec2,btemp+1
  5584                           
  5585                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  5586  0186BA  52E5               	movf	postdec1,f,c
  5587  0186BC  52E5               	movf	postdec1,f,c
  5588  0186BE  52E5               	movf	postdec1,f,c
  5589  0186C0  52E5               	movf	postdec1,f,c
  5590  0186C2  0012               	return		;funcret
  5591  0186C4                     __end_of_Volts_to_SOC:
  5592                           	opt callstack 0
  5593                           
  5594 ;; *************** function _hid_display *****************
  5595 ;; Defined at:
  5596 ;;		line 17 in file "hid.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  h               1  [STACK] PTR struct H_data
  5599 ;;		 -> H(7), 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1  [STACK] PTR struct H_data
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5606 ;; Tracked objects:
  5607 ;;		On entry : 3F/1
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5615 ;;Total ram usage:        0 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:   17
  5618 ;; This function calls:
  5619 ;;		_hid_input
  5620 ;; This function is called by:
  5621 ;;		_main
  5622 ;; This function uses a reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text15
  5626  017D26                     __ptext15:
  5627                           	opt callstack 0
  5628  017D26                     _hid_display:
  5629                           	opt callstack 13
  5630                           
  5631                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  5632                           ;stkvar	_h @ sp[(0)+-1]
  5633                           
  5634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5635                           ;incstack = 0
  5636  017D26  0EFF               	movlw	-1
  5637  017D28  50E3               	movf	plusw1,w,c
  5638  017D2A  6EE6               	movwf	postinc1,c
  5639  017D2C  ECF4  F0C3         	call	_hid_input	;wreg free
  5640                           
  5641                           ;hid.c: 21:  switch (h->h_state) {
  5642  017D30  D066               	goto	l9884
  5643  017D32                     l9862:
  5644                           
  5645                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  5646                           ;stkvar	_h @ sp[(0)+-1]
  5647  017D32  0EFF               	movlw	-1
  5648  017D34  50E3               	movf	plusw1,w,c
  5649  017D36  6ED9               	movwf	fsr2l,c
  5650  017D38  6ADA               	clrf	fsr2h,c
  5651  017D3A  0E01               	movlw	1
  5652  017D3C  26D9               	addwf	fsr2l,f,c
  5653  017D3E  0E01               	movlw	1
  5654  017D40  6EDF               	movwf	indf2,c
  5655                           
  5656                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  5657                           ;stkvar	_h @ sp[(0)+-1]
  5658  017D42  0EFF               	movlw	-1
  5659  017D44  50E3               	movf	plusw1,w,c
  5660  017D46  6ED9               	movwf	fsr2l,c
  5661  017D48  6ADA               	clrf	fsr2h,c
  5662  017D4A  0E00               	movlw	0
  5663  017D4C  6EDF               	movwf	indf2,c
  5664                           
  5665                           ;hid.c: 25:   h->wait_enter = 1;
  5666                           ;stkvar	_h @ sp[(0)+-1]
  5667  017D4E  0EFF               	movlw	-1
  5668  017D50  50E3               	movf	plusw1,w,c
  5669  017D52  6ED9               	movwf	fsr2l,c
  5670  017D54  6ADA               	clrf	fsr2h,c
  5671  017D56  0E04               	movlw	4
  5672  017D58  26D9               	addwf	fsr2l,f,c
  5673  017D5A  0E01               	movlw	1
  5674  017D5C  6EDF               	movwf	indf2,c
  5675                           
  5676                           ;hid.c: 26:   h->wait_select = 1;
  5677                           ;stkvar	_h @ sp[(0)+-1]
  5678  017D5E  0EFF               	movlw	-1
  5679  017D60  50E3               	movf	plusw1,w,c
  5680  017D62  6ED9               	movwf	fsr2l,c
  5681  017D64  6ADA               	clrf	fsr2h,c
  5682  017D66  0E02               	movlw	2
  5683  017D68  26D9               	addwf	fsr2l,f,c
  5684  017D6A  0E01               	movlw	1
  5685  017D6C  6EDF               	movwf	indf2,c
  5686                           
  5687                           ;hid.c: 27:   h->select_p = SW_OFF;
  5688                           ;stkvar	_h @ sp[(0)+-1]
  5689  017D6E  0EFF               	movlw	-1
  5690  017D70  50E3               	movf	plusw1,w,c
  5691  017D72  6ED9               	movwf	fsr2l,c
  5692  017D74  6ADA               	clrf	fsr2h,c
  5693  017D76  0E03               	movlw	3
  5694  017D78  26D9               	addwf	fsr2l,f,c
  5695  017D7A  0E00               	movlw	0
  5696  017D7C  6EDF               	movwf	indf2,c
  5697                           
  5698                           ;hid.c: 28:   h->enter_p = SW_OFF;
  5699                           ;stkvar	_h @ sp[(0)+-1]
  5700  017D7E  0EFF               	movlw	-1
  5701  017D80  50E3               	movf	plusw1,w,c
  5702  017D82  6ED9               	movwf	fsr2l,c
  5703  017D84  6ADA               	clrf	fsr2h,c
  5704  017D86  0E05               	movlw	5
  5705  017D88  26D9               	addwf	fsr2l,f,c
  5706  017D8A  0E00               	movlw	0
  5707  017D8C  D036               	goto	L1
  5708  017D8E                     l9874:
  5709                           
  5710                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  5711                           ;stkvar	_h @ sp[(0)+-1]
  5712  017D8E  0EFF               	movlw	-1
  5713  017D90  50E3               	movf	plusw1,w,c
  5714  017D92  6ED9               	movwf	fsr2l,c
  5715  017D94  6ADA               	clrf	fsr2h,c
  5716  017D96  0E02               	movlw	2
  5717  017D98  26D9               	addwf	fsr2l,f,c
  5718  017D9A  50DF               	movf	indf2,w,c
  5719  017D9C  A4D8               	btfss	status,2,c
  5720  017D9E  D042               	goto	l1866
  5721                           
  5722                           ;stkvar	_h @ sp[(0)+-1]
  5723  017DA0  0EFF               	movlw	-1
  5724  017DA2  50E3               	movf	plusw1,w,c
  5725  017DA4  6ED9               	movwf	fsr2l,c
  5726  017DA6  6ADA               	clrf	fsr2h,c
  5727  017DA8  0E03               	movlw	3
  5728  017DAA  26D9               	addwf	fsr2l,f,c
  5729  017DAC  50DF               	movf	indf2,w,c
  5730  017DAE  A4D8               	btfss	status,2,c
  5731  017DB0  D039               	goto	l1866
  5732                           
  5733                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  5734                           ;stkvar	_h @ sp[(0)+-1]
  5735  017DB2  0EFF               	movlw	-1
  5736  017DB4  50E3               	movf	plusw1,w,c
  5737  017DB6  6ED9               	movwf	fsr2l,c
  5738  017DB8  6ADA               	clrf	fsr2h,c
  5739  017DBA  0E06               	movlw	6
  5740  017DBC  26D9               	addwf	fsr2l,f,c
  5741                           
  5742                           ;stkvar	_h @ sp[(0)+-1]
  5743  017DBE  0EFF               	movlw	-1
  5744  017DC0  50E3               	movf	plusw1,w,c
  5745  017DC2  6EE9               	movwf	fsr0l,c
  5746  017DC4  6AEA               	clrf	fsr0h,c
  5747  017DC6  0E06               	movlw	6
  5748  017DC8  26E9               	addwf	fsr0l,f,c
  5749  017DCA  2AEF               	incf	indf0,f,c
  5750  017DCC  50EF               	movf	indf0,w,c
  5751  017DCE  0B03               	andlw	3
  5752  017DD0  6EDF               	movwf	indf2,c
  5753                           
  5754                           ;hid.c: 34:    h->hid_display = h->sequence;
  5755                           ;stkvar	_h @ sp[(0)+-1]
  5756  017DD2  0EFF               	movlw	-1
  5757  017DD4  50E3               	movf	plusw1,w,c
  5758  017DD6  6ED9               	movwf	fsr2l,c
  5759  017DD8  6ADA               	clrf	fsr2h,c
  5760  017DDA  0E06               	movlw	6
  5761  017DDC  26D9               	addwf	fsr2l,f,c
  5762                           
  5763                           ;stkvar	_h @ sp[(0)+-1]
  5764  017DDE  0EFF               	movlw	-1
  5765  017DE0  50E3               	movf	plusw1,w,c
  5766  017DE2  6EE9               	movwf	fsr0l,c
  5767  017DE4  6AEA               	clrf	fsr0h,c
  5768  017DE6  006F FF7F FFEF     	movff	indf2,indf0
  5769                           
  5770                           ;hid.c: 35:    h->wait_select = 1;
  5771                           ;stkvar	_h @ sp[(0)+-1]
  5772  017DEC  0EFF               	movlw	-1
  5773  017DEE  50E3               	movf	plusw1,w,c
  5774  017DF0  6ED9               	movwf	fsr2l,c
  5775  017DF2  6ADA               	clrf	fsr2h,c
  5776  017DF4  0E02               	movlw	2
  5777  017DF6  26D9               	addwf	fsr2l,f,c
  5778  017DF8  0E01               	movlw	1
  5779  017DFA                     L1:
  5780  017DFA  6EDF               	movwf	indf2,c
  5781  017DFC  D013               	goto	l1866
  5782  017DFE                     l9884:
  5783                           
  5784                           ;stkvar	_h @ sp[(0)+-1]
  5785  017DFE  0EFF               	movlw	-1
  5786  017E00  50E3               	movf	plusw1,w,c
  5787  017E02  6ED9               	movwf	fsr2l,c
  5788  017E04  6ADA               	clrf	fsr2h,c
  5789  017E06  0E01               	movlw	1
  5790  017E08  26D9               	addwf	fsr2l,f,c
  5791  017E0A  50DF               	movf	indf2,w,c
  5792  017E0C  6E0B               	movwf	(btemp+10)^0,c
  5793  017E0E  6A0C               	clrf	(btemp+11)^0,c
  5794                           
  5795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5796                           ; Switch size 1, requested type "simple"
  5797                           ; Number of cases is 1, Range of values is 0 to 0
  5798                           ; switch strategies available:
  5799                           ; Name         Instructions Cycles
  5800                           ; simple_byte            4     3 (average)
  5801                           ;	Chosen strategy is simple_byte
  5802  017E10  500C               	movf	(btemp+11)^0,w,c
  5803  017E12  0A00               	xorlw	0	; case 0
  5804  017E14  A4D8               	btfss	status,2,c
  5805  017E16  D7BB               	goto	l9874
  5806                           
  5807                           ; Switch size 1, requested type "simple"
  5808                           ; Number of cases is 2, Range of values is 0 to 1
  5809                           ; switch strategies available:
  5810                           ; Name         Instructions Cycles
  5811                           ; simple_byte            7     4 (average)
  5812                           ;	Chosen strategy is simple_byte
  5813  017E18  500B               	movf	(btemp+10)^0,w,c
  5814  017E1A  0A00               	xorlw	0	; case 0
  5815  017E1C  B4D8               	btfsc	status,2,c
  5816  017E1E  D789               	goto	l9862
  5817  017E20  0A01               	xorlw	1	; case 1
  5818  017E22  D7B5               	goto	l9874
  5819  017E24                     l1866:
  5820                           
  5821                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5822  017E24  52E5               	movf	postdec1,f,c
  5823  017E26  0012               	return		;funcret
  5824  017E28                     __end_of_hid_display:
  5825                           	opt callstack 0
  5826                           
  5827 ;; *************** function _hid_input *****************
  5828 ;; Defined at:
  5829 ;;		line 3 in file "hid.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  h               1  [STACK] PTR struct H_data
  5832 ;;		 -> H(7), 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;		None
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1  [STACK] PTR struct H_data
  5837 ;; Registers used:
  5838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/1
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5848 ;;Total ram usage:        0 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:   16
  5851 ;; This function calls:
  5852 ;;		_get_switch
  5853 ;; This function is called by:
  5854 ;;		_hid_display
  5855 ;; This function uses a reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text16
  5859  0187E8                     __ptext16:
  5860                           	opt callstack 0
  5861  0187E8                     _hid_input:
  5862                           	opt callstack 13
  5863                           
  5864                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  5865                           
  5866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5867                           ;incstack = 0
  5868  0187E8  0E02               	movlw	2
  5869  0187EA  6EE6               	movwf	postinc1,c
  5870  0187EC  EC6F  F0CB         	call	_get_switch	;wreg free
  5871  0187F0  5001               	movf	btemp^0,w,c
  5872  0187F2  B4D8               	btfsc	status,2,c
  5873  0187F4  D01C               	goto	l9542
  5874                           
  5875                           ;hid.c: 6:   h->wait_select = 0;
  5876                           ;stkvar	_h @ sp[(0)+-1]
  5877  0187F6  0EFF               	movlw	-1
  5878  0187F8  50E3               	movf	plusw1,w,c
  5879  0187FA  6ED9               	movwf	fsr2l,c
  5880  0187FC  6ADA               	clrf	fsr2h,c
  5881  0187FE  0E02               	movlw	2
  5882  018800  26D9               	addwf	fsr2l,f,c
  5883  018802  0E00               	movlw	0
  5884  018804  6EDF               	movwf	indf2,c
  5885                           
  5886                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  5887  018806  0E02               	movlw	2
  5888  018808  6EE6               	movwf	postinc1,c
  5889  01880A  EC6F  F0CB         	call	_get_switch	;wreg free
  5890  01880E  5001               	movf	btemp^0,w,c
  5891  018810  B4D8               	btfsc	status,2,c
  5892  018812  D003               	goto	u8600
  5893  018814  6A0C               	clrf	(btemp+11)^0,c
  5894  018816  2A0C               	incf	(btemp+11)^0,f,c
  5895  018818  D001               	goto	u8618
  5896  01881A                     u8600:
  5897  01881A  6A0C               	clrf	(btemp+11)^0,c
  5898  01881C                     u8618:
  5899                           
  5900                           ;stkvar	_h @ sp[(0)+-1]
  5901  01881C  0EFF               	movlw	-1
  5902  01881E  50E3               	movf	plusw1,w,c
  5903  018820  6ED9               	movwf	fsr2l,c
  5904  018822  6ADA               	clrf	fsr2h,c
  5905  018824  0E03               	movlw	3
  5906  018826  26D9               	addwf	fsr2l,f,c
  5907  018828  0060  F033  FFDF   	movff	btemp+11,indf2
  5908  01882E                     l9542:
  5909                           
  5910                           ;hid.c: 10:  if (get_switch(SENTER)) {
  5911  01882E  0E03               	movlw	3
  5912  018830  6EE6               	movwf	postinc1,c
  5913  018832  EC6F  F0CB         	call	_get_switch	;wreg free
  5914  018836  5001               	movf	btemp^0,w,c
  5915  018838  B4D8               	btfsc	status,2,c
  5916  01883A  D01C               	goto	l1857
  5917                           
  5918                           ;hid.c: 11:   h->wait_enter = 0;
  5919                           ;stkvar	_h @ sp[(0)+-1]
  5920  01883C  0EFF               	movlw	-1
  5921  01883E  50E3               	movf	plusw1,w,c
  5922  018840  6ED9               	movwf	fsr2l,c
  5923  018842  6ADA               	clrf	fsr2h,c
  5924  018844  0E04               	movlw	4
  5925  018846  26D9               	addwf	fsr2l,f,c
  5926  018848  0E00               	movlw	0
  5927  01884A  6EDF               	movwf	indf2,c
  5928                           
  5929                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  5930  01884C  0E03               	movlw	3
  5931  01884E  6EE6               	movwf	postinc1,c
  5932  018850  EC6F  F0CB         	call	_get_switch	;wreg free
  5933  018854  5001               	movf	btemp^0,w,c
  5934  018856  B4D8               	btfsc	status,2,c
  5935  018858  D003               	goto	u8630
  5936  01885A  6A0C               	clrf	(btemp+11)^0,c
  5937  01885C  2A0C               	incf	(btemp+11)^0,f,c
  5938  01885E  D001               	goto	u8648
  5939  018860                     u8630:
  5940  018860  6A0C               	clrf	(btemp+11)^0,c
  5941  018862                     u8648:
  5942                           
  5943                           ;stkvar	_h @ sp[(0)+-1]
  5944  018862  0EFF               	movlw	-1
  5945  018864  50E3               	movf	plusw1,w,c
  5946  018866  6ED9               	movwf	fsr2l,c
  5947  018868  6ADA               	clrf	fsr2h,c
  5948  01886A  0E05               	movlw	5
  5949  01886C  26D9               	addwf	fsr2l,f,c
  5950  01886E  0060  F033  FFDF   	movff	btemp+11,indf2
  5951  018874                     l1857:
  5952                           
  5953                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  5954  018874  52E5               	movf	postdec1,f,c
  5955  018876  0012               	return		;funcret
  5956  018878                     __end_of_hid_input:
  5957                           	opt callstack 0
  5958                           
  5959 ;; *************** function _get_switch *****************
  5960 ;; Defined at:
  5961 ;;		line 18 in file "dio.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  i               1  [STACK] unsigned char 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1  [STACK] enum E17021
  5968 ;; Registers used:
  5969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/2
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5979 ;;Total ram usage:        0 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:   15
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_main
  5986 ;;		_hid_input
  5987 ;; This function uses a reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text17
  5991  0196DE                     __ptext17:
  5992                           	opt callstack 0
  5993  0196DE                     _get_switch:
  5994                           	opt callstack 13
  5995                           
  5996                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  5997                           ;stkvar	_i @ sp[(0)+-1]
  5998                           
  5999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6000                           ;incstack = 0
  6001  0196DE  0EFF               	movlw	-1
  6002  0196E0  006F FF8C  F001    	movff	plusw1,btemp
  6003  0196E6  0E03               	movlw	3
  6004  0196E8  6401               	cpfsgt	btemp^0,c
  6005  0196EA  D002               	goto	l8816
  6006                           
  6007                           ;dio.c: 21:   return SW_OFF;
  6008  0196EC  0E00               	movlw	0
  6009  0196EE  D008               	goto	L2
  6010  0196F0                     l8816:
  6011                           
  6012                           ;dio.c: 23:  return S.button[i].sw;
  6013                           ;stkvar	_i @ sp[(0)+-1]
  6014  0196F0  0EFF               	movlw	-1
  6015  0196F2  50E3               	movf	plusw1,w,c
  6016  0196F4  0D05               	mullw	5
  6017  0196F6  50F3               	movf	243,w,c
  6018  0196F8  0F60               	addlw	low _S
  6019  0196FA  6ED9               	movwf	fsr2l,c
  6020  0196FC  6ADA               	clrf	fsr2h,c
  6021  0196FE  50DF               	movf	indf2,w,c
  6022  019700                     L2:
  6023  019700  6E01               	movwf	btemp^0,c
  6024                           
  6025                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6026  019702  52E5               	movf	postdec1,f,c
  6027  019704  0012               	return		;funcret
  6028  019706                     __end_of_get_switch:
  6029                           	opt callstack 0
  6030                           
  6031 ;; *************** function _eaDogM_WriteCommand *****************
  6032 ;; Defined at:
  6033 ;;		line 175 in file "eadog.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  cmd             1  [STACK] const unsigned char 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1  [STACK] void 
  6040 ;; Registers used:
  6041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6042 ;; Tracked objects:
  6043 ;;		On entry : 3F/3D
  6044 ;;		On exit  : 3F/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:   25
  6054 ;; This function calls:
  6055 ;;		_send_lcd_cmd_dma
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text18
  6062  019C4E                     __ptext18:
  6063                           	opt callstack 0
  6064  019C4E                     _eaDogM_WriteCommand:
  6065                           	opt callstack 5
  6066                           
  6067                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6068                           ;stkvar	_cmd @ sp[(0)+-1]
  6069                           
  6070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6071                           ;incstack = 0
  6072  019C4E  0EFF               	movlw	-1
  6073  019C50  50E3               	movf	plusw1,w,c
  6074  019C52  6EE6               	movwf	postinc1,c
  6075  019C54  EC61  F0C7         	call	_send_lcd_cmd_dma	;wreg free
  6076                           
  6077                           ; BSR set to: 0
  6078                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6079  019C58  52E5               	movf	postdec1,f,c
  6080  019C5A  0012               	return		;funcret
  6081  019C5C                     __end_of_eaDogM_WriteCommand:
  6082                           	opt callstack 0
  6083                           
  6084 ;; *************** function _convert_adc_data *****************
  6085 ;; Defined at:
  6086 ;;		line 40 in file "mbmc.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;		None
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  i               1  [STACK] unsigned char 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1  [STACK] void 
  6093 ;; Registers used:
  6094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/1
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6104 ;;Total ram usage:        0 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:   18
  6107 ;; This function calls:
  6108 ;;		_conv_raw_result
  6109 ;;		_lp_filter
  6110 ;; This function is called by:
  6111 ;;		_main
  6112 ;; This function uses a reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text19
  6116  018240                     __ptext19:
  6117                           	opt callstack 0
  6118  018240                     _convert_adc_data:
  6119                           	opt callstack 0
  6120                           
  6121                           ; BSR set to: 0
  6122                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6123  018240  52E6               	movf	postinc1,f,c
  6124                           
  6125                           ;mbmc.c: 42:  uint8_t i = 0;
  6126                           ;stkvar	_i @ sp[(-1)+0]
  6127                           
  6128                           ;incstack = 0
  6129  018242  0EFF               	movlw	-1
  6130  018244  6AE3               	clrf	plusw1,c
  6131  018246                     l9834:
  6132                           
  6133                           ;mbmc.c: 45:   if (V.calib) {
  6134  018246  0102               	movlb	2	; () banked
  6135  018248  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6136  01824A  B4D8               	btfsc	status,2,c
  6137  01824C  D01B               	goto	l9838
  6138                           
  6139                           ; BSR set to: 2
  6140                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6141  01824E  0E01               	movlw	1
  6142  018250  6EE6               	movwf	postinc1,c
  6143                           
  6144                           ;stkvar	_i @ sp[(-2)+0]
  6145  018252  0EFE               	movlw	-2
  6146  018254  50E3               	movf	plusw1,w,c
  6147  018256  6EE6               	movwf	postinc1,c
  6148  018258  0E01               	movlw	1
  6149  01825A  6EE6               	movwf	postinc1,c
  6150                           
  6151                           ;stkvar	_i @ sp[(-4)+0]
  6152  01825C  0EFC               	movlw	-4
  6153  01825E  50E3               	movf	plusw1,w,c
  6154  018260  6EE6               	movwf	postinc1,c
  6155  018262  EC12  F0A1         	call	_conv_raw_result	;wreg free
  6156  018266  0060  F007  FFE6   	movff	btemp,postinc1
  6157  01826C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6158  018272  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6159  018278  0060  F013  FFE6   	movff	btemp+3,postinc1
  6160  01827E  EC06  F0B5         	call	_lp_filter	;wreg free
  6161  018282  D01A               	goto	L3
  6162  018284                     l9838:
  6163                           
  6164                           ; BSR set to: 2
  6165                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6166  018284  0E00               	movlw	0
  6167  018286  6EE6               	movwf	postinc1,c
  6168                           
  6169                           ;stkvar	_i @ sp[(-2)+0]
  6170  018288  0EFE               	movlw	-2
  6171  01828A  50E3               	movf	plusw1,w,c
  6172  01828C  6EE6               	movwf	postinc1,c
  6173  01828E  0E00               	movlw	0
  6174  018290  6EE6               	movwf	postinc1,c
  6175                           
  6176                           ;stkvar	_i @ sp[(-4)+0]
  6177  018292  0EFC               	movlw	-4
  6178  018294  50E3               	movf	plusw1,w,c
  6179  018296  6EE6               	movwf	postinc1,c
  6180  018298  EC12  F0A1         	call	_conv_raw_result	;wreg free
  6181  01829C  0060  F007  FFE6   	movff	btemp,postinc1
  6182  0182A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6183  0182A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6184  0182AE  0060  F013  FFE6   	movff	btemp+3,postinc1
  6185  0182B4  EC06  F0B5         	call	_lp_filter	;wreg free
  6186  0182B8                     L3:
  6187                           
  6188                           ;stkvar	_i @ sp[(-1)+0]
  6189  0182B8  0EFF               	movlw	-1
  6190  0182BA  50E3               	movf	plusw1,w,c
  6191  0182BC  0D04               	mullw	4
  6192  0182BE  0E00               	movlw	low _C
  6193  0182C0  24F3               	addwf	243,w,c
  6194  0182C2  6ED9               	movwf	fsr2l,c
  6195  0182C4  0E01               	movlw	high _C
  6196  0182C6  20F4               	addwfc	prodh,w,c
  6197  0182C8  6EDA               	movwf	fsr2h,c
  6198  0182CA  0060  F007  FFDE   	movff	btemp,postinc2
  6199  0182D0  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6200  0182D6  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6201  0182DC  0060  F013  FFDE   	movff	btemp+3,postinc2
  6202                           
  6203                           ;mbmc.c: 50:  } while (++i < 16);
  6204                           ;stkvar	_i @ sp[(-1)+0]
  6205  0182E2  0EFF               	movlw	-1
  6206  0182E4  2AE3               	incf	plusw1,f,c
  6207  0182E6  0EFF               	movlw	-1
  6208  0182E8  006F FF8C  F001    	movff	plusw1,btemp
  6209  0182EE  0E0F               	movlw	15
  6210  0182F0  6401               	cpfsgt	btemp^0,c
  6211  0182F2  D7A9               	goto	l9834
  6212                           
  6213                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6214  0182F4  52E5               	movf	postdec1,f,c
  6215  0182F6  0012               	return		;funcret
  6216  0182F8                     __end_of_convert_adc_data:
  6217                           	opt callstack 0
  6218                           
  6219 ;; *************** function _conv_raw_result *****************
  6220 ;; Defined at:
  6221 ;;		line 80 in file "daq.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  chan            1  [STACK] const enum E16136
  6224 ;;  to_what         1  [STACK] const enum E16198
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  4  [STACK] float 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/1
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6240 ;;Total ram usage:        0 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:   17
  6243 ;; This function calls:
  6244 ;;		___fldiv
  6245 ;;		___flmul
  6246 ;;		___flsub
  6247 ;;		___xxtofl
  6248 ;;		_get_raw_result
  6249 ;;		_nanf
  6250 ;; This function is called by:
  6251 ;;		_convert_adc_data
  6252 ;;		_init_bsoc
  6253 ;; This function uses a reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text20
  6257  014224                     __ptext20:
  6258                           	opt callstack 0
  6259  014224                     _conv_raw_result:
  6260                           	opt callstack 12
  6261                           
  6262                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  6263                           
  6264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6265                           ;incstack = 0
  6266  014224  D242               	goto	l9476
  6267  014226                     l9422:
  6268                           
  6269                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  6270                           ;stkvar	_chan @ sp[(0)+-1]
  6271  014226  0EFF               	movlw	-1
  6272  014228  006F FF8C  F00C    	movff	plusw1,btemp+11
  6273  01422E  0E77               	movlw	119
  6274  014230  6E09               	movwf	(btemp+8)^0,c
  6275  014232  0E3C               	movlw	60
  6276  014234  6E0A               	movwf	(btemp+9)^0,c
  6277  014236  2A0C               	incf	(btemp+11)^0,f,c
  6278  014238  D003               	goto	u8374
  6279  01423A                     u8375:
  6280  01423A  340A               	rlcf	(btemp+9)^0,w,c
  6281  01423C  320A               	rrcf	(btemp+9)^0,f,c
  6282  01423E  3209               	rrcf	(btemp+8)^0,f,c
  6283  014240                     u8374:
  6284  014240  2E0C               	decfsz	(btemp+11)^0,f,c
  6285  014242  D7FB               	goto	u8375
  6286  014244  B009               	btfsc	(btemp+8)^0,0,c
  6287  014246  D007               	goto	l9428
  6288                           
  6289                           ;daq.c: 86:    return nanf("");
  6290  014248  0E3F               	movlw	low (STR_46+26)
  6291  01424A  6EE6               	movwf	postinc1,c
  6292  01424C  0EFE               	movlw	high (STR_46+26)
  6293  01424E  6EE6               	movwf	postinc1,c
  6294  014250  EC48  F0C6         	call	_nanf	;wreg free
  6295  014254  D23A               	goto	l1737
  6296  014256                     l9428:
  6297                           
  6298                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  6299                           ;stkvar	_chan @ sp[(0)+-1]
  6300  014256  0EFF               	movlw	-1
  6301  014258  006F FF8C  F00C    	movff	plusw1,btemp+11
  6302  01425E  0E03               	movlw	3
  6303  014260  6E09               	movwf	(btemp+8)^0,c
  6304  014262  0E00               	movlw	0
  6305  014264  6E0A               	movwf	(btemp+9)^0,c
  6306  014266  2A0C               	incf	(btemp+11)^0,f,c
  6307  014268  D003               	goto	u8394
  6308  01426A                     u8395:
  6309  01426A  340A               	rlcf	(btemp+9)^0,w,c
  6310  01426C  320A               	rrcf	(btemp+9)^0,f,c
  6311  01426E  3209               	rrcf	(btemp+8)^0,f,c
  6312  014270                     u8394:
  6313  014270  2E0C               	decfsz	(btemp+11)^0,f,c
  6314  014272  D7FB               	goto	u8395
  6315  014274  A009               	btfss	(btemp+8)^0,0,c
  6316  014276  D0EB               	goto	l9442
  6317                           
  6318                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  6319                           ;stkvar	_chan @ sp[(0)+-1]
  6320  014278  0EFF               	movlw	-1
  6321  01427A  006F FF8C  F00C    	movff	plusw1,btemp+11
  6322  014280  0E01               	movlw	1
  6323  014282  6E09               	movwf	(btemp+8)^0,c
  6324  014284  0E00               	movlw	0
  6325  014286  6E0A               	movwf	(btemp+9)^0,c
  6326  014288  2A0C               	incf	(btemp+11)^0,f,c
  6327  01428A  D003               	goto	u8414
  6328  01428C                     u8415:
  6329  01428C  340A               	rlcf	(btemp+9)^0,w,c
  6330  01428E  320A               	rrcf	(btemp+9)^0,f,c
  6331  014290  3209               	rrcf	(btemp+8)^0,f,c
  6332  014292                     u8414:
  6333  014292  2E0C               	decfsz	(btemp+11)^0,f,c
  6334  014294  D7FB               	goto	u8415
  6335  014296  A009               	btfss	(btemp+8)^0,0,c
  6336  014298  D06D               	goto	l9438
  6337                           
  6338                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  6339  01429A  0E7B               	movlw	123
  6340  01429C  6EE6               	movwf	postinc1,c
  6341  01429E  0E14               	movlw	20
  6342  0142A0  6EE6               	movwf	postinc1,c
  6343  0142A2  0EAE               	movlw	174
  6344  0142A4  6EE6               	movwf	postinc1,c
  6345  0142A6  0E3D               	movlw	61
  6346  0142A8  6EE6               	movwf	postinc1,c
  6347  0142AA  0060  F3AC  F009   	movff	_R+32,btemp+8	;volatile
  6348  0142B0  0060  F3B0  F00A   	movff	_R+33,btemp+9	;volatile
  6349  0142B6  0E00               	movlw	0
  6350  0142B8  BE0A               	btfsc	(btemp+9)^0,7,c
  6351  0142BA  0EFF               	movlw	255
  6352  0142BC  6E0B               	movwf	(btemp+10)^0,c
  6353  0142BE  6E0C               	movwf	(btemp+11)^0,c
  6354  0142C0  0060  F027  FFE6   	movff	btemp+8,postinc1
  6355  0142C6  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6356  0142CC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6357  0142D2  0060  F033  FFE6   	movff	btemp+11,postinc1
  6358  0142D8  0E01               	movlw	1
  6359  0142DA  6EE6               	movwf	postinc1,c
  6360  0142DC  EC20  F0B2         	call	___xxtofl	;wreg free
  6361  0142E0  0060  F007  FFE6   	movff	btemp,postinc1
  6362  0142E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6363  0142EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6364  0142F2  0060  F013  FFE6   	movff	btemp+3,postinc1
  6365                           
  6366                           ;stkvar	_chan @ sp[(-8)+-1]
  6367  0142F8  0EF7               	movlw	-9
  6368  0142FA  50E3               	movf	plusw1,w,c
  6369  0142FC  6EE6               	movwf	postinc1,c
  6370  0142FE  EC6E  F0CD         	call	_get_raw_result	;wreg free
  6371  014302  0060  F004  F00B   	movff	btemp,btemp+10
  6372  014308  0060  F008  F00C   	movff	btemp+1,btemp+11
  6373  01430E  500B               	movf	(btemp+10)^0,w,c
  6374  014310  6E05               	movwf	(btemp+4)^0,c
  6375  014312  500C               	movf	(btemp+11)^0,w,c
  6376  014314  6E06               	movwf	(btemp+5)^0,c
  6377  014316  6A07               	clrf	(btemp+6)^0,c
  6378  014318  6A08               	clrf	(btemp+7)^0,c
  6379  01431A  0060  F017  FFE6   	movff	btemp+4,postinc1
  6380  014320  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6381  014326  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6382  01432C  0060  F023  FFE6   	movff	btemp+7,postinc1
  6383  014332  0E00               	movlw	0
  6384  014334  6EE6               	movwf	postinc1,c
  6385  014336  EC20  F0B2         	call	___xxtofl	;wreg free
  6386  01433A  0060  F007  FFE6   	movff	btemp,postinc1
  6387  014340  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6388  014346  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6389  01434C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6390  014352  EC6F  F0C8         	call	___flsub	;wreg free
  6391  014356  0060  F007  FFE6   	movff	btemp,postinc1
  6392  01435C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6393  014362  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6394  014368  0060  F013  FFE6   	movff	btemp+3,postinc1
  6395  01436E  EC1C  F093         	call	___flmul	;wreg free
  6396  014372  D1AB               	goto	l1737
  6397  014374                     l9438:
  6398                           
  6399                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  6400  014374  0E29               	movlw	41
  6401  014376  6EE6               	movwf	postinc1,c
  6402  014378  0E5C               	movlw	92
  6403  01437A  6EE6               	movwf	postinc1,c
  6404  01437C  0E0F               	movlw	15
  6405  01437E  6EE6               	movwf	postinc1,c
  6406  014380  0E3D               	movlw	61
  6407  014382  6EE6               	movwf	postinc1,c
  6408  014384  0060  F3B4  F009   	movff	_R+34,btemp+8	;volatile
  6409  01438A  0060  F3B8  F00A   	movff	_R+35,btemp+9	;volatile
  6410  014390  0E00               	movlw	0
  6411  014392  BE0A               	btfsc	(btemp+9)^0,7,c
  6412  014394  0EFF               	movlw	255
  6413  014396  6E0B               	movwf	(btemp+10)^0,c
  6414  014398  6E0C               	movwf	(btemp+11)^0,c
  6415  01439A  0060  F027  FFE6   	movff	btemp+8,postinc1
  6416  0143A0  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6417  0143A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6418  0143AC  0060  F033  FFE6   	movff	btemp+11,postinc1
  6419  0143B2  0E01               	movlw	1
  6420  0143B4  6EE6               	movwf	postinc1,c
  6421  0143B6  EC20  F0B2         	call	___xxtofl	;wreg free
  6422  0143BA  0060  F007  FFE6   	movff	btemp,postinc1
  6423  0143C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6424  0143C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6425  0143CC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6426                           
  6427                           ;stkvar	_chan @ sp[(-8)+-1]
  6428  0143D2  0EF7               	movlw	-9
  6429  0143D4  50E3               	movf	plusw1,w,c
  6430  0143D6  6EE6               	movwf	postinc1,c
  6431  0143D8  EC6E  F0CD         	call	_get_raw_result	;wreg free
  6432  0143DC  0060  F004  F00B   	movff	btemp,btemp+10
  6433  0143E2  0060  F008  F00C   	movff	btemp+1,btemp+11
  6434  0143E8  500B               	movf	(btemp+10)^0,w,c
  6435  0143EA  6E05               	movwf	(btemp+4)^0,c
  6436  0143EC  500C               	movf	(btemp+11)^0,w,c
  6437  0143EE  6E06               	movwf	(btemp+5)^0,c
  6438  0143F0  6A07               	clrf	(btemp+6)^0,c
  6439  0143F2  6A08               	clrf	(btemp+7)^0,c
  6440  0143F4  0060  F017  FFE6   	movff	btemp+4,postinc1
  6441  0143FA  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6442  014400  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6443  014406  0060  F023  FFE6   	movff	btemp+7,postinc1
  6444  01440C  0E00               	movlw	0
  6445  01440E  6EE6               	movwf	postinc1,c
  6446  014410  EC20  F0B2         	call	___xxtofl	;wreg free
  6447  014414  0060  F007  FFE6   	movff	btemp,postinc1
  6448  01441A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6449  014420  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6450  014426  0060  F013  FFE6   	movff	btemp+3,postinc1
  6451  01442C  EC6F  F0C8         	call	___flsub	;wreg free
  6452  014430  0060  F007  FFE6   	movff	btemp,postinc1
  6453  014436  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6454  01443C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6455  014442  0060  F013  FFE6   	movff	btemp+3,postinc1
  6456  014448  EC1C  F093         	call	___flmul	;wreg free
  6457  01444C  D13E               	goto	l1737
  6458  01444E                     l9442:
  6459                           
  6460                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  6461                           ;stkvar	_chan @ sp[(0)+-1]
  6462  01444E  0EFF               	movlw	-1
  6463  014450  006F FF8C  F00C    	movff	plusw1,btemp+11
  6464  014456  0E00               	movlw	0
  6465  014458  6E09               	movwf	(btemp+8)^0,c
  6466  01445A  0E08               	movlw	8
  6467  01445C  6E0A               	movwf	(btemp+9)^0,c
  6468  01445E  2A0C               	incf	(btemp+11)^0,f,c
  6469  014460  D003               	goto	u8434
  6470  014462                     u8435:
  6471  014462  340A               	rlcf	(btemp+9)^0,w,c
  6472  014464  320A               	rrcf	(btemp+9)^0,f,c
  6473  014466  3209               	rrcf	(btemp+8)^0,f,c
  6474  014468                     u8434:
  6475  014468  2E0C               	decfsz	(btemp+11)^0,f,c
  6476  01446A  D7FB               	goto	u8435
  6477  01446C  A009               	btfss	(btemp+8)^0,0,c
  6478  01446E  D008               	goto	l9450
  6479                           
  6480                           ;daq.c: 96:     return 25.0;
  6481  014470  0E00               	movlw	0
  6482  014472  6E01               	movwf	btemp^0,c
  6483  014474  0E00               	movlw	0
  6484  014476  6E02               	movwf	(btemp+1)^0,c
  6485  014478  0EC8               	movlw	200
  6486  01447A  6E03               	movwf	(btemp+2)^0,c
  6487  01447C  0E41               	movlw	65
  6488  01447E  D113               	goto	L4
  6489  014480                     l9450:
  6490                           
  6491                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6492  014480  0E00               	movlw	0
  6493  014482  6EE6               	movwf	postinc1,c
  6494  014484  0E00               	movlw	0
  6495  014486  6EE6               	movwf	postinc1,c
  6496  014488  0E7A               	movlw	122
  6497  01448A  6EE6               	movwf	postinc1,c
  6498  01448C  0E44               	movlw	68
  6499  01448E  6EE6               	movwf	postinc1,c
  6500  014490  0E61               	movlw	97
  6501  014492  6EE6               	movwf	postinc1,c
  6502  014494  0E03               	movlw	3
  6503  014496  6EE6               	movwf	postinc1,c
  6504  014498  0E84               	movlw	132
  6505  01449A  6EE6               	movwf	postinc1,c
  6506  01449C  0E40               	movlw	64
  6507  01449E  6EE6               	movwf	postinc1,c
  6508                           
  6509                           ;stkvar	_chan @ sp[(-8)+-1]
  6510  0144A0  0EF7               	movlw	-9
  6511  0144A2  50E3               	movf	plusw1,w,c
  6512  0144A4  6EE6               	movwf	postinc1,c
  6513  0144A6  EC6E  F0CD         	call	_get_raw_result	;wreg free
  6514  0144AA  0060  F004  F00B   	movff	btemp,btemp+10
  6515  0144B0  0060  F008  F00C   	movff	btemp+1,btemp+11
  6516  0144B6  500B               	movf	(btemp+10)^0,w,c
  6517  0144B8  6E05               	movwf	(btemp+4)^0,c
  6518  0144BA  500C               	movf	(btemp+11)^0,w,c
  6519  0144BC  6E06               	movwf	(btemp+5)^0,c
  6520  0144BE  6A07               	clrf	(btemp+6)^0,c
  6521  0144C0  6A08               	clrf	(btemp+7)^0,c
  6522  0144C2  0060  F017  FFE6   	movff	btemp+4,postinc1
  6523  0144C8  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6524  0144CE  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6525  0144D4  0060  F023  FFE6   	movff	btemp+7,postinc1
  6526  0144DA  0E00               	movlw	0
  6527  0144DC  6EE6               	movwf	postinc1,c
  6528  0144DE  EC20  F0B2         	call	___xxtofl	;wreg free
  6529  0144E2  0060  F007  FFE6   	movff	btemp,postinc1
  6530  0144E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6531  0144EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6532  0144F4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6533  0144FA  EC1C  F093         	call	___flmul	;wreg free
  6534  0144FE  0060  F007  FFE6   	movff	btemp,postinc1
  6535  014504  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6536  01450A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6537  014510  0060  F013  FFE6   	movff	btemp+3,postinc1
  6538  014516  EC55  F09E         	call	___fldiv	;wreg free
  6539  01451A  D0D7               	goto	l1737
  6540  01451C                     l9454:
  6541                           
  6542                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  6543                           ;stkvar	_chan @ sp[(0)+-1]
  6544  01451C  0EFF               	movlw	-1
  6545  01451E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6546  014524  0E03               	movlw	3
  6547  014526  6E09               	movwf	(btemp+8)^0,c
  6548  014528  0E00               	movlw	0
  6549  01452A  6E0A               	movwf	(btemp+9)^0,c
  6550  01452C  2A0C               	incf	(btemp+11)^0,f,c
  6551  01452E  D003               	goto	u8454
  6552  014530                     u8455:
  6553  014530  340A               	rlcf	(btemp+9)^0,w,c
  6554  014532  320A               	rrcf	(btemp+9)^0,f,c
  6555  014534  3209               	rrcf	(btemp+8)^0,f,c
  6556  014536                     u8454:
  6557  014536  2E0C               	decfsz	(btemp+11)^0,f,c
  6558  014538  D7FB               	goto	u8455
  6559  01453A  B009               	btfsc	(btemp+8)^0,0,c
  6560  01453C  D011               	goto	u8480
  6561                           
  6562                           ;stkvar	_chan @ sp[(0)+-1]
  6563  01453E  0EFF               	movlw	-1
  6564  014540  006F FF8C  F00C    	movff	plusw1,btemp+11
  6565  014546  0E00               	movlw	0
  6566  014548  6E09               	movwf	(btemp+8)^0,c
  6567  01454A  0E08               	movlw	8
  6568  01454C  6E0A               	movwf	(btemp+9)^0,c
  6569  01454E  2A0C               	incf	(btemp+11)^0,f,c
  6570  014550  D003               	goto	u8474
  6571  014552                     u8475:
  6572  014552  340A               	rlcf	(btemp+9)^0,w,c
  6573  014554  320A               	rrcf	(btemp+9)^0,f,c
  6574  014556  3209               	rrcf	(btemp+8)^0,f,c
  6575  014558                     u8474:
  6576  014558  2E0C               	decfsz	(btemp+11)^0,f,c
  6577  01455A  D7FB               	goto	u8475
  6578  01455C  A009               	btfss	(btemp+8)^0,0,c
  6579  01455E  D04E               	goto	l9462
  6580  014560                     u8480:
  6581                           
  6582                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  6583  014560  0E00               	movlw	0
  6584  014562  6EE6               	movwf	postinc1,c
  6585  014564  0E00               	movlw	0
  6586  014566  6EE6               	movwf	postinc1,c
  6587  014568  0E7A               	movlw	122
  6588  01456A  6EE6               	movwf	postinc1,c
  6589  01456C  0E44               	movlw	68
  6590  01456E  6EE6               	movwf	postinc1,c
  6591  014570  0E00               	movlw	0
  6592  014572  6EE6               	movwf	postinc1,c
  6593  014574  0E00               	movlw	0
  6594  014576  6EE6               	movwf	postinc1,c
  6595  014578  0E20               	movlw	32
  6596  01457A  6EE6               	movwf	postinc1,c
  6597  01457C  0E3F               	movlw	63
  6598  01457E  6EE6               	movwf	postinc1,c
  6599                           
  6600                           ;stkvar	_chan @ sp[(-8)+-1]
  6601  014580  0EF7               	movlw	-9
  6602  014582  50E3               	movf	plusw1,w,c
  6603  014584  6EE6               	movwf	postinc1,c
  6604  014586  EC6E  F0CD         	call	_get_raw_result	;wreg free
  6605  01458A  0060  F004  F00B   	movff	btemp,btemp+10
  6606  014590  0060  F008  F00C   	movff	btemp+1,btemp+11
  6607  014596  500B               	movf	(btemp+10)^0,w,c
  6608  014598  6E05               	movwf	(btemp+4)^0,c
  6609  01459A  500C               	movf	(btemp+11)^0,w,c
  6610  01459C  6E06               	movwf	(btemp+5)^0,c
  6611  01459E  6A07               	clrf	(btemp+6)^0,c
  6612  0145A0  6A08               	clrf	(btemp+7)^0,c
  6613  0145A2  0060  F017  FFE6   	movff	btemp+4,postinc1
  6614  0145A8  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6615  0145AE  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6616  0145B4  0060  F023  FFE6   	movff	btemp+7,postinc1
  6617  0145BA  0E00               	movlw	0
  6618  0145BC  6EE6               	movwf	postinc1,c
  6619  0145BE  EC20  F0B2         	call	___xxtofl	;wreg free
  6620  0145C2  0060  F007  FFE6   	movff	btemp,postinc1
  6621  0145C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6622  0145CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6623  0145D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6624  0145DA  EC1C  F093         	call	___flmul	;wreg free
  6625  0145DE  0060  F007  FFE6   	movff	btemp,postinc1
  6626  0145E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6627  0145EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6628  0145F0  0060  F013  FFE6   	movff	btemp+3,postinc1
  6629  0145F6  EC55  F09E         	call	___fldiv	;wreg free
  6630  0145FA  D067               	goto	l1737
  6631  0145FC                     l9462:
  6632                           
  6633                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6634  0145FC  0E00               	movlw	0
  6635  0145FE  6EE6               	movwf	postinc1,c
  6636  014600  0E00               	movlw	0
  6637  014602  6EE6               	movwf	postinc1,c
  6638  014604  0E7A               	movlw	122
  6639  014606  6EE6               	movwf	postinc1,c
  6640  014608  0E44               	movlw	68
  6641  01460A  6EE6               	movwf	postinc1,c
  6642  01460C  0E61               	movlw	97
  6643  01460E  6EE6               	movwf	postinc1,c
  6644  014610  0E03               	movlw	3
  6645  014612  6EE6               	movwf	postinc1,c
  6646  014614  0E84               	movlw	132
  6647  014616  6EE6               	movwf	postinc1,c
  6648  014618  0E40               	movlw	64
  6649  01461A  6EE6               	movwf	postinc1,c
  6650                           
  6651                           ;stkvar	_chan @ sp[(-8)+-1]
  6652  01461C  0EF7               	movlw	-9
  6653  01461E  50E3               	movf	plusw1,w,c
  6654  014620  6EE6               	movwf	postinc1,c
  6655  014622  EC6E  F0CD         	call	_get_raw_result	;wreg free
  6656  014626  0060  F004  F00B   	movff	btemp,btemp+10
  6657  01462C  0060  F008  F00C   	movff	btemp+1,btemp+11
  6658  014632  500B               	movf	(btemp+10)^0,w,c
  6659  014634  6E05               	movwf	(btemp+4)^0,c
  6660  014636  500C               	movf	(btemp+11)^0,w,c
  6661  014638  6E06               	movwf	(btemp+5)^0,c
  6662  01463A  6A07               	clrf	(btemp+6)^0,c
  6663  01463C  6A08               	clrf	(btemp+7)^0,c
  6664  01463E  0060  F017  FFE6   	movff	btemp+4,postinc1
  6665  014644  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6666  01464A  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6667  014650  0060  F023  FFE6   	movff	btemp+7,postinc1
  6668  014656  0E00               	movlw	0
  6669  014658  6EE6               	movwf	postinc1,c
  6670  01465A  EC20  F0B2         	call	___xxtofl	;wreg free
  6671  01465E  0060  F007  FFE6   	movff	btemp,postinc1
  6672  014664  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6673  01466A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6674  014670  0060  F013  FFE6   	movff	btemp+3,postinc1
  6675  014676  EC1C  F093         	call	___flmul	;wreg free
  6676  01467A  0060  F007  FFE6   	movff	btemp,postinc1
  6677  014680  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6678  014686  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6679  01468C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6680  014692  EC55  F09E         	call	___fldiv	;wreg free
  6681  014696  D019               	goto	l1737
  6682  014698                     l9468:
  6683                           
  6684                           ;daq.c: 109:   return 0.0;
  6685  014698  0E00               	movlw	0
  6686  01469A  6E01               	movwf	btemp^0,c
  6687  01469C  0E00               	movlw	0
  6688  01469E  6E02               	movwf	(btemp+1)^0,c
  6689  0146A0  0E00               	movlw	0
  6690  0146A2  6E03               	movwf	(btemp+2)^0,c
  6691  0146A4  0E00               	movlw	0
  6692  0146A6                     L4:
  6693  0146A6  6E04               	movwf	(btemp+3)^0,c
  6694  0146A8  D010               	goto	l1737
  6695  0146AA                     l9476:
  6696                           
  6697                           ;stkvar	_to_what @ sp[(0)+-2]
  6698  0146AA  0EFE               	movlw	-2
  6699  0146AC  50E3               	movf	plusw1,w,c
  6700  0146AE  6E0B               	movwf	(btemp+10)^0,c
  6701  0146B0  6A0C               	clrf	(btemp+11)^0,c
  6702                           
  6703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6704                           ; Switch size 1, requested type "simple"
  6705                           ; Number of cases is 1, Range of values is 0 to 0
  6706                           ; switch strategies available:
  6707                           ; Name         Instructions Cycles
  6708                           ; simple_byte            4     3 (average)
  6709                           ;	Chosen strategy is simple_byte
  6710  0146B2  500C               	movf	(btemp+11)^0,w,c
  6711  0146B4  0A00               	xorlw	0	; case 0
  6712  0146B6  A4D8               	btfss	status,2,c
  6713  0146B8  D7EF               	goto	l9468
  6714                           
  6715                           ; Switch size 1, requested type "simple"
  6716                           ; Number of cases is 2, Range of values is 0 to 1
  6717                           ; switch strategies available:
  6718                           ; Name         Instructions Cycles
  6719                           ; simple_byte            7     4 (average)
  6720                           ;	Chosen strategy is simple_byte
  6721  0146BA  500B               	movf	(btemp+10)^0,w,c
  6722  0146BC  0A00               	xorlw	0	; case 0
  6723  0146BE  B4D8               	btfsc	status,2,c
  6724  0146C0  D5B2               	goto	l9422
  6725  0146C2  0A01               	xorlw	1	; case 1
  6726  0146C4  B4D8               	btfsc	status,2,c
  6727  0146C6  D72A               	goto	l9454
  6728  0146C8  D7E7               	goto	l9468
  6729  0146CA                     l1737:
  6730                           
  6731                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  6732  0146CA  52E5               	movf	postdec1,f,c
  6733  0146CC  52E5               	movf	postdec1,f,c
  6734  0146CE  0012               	return		;funcret
  6735  0146D0                     __end_of_conv_raw_result:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function _nanf *****************
  6739 ;; Defined at:
  6740 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  s               2  [STACK] PTR const unsigned char 
  6743 ;;		 -> STR_60(1), STR_45(1), 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  u               4  [STACK] struct .
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  4  [STACK] float 
  6748 ;; Registers used:
  6749 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/1
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6759 ;;Total ram usage:        0 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:   15
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_conv_raw_result
  6766 ;; This function uses a reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text21
  6770  018C90                     __ptext21:
  6771                           	opt callstack 0
  6772  018C90                     _nanf:
  6773                           	opt callstack 0
  6774                           
  6775                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6776  018C90  52E6               	movf	postinc1,f,c
  6777  018C92  52E6               	movf	postinc1,f,c
  6778  018C94  52E6               	movf	postinc1,f,c
  6779  018C96  52E6               	movf	postinc1,f,c
  6780                           
  6781                           ;incstack = 0
  6782  018C98  0EFF               	movlw	255
  6783  018C9A  6E09               	movwf	(btemp+8)^0,c
  6784  018C9C  0EFF               	movlw	255
  6785  018C9E  6E0A               	movwf	(btemp+9)^0,c
  6786  018CA0  0EFF               	movlw	255
  6787  018CA2  6E0B               	movwf	(btemp+10)^0,c
  6788  018CA4  0E7F               	movlw	127
  6789  018CA6  6E0C               	movwf	(btemp+11)^0,c
  6790                           
  6791                           ;stkvar	_u @ sp[(-4)+0]
  6792  018CA8  0EFC               	movlw	-4
  6793  018CAA  0060  F027  FFE3   	movff	btemp+8,plusw1
  6794  018CB0  0EFD               	movlw	-3
  6795  018CB2  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6796  018CB8  0EFE               	movlw	-2
  6797  018CBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6798  018CC0  0EFF               	movlw	-1
  6799  018CC2  0060  F033  FFE3   	movff	btemp+11,plusw1
  6800                           
  6801                           ;stkvar	_u @ sp[(-4)+0]
  6802  018CC8  0EFC               	movlw	-4
  6803  018CCA  006F FF8C  F001    	movff	plusw1,btemp
  6804  018CD0  0EFD               	movlw	-3
  6805  018CD2  006F FF8C  F002    	movff	plusw1,btemp+1
  6806  018CD8  0EFE               	movlw	-2
  6807  018CDA  006F FF8C  F003    	movff	plusw1,btemp+2
  6808  018CE0  0EFF               	movlw	-1
  6809  018CE2  006F FF8C  F004    	movff	plusw1,btemp+3
  6810                           
  6811                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  6812  018CE8  0EFA               	movlw	250
  6813  018CEA  26E1               	addwf	fsr1l,f,c
  6814  018CEC  0EFF               	movlw	255
  6815  018CEE  22E2               	addwfc	fsr1h,f,c
  6816  018CF0  0012               	return		;funcret
  6817  018CF2                     __end_of_nanf:
  6818                           	opt callstack 0
  6819                           
  6820 ;; *************** function _get_raw_result *****************
  6821 ;; Defined at:
  6822 ;;		line 72 in file "daq.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;  index           1  [STACK] const enum E16136
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;		None
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  2  [STACK] unsigned short 
  6829 ;; Registers used:
  6830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/2
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6840 ;;Total ram usage:        0 bytes
  6841 ;; Hardware stack levels used:    1
  6842 ;; Hardware stack levels required when called:   15
  6843 ;; This function calls:
  6844 ;;		Nothing
  6845 ;; This function is called by:
  6846 ;;		_main
  6847 ;;		_conv_raw_result
  6848 ;; This function uses a reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text22
  6852  019ADC                     __ptext22:
  6853                           	opt callstack 0
  6854  019ADC                     _get_raw_result:
  6855                           	opt callstack 13
  6856                           
  6857                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  6858                           ;stkvar	_index @ sp[(0)+-1]
  6859                           
  6860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6861                           ;incstack = 0
  6862  019ADC  0EFF               	movlw	-1
  6863  019ADE  50E3               	movf	plusw1,w,c
  6864  019AE0  0D02               	mullw	2
  6865  019AE2  50F3               	movf	243,w,c
  6866  019AE4  0FCB               	addlw	low _R
  6867  019AE6  6ED9               	movwf	fsr2l,c
  6868  019AE8  6ADA               	clrf	fsr2h,c
  6869  019AEA  006F FF78  F001    	movff	postinc2,btemp
  6870  019AF0  006F FF74  F002    	movff	postdec2,btemp+1
  6871                           
  6872                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  6873  019AF6  52E5               	movf	postdec1,f,c
  6874  019AF8  0012               	return		;funcret
  6875  019AFA                     __end_of_get_raw_result:
  6876                           	opt callstack 0
  6877                           
  6878 ;; *************** function ___xxtofl *****************
  6879 ;; Defined at:
  6880 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  sign            1  [STACK] unsigned char 
  6883 ;;  val             4  [STACK] long 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  arg             4  [STACK] unsigned long 
  6886 ;;  exp             1  [STACK] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  4  [STACK] unsigned char 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/1
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;Total ram usage:        0 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:   15
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_conv_raw_result
  6907 ;;		_calc_bsoc
  6908 ;;		_init_bsoc
  6909 ;; This function uses a reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text23
  6913  016440                     __ptext23:
  6914                           	opt callstack 0
  6915  016440                     ___xxtofl:
  6916                           	opt callstack 0
  6917                           
  6918                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6919  016440  0E05               	movlw	5
  6920  016442  26E1               	addwf	fsr1l,f,c
  6921  016444  0E00               	movlw	0
  6922  016446  22E2               	addwfc	fsr1h,f,c
  6923                           
  6924                           ;stkvar	_sign @ sp[(-5)+-1]
  6925                           
  6926                           ;incstack = 0
  6927 ;; hardware stack exceeded
  6928  016448  0EFA               	movlw	-6
  6929  01644A  50E3               	movf	plusw1,w,c
  6930  01644C  B4D8               	btfsc	status,2,c
  6931  01644E  D01D               	goto	l8870
  6932                           
  6933                           ;stkvar	_val @ sp[(-5)+-5]
  6934  016450  0EF9               	movlw	-7
  6935  016452  AEE3               	btfss	plusw1,7,c
  6936  016454  D01A               	goto	l8870
  6937                           
  6938                           ;stkvar	_val @ sp[(-5)+-5]
  6939  016456  0EF6               	movlw	-10
  6940  016458  006F FF8C  F009    	movff	plusw1,btemp+8
  6941  01645E  0EF7               	movlw	-9
  6942  016460  006F FF8C  F00A    	movff	plusw1,btemp+9
  6943  016466  0EF8               	movlw	-8
  6944  016468  006F FF8C  F00B    	movff	plusw1,btemp+10
  6945  01646E  0EF9               	movlw	-7
  6946  016470  006F FF8C  F00C    	movff	plusw1,btemp+11
  6947  016476  1E09               	comf	(btemp+8)^0,f,c
  6948  016478  1E0A               	comf	(btemp+9)^0,f,c
  6949  01647A  1E0B               	comf	(btemp+10)^0,f,c
  6950  01647C  1E0C               	comf	(btemp+11)^0,f,c
  6951  01647E  2A09               	incf	(btemp+8)^0,f,c
  6952  016480  0E00               	movlw	0
  6953  016482  220A               	addwfc	(btemp+9)^0,f,c
  6954  016484  220B               	addwfc	(btemp+10)^0,f,c
  6955  016486  220C               	addwfc	(btemp+11)^0,f,c
  6956  016488  D010               	goto	L5
  6957  01648A                     l8870:
  6958                           
  6959                           ;stkvar	_val @ sp[(-5)+-5]
  6960  01648A  0EF6               	movlw	-10
  6961  01648C  006F FF8C  F009    	movff	plusw1,btemp+8
  6962  016492  0EF7               	movlw	-9
  6963  016494  006F FF8C  F00A    	movff	plusw1,btemp+9
  6964  01649A  0EF8               	movlw	-8
  6965  01649C  006F FF8C  F00B    	movff	plusw1,btemp+10
  6966  0164A2  0EF9               	movlw	-7
  6967  0164A4  006F FF8C  F00C    	movff	plusw1,btemp+11
  6968  0164AA                     L5:
  6969                           
  6970                           ;stkvar	_arg @ sp[(-5)+0]
  6971  0164AA  0EFB               	movlw	-5
  6972  0164AC  0060  F027  FFE3   	movff	btemp+8,plusw1
  6973  0164B2  0EFC               	movlw	-4
  6974  0164B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6975  0164BA  0EFD               	movlw	-3
  6976  0164BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6977  0164C2  0EFE               	movlw	-2
  6978  0164C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6979                           
  6980                           ;stkvar	_val @ sp[(-5)+-5]
  6981  0164CA  0EF6               	movlw	-10
  6982  0164CC  50E3               	movf	plusw1,w,c
  6983  0164CE  E113               	bnz	l8878
  6984  0164D0  0EF7               	movlw	-9
  6985  0164D2  50E3               	movf	plusw1,w,c
  6986  0164D4  E110               	bnz	l8878
  6987  0164D6  0EF8               	movlw	-8
  6988  0164D8  50E3               	movf	plusw1,w,c
  6989  0164DA  E10D               	bnz	l8878
  6990  0164DC  0EF9               	movlw	-7
  6991  0164DE  50E3               	movf	plusw1,w,c
  6992  0164E0  A4D8               	btfss	status,2,c
  6993  0164E2  D009               	goto	l8878
  6994  0164E4  0E00               	movlw	0
  6995  0164E6  6E01               	movwf	btemp^0,c
  6996  0164E8  0E00               	movlw	0
  6997  0164EA  6E02               	movwf	(btemp+1)^0,c
  6998  0164EC  0E00               	movlw	0
  6999  0164EE  6E03               	movwf	(btemp+2)^0,c
  7000  0164F0  0E00               	movlw	0
  7001  0164F2  6E04               	movwf	(btemp+3)^0,c
  7002  0164F4  D0A2               	goto	l2891
  7003  0164F6                     l8878:
  7004  0164F6  0E96               	movlw	150
  7005  0164F8  6E0C               	movwf	(btemp+11)^0,c
  7006                           
  7007                           ;stkvar	_exp @ sp[(-5)+4]
  7008  0164FA  0EFF               	movlw	-1
  7009  0164FC  0060  F033  FFE3   	movff	btemp+11,plusw1
  7010  016502  D00B               	goto	l8882
  7011  016504                     l8880:
  7012                           
  7013                           ;stkvar	_exp @ sp[(-5)+4]
  7014  016504  0EFF               	movlw	-1
  7015  016506  2AE3               	incf	plusw1,f,c
  7016                           
  7017                           ;stkvar	_arg @ sp[(-5)+0]
  7018  016508  90D8               	bcf	status,0,c
  7019  01650A  0EFE               	movlw	-2
  7020  01650C  32E3               	rrcf	plusw1,f,c
  7021  01650E  0EFD               	movlw	-3
  7022  016510  32E3               	rrcf	plusw1,f,c
  7023  016512  0EFC               	movlw	-4
  7024  016514  32E3               	rrcf	plusw1,f,c
  7025  016516  0EFB               	movlw	-5
  7026  016518  32E3               	rrcf	plusw1,f,c
  7027  01651A                     l8882:
  7028                           
  7029                           ;stkvar	_arg @ sp[(-5)+0]
  7030  01651A  50E1               	movf	fsr1l,w,c
  7031  01651C  0FFB               	addlw	-5
  7032  01651E  6ED9               	movwf	fsr2l,c
  7033  016520  50E2               	movf	fsr1h,w,c
  7034  016522  6EDA               	movwf	fsr2h,c
  7035  016524  0EFF               	movlw	255
  7036  016526  22DA               	addwfc	fsr2h,f,c
  7037  016528  52DE               	movf	postinc2,f,c
  7038  01652A  52DE               	movf	postinc2,f,c
  7039  01652C  52DE               	movf	postinc2,f,c
  7040  01652E  0EFE               	movlw	254
  7041  016530  14DD               	andwf	postdec2,w,c
  7042  016532  B4D8               	btfsc	status,2,c
  7043  016534  D018               	goto	l8890
  7044  016536  D7E6               	goto	l8880
  7045  016538                     l8884:
  7046                           
  7047                           ;stkvar	_exp @ sp[(-5)+4]
  7048  016538  0EFF               	movlw	-1
  7049  01653A  2AE3               	incf	plusw1,f,c
  7050                           
  7051                           ;stkvar	_arg @ sp[(-5)+0]
  7052  01653C  50E1               	movf	fsr1l,w,c
  7053  01653E  0FFB               	addlw	-5
  7054  016540  6ED9               	movwf	fsr2l,c
  7055  016542  50E2               	movf	fsr1h,w,c
  7056  016544  6EDA               	movwf	fsr2h,c
  7057  016546  0EFF               	movlw	255
  7058  016548  22DA               	addwfc	fsr2h,f,c
  7059  01654A  2ADE               	incf	postinc2,f,c
  7060  01654C  0E00               	movlw	0
  7061  01654E  22DE               	addwfc	postinc2,f,c
  7062  016550  22DE               	addwfc	postinc2,f,c
  7063  016552  22DE               	addwfc	postinc2,f,c
  7064                           
  7065                           ;stkvar	_arg @ sp[(-5)+0]
  7066  016554  90D8               	bcf	status,0,c
  7067  016556  0EFE               	movlw	-2
  7068  016558  32E3               	rrcf	plusw1,f,c
  7069  01655A  0EFD               	movlw	-3
  7070  01655C  32E3               	rrcf	plusw1,f,c
  7071  01655E  0EFC               	movlw	-4
  7072  016560  32E3               	rrcf	plusw1,f,c
  7073  016562  0EFB               	movlw	-5
  7074  016564  32E3               	rrcf	plusw1,f,c
  7075  016566                     l8890:
  7076                           
  7077                           ;stkvar	_arg @ sp[(-5)+0]
  7078  016566  50E1               	movf	fsr1l,w,c
  7079  016568  0FFB               	addlw	-5
  7080  01656A  6ED9               	movwf	fsr2l,c
  7081  01656C  50E2               	movf	fsr1h,w,c
  7082  01656E  6EDA               	movwf	fsr2h,c
  7083  016570  0EFF               	movlw	255
  7084  016572  22DA               	addwfc	fsr2h,f,c
  7085  016574  52DE               	movf	postinc2,f,c
  7086  016576  52DE               	movf	postinc2,f,c
  7087  016578  52DE               	movf	postinc2,f,c
  7088  01657A  0EFF               	movlw	255
  7089  01657C  14DD               	andwf	postdec2,w,c
  7090  01657E  B4D8               	btfsc	status,2,c
  7091  016580  D00C               	goto	l8894
  7092  016582  D7DA               	goto	l8884
  7093  016584                     l8892:
  7094                           
  7095                           ;stkvar	_exp @ sp[(-5)+4]
  7096  016584  0EFF               	movlw	-1
  7097  016586  06E3               	decf	plusw1,f,c
  7098                           
  7099                           ;stkvar	_arg @ sp[(-5)+0]
  7100  016588  90D8               	bcf	status,0,c
  7101  01658A  0EFB               	movlw	-5
  7102  01658C  36E3               	rlcf	plusw1,f,c
  7103  01658E  0EFC               	movlw	-4
  7104  016590  36E3               	rlcf	plusw1,f,c
  7105  016592  0EFD               	movlw	-3
  7106  016594  36E3               	rlcf	plusw1,f,c
  7107  016596  0EFE               	movlw	-2
  7108  016598  36E3               	rlcf	plusw1,f,c
  7109  01659A                     l8894:
  7110                           
  7111                           ;stkvar	_arg @ sp[(-5)+0]
  7112  01659A  0EFD               	movlw	-3
  7113  01659C  BEE3               	btfsc	plusw1,7,c
  7114  01659E  D007               	goto	u8170
  7115                           
  7116                           ;stkvar	_exp @ sp[(-5)+4]
  7117  0165A0  0EFF               	movlw	-1
  7118  0165A2  006F FF8C  F001    	movff	plusw1,btemp
  7119  0165A8  0E02               	movlw	2
  7120  0165AA  6001               	cpfslt	btemp^0,c
  7121  0165AC  D7EB               	goto	l8892
  7122  0165AE                     u8170:
  7123                           
  7124                           ;stkvar	_exp @ sp[(-5)+4]
  7125  0165AE  0EFF               	movlw	-1
  7126  0165B0  B0E3               	btfsc	plusw1,0,c
  7127  0165B2  D002               	goto	l8902
  7128                           
  7129                           ;stkvar	_arg @ sp[(-5)+0]
  7130  0165B4  0EFD               	movlw	-3
  7131  0165B6  9EE3               	bcf	plusw1,7,c
  7132  0165B8                     l8902:
  7133                           
  7134                           ;stkvar	_exp @ sp[(-5)+4]
  7135  0165B8  50E1               	movf	fsr1l,w,c
  7136  0165BA  0FFF               	addlw	-1
  7137  0165BC  6ED9               	movwf	fsr2l,c
  7138  0165BE  50E2               	movf	fsr1h,w,c
  7139  0165C0  6EDA               	movwf	fsr2h,c
  7140  0165C2  0EFF               	movlw	255
  7141  0165C4  22DA               	addwfc	fsr2h,f,c
  7142  0165C6  90D8               	bcf	status,0,c
  7143  0165C8  32DF               	rrcf	indf2,f,c
  7144                           
  7145                           ;stkvar	_exp @ sp[(-5)+4]
  7146  0165CA  0EFF               	movlw	-1
  7147  0165CC  006F FF8C  F00C    	movff	plusw1,btemp+11
  7148  0165D2  0060  F030  F005   	movff	btemp+11,btemp+4
  7149  0165D8  6A06               	clrf	(btemp+5)^0,c
  7150  0165DA  6A07               	clrf	(btemp+6)^0,c
  7151  0165DC  6A08               	clrf	(btemp+7)^0,c
  7152  0165DE  0060  F014  F008   	movff	btemp+4,btemp+7
  7153  0165E4  6A07               	clrf	(btemp+6)^0,c
  7154  0165E6  6A06               	clrf	(btemp+5)^0,c
  7155  0165E8  6A05               	clrf	(btemp+4)^0,c
  7156                           
  7157                           ;stkvar	_arg @ sp[(-5)+0]
  7158  0165EA  50E1               	movf	fsr1l,w,c
  7159  0165EC  0FFB               	addlw	-5
  7160  0165EE  6ED9               	movwf	fsr2l,c
  7161  0165F0  50E2               	movf	fsr1h,w,c
  7162  0165F2  6EDA               	movwf	fsr2h,c
  7163  0165F4  0EFF               	movlw	255
  7164  0165F6  22DA               	addwfc	fsr2h,f,c
  7165  0165F8  5005               	movf	(btemp+4)^0,w,c
  7166  0165FA  12DE               	iorwf	postinc2,f,c
  7167  0165FC  5006               	movf	(btemp+5)^0,w,c
  7168  0165FE  12DE               	iorwf	postinc2,f,c
  7169  016600  5007               	movf	(btemp+6)^0,w,c
  7170  016602  12DE               	iorwf	postinc2,f,c
  7171  016604  5008               	movf	(btemp+7)^0,w,c
  7172  016606  12DE               	iorwf	postinc2,f,c
  7173                           
  7174                           ;stkvar	_sign @ sp[(-5)+-1]
  7175  016608  0EFA               	movlw	-6
  7176  01660A  50E3               	movf	plusw1,w,c
  7177  01660C  B4D8               	btfsc	status,2,c
  7178  01660E  D005               	goto	l8912
  7179                           
  7180                           ;stkvar	_val @ sp[(-5)+-5]
  7181  016610  0EF9               	movlw	-7
  7182  016612  AEE3               	btfss	plusw1,7,c
  7183  016614  D002               	goto	l8912
  7184                           
  7185                           ;stkvar	_arg @ sp[(-5)+0]
  7186  016616  0EFE               	movlw	-2
  7187  016618  8EE3               	bsf	plusw1,7,c
  7188  01661A                     l8912:
  7189                           
  7190                           ;stkvar	_arg @ sp[(-5)+0]
  7191  01661A  0EFB               	movlw	-5
  7192  01661C  006F FF8C  F001    	movff	plusw1,btemp
  7193  016622  0EFC               	movlw	-4
  7194  016624  006F FF8C  F002    	movff	plusw1,btemp+1
  7195  01662A  0EFD               	movlw	-3
  7196  01662C  006F FF8C  F003    	movff	plusw1,btemp+2
  7197  016632  0EFE               	movlw	-2
  7198  016634  006F FF8C  F004    	movff	plusw1,btemp+3
  7199  01663A                     l2891:
  7200                           
  7201                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  7202  01663A  0EF6               	movlw	246
  7203  01663C  26E1               	addwf	fsr1l,f,c
  7204  01663E  0EFF               	movlw	255
  7205  016640  22E2               	addwfc	fsr1h,f,c
  7206  016642  0012               	return		;funcret
  7207  016644                     __end_of___xxtofl:
  7208                           	opt callstack 0
  7209                           
  7210 ;; *************** function _clear_hid_pflags *****************
  7211 ;; Defined at:
  7212 ;;		line 51 in file "hid.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  h               1  [STACK] PTR struct H_data
  7215 ;;		 -> H(7), 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;		None
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  1  [STACK] void 
  7220 ;; Registers used:
  7221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7222 ;; Tracked objects:
  7223 ;;		On entry : 3F/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7231 ;;Total ram usage:        0 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:   15
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_main
  7238 ;; This function uses a reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text24
  7242  019984                     __ptext24:
  7243                           	opt callstack 0
  7244  019984                     _clear_hid_pflags:
  7245                           	opt callstack 15
  7246                           
  7247                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7248                           ;stkvar	_h @ sp[(0)+-1]
  7249                           
  7250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7251                           ;incstack = 0
  7252  019984  0EFF               	movlw	-1
  7253  019986  50E3               	movf	plusw1,w,c
  7254  019988  6ED9               	movwf	fsr2l,c
  7255  01998A  6ADA               	clrf	fsr2h,c
  7256  01998C  0E03               	movlw	3
  7257  01998E  26D9               	addwf	fsr2l,f,c
  7258  019990  0E00               	movlw	0
  7259  019992  6EDF               	movwf	indf2,c
  7260                           
  7261                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7262                           ;stkvar	_h @ sp[(0)+-1]
  7263  019994  0EFF               	movlw	-1
  7264  019996  50E3               	movf	plusw1,w,c
  7265  019998  6ED9               	movwf	fsr2l,c
  7266  01999A  6ADA               	clrf	fsr2h,c
  7267  01999C  0E05               	movlw	5
  7268  01999E  26D9               	addwf	fsr2l,f,c
  7269  0199A0  0E00               	movlw	0
  7270  0199A2  6EDF               	movwf	indf2,c
  7271                           
  7272                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7273  0199A4  52E5               	movf	postdec1,f,c
  7274  0199A6  0012               	return		;funcret
  7275  0199A8                     __end_of_clear_hid_pflags:
  7276                           	opt callstack 0
  7277                           
  7278 ;; *************** function _clear_adc_scan *****************
  7279 ;; Defined at:
  7280 ;;		line 64 in file "daq.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1  [STACK] void 
  7287 ;; Registers used:
  7288 ;;		None
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/1
  7291 ;;		On exit  : 3F/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:   15
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_main
  7305 ;; This function uses a reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text25
  7309  019CEA                     __ptext25:
  7310                           	opt callstack 0
  7311  019CEA                     _clear_adc_scan:
  7312                           	opt callstack 15
  7313                           
  7314                           ;daq.c: 66:  R.done = 0;
  7315                           
  7316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7317                           ;incstack = 0
  7318  019CEA  0100               	movlb	0	; () banked
  7319  019CEC  6BF2               	clrf	(_R+39)& (0+255),b	;volatile
  7320                           
  7321                           ; BSR set to: 0
  7322                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7323  019CEE  0012               	return		;funcret
  7324  019CF0                     __end_of_clear_adc_scan:
  7325                           	opt callstack 0
  7326                           
  7327 ;; *************** function _check_help *****************
  7328 ;; Defined at:
  7329 ;;		line 40 in file "mconfig.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  flipper         1  [STACK] const _Bool 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  estatus         1    0        _Bool 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1  [STACK] _Bool 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7338 ;; Tracked objects:
  7339 ;;		On entry : 3F/2
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7347 ;;Total ram usage:        0 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:   27
  7350 ;; This function calls:
  7351 ;;		_StartTimer
  7352 ;;		_TimerDone
  7353 ;;		_display_help
  7354 ;;		_display_info
  7355 ;;		_get_vterm_ptr
  7356 ;;		_help_button
  7357 ;;		_mode_lamp_bright
  7358 ;;		_mode_lamp_dim
  7359 ;;		_set_display_info
  7360 ;;		_set_temp_display_help
  7361 ;;		_set_vterm
  7362 ;;		_sprintf
  7363 ;;		_update_lcd
  7364 ;;		_vterm_dump
  7365 ;; This function is called by:
  7366 ;;		_main
  7367 ;; This function uses a reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text26
  7371  01622E                     __ptext26:
  7372                           	opt callstack 0
  7373  01622E                     _check_help:
  7374                           	opt callstack 3
  7375                           
  7376                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7377                           
  7378                           ; BSR set to: 0
  7379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7380                           ;incstack = 0
  7381  01622E  ECDD  F0C9         	call	_help_button	;wreg free
  7382  016232  5001               	movf	btemp^0,w,c
  7383  016234  B4D8               	btfsc	status,2,c
  7384  016236  D0D0               	goto	l11664
  7385  016238  EC65  F0CE         	call	_display_info	;wreg free
  7386  01623C  0401               	decf	btemp^0,w,c
  7387  01623E  B4D8               	btfsc	status,2,c
  7388  016240  D0CB               	goto	l11664
  7389                           
  7390                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7391  016242  0EDC               	movlw	220
  7392  016244  6EE6               	movwf	postinc1,c
  7393  016246  0E05               	movlw	5
  7394  016248  6EE6               	movwf	postinc1,c
  7395  01624A  0E0B               	movlw	11
  7396  01624C  6EE6               	movwf	postinc1,c
  7397  01624E  EC3E  F0C9         	call	_StartTimer	;wreg free
  7398                           
  7399                           ;mconfig.c: 48:   if (V.debug)
  7400  016252  0102               	movlb	2	; () banked
  7401  016254  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7402                           
  7403                           ; BSR set to: 2
  7404                           ;mconfig.c: 49:    vterm_dump();
  7405  016256  EC2C  F0BA         	call	_vterm_dump	;wreg free
  7406                           
  7407                           ;mconfig.c: 51:   set_vterm(1);
  7408  01625A  0E01               	movlw	1
  7409  01625C  6EE6               	movwf	postinc1,c
  7410  01625E  EC7D  F0CD         	call	_set_vterm	;wreg free
  7411                           
  7412                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7413  016262  EC65  F0CE         	call	_display_info	;wreg free
  7414  016266  5001               	movf	btemp^0,w,c
  7415  016268  6EE6               	movwf	postinc1,c
  7416  01626A  EC1F  F0CE         	call	_set_temp_display_help	;wreg free
  7417                           
  7418                           ; BSR set to: 2
  7419                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7420  01626E  0E01               	movlw	1
  7421  016270  6EE6               	movwf	postinc1,c
  7422  016272  EC8C  F0CD         	call	_set_display_info	;wreg free
  7423                           
  7424                           ;mconfig.c: 54:   if (flipper) {
  7425                           ;stkvar	_flipper @ sp[(0)+-1]
  7426  016276  0EFF               	movlw	-1
  7427  016278  50E3               	movf	plusw1,w,c
  7428  01627A  B4D8               	btfsc	status,2,c
  7429  01627C  D019               	goto	l11650
  7430                           
  7431                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7432  01627E  0EC0               	movlw	low STR_27
  7433  016280  6EE6               	movwf	postinc1,c
  7434  016282  0EFF               	movlw	high STR_27
  7435  016284  6EE6               	movwf	postinc1,c
  7436  016286  0E7F               	movlw	low STR_29
  7437  016288  6EE6               	movwf	postinc1,c
  7438  01628A  0EFE               	movlw	high STR_29
  7439  01628C  6EE6               	movwf	postinc1,c
  7440  01628E  0E01               	movlw	1
  7441  016290  6EE6               	movwf	postinc1,c
  7442  016292  0E00               	movlw	0
  7443  016294  6EE6               	movwf	postinc1,c
  7444  016296  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7445  01629A  0060  F007  FFE6   	movff	btemp,postinc1
  7446  0162A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7447  0162A6  0E06               	movlw	6
  7448  0162A8  6EE6               	movwf	postinc1,c
  7449  0162AA  EC0E  F0BE         	call	_sprintf	;wreg free
  7450                           
  7451                           ;mconfig.c: 56:   } else {
  7452  0162AE  D018               	goto	l1641
  7453  0162B0                     l11650:
  7454                           
  7455                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7456  0162B0  0ED6               	movlw	low STR_28
  7457  0162B2  6EE6               	movwf	postinc1,c
  7458  0162B4  0EFF               	movlw	high STR_28
  7459  0162B6  6EE6               	movwf	postinc1,c
  7460  0162B8  0E7F               	movlw	low STR_29
  7461  0162BA  6EE6               	movwf	postinc1,c
  7462  0162BC  0EFE               	movlw	high STR_29
  7463  0162BE  6EE6               	movwf	postinc1,c
  7464  0162C0  0E01               	movlw	1
  7465  0162C2  6EE6               	movwf	postinc1,c
  7466  0162C4  0E00               	movlw	0
  7467  0162C6  6EE6               	movwf	postinc1,c
  7468  0162C8  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7469  0162CC  0060  F007  FFE6   	movff	btemp,postinc1
  7470  0162D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7471  0162D8  0E06               	movlw	6
  7472  0162DA  6EE6               	movwf	postinc1,c
  7473  0162DC  EC0E  F0BE         	call	_sprintf	;wreg free
  7474  0162E0                     l1641:
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7478  0162E0  0102               	movlb	2	; () banked
  7479  0162E2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7480  0162E4  32E8               	rrcf	wreg,f,c
  7481  0162E6  32E8               	rrcf	wreg,f,c
  7482  0162E8  0B03               	andlw	3
  7483  0162EA  0D24               	mullw	36
  7484  0162EC  0E12               	movlw	18
  7485  0162EE  26F3               	addwf	243,f,c
  7486  0162F0  0E00               	movlw	0
  7487  0162F2  22F4               	addwfc	244,f,c
  7488  0162F4  0E81               	movlw	low _T
  7489  0162F6  6E0B               	movwf	(btemp+10)^0,c
  7490  0162F8  0EFD               	movlw	high _T
  7491  0162FA  6E0C               	movwf	(btemp+11)^0,c
  7492  0162FC  50F3               	movf	243,w,c
  7493  0162FE  260B               	addwf	(btemp+10)^0,f,c
  7494  016300  50F4               	movf	244,w,c
  7495  016302  220C               	addwfc	(btemp+11)^0,f,c
  7496  016304  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7497  01630A  0060  F033  FFE6   	movff	btemp+11,postinc1
  7498  016310  0ECC               	movlw	low STR_31
  7499  016312  6EE6               	movwf	postinc1,c
  7500  016314  0EFF               	movlw	high STR_31
  7501  016316  6EE6               	movwf	postinc1,c
  7502  016318  0E01               	movlw	1
  7503  01631A  6EE6               	movwf	postinc1,c
  7504  01631C  0E01               	movlw	1
  7505  01631E  6EE6               	movwf	postinc1,c
  7506  016320  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7507  016324  0060  F007  FFE6   	movff	btemp,postinc1
  7508  01632A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7509  016330  0E06               	movlw	6
  7510  016332  6EE6               	movwf	postinc1,c
  7511  016334  EC0E  F0BE         	call	_sprintf	;wreg free
  7512                           
  7513                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7514  016338  0102               	movlb	2	; () banked
  7515  01633A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7516  01633C  32E8               	rrcf	wreg,f,c
  7517  01633E  32E8               	rrcf	wreg,f,c
  7518  016340  0B03               	andlw	3
  7519  016342  0D24               	mullw	36
  7520  016344  0E81               	movlw	low _T
  7521  016346  6E0B               	movwf	(btemp+10)^0,c
  7522  016348  0EFD               	movlw	high _T
  7523  01634A  6E0C               	movwf	(btemp+11)^0,c
  7524  01634C  50F3               	movf	243,w,c
  7525  01634E  260B               	addwf	(btemp+10)^0,f,c
  7526  016350  50F4               	movf	244,w,c
  7527  016352  220C               	addwfc	(btemp+11)^0,f,c
  7528  016354  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7529  01635A  0060  F033  FFE6   	movff	btemp+11,postinc1
  7530  016360  0ECC               	movlw	low STR_31
  7531  016362  6EE6               	movwf	postinc1,c
  7532  016364  0EFF               	movlw	high STR_31
  7533  016366  6EE6               	movwf	postinc1,c
  7534  016368  0E01               	movlw	1
  7535  01636A  6EE6               	movwf	postinc1,c
  7536  01636C  0E02               	movlw	2
  7537  01636E  6EE6               	movwf	postinc1,c
  7538  016370  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7539  016374  0060  F007  FFE6   	movff	btemp,postinc1
  7540  01637A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7541  016380  0E06               	movlw	6
  7542  016382  6EE6               	movwf	postinc1,c
  7543  016384  EC0E  F0BE         	call	_sprintf	;wreg free
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;mconfig.c: 61:   V.help_id++;
  7547  016388  EE20  F29B         	lfsr	2,_V+155	;volatile
  7548  01638C  38DF               	swapf	223,w,c
  7549  01638E  6E0C               	movwf	(btemp+11)^0,c
  7550  016390  320C               	rrcf	(btemp+11)^0,f,c
  7551  016392  300C               	rrcf	(btemp+11)^0,w,c
  7552  016394  0B03               	andlw	3
  7553  016396  6E0C               	movwf	(btemp+11)^0,c
  7554  016398  2A0C               	incf	(btemp+11)^0,f,c
  7555  01639A  3A0C               	swapf	(btemp+11)^0,f,c
  7556  01639C  360C               	rlcf	(btemp+11)^0,f,c
  7557  01639E  360C               	rlcf	(btemp+11)^0,f,c
  7558  0163A0  50DF               	movf	223,w,c
  7559  0163A2  180C               	xorwf	(btemp+11)^0,w,c
  7560  0163A4  0B3F               	andlw	-193
  7561  0163A6  180C               	xorwf	(btemp+11)^0,w,c
  7562  0163A8  6EDF               	movwf	223,c
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7566  0163AA  0EB8               	movlw	184
  7567  0163AC  6EE6               	movwf	postinc1,c
  7568  0163AE  0E0B               	movlw	11
  7569  0163B0  6EE6               	movwf	postinc1,c
  7570  0163B2  0E09               	movlw	9
  7571  0163B4  6EE6               	movwf	postinc1,c
  7572  0163B6  EC3E  F0C9         	call	_StartTimer	;wreg free
  7573                           
  7574                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  7575  0163BA  0EB8               	movlw	184
  7576  0163BC  6EE6               	movwf	postinc1,c
  7577  0163BE  0E0B               	movlw	11
  7578  0163C0  6EE6               	movwf	postinc1,c
  7579  0163C2  0E07               	movlw	7
  7580  0163C4  6EE6               	movwf	postinc1,c
  7581  0163C6  EC3E  F0C9         	call	_StartTimer	;wreg free
  7582                           
  7583                           ;mconfig.c: 64:   mode_lamp_bright();
  7584  0163CA  EC2E  F0CE         	call	_mode_lamp_bright	;wreg free
  7585                           
  7586                           ;mconfig.c: 65:   update_lcd(1);
  7587  0163CE  0E01               	movlw	1
  7588  0163D0  6EE6               	movwf	postinc1,c
  7589  0163D2  ECFF  F0BC         	call	_update_lcd	;wreg free
  7590                           
  7591                           ;mconfig.c: 67:  } else {
  7592  0163D6  D032               	goto	l1642
  7593  0163D8                     l11664:
  7594                           
  7595                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  7596  0163D8  0E09               	movlw	9
  7597  0163DA  6EE6               	movwf	postinc1,c
  7598  0163DC  EC83  F0CB         	call	_TimerDone	;wreg free
  7599  0163E0  5001               	movf	btemp^0,w,c
  7600  0163E2  B4D8               	btfsc	status,2,c
  7601  0163E4  D02B               	goto	l1642
  7602                           
  7603                           ;mconfig.c: 69:    set_vterm(0);
  7604  0163E6  0E00               	movlw	0
  7605  0163E8  6EE6               	movwf	postinc1,c
  7606  0163EA  EC7D  F0CD         	call	_set_vterm	;wreg free
  7607                           
  7608                           ;mconfig.c: 70:    V.help = 0;
  7609  0163EE  0102               	movlb	2	; () banked
  7610  0163F0  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7611                           
  7612                           ; BSR set to: 2
  7613                           ;mconfig.c: 71:    set_display_info(display_help());
  7614  0163F2  EC69  F0CE         	call	_display_help	;wreg free
  7615  0163F6  5001               	movf	btemp^0,w,c
  7616  0163F8  6EE6               	movwf	postinc1,c
  7617  0163FA  EC8C  F0CD         	call	_set_display_info	;wreg free
  7618                           
  7619                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7620  0163FE  0060  FA57  FFE6   	movff	_V+149,postinc1
  7621  016404  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7622  01640A  ECD3  F0CD         	call	_mode_lamp_dim	;wreg free
  7623                           
  7624                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  7625  01640E  0E0B               	movlw	11
  7626  016410  6EE6               	movwf	postinc1,c
  7627  016412  EC83  F0CB         	call	_TimerDone	;wreg free
  7628  016416  5001               	movf	btemp^0,w,c
  7629  016418  B4D8               	btfsc	status,2,c
  7630  01641A  D010               	goto	l1642
  7631                           
  7632                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  7633  01641C  0102               	movlb	2	; () banked
  7634  01641E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7635  016420  A4D8               	btfss	status,2,c
  7636  016422  D002               	goto	u10970
  7637  016424  0E01               	movlw	1
  7638  016426  D001               	goto	u10980
  7639  016428                     u10970:
  7640  016428  0E00               	movlw	0
  7641  01642A                     u10980:
  7642  01642A  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  7643                           
  7644                           ; BSR set to: 2
  7645                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  7646  01642C  0EDC               	movlw	220
  7647  01642E  6EE6               	movwf	postinc1,c
  7648  016430  0E05               	movlw	5
  7649  016432  6EE6               	movwf	postinc1,c
  7650  016434  0E0B               	movlw	11
  7651  016436  6EE6               	movwf	postinc1,c
  7652  016438  EC3E  F0C9         	call	_StartTimer	;wreg free
  7653  01643C                     l1642:
  7654                           
  7655                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7656  01643C  52E5               	movf	postdec1,f,c
  7657  01643E  0012               	return		;funcret
  7658  016440                     __end_of_check_help:
  7659                           	opt callstack 0
  7660                           
  7661 ;; *************** function _vterm_dump *****************
  7662 ;; Defined at:
  7663 ;;		line 121 in file "mconfig.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;		None
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1  [STACK] void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7672 ;; Tracked objects:
  7673 ;;		On entry : 3F/2
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7681 ;;Total ram usage:        0 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; Hardware stack levels required when called:   26
  7684 ;; This function calls:
  7685 ;;		_WaitMs
  7686 ;;		_eaDogM_WriteStringAtPos
  7687 ;;		_get_vterm_ptr
  7688 ;;		_sprintf
  7689 ;;		_wait_lcd_done
  7690 ;; This function is called by:
  7691 ;;		_check_help
  7692 ;; This function uses a reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text27
  7696  017458                     __ptext27:
  7697                           	opt callstack 0
  7698  017458                     _vterm_dump:
  7699                           	opt callstack 3
  7700                           
  7701                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  7702                           
  7703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7704                           ;incstack = 0
  7705  017458  0E01               	movlw	1
  7706  01745A  6EE6               	movwf	postinc1,c
  7707  01745C  0E00               	movlw	0
  7708  01745E  6EE6               	movwf	postinc1,c
  7709  017460  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7710  017464  0060  F007  FFE6   	movff	btemp,postinc1
  7711  01746A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7712  017470  0E00               	movlw	0
  7713  017472  6EE6               	movwf	postinc1,c
  7714  017474  0E00               	movlw	0
  7715  017476  6EE6               	movwf	postinc1,c
  7716  017478  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7717  01747C  0060  F007  FFE6   	movff	btemp,postinc1
  7718  017482  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7719  017488  0EA2               	movlw	low STR_33
  7720  01748A  6EE6               	movwf	postinc1,c
  7721  01748C  0EFF               	movlw	high STR_33
  7722  01748E  6EE6               	movwf	postinc1,c
  7723  017490  0E01               	movlw	low (_V+1)
  7724  017492  6EE6               	movwf	postinc1,c
  7725  017494  0E02               	movlw	high (_V+1)
  7726  017496  6EE6               	movwf	postinc1,c
  7727  017498  0E08               	movlw	8
  7728  01749A  6EE6               	movwf	postinc1,c
  7729  01749C  EC0E  F0BE         	call	_sprintf	;wreg free
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;mconfig.c: 124:  wait_lcd_done();
  7733  0174A0  ECAA  F0CD         	call	_wait_lcd_done	;wreg free
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  7737  0174A4  0E01               	movlw	low (_V+1)
  7738  0174A6  6EE6               	movwf	postinc1,c
  7739  0174A8  0E02               	movlw	high (_V+1)
  7740  0174AA  6EE6               	movwf	postinc1,c
  7741  0174AC  0E00               	movlw	0
  7742  0174AE  6EE6               	movwf	postinc1,c
  7743  0174B0  0E00               	movlw	0
  7744  0174B2  6EE6               	movwf	postinc1,c
  7745  0174B4  EC14  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7746                           
  7747                           ; BSR set to: 59
  7748                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  7749  0174B8  0E01               	movlw	1
  7750  0174BA  6EE6               	movwf	postinc1,c
  7751  0174BC  0E01               	movlw	1
  7752  0174BE  6EE6               	movwf	postinc1,c
  7753  0174C0  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7754  0174C4  0060  F007  FFE6   	movff	btemp,postinc1
  7755  0174CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7756  0174D0  0E00               	movlw	0
  7757  0174D2  6EE6               	movwf	postinc1,c
  7758  0174D4  0E01               	movlw	1
  7759  0174D6  6EE6               	movwf	postinc1,c
  7760  0174D8  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7761  0174DC  0060  F007  FFE6   	movff	btemp,postinc1
  7762  0174E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7763  0174E8  0EA2               	movlw	low STR_33
  7764  0174EA  6EE6               	movwf	postinc1,c
  7765  0174EC  0EFF               	movlw	high STR_33
  7766  0174EE  6EE6               	movwf	postinc1,c
  7767  0174F0  0E01               	movlw	low (_V+1)
  7768  0174F2  6EE6               	movwf	postinc1,c
  7769  0174F4  0E02               	movlw	high (_V+1)
  7770  0174F6  6EE6               	movwf	postinc1,c
  7771  0174F8  0E08               	movlw	8
  7772  0174FA  6EE6               	movwf	postinc1,c
  7773  0174FC  EC0E  F0BE         	call	_sprintf	;wreg free
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;mconfig.c: 127:  wait_lcd_done();
  7777  017500  ECAA  F0CD         	call	_wait_lcd_done	;wreg free
  7778                           
  7779                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  7780  017504  0E01               	movlw	low (_V+1)
  7781  017506  6EE6               	movwf	postinc1,c
  7782  017508  0E02               	movlw	high (_V+1)
  7783  01750A  6EE6               	movwf	postinc1,c
  7784  01750C  0E00               	movlw	0
  7785  01750E  6EE6               	movwf	postinc1,c
  7786  017510  0E01               	movlw	1
  7787  017512  6EE6               	movwf	postinc1,c
  7788  017514  EC14  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7789                           
  7790                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7791  017518  0E01               	movlw	1
  7792  01751A  6EE6               	movwf	postinc1,c
  7793  01751C  0E02               	movlw	2
  7794  01751E  6EE6               	movwf	postinc1,c
  7795  017520  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7796  017524  0060  F007  FFE6   	movff	btemp,postinc1
  7797  01752A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7798  017530  0E00               	movlw	0
  7799  017532  6EE6               	movwf	postinc1,c
  7800  017534  0E02               	movlw	2
  7801  017536  6EE6               	movwf	postinc1,c
  7802  017538  ECDB  F0CA         	call	_get_vterm_ptr	;wreg free
  7803  01753C  0060  F007  FFE6   	movff	btemp,postinc1
  7804  017542  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7805  017548  0EA2               	movlw	low STR_33
  7806  01754A  6EE6               	movwf	postinc1,c
  7807  01754C  0EFF               	movlw	high STR_33
  7808  01754E  6EE6               	movwf	postinc1,c
  7809  017550  0E01               	movlw	low (_V+1)
  7810  017552  6EE6               	movwf	postinc1,c
  7811  017554  0E02               	movlw	high (_V+1)
  7812  017556  6EE6               	movwf	postinc1,c
  7813  017558  0E08               	movlw	8
  7814  01755A  6EE6               	movwf	postinc1,c
  7815  01755C  EC0E  F0BE         	call	_sprintf	;wreg free
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;mconfig.c: 130:  wait_lcd_done();
  7819  017560  ECAA  F0CD         	call	_wait_lcd_done	;wreg free
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7823  017564  0E01               	movlw	low (_V+1)
  7824  017566  6EE6               	movwf	postinc1,c
  7825  017568  0E02               	movlw	high (_V+1)
  7826  01756A  6EE6               	movwf	postinc1,c
  7827  01756C  0E00               	movlw	0
  7828  01756E  6EE6               	movwf	postinc1,c
  7829  017570  0E02               	movlw	2
  7830  017572  6EE6               	movwf	postinc1,c
  7831  017574  EC14  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7832                           
  7833                           ; BSR set to: 59
  7834                           ;mconfig.c: 132:  WaitMs(3000);
  7835  017578  0EB8               	movlw	184
  7836  01757A  6EE6               	movwf	postinc1,c
  7837  01757C  0E0B               	movlw	11
  7838  01757E  6EE6               	movwf	postinc1,c
  7839  017580  ECF9  F0C9         	call	_WaitMs	;wreg free
  7840                           
  7841                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7842  017584  0012               	return		;funcret
  7843  017586                     __end_of_vterm_dump:
  7844                           	opt callstack 0
  7845                           
  7846 ;; *************** function _sprintf *****************
  7847 ;; Defined at:
  7848 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  s               2  [STACK] PTR unsigned char 
  7851 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  7852 ;;  fmt             2  [STACK] PTR const unsigned char 
  7853 ;;		 -> STR_46(27), STR_44(3), STR_43(3), STR_42(19), 
  7854 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  7855 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  7856 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  7857 ;;		 -> STR_29(19), STR_23(17), STR_22(16), STR_21(16), 
  7858 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
  7859 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  7860 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
  7861 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  7862 ;;		 -> STR_2(15), STR_1(17), 
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;  f               6  [STACK] struct _IO_FILE
  7865 ;;  ap              2  [STACK] PTR void [1]
  7866 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7867 ;;  ret             2    0        int 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  2  [STACK] int 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/2
  7874 ;;		On exit  : 3F/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;Total ram usage:        0 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:   23
  7884 ;; This function calls:
  7885 ;;		_vfprintf
  7886 ;; This function is called by:
  7887 ;;		_main
  7888 ;;		_check_help
  7889 ;;		_vterm_dump
  7890 ;;		_calc_bsoc
  7891 ;; This function uses a reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text28
  7895  017C1C                     __ptext28:
  7896                           	opt callstack 0
  7897  017C1C                     _sprintf:
  7898                           	opt callstack 0
  7899                           
  7900                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 20, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7901  017C1C  0E08               	movlw	8
  7902  017C1E  26E1               	addwf	fsr1l,f,c
  7903  017C20  0E00               	movlw	0
  7904  017C22  22E2               	addwfc	fsr1h,f,c
  7905                           
  7906                           ;incstack = 0
  7907 ;; hardware stack exceeded
  7908  017C24  0EFE               	movlw	254
  7909  017C26  6E0B               	movwf	(btemp+10)^0,c
  7910  017C28  0EFF               	movlw	255
  7911  017C2A  6E0C               	movwf	(btemp+11)^0,c
  7912                           
  7913                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  7914  017C2C  0EF5               	movlw	245
  7915  017C2E  24E1               	addwf	fsr1l,w,c
  7916  017C30  6E09               	movwf	(btemp+8)^0,c
  7917  017C32  0EFF               	movlw	255
  7918  017C34  20E2               	addwfc	fsr1h,w,c
  7919  017C36  6E0A               	movwf	(btemp+9)^0,c
  7920  017C38  500B               	movf	(btemp+10)^0,w,c
  7921  017C3A  2609               	addwf	(btemp+8)^0,f,c
  7922  017C3C  500C               	movf	(btemp+11)^0,w,c
  7923  017C3E  220A               	addwfc	(btemp+9)^0,f,c
  7924                           
  7925                           ;stkvar	_ap @ sp[(-8)+6]
  7926  017C40  0EFF               	movlw	-1
  7927  017C42  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7928  017C48  0EFE               	movlw	-2
  7929  017C4A  0060  F027  FFE3   	movff	btemp+8,plusw1
  7930                           
  7931                           ;stkvar	_s @ sp[(-8)+-3]
  7932  017C50  0EF5               	movlw	-11
  7933  017C52  006F FF8C  F00B    	movff	plusw1,btemp+10
  7934  017C58  0EF6               	movlw	-10
  7935  017C5A  006F FF8C  F00C    	movff	plusw1,btemp+11
  7936                           
  7937                           ;stkvar	_f @ sp[(-8)+0]
  7938  017C60  0EF9               	movlw	-7
  7939  017C62  0060  F033  FFE3   	movff	btemp+11,plusw1
  7940  017C68  0EF8               	movlw	-8
  7941  017C6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7942                           
  7943                           ;stkvar	_f @ sp[(-8)+0]
  7944  017C70  0EFA               	movlw	250
  7945  017C72  24E1               	addwf	fsr1l,w,c
  7946  017C74  6ED9               	movwf	fsr2l,c
  7947  017C76  0EFF               	movlw	255
  7948  017C78  20E2               	addwfc	fsr1h,w,c
  7949  017C7A  6EDA               	movwf	fsr2h,c
  7950  017C7C  0E00               	movlw	0
  7951  017C7E  6EDE               	movwf	postinc2,c
  7952  017C80  0E00               	movlw	0
  7953  017C82  6EDD               	movwf	postdec2,c
  7954                           
  7955                           ;stkvar	_f @ sp[(-8)+0]
  7956  017C84  0EFC               	movlw	252
  7957  017C86  24E1               	addwf	fsr1l,w,c
  7958  017C88  6ED9               	movwf	fsr2l,c
  7959  017C8A  0EFF               	movlw	255
  7960  017C8C  20E2               	addwfc	fsr1h,w,c
  7961  017C8E  6EDA               	movwf	fsr2h,c
  7962  017C90  0E00               	movlw	0
  7963  017C92  6EDE               	movwf	postinc2,c
  7964  017C94  0E00               	movlw	0
  7965  017C96  6EDD               	movwf	postdec2,c
  7966                           
  7967                           ;stkvar	_ap @ sp[(-8)+6]
  7968  017C98  0EFE               	movlw	254
  7969  017C9A  24E1               	addwf	fsr1l,w,c
  7970  017C9C  6E01               	movwf	btemp^0,c
  7971  017C9E  0EFF               	movlw	255
  7972  017CA0  20E2               	addwfc	fsr1h,w,c
  7973  017CA2  6E02               	movwf	(btemp+1)^0,c
  7974  017CA4  0060  F007  FFE6   	movff	btemp,postinc1
  7975  017CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7976                           
  7977                           ;stkvar	_fmt @ sp[(-10)+-5]
  7978  017CB0  0EF1               	movlw	-15
  7979  017CB2  006F FF8F FFE6     	movff	plusw1,postinc1
  7980  017CB8  006F FF8F FFE6     	movff	plusw1,postinc1
  7981                           
  7982                           ;stkvar	_f @ sp[(-12)+0]
  7983  017CBE  0EF4               	movlw	244
  7984  017CC0  24E1               	addwf	fsr1l,w,c
  7985  017CC2  6E01               	movwf	btemp^0,c
  7986  017CC4  0EFF               	movlw	255
  7987  017CC6  20E2               	addwfc	fsr1h,w,c
  7988  017CC8  6E02               	movwf	(btemp+1)^0,c
  7989  017CCA  0060  F007  FFE6   	movff	btemp,postinc1
  7990  017CD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7991  017CD6  EC7C  F0C1         	call	_vfprintf	;wreg free
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;stkvar	_f @ sp[(-8)+0]
  7995  017CDA  0EFA               	movlw	250
  7996  017CDC  24E1               	addwf	fsr1l,w,c
  7997  017CDE  6ED9               	movwf	fsr2l,c
  7998  017CE0  0EFF               	movlw	255
  7999  017CE2  20E2               	addwfc	fsr1h,w,c
  8000  017CE4  6EDA               	movwf	fsr2h,c
  8001  017CE6  006F FF78  F00B    	movff	postinc2,btemp+10
  8002  017CEC  006F FF74  F00C    	movff	postdec2,btemp+11
  8003                           
  8004                           ;stkvar	_s @ sp[(-8)+-3]
  8005  017CF2  0EF5               	movlw	-11
  8006  017CF4  006F FF8C  F009    	movff	plusw1,btemp+8
  8007  017CFA  0EF6               	movlw	-10
  8008  017CFC  006F FF8C  F00A    	movff	plusw1,btemp+9
  8009  017D02  500B               	movf	(btemp+10)^0,w,c
  8010  017D04  2409               	addwf	(btemp+8)^0,w,c
  8011  017D06  6ED9               	movwf	fsr2l,c
  8012  017D08  500C               	movf	(btemp+11)^0,w,c
  8013  017D0A  200A               	addwfc	(btemp+9)^0,w,c
  8014  017D0C  6EDA               	movwf	fsr2h,c
  8015  017D0E  0E00               	movlw	0
  8016  017D10  6EDF               	movwf	indf2,c
  8017                           
  8018                           ; BSR set to: 0
  8019                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 20, args
      +                          ize = 4, vargsize = 0
  8020  017D12  0EF8               	movlw	248
  8021  017D14  26E1               	addwf	fsr1l,f,c
  8022  017D16  0EFF               	movlw	255
  8023  017D18  22E2               	addwfc	fsr1h,f,c
  8024  017D1A  52E5               	movf	postdec1,f,c
  8025  017D1C  50E7               	movf	indf1,w,c
  8026  017D1E  5EE1               	subwf	fsr1l,f,c
  8027  017D20  0E00               	movlw	0
  8028  017D22  5AE2               	subwfb	fsr1h,f,c
  8029  017D24  0012               	return		;funcret
  8030  017D26                     __end_of_sprintf:
  8031                           	opt callstack 0
  8032                           
  8033 ;; *************** function _get_vterm_ptr *****************
  8034 ;; Defined at:
  8035 ;;		line 116 in file "mconfig.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  line            1  [STACK] const unsigned char 
  8038 ;;  vterm           1  [STACK] const unsigned char 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;		None
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  2  [STACK] PTR unsigned char 
  8043 ;; Registers used:
  8044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/2
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8054 ;;Total ram usage:        0 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; Hardware stack levels required when called:   15
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_main
  8061 ;;		_check_help
  8062 ;;		_vterm_dump
  8063 ;; This function uses a reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text29
  8067  0195B6                     __ptext29:
  8068                           	opt callstack 0
  8069  0195B6                     _get_vterm_ptr:
  8070                           	opt callstack 15
  8071                           
  8072                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8073                           ;stkvar	_vterm @ sp[(0)+-2]
  8074                           
  8075                           ; BSR set to: 0
  8076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8077                           ;incstack = 0
  8078  0195B6  0EFE               	movlw	-2
  8079  0195B8  50E3               	movf	plusw1,w,c
  8080  0195BA  0B03               	andlw	3
  8081  0195BC  0D48               	mullw	72
  8082  0195BE  0EFF               	movlw	low _D
  8083  0195C0  6E01               	movwf	btemp^0,c
  8084  0195C2  0E07               	movlw	high _D
  8085  0195C4  6E02               	movwf	(btemp+1)^0,c
  8086  0195C6  50F3               	movf	243,w,c
  8087  0195C8  2601               	addwf	btemp^0,f,c
  8088  0195CA  50F4               	movf	244,w,c
  8089  0195CC  2202               	addwfc	(btemp+1)^0,f,c
  8090                           
  8091                           ;stkvar	_line @ sp[(0)+-1]
  8092  0195CE  0EFF               	movlw	-1
  8093  0195D0  50E3               	movf	plusw1,w,c
  8094  0195D2  0B03               	andlw	3
  8095  0195D4  0D18               	mullw	24
  8096  0195D6  50F3               	movf	243,w,c
  8097  0195D8  2601               	addwf	btemp^0,f,c
  8098  0195DA  50F4               	movf	244,w,c
  8099  0195DC  2202               	addwfc	(btemp+1)^0,f,c
  8100                           
  8101                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8102  0195DE  52E5               	movf	postdec1,f,c
  8103  0195E0  52E5               	movf	postdec1,f,c
  8104  0195E2  0012               	return		;funcret
  8105  0195E4                     __end_of_get_vterm_ptr:
  8106                           	opt callstack 0
  8107                           
  8108 ;; *************** function _WaitMs *****************
  8109 ;; Defined at:
  8110 ;;		line 32 in file "timers.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  numMilliseco    2  [STACK] const unsigned short 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1  [STACK] void 
  8117 ;; Registers used:
  8118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/2
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:   16
  8131 ;; This function calls:
  8132 ;;		_StartTimer
  8133 ;;		_TimerDone
  8134 ;; This function is called by:
  8135 ;;		_main
  8136 ;;		_vterm_dump
  8137 ;; This function uses a reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text30
  8141  0193F2                     __ptext30:
  8142                           	opt callstack 0
  8143  0193F2                     _WaitMs:
  8144                           	opt callstack 12
  8145                           
  8146                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8147                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8148                           
  8149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8150                           ;incstack = 0
  8151  0193F2  0EFE               	movlw	-2
  8152  0193F4  006F FF8F FFE6     	movff	plusw1,postinc1
  8153  0193FA  006F FF8F FFE6     	movff	plusw1,postinc1
  8154  019400  0E00               	movlw	0
  8155  019402  6EE6               	movwf	postinc1,c
  8156  019404  EC3E  F0C9         	call	_StartTimer	;wreg free
  8157                           
  8158                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8159  019408  D005               	goto	l8786
  8160  01940A                     l1573:
  8161                           
  8162                           ;timers.c: 36:   __nop();
  8163  01940A  F000               	nop	
  8164                           
  8165                           ;timers.c: 37:   __nop();
  8166  01940C  F000               	nop	
  8167                           
  8168                           ;timers.c: 38:   __nop();
  8169  01940E  F000               	nop	
  8170                           
  8171                           ;timers.c: 39:   __nop();
  8172  019410  F000               	nop	
  8173  019412  0004               	clrwdt		;# 
  8174  019414                     l8786:
  8175                           
  8176                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8177  019414  0E00               	movlw	0
  8178  019416  6EE6               	movwf	postinc1,c
  8179  019418  EC83  F0CB         	call	_TimerDone	;wreg free
  8180  01941C  5001               	movf	btemp^0,w,c
  8181  01941E  B4D8               	btfsc	status,2,c
  8182  019420  D7F4               	goto	l1573
  8183                           
  8184                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8185  019422  52E5               	movf	postdec1,f,c
  8186  019424  52E5               	movf	postdec1,f,c
  8187  019426  0012               	return		;funcret
  8188  019428                     __end_of_WaitMs:
  8189                           	opt callstack 0
  8190                           
  8191 ;; *************** function _update_lcd *****************
  8192 ;; Defined at:
  8193 ;;		line 85 in file "mconfig.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  vterm           1  [STACK] unsigned char 
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1  [STACK] unsigned char 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8211 ;;Total ram usage:        0 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:   26
  8214 ;; This function calls:
  8215 ;;		_eaDogM_WriteStringAtPos
  8216 ;;		_wait_lcd_done
  8217 ;; This function is called by:
  8218 ;;		_main
  8219 ;;		_check_help
  8220 ;; This function uses a reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text31
  8224  0179FE                     __ptext31:
  8225                           	opt callstack 0
  8226  0179FE                     _update_lcd:
  8227                           	opt callstack 4
  8228                           
  8229                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8230                           ;stkvar	_vterm @ sp[(0)+-1]
  8231                           
  8232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8233                           ;incstack = 0
  8234  0179FE  0EFF               	movlw	-1
  8235  017A00  006F FF8C  F001    	movff	plusw1,btemp
  8236  017A06  0E03               	movlw	3
  8237  017A08  1601               	andwf	btemp^0,f,c
  8238  017A0A  0EFF               	movlw	-1
  8239  017A0C  0060  F007  FFE3   	movff	btemp,plusw1
  8240                           
  8241                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8242  017A12  EE22  F11F         	lfsr	2,_D+288
  8243  017A16  A0DF               	btfss	indf2,0,c
  8244  017A18  D004               	goto	l11396
  8245                           
  8246                           ;stkvar	_vterm @ sp[(0)+-1]
  8247  017A1A  0EFF               	movlw	-1
  8248  017A1C  50E3               	movf	plusw1,w,c
  8249  017A1E  B4D8               	btfsc	status,2,c
  8250  017A20  D074               	goto	l1649
  8251  017A22                     l11396:
  8252                           
  8253                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8254                           ;stkvar	_vterm @ sp[(0)+-1]
  8255  017A22  0EFF               	movlw	-1
  8256  017A24  50E3               	movf	plusw1,w,c
  8257  017A26  0D48               	mullw	72
  8258  017A28  0E0F               	movlw	low (_D+16)
  8259  017A2A  24F3               	addwf	243,w,c
  8260  017A2C  6ED9               	movwf	fsr2l,c
  8261  017A2E  0E08               	movlw	high (_D+16)
  8262  017A30  20F4               	addwfc	prodh,w,c
  8263  017A32  6EDA               	movwf	fsr2h,c
  8264  017A34  0E00               	movlw	0
  8265  017A36  6EDF               	movwf	indf2,c
  8266                           
  8267                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8268                           ;stkvar	_vterm @ sp[(0)+-1]
  8269  017A38  0EFF               	movlw	-1
  8270  017A3A  50E3               	movf	plusw1,w,c
  8271  017A3C  0D48               	mullw	72
  8272  017A3E  0E27               	movlw	low (_D+40)
  8273  017A40  24F3               	addwf	243,w,c
  8274  017A42  6ED9               	movwf	fsr2l,c
  8275  017A44  0E08               	movlw	high (_D+40)
  8276  017A46  20F4               	addwfc	prodh,w,c
  8277  017A48  6EDA               	movwf	fsr2h,c
  8278  017A4A  0E00               	movlw	0
  8279  017A4C  6EDF               	movwf	indf2,c
  8280                           
  8281                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8282                           ;stkvar	_vterm @ sp[(0)+-1]
  8283  017A4E  0EFF               	movlw	-1
  8284  017A50  50E3               	movf	plusw1,w,c
  8285  017A52  0D48               	mullw	72
  8286  017A54  0E3F               	movlw	low (_D+64)
  8287  017A56  24F3               	addwf	243,w,c
  8288  017A58  6ED9               	movwf	fsr2l,c
  8289  017A5A  0E08               	movlw	high (_D+64)
  8290  017A5C  20F4               	addwfc	prodh,w,c
  8291  017A5E  6EDA               	movwf	fsr2h,c
  8292  017A60  0E00               	movlw	0
  8293  017A62  6EDF               	movwf	indf2,c
  8294                           
  8295                           ;mconfig.c: 95:  wait_lcd_done();
  8296  017A64  ECAA  F0CD         	call	_wait_lcd_done	;wreg free
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8300                           ;stkvar	_vterm @ sp[(0)+-1]
  8301  017A68  0EFF               	movlw	-1
  8302  017A6A  50E3               	movf	plusw1,w,c
  8303  017A6C  0D48               	mullw	72
  8304  017A6E  0EFF               	movlw	low _D
  8305  017A70  6E0B               	movwf	(btemp+10)^0,c
  8306  017A72  0E07               	movlw	high _D
  8307  017A74  6E0C               	movwf	(btemp+11)^0,c
  8308  017A76  50F3               	movf	243,w,c
  8309  017A78  260B               	addwf	(btemp+10)^0,f,c
  8310  017A7A  50F4               	movf	244,w,c
  8311  017A7C  220C               	addwfc	(btemp+11)^0,f,c
  8312  017A7E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8313  017A84  0060  F033  FFE6   	movff	btemp+11,postinc1
  8314  017A8A  0E00               	movlw	0
  8315  017A8C  6EE6               	movwf	postinc1,c
  8316  017A8E  0E00               	movlw	0
  8317  017A90  6EE6               	movwf	postinc1,c
  8318  017A92  EC14  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8319                           
  8320                           ; BSR set to: 59
  8321                           ;mconfig.c: 97:  wait_lcd_done();
  8322  017A96  ECAA  F0CD         	call	_wait_lcd_done	;wreg free
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8326                           ;stkvar	_vterm @ sp[(0)+-1]
  8327  017A9A  0EFF               	movlw	-1
  8328  017A9C  50E3               	movf	plusw1,w,c
  8329  017A9E  0D48               	mullw	72
  8330  017AA0  0EFF               	movlw	low _D
  8331  017AA2  6E0B               	movwf	(btemp+10)^0,c
  8332  017AA4  0E07               	movlw	high _D
  8333  017AA6  6E0C               	movwf	(btemp+11)^0,c
  8334  017AA8  0E18               	movlw	24
  8335  017AAA  260B               	addwf	(btemp+10)^0,f,c
  8336  017AAC  0E00               	movlw	0
  8337  017AAE  220C               	addwfc	(btemp+11)^0,f,c
  8338  017AB0  50F3               	movf	243,w,c
  8339  017AB2  260B               	addwf	(btemp+10)^0,f,c
  8340  017AB4  50F4               	movf	244,w,c
  8341  017AB6  220C               	addwfc	(btemp+11)^0,f,c
  8342  017AB8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8343  017ABE  0060  F033  FFE6   	movff	btemp+11,postinc1
  8344  017AC4  0E00               	movlw	0
  8345  017AC6  6EE6               	movwf	postinc1,c
  8346  017AC8  0E01               	movlw	1
  8347  017ACA  6EE6               	movwf	postinc1,c
  8348  017ACC  EC14  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8349                           
  8350                           ; BSR set to: 59
  8351                           ;mconfig.c: 99:  wait_lcd_done();
  8352  017AD0  ECAA  F0CD         	call	_wait_lcd_done	;wreg free
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8356                           ;stkvar	_vterm @ sp[(0)+-1]
  8357  017AD4  0EFF               	movlw	-1
  8358  017AD6  50E3               	movf	plusw1,w,c
  8359  017AD8  0D48               	mullw	72
  8360  017ADA  0EFF               	movlw	low _D
  8361  017ADC  6E0B               	movwf	(btemp+10)^0,c
  8362  017ADE  0E07               	movlw	high _D
  8363  017AE0  6E0C               	movwf	(btemp+11)^0,c
  8364  017AE2  0E30               	movlw	48
  8365  017AE4  260B               	addwf	(btemp+10)^0,f,c
  8366  017AE6  0E00               	movlw	0
  8367  017AE8  220C               	addwfc	(btemp+11)^0,f,c
  8368  017AEA  50F3               	movf	243,w,c
  8369  017AEC  260B               	addwf	(btemp+10)^0,f,c
  8370  017AEE  50F4               	movf	244,w,c
  8371  017AF0  220C               	addwfc	(btemp+11)^0,f,c
  8372  017AF2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8373  017AF8  0060  F033  FFE6   	movff	btemp+11,postinc1
  8374  017AFE  0E00               	movlw	0
  8375  017B00  6EE6               	movwf	postinc1,c
  8376  017B02  0E02               	movlw	2
  8377  017B04  6EE6               	movwf	postinc1,c
  8378  017B06  EC14  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8379  017B0A                     l1649:
  8380                           
  8381                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8382  017B0A  52E5               	movf	postdec1,f,c
  8383  017B0C  0012               	return		;funcret
  8384  017B0E                     __end_of_update_lcd:
  8385                           	opt callstack 0
  8386                           
  8387 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8388 ;; Defined at:
  8389 ;;		line 275 in file "eadog.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  r               1  [STACK] const unsigned char 
  8392 ;;  c               1  [STACK] const unsigned char 
  8393 ;;  strPtr          2  [STACK] PTR unsigned char 
  8394 ;;		 -> D.lcd(288), D(290), V(188), 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1  [STACK] void 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8401 ;; Tracked objects:
  8402 ;;		On entry : 3F/0
  8403 ;;		On exit  : 3F/3B
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8410 ;;Total ram usage:        0 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:   25
  8413 ;; This function calls:
  8414 ;;		_eaDogM_WriteString
  8415 ;;		_send_lcd_cmd_dma
  8416 ;; This function is called by:
  8417 ;;		_update_lcd
  8418 ;;		_vterm_dump
  8419 ;; This function uses a reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text32
  8423  019428                     __ptext32:
  8424                           	opt callstack 0
  8425  019428                     _eaDogM_WriteStringAtPos:
  8426                           	opt callstack 4
  8427                           
  8428                           ;eadog.c: 275: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 276: {;eadog.c: 277:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8429                           ;stkvar	_c @ sp[(0)+-2]
  8430                           
  8431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8432                           ;incstack = 0
  8433  019428  0EFE               	movlw	-2
  8434  01942A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8435                           
  8436                           ;stkvar	_r @ sp[(0)+-1]
  8437  019430  0EFF               	movlw	-1
  8438  019432  50E3               	movf	plusw1,w,c
  8439  019434  0D10               	mullw	16
  8440  019436  50F3               	movf	243,w,c
  8441  019438  240C               	addwf	(btemp+11)^0,w,c
  8442  01943A  0F80               	addlw	128
  8443  01943C  6EE6               	movwf	postinc1,c
  8444  01943E  EC61  F0C7         	call	_send_lcd_cmd_dma	;wreg free
  8445                           
  8446                           ;eadog.c: 278:  eaDogM_WriteString(strPtr);
  8447                           ;stkvar	_strPtr @ sp[(0)+-4]
  8448  019442  0EFC               	movlw	-4
  8449  019444  006F FF8F FFE6     	movff	plusw1,postinc1
  8450  01944A  006F FF8F FFE6     	movff	plusw1,postinc1
  8451  019450  EC27  F0C2         	call	_eaDogM_WriteString	;wreg free
  8452                           
  8453                           ; BSR set to: 59
  8454                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8455  019454  52E5               	movf	postdec1,f,c
  8456  019456  52E5               	movf	postdec1,f,c
  8457  019458  52E5               	movf	postdec1,f,c
  8458  01945A  52E5               	movf	postdec1,f,c
  8459  01945C  0012               	return		;funcret
  8460  01945E                     __end_of_eaDogM_WriteStringAtPos:
  8461                           	opt callstack 0
  8462                           
  8463 ;; *************** function _send_lcd_cmd_dma *****************
  8464 ;; Defined at:
  8465 ;;		line 220 in file "eadog.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  strPtr          1  [STACK] unsigned char 
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;		None
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  1  [STACK] void 
  8472 ;; Registers used:
  8473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/3D
  8476 ;;		On exit  : 3F/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8483 ;;Total ram usage:        0 bytes
  8484 ;; Hardware stack levels used:    1
  8485 ;; Hardware stack levels required when called:   24
  8486 ;; This function calls:
  8487 ;;		_printf
  8488 ;;		_ringBufS_flush
  8489 ;;		_start_lcd
  8490 ;;		_wait_lcd_done
  8491 ;;		_wait_lcd_set
  8492 ;; This function is called by:
  8493 ;;		_eaDogM_WriteCommand
  8494 ;;		_eaDogM_WriteStringAtPos
  8495 ;; This function uses a reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text33
  8499  018EC2                     __ptext33:
  8500                           	opt callstack 0
  8501  018EC2                     _send_lcd_cmd_dma:
  8502                           	opt callstack 4
  8503                           
  8504                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8505                           
  8506                           ; BSR set to: 59
  8507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8508                           ;incstack = 0
  8509  018EC2  EC78  F0CE         	call	_wait_lcd_set	;wreg free
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8513  018EC6  0E00               	movlw	0
  8514  018EC8  6EE6               	movwf	postinc1,c
  8515  018ECA  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8516  018ED0  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8517  018ED6  EC62  F0C3         	call	_ringBufS_flush	;wreg free
  8518  018EDA  92BC               	bcf	188,1,c	;volatile
  8519  018EDC  94BC               	bcf	188,2,c	;volatile
  8520                           
  8521                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  8522  018EDE  013B               	movlb	59	; () banked
  8523  018EE0  9FFC               	bcf	252,7,b	;volatile
  8524                           
  8525                           ; BSR set to: 59
  8526                           ;eadog.c: 229:  DMA1SSZ = 1;
  8527  018EE2  0E00               	movlw	0
  8528  018EE4  6FF8               	movwf	248,b	;volatile
  8529  018EE6  0E01               	movlw	1
  8530  018EE8  6FF7               	movwf	247,b	;volatile
  8531                           
  8532                           ; BSR set to: 59
  8533                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  8534  018EEA  8FFC               	bsf	252,7,b	;volatile
  8535                           
  8536                           ; BSR set to: 59
  8537                           ;eadog.c: 231:  printf("%c", strPtr);
  8538                           ;stkvar	_strPtr @ sp[(0)+-1]
  8539  018EEC  0EFF               	movlw	-1
  8540  018EEE  50E3               	movf	plusw1,w,c
  8541  018EF0  6EE6               	movwf	postinc1,c
  8542  018EF2  0E00               	movlw	0
  8543  018EF4  6EE6               	movwf	postinc1,c
  8544  018EF6  0EF8               	movlw	low STR_25
  8545  018EF8  6EE6               	movwf	postinc1,c
  8546  018EFA  0EFF               	movlw	high STR_25
  8547  018EFC  6EE6               	movwf	postinc1,c
  8548  018EFE  0E04               	movlw	4
  8549  018F00  6EE6               	movwf	postinc1,c
  8550  018F02  EC79  F0C6         	call	_printf	;wreg free
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;eadog.c: 232:  start_lcd();
  8554  018F06  EC7B  F0CE         	call	_start_lcd	;wreg free
  8555                           
  8556                           ; BSR set to: 59
  8557                           ;eadog.c: 233:  wait_lcd_done();
  8558  018F0A  ECAA  F0CD         	call	_wait_lcd_done	;wreg free
  8559                           
  8560                           ; BSR set to: 0
  8561  018F0E  82BC               	bsf	188,1,c	;volatile
  8562                           
  8563                           ; BSR set to: 0
  8564                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8565  018F10  52E5               	movf	postdec1,f,c
  8566  018F12  0012               	return		;funcret
  8567  018F14                     __end_of_send_lcd_cmd_dma:
  8568                           	opt callstack 0
  8569                           
  8570 ;; *************** function _wait_lcd_done *****************
  8571 ;; Defined at:
  8572 ;;		line 156 in file "eadog.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;		None
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1  [STACK] void 
  8579 ;; Registers used:
  8580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 3F/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8590 ;;Total ram usage:        0 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:   16
  8593 ;; This function calls:
  8594 ;;		_wdtdelay
  8595 ;; This function is called by:
  8596 ;;		_send_lcd_cmd_dma
  8597 ;;		_update_lcd
  8598 ;;		_vterm_dump
  8599 ;; This function uses a reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text34
  8603  019B54                     __ptext34:
  8604                           	opt callstack 0
  8605  019B54                     _wait_lcd_done:
  8606                           	opt callstack 13
  8607                           
  8608                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8609                           
  8610                           ; BSR set to: 0
  8611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8612                           ;incstack = 0
  8613  019B54  0100               	movlb	0	; () banked
  8614  019B56  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  8615  019B58  D7FD               	goto	_wait_lcd_done
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;eadog.c: 159:  wdtdelay(50);
  8619  019B5A  0E32               	movlw	50
  8620  019B5C  6EE6               	movwf	postinc1,c
  8621  019B5E  0E00               	movlw	0
  8622  019B60  6EE6               	movwf	postinc1,c
  8623  019B62  0E00               	movlw	0
  8624  019B64  6EE6               	movwf	postinc1,c
  8625  019B66  0E00               	movlw	0
  8626  019B68  6EE6               	movwf	postinc1,c
  8627  019B6A  ECD9  F0C6         	call	_wdtdelay	;wreg free
  8628                           
  8629                           ; BSR set to: 0
  8630                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8631  019B6E  0012               	return		;funcret
  8632  019B70                     __end_of_wait_lcd_done:
  8633                           	opt callstack 0
  8634                           
  8635 ;; *************** function _wdtdelay *****************
  8636 ;; Defined at:
  8637 ;;		line 23 in file "eadog.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  delay           4  [STACK] const unsigned long 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1  [STACK] void 
  8644 ;; Registers used:
  8645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 3F/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8655 ;;Total ram usage:        0 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:   15
  8658 ;; This function calls:
  8659 ;;		Nothing
  8660 ;; This function is called by:
  8661 ;;		_init_display
  8662 ;;		_send_lcd_cmd
  8663 ;;		_send_lcd_cmd_long
  8664 ;;		_wait_lcd_done
  8665 ;; This function uses a reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text35
  8669  018DB2                     __ptext35:
  8670                           	opt callstack 0
  8671  018DB2                     _wdtdelay:
  8672                           	opt callstack 13
  8673                           
  8674                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  8675                           
  8676                           ; BSR set to: 0
  8677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8678                           ;incstack = 0
  8679  018DB2  0100               	movlb	0	; () banked
  8680  018DB4  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  8681  018DB6  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8682  018DB8  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8683  018DBA  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8684  018DBC                     l1414:
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;eadog.c: 28:   __nop();
  8688  018DBC  F000               	nop	
  8689  018DBE  0004               	clrwdt		;# 
  8690                           
  8691                           ;eadog.c: 30:  };
  8692  018DC0  0E01               	movlw	1
  8693  018DC2  0100               	movlb	0	; () banked
  8694  018DC4  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  8695  018DC6  0E00               	movlw	0
  8696  018DC8  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8697  018DCA  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8698  018DCC  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;stkvar	_delay @ sp[(0)+-4]
  8702  018DCE  0EFC               	movlw	-4
  8703  018DD0  006F FF8C  F001    	movff	plusw1,btemp
  8704  018DD6  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  8705  018DD8  5C01               	subwf	btemp^0,w,c
  8706  018DDA  0EFD               	movlw	-3
  8707  018DDC  006F FF8C  F001    	movff	plusw1,btemp
  8708  018DE2  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8709  018DE4  5801               	subwfb	btemp^0,w,c
  8710  018DE6  0EFE               	movlw	-2
  8711  018DE8  006F FF8C  F001    	movff	plusw1,btemp
  8712  018DEE  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8713  018DF0  5801               	subwfb	btemp^0,w,c
  8714  018DF2  0EFF               	movlw	-1
  8715  018DF4  006F FF8C  F001    	movff	plusw1,btemp
  8716  018DFA  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8717  018DFC  5801               	subwfb	btemp^0,w,c
  8718  018DFE  B0D8               	btfsc	status,0,c
  8719  018E00  D7DD               	goto	l1414
  8720                           
  8721                           ; BSR set to: 0
  8722                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8723  018E02  52E5               	movf	postdec1,f,c
  8724  018E04  52E5               	movf	postdec1,f,c
  8725  018E06  52E5               	movf	postdec1,f,c
  8726  018E08  52E5               	movf	postdec1,f,c
  8727  018E0A  0012               	return		;funcret
  8728  018E0C                     __end_of_wdtdelay:
  8729                           	opt callstack 0
  8730                           
  8731 ;; *************** function _eaDogM_WriteString *****************
  8732 ;; Defined at:
  8733 ;;		line 199 in file "eadog.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;  strPtr          2  [STACK] PTR unsigned char 
  8736 ;;		 -> D.lcd(288), D(290), V(188), 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1  [STACK] void 
  8741 ;; Registers used:
  8742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8743 ;; Tracked objects:
  8744 ;;		On entry : 3F/0
  8745 ;;		On exit  : 3F/3B
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8752 ;;Total ram usage:        0 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:   24
  8755 ;; This function calls:
  8756 ;;		_printf
  8757 ;;		_ringBufS_flush
  8758 ;;		_start_lcd
  8759 ;;		_strlen
  8760 ;;		_wait_lcd_set
  8761 ;; This function is called by:
  8762 ;;		_eaDogM_WriteStringAtPos
  8763 ;; This function uses a reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text36
  8767  01844E                     __ptext36:
  8768                           	opt callstack 0
  8769  01844E                     _eaDogM_WriteString:
  8770                           	opt callstack 4
  8771                           
  8772                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  8773                           
  8774                           ; BSR set to: 0
  8775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8776                           ;incstack = 0
  8777  01844E  EC78  F0CE         	call	_wait_lcd_set	;wreg free
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  8781  018452  0E00               	movlw	0
  8782  018454  6EE6               	movwf	postinc1,c
  8783  018456  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8784  01845C  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8785  018462  EC62  F0C3         	call	_ringBufS_flush	;wreg free
  8786  018466  94BC               	bcf	188,2,c	;volatile
  8787                           
  8788                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8789                           ;stkvar	_strPtr @ sp[(0)+-2]
  8790  018468  0EFE               	movlw	-2
  8791  01846A  006F FF8F FFE6     	movff	plusw1,postinc1
  8792  018470  006F FF8F FFE6     	movff	plusw1,postinc1
  8793  018476  EC7A  F0C2         	call	_strlen	;wreg free
  8794  01847A  5002               	movf	(btemp+1)^0,w,c
  8795  01847C  E104               	bnz	u10740
  8796  01847E  0E41               	movlw	65
  8797  018480  5C01               	subwf	btemp^0,w,c
  8798  018482  A0D8               	btfss	status,0,c
  8799  018484  D010               	goto	l11256
  8800  018486                     u10740:
  8801                           
  8802                           ;stkvar	_strPtr @ sp[(0)+-2]
  8803  018486  0EFE               	movlw	-2
  8804  018488  006F FF8C  F00B    	movff	plusw1,btemp+10
  8805  01848E  0EFF               	movlw	-1
  8806  018490  006F FF8C  F00C    	movff	plusw1,btemp+11
  8807  018496  0E40               	movlw	64
  8808  018498  240B               	addwf	(btemp+10)^0,w,c
  8809  01849A  6ED9               	movwf	fsr2l,c
  8810  01849C  0E00               	movlw	0
  8811  01849E  200C               	addwfc	(btemp+11)^0,w,c
  8812  0184A0  6EDA               	movwf	fsr2h,c
  8813  0184A2  0E00               	movlw	0
  8814  0184A4  6EDF               	movwf	indf2,c
  8815  0184A6                     l11256:
  8816                           
  8817                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  8818  0184A6  013B               	movlb	59	; () banked
  8819  0184A8  9FFC               	bcf	252,7,b	;volatile
  8820                           
  8821                           ; BSR set to: 59
  8822                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  8823                           ;stkvar	_strPtr @ sp[(0)+-2]
  8824  0184AA  0EFE               	movlw	-2
  8825  0184AC  006F FF8F FFE6     	movff	plusw1,postinc1
  8826  0184B2  006F FF8F FFE6     	movff	plusw1,postinc1
  8827  0184B8  EC7A  F0C2         	call	_strlen	;wreg free
  8828  0184BC  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8829  0184C2  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8830                           
  8831                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  8832  0184C8  013B               	movlb	59	; () banked
  8833  0184CA  8FFC               	bsf	252,7,b	;volatile
  8834                           
  8835                           ; BSR set to: 59
  8836                           ;eadog.c: 210:  printf("%s", strPtr);
  8837                           ;stkvar	_strPtr @ sp[(0)+-2]
  8838  0184CC  0EFE               	movlw	-2
  8839  0184CE  006F FF8F FFE6     	movff	plusw1,postinc1
  8840  0184D4  006F FF8F FFE6     	movff	plusw1,postinc1
  8841  0184DA  0EFB               	movlw	low STR_24
  8842  0184DC  6EE6               	movwf	postinc1,c
  8843  0184DE  0EFF               	movlw	high STR_24
  8844  0184E0  6EE6               	movwf	postinc1,c
  8845  0184E2  0E04               	movlw	4
  8846  0184E4  6EE6               	movwf	postinc1,c
  8847  0184E6  EC79  F0C6         	call	_printf	;wreg free
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;eadog.c: 211:  start_lcd();
  8851  0184EA  EC7B  F0CE         	call	_start_lcd	;wreg free
  8852                           
  8853                           ; BSR set to: 59
  8854                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8855  0184EE  52E5               	movf	postdec1,f,c
  8856  0184F0  52E5               	movf	postdec1,f,c
  8857  0184F2  0012               	return		;funcret
  8858  0184F4                     __end_of_eaDogM_WriteString:
  8859                           	opt callstack 0
  8860                           
  8861 ;; *************** function _wait_lcd_set *****************
  8862 ;; Defined at:
  8863 ;;		line 146 in file "eadog.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;		None
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1  [STACK] void 
  8870 ;; Registers used:
  8871 ;;		None
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/3D
  8874 ;;		On exit  : 3F/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8881 ;;Total ram usage:        0 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; Hardware stack levels required when called:   15
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_eaDogM_WriteString
  8888 ;;		_send_lcd_cmd_dma
  8889 ;; This function uses a reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text37
  8893  019CF0                     __ptext37:
  8894                           	opt callstack 0
  8895  019CF0                     _wait_lcd_set:
  8896                           	opt callstack 12
  8897                           
  8898                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  8899                           
  8900                           ; BSR set to: 59
  8901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8902                           ;incstack = 0
  8903  019CF0  0100               	movlb	0	; () banked
  8904  019CF2  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  8905                           
  8906                           ; BSR set to: 0
  8907                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8908  019CF4  0012               	return		;funcret
  8909  019CF6                     __end_of_wait_lcd_set:
  8910                           	opt callstack 0
  8911                           
  8912 ;; *************** function _start_lcd *****************
  8913 ;; Defined at:
  8914 ;;		line 141 in file "eadog.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;		None
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;		None
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1  [STACK] void 
  8921 ;; Registers used:
  8922 ;;		None
  8923 ;; Tracked objects:
  8924 ;;		On entry : 3F/0
  8925 ;;		On exit  : 3F/3B
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8932 ;;Total ram usage:        0 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:   15
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_eaDogM_WriteString
  8939 ;;		_send_lcd_cmd_dma
  8940 ;; This function uses a reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text38
  8944  019CF6                     __ptext38:
  8945                           	opt callstack 0
  8946  019CF6                     _start_lcd:
  8947                           	opt callstack 12
  8948                           
  8949                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  8950                           
  8951                           ; BSR set to: 0
  8952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8953                           ;incstack = 0
  8954  019CF6  013B               	movlb	59	; () banked
  8955  019CF8  8DFC               	bsf	252,6,b	;volatile
  8956                           
  8957                           ; BSR set to: 59
  8958                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8959  019CFA  0012               	return		;funcret
  8960  019CFC                     __end_of_start_lcd:
  8961                           	opt callstack 0
  8962                           
  8963 ;; *************** function _ringBufS_flush *****************
  8964 ;; Defined at:
  8965 ;;		line 76 in file "ringbufs.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8968 ;;		 -> ring_buf1(67), 
  8969 ;;  clearBuffer     1  [STACK] const char 
  8970 ;; Auto vars:     Size  Location     Type
  8971 ;;		None
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  1  [STACK] void 
  8974 ;; Registers used:
  8975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8976 ;; Tracked objects:
  8977 ;;		On entry : 3F/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8985 ;;Total ram usage:        0 bytes
  8986 ;; Hardware stack levels used:    1
  8987 ;; Hardware stack levels required when called:   16
  8988 ;; This function calls:
  8989 ;;		_memset
  8990 ;; This function is called by:
  8991 ;;		_eaDogM_WriteString
  8992 ;;		_send_lcd_cmd_dma
  8993 ;; This function uses a reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text39
  8997  0186C4                     __ptext39:
  8998                           	opt callstack 0
  8999  0186C4                     _ringBufS_flush:
  9000                           	opt callstack 11
  9001                           
  9002                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9003                           ;stkvar	__this @ sp[(0)+-2]
  9004                           
  9005                           ; BSR set to: 59
  9006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9007                           ;incstack = 0
  9008  0186C4  0EFE               	movlw	-2
  9009  0186C6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9010  0186CC  0EFF               	movlw	-1
  9011  0186CE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9012  0186D4  0E42               	movlw	66
  9013  0186D6  240B               	addwf	(btemp+10)^0,w,c
  9014  0186D8  6ED9               	movwf	fsr2l,c
  9015  0186DA  0E00               	movlw	0
  9016  0186DC  200C               	addwfc	(btemp+11)^0,w,c
  9017  0186DE  6EDA               	movwf	fsr2h,c
  9018  0186E0  0E00               	movlw	0
  9019  0186E2  6EDF               	movwf	indf2,c
  9020                           
  9021                           ;ringbufs.c: 79:  _this->head = 0;
  9022                           ;stkvar	__this @ sp[(0)+-2]
  9023  0186E4  0EFE               	movlw	-2
  9024  0186E6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9025  0186EC  0EFF               	movlw	-1
  9026  0186EE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9027  0186F4  0E40               	movlw	64
  9028  0186F6  240B               	addwf	(btemp+10)^0,w,c
  9029  0186F8  6ED9               	movwf	fsr2l,c
  9030  0186FA  0E00               	movlw	0
  9031  0186FC  200C               	addwfc	(btemp+11)^0,w,c
  9032  0186FE  6EDA               	movwf	fsr2h,c
  9033  018700  0E00               	movlw	0
  9034  018702  6EDF               	movwf	indf2,c
  9035                           
  9036                           ;ringbufs.c: 80:  _this->tail = 0;
  9037                           ;stkvar	__this @ sp[(0)+-2]
  9038  018704  0EFE               	movlw	-2
  9039  018706  006F FF8C  F00B    	movff	plusw1,btemp+10
  9040  01870C  0EFF               	movlw	-1
  9041  01870E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9042  018714  0E41               	movlw	65
  9043  018716  240B               	addwf	(btemp+10)^0,w,c
  9044  018718  6ED9               	movwf	fsr2l,c
  9045  01871A  0E00               	movlw	0
  9046  01871C  200C               	addwfc	(btemp+11)^0,w,c
  9047  01871E  6EDA               	movwf	fsr2h,c
  9048  018720  0E00               	movlw	0
  9049  018722  6EDF               	movwf	indf2,c
  9050                           
  9051                           ;ringbufs.c: 81:  if (clearBuffer) {
  9052                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9053  018724  0EFD               	movlw	-3
  9054  018726  50E3               	movf	plusw1,w,c
  9055  018728  B4D8               	btfsc	status,2,c
  9056  01872A  D011               	goto	l1558
  9057                           
  9058                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9059  01872C  0E40               	movlw	64
  9060  01872E  6EE6               	movwf	postinc1,c
  9061  018730  0E00               	movlw	0
  9062  018732  6EE6               	movwf	postinc1,c
  9063  018734  0E00               	movlw	0
  9064  018736  6EE6               	movwf	postinc1,c
  9065  018738  0E00               	movlw	0
  9066  01873A  6EE6               	movwf	postinc1,c
  9067                           
  9068                           ;stkvar	__this @ sp[(-4)+-2]
  9069  01873C  0EFA               	movlw	-6
  9070  01873E  006F FF8F FFE6     	movff	plusw1,postinc1
  9071  018744  006F FF8F FFE6     	movff	plusw1,postinc1
  9072  01874A  EC3B  F0A9         	call	_memset	;wreg free
  9073  01874E                     l1558:
  9074                           
  9075                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9076  01874E  52E5               	movf	postdec1,f,c
  9077  018750  52E5               	movf	postdec1,f,c
  9078  018752  52E5               	movf	postdec1,f,c
  9079  018754  0012               	return		;funcret
  9080  018756                     __end_of_ringBufS_flush:
  9081                           	opt callstack 0
  9082                           
  9083 ;; *************** function _memset *****************
  9084 ;; Defined at:
  9085 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  dest            2  [STACK] PTR void 
  9088 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9089 ;;  c               2  [STACK] int 
  9090 ;;  n               2  [STACK] unsigned int 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  s               2  [STACK] PTR unsigned char 
  9093 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9094 ;;  k               2  [STACK] unsigned int 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  2  [STACK] PTR void 
  9097 ;; Registers used:
  9098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9108 ;;Total ram usage:        0 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:   15
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_ringBufS_init
  9115 ;;		_ringBufS_flush
  9116 ;; This function uses a reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text40
  9120  015276                     __ptext40:
  9121                           	opt callstack 0
  9122  015276                     _memset:
  9123                           	opt callstack 0
  9124                           
  9125                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9126  015276  52E6               	movf	postinc1,f,c
  9127  015278  52E6               	movf	postinc1,f,c
  9128  01527A  52E6               	movf	postinc1,f,c
  9129  01527C  52E6               	movf	postinc1,f,c
  9130                           
  9131                           ;stkvar	_dest @ sp[(-4)+-2]
  9132                           
  9133                           ;incstack = 0
  9134  01527E  0EFA               	movlw	-6
  9135  015280  006F FF8C  F00B    	movff	plusw1,btemp+10
  9136  015286  0EFB               	movlw	-5
  9137  015288  006F FF8C  F00C    	movff	plusw1,btemp+11
  9138                           
  9139                           ;stkvar	_s @ sp[(-4)+0]
  9140  01528E  0EFD               	movlw	-3
  9141  015290  0060  F033  FFE3   	movff	btemp+11,plusw1
  9142  015296  0EFC               	movlw	-4
  9143  015298  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9144                           
  9145                           ;stkvar	_n @ sp[(-4)+-6]
  9146  01529E  0EF6               	movlw	-10
  9147  0152A0  006F FF8C  F001    	movff	plusw1,btemp
  9148  0152A6  0EF7               	movlw	-9
  9149  0152A8  50E3               	movf	plusw1,w,c
  9150  0152AA  1001               	iorwf	btemp^0,w,c
  9151  0152AC  B4D8               	btfsc	status,2,c
  9152  0152AE  D154               	goto	u9480
  9153                           
  9154                           ;stkvar	_c @ sp[(-4)+-4]
  9155                           ;stkvar	_s @ sp[(-4)+0]
  9156  0152B0  0EFC               	movlw	-4
  9157  0152B2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9158  0152B8  0EFD               	movlw	-3
  9159  0152BA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9160  0152C0  0EF8               	movlw	-8
  9161  0152C2  006F FF8F FFDF     	movff	plusw1,indf2
  9162                           
  9163                           ;stkvar	_c @ sp[(-4)+-4]
  9164                           ;stkvar	_n @ sp[(-4)+-6]
  9165                           ;stkvar	_s @ sp[(-4)+0]
  9166  0152C8  0EFC               	movlw	-4
  9167  0152CA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9168  0152D0  0EFD               	movlw	-3
  9169  0152D2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9170  0152D8  0EF6               	movlw	-10
  9171  0152DA  50E3               	movf	plusw1,w,c
  9172  0152DC  260B               	addwf	(btemp+10)^0,f,c
  9173  0152DE  0EF7               	movlw	-9
  9174  0152E0  50E3               	movf	plusw1,w,c
  9175  0152E2  220C               	addwfc	(btemp+11)^0,f,c
  9176  0152E4  0EFF               	movlw	255
  9177  0152E6  240B               	addwf	(btemp+10)^0,w,c
  9178  0152E8  6ED9               	movwf	fsr2l,c
  9179  0152EA  0EFF               	movlw	255
  9180  0152EC  200C               	addwfc	(btemp+11)^0,w,c
  9181  0152EE  6EDA               	movwf	fsr2h,c
  9182  0152F0  0EF8               	movlw	-8
  9183  0152F2  006F FF8F FFDF     	movff	plusw1,indf2
  9184                           
  9185                           ;stkvar	_n @ sp[(-4)+-6]
  9186  0152F8  0EF7               	movlw	-9
  9187  0152FA  50E3               	movf	plusw1,w,c
  9188  0152FC  E108               	bnz	l10510
  9189  0152FE  0EF6               	movlw	-10
  9190  015300  006F FF8C  F001    	movff	plusw1,btemp
  9191  015306  0E03               	movlw	3
  9192  015308  5E01               	subwf	btemp^0,f,c
  9193  01530A  A0D8               	btfss	status,0,c
  9194  01530C  D125               	goto	u9480
  9195  01530E                     l10510:
  9196                           
  9197                           ;stkvar	_c @ sp[(-4)+-4]
  9198                           ;stkvar	_s @ sp[(-4)+0]
  9199  01530E  0EFC               	movlw	-4
  9200  015310  006F FF8C  F00B    	movff	plusw1,btemp+10
  9201  015316  0EFD               	movlw	-3
  9202  015318  006F FF8C  F00C    	movff	plusw1,btemp+11
  9203  01531E  0E01               	movlw	1
  9204  015320  240B               	addwf	(btemp+10)^0,w,c
  9205  015322  6ED9               	movwf	fsr2l,c
  9206  015324  0E00               	movlw	0
  9207  015326  200C               	addwfc	(btemp+11)^0,w,c
  9208  015328  6EDA               	movwf	fsr2h,c
  9209  01532A  0EF8               	movlw	-8
  9210  01532C  006F FF8F FFDF     	movff	plusw1,indf2
  9211                           
  9212                           ;stkvar	_c @ sp[(-4)+-4]
  9213                           ;stkvar	_s @ sp[(-4)+0]
  9214  015332  0EFC               	movlw	-4
  9215  015334  006F FF8C  F00B    	movff	plusw1,btemp+10
  9216  01533A  0EFD               	movlw	-3
  9217  01533C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9218  015342  0E02               	movlw	2
  9219  015344  240B               	addwf	(btemp+10)^0,w,c
  9220  015346  6ED9               	movwf	fsr2l,c
  9221  015348  0E00               	movlw	0
  9222  01534A  200C               	addwfc	(btemp+11)^0,w,c
  9223  01534C  6EDA               	movwf	fsr2h,c
  9224  01534E  0EF8               	movlw	-8
  9225  015350  006F FF8F FFDF     	movff	plusw1,indf2
  9226                           
  9227                           ;stkvar	_c @ sp[(-4)+-4]
  9228                           ;stkvar	_n @ sp[(-4)+-6]
  9229                           ;stkvar	_s @ sp[(-4)+0]
  9230  015356  0EFC               	movlw	-4
  9231  015358  006F FF8C  F00B    	movff	plusw1,btemp+10
  9232  01535E  0EFD               	movlw	-3
  9233  015360  006F FF8C  F00C    	movff	plusw1,btemp+11
  9234  015366  0EF6               	movlw	-10
  9235  015368  50E3               	movf	plusw1,w,c
  9236  01536A  260B               	addwf	(btemp+10)^0,f,c
  9237  01536C  0EF7               	movlw	-9
  9238  01536E  50E3               	movf	plusw1,w,c
  9239  015370  220C               	addwfc	(btemp+11)^0,f,c
  9240  015372  0EFE               	movlw	254
  9241  015374  240B               	addwf	(btemp+10)^0,w,c
  9242  015376  6ED9               	movwf	fsr2l,c
  9243  015378  0EFF               	movlw	255
  9244  01537A  200C               	addwfc	(btemp+11)^0,w,c
  9245  01537C  6EDA               	movwf	fsr2h,c
  9246  01537E  0EF8               	movlw	-8
  9247  015380  006F FF8F FFDF     	movff	plusw1,indf2
  9248                           
  9249                           ;stkvar	_c @ sp[(-4)+-4]
  9250                           ;stkvar	_n @ sp[(-4)+-6]
  9251                           ;stkvar	_s @ sp[(-4)+0]
  9252  015386  0EFC               	movlw	-4
  9253  015388  006F FF8C  F00B    	movff	plusw1,btemp+10
  9254  01538E  0EFD               	movlw	-3
  9255  015390  006F FF8C  F00C    	movff	plusw1,btemp+11
  9256  015396  0EF6               	movlw	-10
  9257  015398  50E3               	movf	plusw1,w,c
  9258  01539A  260B               	addwf	(btemp+10)^0,f,c
  9259  01539C  0EF7               	movlw	-9
  9260  01539E  50E3               	movf	plusw1,w,c
  9261  0153A0  220C               	addwfc	(btemp+11)^0,f,c
  9262  0153A2  0EFD               	movlw	253
  9263  0153A4  240B               	addwf	(btemp+10)^0,w,c
  9264  0153A6  6ED9               	movwf	fsr2l,c
  9265  0153A8  0EFF               	movlw	255
  9266  0153AA  200C               	addwfc	(btemp+11)^0,w,c
  9267  0153AC  6EDA               	movwf	fsr2h,c
  9268  0153AE  0EF8               	movlw	-8
  9269  0153B0  006F FF8F FFDF     	movff	plusw1,indf2
  9270                           
  9271                           ;stkvar	_n @ sp[(-4)+-6]
  9272  0153B6  0EF7               	movlw	-9
  9273  0153B8  50E3               	movf	plusw1,w,c
  9274  0153BA  E108               	bnz	l10516
  9275  0153BC  0EF6               	movlw	-10
  9276  0153BE  006F FF8C  F001    	movff	plusw1,btemp
  9277  0153C4  0E07               	movlw	7
  9278  0153C6  5E01               	subwf	btemp^0,f,c
  9279  0153C8  A0D8               	btfss	status,0,c
  9280  0153CA  D0C6               	goto	u9480
  9281  0153CC                     l10516:
  9282                           
  9283                           ;stkvar	_c @ sp[(-4)+-4]
  9284                           ;stkvar	_s @ sp[(-4)+0]
  9285  0153CC  0EFC               	movlw	-4
  9286  0153CE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9287  0153D4  0EFD               	movlw	-3
  9288  0153D6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9289  0153DC  0E03               	movlw	3
  9290  0153DE  240B               	addwf	(btemp+10)^0,w,c
  9291  0153E0  6ED9               	movwf	fsr2l,c
  9292  0153E2  0E00               	movlw	0
  9293  0153E4  200C               	addwfc	(btemp+11)^0,w,c
  9294  0153E6  6EDA               	movwf	fsr2h,c
  9295  0153E8  0EF8               	movlw	-8
  9296  0153EA  006F FF8F FFDF     	movff	plusw1,indf2
  9297                           
  9298                           ;stkvar	_c @ sp[(-4)+-4]
  9299                           ;stkvar	_n @ sp[(-4)+-6]
  9300                           ;stkvar	_s @ sp[(-4)+0]
  9301  0153F0  0EFC               	movlw	-4
  9302  0153F2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9303  0153F8  0EFD               	movlw	-3
  9304  0153FA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9305  015400  0EF6               	movlw	-10
  9306  015402  50E3               	movf	plusw1,w,c
  9307  015404  260B               	addwf	(btemp+10)^0,f,c
  9308  015406  0EF7               	movlw	-9
  9309  015408  50E3               	movf	plusw1,w,c
  9310  01540A  220C               	addwfc	(btemp+11)^0,f,c
  9311  01540C  0EFC               	movlw	252
  9312  01540E  240B               	addwf	(btemp+10)^0,w,c
  9313  015410  6ED9               	movwf	fsr2l,c
  9314  015412  0EFF               	movlw	255
  9315  015414  200C               	addwfc	(btemp+11)^0,w,c
  9316  015416  6EDA               	movwf	fsr2h,c
  9317  015418  0EF8               	movlw	-8
  9318  01541A  006F FF8F FFDF     	movff	plusw1,indf2
  9319                           
  9320                           ;stkvar	_n @ sp[(-4)+-6]
  9321  015420  0EF7               	movlw	-9
  9322  015422  50E3               	movf	plusw1,w,c
  9323  015424  E108               	bnz	l10522
  9324  015426  0EF6               	movlw	-10
  9325  015428  006F FF8C  F001    	movff	plusw1,btemp
  9326  01542E  0E09               	movlw	9
  9327  015430  5E01               	subwf	btemp^0,f,c
  9328  015432  A0D8               	btfss	status,0,c
  9329  015434  D091               	goto	u9480
  9330  015436                     l10522:
  9331                           
  9332                           ;stkvar	_s @ sp[(-4)+0]
  9333  015436  0EFC               	movlw	-4
  9334  015438  006F FF8C  F00B    	movff	plusw1,btemp+10
  9335  01543E  1E0B               	comf	(btemp+10)^0,f,c
  9336  015440  0EFD               	movlw	-3
  9337  015442  006F FF8C  F00C    	movff	plusw1,btemp+11
  9338  015448  1E0C               	comf	(btemp+11)^0,f,c
  9339  01544A  2A0B               	incf	(btemp+10)^0,f,c
  9340  01544C  B4D8               	btfsc	status,2,c
  9341  01544E  2A0C               	incf	(btemp+11)^0,f,c
  9342  015450  0E03               	movlw	3
  9343  015452  160B               	andwf	(btemp+10)^0,f,c
  9344  015454  0E00               	movlw	0
  9345  015456  160C               	andwf	(btemp+11)^0,f,c
  9346                           
  9347                           ;stkvar	_k @ sp[(-4)+2]
  9348  015458  0EFE               	movlw	-2
  9349  01545A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9350  015460  0EFF               	movlw	-1
  9351  015462  0060  F033  FFE3   	movff	btemp+11,plusw1
  9352                           
  9353                           ;stkvar	_k @ sp[(-4)+2]
  9354                           ;stkvar	_s @ sp[(-4)+0]
  9355  015468  0EFC               	movlw	-4
  9356  01546A  50E3               	movf	plusw1,w,c
  9357  01546C  6E01               	movwf	btemp^0,c
  9358  01546E  0EFE               	movlw	-2
  9359  015470  50E3               	movf	plusw1,w,c
  9360  015472  2601               	addwf	btemp^0,f,c
  9361  015474  0EFC               	movlw	-4
  9362  015476  0060  F007  FFE3   	movff	btemp,plusw1
  9363  01547C  0EFD               	movlw	-3
  9364  01547E  50E3               	movf	plusw1,w,c
  9365  015480  6E01               	movwf	btemp^0,c
  9366  015482  0EFF               	movlw	-1
  9367  015484  50E3               	movf	plusw1,w,c
  9368  015486  2201               	addwfc	btemp^0,f,c
  9369  015488  0EFD               	movlw	-3
  9370  01548A  0060  F007  FFE3   	movff	btemp,plusw1
  9371                           
  9372                           ;stkvar	_k @ sp[(-4)+2]
  9373                           ;stkvar	_n @ sp[(-4)+-6]
  9374  015490  0EF6               	movlw	-10
  9375  015492  50E3               	movf	plusw1,w,c
  9376  015494  6E01               	movwf	btemp^0,c
  9377  015496  0EFE               	movlw	-2
  9378  015498  50E3               	movf	plusw1,w,c
  9379  01549A  5E01               	subwf	btemp^0,f,c
  9380  01549C  0EF6               	movlw	-10
  9381  01549E  0060  F007  FFE3   	movff	btemp,plusw1
  9382  0154A4  0EF7               	movlw	-9
  9383  0154A6  50E3               	movf	plusw1,w,c
  9384  0154A8  6E01               	movwf	btemp^0,c
  9385  0154AA  0EFF               	movlw	-1
  9386  0154AC  50E3               	movf	plusw1,w,c
  9387  0154AE  5A01               	subwfb	btemp^0,f,c
  9388  0154B0  0EF7               	movlw	-9
  9389  0154B2  0060  F007  FFE3   	movff	btemp,plusw1
  9390  0154B8  0EFC               	movlw	252
  9391  0154BA  6E0B               	movwf	(btemp+10)^0,c
  9392  0154BC  0EFF               	movlw	255
  9393  0154BE  6E0C               	movwf	(btemp+11)^0,c
  9394                           
  9395                           ;stkvar	_n @ sp[(-4)+-6]
  9396  0154C0  0EF6               	movlw	-10
  9397  0154C2  006F FF8C  F001    	movff	plusw1,btemp
  9398  0154C8  500B               	movf	(btemp+10)^0,w,c
  9399  0154CA  1601               	andwf	btemp^0,f,c
  9400  0154CC  0EF6               	movlw	-10
  9401  0154CE  0060  F007  FFE3   	movff	btemp,plusw1
  9402  0154D4  0EF7               	movlw	-9
  9403  0154D6  006F FF8C  F001    	movff	plusw1,btemp
  9404  0154DC  500C               	movf	(btemp+11)^0,w,c
  9405  0154DE  1601               	andwf	btemp^0,f,c
  9406  0154E0  0EF7               	movlw	-9
  9407  0154E2  D02E               	goto	L6
  9408  0154E4                     l10530:
  9409                           
  9410                           ;stkvar	_c @ sp[(-4)+-4]
  9411                           ;stkvar	_s @ sp[(-4)+0]
  9412  0154E4  0EFC               	movlw	-4
  9413  0154E6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9414  0154EC  0EFD               	movlw	-3
  9415  0154EE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9416  0154F4  0EF8               	movlw	-8
  9417  0154F6  006F FF8F FFDF     	movff	plusw1,indf2
  9418                           
  9419                           ;stkvar	_n @ sp[(-4)+-6]
  9420  0154FC  0EF6               	movlw	-10
  9421  0154FE  006F FF8C  F001    	movff	plusw1,btemp
  9422  015504  0E01               	movlw	1
  9423  015506  5E01               	subwf	btemp^0,f,c
  9424  015508  0EF6               	movlw	-10
  9425  01550A  0060  F007  FFE3   	movff	btemp,plusw1
  9426  015510  0EF7               	movlw	-9
  9427  015512  006F FF8C  F001    	movff	plusw1,btemp
  9428  015518  0E00               	movlw	0
  9429  01551A  5A01               	subwfb	btemp^0,f,c
  9430  01551C  0EF7               	movlw	-9
  9431  01551E  0060  F007  FFE3   	movff	btemp,plusw1
  9432                           
  9433                           ;stkvar	_s @ sp[(-4)+0]
  9434  015524  0EFC               	movlw	-4
  9435  015526  50E3               	movf	plusw1,w,c
  9436  015528  0F01               	addlw	1
  9437  01552A  6E01               	movwf	btemp^0,c
  9438  01552C  0EFC               	movlw	-4
  9439  01552E  0060  F007  FFE3   	movff	btemp,plusw1
  9440  015534  6A01               	clrf	btemp^0,c
  9441  015536  0EFD               	movlw	-3
  9442  015538  50E3               	movf	plusw1,w,c
  9443  01553A  2001               	addwfc	btemp^0,w,c
  9444  01553C  6E01               	movwf	btemp^0,c
  9445  01553E  0EFD               	movlw	-3
  9446  015540                     L6:
  9447  015540  0060  F007  FFE3   	movff	btemp,plusw1
  9448                           
  9449                           ;stkvar	_n @ sp[(-4)+-6]
  9450  015546  0EF6               	movlw	-10
  9451  015548  006F FF8C  F001    	movff	plusw1,btemp
  9452  01554E  0EF7               	movlw	-9
  9453  015550  50E3               	movf	plusw1,w,c
  9454  015552  1001               	iorwf	btemp^0,w,c
  9455  015554  A4D8               	btfss	status,2,c
  9456  015556  D7C6               	goto	l10530
  9457  015558                     u9480:
  9458                           
  9459                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9460  015558  0EF6               	movlw	246
  9461  01555A  26E1               	addwf	fsr1l,f,c
  9462  01555C  0EFF               	movlw	255
  9463  01555E  22E2               	addwfc	fsr1h,f,c
  9464  015560  0012               	return		;funcret
  9465  015562                     __end_of_memset:
  9466                           	opt callstack 0
  9467                           
  9468 ;; *************** function _printf *****************
  9469 ;; Defined at:
  9470 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;  fmt             2  [STACK] PTR const unsigned char 
  9473 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  ap              2  [STACK] PTR void [1]
  9476 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9477 ;;  ret             2    0        int 
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  2  [STACK] int 
  9480 ;; Registers used:
  9481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9482 ;; Tracked objects:
  9483 ;;		On entry : 3F/3B
  9484 ;;		On exit  : 3F/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9491 ;;Total ram usage:        0 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; Hardware stack levels required when called:   23
  9494 ;; This function calls:
  9495 ;;		_vfprintf
  9496 ;; This function is called by:
  9497 ;;		_eaDogM_WriteString
  9498 ;;		_send_lcd_cmd_dma
  9499 ;; This function uses a reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text41
  9503  018CF2                     __ptext41:
  9504                           	opt callstack 0
  9505  018CF2                     _printf:
  9506                           	opt callstack 0
  9507                           
  9508                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9509  018CF2  52E6               	movf	postinc1,f,c
  9510  018CF4  52E6               	movf	postinc1,f,c
  9511                           
  9512                           ;stkvar	?_printf @ sp[(-2)+-3]
  9513                           
  9514                           ;incstack = 0
  9515  018CF6  0EFB               	movlw	251
  9516  018CF8  24E1               	addwf	fsr1l,w,c
  9517  018CFA  6E0B               	movwf	(btemp+10)^0,c
  9518  018CFC  0EFF               	movlw	255
  9519  018CFE  20E2               	addwfc	fsr1h,w,c
  9520  018D00  6E0C               	movwf	(btemp+11)^0,c
  9521                           
  9522                           ;stkvar	_ap @ sp[(-2)+0]
  9523  018D02  0EFF               	movlw	-1
  9524  018D04  0060  F033  FFE3   	movff	btemp+11,plusw1
  9525  018D0A  0EFE               	movlw	-2
  9526  018D0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9527                           
  9528                           ;stkvar	_ap @ sp[(-2)+0]
  9529  018D12  0EFE               	movlw	254
  9530  018D14  24E1               	addwf	fsr1l,w,c
  9531  018D16  6E01               	movwf	btemp^0,c
  9532  018D18  0EFF               	movlw	255
  9533  018D1A  20E2               	addwfc	fsr1h,w,c
  9534  018D1C  6E02               	movwf	(btemp+1)^0,c
  9535  018D1E  0060  F007  FFE6   	movff	btemp,postinc1
  9536  018D24  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9537                           
  9538                           ;stkvar	_fmt @ sp[(-4)+-3]
  9539  018D2A  0EF9               	movlw	-7
  9540  018D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9541  018D32  006F FF8F FFE6     	movff	plusw1,postinc1
  9542  018D38  0E00               	movlw	0
  9543  018D3A  6EE6               	movwf	postinc1,c
  9544  018D3C  0E00               	movlw	0
  9545  018D3E  6EE6               	movwf	postinc1,c
  9546  018D40  EC7C  F0C1         	call	_vfprintf	;wreg free
  9547                           
  9548                           ; BSR set to: 0
  9549                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9550  018D44  52E5               	movf	postdec1,f,c
  9551  018D46  52E5               	movf	postdec1,f,c
  9552  018D48  52E5               	movf	postdec1,f,c
  9553  018D4A  50E7               	movf	indf1,w,c
  9554  018D4C  5EE1               	subwf	fsr1l,f,c
  9555  018D4E  0E00               	movlw	0
  9556  018D50  5AE2               	subwfb	fsr1h,f,c
  9557  018D52  0012               	return		;funcret
  9558  018D54                     __end_of_printf:
  9559                           	opt callstack 0
  9560                           
  9561 ;; *************** function _vfprintf *****************
  9562 ;; Defined at:
  9563 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9566 ;;		 -> f(6), NULL(0), 
  9567 ;;  fmt             2  [STACK] PTR const unsigned char 
  9568 ;;		 -> STR_46(27), STR_44(3), STR_43(3), STR_42(19), 
  9569 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9570 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9571 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9572 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9573 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9574 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9575 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9576 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9577 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9578 ;;		 -> STR_1(17), 
  9579 ;;  ap              2  [STACK] PTR PTR void 
  9580 ;;		 -> ap(2), ap(2), 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  cfmt            2  [STACK] PTR unsigned char 
  9583 ;;		 -> STR_46(27), STR_44(3), STR_43(3), STR_42(19), 
  9584 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9585 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9586 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9587 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9588 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9589 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9590 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9591 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9592 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9593 ;;		 -> STR_1(17), 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  2  [STACK] int 
  9596 ;; Registers used:
  9597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/2
  9600 ;;		On exit  : 3F/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9607 ;;Total ram usage:        0 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; Hardware stack levels required when called:   22
  9610 ;; This function calls:
  9611 ;;		_vfpfcnvrt
  9612 ;; This function is called by:
  9613 ;;		_sprintf
  9614 ;;		_printf
  9615 ;; This function uses a reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text42
  9619  0182F8                     __ptext42:
  9620                           	opt callstack 0
  9621  0182F8                     _vfprintf:
  9622                           	opt callstack 0
  9623                           
  9624                           ; BSR set to: 0
  9625                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9626  0182F8  52E6               	movf	postinc1,f,c
  9627  0182FA  52E6               	movf	postinc1,f,c
  9628                           
  9629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9630                           ;stkvar	_fmt @ sp[(-2)+-4]
  9631                           
  9632                           ;incstack = 0
  9633 ;; hardware stack exceeded
  9634  0182FC  0EFA               	movlw	-6
  9635  0182FE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9636  018304  0EFB               	movlw	-5
  9637  018306  006F FF8C  F00C    	movff	plusw1,btemp+11
  9638                           
  9639                           ;stkvar	_cfmt @ sp[(-2)+0]
  9640  01830C  0EFF               	movlw	-1
  9641  01830E  0060  F033  FFE3   	movff	btemp+11,plusw1
  9642  018314  0EFE               	movlw	-2
  9643  018316  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9644                           
  9645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9646  01831C  0100               	movlb	0	; () banked
  9647  01831E  6BC7               	clrf	_nout& (0+255),b
  9648  018320  6BC8               	clrf	(_nout+1)& (0+255),b
  9649                           
  9650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9651  018322  D021               	goto	l11272
  9652  018324                     l11270:
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9656                           ;stkvar	_ap @ sp[(-2)+-6]
  9657  018324  0EF8               	movlw	-8
  9658  018326  006F FF8F FFE6     	movff	plusw1,postinc1
  9659  01832C  006F FF8F FFE6     	movff	plusw1,postinc1
  9660                           
  9661                           ;stkvar	_cfmt @ sp[(-4)+0]
  9662  018332  0EFC               	movlw	252
  9663  018334  24E1               	addwf	fsr1l,w,c
  9664  018336  6E01               	movwf	btemp^0,c
  9665  018338  0EFF               	movlw	255
  9666  01833A  20E2               	addwfc	fsr1h,w,c
  9667  01833C  6E02               	movwf	(btemp+1)^0,c
  9668  01833E  0060  F007  FFE6   	movff	btemp,postinc1
  9669  018344  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9670                           
  9671                           ;stkvar	_fp @ sp[(-6)+-2]
  9672  01834A  0EF8               	movlw	-8
  9673  01834C  006F FF8F FFE6     	movff	plusw1,postinc1
  9674  018352  006F FF8F FFE6     	movff	plusw1,postinc1
  9675  018358  EC22  F089         	call	_vfpfcnvrt	;wreg free
  9676  01835C  5001               	movf	btemp^0,w,c
  9677  01835E  0100               	movlb	0	; () banked
  9678  018360  27C7               	addwf	_nout& (0+255),f,b
  9679  018362  5002               	movf	(btemp+1)^0,w,c
  9680  018364  23C8               	addwfc	(_nout+1)& (0+255),f,b
  9681  018366                     l11272:
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9685                           ;stkvar	_cfmt @ sp[(-2)+0]
  9686  018366  50E1               	movf	fsr1l,w,c
  9687  018368  0FFE               	addlw	-2
  9688  01836A  6ED9               	movwf	fsr2l,c
  9689  01836C  50E2               	movf	fsr1h,w,c
  9690  01836E  6EDA               	movwf	fsr2h,c
  9691  018370  0EFF               	movlw	255
  9692  018372  22DA               	addwfc	fsr2h,f,c
  9693  018374  006F FF7B FFF6     	movff	postinc2,tblptrl
  9694  01837A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9695  018380                     	if	0	;tblptru may be non-zero
  9696  018380                     	endif
  9697  018380                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9698  018380  0E00               	movlw	low (__mediumconst shr (0+16))
  9699  018382  6EF8               	movwf	tblptru,c
  9700  018384                     	endif
  9701  018384  0008               	tblrd		*
  9702  018386  50F5               	movf	tablat,w,c
  9703  018388  0900               	iorlw	0
  9704  01838A  A4D8               	btfss	status,2,c
  9705  01838C  D7CB               	goto	l11270
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9709  01838E  0060  F31C  F001   	movff	_nout,btemp
  9710  018394  0060  F320  F002   	movff	_nout+1,btemp+1
  9711                           
  9712                           ; BSR set to: 0
  9713                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  9714  01839A  0EF8               	movlw	248
  9715  01839C  26E1               	addwf	fsr1l,f,c
  9716  01839E  0EFF               	movlw	255
  9717  0183A0  22E2               	addwfc	fsr1h,f,c
  9718  0183A2  0012               	return		;funcret
  9719  0183A4                     __end_of_vfprintf:
  9720                           	opt callstack 0
  9721                           
  9722 ;; *************** function _vfpfcnvrt *****************
  9723 ;; Defined at:
  9724 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9727 ;;		 -> f(6), NULL(0), 
  9728 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9729 ;;		 -> cfmt(2), 
  9730 ;;  ap              2  [STACK] PTR PTR void 
  9731 ;;		 -> ap(2), ap(2), 
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;  llu             8  [STACK] unsigned long long 
  9734 ;;  ll              8  [STACK] long long 
  9735 ;;  f               4  [STACK] long long 
  9736 ;;  ct              3  [STACK] unsigned char [3]
  9737 ;;  vp              3    0        PTR void 
  9738 ;;  cp              2  [STACK] PTR unsigned char 
  9739 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  9740 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  9741 ;;		 -> STR_3(6), V(188), 
  9742 ;;  i               2    0        int 
  9743 ;;  done            2    0        int 
  9744 ;;  c               1  [STACK] unsigned char 
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  2  [STACK] int 
  9747 ;; Registers used:
  9748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used:    1
  9760 ;; Hardware stack levels required when called:   21
  9761 ;; This function calls:
  9762 ;;		_atoi
  9763 ;;		_ctoa
  9764 ;;		_dtoa
  9765 ;;		_efgtoa
  9766 ;;		_fputc
  9767 ;;		_isdigit
  9768 ;;		_isupper
  9769 ;;		_stoa
  9770 ;;		_strncmp
  9771 ;;		_tolower
  9772 ;;		_xtoa
  9773 ;; This function is called by:
  9774 ;;		_vfprintf
  9775 ;; This function uses a reentrant model
  9776 ;;
  9777                           
  9778                           	psect	text43
  9779  011244                     __ptext43:
  9780                           	opt callstack 0
  9781  011244                     _vfpfcnvrt:
  9782                           	opt callstack 0
  9783                           
  9784                           ; BSR set to: 0
  9785                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9786  011244  0E20               	movlw	32
  9787  011246  26E1               	addwf	fsr1l,f,c
  9788  011248  0E00               	movlw	0
  9789  01124A  22E2               	addwfc	fsr1h,f,c
  9790                           
  9791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9792                           ;stkvar	_fmt @ sp[(-32)+-4]
  9793                           
  9794                           ;incstack = 0
  9795 ;; hardware stack exceeded
  9796  01124C  0EDC               	movlw	-36
  9797  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9798  011254  0EDD               	movlw	-35
  9799  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9800  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9801  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9802  011268                     	if	0	;tblptru may be non-zero
  9803  011268                     	endif
  9804  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9805  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9806  01126A  6EF8               	movwf	tblptru,c
  9807  01126C                     	endif
  9808  01126C  0008               	tblrd		*
  9809  01126E  50F5               	movf	tablat,w,c
  9810  011270  0A25               	xorlw	37
  9811  011272  A4D8               	btfss	status,2,c
  9812  011274  EF92  F08E         	goto	l11216
  9813                           
  9814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9815                           ;stkvar	_fmt @ sp[(-32)+-4]
  9816  011278  0EDC               	movlw	-36
  9817  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9818  011280  0EDD               	movlw	-35
  9819  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9820  011288  2ADE               	incf	postinc2,f,c
  9821  01128A  0E00               	movlw	0
  9822  01128C  22DD               	addwfc	postdec2,f,c
  9823                           
  9824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9825  01128E  6A21               	clrf	_width^0,c
  9826  011290  6A22               	clrf	(_width+1)^0,c
  9827  011292  6A25               	clrf	_flags^0,c
  9828  011294  6A26               	clrf	(_flags+1)^0,c
  9829                           
  9830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9831  011296  6823               	setf	_prec^0,c
  9832  011298  6824               	setf	(_prec+1)^0,c
  9833                           
  9834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9835                           ;stkvar	_fmt @ sp[(-32)+-4]
  9836  01129A  0EDC               	movlw	-36
  9837  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9838  0112A2  0EDD               	movlw	-35
  9839  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9840  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9841  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9842  0112B6                     	if	0	;tblptru may be non-zero
  9843  0112B6                     	endif
  9844  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9845  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9846  0112B8  6EF8               	movwf	tblptru,c
  9847  0112BA                     	endif
  9848  0112BA  0008               	tblrd		*
  9849  0112BC  50F5               	movf	tablat,w,c
  9850  0112BE  0A2A               	xorlw	42
  9851  0112C0  A4D8               	btfss	status,2,c
  9852  0112C2  D031               	goto	l11080
  9853                           
  9854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9855                           ;stkvar	_fmt @ sp[(-32)+-4]
  9856  0112C4  0EDC               	movlw	-36
  9857  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9858  0112CC  0EDD               	movlw	-35
  9859  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9860  0112D4  2ADE               	incf	postinc2,f,c
  9861  0112D6  0E00               	movlw	0
  9862  0112D8  22DD               	addwfc	postdec2,f,c
  9863                           
  9864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9865                           ;stkvar	_ap @ sp[(-32)+-6]
  9866  0112DA  0EDA               	movlw	-38
  9867  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9868  0112E2  0EDB               	movlw	-37
  9869  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9870  0112EA  0E02               	movlw	2
  9871  0112EC  5EDE               	subwf	postinc2,f,c
  9872  0112EE  0E00               	movlw	0
  9873  0112F0  5ADD               	subwfb	postdec2,f,c
  9874  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9875  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9876  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9877  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9878  01130A  006F FF78  F021    	movff	postinc2,_width
  9879  011310  006F FF74  F022    	movff	postdec2,_width+1
  9880                           
  9881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9882  011316  AE22               	btfss	(_width+1)^0,7,c
  9883  011318  D066               	goto	u10540
  9884                           
  9885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  9886  01131A  8025               	bsf	_flags^0,0,c
  9887                           
  9888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  9889  01131C  6C21               	negf	_width^0,c
  9890  01131E  1E22               	comf	(_width+1)^0,f,c
  9891  011320  B0D8               	btfsc	status,0,c
  9892  011322  2A22               	incf	(_width+1)^0,f,c
  9893  011324  D060               	goto	u10540
  9894  011326                     l11080:
  9895                           
  9896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  9897                           ;stkvar	_fmt @ sp[(-32)+-4]
  9898  011326  0EDC               	movlw	-36
  9899  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  9900  01132E  0EDD               	movlw	-35
  9901  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  9902  011336  006F FF78  F00B    	movff	postinc2,btemp+10
  9903  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
  9904  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9905  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
  9906  01134E  ECBD  F0AE         	call	_atoi	;wreg free
  9907  011352  0060  F004  F021   	movff	btemp,_width
  9908  011358  0060  F008  F022   	movff	btemp+1,_width+1
  9909                           
  9910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9911  01135E  D00B               	goto	l11084
  9912  011360                     l11082:
  9913                           
  9914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  9915                           ;stkvar	_fmt @ sp[(-32)+-4]
  9916  011360  0EDC               	movlw	-36
  9917  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  9918  011368  0EDD               	movlw	-35
  9919  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9920  011370  2ADE               	incf	postinc2,f,c
  9921  011372  0E00               	movlw	0
  9922  011374  22DD               	addwfc	postdec2,f,c
  9923  011376                     l11084:
  9924  011376  0ED0               	movlw	208
  9925  011378  6E0B               	movwf	(btemp+10)^0,c
  9926  01137A  0EFF               	movlw	255
  9927  01137C  6E0C               	movwf	(btemp+11)^0,c
  9928                           
  9929                           ;stkvar	_fmt @ sp[(-32)+-4]
  9930  01137E  0EDC               	movlw	-36
  9931  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  9932  011386  0EDD               	movlw	-35
  9933  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  9934  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9935  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  9936  01139A                     	if	0	;tblptru may be non-zero
  9937  01139A                     	endif
  9938  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9939  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  9940  01139C  6EF8               	movwf	tblptru,c
  9941  01139E                     	endif
  9942  01139E  0008               	tblrd		*
  9943  0113A0  50F5               	movf	tablat,w,c
  9944  0113A2  6E09               	movwf	(btemp+8)^0,c
  9945  0113A4  6A0A               	clrf	(btemp+9)^0,c
  9946  0113A6  500B               	movf	(btemp+10)^0,w,c
  9947  0113A8  2609               	addwf	(btemp+8)^0,f,c
  9948  0113AA  500C               	movf	(btemp+11)^0,w,c
  9949  0113AC  220A               	addwfc	(btemp+9)^0,f,c
  9950  0113AE  500A               	movf	(btemp+9)^0,w,c
  9951  0113B0  E106               	bnz	u10520
  9952  0113B2  0E0A               	movlw	10
  9953  0113B4  5C09               	subwf	(btemp+8)^0,w,c
  9954  0113B6  B0D8               	btfsc	status,0,c
  9955  0113B8  D002               	goto	u10520
  9956  0113BA  0E01               	movlw	1
  9957  0113BC  D001               	goto	u10530
  9958  0113BE                     u10520:
  9959  0113BE  0E00               	movlw	0
  9960  0113C0                     u10530:
  9961  0113C0  6E0B               	movwf	(btemp+10)^0,c
  9962  0113C2  6A0C               	clrf	(btemp+11)^0,c
  9963                           
  9964                           ;stkvar	_vfpfcnvrt$5189 @ sp[(-32)+4]
  9965  0113C4  0EE4               	movlw	-28
  9966  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9967  0113CC  0EE5               	movlw	-27
  9968  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  9969                           
  9970                           ;stkvar	_vfpfcnvrt$5189 @ sp[(-32)+4]
  9971  0113D4  0EE4               	movlw	-28
  9972  0113D6  006F FF8C  F001    	movff	plusw1,btemp
  9973  0113DC  0EE5               	movlw	-27
  9974  0113DE  50E3               	movf	plusw1,w,c
  9975  0113E0  1001               	iorwf	btemp^0,w,c
  9976  0113E2  A4D8               	btfss	status,2,c
  9977  0113E4  D7BD               	goto	l11082
  9978  0113E6                     u10540:
  9979                           
  9980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  9981                           ;stkvar	_fmt @ sp[(-32)+-4]
  9982  0113E6  0EDC               	movlw	-36
  9983  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9984  0113EE  0EDD               	movlw	-35
  9985  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9986  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9987  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9988  011402                     	if	0	;tblptru may be non-zero
  9989  011402                     	endif
  9990  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9991  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  9992  011404  6EF8               	movwf	tblptru,c
  9993  011406                     	endif
  9994  011406  0008               	tblrd		*
  9995  011408  50F5               	movf	tablat,w,c
  9996  01140A  0A2E               	xorlw	46
  9997  01140C  A4D8               	btfss	status,2,c
  9998  01140E  D0AC               	goto	u10590
  9999                           
 10000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10001  011410  6A23               	clrf	_prec^0,c
 10002  011412  6A24               	clrf	(_prec+1)^0,c
 10003                           
 10004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10005                           ;stkvar	_fmt @ sp[(-32)+-4]
 10006  011414  0EDC               	movlw	-36
 10007  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10008  01141C  0EDD               	movlw	-35
 10009  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10010  011424  2ADE               	incf	postinc2,f,c
 10011  011426  0E00               	movlw	0
 10012  011428  22DD               	addwfc	postdec2,f,c
 10013                           
 10014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10015                           ;stkvar	_fmt @ sp[(-32)+-4]
 10016  01142A  0EDC               	movlw	-36
 10017  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10018  011432  0EDD               	movlw	-35
 10019  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10020  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10021  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10022  011446                     	if	0	;tblptru may be non-zero
 10023  011446                     	endif
 10024  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10025  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10026  011448  6EF8               	movwf	tblptru,c
 10027  01144A                     	endif
 10028  01144A  0008               	tblrd		*
 10029  01144C  50F5               	movf	tablat,w,c
 10030  01144E  0A2A               	xorlw	42
 10031  011450  A4D8               	btfss	status,2,c
 10032  011452  D02A               	goto	l11102
 10033                           
 10034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10035                           ;stkvar	_fmt @ sp[(-32)+-4]
 10036  011454  0EDC               	movlw	-36
 10037  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10038  01145C  0EDD               	movlw	-35
 10039  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10040  011464  2ADE               	incf	postinc2,f,c
 10041  011466  0E00               	movlw	0
 10042  011468  22DD               	addwfc	postdec2,f,c
 10043                           
 10044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10045                           ;stkvar	_ap @ sp[(-32)+-6]
 10046  01146A  0EDA               	movlw	-38
 10047  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10048  011472  0EDB               	movlw	-37
 10049  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10050  01147A  0E02               	movlw	2
 10051  01147C  5EDE               	subwf	postinc2,f,c
 10052  01147E  0E00               	movlw	0
 10053  011480  5ADD               	subwfb	postdec2,f,c
 10054  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10055  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10056  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10057  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10058  01149A  006F FF78  F023    	movff	postinc2,_prec
 10059  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10060                           
 10061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10062  0114A6  D060               	goto	u10590
 10063  0114A8                     l11102:
 10064                           
 10065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10066                           ;stkvar	_fmt @ sp[(-32)+-4]
 10067  0114A8  0EDC               	movlw	-36
 10068  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10069  0114B0  0EDD               	movlw	-35
 10070  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10071  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10072  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10073  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10074  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10075  0114D0  ECBD  F0AE         	call	_atoi	;wreg free
 10076  0114D4  0060  F004  F023   	movff	btemp,_prec
 10077  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10078                           
 10079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10080  0114E0  D00B               	goto	l11106
 10081  0114E2                     l11104:
 10082                           
 10083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10084                           ;stkvar	_fmt @ sp[(-32)+-4]
 10085  0114E2  0EDC               	movlw	-36
 10086  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10087  0114EA  0EDD               	movlw	-35
 10088  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10089  0114F2  2ADE               	incf	postinc2,f,c
 10090  0114F4  0E00               	movlw	0
 10091  0114F6  22DD               	addwfc	postdec2,f,c
 10092  0114F8                     l11106:
 10093  0114F8  0ED0               	movlw	208
 10094  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10095  0114FC  0EFF               	movlw	255
 10096  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10097                           
 10098                           ;stkvar	_fmt @ sp[(-32)+-4]
 10099  011500  0EDC               	movlw	-36
 10100  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10101  011508  0EDD               	movlw	-35
 10102  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10103  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10104  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10105  01151C                     	if	0	;tblptru may be non-zero
 10106  01151C                     	endif
 10107  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10108  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10109  01151E  6EF8               	movwf	tblptru,c
 10110  011520                     	endif
 10111  011520  0008               	tblrd		*
 10112  011522  50F5               	movf	tablat,w,c
 10113  011524  6E09               	movwf	(btemp+8)^0,c
 10114  011526  6A0A               	clrf	(btemp+9)^0,c
 10115  011528  500B               	movf	(btemp+10)^0,w,c
 10116  01152A  2609               	addwf	(btemp+8)^0,f,c
 10117  01152C  500C               	movf	(btemp+11)^0,w,c
 10118  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10119  011530  500A               	movf	(btemp+9)^0,w,c
 10120  011532  E106               	bnz	u10570
 10121  011534  0E0A               	movlw	10
 10122  011536  5C09               	subwf	(btemp+8)^0,w,c
 10123  011538  B0D8               	btfsc	status,0,c
 10124  01153A  D002               	goto	u10570
 10125  01153C  0E01               	movlw	1
 10126  01153E  D001               	goto	u10580
 10127  011540                     u10570:
 10128  011540  0E00               	movlw	0
 10129  011542                     u10580:
 10130  011542  6E0B               	movwf	(btemp+10)^0,c
 10131  011544  6A0C               	clrf	(btemp+11)^0,c
 10132                           
 10133                           ;stkvar	_vfpfcnvrt$5190 @ sp[(-32)+0]
 10134  011546  0EE0               	movlw	-32
 10135  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10136  01154E  0EE1               	movlw	-31
 10137  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10138                           
 10139                           ;stkvar	_vfpfcnvrt$5190 @ sp[(-32)+0]
 10140  011556  0EE0               	movlw	-32
 10141  011558  006F FF8C  F001    	movff	plusw1,btemp
 10142  01155E  0EE1               	movlw	-31
 10143  011560  50E3               	movf	plusw1,w,c
 10144  011562  1001               	iorwf	btemp^0,w,c
 10145  011564  A4D8               	btfss	status,2,c
 10146  011566  D7BD               	goto	l11104
 10147  011568                     u10590:
 10148                           
 10149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10150                           ;stkvar	_fmt @ sp[(-32)+-4]
 10151  011568  0EDC               	movlw	-36
 10152  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10153  011570  0EDD               	movlw	-35
 10154  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10155  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10156  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10157  011584                     	if	0	;tblptru may be non-zero
 10158  011584                     	endif
 10159  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10160  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10161  011586  6EF8               	movwf	tblptru,c
 10162  011588                     	endif
 10163  011588  0008               	tblrd		*
 10164  01158A  50F5               	movf	tablat,w,c
 10165  01158C  6EE6               	movwf	postinc1,c
 10166  01158E  0E00               	movlw	0
 10167  011590  6EE6               	movwf	postinc1,c
 10168  011592  ECC2  F0C4         	call	_tolower	;wreg free
 10169                           
 10170                           ;stkvar	_ct @ sp[(-32)+26]
 10171  011596  0EFA               	movlw	-6
 10172  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10173                           
 10174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10175                           ;stkvar	_ct @ sp[(-32)+26]
 10176  01159E  0EFA               	movlw	-6
 10177  0115A0  50E3               	movf	plusw1,w,c
 10178  0115A2  B4D8               	btfsc	status,2,c
 10179  0115A4  D05B               	goto	l11122
 10180                           
 10181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10182                           ;stkvar	_ct @ sp[(-32)+26]
 10183  0115A6  0EFB               	movlw	251
 10184  0115A8  24E1               	addwf	fsr1l,w,c
 10185  0115AA  6ED9               	movwf	fsr2l,c
 10186  0115AC  0EFF               	movlw	255
 10187  0115AE  20E2               	addwfc	fsr1h,w,c
 10188  0115B0  6EDA               	movwf	fsr2h,c
 10189                           
 10190                           ;stkvar	_fmt @ sp[(-32)+-4]
 10191  0115B2  0EDC               	movlw	-36
 10192  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10193  0115BA  0EDD               	movlw	-35
 10194  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10195  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10196  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10197  0115CE  0E01               	movlw	1
 10198  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10199  0115D2  0E00               	movlw	0
 10200  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10201  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10202  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10203  0115E2                     	if	0	;tblptru may be non-zero
 10204  0115E2                     	endif
 10205  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10206  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10207  0115E4  6EF8               	movwf	tblptru,c
 10208  0115E6                     	endif
 10209  0115E6  0008               	tblrd		*
 10210  0115E8  50F5               	movf	tablat,w,c
 10211  0115EA  6EE6               	movwf	postinc1,c
 10212  0115EC  0E00               	movlw	0
 10213  0115EE  6EE6               	movwf	postinc1,c
 10214  0115F0  ECC2  F0C4         	call	_tolower	;wreg free
 10215  0115F4  5001               	movf	btemp^0,w,c
 10216  0115F6  6EDF               	movwf	indf2,c
 10217                           
 10218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10219                           ;stkvar	_ct @ sp[(-32)+26]
 10220  0115F8  0EFB               	movlw	251
 10221  0115FA  24E1               	addwf	fsr1l,w,c
 10222  0115FC  6ED9               	movwf	fsr2l,c
 10223  0115FE  0EFF               	movlw	255
 10224  011600  20E2               	addwfc	fsr1h,w,c
 10225  011602  6EDA               	movwf	fsr2h,c
 10226  011604  50DF               	movf	indf2,w,c
 10227  011606  B4D8               	btfsc	status,2,c
 10228  011608  D029               	goto	l11122
 10229                           
 10230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10231                           ;stkvar	_ct @ sp[(-32)+26]
 10232  01160A  0EFC               	movlw	252
 10233  01160C  24E1               	addwf	fsr1l,w,c
 10234  01160E  6ED9               	movwf	fsr2l,c
 10235  011610  0EFF               	movlw	255
 10236  011612  20E2               	addwfc	fsr1h,w,c
 10237  011614  6EDA               	movwf	fsr2h,c
 10238                           
 10239                           ;stkvar	_fmt @ sp[(-32)+-4]
 10240  011616  0EDC               	movlw	-36
 10241  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10242  01161E  0EDD               	movlw	-35
 10243  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10244  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10245  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10246  011632  0E02               	movlw	2
 10247  011634  260B               	addwf	(btemp+10)^0,f,c
 10248  011636  0E00               	movlw	0
 10249  011638  220C               	addwfc	(btemp+11)^0,f,c
 10250  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10251  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10252  011646                     	if	0	;tblptru may be non-zero
 10253  011646                     	endif
 10254  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10255  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10256  011648  6EF8               	movwf	tblptru,c
 10257  01164A                     	endif
 10258  01164A  0008               	tblrd		*
 10259  01164C  50F5               	movf	tablat,w,c
 10260  01164E  6EE6               	movwf	postinc1,c
 10261  011650  0E00               	movlw	0
 10262  011652  6EE6               	movwf	postinc1,c
 10263  011654  ECC2  F0C4         	call	_tolower	;wreg free
 10264  011658  5001               	movf	btemp^0,w,c
 10265  01165A  6EDF               	movwf	indf2,c
 10266  01165C                     l11122:
 10267                           
 10268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10269                           ;stkvar	_fmt @ sp[(-32)+-4]
 10270  01165C  0EDC               	movlw	-36
 10271  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10272  011664  0EDD               	movlw	-35
 10273  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10274  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10275  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10276  011678                     	if	0	;tblptru may be non-zero
 10277  011678                     	endif
 10278  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10279  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10280  01167A  6EF8               	movwf	tblptru,c
 10281  01167C                     	endif
 10282  01167C  0008               	tblrd		*
 10283  01167E  50F5               	movf	tablat,w,c
 10284  011680  0A63               	xorlw	99
 10285  011682  A4D8               	btfss	status,2,c
 10286  011684  D036               	goto	l11132
 10287                           
 10288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10289                           ;stkvar	_fmt @ sp[(-32)+-4]
 10290  011686  0EDC               	movlw	-36
 10291  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10292  01168E  0EDD               	movlw	-35
 10293  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10294  011696  2ADE               	incf	postinc2,f,c
 10295  011698  0E00               	movlw	0
 10296  01169A  22DD               	addwfc	postdec2,f,c
 10297                           
 10298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10299                           ;stkvar	_ap @ sp[(-32)+-6]
 10300  01169C  0EDA               	movlw	-38
 10301  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10302  0116A4  0EDB               	movlw	-37
 10303  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10304  0116AC  0E02               	movlw	2
 10305  0116AE  5EDE               	subwf	postinc2,f,c
 10306  0116B0  0E00               	movlw	0
 10307  0116B2  5ADD               	subwfb	postdec2,f,c
 10308  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10309  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10310  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10311  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10312  0116CC  50DF               	movf	indf2,w,c
 10313  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10314                           
 10315                           ;stkvar	_c @ sp[(-32)+31]
 10316  0116D0  0EFF               	movlw	-1
 10317  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10318                           
 10319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10320                           ;stkvar	_c @ sp[(-32)+31]
 10321  0116D8  0EFF               	movlw	-1
 10322  0116DA  50E3               	movf	plusw1,w,c
 10323  0116DC  6EE6               	movwf	postinc1,c
 10324                           
 10325                           ;stkvar	_fp @ sp[(-33)+-2]
 10326  0116DE  0EDD               	movlw	-35
 10327  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10328  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10329  0116EC  EC3C  F0C4         	call	_ctoa	;wreg free
 10330  0116F0  D343               	goto	l2208
 10331  0116F2                     l11132:
 10332                           
 10333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10334                           ;stkvar	_fmt @ sp[(-32)+-4]
 10335  0116F2  0EDC               	movlw	-36
 10336  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10337  0116FA  0EDD               	movlw	-35
 10338  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10339  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
 10340  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
 10341  01170E                     	if	0	;tblptru may be non-zero
 10342  01170E                     	endif
 10343  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10344  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
 10345  011710  6EF8               	movwf	tblptru,c
 10346  011712                     	endif
 10347  011712  0008               	tblrd		*
 10348  011714  50F5               	movf	tablat,w,c
 10349  011716  0A64               	xorlw	100
 10350  011718  B4D8               	btfsc	status,2,c
 10351  01171A  D015               	goto	u10640
 10352                           
 10353                           ;stkvar	_fmt @ sp[(-32)+-4]
 10354  01171C  0EDC               	movlw	-36
 10355  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10356  011724  0EDD               	movlw	-35
 10357  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
 10358  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10359  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
 10360  011738                     	if	0	;tblptru may be non-zero
 10361  011738                     	endif
 10362  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10363  011738  0E00               	movlw	low (__mediumconst shr (0+16))
 10364  01173A  6EF8               	movwf	tblptru,c
 10365  01173C                     	endif
 10366  01173C  0008               	tblrd		*
 10367  01173E  50F5               	movf	tablat,w,c
 10368  011740  0A69               	xorlw	105
 10369  011742  A4D8               	btfss	status,2,c
 10370  011744  D075               	goto	l11144
 10371  011746                     u10640:
 10372                           
 10373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10374                           ;stkvar	_fmt @ sp[(-32)+-4]
 10375  011746  0EDC               	movlw	-36
 10376  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
 10377  01174E  0EDD               	movlw	-35
 10378  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
 10379  011756  2ADE               	incf	postinc2,f,c
 10380  011758  0E00               	movlw	0
 10381  01175A  22DD               	addwfc	postdec2,f,c
 10382                           
 10383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10384                           ;stkvar	_ap @ sp[(-32)+-6]
 10385  01175C  0EDA               	movlw	-38
 10386  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10387  011764  0EDB               	movlw	-37
 10388  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
 10389  01176C  0E02               	movlw	2
 10390  01176E  5EDE               	subwf	postinc2,f,c
 10391  011770  0E00               	movlw	0
 10392  011772  5ADD               	subwfb	postdec2,f,c
 10393  011774  006F FF78  F00B    	movff	postinc2,btemp+10
 10394  01177A  006F FF74  F00C    	movff	postdec2,btemp+11
 10395  011780  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10396  011786  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10397  01178C  006F FF78  F00B    	movff	postinc2,btemp+10
 10398  011792  006F FF74  F00C    	movff	postdec2,btemp+11
 10399                           
 10400                           ;stkvar	_ll @ sp[(-32)+14]
 10401  011798  0EEE               	movlw	-18
 10402  01179A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10403  0117A0  0EEF               	movlw	-17
 10404  0117A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10405  0117A8  6A01               	clrf	btemp^0,c
 10406  0117AA  BEE3               	btfsc	plusw1,7,c
 10407  0117AC  6801               	setf	btemp^0,c
 10408  0117AE  0EF0               	movlw	-16
 10409  0117B0  0060  F007  FFE3   	movff	btemp,plusw1
 10410  0117B6  0EF1               	movlw	-15
 10411  0117B8  0060  F007  FFE3   	movff	btemp,plusw1
 10412  0117BE  0EF2               	movlw	-14
 10413  0117C0  0060  F007  FFE3   	movff	btemp,plusw1
 10414  0117C6  0EF3               	movlw	-13
 10415  0117C8  0060  F007  FFE3   	movff	btemp,plusw1
 10416  0117CE  0EF4               	movlw	-12
 10417  0117D0  0060  F007  FFE3   	movff	btemp,plusw1
 10418  0117D6  0EF5               	movlw	-11
 10419  0117D8  0060  F007  FFE3   	movff	btemp,plusw1
 10420                           
 10421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10422                           ;stkvar	_ll @ sp[(-32)+14]
 10423  0117DE  50E1               	movf	fsr1l,w,c
 10424  0117E0  0FEE               	addlw	-18
 10425  0117E2  6ED9               	movwf	fsr2l,c
 10426  0117E4  50E2               	movf	fsr1h,w,c
 10427  0117E6  6EDA               	movwf	fsr2h,c
 10428  0117E8  0EFF               	movlw	255
 10429  0117EA  22DA               	addwfc	fsr2h,f,c
 10430  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
 10431  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
 10432  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
 10433  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
 10434  011804  006F FF7B FFE6     	movff	postinc2,postinc1
 10435  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
 10436  011810  006F FF7B FFE6     	movff	postinc2,postinc1
 10437  011816  006F FF7B FFE6     	movff	postinc2,postinc1
 10438                           
 10439                           ;stkvar	_fp @ sp[(-40)+-2]
 10440  01181C  0ED6               	movlw	-42
 10441  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
 10442  011824  006F FF8F FFE6     	movff	plusw1,postinc1
 10443  01182A  EC68  F0A3         	call	_dtoa	;wreg free
 10444  01182E  D2A4               	goto	l2208
 10445  011830                     l11144:
 10446                           
 10447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10448                           ;stkvar	_ct @ sp[(-32)+26]
 10449  011830  0EFA               	movlw	-6
 10450  011832  006F FF8C  F001    	movff	plusw1,btemp
 10451  011838  0E66               	movlw	102
 10452  01183A  1801               	xorwf	btemp^0,w,c
 10453  01183C  A4D8               	btfss	status,2,c
 10454  01183E  D06E               	goto	l11156
 10455                           
 10456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 10457                           ;stkvar	_fmt @ sp[(-32)+-4]
 10458  011840  0EDC               	movlw	-36
 10459  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
 10460  011848  0EDD               	movlw	-35
 10461  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10462  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
 10463  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
 10464  01185C                     	if	0	;tblptru may be non-zero
 10465  01185C                     	endif
 10466  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10467  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
 10468  01185E  6EF8               	movwf	tblptru,c
 10469  011860                     	endif
 10470                           
 10471                           ;stkvar	_c @ sp[(-32)+31]
 10472  011860  0008               	tblrd		*
 10473  011862  0EFF               	movlw	-1
 10474  011864  006F FFD7 FFE3     	movff	tablat,plusw1
 10475                           
 10476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 10477                           ;stkvar	_fmt @ sp[(-32)+-4]
 10478  01186A  0EDC               	movlw	-36
 10479  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10480  011872  0EDD               	movlw	-35
 10481  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
 10482  01187A  2ADE               	incf	postinc2,f,c
 10483  01187C  0E00               	movlw	0
 10484  01187E  22DD               	addwfc	postdec2,f,c
 10485                           
 10486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 10487                           ;stkvar	_ap @ sp[(-32)+-6]
 10488  011880  0EDA               	movlw	-38
 10489  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
 10490  011888  0EDB               	movlw	-37
 10491  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10492  011890  0E04               	movlw	4
 10493  011892  5EDE               	subwf	postinc2,f,c
 10494  011894  0E00               	movlw	0
 10495  011896  5ADD               	subwfb	postdec2,f,c
 10496  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10497  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10498  0118A4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10499  0118AA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10500  0118B0  006F FF78  F009    	movff	postinc2,btemp+8
 10501  0118B6  006F FF78  F00A    	movff	postinc2,btemp+9
 10502  0118BC  006F FF78  F00B    	movff	postinc2,btemp+10
 10503  0118C2  006F FF78  F00C    	movff	postinc2,btemp+11
 10504                           
 10505                           ;stkvar	_f @ sp[(-32)+22]
 10506  0118C8  0EF6               	movlw	-10
 10507  0118CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 10508  0118D0  0EF7               	movlw	-9
 10509  0118D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10510  0118D8  0EF8               	movlw	-8
 10511  0118DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10512  0118E0  0EF9               	movlw	-7
 10513  0118E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10514  0118E8                     l11152:
 10515                           
 10516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 10517                           ;stkvar	_c @ sp[(-32)+31]
 10518  0118E8  0EFF               	movlw	-1
 10519  0118EA  50E3               	movf	plusw1,w,c
 10520  0118EC  6EE6               	movwf	postinc1,c
 10521                           
 10522                           ;stkvar	_f @ sp[(-33)+22]
 10523  0118EE  0EF5               	movlw	-11
 10524  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10525  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10526  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10527  011902  006F FF8F FFE6     	movff	plusw1,postinc1
 10528                           
 10529                           ;stkvar	_fp @ sp[(-37)+-2]
 10530  011908  0ED9               	movlw	-39
 10531  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
 10532  011910  006F FF8F FFE6     	movff	plusw1,postinc1
 10533  011916  EC00  F080         	call	_efgtoa	;wreg free
 10534  01191A  D22E               	goto	l2208
 10535  01191C                     l11156:
 10536                           
 10537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10538  01191C  0E02               	movlw	2
 10539  01191E  6EE6               	movwf	postinc1,c
 10540  011920  0E00               	movlw	0
 10541  011922  6EE6               	movwf	postinc1,c
 10542  011924  0EF5               	movlw	low STR_55
 10543  011926  6EE6               	movwf	postinc1,c
 10544  011928  0EFF               	movlw	high STR_55
 10545  01192A  6EE6               	movwf	postinc1,c
 10546                           
 10547                           ;stkvar	_ct @ sp[(-36)+26]
 10548  01192C  0EF6               	movlw	246
 10549  01192E  24E1               	addwf	fsr1l,w,c
 10550  011930  6E01               	movwf	btemp^0,c
 10551  011932  0EFF               	movlw	255
 10552  011934  20E2               	addwfc	fsr1h,w,c
 10553  011936  6E02               	movwf	(btemp+1)^0,c
 10554  011938  0060  F007  FFE6   	movff	btemp,postinc1
 10555  01193E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10556  011944  EC22  F0B4         	call	_strncmp	;wreg free
 10557  011948  5001               	movf	btemp^0,w,c
 10558  01194A  1002               	iorwf	(btemp+1)^0,w,c
 10559  01194C  A4D8               	btfss	status,2,c
 10560  01194E  D096               	goto	l11176
 10561                           
 10562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10563                           ;stkvar	_fmt @ sp[(-32)+-4]
 10564  011950  0EDC               	movlw	-36
 10565  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
 10566  011958  0EDD               	movlw	-35
 10567  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10568  011960  006F FF78  F00B    	movff	postinc2,btemp+10
 10569  011966  006F FF74  F00C    	movff	postdec2,btemp+11
 10570  01196C  0E01               	movlw	1
 10571  01196E  260B               	addwf	(btemp+10)^0,f,c
 10572  011970  0E00               	movlw	0
 10573  011972  220C               	addwfc	(btemp+11)^0,f,c
 10574  011974  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10575  01197A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10576  011980                     	if	0	;tblptru may be non-zero
 10577  011980                     	endif
 10578  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10579  011980  0E00               	movlw	low (__mediumconst shr (0+16))
 10580  011982  6EF8               	movwf	tblptru,c
 10581  011984                     	endif
 10582                           
 10583                           ;stkvar	_c @ sp[(-32)+31]
 10584  011984  0008               	tblrd		*
 10585  011986  0EFF               	movlw	-1
 10586  011988  006F FFD7 FFE3     	movff	tablat,plusw1
 10587  01198E  0EBF               	movlw	191
 10588  011990  6E0B               	movwf	(btemp+10)^0,c
 10589  011992  0EFF               	movlw	255
 10590  011994  6E0C               	movwf	(btemp+11)^0,c
 10591                           
 10592                           ;stkvar	_fmt @ sp[(-32)+-4]
 10593  011996  0EDC               	movlw	-36
 10594  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
 10595  01199E  0EDD               	movlw	-35
 10596  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10597  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10598  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10599  0119B2                     	if	0	;tblptru may be non-zero
 10600  0119B2                     	endif
 10601  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10602  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
 10603  0119B4  6EF8               	movwf	tblptru,c
 10604  0119B6                     	endif
 10605  0119B6  0008               	tblrd		*
 10606  0119B8  50F5               	movf	tablat,w,c
 10607  0119BA  6E09               	movwf	(btemp+8)^0,c
 10608  0119BC  6A0A               	clrf	(btemp+9)^0,c
 10609  0119BE  500B               	movf	(btemp+10)^0,w,c
 10610  0119C0  2609               	addwf	(btemp+8)^0,f,c
 10611  0119C2  500C               	movf	(btemp+11)^0,w,c
 10612  0119C4  220A               	addwfc	(btemp+9)^0,f,c
 10613  0119C6  500A               	movf	(btemp+9)^0,w,c
 10614  0119C8  E106               	bnz	u10670
 10615  0119CA  0E1A               	movlw	26
 10616  0119CC  5C09               	subwf	(btemp+8)^0,w,c
 10617  0119CE  B0D8               	btfsc	status,0,c
 10618  0119D0  D002               	goto	u10670
 10619  0119D2  0E01               	movlw	1
 10620  0119D4  D001               	goto	u10680
 10621  0119D6                     u10670:
 10622  0119D6  0E00               	movlw	0
 10623  0119D8                     u10680:
 10624  0119D8  6E0B               	movwf	(btemp+10)^0,c
 10625  0119DA  6A0C               	clrf	(btemp+11)^0,c
 10626                           
 10627                           ;stkvar	_vfpfcnvrt$5196 @ sp[(-32)+2]
 10628  0119DC  0EE2               	movlw	-30
 10629  0119DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10630  0119E4  0EE3               	movlw	-29
 10631  0119E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10632                           
 10633                           ;stkvar	_vfpfcnvrt$5196 @ sp[(-32)+2]
 10634  0119EC  0EE2               	movlw	-30
 10635  0119EE  006F FF8C  F001    	movff	plusw1,btemp
 10636  0119F4  0EE3               	movlw	-29
 10637  0119F6  50E3               	movf	plusw1,w,c
 10638  0119F8  1001               	iorwf	btemp^0,w,c
 10639                           
 10640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10641                           ;stkvar	_ap @ sp[(-32)+-6]
 10642                           
 10643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 10644                           
 10645                           ;stkvar	_f @ sp[(-32)+22]
 10646                           
 10647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 10648                           ;stkvar	_ap @ sp[(-32)+-6]
 10649  0119FA  0EDA               	movlw	-38
 10650  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10651  011A02  0EDB               	movlw	-37
 10652  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
 10653  011A0A  0E04               	movlw	4
 10654  011A0C  5EDE               	subwf	postinc2,f,c
 10655  011A0E  0E00               	movlw	0
 10656  011A10  5ADD               	subwfb	postdec2,f,c
 10657  011A12  006F FF78  F00B    	movff	postinc2,btemp+10
 10658  011A18  006F FF74  F00C    	movff	postdec2,btemp+11
 10659  011A1E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10660  011A24  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10661  011A2A  006F FF78  F009    	movff	postinc2,btemp+8
 10662  011A30  006F FF78  F00A    	movff	postinc2,btemp+9
 10663  011A36  006F FF78  F00B    	movff	postinc2,btemp+10
 10664  011A3C  006F FF78  F00C    	movff	postinc2,btemp+11
 10665                           
 10666                           ;stkvar	_f @ sp[(-32)+22]
 10667  011A42  0EF6               	movlw	-10
 10668  011A44  0060  F027  FFE3   	movff	btemp+8,plusw1
 10669  011A4A  0EF7               	movlw	-9
 10670  011A4C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10671  011A52  0EF8               	movlw	-8
 10672  011A54  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10673  011A5A  0EF9               	movlw	-7
 10674  011A5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 10675                           
 10676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 10677                           ;stkvar	_fmt @ sp[(-32)+-4]
 10678  011A62  0EDC               	movlw	-36
 10679  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
 10680  011A6A  0EDD               	movlw	-35
 10681  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10682  011A72  0E02               	movlw	2
 10683  011A74  26DE               	addwf	postinc2,f,c
 10684  011A76  0E00               	movlw	0
 10685  011A78  22DD               	addwfc	postdec2,f,c
 10686  011A7A  D736               	goto	l11152
 10687  011A7C                     l11176:
 10688                           
 10689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10690                           ;stkvar	_fmt @ sp[(-32)+-4]
 10691  011A7C  0EDC               	movlw	-36
 10692  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10693  011A84  0EDD               	movlw	-35
 10694  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
 10695  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10696  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
 10697  011A98                     	if	0	;tblptru may be non-zero
 10698  011A98                     	endif
 10699  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10700  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
 10701  011A9A  6EF8               	movwf	tblptru,c
 10702  011A9C                     	endif
 10703  011A9C  0008               	tblrd		*
 10704  011A9E  50F5               	movf	tablat,w,c
 10705  011AA0  0A73               	xorlw	115
 10706  011AA2  A4D8               	btfss	status,2,c
 10707  011AA4  D042               	goto	l11186
 10708                           
 10709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10710                           ;stkvar	_fmt @ sp[(-32)+-4]
 10711  011AA6  0EDC               	movlw	-36
 10712  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10713  011AAE  0EDD               	movlw	-35
 10714  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10715  011AB6  2ADE               	incf	postinc2,f,c
 10716  011AB8  0E00               	movlw	0
 10717  011ABA  22DD               	addwfc	postdec2,f,c
 10718                           
 10719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10720                           ;stkvar	_ap @ sp[(-32)+-6]
 10721  011ABC  0EDA               	movlw	-38
 10722  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10723  011AC4  0EDB               	movlw	-37
 10724  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10725  011ACC  0E02               	movlw	2
 10726  011ACE  5EDE               	subwf	postinc2,f,c
 10727  011AD0  0E00               	movlw	0
 10728  011AD2  5ADD               	subwfb	postdec2,f,c
 10729  011AD4  006F FF78  F00B    	movff	postinc2,btemp+10
 10730  011ADA  006F FF74  F00C    	movff	postdec2,btemp+11
 10731  011AE0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10732  011AE6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10733  011AEC  006F FF78  F00B    	movff	postinc2,btemp+10
 10734  011AF2  006F FF74  F00C    	movff	postdec2,btemp+11
 10735                           
 10736                           ;stkvar	_cp @ sp[(-32)+29]
 10737  011AF8  0EFE               	movlw	-2
 10738  011AFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10739  011B00  0EFD               	movlw	-3
 10740  011B02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10741                           
 10742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10743                           ;stkvar	_cp @ sp[(-32)+29]
 10744  011B08  0EFD               	movlw	-3
 10745  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10746  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
 10747                           
 10748                           ;stkvar	_fp @ sp[(-34)+-2]
 10749  011B16  0EDC               	movlw	-36
 10750  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
 10751  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 10752  011B24  EC1E  F0AC         	call	_stoa	;wreg free
 10753  011B28  D127               	goto	l2208
 10754  011B2A                     l11186:
 10755                           
 10756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 10757                           ;stkvar	_fmt @ sp[(-32)+-4]
 10758  011B2A  0EDC               	movlw	-36
 10759  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10760  011B32  0EDD               	movlw	-35
 10761  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
 10762  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10763  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
 10764  011B46                     	if	0	;tblptru may be non-zero
 10765  011B46                     	endif
 10766  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10767  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
 10768  011B48  6EF8               	movwf	tblptru,c
 10769  011B4A                     	endif
 10770  011B4A  0008               	tblrd		*
 10771  011B4C  50F5               	movf	tablat,w,c
 10772  011B4E  0A78               	xorlw	120
 10773  011B50  B4D8               	btfsc	status,2,c
 10774  011B52  D015               	goto	u10720
 10775                           
 10776                           ;stkvar	_fmt @ sp[(-32)+-4]
 10777  011B54  0EDC               	movlw	-36
 10778  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
 10779  011B5C  0EDD               	movlw	-35
 10780  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10781  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
 10782  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10783  011B70                     	if	0	;tblptru may be non-zero
 10784  011B70                     	endif
 10785  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10786  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
 10787  011B72  6EF8               	movwf	tblptru,c
 10788  011B74                     	endif
 10789  011B74  0008               	tblrd		*
 10790  011B76  50F5               	movf	tablat,w,c
 10791  011B78  0A58               	xorlw	88
 10792  011B7A  A4D8               	btfss	status,2,c
 10793  011B7C  D094               	goto	l11200
 10794  011B7E                     u10720:
 10795                           
 10796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 10797                           ;stkvar	_fmt @ sp[(-32)+-4]
 10798  011B7E  0EDC               	movlw	-36
 10799  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
 10800  011B86  0EDD               	movlw	-35
 10801  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
 10802  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10803  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
 10804  011B9A                     	if	0	;tblptru may be non-zero
 10805  011B9A                     	endif
 10806  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10807  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 10808  011B9C  6EF8               	movwf	tblptru,c
 10809  011B9E                     	endif
 10810                           
 10811                           ;stkvar	_c @ sp[(-32)+31]
 10812  011B9E  0008               	tblrd		*
 10813  011BA0  0EFF               	movlw	-1
 10814  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
 10815                           
 10816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 10817                           ;stkvar	_fmt @ sp[(-32)+-4]
 10818  011BA8  0EDC               	movlw	-36
 10819  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10820  011BB0  0EDD               	movlw	-35
 10821  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10822  011BB8  2ADE               	incf	postinc2,f,c
 10823  011BBA  0E00               	movlw	0
 10824  011BBC  22DD               	addwfc	postdec2,f,c
 10825                           
 10826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 10827                           ;stkvar	_ap @ sp[(-32)+-6]
 10828  011BBE  0EDA               	movlw	-38
 10829  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10830  011BC6  0EDB               	movlw	-37
 10831  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10832  011BCE  0E02               	movlw	2
 10833  011BD0  5EDE               	subwf	postinc2,f,c
 10834  011BD2  0E00               	movlw	0
 10835  011BD4  5ADD               	subwfb	postdec2,f,c
 10836  011BD6  006F FF78  F00B    	movff	postinc2,btemp+10
 10837  011BDC  006F FF74  F00C    	movff	postdec2,btemp+11
 10838  011BE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10839  011BE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10840  011BEE  006F FF78  F00B    	movff	postinc2,btemp+10
 10841  011BF4  006F FF74  F00C    	movff	postdec2,btemp+11
 10842  011BFA  500B               	movf	(btemp+10)^0,w,c
 10843  011BFC  6E11               	movwf	(btemp+16)^0,c
 10844  011BFE  500C               	movf	(btemp+11)^0,w,c
 10845  011C00  6E12               	movwf	(btemp+17)^0,c
 10846  011C02  6A13               	clrf	(btemp+18)^0,c
 10847  011C04  6A14               	clrf	(btemp+19)^0,c
 10848  011C06  6A15               	clrf	(btemp+20)^0,c
 10849  011C08  6A16               	clrf	(btemp+21)^0,c
 10850  011C0A  6A17               	clrf	(btemp+22)^0,c
 10851  011C0C  6A18               	clrf	(btemp+23)^0,c
 10852                           
 10853                           ;stkvar	_llu @ sp[(-32)+6]
 10854  011C0E  0EE6               	movlw	-26
 10855  011C10  0060  F047  FFE3   	movff	btemp+16,plusw1
 10856  011C16  0EE7               	movlw	-25
 10857  011C18  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10858  011C1E  0EE8               	movlw	-24
 10859  011C20  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10860  011C26  0EE9               	movlw	-23
 10861  011C28  0060  F053  FFE3   	movff	btemp+19,plusw1
 10862  011C2E  0EEA               	movlw	-22
 10863  011C30  0060  F057  FFE3   	movff	btemp+20,plusw1
 10864  011C36  0EEB               	movlw	-21
 10865  011C38  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10866  011C3E  0EEC               	movlw	-20
 10867  011C40  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10868  011C46  0EED               	movlw	-19
 10869  011C48  0060  F063  FFE3   	movff	btemp+23,plusw1
 10870                           
 10871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 10872                           ;stkvar	_c @ sp[(-32)+31]
 10873  011C4E  0EFF               	movlw	-1
 10874  011C50  50E3               	movf	plusw1,w,c
 10875  011C52  6EE6               	movwf	postinc1,c
 10876                           
 10877                           ;stkvar	_llu @ sp[(-33)+6]
 10878  011C54  50E1               	movf	fsr1l,w,c
 10879  011C56  0FE5               	addlw	-27
 10880  011C58  6ED9               	movwf	fsr2l,c
 10881  011C5A  50E2               	movf	fsr1h,w,c
 10882  011C5C  6EDA               	movwf	fsr2h,c
 10883  011C5E  0EFF               	movlw	255
 10884  011C60  22DA               	addwfc	fsr2h,f,c
 10885  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
 10886  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
 10887  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 10888  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
 10889  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 10890  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
 10891  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
 10892  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 10893                           
 10894                           ;stkvar	_fp @ sp[(-41)+-2]
 10895  011C92  0ED5               	movlw	-43
 10896  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
 10897  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 10898  011CA0  ECA8  F0A5         	call	_xtoa	;wreg free
 10899  011CA4  D069               	goto	l2208
 10900  011CA6                     l11200:
 10901                           
 10902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10903                           ;stkvar	_fmt @ sp[(-32)+-4]
 10904  011CA6  0EDC               	movlw	-36
 10905  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10906  011CAE  0EDD               	movlw	-35
 10907  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10908  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10909  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10910  011CC2                     	if	0	;tblptru may be non-zero
 10911  011CC2                     	endif
 10912  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10913  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 10914  011CC4  6EF8               	movwf	tblptru,c
 10915  011CC6                     	endif
 10916  011CC6  0008               	tblrd		*
 10917  011CC8  50F5               	movf	tablat,w,c
 10918  011CCA  0A25               	xorlw	37
 10919  011CCC  A4D8               	btfss	status,2,c
 10920  011CCE  D01A               	goto	l11210
 10921                           
 10922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10923                           ;stkvar	_fmt @ sp[(-32)+-4]
 10924  011CD0  0EDC               	movlw	-36
 10925  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10926  011CD8  0EDD               	movlw	-35
 10927  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10928  011CE0  2ADE               	incf	postinc2,f,c
 10929  011CE2  0E00               	movlw	0
 10930  011CE4  22DD               	addwfc	postdec2,f,c
 10931                           
 10932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10933                           ;stkvar	_fp @ sp[(-32)+-2]
 10934  011CE6  0EDE               	movlw	-34
 10935  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10936  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10937  011CF4  0E25               	movlw	37
 10938  011CF6  6EE6               	movwf	postinc1,c
 10939  011CF8  0E00               	movlw	0
 10940  011CFA  6EE6               	movwf	postinc1,c
 10941  011CFC  EC57  F0BB         	call	_fputc	;wreg free
 10942  011D00                     l11206:
 10943                           
 10944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10945  011D00  0E01               	movlw	1
 10946  011D02  D00C               	goto	L7
 10947  011D04                     l11210:
 10948                           
 10949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10950                           ;stkvar	_fmt @ sp[(-32)+-4]
 10951  011D04  0EDC               	movlw	-36
 10952  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 10953  011D0C  0EDD               	movlw	-35
 10954  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10955  011D14  2ADE               	incf	postinc2,f,c
 10956  011D16  0E00               	movlw	0
 10957  011D18  22DD               	addwfc	postdec2,f,c
 10958                           
 10959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10960  011D1A  0E00               	movlw	0
 10961  011D1C                     L7:
 10962  011D1C  6E01               	movwf	btemp^0,c
 10963  011D1E  0E00               	movlw	0
 10964  011D20  6E02               	movwf	(btemp+1)^0,c
 10965  011D22  D02A               	goto	l2208
 10966  011D24                     l11216:
 10967                           
 10968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10969                           ;stkvar	_fp @ sp[(-32)+-2]
 10970  011D24  0EDE               	movlw	-34
 10971  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
 10972  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 10973                           
 10974                           ;stkvar	_fmt @ sp[(-34)+-4]
 10975  011D32  0EDA               	movlw	-38
 10976  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
 10977  011D3A  0EDB               	movlw	-37
 10978  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10979  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
 10980  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
 10981  011D4E                     	if	0	;tblptru may be non-zero
 10982  011D4E                     	endif
 10983  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10984  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
 10985  011D50  6EF8               	movwf	tblptru,c
 10986  011D52                     	endif
 10987  011D52  0008               	tblrd		*
 10988  011D54  50F5               	movf	tablat,w,c
 10989  011D56  6EE6               	movwf	postinc1,c
 10990  011D58  0E00               	movlw	0
 10991  011D5A  6EE6               	movwf	postinc1,c
 10992  011D5C  EC57  F0BB         	call	_fputc	;wreg free
 10993                           
 10994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10995                           ;stkvar	_fmt @ sp[(-32)+-4]
 10996  011D60  0EDC               	movlw	-36
 10997  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 10998  011D68  0EDD               	movlw	-35
 10999  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11000  011D70  2ADE               	incf	postinc2,f,c
 11001  011D72  0E00               	movlw	0
 11002  011D74  22DD               	addwfc	postdec2,f,c
 11003  011D76  D7C4               	goto	l11206
 11004  011D78                     l2208:
 11005                           
 11006                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11007  011D78  0EDA               	movlw	218
 11008  011D7A  26E1               	addwf	fsr1l,f,c
 11009  011D7C  0EFF               	movlw	255
 11010  011D7E  22E2               	addwfc	fsr1h,f,c
 11011  011D80  0012               	return		;funcret
 11012  011D82                     __end_of_vfpfcnvrt:
 11013                           	opt callstack 0
 11014                           
 11015 ;; *************** function _xtoa *****************
 11016 ;; Defined at:
 11017 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11020 ;;		 -> f(6), NULL(0), 
 11021 ;;  d               8  [STACK] unsigned long long 
 11022 ;;  x               1  [STACK] unsigned char 
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  n               8  [STACK] unsigned long long 
 11025 ;;  c               2  [STACK] int 
 11026 ;;  i               2  [STACK] int 
 11027 ;;  w               2  [STACK] int 
 11028 ;;  p               2  [STACK] int 
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  2  [STACK] int 
 11031 ;; Registers used:
 11032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11042 ;;Total ram usage:        0 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; Hardware stack levels required when called:   20
 11045 ;; This function calls:
 11046 ;;		_isalpha
 11047 ;;		_isupper
 11048 ;;		_pad
 11049 ;;		_toupper
 11050 ;; This function is called by:
 11051 ;;		_vfpfcnvrt
 11052 ;; This function uses a reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text44
 11056  014B50                     __ptext44:
 11057                           	opt callstack 0
 11058  014B50                     _xtoa:
 11059                           	opt callstack 0
 11060                           
 11061                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11062  014B50  0E14               	movlw	20
 11063  014B52  26E1               	addwf	fsr1l,f,c
 11064  014B54  0E00               	movlw	0
 11065  014B56  22E2               	addwfc	fsr1h,f,c
 11066                           
 11067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11068                           
 11069                           ;incstack = 0
 11070 ;; hardware stack exceeded
 11071  014B58  AE24               	btfss	(_prec+1)^0,7,c
 11072                           
 11073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11074  014B5A  9225               	bcf	_flags^0,1,c
 11075                           
 11076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11077  014B5C  BE24               	btfsc	(_prec+1)^0,7,c
 11078  014B5E  D005               	goto	u10300
 11079  014B60  5024               	movf	(_prec+1)^0,w,c
 11080  014B62  E110               	bnz	l10982
 11081  014B64  0423               	decf	_prec^0,w,c
 11082  014B66  B0D8               	btfsc	status,0,c
 11083  014B68  D00D               	goto	l10982
 11084  014B6A                     u10300:
 11085  014B6A  0E01               	movlw	1
 11086  014B6C  6E0B               	movwf	(btemp+10)^0,c
 11087  014B6E  0E00               	movlw	0
 11088  014B70  6E0C               	movwf	(btemp+11)^0,c
 11089                           
 11090                           ;stkvar	_p @ sp[(-20)+18]
 11091  014B72  0EFE               	movlw	-2
 11092  014B74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11093  014B7A  0EFF               	movlw	-1
 11094  014B7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11095  014B82  D008               	goto	l2158
 11096  014B84                     l10982:
 11097                           
 11098                           ;stkvar	_p @ sp[(-20)+18]
 11099  014B84  0EFE               	movlw	-2
 11100  014B86  0060  F08F  FFE3   	movff	_prec,plusw1
 11101  014B8C  0EFF               	movlw	-1
 11102  014B8E  0060  F093  FFE3   	movff	_prec+1,plusw1
 11103  014B94                     l2158:
 11104                           
 11105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11106                           ;stkvar	_w @ sp[(-20)+16]
 11107  014B94  0EFC               	movlw	-4
 11108  014B96  0060  F087  FFE3   	movff	_width,plusw1
 11109  014B9C  0EFD               	movlw	-3
 11110  014B9E  0060  F08B  FFE3   	movff	_width+1,plusw1
 11111                           
 11112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11113  014BA4  A825               	btfss	_flags^0,4,c
 11114  014BA6  D00B               	goto	l10988
 11115                           
 11116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11117                           ;stkvar	_w @ sp[(-20)+16]
 11118  014BA8  50E1               	movf	fsr1l,w,c
 11119  014BAA  0FFC               	addlw	-4
 11120  014BAC  6ED9               	movwf	fsr2l,c
 11121  014BAE  50E2               	movf	fsr1h,w,c
 11122  014BB0  6EDA               	movwf	fsr2h,c
 11123  014BB2  0EFF               	movlw	255
 11124  014BB4  22DA               	addwfc	fsr2h,f,c
 11125  014BB6  0EFE               	movlw	254
 11126  014BB8  26DE               	addwf	postinc2,f,c
 11127  014BBA  0EFF               	movlw	255
 11128  014BBC  22DD               	addwfc	postdec2,f,c
 11129  014BBE                     l10988:
 11130                           
 11131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 11132                           ;stkvar	_d @ sp[(-20)+-10]
 11133  014BBE  0EE2               	movlw	226
 11134  014BC0  24E1               	addwf	fsr1l,w,c
 11135  014BC2  6ED9               	movwf	fsr2l,c
 11136  014BC4  0EFF               	movlw	255
 11137  014BC6  20E2               	addwfc	fsr1h,w,c
 11138  014BC8  6EDA               	movwf	fsr2h,c
 11139                           
 11140                           ;stkvar	_n @ sp[(-20)+4]
 11141  014BCA  0E08               	movlw	8
 11142  014BCC  6E01               	movwf	btemp^0,c
 11143  014BCE  0EF0               	movlw	-16
 11144  014BD0                     us1032999:
 11145  014BD0  006F FF7B FFE3     	movff	postinc2,plusw1
 11146  014BD6  28E8               	incf	wreg,w,c
 11147  014BD8  2E01               	decfsz	btemp^0,f,c
 11148  014BDA  D7FA               	bra	us1032999
 11149                           
 11150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11151  014BDC  0E4F               	movlw	79
 11152  014BDE  6E0B               	movwf	(btemp+10)^0,c
 11153  014BE0  0E00               	movlw	0
 11154  014BE2  6E0C               	movwf	(btemp+11)^0,c
 11155                           
 11156                           ;stkvar	_i @ sp[(-20)+14]
 11157  014BE4  0EFA               	movlw	-6
 11158  014BE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11159  014BEC  0EFB               	movlw	-5
 11160  014BEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 11161                           
 11162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11163  014BF4  0103               	movlb	3	; () banked
 11164  014BF6  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11165                           
 11166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11167  014BF8  D0EE               	goto	l11026
 11168  014BFA                     l10994:
 11169                           
 11170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11171                           ;stkvar	_i @ sp[(-20)+14]
 11172  014BFA  50E1               	movf	fsr1l,w,c
 11173  014BFC  0FFA               	addlw	-6
 11174  014BFE  6ED9               	movwf	fsr2l,c
 11175  014C00  50E2               	movf	fsr1h,w,c
 11176  014C02  6EDA               	movwf	fsr2h,c
 11177  014C04  0EFF               	movlw	255
 11178  014C06  22DA               	addwfc	fsr2h,f,c
 11179  014C08  06DE               	decf	postinc2,f,c
 11180  014C0A  0E00               	movlw	0
 11181  014C0C  5ADD               	subwfb	postdec2,f,c
 11182                           
 11183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 11184                           ;stkvar	_n @ sp[(-20)+4]
 11185  014C0E  0EF0               	movlw	-16
 11186  014C10  006F FF8C  F00B    	movff	plusw1,btemp+10
 11187  014C16  0EF1               	movlw	-15
 11188  014C18  006F FF8C  F00C    	movff	plusw1,btemp+11
 11189  014C1E  0E0F               	movlw	15
 11190  014C20  160B               	andwf	(btemp+10)^0,f,c
 11191  014C22  0E00               	movlw	0
 11192  014C24  160C               	andwf	(btemp+11)^0,f,c
 11193                           
 11194                           ;stkvar	_c @ sp[(-20)+12]
 11195  014C26  0EF8               	movlw	-8
 11196  014C28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11197  014C2E  0EF9               	movlw	-7
 11198  014C30  0060  F033  FFE3   	movff	btemp+11,plusw1
 11199                           
 11200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 11201                           ;stkvar	_c @ sp[(-20)+12]
 11202  014C36  0EF9               	movlw	-7
 11203  014C38  BEE3               	btfsc	plusw1,7,c
 11204  014C3A  D00F               	goto	l11002
 11205  014C3C  0EF9               	movlw	-7
 11206  014C3E  50E3               	movf	plusw1,w,c
 11207  014C40  E108               	bnz	u10330
 11208  014C42  0EF8               	movlw	-8
 11209  014C44  006F FF8C  F001    	movff	plusw1,btemp
 11210  014C4A  0E0A               	movlw	10
 11211  014C4C  5E01               	subwf	btemp^0,f,c
 11212  014C4E  A0D8               	btfss	status,0,c
 11213  014C50  D004               	goto	l11002
 11214  014C52                     u10330:
 11215                           
 11216                           ;stkvar	_c @ sp[(-20)+12]
 11217  014C52  0EF8               	movlw	-8
 11218  014C54  50E3               	movf	plusw1,w,c
 11219  014C56  0F57               	addlw	87
 11220  014C58  D003               	goto	L8
 11221  014C5A                     l11002:
 11222                           
 11223                           ;stkvar	_c @ sp[(-20)+12]
 11224  014C5A  0EF8               	movlw	-8
 11225  014C5C  50E3               	movf	plusw1,w,c
 11226  014C5E  0F30               	addlw	48
 11227  014C60                     L8:
 11228  014C60  6E0B               	movwf	(btemp+10)^0,c
 11229  014C62  0EF9               	movlw	-7
 11230  014C64  006F FF8C  F00C    	movff	plusw1,btemp+11
 11231  014C6A  0E00               	movlw	0
 11232  014C6C  220C               	addwfc	(btemp+11)^0,f,c
 11233                           
 11234                           ;stkvar	_c @ sp[(-20)+12]
 11235  014C6E  0EF8               	movlw	-8
 11236  014C70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11237  014C76  0EF9               	movlw	-7
 11238  014C78  0060  F033  FFE3   	movff	btemp+11,plusw1
 11239  014C7E  0EBF               	movlw	191
 11240  014C80  6E0B               	movwf	(btemp+10)^0,c
 11241  014C82  0EFF               	movlw	255
 11242  014C84  6E0C               	movwf	(btemp+11)^0,c
 11243                           
 11244                           ;stkvar	_x @ sp[(-20)+-11]
 11245  014C86  0EE1               	movlw	-31
 11246  014C88  50E3               	movf	plusw1,w,c
 11247  014C8A  6E09               	movwf	(btemp+8)^0,c
 11248  014C8C  6A0A               	clrf	(btemp+9)^0,c
 11249  014C8E  500B               	movf	(btemp+10)^0,w,c
 11250  014C90  2609               	addwf	(btemp+8)^0,f,c
 11251  014C92  500C               	movf	(btemp+11)^0,w,c
 11252  014C94  220A               	addwfc	(btemp+9)^0,f,c
 11253  014C96  500A               	movf	(btemp+9)^0,w,c
 11254  014C98  E106               	bnz	u10340
 11255  014C9A  0E1A               	movlw	26
 11256  014C9C  5C09               	subwf	(btemp+8)^0,w,c
 11257  014C9E  B0D8               	btfsc	status,0,c
 11258  014CA0  D002               	goto	u10340
 11259  014CA2  0E01               	movlw	1
 11260  014CA4  D001               	goto	u10350
 11261  014CA6                     u10340:
 11262  014CA6  0E00               	movlw	0
 11263  014CA8                     u10350:
 11264  014CA8  6E0B               	movwf	(btemp+10)^0,c
 11265  014CAA  6A0C               	clrf	(btemp+11)^0,c
 11266                           
 11267                           ;stkvar	_xtoa$5174 @ sp[(-20)+2]
 11268  014CAC  0EEE               	movlw	-18
 11269  014CAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11270  014CB4  0EEF               	movlw	-17
 11271  014CB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11272                           
 11273                           ;stkvar	_xtoa$5174 @ sp[(-20)+2]
 11274  014CBC  0EEE               	movlw	-18
 11275  014CBE  006F FF8C  F001    	movff	plusw1,btemp
 11276  014CC4  0EEF               	movlw	-17
 11277  014CC6  50E3               	movf	plusw1,w,c
 11278  014CC8  1001               	iorwf	btemp^0,w,c
 11279  014CCA  B4D8               	btfsc	status,2,c
 11280  014CCC  D041               	goto	l11018
 11281  014CCE  0E9F               	movlw	159
 11282  014CD0  6E0B               	movwf	(btemp+10)^0,c
 11283  014CD2  0EFF               	movlw	255
 11284  014CD4  6E0C               	movwf	(btemp+11)^0,c
 11285                           
 11286                           ;stkvar	_c @ sp[(-20)+12]
 11287  014CD6  0EF8               	movlw	-8
 11288  014CD8  006F FF8C  F009    	movff	plusw1,btemp+8
 11289  014CDE  0EF9               	movlw	-7
 11290  014CE0  006F FF8C  F00A    	movff	plusw1,btemp+9
 11291  014CE6  0E20               	movlw	32
 11292  014CE8  1209               	iorwf	(btemp+8)^0,f,c
 11293  014CEA  0E00               	movlw	0
 11294  014CEC  120A               	iorwf	(btemp+9)^0,f,c
 11295  014CEE  500B               	movf	(btemp+10)^0,w,c
 11296  014CF0  2609               	addwf	(btemp+8)^0,f,c
 11297  014CF2  500C               	movf	(btemp+11)^0,w,c
 11298  014CF4  220A               	addwfc	(btemp+9)^0,f,c
 11299  014CF6  500A               	movf	(btemp+9)^0,w,c
 11300  014CF8  E106               	bnz	u10370
 11301  014CFA  0E1A               	movlw	26
 11302  014CFC  5C09               	subwf	(btemp+8)^0,w,c
 11303  014CFE  B0D8               	btfsc	status,0,c
 11304  014D00  D002               	goto	u10370
 11305  014D02  0E01               	movlw	1
 11306  014D04  D001               	goto	u10380
 11307  014D06                     u10370:
 11308  014D06  0E00               	movlw	0
 11309  014D08                     u10380:
 11310  014D08  6E0B               	movwf	(btemp+10)^0,c
 11311  014D0A  6A0C               	clrf	(btemp+11)^0,c
 11312                           
 11313                           ;stkvar	_xtoa$5175 @ sp[(-20)+0]
 11314  014D0C  0EEC               	movlw	-20
 11315  014D0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11316  014D14  0EED               	movlw	-19
 11317  014D16  0060  F033  FFE3   	movff	btemp+11,plusw1
 11318                           
 11319                           ;stkvar	_xtoa$5175 @ sp[(-20)+0]
 11320  014D1C  0EEC               	movlw	-20
 11321  014D1E  006F FF8C  F001    	movff	plusw1,btemp
 11322  014D24  0EED               	movlw	-19
 11323  014D26  50E3               	movf	plusw1,w,c
 11324  014D28  1001               	iorwf	btemp^0,w,c
 11325  014D2A  B4D8               	btfsc	status,2,c
 11326  014D2C  D011               	goto	l11018
 11327                           
 11328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 11329                           ;stkvar	_c @ sp[(-20)+12]
 11330  014D2E  0EF8               	movlw	-8
 11331  014D30  006F FF8F FFE6     	movff	plusw1,postinc1
 11332  014D36  006F FF8F FFE6     	movff	plusw1,postinc1
 11333  014D3C  EC80  F0C4         	call	_toupper	;wreg free
 11334                           
 11335                           ;stkvar	_c @ sp[(-20)+12]
 11336  014D40  0EF8               	movlw	-8
 11337  014D42  0060  F007  FFE3   	movff	btemp,plusw1
 11338  014D48  0EF9               	movlw	-7
 11339  014D4A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11340  014D50                     l11018:
 11341                           
 11342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 11343                           ;stkvar	_c @ sp[(-20)+12]
 11344                           ;stkvar	_i @ sp[(-20)+14]
 11345  014D50  0EFA               	movlw	-6
 11346  014D52  006F FF8C  F00B    	movff	plusw1,btemp+10
 11347  014D58  0EFB               	movlw	-5
 11348  014D5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11349  014D60  0E94               	movlw	low _dbuf
 11350  014D62  240B               	addwf	(btemp+10)^0,w,c
 11351  014D64  6ED9               	movwf	fsr2l,c
 11352  014D66  0E03               	movlw	high _dbuf
 11353  014D68  200C               	addwfc	(btemp+11)^0,w,c
 11354  014D6A  6EDA               	movwf	fsr2h,c
 11355  014D6C  0EF8               	movlw	-8
 11356  014D6E  006F FF8F FFDF     	movff	plusw1,indf2
 11357                           
 11358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 11359                           ;stkvar	_p @ sp[(-20)+18]
 11360  014D74  50E1               	movf	fsr1l,w,c
 11361  014D76  0FFE               	addlw	-2
 11362  014D78  6ED9               	movwf	fsr2l,c
 11363  014D7A  50E2               	movf	fsr1h,w,c
 11364  014D7C  6EDA               	movwf	fsr2h,c
 11365  014D7E  0EFF               	movlw	255
 11366  014D80  22DA               	addwfc	fsr2h,f,c
 11367  014D82  06DE               	decf	postinc2,f,c
 11368  014D84  0E00               	movlw	0
 11369  014D86  5ADD               	subwfb	postdec2,f,c
 11370                           
 11371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 11372                           ;stkvar	_w @ sp[(-20)+16]
 11373  014D88  50E1               	movf	fsr1l,w,c
 11374  014D8A  0FFC               	addlw	-4
 11375  014D8C  6ED9               	movwf	fsr2l,c
 11376  014D8E  50E2               	movf	fsr1h,w,c
 11377  014D90  6EDA               	movwf	fsr2h,c
 11378  014D92  0EFF               	movlw	255
 11379  014D94  22DA               	addwfc	fsr2h,f,c
 11380  014D96  06DE               	decf	postinc2,f,c
 11381  014D98  0E00               	movlw	0
 11382  014D9A  5ADD               	subwfb	postdec2,f,c
 11383                           
 11384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 11385  014D9C  0E04               	movlw	4
 11386  014D9E  6E0C               	movwf	(btemp+11)^0,c
 11387                           
 11388                           ;stkvar	_n @ sp[(-20)+4]
 11389  014DA0  50E1               	movf	fsr1l,w,c
 11390  014DA2  0FF0               	addlw	-16
 11391  014DA4  6ED9               	movwf	fsr2l,c
 11392  014DA6  50E2               	movf	fsr1h,w,c
 11393  014DA8  6EDA               	movwf	fsr2h,c
 11394  014DAA  0EFF               	movlw	255
 11395  014DAC  22DA               	addwfc	fsr2h,f,c
 11396  014DAE  280C               	incf	(btemp+11)^0,w,c
 11397  014DB0  52DE               	movf	postinc2,f,c
 11398  014DB2  D00F               	goto	u10400
 11399  014DB4                     u10405:
 11400  014DB4  52DE               	movf	postinc2,f,c
 11401  014DB6  52DE               	movf	postinc2,f,c
 11402  014DB8  52DE               	movf	postinc2,f,c
 11403  014DBA  52DE               	movf	postinc2,f,c
 11404  014DBC  52DE               	movf	postinc2,f,c
 11405  014DBE  52DE               	movf	postinc2,f,c
 11406  014DC0  90D8               	bcf	status,0,c
 11407  014DC2  32DD               	rrcf	postdec2,f,c
 11408  014DC4  32DD               	rrcf	postdec2,f,c
 11409  014DC6  32DD               	rrcf	postdec2,f,c
 11410  014DC8  32DD               	rrcf	postdec2,f,c
 11411  014DCA  32DD               	rrcf	postdec2,f,c
 11412  014DCC  32DD               	rrcf	postdec2,f,c
 11413  014DCE  32DD               	rrcf	postdec2,f,c
 11414  014DD0  32DE               	rrcf	postinc2,f,c
 11415  014DD2                     u10400:
 11416  014DD2  2EE8               	decfsz	wreg,f,c
 11417  014DD4  D7EF               	goto	u10405
 11418  014DD6                     l11026:
 11419                           
 11420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11421                           ;stkvar	_i @ sp[(-20)+14]
 11422  014DD6  0EFB               	movlw	-5
 11423  014DD8  BEE3               	btfsc	plusw1,7,c
 11424  014DDA  D03A               	goto	u10450
 11425  014DDC  0EFB               	movlw	-5
 11426  014DDE  50E3               	movf	plusw1,w,c
 11427  014DE0  E108               	bnz	u10410
 11428  014DE2  0EFA               	movlw	-6
 11429  014DE4  006F FF8C  F001    	movff	plusw1,btemp
 11430  014DEA  0E02               	movlw	2
 11431  014DEC  5E01               	subwf	btemp^0,f,c
 11432  014DEE  A0D8               	btfss	status,0,c
 11433  014DF0  D02F               	goto	u10450
 11434  014DF2                     u10410:
 11435                           
 11436                           ;stkvar	_n @ sp[(-20)+4]
 11437  014DF2  0EF0               	movlw	-16
 11438  014DF4  50E3               	movf	plusw1,w,c
 11439  014DF6  E115               	bnz	u10421
 11440  014DF8  0EF1               	movlw	-15
 11441  014DFA  50E3               	movf	plusw1,w,c
 11442  014DFC  E112               	bnz	u10421
 11443  014DFE  0EF2               	movlw	-14
 11444  014E00  50E3               	movf	plusw1,w,c
 11445  014E02  E10F               	bnz	u10421
 11446  014E04  0EF3               	movlw	-13
 11447  014E06  50E3               	movf	plusw1,w,c
 11448  014E08  E10C               	bnz	u10421
 11449  014E0A  0EF4               	movlw	-12
 11450  014E0C  50E3               	movf	plusw1,w,c
 11451  014E0E  E109               	bnz	u10421
 11452  014E10  0EF5               	movlw	-11
 11453  014E12  50E3               	movf	plusw1,w,c
 11454  014E14  E106               	bnz	u10421
 11455  014E16  0EF6               	movlw	-10
 11456  014E18  50E3               	movf	plusw1,w,c
 11457  014E1A  E103               	bnz	u10421
 11458  014E1C  0EF7               	movlw	-9
 11459  014E1E  50E3               	movf	plusw1,w,c
 11460  014E20  A4D8               	btfss	status,2,c
 11461  014E22                     u10421:
 11462  014E22  D6EB               	goto	l10994
 11463                           
 11464                           ;stkvar	_p @ sp[(-20)+18]
 11465  014E24  0EFF               	movlw	-1
 11466  014E26  BEE3               	btfsc	plusw1,7,c
 11467  014E28  D007               	goto	u10430
 11468  014E2A  0EFF               	movlw	-1
 11469  014E2C  50E3               	movf	plusw1,w,c
 11470  014E2E  E103               	bnz	u10431
 11471  014E30  0EFE               	movlw	-2
 11472  014E32  04E3               	decf	plusw1,w,c
 11473  014E34  B0D8               	btfsc	status,0,c
 11474  014E36                     u10431:
 11475  014E36  D6E1               	goto	l10994
 11476  014E38                     u10430:
 11477                           
 11478                           ;stkvar	_w @ sp[(-20)+16]
 11479  014E38  0EFD               	movlw	-3
 11480  014E3A  BEE3               	btfsc	plusw1,7,c
 11481  014E3C  D009               	goto	u10450
 11482  014E3E  0EFD               	movlw	-3
 11483  014E40  50E3               	movf	plusw1,w,c
 11484  014E42  E104               	bnz	u10440
 11485  014E44  0EFC               	movlw	-4
 11486  014E46  04E3               	decf	plusw1,w,c
 11487  014E48  A0D8               	btfss	status,0,c
 11488  014E4A  D002               	goto	u10450
 11489  014E4C                     u10440:
 11490  014E4C  B225               	btfsc	_flags^0,1,c
 11491  014E4E  D6D5               	goto	l10994
 11492  014E50                     u10450:
 11493                           
 11494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 11495  014E50  A825               	btfss	_flags^0,4,c
 11496  014E52  D036               	goto	l11042
 11497                           
 11498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 11499                           ;stkvar	_i @ sp[(-20)+14]
 11500  014E54  50E1               	movf	fsr1l,w,c
 11501  014E56  0FFA               	addlw	-6
 11502  014E58  6ED9               	movwf	fsr2l,c
 11503  014E5A  50E2               	movf	fsr1h,w,c
 11504  014E5C  6EDA               	movwf	fsr2h,c
 11505  014E5E  0EFF               	movlw	255
 11506  014E60  22DA               	addwfc	fsr2h,f,c
 11507  014E62  06DE               	decf	postinc2,f,c
 11508  014E64  0E00               	movlw	0
 11509  014E66  5ADD               	subwfb	postdec2,f,c
 11510                           
 11511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 11512                           ;stkvar	_x @ sp[(-20)+-11]
 11513                           ;stkvar	_i @ sp[(-20)+14]
 11514  014E68  0EFA               	movlw	-6
 11515  014E6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11516  014E70  0EFB               	movlw	-5
 11517  014E72  006F FF8C  F00C    	movff	plusw1,btemp+11
 11518  014E78  0E94               	movlw	low _dbuf
 11519  014E7A  240B               	addwf	(btemp+10)^0,w,c
 11520  014E7C  6ED9               	movwf	fsr2l,c
 11521  014E7E  0E03               	movlw	high _dbuf
 11522  014E80  200C               	addwfc	(btemp+11)^0,w,c
 11523  014E82  6EDA               	movwf	fsr2h,c
 11524  014E84  0EE1               	movlw	-31
 11525  014E86  006F FF8F FFDF     	movff	plusw1,indf2
 11526                           
 11527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 11528                           ;stkvar	_i @ sp[(-20)+14]
 11529  014E8C  50E1               	movf	fsr1l,w,c
 11530  014E8E  0FFA               	addlw	-6
 11531  014E90  6ED9               	movwf	fsr2l,c
 11532  014E92  50E2               	movf	fsr1h,w,c
 11533  014E94  6EDA               	movwf	fsr2h,c
 11534  014E96  0EFF               	movlw	255
 11535  014E98  22DA               	addwfc	fsr2h,f,c
 11536  014E9A  06DE               	decf	postinc2,f,c
 11537  014E9C  0E00               	movlw	0
 11538  014E9E  5ADD               	subwfb	postdec2,f,c
 11539                           
 11540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 11541                           ;stkvar	_i @ sp[(-20)+14]
 11542  014EA0  0EFA               	movlw	-6
 11543  014EA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11544  014EA8  0EFB               	movlw	-5
 11545  014EAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11546  014EB0  0E94               	movlw	low _dbuf
 11547  014EB2  240B               	addwf	(btemp+10)^0,w,c
 11548  014EB4  6ED9               	movwf	fsr2l,c
 11549  014EB6  0E03               	movlw	high _dbuf
 11550  014EB8  200C               	addwfc	(btemp+11)^0,w,c
 11551  014EBA  6EDA               	movwf	fsr2h,c
 11552  014EBC  0E30               	movlw	48
 11553  014EBE  6EDF               	movwf	indf2,c
 11554  014EC0                     l11042:
 11555                           
 11556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 11557                           ;stkvar	_w @ sp[(-20)+16]
 11558  014EC0  0EFC               	movlw	-4
 11559  014EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 11560  014EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 11561                           
 11562                           ;stkvar	_i @ sp[(-22)+14]
 11563  014ECE  0E94               	movlw	low _dbuf
 11564  014ED0  6E0B               	movwf	(btemp+10)^0,c
 11565  014ED2  0E03               	movlw	high _dbuf
 11566  014ED4  6E0C               	movwf	(btemp+11)^0,c
 11567  014ED6  0EF8               	movlw	-8
 11568  014ED8  50E3               	movf	plusw1,w,c
 11569  014EDA  260B               	addwf	(btemp+10)^0,f,c
 11570  014EDC  0EF9               	movlw	-7
 11571  014EDE  50E3               	movf	plusw1,w,c
 11572  014EE0  220C               	addwfc	(btemp+11)^0,f,c
 11573  014EE2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11574  014EE8  0060  F033  FFE6   	movff	btemp+11,postinc1
 11575                           
 11576                           ;stkvar	_fp @ sp[(-24)+-2]
 11577  014EEE  0EE6               	movlw	-26
 11578  014EF0  006F FF8F FFE6     	movff	plusw1,postinc1
 11579  014EF6  006F FF8F FFE6     	movff	plusw1,postinc1
 11580  014EFC  EC75  F0BC         	call	_pad	;wreg free
 11581                           
 11582                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 11583  014F00  0EE1               	movlw	225
 11584  014F02  26E1               	addwf	fsr1l,f,c
 11585  014F04  0EFF               	movlw	255
 11586  014F06  22E2               	addwfc	fsr1h,f,c
 11587  014F08  0012               	return		;funcret
 11588  014F0A                     __end_of_xtoa:
 11589                           	opt callstack 0
 11590                           
 11591 ;; *************** function _toupper *****************
 11592 ;; Defined at:
 11593 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;  c               2  [STACK] int 
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;		None
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  2  [STACK] int 
 11600 ;; Registers used:
 11601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/3
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11611 ;;Total ram usage:        0 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:   16
 11614 ;; This function calls:
 11615 ;;		_islower
 11616 ;; This function is called by:
 11617 ;;		_xtoa
 11618 ;; This function uses a reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text45
 11622  018900                     __ptext45:
 11623                           	opt callstack 0
 11624  018900                     _toupper:
 11625                           	opt callstack 0
 11626                           
 11627                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11628  018900  52E6               	movf	postinc1,f,c
 11629  018902  52E6               	movf	postinc1,f,c
 11630                           
 11631                           ;stkvar	_c @ sp[(-2)+-2]
 11632                           
 11633                           ;incstack = 0
 11634 ;; hardware stack exceeded
 11635  018904  0EFC               	movlw	-4
 11636  018906  50E3               	movf	plusw1,w,c
 11637  018908  0F9F               	addlw	159
 11638  01890A  6E0B               	movwf	(btemp+10)^0,c
 11639  01890C  0EFD               	movlw	-3
 11640  01890E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11641  018914  0EFF               	movlw	255
 11642  018916  220C               	addwfc	(btemp+11)^0,f,c
 11643  018918  500C               	movf	(btemp+11)^0,w,c
 11644  01891A  E106               	bnz	u5490
 11645  01891C  0E1A               	movlw	26
 11646  01891E  5C0B               	subwf	(btemp+10)^0,w,c
 11647  018920  B0D8               	btfsc	status,0,c
 11648  018922  D002               	goto	u5490
 11649  018924  0E01               	movlw	1
 11650  018926  D001               	goto	u5500
 11651  018928                     u5490:
 11652  018928  0E00               	movlw	0
 11653  01892A                     u5500:
 11654  01892A  6E0B               	movwf	(btemp+10)^0,c
 11655  01892C  6A0C               	clrf	(btemp+11)^0,c
 11656                           
 11657                           ;stkvar	_toupper$5950 @ sp[(-2)+0]
 11658  01892E  0EFE               	movlw	-2
 11659  018930  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11660  018936  0EFF               	movlw	-1
 11661  018938  0060  F033  FFE3   	movff	btemp+11,plusw1
 11662                           
 11663                           ;stkvar	_toupper$5950 @ sp[(-2)+0]
 11664  01893E  0EFE               	movlw	-2
 11665  018940  006F FF8C  F001    	movff	plusw1,btemp
 11666  018946  0EFF               	movlw	-1
 11667  018948  50E3               	movf	plusw1,w,c
 11668  01894A  1001               	iorwf	btemp^0,w,c
 11669  01894C  B4D8               	btfsc	status,2,c
 11670  01894E  D00D               	goto	l7280
 11671                           
 11672                           ;stkvar	_c @ sp[(-2)+-2]
 11673  018950  0EFC               	movlw	-4
 11674  018952  006F FF8C  F001    	movff	plusw1,btemp
 11675  018958  0EFD               	movlw	-3
 11676  01895A  006F FF8C  F002    	movff	plusw1,btemp+1
 11677  018960  0E5F               	movlw	95
 11678  018962  1601               	andwf	btemp^0,f,c
 11679  018964  0E00               	movlw	0
 11680  018966  1602               	andwf	(btemp+1)^0,f,c
 11681  018968  D008               	goto	l3312
 11682  01896A                     l7280:
 11683                           
 11684                           ;stkvar	_c @ sp[(-2)+-2]
 11685  01896A  0EFC               	movlw	-4
 11686  01896C  006F FF8C  F001    	movff	plusw1,btemp
 11687  018972  0EFD               	movlw	-3
 11688  018974  006F FF8C  F002    	movff	plusw1,btemp+1
 11689  01897A                     l3312:
 11690                           
 11691                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11692  01897A  52E5               	movf	postdec1,f,c
 11693  01897C  52E5               	movf	postdec1,f,c
 11694  01897E  52E5               	movf	postdec1,f,c
 11695  018980  52E5               	movf	postdec1,f,c
 11696  018982  0012               	return		;funcret
 11697  018984                     __end_of_toupper:
 11698                           	opt callstack 0
 11699                           
 11700 ;; *************** function _islower *****************
 11701 ;; Defined at:
 11702 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 11703 ;; Parameters:    Size  Location     Type
 11704 ;;  c               2  [STACK] int 
 11705 ;; Auto vars:     Size  Location     Type
 11706 ;;		None
 11707 ;; Return value:  Size  Location     Type
 11708 ;;                  2  [STACK] int 
 11709 ;; Registers used:
 11710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11711 ;; Tracked objects:
 11712 ;;		On entry : 0/0
 11713 ;;		On exit  : 0/0
 11714 ;;		Unchanged: 0/0
 11715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11720 ;;Total ram usage:        0 bytes
 11721 ;; Hardware stack levels used:    1
 11722 ;; Hardware stack levels required when called:   15
 11723 ;; This function calls:
 11724 ;;		Nothing
 11725 ;; This function is called by:
 11726 ;;		_toupper
 11727 ;; This function uses a reentrant model
 11728 ;;
 11729                           
 11730                           	psect	text46
 11731  0194F6                     __ptext46:
 11732                           	opt callstack 0
 11733  0194F6                     _islower:
 11734                           	opt callstack 0
 11735                           
 11736                           ;stkvar	_c @ sp[(0)+-2]
 11737                           
 11738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11739                           ;incstack = 0
 11740 ;; hardware stack exceeded
 11741  0194F6  0EFE               	movlw	-2
 11742  0194F8  50E3               	movf	plusw1,w,c
 11743  0194FA  0F9F               	addlw	159
 11744  0194FC  6E0B               	movwf	(btemp+10)^0,c
 11745  0194FE  0EFF               	movlw	-1
 11746  019500  006F FF8C  F00C    	movff	plusw1,btemp+11
 11747  019506  0EFF               	movlw	255
 11748  019508  220C               	addwfc	(btemp+11)^0,f,c
 11749  01950A  500C               	movf	(btemp+11)^0,w,c
 11750  01950C  E106               	bnz	u5180
 11751  01950E  0E1A               	movlw	26
 11752  019510  5C0B               	subwf	(btemp+10)^0,w,c
 11753  019512  B0D8               	btfsc	status,0,c
 11754  019514  D002               	goto	u5180
 11755  019516  0E01               	movlw	1
 11756  019518  D001               	goto	u5190
 11757  01951A                     u5180:
 11758  01951A  0E00               	movlw	0
 11759  01951C                     u5190:
 11760  01951C  6E01               	movwf	btemp^0,c
 11761  01951E  6A02               	clrf	(btemp+1)^0,c
 11762                           
 11763                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11764  019520  52E5               	movf	postdec1,f,c
 11765  019522  52E5               	movf	postdec1,f,c
 11766  019524  0012               	return		;funcret
 11767  019526                     __end_of_islower:
 11768                           	opt callstack 0
 11769                           
 11770 ;; *************** function _isalpha *****************
 11771 ;; Defined at:
 11772 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;  c               2  [STACK] int 
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;		None
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  2  [STACK] int 
 11779 ;; Registers used:
 11780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11790 ;;Total ram usage:        0 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:   15
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_xtoa
 11797 ;; This function uses a reentrant model
 11798 ;;
 11799                           
 11800                           	psect	text47
 11801  0191F6                     __ptext47:
 11802                           	opt callstack 0
 11803  0191F6                     _isalpha:
 11804                           	opt callstack 0
 11805                           
 11806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11807                           ;incstack = 0
 11808 ;; hardware stack exceeded
 11809  0191F6  0E9F               	movlw	159
 11810  0191F8  6E0B               	movwf	(btemp+10)^0,c
 11811  0191FA  0EFF               	movlw	255
 11812  0191FC  6E0C               	movwf	(btemp+11)^0,c
 11813                           
 11814                           ;stkvar	_c @ sp[(0)+-2]
 11815  0191FE  0EFE               	movlw	-2
 11816  019200  006F FF8C  F009    	movff	plusw1,btemp+8
 11817  019206  0EFF               	movlw	-1
 11818  019208  006F FF8C  F00A    	movff	plusw1,btemp+9
 11819  01920E  0E20               	movlw	32
 11820  019210  1209               	iorwf	(btemp+8)^0,f,c
 11821  019212  0E00               	movlw	0
 11822  019214  120A               	iorwf	(btemp+9)^0,f,c
 11823  019216  500B               	movf	(btemp+10)^0,w,c
 11824  019218  2609               	addwf	(btemp+8)^0,f,c
 11825  01921A  500C               	movf	(btemp+11)^0,w,c
 11826  01921C  220A               	addwfc	(btemp+9)^0,f,c
 11827  01921E  500A               	movf	(btemp+9)^0,w,c
 11828  019220  E106               	bnz	u5470
 11829  019222  0E1A               	movlw	26
 11830  019224  5C09               	subwf	(btemp+8)^0,w,c
 11831  019226  B0D8               	btfsc	status,0,c
 11832  019228  D002               	goto	u5470
 11833  01922A  0E01               	movlw	1
 11834  01922C  D001               	goto	u5480
 11835  01922E                     u5470:
 11836  01922E  0E00               	movlw	0
 11837  019230                     u5480:
 11838  019230  6E01               	movwf	btemp^0,c
 11839  019232  6A02               	clrf	(btemp+1)^0,c
 11840                           
 11841                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11842  019234  52E5               	movf	postdec1,f,c
 11843  019236  52E5               	movf	postdec1,f,c
 11844  019238  0012               	return		;funcret
 11845  01923A                     __end_of_isalpha:
 11846                           	opt callstack 0
 11847                           
 11848 ;; *************** function _strncmp *****************
 11849 ;; Defined at:
 11850 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  _l              2  [STACK] PTR const unsigned char 
 11853 ;;		 -> ct(3), 
 11854 ;;  _r              2  [STACK] PTR const unsigned char 
 11855 ;;		 -> STR_57(3), 
 11856 ;;  n               2  [STACK] unsigned int 
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;  r               2  [STACK] PTR const unsigned char 
 11859 ;;		 -> STR_57(3), 
 11860 ;;  l               2  [STACK] PTR const unsigned char 
 11861 ;;		 -> ct(3), 
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  2  [STACK] int 
 11864 ;; Registers used:
 11865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11875 ;;Total ram usage:        0 bytes
 11876 ;; Hardware stack levels used:    1
 11877 ;; Hardware stack levels required when called:   15
 11878 ;; This function calls:
 11879 ;;		Nothing
 11880 ;; This function is called by:
 11881 ;;		_vfpfcnvrt
 11882 ;; This function uses a reentrant model
 11883 ;;
 11884                           
 11885                           	psect	text48
 11886  016844                     __ptext48:
 11887                           	opt callstack 0
 11888  016844                     _strncmp:
 11889                           	opt callstack 0
 11890                           
 11891                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11892  016844  52E6               	movf	postinc1,f,c
 11893  016846  52E6               	movf	postinc1,f,c
 11894  016848  52E6               	movf	postinc1,f,c
 11895  01684A  52E6               	movf	postinc1,f,c
 11896                           
 11897                           ;stkvar	__l @ sp[(-4)+-2]
 11898                           
 11899                           ;incstack = 0
 11900 ;; hardware stack exceeded
 11901  01684C  0EFA               	movlw	-6
 11902  01684E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11903  016854  0EFB               	movlw	-5
 11904  016856  006F FF8C  F00C    	movff	plusw1,btemp+11
 11905                           
 11906                           ;stkvar	_l @ sp[(-4)+2]
 11907  01685C  0EFF               	movlw	-1
 11908  01685E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11909  016864  0EFE               	movlw	-2
 11910  016866  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11911                           
 11912                           ;stkvar	__r @ sp[(-4)+-4]
 11913  01686C  0EF8               	movlw	-8
 11914  01686E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11915  016874  0EF9               	movlw	-7
 11916  016876  006F FF8C  F00C    	movff	plusw1,btemp+11
 11917                           
 11918                           ;stkvar	_r @ sp[(-4)+0]
 11919  01687C  0EFD               	movlw	-3
 11920  01687E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11921  016884  0EFC               	movlw	-4
 11922  016886  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11923                           
 11924                           ;stkvar	_n @ sp[(-4)+-6]
 11925  01688C  0EF6               	movlw	-10
 11926  01688E  006F FF8C  F001    	movff	plusw1,btemp
 11927  016894  0E01               	movlw	1
 11928  016896  5E01               	subwf	btemp^0,f,c
 11929  016898  0EF6               	movlw	-10
 11930  01689A  0060  F007  FFE3   	movff	btemp,plusw1
 11931  0168A0  0EF7               	movlw	-9
 11932  0168A2  006F FF8C  F001    	movff	plusw1,btemp
 11933  0168A8  0E00               	movlw	0
 11934  0168AA  5A01               	subwfb	btemp^0,f,c
 11935  0168AC  0EF7               	movlw	-9
 11936  0168AE  0060  F007  FFE3   	movff	btemp,plusw1
 11937  0168B4  0EF6               	movlw	-10
 11938  0168B6  28E3               	incf	plusw1,w,c
 11939  0168B8  E13F               	bnz	l8490
 11940  0168BA  0EF7               	movlw	-9
 11941  0168BC  28E3               	incf	plusw1,w,c
 11942  0168BE  A4D8               	btfss	status,2,c
 11943  0168C0  D03B               	goto	l8490
 11944  0168C2  0E00               	movlw	0
 11945  0168C4  6E01               	movwf	btemp^0,c
 11946  0168C6  0E00               	movlw	0
 11947  0168C8  6E02               	movwf	(btemp+1)^0,c
 11948  0168CA  D09B               	goto	l3284
 11949  0168CC                     l8488:
 11950                           
 11951                           ;stkvar	_l @ sp[(-4)+2]
 11952  0168CC  0EFE               	movlw	-2
 11953  0168CE  50E3               	movf	plusw1,w,c
 11954  0168D0  0F01               	addlw	1
 11955  0168D2  6E01               	movwf	btemp^0,c
 11956  0168D4  0EFE               	movlw	-2
 11957  0168D6  0060  F007  FFE3   	movff	btemp,plusw1
 11958  0168DC  6A01               	clrf	btemp^0,c
 11959  0168DE  0EFF               	movlw	-1
 11960  0168E0  50E3               	movf	plusw1,w,c
 11961  0168E2  2001               	addwfc	btemp^0,w,c
 11962  0168E4  6E01               	movwf	btemp^0,c
 11963  0168E6  0EFF               	movlw	-1
 11964  0168E8  0060  F007  FFE3   	movff	btemp,plusw1
 11965                           
 11966                           ;stkvar	_r @ sp[(-4)+0]
 11967  0168EE  0EFC               	movlw	-4
 11968  0168F0  50E3               	movf	plusw1,w,c
 11969  0168F2  0F01               	addlw	1
 11970  0168F4  6E01               	movwf	btemp^0,c
 11971  0168F6  0EFC               	movlw	-4
 11972  0168F8  0060  F007  FFE3   	movff	btemp,plusw1
 11973  0168FE  6A01               	clrf	btemp^0,c
 11974  016900  0EFD               	movlw	-3
 11975  016902  50E3               	movf	plusw1,w,c
 11976  016904  2001               	addwfc	btemp^0,w,c
 11977  016906  6E01               	movwf	btemp^0,c
 11978  016908  0EFD               	movlw	-3
 11979  01690A  0060  F007  FFE3   	movff	btemp,plusw1
 11980                           
 11981                           ;stkvar	_n @ sp[(-4)+-6]
 11982  016910  0EF6               	movlw	-10
 11983  016912  006F FF8C  F001    	movff	plusw1,btemp
 11984  016918  0E01               	movlw	1
 11985  01691A  5E01               	subwf	btemp^0,f,c
 11986  01691C  0EF6               	movlw	-10
 11987  01691E  0060  F007  FFE3   	movff	btemp,plusw1
 11988  016924  0EF7               	movlw	-9
 11989  016926  006F FF8C  F001    	movff	plusw1,btemp
 11990  01692C  0E00               	movlw	0
 11991  01692E  5A01               	subwfb	btemp^0,f,c
 11992  016930  0EF7               	movlw	-9
 11993  016932  0060  F007  FFE3   	movff	btemp,plusw1
 11994  016938                     l8490:
 11995                           
 11996                           ;stkvar	_l @ sp[(-4)+2]
 11997  016938  0EFE               	movlw	-2
 11998  01693A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11999  016940  0EFF               	movlw	-1
 12000  016942  006F FF8F FFDA     	movff	plusw1,fsr2h
 12001  016948  50DF               	movf	indf2,w,c
 12002  01694A  B4D8               	btfsc	status,2,c
 12003  01694C  D03B               	goto	u7730
 12004                           
 12005                           ;stkvar	_r @ sp[(-4)+0]
 12006  01694E  50E1               	movf	fsr1l,w,c
 12007  016950  0FFC               	addlw	-4
 12008  016952  6ED9               	movwf	fsr2l,c
 12009  016954  50E2               	movf	fsr1h,w,c
 12010  016956  6EDA               	movwf	fsr2h,c
 12011  016958  0EFF               	movlw	255
 12012  01695A  22DA               	addwfc	fsr2h,f,c
 12013  01695C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12014  016962  006F FF77 FFF7     	movff	postdec2,tblptrh
 12015  016968                     	if	0	;tblptru may be non-zero
 12016  016968                     	endif
 12017  016968                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12018  016968  0E00               	movlw	low (__mediumconst shr (0+16))
 12019  01696A  6EF8               	movwf	tblptru,c
 12020  01696C                     	endif
 12021  01696C  0008               	tblrd		*
 12022  01696E  50F5               	movf	tablat,w,c
 12023  016970  0900               	iorlw	0
 12024  016972  B4D8               	btfsc	status,2,c
 12025  016974  D027               	goto	u7730
 12026                           
 12027                           ;stkvar	_n @ sp[(-4)+-6]
 12028  016976  0EF6               	movlw	-10
 12029  016978  006F FF8C  F001    	movff	plusw1,btemp
 12030  01697E  0EF7               	movlw	-9
 12031  016980  50E3               	movf	plusw1,w,c
 12032  016982  1001               	iorwf	btemp^0,w,c
 12033  016984  B4D8               	btfsc	status,2,c
 12034  016986  D01E               	goto	u7730
 12035                           
 12036                           ;stkvar	_l @ sp[(-4)+2]
 12037  016988  0EFE               	movlw	-2
 12038  01698A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12039  016990  0EFF               	movlw	-1
 12040  016992  006F FF8F FFDA     	movff	plusw1,fsr2h
 12041  016998  50DF               	movf	indf2,w,c
 12042  01699A  6E0C               	movwf	(btemp+11)^0,c
 12043                           
 12044                           ;stkvar	_r @ sp[(-4)+0]
 12045  01699C  50E1               	movf	fsr1l,w,c
 12046  01699E  0FFC               	addlw	-4
 12047  0169A0  6ED9               	movwf	fsr2l,c
 12048  0169A2  50E2               	movf	fsr1h,w,c
 12049  0169A4  6EDA               	movwf	fsr2h,c
 12050  0169A6  0EFF               	movlw	255
 12051  0169A8  22DA               	addwfc	fsr2h,f,c
 12052  0169AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 12053  0169B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12054  0169B6                     	if	0	;tblptru may be non-zero
 12055  0169B6                     	endif
 12056  0169B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12057  0169B6  0E00               	movlw	low (__mediumconst shr (0+16))
 12058  0169B8  6EF8               	movwf	tblptru,c
 12059  0169BA                     	endif
 12060  0169BA  0008               	tblrd		*
 12061  0169BC  50F5               	movf	tablat,w,c
 12062  0169BE  180C               	xorwf	(btemp+11)^0,w,c
 12063  0169C0  B4D8               	btfsc	status,2,c
 12064  0169C2  D784               	goto	l8488
 12065  0169C4                     u7730:
 12066                           
 12067                           ;stkvar	_l @ sp[(-4)+2]
 12068  0169C4  0EFE               	movlw	-2
 12069  0169C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12070  0169CC  0EFF               	movlw	-1
 12071  0169CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12072  0169D4  50DF               	movf	indf2,w,c
 12073  0169D6  6E01               	movwf	btemp^0,c
 12074  0169D8  6A02               	clrf	(btemp+1)^0,c
 12075                           
 12076                           ;stkvar	_r @ sp[(-4)+0]
 12077  0169DA  50E1               	movf	fsr1l,w,c
 12078  0169DC  0FFC               	addlw	-4
 12079  0169DE  6ED9               	movwf	fsr2l,c
 12080  0169E0  50E2               	movf	fsr1h,w,c
 12081  0169E2  6EDA               	movwf	fsr2h,c
 12082  0169E4  0EFF               	movlw	255
 12083  0169E6  22DA               	addwfc	fsr2h,f,c
 12084  0169E8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12085  0169EE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12086  0169F4                     	if	0	;tblptru may be non-zero
 12087  0169F4                     	endif
 12088  0169F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12089  0169F4  0E00               	movlw	low (__mediumconst shr (0+16))
 12090  0169F6  6EF8               	movwf	tblptru,c
 12091  0169F8                     	endif
 12092  0169F8  0008               	tblrd		*
 12093  0169FA  50F5               	movf	tablat,w,c
 12094  0169FC  5E01               	subwf	btemp^0,f,c
 12095  0169FE  0E00               	movlw	0
 12096  016A00  5A02               	subwfb	(btemp+1)^0,f,c
 12097  016A02                     l3284:
 12098                           
 12099                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 12100  016A02  0EF6               	movlw	246
 12101  016A04  26E1               	addwf	fsr1l,f,c
 12102  016A06  0EFF               	movlw	255
 12103  016A08  22E2               	addwfc	fsr1h,f,c
 12104  016A0A  0012               	return		;funcret
 12105  016A0C                     __end_of_strncmp:
 12106                           	opt callstack 0
 12107                           
 12108 ;; *************** function _stoa *****************
 12109 ;; Defined at:
 12110 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12111 ;; Parameters:    Size  Location     Type
 12112 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12113 ;;		 -> f(6), NULL(0), 
 12114 ;;  s               2  [STACK] PTR unsigned char 
 12115 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 12116 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 12117 ;;		 -> STR_3(6), V(188), 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;  nuls            7  [STACK] unsigned char [7]
 12120 ;;  l               2  [STACK] int 
 12121 ;;  p               2  [STACK] int 
 12122 ;;  cp              2  [STACK] PTR unsigned char 
 12123 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 12124 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 12125 ;;		 -> STR_7(6), STR_3(6), V(188), 
 12126 ;;  w               2  [STACK] int 
 12127 ;;  i               2  [STACK] int 
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  2  [STACK] int 
 12130 ;; Registers used:
 12131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12141 ;;Total ram usage:        0 bytes
 12142 ;; Hardware stack levels used:    1
 12143 ;; Hardware stack levels required when called:   18
 12144 ;; This function calls:
 12145 ;;		_fputc
 12146 ;;		_strlen
 12147 ;; This function is called by:
 12148 ;;		_vfpfcnvrt
 12149 ;; This function uses a reentrant model
 12150 ;;
 12151                           
 12152                           	psect	text49
 12153  01583C                     __ptext49:
 12154                           	opt callstack 0
 12155  01583C                     _stoa:
 12156                           	opt callstack 0
 12157                           
 12158                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12159  01583C  0E11               	movlw	17
 12160  01583E  26E1               	addwf	fsr1l,f,c
 12161  015840  0E00               	movlw	0
 12162  015842  22E2               	addwfc	fsr1h,f,c
 12163                           
 12164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 12165                           
 12166                           ;incstack = 0
 12167 ;; hardware stack exceeded
 12168  015844  EE20  F1D3         	lfsr	2,stoa@F1166
 12169                           
 12170                           ;stkvar	_nuls @ sp[(-17)+0]
 12171  015848  0E07               	movlw	7
 12172  01584A  6E01               	movwf	btemp^0,c
 12173  01584C  0EEF               	movlw	-17
 12174  01584E                     us1019999:
 12175  01584E  006F FF7B FFE3     	movff	postinc2,plusw1
 12176  015854  28E8               	incf	wreg,w,c
 12177  015856  2E01               	decfsz	btemp^0,f,c
 12178  015858  D7FA               	bra	us1019999
 12179                           
 12180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 12181                           ;stkvar	_s @ sp[(-17)+-4]
 12182  01585A  0EEB               	movlw	-21
 12183  01585C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12184  015862  0EEC               	movlw	-20
 12185  015864  006F FF8C  F00C    	movff	plusw1,btemp+11
 12186                           
 12187                           ;stkvar	_cp @ sp[(-17)+11]
 12188  01586A  0EFB               	movlw	-5
 12189  01586C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12190  015872  0EFA               	movlw	-6
 12191  015874  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12192                           
 12193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 12194                           ;stkvar	_cp @ sp[(-17)+11]
 12195  01587A  0EFA               	movlw	-6
 12196  01587C  006F FF8C  F001    	movff	plusw1,btemp
 12197  015882  0EFB               	movlw	-5
 12198  015884  50E3               	movf	plusw1,w,c
 12199  015886  1001               	iorwf	btemp^0,w,c
 12200  015888  A4D8               	btfss	status,2,c
 12201  01588A  D00E               	goto	l10930
 12202                           
 12203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 12204                           ;stkvar	_nuls @ sp[(-17)+0]
 12205  01588C  0EEF               	movlw	239
 12206  01588E  24E1               	addwf	fsr1l,w,c
 12207  015890  6E0B               	movwf	(btemp+10)^0,c
 12208  015892  0EFF               	movlw	255
 12209  015894  20E2               	addwfc	fsr1h,w,c
 12210  015896  6E0C               	movwf	(btemp+11)^0,c
 12211                           
 12212                           ;stkvar	_cp @ sp[(-17)+11]
 12213  015898  0EFB               	movlw	-5
 12214  01589A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12215  0158A0  0EFA               	movlw	-6
 12216  0158A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12217  0158A8                     l10930:
 12218                           
 12219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 12220                           ;stkvar	_cp @ sp[(-17)+11]
 12221  0158A8  0EFA               	movlw	-6
 12222  0158AA  006F FF8F FFE6     	movff	plusw1,postinc1
 12223  0158B0  006F FF8F FFE6     	movff	plusw1,postinc1
 12224  0158B6  EC7A  F0C2         	call	_strlen	;wreg free
 12225                           
 12226                           ;stkvar	_l @ sp[(-17)+7]
 12227  0158BA  0EF6               	movlw	-10
 12228  0158BC  0060  F007  FFE3   	movff	btemp,plusw1
 12229  0158C2  0EF7               	movlw	-9
 12230  0158C4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12231                           
 12232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 12233                           ;stkvar	_p @ sp[(-17)+9]
 12234  0158CA  0EF8               	movlw	-8
 12235  0158CC  0060  F08F  FFE3   	movff	_prec,plusw1
 12236  0158D2  0EF9               	movlw	-7
 12237  0158D4  0060  F093  FFE3   	movff	_prec+1,plusw1
 12238                           
 12239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 12240                           ;stkvar	_p @ sp[(-17)+9]
 12241  0158DA  0EF9               	movlw	-7
 12242  0158DC  BEE3               	btfsc	plusw1,7,c
 12243  0158DE  D023               	goto	l2137
 12244                           
 12245                           ;stkvar	_l @ sp[(-17)+7]
 12246                           ;stkvar	_p @ sp[(-17)+9]
 12247  0158E0  50E1               	movf	fsr1l,w,c
 12248  0158E2  0FF8               	addlw	-8
 12249  0158E4  6ED9               	movwf	fsr2l,c
 12250  0158E6  50E2               	movf	fsr1h,w,c
 12251  0158E8  6EDA               	movwf	fsr2h,c
 12252  0158EA  0EFF               	movlw	255
 12253  0158EC  22DA               	addwfc	fsr2h,f,c
 12254  0158EE  0EF6               	movlw	-10
 12255  0158F0  50E3               	movf	plusw1,w,c
 12256  0158F2  5CDE               	subwf	postinc2,w,c
 12257  0158F4  50DE               	movf	postinc2,w,c
 12258  0158F6  0A80               	xorlw	128
 12259  0158F8  6E01               	movwf	btemp^0,c
 12260  0158FA  0EF7               	movlw	-9
 12261  0158FC  50E3               	movf	plusw1,w,c
 12262  0158FE  0A80               	xorlw	128
 12263  015900  5801               	subwfb	btemp^0,w,c
 12264  015902  B0D8               	btfsc	status,0,c
 12265  015904  D010               	goto	l2137
 12266                           
 12267                           ;stkvar	_p @ sp[(-17)+9]
 12268                           ;stkvar	_l @ sp[(-17)+7]
 12269  015906  0EF8               	movlw	-8
 12270  015908  006F FF8C  F001    	movff	plusw1,btemp
 12271  01590E  0EF6               	movlw	-10
 12272  015910  0060  F007  FFE3   	movff	btemp,plusw1
 12273  015916  0EF9               	movlw	-7
 12274  015918  006F FF8C  F001    	movff	plusw1,btemp
 12275  01591E  0EF7               	movlw	-9
 12276  015920  0060  F007  FFE3   	movff	btemp,plusw1
 12277  015926                     l2137:
 12278                           
 12279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 12280                           ;stkvar	_l @ sp[(-17)+7]
 12281                           ;stkvar	_p @ sp[(-17)+9]
 12282  015926  0EF6               	movlw	-10
 12283  015928  006F FF8C  F001    	movff	plusw1,btemp
 12284  01592E  0EF8               	movlw	-8
 12285  015930  0060  F007  FFE3   	movff	btemp,plusw1
 12286  015936  0EF7               	movlw	-9
 12287  015938  006F FF8C  F001    	movff	plusw1,btemp
 12288  01593E  0EF9               	movlw	-7
 12289  015940  0060  F007  FFE3   	movff	btemp,plusw1
 12290                           
 12291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 12292                           ;stkvar	_w @ sp[(-17)+13]
 12293  015946  0EFC               	movlw	-4
 12294  015948  0060  F087  FFE3   	movff	_width,plusw1
 12295  01594E  0EFD               	movlw	-3
 12296  015950  0060  F08B  FFE3   	movff	_width+1,plusw1
 12297                           
 12298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 12299  015956  A025               	btfss	_flags^0,0,c
 12300  015958  D01F               	goto	l10950
 12301  01595A  D031               	goto	u10240
 12302  01595C                     l10946:
 12303                           
 12304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 12305                           ;stkvar	_fp @ sp[(-17)+-2]
 12306  01595C  0EED               	movlw	-19
 12307  01595E  006F FF8F FFE6     	movff	plusw1,postinc1
 12308  015964  006F FF8F FFE6     	movff	plusw1,postinc1
 12309  01596A  0E20               	movlw	32
 12310  01596C  6EE6               	movwf	postinc1,c
 12311  01596E  0E00               	movlw	0
 12312  015970  6EE6               	movwf	postinc1,c
 12313  015972  EC57  F0BB         	call	_fputc	;wreg free
 12314                           
 12315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 12316                           ;stkvar	_l @ sp[(-17)+7]
 12317  015976  0EF6               	movlw	-10
 12318  015978  50E3               	movf	plusw1,w,c
 12319  01597A  0F01               	addlw	1
 12320  01597C  6E01               	movwf	btemp^0,c
 12321  01597E  0EF6               	movlw	-10
 12322  015980  0060  F007  FFE3   	movff	btemp,plusw1
 12323  015986  6A01               	clrf	btemp^0,c
 12324  015988  0EF7               	movlw	-9
 12325  01598A  50E3               	movf	plusw1,w,c
 12326  01598C  2001               	addwfc	btemp^0,w,c
 12327  01598E  6E01               	movwf	btemp^0,c
 12328  015990  0EF7               	movlw	-9
 12329  015992  0060  F007  FFE3   	movff	btemp,plusw1
 12330  015998                     l10950:
 12331                           
 12332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 12333                           ;stkvar	_w @ sp[(-17)+13]
 12334                           ;stkvar	_l @ sp[(-17)+7]
 12335  015998  50E1               	movf	fsr1l,w,c
 12336  01599A  0FF6               	addlw	-10
 12337  01599C  6ED9               	movwf	fsr2l,c
 12338  01599E  50E2               	movf	fsr1h,w,c
 12339  0159A0  6EDA               	movwf	fsr2h,c
 12340  0159A2  0EFF               	movlw	255
 12341  0159A4  22DA               	addwfc	fsr2h,f,c
 12342  0159A6  0EFC               	movlw	-4
 12343  0159A8  50E3               	movf	plusw1,w,c
 12344  0159AA  5CDE               	subwf	postinc2,w,c
 12345  0159AC  50DE               	movf	postinc2,w,c
 12346  0159AE  0A80               	xorlw	128
 12347  0159B0  6E01               	movwf	btemp^0,c
 12348  0159B2  0EFD               	movlw	-3
 12349  0159B4  50E3               	movf	plusw1,w,c
 12350  0159B6  0A80               	xorlw	128
 12351  0159B8  5801               	subwfb	btemp^0,w,c
 12352  0159BA  A0D8               	btfss	status,0,c
 12353  0159BC  D7CF               	goto	l10946
 12354  0159BE                     u10240:
 12355                           
 12356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 12357                           ;stkvar	_i @ sp[(-17)+15]
 12358  0159BE  0EFE               	movlw	-2
 12359  0159C0  6AE3               	clrf	plusw1,c
 12360  0159C2  0EFF               	movlw	-1
 12361  0159C4  6AE3               	clrf	plusw1,c
 12362                           
 12363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 12364  0159C6  D045               	goto	l10960
 12365  0159C8                     l10954:
 12366                           
 12367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 12368                           ;stkvar	_fp @ sp[(-17)+-2]
 12369  0159C8  0EED               	movlw	-19
 12370  0159CA  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  0159D0  006F FF8F FFE6     	movff	plusw1,postinc1
 12372                           
 12373                           ;stkvar	_cp @ sp[(-19)+11]
 12374  0159D6  0EF8               	movlw	-8
 12375  0159D8  006F FF8F FFF6     	movff	plusw1,tblptrl
 12376  0159DE  0EF9               	movlw	-7
 12377  0159E0  006F FF8F FFF7     	movff	plusw1,tblptrh
 12378  0159E6  0E00               	movlw	low (__mediumconst shr (0+16))
 12379  0159E8  6EF8               	movwf	tblptru,c
 12380  0159EA  0E1F               	movlw	(high __ramtop+-1)
 12381  0159EC  64F7               	cpfsgt	tblptrh,c
 12382  0159EE  D003               	bra	u10257
 12383  0159F0  0008               	tblrd		*
 12384  0159F2  50F5               	movf	tablat,w,c
 12385  0159F4  D007               	bra	u10250
 12386  0159F6                     u10257:
 12387  0159F6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12388  0159FC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12389  015A02  50EF               	movf	indf0,w,c
 12390  015A04                     u10250:
 12391  015A04  6EE6               	movwf	postinc1,c
 12392  015A06  0E00               	movlw	0
 12393  015A08  6EE6               	movwf	postinc1,c
 12394  015A0A  EC57  F0BB         	call	_fputc	;wreg free
 12395                           
 12396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 12397                           ;stkvar	_cp @ sp[(-17)+11]
 12398  015A0E  0EFA               	movlw	-6
 12399  015A10  50E3               	movf	plusw1,w,c
 12400  015A12  0F01               	addlw	1
 12401  015A14  6E01               	movwf	btemp^0,c
 12402  015A16  0EFA               	movlw	-6
 12403  015A18  0060  F007  FFE3   	movff	btemp,plusw1
 12404  015A1E  6A01               	clrf	btemp^0,c
 12405  015A20  0EFB               	movlw	-5
 12406  015A22  50E3               	movf	plusw1,w,c
 12407  015A24  2001               	addwfc	btemp^0,w,c
 12408  015A26  6E01               	movwf	btemp^0,c
 12409  015A28  0EFB               	movlw	-5
 12410  015A2A  0060  F007  FFE3   	movff	btemp,plusw1
 12411                           
 12412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 12413                           ;stkvar	_i @ sp[(-17)+15]
 12414  015A30  0EFE               	movlw	-2
 12415  015A32  50E3               	movf	plusw1,w,c
 12416  015A34  0F01               	addlw	1
 12417  015A36  6E01               	movwf	btemp^0,c
 12418  015A38  0EFE               	movlw	-2
 12419  015A3A  0060  F007  FFE3   	movff	btemp,plusw1
 12420  015A40  6A01               	clrf	btemp^0,c
 12421  015A42  0EFF               	movlw	-1
 12422  015A44  50E3               	movf	plusw1,w,c
 12423  015A46  2001               	addwfc	btemp^0,w,c
 12424  015A48  6E01               	movwf	btemp^0,c
 12425  015A4A  0EFF               	movlw	-1
 12426  015A4C  0060  F007  FFE3   	movff	btemp,plusw1
 12427  015A52                     l10960:
 12428                           
 12429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 12430                           ;stkvar	_p @ sp[(-17)+9]
 12431                           ;stkvar	_i @ sp[(-17)+15]
 12432  015A52  50E1               	movf	fsr1l,w,c
 12433  015A54  0FFE               	addlw	-2
 12434  015A56  6ED9               	movwf	fsr2l,c
 12435  015A58  50E2               	movf	fsr1h,w,c
 12436  015A5A  6EDA               	movwf	fsr2h,c
 12437  015A5C  0EFF               	movlw	255
 12438  015A5E  22DA               	addwfc	fsr2h,f,c
 12439  015A60  0EF8               	movlw	-8
 12440  015A62  50E3               	movf	plusw1,w,c
 12441  015A64  5CDE               	subwf	postinc2,w,c
 12442  015A66  50DE               	movf	postinc2,w,c
 12443  015A68  0A80               	xorlw	128
 12444  015A6A  6E01               	movwf	btemp^0,c
 12445  015A6C  0EF9               	movlw	-7
 12446  015A6E  50E3               	movf	plusw1,w,c
 12447  015A70  0A80               	xorlw	128
 12448  015A72  5801               	subwfb	btemp^0,w,c
 12449  015A74  A0D8               	btfss	status,0,c
 12450  015A76  D7A8               	goto	l10954
 12451                           
 12452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 12453  015A78  B025               	btfsc	_flags^0,0,c
 12454  015A7A  D01F               	goto	l10968
 12455  015A7C  D031               	goto	u10280
 12456  015A7E                     l10964:
 12457                           
 12458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 12459                           ;stkvar	_fp @ sp[(-17)+-2]
 12460  015A7E  0EED               	movlw	-19
 12461  015A80  006F FF8F FFE6     	movff	plusw1,postinc1
 12462  015A86  006F FF8F FFE6     	movff	plusw1,postinc1
 12463  015A8C  0E20               	movlw	32
 12464  015A8E  6EE6               	movwf	postinc1,c
 12465  015A90  0E00               	movlw	0
 12466  015A92  6EE6               	movwf	postinc1,c
 12467  015A94  EC57  F0BB         	call	_fputc	;wreg free
 12468                           
 12469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 12470                           ;stkvar	_l @ sp[(-17)+7]
 12471  015A98  0EF6               	movlw	-10
 12472  015A9A  50E3               	movf	plusw1,w,c
 12473  015A9C  0F01               	addlw	1
 12474  015A9E  6E01               	movwf	btemp^0,c
 12475  015AA0  0EF6               	movlw	-10
 12476  015AA2  0060  F007  FFE3   	movff	btemp,plusw1
 12477  015AA8  6A01               	clrf	btemp^0,c
 12478  015AAA  0EF7               	movlw	-9
 12479  015AAC  50E3               	movf	plusw1,w,c
 12480  015AAE  2001               	addwfc	btemp^0,w,c
 12481  015AB0  6E01               	movwf	btemp^0,c
 12482  015AB2  0EF7               	movlw	-9
 12483  015AB4  0060  F007  FFE3   	movff	btemp,plusw1
 12484  015ABA                     l10968:
 12485                           
 12486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 12487                           ;stkvar	_w @ sp[(-17)+13]
 12488                           ;stkvar	_l @ sp[(-17)+7]
 12489  015ABA  50E1               	movf	fsr1l,w,c
 12490  015ABC  0FF6               	addlw	-10
 12491  015ABE  6ED9               	movwf	fsr2l,c
 12492  015AC0  50E2               	movf	fsr1h,w,c
 12493  015AC2  6EDA               	movwf	fsr2h,c
 12494  015AC4  0EFF               	movlw	255
 12495  015AC6  22DA               	addwfc	fsr2h,f,c
 12496  015AC8  0EFC               	movlw	-4
 12497  015ACA  50E3               	movf	plusw1,w,c
 12498  015ACC  5CDE               	subwf	postinc2,w,c
 12499  015ACE  50DE               	movf	postinc2,w,c
 12500  015AD0  0A80               	xorlw	128
 12501  015AD2  6E01               	movwf	btemp^0,c
 12502  015AD4  0EFD               	movlw	-3
 12503  015AD6  50E3               	movf	plusw1,w,c
 12504  015AD8  0A80               	xorlw	128
 12505  015ADA  5801               	subwfb	btemp^0,w,c
 12506  015ADC  A0D8               	btfss	status,0,c
 12507  015ADE  D7CF               	goto	l10964
 12508  015AE0                     u10280:
 12509                           
 12510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 12511                           ;stkvar	_l @ sp[(-17)+7]
 12512  015AE0  0EF6               	movlw	-10
 12513  015AE2  006F FF8C  F001    	movff	plusw1,btemp
 12514  015AE8  0EF7               	movlw	-9
 12515  015AEA  006F FF8C  F002    	movff	plusw1,btemp+1
 12516                           
 12517                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12518  015AF0  0EEB               	movlw	235
 12519  015AF2  26E1               	addwf	fsr1l,f,c
 12520  015AF4  0EFF               	movlw	255
 12521  015AF6  22E2               	addwfc	fsr1h,f,c
 12522  015AF8  0012               	return		;funcret
 12523  015AFA                     __end_of_stoa:
 12524                           	opt callstack 0
 12525                           
 12526 ;; *************** function _efgtoa *****************
 12527 ;; Defined at:
 12528 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12531 ;;		 -> f(6), NULL(0), 
 12532 ;;  f               4  [STACK] PTR struct _IO_FILE
 12533 ;;  c               1  [STACK] unsigned char 
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;  u               4  [STACK] unsigned char 
 12536 ;;  g               4  [STACK] unsigned char 
 12537 ;;  l               4  [STACK] unsigned char 
 12538 ;;  h               4  [STACK] unsigned char 
 12539 ;;  ou              4  [STACK] unsigned char 
 12540 ;;  n               2  [STACK] int 
 12541 ;;  e               2  [STACK] int 
 12542 ;;  i               2  [STACK] int 
 12543 ;;  w               2  [STACK] int 
 12544 ;;  p               2  [STACK] int 
 12545 ;;  sign            2  [STACK] int 
 12546 ;;  d               2  [STACK] int 
 12547 ;;  ne              2  [STACK] int 
 12548 ;;  m               2  [STACK] int 
 12549 ;;  pp              2  [STACK] int 
 12550 ;;  t               2  [STACK] int 
 12551 ;;  mode            1  [STACK] unsigned char 
 12552 ;;  nmode           1  [STACK] unsigned char 
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  2  [STACK] int 
 12555 ;; Registers used:
 12556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12566 ;;Total ram usage:        0 bytes
 12567 ;; Hardware stack levels used:    1
 12568 ;; Hardware stack levels required when called:   20
 12569 ;; This function calls:
 12570 ;;		___awdiv
 12571 ;;		___awmod
 12572 ;;		___fladd
 12573 ;;		___fldiv
 12574 ;;		___fleq
 12575 ;;		___flge
 12576 ;;		___flmul
 12577 ;;		___flneg
 12578 ;;		___flsub
 12579 ;;		___fltol
 12580 ;;		___fpclassifyf
 12581 ;;		_floorf
 12582 ;;		_isupper
 12583 ;;		_pad
 12584 ;;		_strcpy
 12585 ;;		_tolower
 12586 ;; This function is called by:
 12587 ;;		_vfpfcnvrt
 12588 ;; This function uses a reentrant model
 12589 ;;
 12590                           
 12591                           	psect	text50
 12592  010000                     __ptext50:
 12593                           	opt callstack 0
 12594  010000                     _efgtoa:
 12595                           	opt callstack 0
 12596                           
 12597                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12598  010000  0E38               	movlw	56
 12599  010002  26E1               	addwf	fsr1l,f,c
 12600  010004  0E00               	movlw	0
 12601  010006  22E2               	addwfc	fsr1h,f,c
 12602                           
 12603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 12604                           ;stkvar	_sign @ sp[(-56)+42]
 12605                           
 12606                           ;incstack = 0
 12607 ;; hardware stack exceeded
 12608  010008  0EF2               	movlw	-14
 12609  01000A  6AE3               	clrf	plusw1,c
 12610  01000C  0EF3               	movlw	-13
 12611  01000E  6AE3               	clrf	plusw1,c
 12612                           
 12613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 12614                           ;stkvar	_f @ sp[(-56)+-6]
 12615  010010  0EC2               	movlw	-62
 12616  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 12617  010018  0EC3               	movlw	-61
 12618  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 12619  010020  0EC4               	movlw	-60
 12620  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 12621  010028  0EC5               	movlw	-59
 12622  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12623                           
 12624                           ;stkvar	_g @ sp[(-56)+16]
 12625  010030  0ED8               	movlw	-40
 12626  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 12627  010038  0ED9               	movlw	-39
 12628  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12629  010040  0EDA               	movlw	-38
 12630  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12631  010048  0EDB               	movlw	-37
 12632  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12633                           
 12634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 12635                           ;stkvar	_g @ sp[(-56)+16]
 12636  010050  0EDB               	movlw	-37
 12637  010052  AEE3               	btfss	plusw1,7,c
 12638  010054  D02B               	goto	l10628
 12639                           
 12640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 12641  010056  0E01               	movlw	1
 12642  010058  6E0B               	movwf	(btemp+10)^0,c
 12643  01005A  0E00               	movlw	0
 12644  01005C  6E0C               	movwf	(btemp+11)^0,c
 12645                           
 12646                           ;stkvar	_sign @ sp[(-56)+42]
 12647  01005E  0EF2               	movlw	-14
 12648  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12649  010066  0EF3               	movlw	-13
 12650  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 12651                           
 12652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 12653                           ;stkvar	_g @ sp[(-56)+16]
 12654  01006E  0ED8               	movlw	-40
 12655  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 12656  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 12657  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 12658  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 12659  010088  EC28  F0C8         	call	___flneg	;wreg free
 12660                           
 12661                           ;stkvar	_g @ sp[(-56)+16]
 12662  01008C  0ED8               	movlw	-40
 12663  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 12664  010094  0ED9               	movlw	-39
 12665  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12666  01009C  0EDA               	movlw	-38
 12667  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12668  0100A4  0EDB               	movlw	-37
 12669  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 12670  0100AC                     l10628:
 12671                           
 12672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 12673                           ;stkvar	_n @ sp[(-56)+32]
 12674  0100AC  0EE8               	movlw	-24
 12675  0100AE  6AE3               	clrf	plusw1,c
 12676  0100B0  0EE9               	movlw	-23
 12677  0100B2  6AE3               	clrf	plusw1,c
 12678                           
 12679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 12680                           ;stkvar	_w @ sp[(-56)+38]
 12681  0100B4  0EEE               	movlw	-18
 12682  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 12683  0100BC  0EEF               	movlw	-17
 12684  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 12685                           
 12686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 12687                           ;stkvar	_sign @ sp[(-56)+42]
 12688  0100C4  0EF2               	movlw	-14
 12689  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 12690  0100CC  0EF3               	movlw	-13
 12691  0100CE  50E3               	movf	plusw1,w,c
 12692  0100D0  1001               	iorwf	btemp^0,w,c
 12693  0100D2  A4D8               	btfss	status,2,c
 12694  0100D4  D002               	goto	u9690
 12695  0100D6  A425               	btfss	_flags^0,2,c
 12696  0100D8  D036               	goto	l10648
 12697  0100DA                     u9690:
 12698                           
 12699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 12700                           ;stkvar	_sign @ sp[(-56)+42]
 12701  0100DA  0EF2               	movlw	-14
 12702  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 12703  0100E2  0EF3               	movlw	-13
 12704  0100E4  50E3               	movf	plusw1,w,c
 12705  0100E6  1001               	iorwf	btemp^0,w,c
 12706  0100E8  A4D8               	btfss	status,2,c
 12707  0100EA  D002               	goto	l10640
 12708  0100EC  0E2B               	movlw	43
 12709  0100EE  D001               	goto	L9
 12710  0100F0                     l10640:
 12711  0100F0  0E2D               	movlw	45
 12712  0100F2                     L9:
 12713  0100F2  6E0B               	movwf	(btemp+10)^0,c
 12714  0100F4  0E00               	movlw	0
 12715  0100F6  6E0C               	movwf	(btemp+11)^0,c
 12716                           
 12717                           ;stkvar	_efgtoa$5143 @ sp[(-56)+10]
 12718  0100F8  0ED2               	movlw	-46
 12719  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12720  010100  0ED3               	movlw	-45
 12721  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 12722                           
 12723                           ;stkvar	_efgtoa$5143 @ sp[(-56)+10]
 12724  010108  0ED2               	movlw	-46
 12725  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 12726                           
 12727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 12728                           ;stkvar	_n @ sp[(-56)+32]
 12729  010110  0EE8               	movlw	-24
 12730  010112  50E3               	movf	plusw1,w,c
 12731  010114  0F01               	addlw	1
 12732  010116  6E01               	movwf	btemp^0,c
 12733  010118  0EE8               	movlw	-24
 12734  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 12735  010120  6A01               	clrf	btemp^0,c
 12736  010122  0EE9               	movlw	-23
 12737  010124  50E3               	movf	plusw1,w,c
 12738  010126  2001               	addwfc	btemp^0,w,c
 12739  010128  6E01               	movwf	btemp^0,c
 12740  01012A  0EE9               	movlw	-23
 12741  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 12742                           
 12743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 12744                           ;stkvar	_w @ sp[(-56)+38]
 12745  010132  50E1               	movf	fsr1l,w,c
 12746  010134  0FEE               	addlw	-18
 12747  010136  6ED9               	movwf	fsr2l,c
 12748  010138  50E2               	movf	fsr1h,w,c
 12749  01013A  6EDA               	movwf	fsr2h,c
 12750  01013C  0EFF               	movlw	255
 12751  01013E  22DA               	addwfc	fsr2h,f,c
 12752  010140  06DE               	decf	postinc2,f,c
 12753  010142  0E00               	movlw	0
 12754  010144  5ADD               	subwfb	postdec2,f,c
 12755  010146                     l10648:
 12756                           
 12757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12758                           ;stkvar	_g @ sp[(-56)+16]
 12759  010146  0ED8               	movlw	-40
 12760  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 12761  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 12762  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 12763  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 12764  010160  ECE6  F0B5         	call	___fpclassifyf	;wreg free
 12765  010164  0401               	decf	btemp^0,w,c
 12766  010166  1002               	iorwf	(btemp+1)^0,w,c
 12767  010168  A4D8               	btfss	status,2,c
 12768  01016A  D076               	goto	l10666
 12769  01016C  0EBF               	movlw	191
 12770  01016E  6E0B               	movwf	(btemp+10)^0,c
 12771  010170  0EFF               	movlw	255
 12772  010172  6E0C               	movwf	(btemp+11)^0,c
 12773                           
 12774                           ;stkvar	_c @ sp[(-56)+-7]
 12775  010174  0EC1               	movlw	-63
 12776  010176  50E3               	movf	plusw1,w,c
 12777  010178  6E09               	movwf	(btemp+8)^0,c
 12778  01017A  6A0A               	clrf	(btemp+9)^0,c
 12779  01017C  500B               	movf	(btemp+10)^0,w,c
 12780  01017E  2609               	addwf	(btemp+8)^0,f,c
 12781  010180  500C               	movf	(btemp+11)^0,w,c
 12782  010182  220A               	addwfc	(btemp+9)^0,f,c
 12783  010184  500A               	movf	(btemp+9)^0,w,c
 12784  010186  E106               	bnz	u9720
 12785  010188  0E1A               	movlw	26
 12786  01018A  5C09               	subwf	(btemp+8)^0,w,c
 12787  01018C  B0D8               	btfsc	status,0,c
 12788  01018E  D002               	goto	u9720
 12789  010190  0E01               	movlw	1
 12790  010192  D001               	goto	u9730
 12791  010194                     u9720:
 12792  010194  0E00               	movlw	0
 12793  010196                     u9730:
 12794  010196  6E0B               	movwf	(btemp+10)^0,c
 12795  010198  6A0C               	clrf	(btemp+11)^0,c
 12796                           
 12797                           ;stkvar	_efgtoa$5144 @ sp[(-56)+8]
 12798  01019A  0ED0               	movlw	-48
 12799  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12800  0101A2  0ED1               	movlw	-47
 12801  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12802                           
 12803                           ;stkvar	_efgtoa$5144 @ sp[(-56)+8]
 12804  0101AA  0ED0               	movlw	-48
 12805  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 12806  0101B2  0ED1               	movlw	-47
 12807  0101B4  50E3               	movf	plusw1,w,c
 12808  0101B6  1001               	iorwf	btemp^0,w,c
 12809  0101B8  B4D8               	btfsc	status,2,c
 12810  0101BA  D017               	goto	l10658
 12811                           
 12812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 12813  0101BC  0EE5               	movlw	low STR_47
 12814  0101BE  6EE6               	movwf	postinc1,c
 12815  0101C0  0EFF               	movlw	high STR_47
 12816  0101C2  6EE6               	movwf	postinc1,c
 12817                           
 12818                           ;stkvar	_n @ sp[(-58)+32]
 12819  0101C4  0E94               	movlw	low _dbuf
 12820  0101C6  6E0B               	movwf	(btemp+10)^0,c
 12821  0101C8  0E03               	movlw	high _dbuf
 12822  0101CA  6E0C               	movwf	(btemp+11)^0,c
 12823  0101CC  0EE6               	movlw	-26
 12824  0101CE  50E3               	movf	plusw1,w,c
 12825  0101D0  260B               	addwf	(btemp+10)^0,f,c
 12826  0101D2  0EE7               	movlw	-25
 12827  0101D4  50E3               	movf	plusw1,w,c
 12828  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 12829  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12830  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 12831  0101E4  ECF6  F0BF         	call	_strcpy	;wreg free
 12832                           
 12833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 12834  0101E8  D016               	goto	l10660
 12835  0101EA                     l10658:
 12836                           
 12837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 12838  0101EA  0EED               	movlw	low STR_48
 12839  0101EC  6EE6               	movwf	postinc1,c
 12840  0101EE  0EFF               	movlw	high STR_48
 12841  0101F0  6EE6               	movwf	postinc1,c
 12842                           
 12843                           ;stkvar	_n @ sp[(-58)+32]
 12844  0101F2  0E94               	movlw	low _dbuf
 12845  0101F4  6E0B               	movwf	(btemp+10)^0,c
 12846  0101F6  0E03               	movlw	high _dbuf
 12847  0101F8  6E0C               	movwf	(btemp+11)^0,c
 12848  0101FA  0EE6               	movlw	-26
 12849  0101FC  50E3               	movf	plusw1,w,c
 12850  0101FE  260B               	addwf	(btemp+10)^0,f,c
 12851  010200  0EE7               	movlw	-25
 12852  010202  50E3               	movf	plusw1,w,c
 12853  010204  220C               	addwfc	(btemp+11)^0,f,c
 12854  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12855  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12856  010212  ECF6  F0BF         	call	_strcpy	;wreg free
 12857  010216                     l10660:
 12858                           
 12859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 12860                           ;stkvar	_w @ sp[(-56)+38]
 12861  010216  50E1               	movf	fsr1l,w,c
 12862  010218  0FEE               	addlw	-18
 12863  01021A  6ED9               	movwf	fsr2l,c
 12864  01021C  50E2               	movf	fsr1h,w,c
 12865  01021E  6EDA               	movwf	fsr2h,c
 12866  010220  0EFF               	movlw	255
 12867  010222  22DA               	addwfc	fsr2h,f,c
 12868  010224  0EFD               	movlw	253
 12869  010226  26DE               	addwf	postinc2,f,c
 12870  010228  0EFF               	movlw	255
 12871  01022A  22DD               	addwfc	postdec2,f,c
 12872  01022C                     l10662:
 12873                           
 12874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 12875                           ;stkvar	_w @ sp[(-56)+38]
 12876  01022C  0EEE               	movlw	-18
 12877  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 12878  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 12879  01023A  0E94               	movlw	low _dbuf
 12880  01023C  6EE6               	movwf	postinc1,c
 12881  01023E  0E03               	movlw	high _dbuf
 12882  010240  6EE6               	movwf	postinc1,c
 12883                           
 12884                           ;stkvar	_fp @ sp[(-60)+-2]
 12885  010242  0EC2               	movlw	-62
 12886  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 12887  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 12888  010250  EC75  F0BC         	call	_pad	;wreg free
 12889  010254  EF1D  F089         	goto	l2055
 12890  010258                     l10666:
 12891                           
 12892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12893                           ;stkvar	_g @ sp[(-56)+16]
 12894  010258  0ED8               	movlw	-40
 12895  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 12896  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 12897  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 12898  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 12899  010272  ECE6  F0B5         	call	___fpclassifyf	;wreg free
 12900  010276  5001               	movf	btemp^0,w,c
 12901  010278  1002               	iorwf	(btemp+1)^0,w,c
 12902  01027A  A4D8               	btfss	status,2,c
 12903  01027C  D056               	goto	l10684
 12904  01027E  0EBF               	movlw	191
 12905  010280  6E0B               	movwf	(btemp+10)^0,c
 12906  010282  0EFF               	movlw	255
 12907  010284  6E0C               	movwf	(btemp+11)^0,c
 12908                           
 12909                           ;stkvar	_c @ sp[(-56)+-7]
 12910  010286  0EC1               	movlw	-63
 12911  010288  50E3               	movf	plusw1,w,c
 12912  01028A  6E09               	movwf	(btemp+8)^0,c
 12913  01028C  6A0A               	clrf	(btemp+9)^0,c
 12914  01028E  500B               	movf	(btemp+10)^0,w,c
 12915  010290  2609               	addwf	(btemp+8)^0,f,c
 12916  010292  500C               	movf	(btemp+11)^0,w,c
 12917  010294  220A               	addwfc	(btemp+9)^0,f,c
 12918  010296  500A               	movf	(btemp+9)^0,w,c
 12919  010298  E106               	bnz	u9760
 12920  01029A  0E1A               	movlw	26
 12921  01029C  5C09               	subwf	(btemp+8)^0,w,c
 12922  01029E  B0D8               	btfsc	status,0,c
 12923  0102A0  D002               	goto	u9760
 12924  0102A2  0E01               	movlw	1
 12925  0102A4  D001               	goto	u9770
 12926  0102A6                     u9760:
 12927  0102A6  0E00               	movlw	0
 12928  0102A8                     u9770:
 12929  0102A8  6E0B               	movwf	(btemp+10)^0,c
 12930  0102AA  6A0C               	clrf	(btemp+11)^0,c
 12931                           
 12932                           ;stkvar	_efgtoa$5148 @ sp[(-56)+6]
 12933  0102AC  0ECE               	movlw	-50
 12934  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12935  0102B4  0ECF               	movlw	-49
 12936  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12937                           
 12938                           ;stkvar	_efgtoa$5148 @ sp[(-56)+6]
 12939  0102BC  0ECE               	movlw	-50
 12940  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 12941  0102C4  0ECF               	movlw	-49
 12942  0102C6  50E3               	movf	plusw1,w,c
 12943  0102C8  1001               	iorwf	btemp^0,w,c
 12944  0102CA  B4D8               	btfsc	status,2,c
 12945  0102CC  D017               	goto	l10676
 12946                           
 12947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 12948  0102CE  0EE9               	movlw	low STR_51
 12949  0102D0  6EE6               	movwf	postinc1,c
 12950  0102D2  0EFF               	movlw	high STR_51
 12951  0102D4  6EE6               	movwf	postinc1,c
 12952                           
 12953                           ;stkvar	_n @ sp[(-58)+32]
 12954  0102D6  0E94               	movlw	low _dbuf
 12955  0102D8  6E0B               	movwf	(btemp+10)^0,c
 12956  0102DA  0E03               	movlw	high _dbuf
 12957  0102DC  6E0C               	movwf	(btemp+11)^0,c
 12958  0102DE  0EE6               	movlw	-26
 12959  0102E0  50E3               	movf	plusw1,w,c
 12960  0102E2  260B               	addwf	(btemp+10)^0,f,c
 12961  0102E4  0EE7               	movlw	-25
 12962  0102E6  50E3               	movf	plusw1,w,c
 12963  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 12964  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12965  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12966  0102F6  ECF6  F0BF         	call	_strcpy	;wreg free
 12967                           
 12968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 12969  0102FA  D78D               	goto	l10660
 12970  0102FC                     l10676:
 12971                           
 12972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 12973  0102FC  0EF1               	movlw	low STR_52
 12974  0102FE  6EE6               	movwf	postinc1,c
 12975  010300  0EFF               	movlw	high STR_52
 12976  010302  6EE6               	movwf	postinc1,c
 12977                           
 12978                           ;stkvar	_n @ sp[(-58)+32]
 12979  010304  0E94               	movlw	low _dbuf
 12980  010306  6E0B               	movwf	(btemp+10)^0,c
 12981  010308  0E03               	movlw	high _dbuf
 12982  01030A  6E0C               	movwf	(btemp+11)^0,c
 12983  01030C  0EE6               	movlw	-26
 12984  01030E  50E3               	movf	plusw1,w,c
 12985  010310  260B               	addwf	(btemp+10)^0,f,c
 12986  010312  0EE7               	movlw	-25
 12987  010314  50E3               	movf	plusw1,w,c
 12988  010316  220C               	addwfc	(btemp+11)^0,f,c
 12989  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12990  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12991  010324  ECF6  F0BF         	call	_strcpy	;wreg free
 12992  010328  D776               	goto	l10660
 12993  01032A                     l10684:
 12994                           
 12995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 12996  01032A  0E00               	movlw	0
 12997  01032C  6E09               	movwf	(btemp+8)^0,c
 12998  01032E  0E00               	movlw	0
 12999  010330  6E0A               	movwf	(btemp+9)^0,c
 13000  010332  0E80               	movlw	128
 13001  010334  6E0B               	movwf	(btemp+10)^0,c
 13002  010336  0E3F               	movlw	63
 13003  010338  6E0C               	movwf	(btemp+11)^0,c
 13004                           
 13005                           ;stkvar	_u @ sp[(-56)+12]
 13006  01033A  0ED4               	movlw	-44
 13007  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 13008  010342  0ED5               	movlw	-43
 13009  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13010  01034A  0ED6               	movlw	-42
 13011  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13012  010352  0ED7               	movlw	-41
 13013  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 13014                           
 13015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 13016                           ;stkvar	_e @ sp[(-56)+34]
 13017  01035A  0EEA               	movlw	-22
 13018  01035C  6AE3               	clrf	plusw1,c
 13019  01035E  0EEB               	movlw	-21
 13020  010360  6AE3               	clrf	plusw1,c
 13021                           
 13022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 13023  010362  0E00               	movlw	0
 13024  010364  6EE6               	movwf	postinc1,c
 13025  010366  0E00               	movlw	0
 13026  010368  6EE6               	movwf	postinc1,c
 13027  01036A  0E00               	movlw	0
 13028  01036C  6EE6               	movwf	postinc1,c
 13029  01036E  0E00               	movlw	0
 13030  010370  6EE6               	movwf	postinc1,c
 13031                           
 13032                           ;stkvar	_g @ sp[(-60)+16]
 13033  010372  0ED4               	movlw	-44
 13034  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 13035  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 13036  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 13037  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 13038  01038C  EC60  F0C0         	call	___fleq	;wreg free
 13039  010390  A001               	btfss	btemp& (0+255),0,c
 13040  010392  D039               	goto	l10696
 13041  010394  D0BC               	goto	u9810
 13042  010396                     l10692:
 13043                           
 13044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 13045  010396  0E00               	movlw	0
 13046  010398  6EE6               	movwf	postinc1,c
 13047  01039A  0E00               	movlw	0
 13048  01039C  6EE6               	movwf	postinc1,c
 13049  01039E  0E20               	movlw	32
 13050  0103A0  6EE6               	movwf	postinc1,c
 13051  0103A2  0E41               	movlw	65
 13052  0103A4  6EE6               	movwf	postinc1,c
 13053                           
 13054                           ;stkvar	_u @ sp[(-60)+12]
 13055  0103A6  0ED0               	movlw	-48
 13056  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13057  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13058  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 13059  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 13060  0103C0  EC1C  F093         	call	___flmul	;wreg free
 13061                           
 13062                           ;stkvar	_u @ sp[(-56)+12]
 13063  0103C4  0ED4               	movlw	-44
 13064  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 13065  0103CC  0ED5               	movlw	-43
 13066  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13067  0103D4  0ED6               	movlw	-42
 13068  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13069  0103DC  0ED7               	movlw	-41
 13070  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 13071                           
 13072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 13073                           ;stkvar	_e @ sp[(-56)+34]
 13074  0103E4  0EEA               	movlw	-22
 13075  0103E6  50E3               	movf	plusw1,w,c
 13076  0103E8  0F01               	addlw	1
 13077  0103EA  6E01               	movwf	btemp^0,c
 13078  0103EC  0EEA               	movlw	-22
 13079  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 13080  0103F4  6A01               	clrf	btemp^0,c
 13081  0103F6  0EEB               	movlw	-21
 13082  0103F8  50E3               	movf	plusw1,w,c
 13083  0103FA  2001               	addwfc	btemp^0,w,c
 13084  0103FC  6E01               	movwf	btemp^0,c
 13085  0103FE  0EEB               	movlw	-21
 13086  010400  0060  F007  FFE3   	movff	btemp,plusw1
 13087  010406                     l10696:
 13088                           
 13089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 13090  010406  0E00               	movlw	0
 13091  010408  6EE6               	movwf	postinc1,c
 13092  01040A  0E00               	movlw	0
 13093  01040C  6EE6               	movwf	postinc1,c
 13094  01040E  0E20               	movlw	32
 13095  010410  6EE6               	movwf	postinc1,c
 13096  010412  0E41               	movlw	65
 13097  010414  6EE6               	movwf	postinc1,c
 13098                           
 13099                           ;stkvar	_u @ sp[(-60)+12]
 13100  010416  0ED0               	movlw	-48
 13101  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 13102  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 13103  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 13104  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 13105  010430  EC1C  F093         	call	___flmul	;wreg free
 13106  010434  0060  F007  FFE6   	movff	btemp,postinc1
 13107  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13108  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13109  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 13110                           
 13111                           ;stkvar	_g @ sp[(-60)+16]
 13112  01044C  0ED4               	movlw	-44
 13113  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 13114  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 13115  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 13116  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 13117  010466  EC22  F0B8         	call	___flge	;wreg free
 13118  01046A  A001               	btfss	btemp& (0+255),0,c
 13119  01046C  D032               	goto	l10702
 13120  01046E  D793               	goto	l10692
 13121  010470                     l10698:
 13122                           
 13123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 13124  010470  0E00               	movlw	0
 13125  010472  6EE6               	movwf	postinc1,c
 13126  010474  0E00               	movlw	0
 13127  010476  6EE6               	movwf	postinc1,c
 13128  010478  0E20               	movlw	32
 13129  01047A  6EE6               	movwf	postinc1,c
 13130  01047C  0E41               	movlw	65
 13131  01047E  6EE6               	movwf	postinc1,c
 13132                           
 13133                           ;stkvar	_u @ sp[(-60)+12]
 13134  010480  0ED0               	movlw	-48
 13135  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 13136  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 13137  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 13138  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 13139  01049A  EC55  F09E         	call	___fldiv	;wreg free
 13140                           
 13141                           ;stkvar	_u @ sp[(-56)+12]
 13142  01049E  0ED4               	movlw	-44
 13143  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 13144  0104A6  0ED5               	movlw	-43
 13145  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13146  0104AE  0ED6               	movlw	-42
 13147  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13148  0104B6  0ED7               	movlw	-41
 13149  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 13150                           
 13151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 13152                           ;stkvar	_e @ sp[(-56)+34]
 13153  0104BE  50E1               	movf	fsr1l,w,c
 13154  0104C0  0FEA               	addlw	-22
 13155  0104C2  6ED9               	movwf	fsr2l,c
 13156  0104C4  50E2               	movf	fsr1h,w,c
 13157  0104C6  6EDA               	movwf	fsr2h,c
 13158  0104C8  0EFF               	movlw	255
 13159  0104CA  22DA               	addwfc	fsr2h,f,c
 13160  0104CC  06DE               	decf	postinc2,f,c
 13161  0104CE  0E00               	movlw	0
 13162  0104D0  5ADD               	subwfb	postdec2,f,c
 13163  0104D2                     l10702:
 13164                           
 13165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 13166                           ;stkvar	_u @ sp[(-56)+12]
 13167  0104D2  0ED4               	movlw	-44
 13168  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13169  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13170  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13171  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 13172                           
 13173                           ;stkvar	_g @ sp[(-60)+16]
 13174  0104EC  0ED4               	movlw	-44
 13175  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 13176  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 13177  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 13178  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 13179  010506  EC22  F0B8         	call	___flge	;wreg free
 13180  01050A  A001               	btfss	btemp& (0+255),0,c
 13181  01050C  D7B1               	goto	l10698
 13182  01050E                     u9810:
 13183                           
 13184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 13185                           ;stkvar	_c @ sp[(-56)+-7]
 13186  01050E  0EC1               	movlw	-63
 13187  010510  50E3               	movf	plusw1,w,c
 13188  010512  6EE6               	movwf	postinc1,c
 13189  010514  0E00               	movlw	0
 13190  010516  6EE6               	movwf	postinc1,c
 13191  010518  ECC2  F0C4         	call	_tolower	;wreg free
 13192                           
 13193                           ;stkvar	_mode @ sp[(-56)+54]
 13194  01051C  0EFE               	movlw	-2
 13195  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 13196                           
 13197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 13198                           ;stkvar	_mode @ sp[(-56)+54]
 13199                           ;stkvar	_nmode @ sp[(-56)+55]
 13200  010524  0EFE               	movlw	-2
 13201  010526  006F FF8C  F001    	movff	plusw1,btemp
 13202  01052C  0EFF               	movlw	-1
 13203  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 13204                           
 13205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 13206                           ;stkvar	_mode @ sp[(-56)+54]
 13207  010534  0EFE               	movlw	-2
 13208  010536  006F FF8C  F001    	movff	plusw1,btemp
 13209  01053C  0E67               	movlw	103
 13210  01053E  1801               	xorwf	btemp^0,w,c
 13211  010540  A4D8               	btfss	status,2,c
 13212  010542  D025               	goto	l10720
 13213                           
 13214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 13215  010544  5023               	movf	_prec^0,w,c
 13216  010546  1024               	iorwf	(_prec+1)^0,w,c
 13217  010548  A4D8               	btfss	status,2,c
 13218  01054A  D004               	goto	l10714
 13219                           
 13220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 13221  01054C  0E00               	movlw	0
 13222  01054E  6E24               	movwf	(_prec+1)^0,c
 13223  010550  0E01               	movlw	1
 13224  010552  6E23               	movwf	_prec^0,c
 13225  010554                     l10714:
 13226                           
 13227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 13228  010554  BE24               	btfsc	(_prec+1)^0,7,c
 13229  010556  D005               	goto	u9840
 13230  010558  5024               	movf	(_prec+1)^0,w,c
 13231  01055A  E110               	bnz	l10718
 13232  01055C  0423               	decf	_prec^0,w,c
 13233  01055E  B0D8               	btfsc	status,0,c
 13234  010560  D00D               	goto	l10718
 13235  010562                     u9840:
 13236  010562  0E06               	movlw	6
 13237  010564  6E0B               	movwf	(btemp+10)^0,c
 13238  010566  0E00               	movlw	0
 13239  010568  6E0C               	movwf	(btemp+11)^0,c
 13240                           
 13241                           ;stkvar	_p @ sp[(-56)+40]
 13242  01056A  0EF0               	movlw	-16
 13243  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13244  010572  0EF1               	movlw	-15
 13245  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 13246  01057A  D00C               	goto	l10726
 13247  01057C                     l10718:
 13248                           
 13249                           ;stkvar	_p @ sp[(-56)+40]
 13250  01057C  0EF0               	movlw	-16
 13251  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 13252  010584  0EF1               	movlw	-15
 13253  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 13254  01058C  D003               	goto	l10726
 13255  01058E                     l10720:
 13256                           
 13257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 13258  01058E  AE24               	btfss	(_prec+1)^0,7,c
 13259  010590  D7F5               	goto	l10718
 13260  010592  D7E7               	goto	u9840
 13261  010594                     l10726:
 13262                           
 13263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 13264                           ;stkvar	_mode @ sp[(-56)+54]
 13265  010594  0EFE               	movlw	-2
 13266  010596  006F FF8C  F001    	movff	plusw1,btemp
 13267  01059C  0E67               	movlw	103
 13268  01059E  1801               	xorwf	btemp^0,w,c
 13269  0105A0  A4D8               	btfss	status,2,c
 13270  0105A2  D02F               	goto	l10736
 13271                           
 13272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 13273                           ;stkvar	_e @ sp[(-56)+34]
 13274  0105A4  0EEB               	movlw	-21
 13275  0105A6  AEE3               	btfss	plusw1,7,c
 13276  0105A8  D00E               	goto	u9870
 13277  0105AA  0EEA               	movlw	-22
 13278  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 13279  0105B2  0EFC               	movlw	252
 13280  0105B4  5E01               	subwf	btemp^0,f,c
 13281  0105B6  0EEB               	movlw	-21
 13282  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 13283  0105BE  0EFF               	movlw	255
 13284  0105C0  5A01               	subwfb	btemp^0,f,c
 13285  0105C2  A0D8               	btfss	status,0,c
 13286  0105C4  D018               	goto	l10734
 13287  0105C6                     u9870:
 13288                           
 13289                           ;stkvar	_e @ sp[(-56)+34]
 13290                           ;stkvar	_p @ sp[(-56)+40]
 13291  0105C6  0EF0               	movlw	-16
 13292  0105C8  50E3               	movf	plusw1,w,c
 13293  0105CA  0FFF               	addlw	255
 13294  0105CC  6E0B               	movwf	(btemp+10)^0,c
 13295  0105CE  0EF1               	movlw	-15
 13296  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 13297  0105D6  0EFF               	movlw	255
 13298  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 13299  0105DA  0EEA               	movlw	-22
 13300  0105DC  50E3               	movf	plusw1,w,c
 13301  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 13302  0105E0  500C               	movf	(btemp+11)^0,w,c
 13303  0105E2  0A80               	xorlw	128
 13304  0105E4  6E01               	movwf	btemp^0,c
 13305  0105E6  0EEB               	movlw	-21
 13306  0105E8  50E3               	movf	plusw1,w,c
 13307  0105EA  0A80               	xorlw	128
 13308  0105EC  5801               	subwfb	btemp^0,w,c
 13309  0105EE  A0D8               	btfss	status,0,c
 13310  0105F0  D002               	goto	l10734
 13311                           
 13312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 13313  0105F2  0E66               	movlw	102
 13314  0105F4  D001               	goto	L10
 13315  0105F6                     l10734:
 13316                           
 13317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 13318  0105F6  0E65               	movlw	101
 13319  0105F8                     L10:
 13320  0105F8  6E0C               	movwf	(btemp+11)^0,c
 13321                           
 13322                           ;stkvar	_nmode @ sp[(-56)+55]
 13323  0105FA  0EFF               	movlw	-1
 13324  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13325  010602                     l10736:
 13326                           
 13327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 13328                           ;stkvar	_p @ sp[(-56)+40]
 13329                           ;stkvar	_m @ sp[(-56)+48]
 13330  010602  0EF0               	movlw	-16
 13331  010604  006F FF8C  F001    	movff	plusw1,btemp
 13332  01060A  0EF8               	movlw	-8
 13333  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 13334  010612  0EF1               	movlw	-15
 13335  010614  006F FF8C  F001    	movff	plusw1,btemp
 13336  01061A  0EF9               	movlw	-7
 13337  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 13338                           
 13339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 13340                           ;stkvar	_mode @ sp[(-56)+54]
 13341  010622  0EFE               	movlw	-2
 13342  010624  006F FF8C  F001    	movff	plusw1,btemp
 13343  01062A  0E67               	movlw	103
 13344  01062C  1801               	xorwf	btemp^0,w,c
 13345  01062E  A4D8               	btfss	status,2,c
 13346  010630  D00B               	goto	u9910
 13347                           
 13348                           ;stkvar	_nmode @ sp[(-56)+55]
 13349  010632  0EFF               	movlw	-1
 13350  010634  006F FF8C  F001    	movff	plusw1,btemp
 13351  01063A  0E66               	movlw	102
 13352  01063C  1801               	xorwf	btemp^0,w,c
 13353  01063E  A4D8               	btfss	status,2,c
 13354  010640  D014               	goto	l2084
 13355                           
 13356                           ;stkvar	_e @ sp[(-56)+34]
 13357  010642  0EEB               	movlw	-21
 13358  010644  AEE3               	btfss	plusw1,7,c
 13359  010646  D011               	goto	l2084
 13360  010648                     u9910:
 13361                           
 13362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 13363                           ;stkvar	_m @ sp[(-56)+48]
 13364  010648  0EF8               	movlw	-8
 13365  01064A  50E3               	movf	plusw1,w,c
 13366  01064C  0F01               	addlw	1
 13367  01064E  6E01               	movwf	btemp^0,c
 13368  010650  0EF8               	movlw	-8
 13369  010652  0060  F007  FFE3   	movff	btemp,plusw1
 13370  010658  6A01               	clrf	btemp^0,c
 13371  01065A  0EF9               	movlw	-7
 13372  01065C  50E3               	movf	plusw1,w,c
 13373  01065E  2001               	addwfc	btemp^0,w,c
 13374  010660  6E01               	movwf	btemp^0,c
 13375  010662  0EF9               	movlw	-7
 13376  010664  0060  F007  FFE3   	movff	btemp,plusw1
 13377  01066A                     l2084:
 13378                           
 13379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 13380                           ;stkvar	_nmode @ sp[(-56)+55]
 13381  01066A  0EFF               	movlw	-1
 13382  01066C  006F FF8C  F001    	movff	plusw1,btemp
 13383  010672  0E66               	movlw	102
 13384  010674  1801               	xorwf	btemp^0,w,c
 13385  010676  A4D8               	btfss	status,2,c
 13386  010678  D03B               	goto	l10756
 13387                           
 13388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 13389                           ;stkvar	_e @ sp[(-56)+34]
 13390  01067A  0EEB               	movlw	-21
 13391  01067C  AEE3               	btfss	plusw1,7,c
 13392  01067E  D01C               	goto	l10752
 13393                           
 13394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 13395  010680  0E00               	movlw	0
 13396  010682  6E09               	movwf	(btemp+8)^0,c
 13397  010684  0E00               	movlw	0
 13398  010686  6E0A               	movwf	(btemp+9)^0,c
 13399  010688  0E80               	movlw	128
 13400  01068A  6E0B               	movwf	(btemp+10)^0,c
 13401  01068C  0E3F               	movlw	63
 13402  01068E  6E0C               	movwf	(btemp+11)^0,c
 13403                           
 13404                           ;stkvar	_u @ sp[(-56)+12]
 13405  010690  0ED4               	movlw	-44
 13406  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 13407  010698  0ED5               	movlw	-43
 13408  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13409  0106A0  0ED6               	movlw	-42
 13410  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13411  0106A8  0ED7               	movlw	-41
 13412  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13413                           
 13414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 13415                           ;stkvar	_e @ sp[(-56)+34]
 13416  0106B0  0EEA               	movlw	-22
 13417  0106B2  6AE3               	clrf	plusw1,c
 13418  0106B4  0EEB               	movlw	-21
 13419  0106B6  6AE3               	clrf	plusw1,c
 13420  0106B8                     l10752:
 13421                           
 13422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 13423                           ;stkvar	_mode @ sp[(-56)+54]
 13424  0106B8  0EFE               	movlw	-2
 13425  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 13426  0106C0  0E67               	movlw	103
 13427  0106C2  1801               	xorwf	btemp^0,w,c
 13428  0106C4  B4D8               	btfsc	status,2,c
 13429  0106C6  D014               	goto	l10756
 13430                           
 13431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 13432                           ;stkvar	_e @ sp[(-56)+34]
 13433                           ;stkvar	_m @ sp[(-56)+48]
 13434  0106C8  0EF8               	movlw	-8
 13435  0106CA  50E3               	movf	plusw1,w,c
 13436  0106CC  6E01               	movwf	btemp^0,c
 13437  0106CE  0EEA               	movlw	-22
 13438  0106D0  50E3               	movf	plusw1,w,c
 13439  0106D2  2601               	addwf	btemp^0,f,c
 13440  0106D4  0EF8               	movlw	-8
 13441  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 13442  0106DC  0EF9               	movlw	-7
 13443  0106DE  50E3               	movf	plusw1,w,c
 13444  0106E0  6E01               	movwf	btemp^0,c
 13445  0106E2  0EEB               	movlw	-21
 13446  0106E4  50E3               	movf	plusw1,w,c
 13447  0106E6  2201               	addwfc	btemp^0,f,c
 13448  0106E8  0EF9               	movlw	-7
 13449  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 13450  0106F0                     l10756:
 13451                           
 13452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 13453                           ;stkvar	_i @ sp[(-56)+36]
 13454  0106F0  0EEC               	movlw	-20
 13455  0106F2  6AE3               	clrf	plusw1,c
 13456  0106F4  0EED               	movlw	-19
 13457  0106F6  6AE3               	clrf	plusw1,c
 13458                           
 13459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 13460                           ;stkvar	_g @ sp[(-56)+16]
 13461  0106F8  0ED8               	movlw	-40
 13462  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 13463  010700  0ED9               	movlw	-39
 13464  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 13465  010708  0EDA               	movlw	-38
 13466  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13467  010710  0EDB               	movlw	-37
 13468  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 13469                           
 13470                           ;stkvar	_h @ sp[(-56)+24]
 13471  010718  0EE0               	movlw	-32
 13472  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13473  010720  0EE1               	movlw	-31
 13474  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13475  010728  0EE2               	movlw	-30
 13476  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13477  010730  0EE3               	movlw	-29
 13478  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 13479                           
 13480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 13481                           ;stkvar	_u @ sp[(-56)+12]
 13482  010738  0ED4               	movlw	-44
 13483  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 13484  010740  0ED5               	movlw	-43
 13485  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 13486  010748  0ED6               	movlw	-42
 13487  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13488  010750  0ED7               	movlw	-41
 13489  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 13490                           
 13491                           ;stkvar	_ou @ sp[(-56)+28]
 13492  010758  0EE4               	movlw	-28
 13493  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13494  010760  0EE5               	movlw	-27
 13495  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13496  010768  0EE6               	movlw	-26
 13497  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13498  010770  0EE7               	movlw	-25
 13499  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 13500                           
 13501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 13502  010778  D0D6               	goto	l10772
 13503  01077A                     l10762:
 13504                           
 13505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 13506                           ;stkvar	_u @ sp[(-56)+12]
 13507  01077A  0ED4               	movlw	-44
 13508  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 13509  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 13510  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 13511  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 13512                           
 13513                           ;stkvar	_h @ sp[(-60)+24]
 13514  010794  0EDC               	movlw	-36
 13515  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 13516  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 13517  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13518  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13519  0107AE  EC55  F09E         	call	___fldiv	;wreg free
 13520  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 13521  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13522  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13523  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 13524  0107CA  EC85  F0A7         	call	_floorf	;wreg free
 13525                           
 13526                           ;stkvar	_l @ sp[(-56)+20]
 13527  0107CE  0EDC               	movlw	-36
 13528  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 13529  0107D6  0EDD               	movlw	-35
 13530  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13531  0107DE  0EDE               	movlw	-34
 13532  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13533  0107E6  0EDF               	movlw	-33
 13534  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 13535                           
 13536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 13537                           ;stkvar	_l @ sp[(-56)+20]
 13538  0107EE  0EDC               	movlw	-36
 13539  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 13540  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13541  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 13542  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 13543  010808  ECB1  F0B6         	call	___fltol	;wreg free
 13544  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 13545  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 13546                           
 13547                           ;stkvar	_d @ sp[(-56)+44]
 13548  010818  0EF4               	movlw	-12
 13549  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13550  010820  0EF5               	movlw	-11
 13551  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 13552                           
 13553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 13554                           ;stkvar	_u @ sp[(-56)+12]
 13555  010828  0ED4               	movlw	-44
 13556  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 13557  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 13558  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 13559  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 13560                           
 13561                           ;stkvar	_l @ sp[(-60)+20]
 13562  010842  0ED8               	movlw	-40
 13563  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 13564  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 13565  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 13566  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 13567  01085C  EC1C  F093         	call	___flmul	;wreg free
 13568  010860  0060  F007  FFE6   	movff	btemp,postinc1
 13569  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13570  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13571  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 13572                           
 13573                           ;stkvar	_h @ sp[(-60)+24]
 13574  010878  0EDC               	movlw	-36
 13575  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 13576  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 13577  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 13578  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 13579  010892  EC6F  F0C8         	call	___flsub	;wreg free
 13580                           
 13581                           ;stkvar	_h @ sp[(-56)+24]
 13582  010896  0EE0               	movlw	-32
 13583  010898  0060  F007  FFE3   	movff	btemp,plusw1
 13584  01089E  0EE1               	movlw	-31
 13585  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13586  0108A6  0EE2               	movlw	-30
 13587  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13588  0108AE  0EE3               	movlw	-29
 13589  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 13590                           
 13591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 13592  0108B6  0E00               	movlw	0
 13593  0108B8  6EE6               	movwf	postinc1,c
 13594  0108BA  0E00               	movlw	0
 13595  0108BC  6EE6               	movwf	postinc1,c
 13596  0108BE  0E20               	movlw	32
 13597  0108C0  6EE6               	movwf	postinc1,c
 13598  0108C2  0E41               	movlw	65
 13599  0108C4  6EE6               	movwf	postinc1,c
 13600                           
 13601                           ;stkvar	_u @ sp[(-60)+12]
 13602  0108C6  0ED0               	movlw	-48
 13603  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13604  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 13605  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13606  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13607  0108E0  EC55  F09E         	call	___fldiv	;wreg free
 13608                           
 13609                           ;stkvar	_u @ sp[(-56)+12]
 13610  0108E4  0ED4               	movlw	-44
 13611  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 13612  0108EC  0ED5               	movlw	-43
 13613  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13614  0108F4  0ED6               	movlw	-42
 13615  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13616  0108FC  0ED7               	movlw	-41
 13617  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 13618                           
 13619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 13620                           ;stkvar	_i @ sp[(-56)+36]
 13621  010904  0EEC               	movlw	-20
 13622  010906  50E3               	movf	plusw1,w,c
 13623  010908  0F01               	addlw	1
 13624  01090A  6E01               	movwf	btemp^0,c
 13625  01090C  0EEC               	movlw	-20
 13626  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 13627  010914  6A01               	clrf	btemp^0,c
 13628  010916  0EED               	movlw	-19
 13629  010918  50E3               	movf	plusw1,w,c
 13630  01091A  2001               	addwfc	btemp^0,w,c
 13631  01091C  6E01               	movwf	btemp^0,c
 13632  01091E  0EED               	movlw	-19
 13633  010920  0060  F007  FFE3   	movff	btemp,plusw1
 13634  010926                     l10772:
 13635                           
 13636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 13637                           ;stkvar	_m @ sp[(-56)+48]
 13638                           ;stkvar	_i @ sp[(-56)+36]
 13639  010926  50E1               	movf	fsr1l,w,c
 13640  010928  0FEC               	addlw	-20
 13641  01092A  6ED9               	movwf	fsr2l,c
 13642  01092C  50E2               	movf	fsr1h,w,c
 13643  01092E  6EDA               	movwf	fsr2h,c
 13644  010930  0EFF               	movlw	255
 13645  010932  22DA               	addwfc	fsr2h,f,c
 13646  010934  0EF8               	movlw	-8
 13647  010936  50E3               	movf	plusw1,w,c
 13648  010938  5CDE               	subwf	postinc2,w,c
 13649  01093A  50DE               	movf	postinc2,w,c
 13650  01093C  0A80               	xorlw	128
 13651  01093E  6E01               	movwf	btemp^0,c
 13652  010940  0EF9               	movlw	-7
 13653  010942  50E3               	movf	plusw1,w,c
 13654  010944  0A80               	xorlw	128
 13655  010946  5801               	subwfb	btemp^0,w,c
 13656  010948  A0D8               	btfss	status,0,c
 13657  01094A  D717               	goto	l10762
 13658                           
 13659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 13660  01094C  0E00               	movlw	0
 13661  01094E  6EE6               	movwf	postinc1,c
 13662  010950  0E00               	movlw	0
 13663  010952  6EE6               	movwf	postinc1,c
 13664  010954  0EA0               	movlw	160
 13665  010956  6EE6               	movwf	postinc1,c
 13666  010958  0E40               	movlw	64
 13667  01095A  6EE6               	movwf	postinc1,c
 13668                           
 13669                           ;stkvar	_u @ sp[(-60)+12]
 13670  01095C  0ED0               	movlw	-48
 13671  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 13672  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 13673  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 13674  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 13675  010976  EC1C  F093         	call	___flmul	;wreg free
 13676                           
 13677                           ;stkvar	_l @ sp[(-56)+20]
 13678  01097A  0EDC               	movlw	-36
 13679  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 13680  010982  0EDD               	movlw	-35
 13681  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13682  01098A  0EDE               	movlw	-34
 13683  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13684  010992  0EDF               	movlw	-33
 13685  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 13686                           
 13687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 13688                           ;stkvar	_l @ sp[(-56)+20]
 13689  01099A  0EDC               	movlw	-36
 13690  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 13691  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13692  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13693  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13694                           
 13695                           ;stkvar	_h @ sp[(-60)+24]
 13696  0109B4  0EDC               	movlw	-36
 13697  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 13698  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 13699  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13700  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13701  0109CE  EC22  F0B8         	call	___flge	;wreg free
 13702  0109D2  A001               	btfss	btemp& (0+255),0,c
 13703  0109D4  D021               	goto	u9980
 13704                           
 13705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 13706                           ;stkvar	_l @ sp[(-56)+20]
 13707                           
 13708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 13709                           
 13710                           ;stkvar	_l @ sp[(-56)+20]
 13711                           
 13712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 13713  0109D6  0EDC               	movlw	-36
 13714  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 13715  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 13716  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13717  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 13718                           
 13719                           ;stkvar	_h @ sp[(-60)+24]
 13720  0109F0  0EDC               	movlw	-36
 13721  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 13722  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 13723  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 13724  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 13725  010A0A  EC60  F0C0         	call	___fleq	;wreg free
 13726  010A0E  A001               	btfss	btemp& (0+255),0,c
 13727  010A10  D01B               	goto	l10786
 13728                           
 13729                           ;stkvar	_d @ sp[(-56)+44]
 13730  010A12  0EF4               	movlw	-12
 13731  010A14  B0E3               	btfsc	plusw1,0,c
 13732  010A16  D018               	goto	l10786
 13733  010A18                     u9980:
 13734                           
 13735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 13736  010A18  0E00               	movlw	0
 13737  010A1A  6E09               	movwf	(btemp+8)^0,c
 13738  010A1C  0E00               	movlw	0
 13739  010A1E  6E0A               	movwf	(btemp+9)^0,c
 13740  010A20  0E00               	movlw	0
 13741  010A22  6E0B               	movwf	(btemp+10)^0,c
 13742  010A24  0E00               	movlw	0
 13743  010A26  6E0C               	movwf	(btemp+11)^0,c
 13744                           
 13745                           ;stkvar	_l @ sp[(-56)+20]
 13746  010A28  0EDC               	movlw	-36
 13747  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13748  010A30  0EDD               	movlw	-35
 13749  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13750  010A38  0EDE               	movlw	-34
 13751  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13752  010A40  0EDF               	movlw	-33
 13753  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 13754  010A48                     l10786:
 13755                           
 13756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 13757                           ;stkvar	_l @ sp[(-56)+20]
 13758  010A48  0EDC               	movlw	-36
 13759  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 13760  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 13761  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 13762  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 13763                           
 13764                           ;stkvar	_g @ sp[(-60)+16]
 13765  010A62  0ED4               	movlw	-44
 13766  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 13767  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 13768  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 13769  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 13770  010A7C  EC31  F097         	call	___fladd	;wreg free
 13771                           
 13772                           ;stkvar	_h @ sp[(-56)+24]
 13773  010A80  0EE0               	movlw	-32
 13774  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 13775  010A88  0EE1               	movlw	-31
 13776  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13777  010A90  0EE2               	movlw	-30
 13778  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13779  010A98  0EE3               	movlw	-29
 13780  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 13781                           
 13782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 13783                           ;stkvar	_ou @ sp[(-56)+28]
 13784  010AA0  0EE4               	movlw	-28
 13785  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 13786  010AA8  0EE5               	movlw	-27
 13787  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 13788  010AB0  0EE6               	movlw	-26
 13789  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13790  010AB8  0EE7               	movlw	-25
 13791  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13792                           
 13793                           ;stkvar	_u @ sp[(-56)+12]
 13794  010AC0  0ED4               	movlw	-44
 13795  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 13796  010AC8  0ED5               	movlw	-43
 13797  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13798  010AD0  0ED6               	movlw	-42
 13799  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13800  010AD8  0ED7               	movlw	-41
 13801  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13802                           
 13803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 13804                           ;stkvar	_nmode @ sp[(-56)+55]
 13805  010AE0  0EFF               	movlw	-1
 13806  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 13807  010AE8  0E65               	movlw	101
 13808  010AEA  1801               	xorwf	btemp^0,w,c
 13809  010AEC  B4D8               	btfsc	status,2,c
 13810  010AEE  D011               	goto	l10794
 13811                           
 13812                           ;stkvar	_e @ sp[(-56)+34]
 13813                           ;stkvar	_ne @ sp[(-56)+46]
 13814  010AF0  0EEA               	movlw	-22
 13815  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 13816  010AF8  0EF6               	movlw	-10
 13817  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 13818  010B00  0EEB               	movlw	-21
 13819  010B02  006F FF8C  F001    	movff	plusw1,btemp
 13820  010B08  0EF7               	movlw	-9
 13821  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 13822  010B10  D004               	goto	l2099
 13823  010B12                     l10794:
 13824                           
 13825                           ;stkvar	_ne @ sp[(-56)+46]
 13826  010B12  0EF6               	movlw	-10
 13827  010B14  6AE3               	clrf	plusw1,c
 13828  010B16  0EF7               	movlw	-9
 13829  010B18  6AE3               	clrf	plusw1,c
 13830  010B1A                     l2099:
 13831                           
 13832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 13833                           ;stkvar	_pp @ sp[(-56)+50]
 13834  010B1A  0EFA               	movlw	-6
 13835  010B1C  6AE3               	clrf	plusw1,c
 13836  010B1E  0EFB               	movlw	-5
 13837  010B20  6AE3               	clrf	plusw1,c
 13838                           
 13839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 13840                           ;stkvar	_t @ sp[(-56)+52]
 13841  010B22  0EFC               	movlw	-4
 13842  010B24  6AE3               	clrf	plusw1,c
 13843  010B26  0EFD               	movlw	-3
 13844  010B28  6AE3               	clrf	plusw1,c
 13845                           
 13846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 13847                           ;stkvar	_i @ sp[(-56)+36]
 13848  010B2A  0EEC               	movlw	-20
 13849  010B2C  6AE3               	clrf	plusw1,c
 13850  010B2E  0EED               	movlw	-19
 13851  010B30  6AE3               	clrf	plusw1,c
 13852                           
 13853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13854  010B32  D1B7               	goto	l10846
 13855  010B34                     l10796:
 13856                           
 13857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 13858                           ;stkvar	_u @ sp[(-56)+12]
 13859  010B34  0ED4               	movlw	-44
 13860  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 13861  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13862  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 13863  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 13864                           
 13865                           ;stkvar	_h @ sp[(-60)+24]
 13866  010B4E  0EDC               	movlw	-36
 13867  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 13868  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 13869  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 13870  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 13871  010B68  EC55  F09E         	call	___fldiv	;wreg free
 13872  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 13873  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13874  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13875  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 13876  010B84  EC85  F0A7         	call	_floorf	;wreg free
 13877                           
 13878                           ;stkvar	_l @ sp[(-56)+20]
 13879  010B88  0EDC               	movlw	-36
 13880  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 13881  010B90  0EDD               	movlw	-35
 13882  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13883  010B98  0EDE               	movlw	-34
 13884  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13885  010BA0  0EDF               	movlw	-33
 13886  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 13887                           
 13888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 13889                           ;stkvar	_l @ sp[(-56)+20]
 13890  010BA8  0EDC               	movlw	-36
 13891  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 13892  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 13893  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 13894  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 13895  010BC2  ECB1  F0B6         	call	___fltol	;wreg free
 13896  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 13897  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 13898                           
 13899                           ;stkvar	_d @ sp[(-56)+44]
 13900  010BD2  0EF4               	movlw	-12
 13901  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13902  010BDA  0EF5               	movlw	-11
 13903  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13904                           
 13905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 13906  010BE2  B825               	btfsc	_flags^0,4,c
 13907  010BE4  D026               	goto	l10810
 13908                           
 13909                           ;stkvar	_d @ sp[(-56)+44]
 13910  010BE6  0EF4               	movlw	-12
 13911  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 13912  010BEE  0EF5               	movlw	-11
 13913  010BF0  50E3               	movf	plusw1,w,c
 13914  010BF2  1001               	iorwf	btemp^0,w,c
 13915  010BF4  A4D8               	btfss	status,2,c
 13916  010BF6  D01D               	goto	l10810
 13917                           
 13918                           ;stkvar	_mode @ sp[(-56)+54]
 13919  010BF8  0EFE               	movlw	-2
 13920  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 13921  010C00  0E67               	movlw	103
 13922  010C02  1801               	xorwf	btemp^0,w,c
 13923  010C04  A4D8               	btfss	status,2,c
 13924  010C06  D015               	goto	l10810
 13925                           
 13926                           ;stkvar	_ne @ sp[(-56)+46]
 13927  010C08  0EF7               	movlw	-9
 13928  010C0A  AEE3               	btfss	plusw1,7,c
 13929  010C0C  D012               	goto	l10810
 13930                           
 13931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 13932                           ;stkvar	_t @ sp[(-56)+52]
 13933  010C0E  0EFC               	movlw	-4
 13934  010C10  50E3               	movf	plusw1,w,c
 13935  010C12  0F01               	addlw	1
 13936  010C14  6E01               	movwf	btemp^0,c
 13937  010C16  0EFC               	movlw	-4
 13938  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 13939  010C1E  6A01               	clrf	btemp^0,c
 13940  010C20  0EFD               	movlw	-3
 13941  010C22  50E3               	movf	plusw1,w,c
 13942  010C24  2001               	addwfc	btemp^0,w,c
 13943  010C26  6E01               	movwf	btemp^0,c
 13944  010C28  0EFD               	movlw	-3
 13945  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 13946                           
 13947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 13948  010C30  D0AF               	goto	l10838
 13949  010C32                     l10810:
 13950                           
 13951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 13952                           ;stkvar	_pp @ sp[(-56)+50]
 13953  010C32  0EFA               	movlw	-6
 13954  010C34  006F FF8C  F001    	movff	plusw1,btemp
 13955  010C3A  0EFB               	movlw	-5
 13956  010C3C  50E3               	movf	plusw1,w,c
 13957  010C3E  1001               	iorwf	btemp^0,w,c
 13958  010C40  A4D8               	btfss	status,2,c
 13959  010C42  D070               	goto	l10830
 13960                           
 13961                           ;stkvar	_ne @ sp[(-56)+46]
 13962  010C44  0EF7               	movlw	-9
 13963  010C46  AEE3               	btfss	plusw1,7,c
 13964  010C48  D06D               	goto	l10830
 13965                           
 13966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 13967                           ;stkvar	_n @ sp[(-56)+32]
 13968  010C4A  0EE8               	movlw	-24
 13969  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13970  010C52  0EE9               	movlw	-23
 13971  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 13972  010C5A  0E94               	movlw	low _dbuf
 13973  010C5C  240B               	addwf	(btemp+10)^0,w,c
 13974  010C5E  6ED9               	movwf	fsr2l,c
 13975  010C60  0E03               	movlw	high _dbuf
 13976  010C62  200C               	addwfc	(btemp+11)^0,w,c
 13977  010C64  6EDA               	movwf	fsr2h,c
 13978  010C66  0E2E               	movlw	46
 13979  010C68  6EDF               	movwf	indf2,c
 13980                           
 13981                           ;stkvar	_n @ sp[(-56)+32]
 13982  010C6A  0EE8               	movlw	-24
 13983  010C6C  50E3               	movf	plusw1,w,c
 13984  010C6E  0F01               	addlw	1
 13985  010C70  6E01               	movwf	btemp^0,c
 13986  010C72  0EE8               	movlw	-24
 13987  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 13988  010C7A  6A01               	clrf	btemp^0,c
 13989  010C7C  0EE9               	movlw	-23
 13990  010C7E  50E3               	movf	plusw1,w,c
 13991  010C80  2001               	addwfc	btemp^0,w,c
 13992  010C82  6E01               	movwf	btemp^0,c
 13993  010C84  0EE9               	movlw	-23
 13994  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 13995                           
 13996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 13997                           ;stkvar	_w @ sp[(-56)+38]
 13998  010C8C  50E1               	movf	fsr1l,w,c
 13999  010C8E  0FEE               	addlw	-18
 14000  010C90  6ED9               	movwf	fsr2l,c
 14001  010C92  50E2               	movf	fsr1h,w,c
 14002  010C94  6EDA               	movwf	fsr2h,c
 14003  010C96  0EFF               	movlw	255
 14004  010C98  22DA               	addwfc	fsr2h,f,c
 14005  010C9A  06DE               	decf	postinc2,f,c
 14006  010C9C  0E00               	movlw	0
 14007  010C9E  5ADD               	subwfb	postdec2,f,c
 14008                           
 14009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 14010  010CA0  0E01               	movlw	1
 14011  010CA2  6E0B               	movwf	(btemp+10)^0,c
 14012  010CA4  0E00               	movlw	0
 14013  010CA6  6E0C               	movwf	(btemp+11)^0,c
 14014                           
 14015                           ;stkvar	_pp @ sp[(-56)+50]
 14016  010CA8  0EFA               	movlw	-6
 14017  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14018  010CB0  0EFB               	movlw	-5
 14019  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 14020  010CB8  D035               	goto	l10830
 14021  010CBA                     l10822:
 14022                           
 14023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 14024                           ;stkvar	_n @ sp[(-56)+32]
 14025  010CBA  0EE8               	movlw	-24
 14026  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14027  010CC2  0EE9               	movlw	-23
 14028  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14029  010CCA  0E94               	movlw	low _dbuf
 14030  010CCC  240B               	addwf	(btemp+10)^0,w,c
 14031  010CCE  6ED9               	movwf	fsr2l,c
 14032  010CD0  0E03               	movlw	high _dbuf
 14033  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 14034  010CD4  6EDA               	movwf	fsr2h,c
 14035  010CD6  0E30               	movlw	48
 14036  010CD8  6EDF               	movwf	indf2,c
 14037                           
 14038                           ;stkvar	_n @ sp[(-56)+32]
 14039  010CDA  0EE8               	movlw	-24
 14040  010CDC  50E3               	movf	plusw1,w,c
 14041  010CDE  0F01               	addlw	1
 14042  010CE0  6E01               	movwf	btemp^0,c
 14043  010CE2  0EE8               	movlw	-24
 14044  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 14045  010CEA  6A01               	clrf	btemp^0,c
 14046  010CEC  0EE9               	movlw	-23
 14047  010CEE  50E3               	movf	plusw1,w,c
 14048  010CF0  2001               	addwfc	btemp^0,w,c
 14049  010CF2  6E01               	movwf	btemp^0,c
 14050  010CF4  0EE9               	movlw	-23
 14051  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 14052                           
 14053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 14054                           ;stkvar	_w @ sp[(-56)+38]
 14055  010CFC  50E1               	movf	fsr1l,w,c
 14056  010CFE  0FEE               	addlw	-18
 14057  010D00  6ED9               	movwf	fsr2l,c
 14058  010D02  50E2               	movf	fsr1h,w,c
 14059  010D04  6EDA               	movwf	fsr2h,c
 14060  010D06  0EFF               	movlw	255
 14061  010D08  22DA               	addwfc	fsr2h,f,c
 14062  010D0A  06DE               	decf	postinc2,f,c
 14063  010D0C  0E00               	movlw	0
 14064  010D0E  5ADD               	subwfb	postdec2,f,c
 14065                           
 14066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 14067                           ;stkvar	_t @ sp[(-56)+52]
 14068  010D10  50E1               	movf	fsr1l,w,c
 14069  010D12  0FFC               	addlw	-4
 14070  010D14  6ED9               	movwf	fsr2l,c
 14071  010D16  50E2               	movf	fsr1h,w,c
 14072  010D18  6EDA               	movwf	fsr2h,c
 14073  010D1A  0EFF               	movlw	255
 14074  010D1C  22DA               	addwfc	fsr2h,f,c
 14075  010D1E  06DE               	decf	postinc2,f,c
 14076  010D20  0E00               	movlw	0
 14077  010D22  5ADD               	subwfb	postdec2,f,c
 14078  010D24                     l10830:
 14079                           
 14080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 14081                           ;stkvar	_t @ sp[(-56)+52]
 14082  010D24  0EFC               	movlw	-4
 14083  010D26  006F FF8C  F001    	movff	plusw1,btemp
 14084  010D2C  0EFD               	movlw	-3
 14085  010D2E  50E3               	movf	plusw1,w,c
 14086  010D30  1001               	iorwf	btemp^0,w,c
 14087  010D32  A4D8               	btfss	status,2,c
 14088  010D34  D7C2               	goto	l10822
 14089                           
 14090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 14091                           ;stkvar	_n @ sp[(-56)+32]
 14092  010D36  0EE8               	movlw	-24
 14093  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 14094  010D3E  0EE9               	movlw	-23
 14095  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 14096  010D46  0E94               	movlw	low _dbuf
 14097  010D48  240B               	addwf	(btemp+10)^0,w,c
 14098  010D4A  6ED9               	movwf	fsr2l,c
 14099  010D4C  0E03               	movlw	high _dbuf
 14100  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 14101  010D50  6EDA               	movwf	fsr2h,c
 14102                           
 14103                           ;stkvar	_d @ sp[(-56)+44]
 14104  010D52  0EF4               	movlw	-12
 14105  010D54  50E3               	movf	plusw1,w,c
 14106  010D56  0F30               	addlw	48
 14107  010D58  6EDF               	movwf	indf2,c
 14108                           
 14109                           ;stkvar	_n @ sp[(-56)+32]
 14110  010D5A  0EE8               	movlw	-24
 14111  010D5C  50E3               	movf	plusw1,w,c
 14112  010D5E  0F01               	addlw	1
 14113  010D60  6E01               	movwf	btemp^0,c
 14114  010D62  0EE8               	movlw	-24
 14115  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 14116  010D6A  6A01               	clrf	btemp^0,c
 14117  010D6C  0EE9               	movlw	-23
 14118  010D6E  50E3               	movf	plusw1,w,c
 14119  010D70  2001               	addwfc	btemp^0,w,c
 14120  010D72  6E01               	movwf	btemp^0,c
 14121  010D74  0EE9               	movlw	-23
 14122  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 14123                           
 14124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 14125                           ;stkvar	_w @ sp[(-56)+38]
 14126  010D7C  50E1               	movf	fsr1l,w,c
 14127  010D7E  0FEE               	addlw	-18
 14128  010D80  6ED9               	movwf	fsr2l,c
 14129  010D82  50E2               	movf	fsr1h,w,c
 14130  010D84  6EDA               	movwf	fsr2h,c
 14131  010D86  0EFF               	movlw	255
 14132  010D88  22DA               	addwfc	fsr2h,f,c
 14133  010D8A  06DE               	decf	postinc2,f,c
 14134  010D8C  0E00               	movlw	0
 14135  010D8E  5ADD               	subwfb	postdec2,f,c
 14136  010D90                     l10838:
 14137                           
 14138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 14139                           ;stkvar	_u @ sp[(-56)+12]
 14140  010D90  0ED4               	movlw	-44
 14141  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 14142  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 14143  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 14144  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 14145                           
 14146                           ;stkvar	_l @ sp[(-60)+20]
 14147  010DAA  0ED8               	movlw	-40
 14148  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 14149  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14150  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14151  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 14152  010DC4  EC1C  F093         	call	___flmul	;wreg free
 14153  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 14154  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14155  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14156  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 14157                           
 14158                           ;stkvar	_h @ sp[(-60)+24]
 14159  010DE0  0EDC               	movlw	-36
 14160  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 14161  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 14162  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 14163  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 14164  010DFA  EC6F  F0C8         	call	___flsub	;wreg free
 14165                           
 14166                           ;stkvar	_h @ sp[(-56)+24]
 14167  010DFE  0EE0               	movlw	-32
 14168  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 14169  010E06  0EE1               	movlw	-31
 14170  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14171  010E0E  0EE2               	movlw	-30
 14172  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14173  010E16  0EE3               	movlw	-29
 14174  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 14175                           
 14176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 14177  010E1E  0E00               	movlw	0
 14178  010E20  6EE6               	movwf	postinc1,c
 14179  010E22  0E00               	movlw	0
 14180  010E24  6EE6               	movwf	postinc1,c
 14181  010E26  0E20               	movlw	32
 14182  010E28  6EE6               	movwf	postinc1,c
 14183  010E2A  0E41               	movlw	65
 14184  010E2C  6EE6               	movwf	postinc1,c
 14185                           
 14186                           ;stkvar	_u @ sp[(-60)+12]
 14187  010E2E  0ED0               	movlw	-48
 14188  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 14189  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 14190  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14191  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 14192  010E48  EC55  F09E         	call	___fldiv	;wreg free
 14193                           
 14194                           ;stkvar	_u @ sp[(-56)+12]
 14195  010E4C  0ED4               	movlw	-44
 14196  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 14197  010E54  0ED5               	movlw	-43
 14198  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14199  010E5C  0ED6               	movlw	-42
 14200  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14201  010E64  0ED7               	movlw	-41
 14202  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 14203                           
 14204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 14205                           ;stkvar	_ne @ sp[(-56)+46]
 14206  010E6C  50E1               	movf	fsr1l,w,c
 14207  010E6E  0FF6               	addlw	-10
 14208  010E70  6ED9               	movwf	fsr2l,c
 14209  010E72  50E2               	movf	fsr1h,w,c
 14210  010E74  6EDA               	movwf	fsr2h,c
 14211  010E76  0EFF               	movlw	255
 14212  010E78  22DA               	addwfc	fsr2h,f,c
 14213  010E7A  06DE               	decf	postinc2,f,c
 14214  010E7C  0E00               	movlw	0
 14215  010E7E  5ADD               	subwfb	postdec2,f,c
 14216                           
 14217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 14218                           ;stkvar	_i @ sp[(-56)+36]
 14219  010E80  0EEC               	movlw	-20
 14220  010E82  50E3               	movf	plusw1,w,c
 14221  010E84  0F01               	addlw	1
 14222  010E86  6E01               	movwf	btemp^0,c
 14223  010E88  0EEC               	movlw	-20
 14224  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 14225  010E90  6A01               	clrf	btemp^0,c
 14226  010E92  0EED               	movlw	-19
 14227  010E94  50E3               	movf	plusw1,w,c
 14228  010E96  2001               	addwfc	btemp^0,w,c
 14229  010E98  6E01               	movwf	btemp^0,c
 14230  010E9A  0EED               	movlw	-19
 14231  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 14232  010EA2                     l10846:
 14233                           
 14234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 14235                           ;stkvar	_m @ sp[(-56)+48]
 14236                           ;stkvar	_i @ sp[(-56)+36]
 14237  010EA2  50E1               	movf	fsr1l,w,c
 14238  010EA4  0FEC               	addlw	-20
 14239  010EA6  6ED9               	movwf	fsr2l,c
 14240  010EA8  50E2               	movf	fsr1h,w,c
 14241  010EAA  6EDA               	movwf	fsr2h,c
 14242  010EAC  0EFF               	movlw	255
 14243  010EAE  22DA               	addwfc	fsr2h,f,c
 14244  010EB0  0EF8               	movlw	-8
 14245  010EB2  50E3               	movf	plusw1,w,c
 14246  010EB4  5CDE               	subwf	postinc2,w,c
 14247  010EB6  50DE               	movf	postinc2,w,c
 14248  010EB8  0A80               	xorlw	128
 14249  010EBA  6E01               	movwf	btemp^0,c
 14250  010EBC  0EF9               	movlw	-7
 14251  010EBE  50E3               	movf	plusw1,w,c
 14252  010EC0  0A80               	xorlw	128
 14253  010EC2  5801               	subwfb	btemp^0,w,c
 14254  010EC4  B0D8               	btfsc	status,0,c
 14255  010EC6  D00E               	goto	u10080
 14256                           
 14257                           ;stkvar	_n @ sp[(-56)+32]
 14258  010EC8  0EE9               	movlw	-23
 14259  010ECA  BEE3               	btfsc	plusw1,7,c
 14260  010ECC  D633               	goto	l10796
 14261  010ECE  0EE9               	movlw	-23
 14262  010ED0  50E3               	movf	plusw1,w,c
 14263  010ED2  E108               	bnz	u10080
 14264  010ED4  0EE8               	movlw	-24
 14265  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 14266  010EDC  0E4B               	movlw	75
 14267  010EDE  5E01               	subwf	btemp^0,f,c
 14268  010EE0  A0D8               	btfss	status,0,c
 14269  010EE2  D628               	goto	l10796
 14270  010EE4                     u10080:
 14271                           
 14272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 14273                           ;stkvar	_pp @ sp[(-56)+50]
 14274  010EE4  0EFA               	movlw	-6
 14275  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 14276  010EEC  0EFB               	movlw	-5
 14277  010EEE  50E3               	movf	plusw1,w,c
 14278  010EF0  1001               	iorwf	btemp^0,w,c
 14279  010EF2  B4D8               	btfsc	status,2,c
 14280  010EF4  A825               	btfss	_flags^0,4,c
 14281  010EF6  D021               	goto	l10858
 14282                           
 14283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 14284                           ;stkvar	_n @ sp[(-56)+32]
 14285  010EF8  0EE8               	movlw	-24
 14286  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14287  010F00  0EE9               	movlw	-23
 14288  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 14289  010F08  0E94               	movlw	low _dbuf
 14290  010F0A  240B               	addwf	(btemp+10)^0,w,c
 14291  010F0C  6ED9               	movwf	fsr2l,c
 14292  010F0E  0E03               	movlw	high _dbuf
 14293  010F10  200C               	addwfc	(btemp+11)^0,w,c
 14294  010F12  6EDA               	movwf	fsr2h,c
 14295  010F14  0E2E               	movlw	46
 14296  010F16  6EDF               	movwf	indf2,c
 14297                           
 14298                           ;stkvar	_n @ sp[(-56)+32]
 14299  010F18  0EE8               	movlw	-24
 14300  010F1A  50E3               	movf	plusw1,w,c
 14301  010F1C  0F01               	addlw	1
 14302  010F1E  6E01               	movwf	btemp^0,c
 14303  010F20  0EE8               	movlw	-24
 14304  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 14305  010F28  6A01               	clrf	btemp^0,c
 14306  010F2A  0EE9               	movlw	-23
 14307  010F2C  50E3               	movf	plusw1,w,c
 14308  010F2E  2001               	addwfc	btemp^0,w,c
 14309  010F30  6E01               	movwf	btemp^0,c
 14310  010F32  0EE9               	movlw	-23
 14311  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 14312  010F3A                     l10858:
 14313                           
 14314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 14315                           ;stkvar	_n @ sp[(-56)+32]
 14316  010F3A  0EE8               	movlw	-24
 14317  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14318  010F42  0EE9               	movlw	-23
 14319  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 14320  010F4A  0E94               	movlw	low _dbuf
 14321  010F4C  240B               	addwf	(btemp+10)^0,w,c
 14322  010F4E  6ED9               	movwf	fsr2l,c
 14323  010F50  0E03               	movlw	high _dbuf
 14324  010F52  200C               	addwfc	(btemp+11)^0,w,c
 14325  010F54  6EDA               	movwf	fsr2h,c
 14326  010F56  0E00               	movlw	0
 14327  010F58  6EDF               	movwf	indf2,c
 14328                           
 14329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 14330                           ;stkvar	_nmode @ sp[(-56)+55]
 14331  010F5A  0EFF               	movlw	-1
 14332  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 14333  010F62  0E65               	movlw	101
 14334  010F64  1801               	xorwf	btemp^0,w,c
 14335  010F66  A4D8               	btfss	status,2,c
 14336  010F68  EF16  F081         	goto	l10662
 14337                           
 14338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 14339  010F6C  0E4F               	movlw	79
 14340  010F6E  6E0B               	movwf	(btemp+10)^0,c
 14341  010F70  0E00               	movlw	0
 14342  010F72  6E0C               	movwf	(btemp+11)^0,c
 14343                           
 14344                           ;stkvar	_i @ sp[(-56)+36]
 14345  010F74  0EEC               	movlw	-20
 14346  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14347  010F7C  0EED               	movlw	-19
 14348  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14349                           
 14350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 14351                           ;stkvar	_i @ sp[(-56)+36]
 14352  010F84  0EEC               	movlw	-20
 14353  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 14354  010F8C  0EED               	movlw	-19
 14355  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14356  010F94  0E94               	movlw	low _dbuf
 14357  010F96  240B               	addwf	(btemp+10)^0,w,c
 14358  010F98  6ED9               	movwf	fsr2l,c
 14359  010F9A  0E03               	movlw	high _dbuf
 14360  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 14361  010F9E  6EDA               	movwf	fsr2h,c
 14362  010FA0  0E00               	movlw	0
 14363  010FA2  6EDF               	movwf	indf2,c
 14364                           
 14365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 14366                           ;stkvar	_sign @ sp[(-56)+42]
 14367  010FA4  0EF2               	movlw	-14
 14368  010FA6  6AE3               	clrf	plusw1,c
 14369  010FA8  0EF3               	movlw	-13
 14370  010FAA  6AE3               	clrf	plusw1,c
 14371                           
 14372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 14373                           ;stkvar	_e @ sp[(-56)+34]
 14374  010FAC  0EEB               	movlw	-21
 14375  010FAE  AEE3               	btfss	plusw1,7,c
 14376  010FB0  D012               	goto	l10872
 14377                           
 14378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 14379  010FB2  0E01               	movlw	1
 14380  010FB4  6E0B               	movwf	(btemp+10)^0,c
 14381  010FB6  0E00               	movlw	0
 14382  010FB8  6E0C               	movwf	(btemp+11)^0,c
 14383                           
 14384                           ;stkvar	_sign @ sp[(-56)+42]
 14385  010FBA  0EF2               	movlw	-14
 14386  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14387  010FC2  0EF3               	movlw	-13
 14388  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14389                           
 14390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 14391                           ;stkvar	_e @ sp[(-56)+34]
 14392                           ;stkvar	_e @ sp[(-56)+34]
 14393  010FCA  0EEA               	movlw	-22
 14394  010FCC  6CE3               	negf	plusw1,c
 14395  010FCE  0EEB               	movlw	-21
 14396  010FD0  1EE3               	comf	plusw1,f,c
 14397  010FD2  B0D8               	btfsc	status,0,c
 14398  010FD4  2AE3               	incf	plusw1,f,c
 14399  010FD6                     l10872:
 14400                           
 14401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 14402  010FD6  0E02               	movlw	2
 14403  010FD8  6E0B               	movwf	(btemp+10)^0,c
 14404  010FDA  0E00               	movlw	0
 14405  010FDC  6E0C               	movwf	(btemp+11)^0,c
 14406                           
 14407                           ;stkvar	_p @ sp[(-56)+40]
 14408  010FDE  0EF0               	movlw	-16
 14409  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14410  010FE6  0EF1               	movlw	-15
 14411  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14412                           
 14413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 14414  010FEE  D051               	goto	l10884
 14415  010FF0                     l10874:
 14416                           
 14417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 14418                           ;stkvar	_i @ sp[(-56)+36]
 14419  010FF0  50E1               	movf	fsr1l,w,c
 14420  010FF2  0FEC               	addlw	-20
 14421  010FF4  6ED9               	movwf	fsr2l,c
 14422  010FF6  50E2               	movf	fsr1h,w,c
 14423  010FF8  6EDA               	movwf	fsr2h,c
 14424  010FFA  0EFF               	movlw	255
 14425  010FFC  22DA               	addwfc	fsr2h,f,c
 14426  010FFE  06DE               	decf	postinc2,f,c
 14427  011000  0E00               	movlw	0
 14428  011002  5ADD               	subwfb	postdec2,f,c
 14429                           
 14430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 14431                           ;stkvar	_i @ sp[(-56)+36]
 14432  011004  0EEC               	movlw	-20
 14433  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 14434  01100C  0EED               	movlw	-19
 14435  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14436  011014  0E94               	movlw	low _dbuf
 14437  011016  240B               	addwf	(btemp+10)^0,w,c
 14438  011018  6ED9               	movwf	fsr2l,c
 14439  01101A  0E03               	movlw	high _dbuf
 14440  01101C  200C               	addwfc	(btemp+11)^0,w,c
 14441  01101E  6EDA               	movwf	fsr2h,c
 14442  011020  0E0A               	movlw	10
 14443  011022  6EE6               	movwf	postinc1,c
 14444  011024  0E00               	movlw	0
 14445  011026  6EE6               	movwf	postinc1,c
 14446                           
 14447                           ;stkvar	_e @ sp[(-58)+34]
 14448  011028  0EE8               	movlw	-24
 14449  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 14450  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 14451  011036  ECE9  F0BB         	call	___awmod	;wreg free
 14452  01103A  5001               	movf	btemp^0,w,c
 14453  01103C  0F30               	addlw	48
 14454  01103E  6EDF               	movwf	indf2,c
 14455                           
 14456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 14457  011040  0E0A               	movlw	10
 14458  011042  6EE6               	movwf	postinc1,c
 14459  011044  0E00               	movlw	0
 14460  011046  6EE6               	movwf	postinc1,c
 14461                           
 14462                           ;stkvar	_e @ sp[(-58)+34]
 14463  011048  0EE8               	movlw	-24
 14464  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 14465  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 14466  011056  EC85  F0B9         	call	___awdiv	;wreg free
 14467                           
 14468                           ;stkvar	_e @ sp[(-56)+34]
 14469  01105A  0EEA               	movlw	-22
 14470  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 14471  011062  0EEB               	movlw	-21
 14472  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14473                           
 14474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 14475                           ;stkvar	_p @ sp[(-56)+40]
 14476  01106A  50E1               	movf	fsr1l,w,c
 14477  01106C  0FF0               	addlw	-16
 14478  01106E  6ED9               	movwf	fsr2l,c
 14479  011070  50E2               	movf	fsr1h,w,c
 14480  011072  6EDA               	movwf	fsr2h,c
 14481  011074  0EFF               	movlw	255
 14482  011076  22DA               	addwfc	fsr2h,f,c
 14483  011078  06DE               	decf	postinc2,f,c
 14484  01107A  0E00               	movlw	0
 14485  01107C  5ADD               	subwfb	postdec2,f,c
 14486                           
 14487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 14488                           ;stkvar	_w @ sp[(-56)+38]
 14489  01107E  50E1               	movf	fsr1l,w,c
 14490  011080  0FEE               	addlw	-18
 14491  011082  6ED9               	movwf	fsr2l,c
 14492  011084  50E2               	movf	fsr1h,w,c
 14493  011086  6EDA               	movwf	fsr2h,c
 14494  011088  0EFF               	movlw	255
 14495  01108A  22DA               	addwfc	fsr2h,f,c
 14496  01108C  06DE               	decf	postinc2,f,c
 14497  01108E  0E00               	movlw	0
 14498  011090  5ADD               	subwfb	postdec2,f,c
 14499  011092                     l10884:
 14500                           
 14501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 14502                           ;stkvar	_e @ sp[(-56)+34]
 14503  011092  0EEA               	movlw	-22
 14504  011094  006F FF8C  F001    	movff	plusw1,btemp
 14505  01109A  0EEB               	movlw	-21
 14506  01109C  50E3               	movf	plusw1,w,c
 14507  01109E  1001               	iorwf	btemp^0,w,c
 14508  0110A0  A4D8               	btfss	status,2,c
 14509  0110A2  D7A6               	goto	l10874
 14510                           
 14511                           ;stkvar	_p @ sp[(-56)+40]
 14512  0110A4  0EF1               	movlw	-15
 14513  0110A6  BEE3               	btfsc	plusw1,7,c
 14514  0110A8  D007               	goto	u10140
 14515  0110AA  0EF1               	movlw	-15
 14516  0110AC  50E3               	movf	plusw1,w,c
 14517  0110AE  E1A0               	bnz	l10874
 14518  0110B0  0EF0               	movlw	-16
 14519  0110B2  04E3               	decf	plusw1,w,c
 14520  0110B4  B0D8               	btfsc	status,0,c
 14521  0110B6  D79C               	goto	l10874
 14522  0110B8                     u10140:
 14523                           
 14524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 14525                           ;stkvar	_i @ sp[(-56)+36]
 14526  0110B8  50E1               	movf	fsr1l,w,c
 14527  0110BA  0FEC               	addlw	-20
 14528  0110BC  6ED9               	movwf	fsr2l,c
 14529  0110BE  50E2               	movf	fsr1h,w,c
 14530  0110C0  6EDA               	movwf	fsr2h,c
 14531  0110C2  0EFF               	movlw	255
 14532  0110C4  22DA               	addwfc	fsr2h,f,c
 14533  0110C6  06DE               	decf	postinc2,f,c
 14534  0110C8  0E00               	movlw	0
 14535  0110CA  5ADD               	subwfb	postdec2,f,c
 14536                           
 14537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 14538                           ;stkvar	_sign @ sp[(-56)+42]
 14539  0110CC  0EF2               	movlw	-14
 14540  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 14541  0110D4  0EF3               	movlw	-13
 14542  0110D6  50E3               	movf	plusw1,w,c
 14543  0110D8  1001               	iorwf	btemp^0,w,c
 14544  0110DA  A4D8               	btfss	status,2,c
 14545  0110DC  D002               	goto	l10894
 14546  0110DE  0E2B               	movlw	43
 14547  0110E0  D001               	goto	L11
 14548  0110E2                     l10894:
 14549  0110E2  0E2D               	movlw	45
 14550  0110E4                     L11:
 14551  0110E4  6E0B               	movwf	(btemp+10)^0,c
 14552  0110E6  0E00               	movlw	0
 14553  0110E8  6E0C               	movwf	(btemp+11)^0,c
 14554                           
 14555                           ;stkvar	_efgtoa$5152 @ sp[(-56)+4]
 14556  0110EA  0ECC               	movlw	-52
 14557  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14558  0110F2  0ECD               	movlw	-51
 14559  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14560                           
 14561                           ;stkvar	_efgtoa$5152 @ sp[(-56)+4]
 14562                           ;stkvar	_i @ sp[(-56)+36]
 14563  0110FA  0EEC               	movlw	-20
 14564  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14565  011102  0EED               	movlw	-19
 14566  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 14567  01110A  0E94               	movlw	low _dbuf
 14568  01110C  240B               	addwf	(btemp+10)^0,w,c
 14569  01110E  6ED9               	movwf	fsr2l,c
 14570  011110  0E03               	movlw	high _dbuf
 14571  011112  200C               	addwfc	(btemp+11)^0,w,c
 14572  011114  6EDA               	movwf	fsr2h,c
 14573  011116  0ECC               	movlw	-52
 14574  011118  006F FF8F FFDF     	movff	plusw1,indf2
 14575                           
 14576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 14577                           ;stkvar	_w @ sp[(-56)+38]
 14578  01111E  50E1               	movf	fsr1l,w,c
 14579  011120  0FEE               	addlw	-18
 14580  011122  6ED9               	movwf	fsr2l,c
 14581  011124  50E2               	movf	fsr1h,w,c
 14582  011126  6EDA               	movwf	fsr2h,c
 14583  011128  0EFF               	movlw	255
 14584  01112A  22DA               	addwfc	fsr2h,f,c
 14585  01112C  06DE               	decf	postinc2,f,c
 14586  01112E  0E00               	movlw	0
 14587  011130  5ADD               	subwfb	postdec2,f,c
 14588                           
 14589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 14590                           ;stkvar	_i @ sp[(-56)+36]
 14591  011132  50E1               	movf	fsr1l,w,c
 14592  011134  0FEC               	addlw	-20
 14593  011136  6ED9               	movwf	fsr2l,c
 14594  011138  50E2               	movf	fsr1h,w,c
 14595  01113A  6EDA               	movwf	fsr2h,c
 14596  01113C  0EFF               	movlw	255
 14597  01113E  22DA               	addwfc	fsr2h,f,c
 14598  011140  06DE               	decf	postinc2,f,c
 14599  011142  0E00               	movlw	0
 14600  011144  5ADD               	subwfb	postdec2,f,c
 14601  011146  0EBF               	movlw	191
 14602  011148  6E0B               	movwf	(btemp+10)^0,c
 14603  01114A  0EFF               	movlw	255
 14604  01114C  6E0C               	movwf	(btemp+11)^0,c
 14605                           
 14606                           ;stkvar	_c @ sp[(-56)+-7]
 14607  01114E  0EC1               	movlw	-63
 14608  011150  50E3               	movf	plusw1,w,c
 14609  011152  6E09               	movwf	(btemp+8)^0,c
 14610  011154  6A0A               	clrf	(btemp+9)^0,c
 14611  011156  500B               	movf	(btemp+10)^0,w,c
 14612  011158  2609               	addwf	(btemp+8)^0,f,c
 14613  01115A  500C               	movf	(btemp+11)^0,w,c
 14614  01115C  220A               	addwfc	(btemp+9)^0,f,c
 14615  01115E  500A               	movf	(btemp+9)^0,w,c
 14616  011160  E106               	bnz	u10160
 14617  011162  0E1A               	movlw	26
 14618  011164  5C09               	subwf	(btemp+8)^0,w,c
 14619  011166  B0D8               	btfsc	status,0,c
 14620  011168  D002               	goto	u10160
 14621  01116A  0E01               	movlw	1
 14622  01116C  D001               	goto	u10170
 14623  01116E                     u10160:
 14624  01116E  0E00               	movlw	0
 14625  011170                     u10170:
 14626  011170  6E0B               	movwf	(btemp+10)^0,c
 14627  011172  6A0C               	clrf	(btemp+11)^0,c
 14628                           
 14629                           ;stkvar	_efgtoa$5154 @ sp[(-56)+0]
 14630  011174  0EC8               	movlw	-56
 14631  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14632  01117C  0EC9               	movlw	-55
 14633  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14634                           
 14635                           ;stkvar	_efgtoa$5154 @ sp[(-56)+0]
 14636  011184  0EC8               	movlw	-56
 14637  011186  006F FF8C  F001    	movff	plusw1,btemp
 14638  01118C  0EC9               	movlw	-55
 14639  01118E  50E3               	movf	plusw1,w,c
 14640  011190  1001               	iorwf	btemp^0,w,c
 14641  011192  A4D8               	btfss	status,2,c
 14642  011194  D002               	goto	l10910
 14643  011196  0E65               	movlw	101
 14644  011198  D001               	goto	L12
 14645  01119A                     l10910:
 14646  01119A  0E45               	movlw	69
 14647  01119C                     L12:
 14648  01119C  6E0B               	movwf	(btemp+10)^0,c
 14649  01119E  0E00               	movlw	0
 14650  0111A0  6E0C               	movwf	(btemp+11)^0,c
 14651                           
 14652                           ;stkvar	_efgtoa$5153 @ sp[(-56)+2]
 14653  0111A2  0ECA               	movlw	-54
 14654  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14655  0111AA  0ECB               	movlw	-53
 14656  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14657                           
 14658                           ;stkvar	_efgtoa$5153 @ sp[(-56)+2]
 14659                           ;stkvar	_i @ sp[(-56)+36]
 14660  0111B2  0EEC               	movlw	-20
 14661  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 14662  0111BA  0EED               	movlw	-19
 14663  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14664  0111C2  0E94               	movlw	low _dbuf
 14665  0111C4  240B               	addwf	(btemp+10)^0,w,c
 14666  0111C6  6ED9               	movwf	fsr2l,c
 14667  0111C8  0E03               	movlw	high _dbuf
 14668  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 14669  0111CC  6EDA               	movwf	fsr2h,c
 14670  0111CE  0ECA               	movlw	-54
 14671  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 14672                           
 14673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 14674                           ;stkvar	_w @ sp[(-56)+38]
 14675  0111D6  50E1               	movf	fsr1l,w,c
 14676  0111D8  0FEE               	addlw	-18
 14677  0111DA  6ED9               	movwf	fsr2l,c
 14678  0111DC  50E2               	movf	fsr1h,w,c
 14679  0111DE  6EDA               	movwf	fsr2h,c
 14680  0111E0  0EFF               	movlw	255
 14681  0111E2  22DA               	addwfc	fsr2h,f,c
 14682  0111E4  06DE               	decf	postinc2,f,c
 14683  0111E6  0E00               	movlw	0
 14684  0111E8  5ADD               	subwfb	postdec2,f,c
 14685                           
 14686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 14687                           ;stkvar	_i @ sp[(-56)+36]
 14688  0111EA  0EEC               	movlw	-20
 14689  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14690  0111F2  0EED               	movlw	-19
 14691  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14692  0111FA  0E94               	movlw	low _dbuf
 14693  0111FC  240B               	addwf	(btemp+10)^0,w,c
 14694  0111FE  6E09               	movwf	(btemp+8)^0,c
 14695  011200  0E03               	movlw	high _dbuf
 14696  011202  200C               	addwfc	(btemp+11)^0,w,c
 14697  011204  6E0A               	movwf	(btemp+9)^0,c
 14698  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 14699  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 14700                           
 14701                           ;stkvar	_n @ sp[(-58)+32]
 14702  011212  0E94               	movlw	low _dbuf
 14703  011214  6E0B               	movwf	(btemp+10)^0,c
 14704  011216  0E03               	movlw	high _dbuf
 14705  011218  6E0C               	movwf	(btemp+11)^0,c
 14706  01121A  0EE6               	movlw	-26
 14707  01121C  50E3               	movf	plusw1,w,c
 14708  01121E  260B               	addwf	(btemp+10)^0,f,c
 14709  011220  0EE7               	movlw	-25
 14710  011222  50E3               	movf	plusw1,w,c
 14711  011224  220C               	addwfc	(btemp+11)^0,f,c
 14712  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14713  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14714  011232  ECF6  F0BF         	call	_strcpy	;wreg free
 14715  011236  EF16  F081         	goto	l10662
 14716  01123A                     l2055:
 14717                           
 14718                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 14719  01123A  0EC1               	movlw	193
 14720  01123C  26E1               	addwf	fsr1l,f,c
 14721  01123E  0EFF               	movlw	255
 14722  011240  22E2               	addwfc	fsr1h,f,c
 14723  011242  0012               	return		;funcret
 14724  011244                     __end_of_efgtoa:
 14725                           	opt callstack 0
 14726                           
 14727 ;; *************** function _tolower *****************
 14728 ;; Defined at:
 14729 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;  c               2  [STACK] int 
 14732 ;; Auto vars:     Size  Location     Type
 14733 ;;		None
 14734 ;; Return value:  Size  Location     Type
 14735 ;;                  2  [STACK] int 
 14736 ;; Registers used:
 14737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14738 ;; Tracked objects:
 14739 ;;		On entry : 0/0
 14740 ;;		On exit  : 0/0
 14741 ;;		Unchanged: 0/0
 14742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14747 ;;Total ram usage:        0 bytes
 14748 ;; Hardware stack levels used:    1
 14749 ;; Hardware stack levels required when called:   16
 14750 ;; This function calls:
 14751 ;;		_isupper
 14752 ;; This function is called by:
 14753 ;;		_efgtoa
 14754 ;;		_vfpfcnvrt
 14755 ;; This function uses a reentrant model
 14756 ;;
 14757                           
 14758                           	psect	text51
 14759  018984                     __ptext51:
 14760                           	opt callstack 0
 14761  018984                     _tolower:
 14762                           	opt callstack 0
 14763                           
 14764                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14765  018984  52E6               	movf	postinc1,f,c
 14766  018986  52E6               	movf	postinc1,f,c
 14767                           
 14768                           ;stkvar	_c @ sp[(-2)+-2]
 14769                           
 14770                           ;incstack = 0
 14771 ;; hardware stack exceeded
 14772  018988  0EFC               	movlw	-4
 14773  01898A  50E3               	movf	plusw1,w,c
 14774  01898C  0FBF               	addlw	191
 14775  01898E  6E0B               	movwf	(btemp+10)^0,c
 14776  018990  0EFD               	movlw	-3
 14777  018992  006F FF8C  F00C    	movff	plusw1,btemp+11
 14778  018998  0EFF               	movlw	255
 14779  01899A  220C               	addwfc	(btemp+11)^0,f,c
 14780  01899C  500C               	movf	(btemp+11)^0,w,c
 14781  01899E  E106               	bnz	u5340
 14782  0189A0  0E1A               	movlw	26
 14783  0189A2  5C0B               	subwf	(btemp+10)^0,w,c
 14784  0189A4  B0D8               	btfsc	status,0,c
 14785  0189A6  D002               	goto	u5340
 14786  0189A8  0E01               	movlw	1
 14787  0189AA  D001               	goto	u5350
 14788  0189AC                     u5340:
 14789  0189AC  0E00               	movlw	0
 14790  0189AE                     u5350:
 14791  0189AE  6E0B               	movwf	(btemp+10)^0,c
 14792  0189B0  6A0C               	clrf	(btemp+11)^0,c
 14793                           
 14794                           ;stkvar	_tolower$5935 @ sp[(-2)+0]
 14795  0189B2  0EFE               	movlw	-2
 14796  0189B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14797  0189BA  0EFF               	movlw	-1
 14798  0189BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14799                           
 14800                           ;stkvar	_tolower$5935 @ sp[(-2)+0]
 14801  0189C2  0EFE               	movlw	-2
 14802  0189C4  006F FF8C  F001    	movff	plusw1,btemp
 14803  0189CA  0EFF               	movlw	-1
 14804  0189CC  50E3               	movf	plusw1,w,c
 14805  0189CE  1001               	iorwf	btemp^0,w,c
 14806  0189D0  B4D8               	btfsc	status,2,c
 14807  0189D2  D00D               	goto	l7224
 14808                           
 14809                           ;stkvar	_c @ sp[(-2)+-2]
 14810  0189D4  0EFC               	movlw	-4
 14811  0189D6  006F FF8C  F001    	movff	plusw1,btemp
 14812  0189DC  0EFD               	movlw	-3
 14813  0189DE  006F FF8C  F002    	movff	plusw1,btemp+1
 14814  0189E4  0E20               	movlw	32
 14815  0189E6  1201               	iorwf	btemp^0,f,c
 14816  0189E8  0E00               	movlw	0
 14817  0189EA  1202               	iorwf	(btemp+1)^0,f,c
 14818  0189EC  D008               	goto	l3299
 14819  0189EE                     l7224:
 14820                           
 14821                           ;stkvar	_c @ sp[(-2)+-2]
 14822  0189EE  0EFC               	movlw	-4
 14823  0189F0  006F FF8C  F001    	movff	plusw1,btemp
 14824  0189F6  0EFD               	movlw	-3
 14825  0189F8  006F FF8C  F002    	movff	plusw1,btemp+1
 14826  0189FE                     l3299:
 14827                           
 14828                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14829  0189FE  52E5               	movf	postdec1,f,c
 14830  018A00  52E5               	movf	postdec1,f,c
 14831  018A02  52E5               	movf	postdec1,f,c
 14832  018A04  52E5               	movf	postdec1,f,c
 14833  018A06  0012               	return		;funcret
 14834  018A08                     __end_of_tolower:
 14835                           	opt callstack 0
 14836                           
 14837 ;; *************** function _isupper *****************
 14838 ;; Defined at:
 14839 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 14840 ;; Parameters:    Size  Location     Type
 14841 ;;  c               2  [STACK] int 
 14842 ;; Auto vars:     Size  Location     Type
 14843 ;;		None
 14844 ;; Return value:  Size  Location     Type
 14845 ;;                  2  [STACK] int 
 14846 ;; Registers used:
 14847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14848 ;; Tracked objects:
 14849 ;;		On entry : 0/0
 14850 ;;		On exit  : 0/0
 14851 ;;		Unchanged: 0/0
 14852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14857 ;;Total ram usage:        0 bytes
 14858 ;; Hardware stack levels used:    1
 14859 ;; Hardware stack levels required when called:   15
 14860 ;; This function calls:
 14861 ;;		Nothing
 14862 ;; This function is called by:
 14863 ;;		_efgtoa
 14864 ;;		_xtoa
 14865 ;;		_vfpfcnvrt
 14866 ;;		_tolower
 14867 ;; This function uses a reentrant model
 14868 ;;
 14869                           
 14870                           	psect	text52
 14871  019526                     __ptext52:
 14872                           	opt callstack 0
 14873  019526                     _isupper:
 14874                           	opt callstack 0
 14875                           
 14876                           ;stkvar	_c @ sp[(0)+-2]
 14877                           
 14878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14879                           ;incstack = 0
 14880 ;; hardware stack exceeded
 14881  019526  0EFE               	movlw	-2
 14882  019528  50E3               	movf	plusw1,w,c
 14883  01952A  0FBF               	addlw	191
 14884  01952C  6E0B               	movwf	(btemp+10)^0,c
 14885  01952E  0EFF               	movlw	-1
 14886  019530  006F FF8C  F00C    	movff	plusw1,btemp+11
 14887  019536  0EFF               	movlw	255
 14888  019538  220C               	addwfc	(btemp+11)^0,f,c
 14889  01953A  500C               	movf	(btemp+11)^0,w,c
 14890  01953C  E106               	bnz	u4740
 14891  01953E  0E1A               	movlw	26
 14892  019540  5C0B               	subwf	(btemp+10)^0,w,c
 14893  019542  B0D8               	btfsc	status,0,c
 14894  019544  D002               	goto	u4740
 14895  019546  0E01               	movlw	1
 14896  019548  D001               	goto	u4750
 14897  01954A                     u4740:
 14898  01954A  0E00               	movlw	0
 14899  01954C                     u4750:
 14900  01954C  6E01               	movwf	btemp^0,c
 14901  01954E  6A02               	clrf	(btemp+1)^0,c
 14902                           
 14903                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14904  019550  52E5               	movf	postdec1,f,c
 14905  019552  52E5               	movf	postdec1,f,c
 14906  019554  0012               	return		;funcret
 14907  019556                     __end_of_isupper:
 14908                           	opt callstack 0
 14909                           
 14910 ;; *************** function _strcpy *****************
 14911 ;; Defined at:
 14912 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  dest            2  [STACK] PTR unsigned char 
 14915 ;;		 -> dbuf(80), 
 14916 ;;  src             2  [STACK] PTR const unsigned char 
 14917 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 14918 ;;		 -> dbuf(80), 
 14919 ;; Auto vars:     Size  Location     Type
 14920 ;;  d               2  [STACK] PTR unsigned char 
 14921 ;;		 -> dbuf(80), 
 14922 ;;  s               2  [STACK] PTR const unsigned char 
 14923 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 14924 ;;		 -> dbuf(80), 
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  2  [STACK] PTR unsigned char 
 14927 ;; Registers used:
 14928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14938 ;;Total ram usage:        0 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:   15
 14941 ;; This function calls:
 14942 ;;		Nothing
 14943 ;; This function is called by:
 14944 ;;		_efgtoa
 14945 ;; This function uses a reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text53
 14949  017FEC                     __ptext53:
 14950                           	opt callstack 0
 14951  017FEC                     _strcpy:
 14952                           	opt callstack 0
 14953                           
 14954                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14955  017FEC  52E6               	movf	postinc1,f,c
 14956  017FEE  52E6               	movf	postinc1,f,c
 14957  017FF0  52E6               	movf	postinc1,f,c
 14958  017FF2  52E6               	movf	postinc1,f,c
 14959                           
 14960                           ;stkvar	_src @ sp[(-4)+-4]
 14961                           
 14962                           ;incstack = 0
 14963 ;; hardware stack exceeded
 14964  017FF4  0EF8               	movlw	-8
 14965  017FF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 14966  017FFC  0EF9               	movlw	-7
 14967  017FFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 14968                           
 14969                           ;stkvar	_s @ sp[(-4)+2]
 14970  018004  0EFF               	movlw	-1
 14971  018006  0060  F033  FFE3   	movff	btemp+11,plusw1
 14972  01800C  0EFE               	movlw	-2
 14973  01800E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14974                           
 14975                           ;stkvar	_dest @ sp[(-4)+-2]
 14976  018014  0EFA               	movlw	-6
 14977  018016  006F FF8C  F00B    	movff	plusw1,btemp+10
 14978  01801C  0EFB               	movlw	-5
 14979  01801E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14980                           
 14981                           ;stkvar	_d @ sp[(-4)+0]
 14982  018024  0EFD               	movlw	-3
 14983  018026  0060  F033  FFE3   	movff	btemp+11,plusw1
 14984  01802C  0EFC               	movlw	-4
 14985  01802E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14986  018034                     l10484:
 14987                           
 14988                           ;stkvar	_s @ sp[(-4)+2]
 14989  018034  50E1               	movf	fsr1l,w,c
 14990  018036  0FFE               	addlw	-2
 14991  018038  6ED9               	movwf	fsr2l,c
 14992  01803A  50E2               	movf	fsr1h,w,c
 14993  01803C  6EDA               	movwf	fsr2h,c
 14994  01803E  0EFF               	movlw	255
 14995  018040  22DA               	addwfc	fsr2h,f,c
 14996  018042  006F FF7C  F00B    	movff	indf2,btemp+10
 14997  018048  0E01               	movlw	1
 14998  01804A  26DE               	addwf	postinc2,f,c
 14999  01804C  006F FF7C  F00C    	movff	indf2,btemp+11
 15000  018052  0E00               	movlw	0
 15001  018054  22DD               	addwfc	postdec2,f,c
 15002  018056  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15003  01805C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15004  018062  0E00               	movlw	low (__mediumconst shr (0+16))
 15005  018064  6EF8               	movwf	tblptru,c
 15006                           
 15007                           ;stkvar	_d @ sp[(-4)+0]
 15008  018066  50E1               	movf	fsr1l,w,c
 15009  018068  0FFC               	addlw	-4
 15010  01806A  6ED9               	movwf	fsr2l,c
 15011  01806C  50E2               	movf	fsr1h,w,c
 15012  01806E  6EDA               	movwf	fsr2h,c
 15013  018070  0EFF               	movlw	255
 15014  018072  22DA               	addwfc	fsr2h,f,c
 15015  018074  006F FF7C  F00B    	movff	indf2,btemp+10
 15016  01807A  0E01               	movlw	1
 15017  01807C  26DE               	addwf	postinc2,f,c
 15018  01807E  006F FF7C  F00C    	movff	indf2,btemp+11
 15019  018084  0E00               	movlw	0
 15020  018086  22DD               	addwfc	postdec2,f,c
 15021  018088  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15022  01808E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15023  018094  0E1F               	movlw	(high __ramtop+-1)
 15024  018096  64F7               	cpfsgt	tblptrh,c
 15025  018098  D003               	bra	u9417
 15026  01809A  0008               	tblrd		*
 15027  01809C  50F5               	movf	tablat,w,c
 15028  01809E  D007               	bra	u9410
 15029  0180A0                     u9417:
 15030  0180A0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15031  0180A6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15032  0180AC  50EF               	movf	indf0,w,c
 15033  0180AE                     u9410:
 15034  0180AE  6EDF               	movwf	indf2,c
 15035  0180B0  50DF               	movf	indf2,w,c
 15036  0180B2  A4D8               	btfss	status,2,c
 15037  0180B4  D7BF               	goto	l10484
 15038                           
 15039                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 15040  0180B6  0EF8               	movlw	248
 15041  0180B8  26E1               	addwf	fsr1l,f,c
 15042  0180BA  0EFF               	movlw	255
 15043  0180BC  22E2               	addwfc	fsr1h,f,c
 15044  0180BE  0012               	return		;funcret
 15045  0180C0                     __end_of_strcpy:
 15046                           	opt callstack 0
 15047                           
 15048 ;; *************** function _floorf *****************
 15049 ;; Defined at:
 15050 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;  x               4  [STACK] float 
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;  u               4  [STACK] struct .
 15055 ;;  m               4  [STACK] unsigned long 
 15056 ;;  e               2  [STACK] int 
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  4  [STACK] float 
 15059 ;; Registers used:
 15060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15070 ;;Total ram usage:        0 bytes
 15071 ;; Hardware stack levels used:    1
 15072 ;; Hardware stack levels required when called:   15
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_efgtoa
 15077 ;; This function uses a reentrant model
 15078 ;;
 15079                           
 15080                           	psect	text54
 15081  014F0A                     __ptext54:
 15082                           	opt callstack 0
 15083  014F0A                     _floorf:
 15084                           	opt callstack 0
 15085                           
 15086                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15087  014F0A  0E0A               	movlw	10
 15088  014F0C  26E1               	addwf	fsr1l,f,c
 15089  014F0E  0E00               	movlw	0
 15090  014F10  22E2               	addwfc	fsr1h,f,c
 15091                           
 15092                           ;incstack = 0
 15093 ;; hardware stack exceeded
 15094  014F12  0060  F254  F009   	movff	floorf@F524,btemp+8
 15095  014F18  0060  F258  F00A   	movff	floorf@F524+1,btemp+9
 15096  014F1E  0060  F25C  F00B   	movff	floorf@F524+2,btemp+10
 15097  014F24  0060  F260  F00C   	movff	floorf@F524+3,btemp+11
 15098                           
 15099                           ;stkvar	_u @ sp[(-10)+0]
 15100  014F2A  0EF6               	movlw	-10
 15101  014F2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15102  014F32  0EF7               	movlw	-9
 15103  014F34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15104  014F3A  0EF8               	movlw	-8
 15105  014F3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15106  014F42  0EF9               	movlw	-7
 15107  014F44  0060  F033  FFE3   	movff	btemp+11,plusw1
 15108                           
 15109                           ;stkvar	_x @ sp[(-10)+-4]
 15110  014F4A  0EF2               	movlw	-14
 15111  014F4C  006F FF8C  F009    	movff	plusw1,btemp+8
 15112  014F52  0EF3               	movlw	-13
 15113  014F54  006F FF8C  F00A    	movff	plusw1,btemp+9
 15114  014F5A  0EF4               	movlw	-12
 15115  014F5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15116  014F62  0EF5               	movlw	-11
 15117  014F64  006F FF8C  F00C    	movff	plusw1,btemp+11
 15118                           
 15119                           ;stkvar	_u @ sp[(-10)+0]
 15120  014F6A  0EF6               	movlw	-10
 15121  014F6C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15122  014F72  0EF7               	movlw	-9
 15123  014F74  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15124  014F7A  0EF8               	movlw	-8
 15125  014F7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15126  014F82  0EF9               	movlw	-7
 15127  014F84  0060  F033  FFE3   	movff	btemp+11,plusw1
 15128  014F8A  0E81               	movlw	129
 15129  014F8C  6E0B               	movwf	(btemp+10)^0,c
 15130  014F8E  0EFF               	movlw	255
 15131  014F90  6E0C               	movwf	(btemp+11)^0,c
 15132                           
 15133                           ;stkvar	_u @ sp[(-10)+0]
 15134  014F92  0EF6               	movlw	-10
 15135  014F94  006F FF8C  F005    	movff	plusw1,btemp+4
 15136  014F9A  0EF7               	movlw	-9
 15137  014F9C  006F FF8C  F006    	movff	plusw1,btemp+5
 15138  014FA2  0EF8               	movlw	-8
 15139  014FA4  006F FF8C  F007    	movff	plusw1,btemp+6
 15140  014FAA  0EF9               	movlw	-7
 15141  014FAC  006F FF8C  F008    	movff	plusw1,btemp+7
 15142  014FB2  0E18               	movlw	24
 15143  014FB4  D005               	goto	u5370
 15144  014FB6                     u5375:
 15145  014FB6  90D8               	bcf	status,0,c
 15146  014FB8  3208               	rrcf	(btemp+7)^0,f,c
 15147  014FBA  3207               	rrcf	(btemp+6)^0,f,c
 15148  014FBC  3206               	rrcf	(btemp+5)^0,f,c
 15149  014FBE  3205               	rrcf	(btemp+4)^0,f,c
 15150  014FC0                     u5370:
 15151  014FC0  2EE8               	decfsz	wreg,f,c
 15152  014FC2  D7F9               	goto	u5375
 15153  014FC4  0060  F014  F009   	movff	btemp+4,btemp+8
 15154  014FCA  0060  F018  F00A   	movff	btemp+5,btemp+9
 15155  014FD0  0EFF               	movlw	255
 15156  014FD2  1609               	andwf	(btemp+8)^0,f,c
 15157  014FD4  0E00               	movlw	0
 15158  014FD6  160A               	andwf	(btemp+9)^0,f,c
 15159  014FD8  500B               	movf	(btemp+10)^0,w,c
 15160  014FDA  2609               	addwf	(btemp+8)^0,f,c
 15161  014FDC  500C               	movf	(btemp+11)^0,w,c
 15162  014FDE  220A               	addwfc	(btemp+9)^0,f,c
 15163                           
 15164                           ;stkvar	_e @ sp[(-10)+8]
 15165  014FE0  0EFE               	movlw	-2
 15166  014FE2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15167  014FE8  0EFF               	movlw	-1
 15168  014FEA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15169                           
 15170                           ;stkvar	_e @ sp[(-10)+8]
 15171  014FF0  0EFF               	movlw	-1
 15172  014FF2  BEE3               	btfsc	plusw1,7,c
 15173  014FF4  D019               	goto	l7238
 15174  014FF6  0EFF               	movlw	-1
 15175  014FF8  50E3               	movf	plusw1,w,c
 15176  014FFA  E108               	bnz	u5380
 15177  014FFC  0EFE               	movlw	-2
 15178  014FFE  006F FF8C  F001    	movff	plusw1,btemp
 15179  015004  0E17               	movlw	23
 15180  015006  5E01               	subwf	btemp^0,f,c
 15181  015008  A0D8               	btfss	status,0,c
 15182  01500A  D00E               	goto	l7238
 15183  01500C                     u5380:
 15184                           
 15185                           ;stkvar	_x @ sp[(-10)+-4]
 15186  01500C  0EF2               	movlw	-14
 15187  01500E  006F FF8C  F001    	movff	plusw1,btemp
 15188  015014  0EF3               	movlw	-13
 15189  015016  006F FF8C  F002    	movff	plusw1,btemp+1
 15190  01501C  0EF4               	movlw	-12
 15191  01501E  006F FF8C  F003    	movff	plusw1,btemp+2
 15192  015024  0EF5               	movlw	-11
 15193  015026  D11F               	goto	L13
 15194  015028                     l7238:
 15195                           
 15196                           ;stkvar	_e @ sp[(-10)+8]
 15197  015028  0EFF               	movlw	-1
 15198  01502A  BEE3               	btfsc	plusw1,7,c
 15199  01502C  D0B4               	goto	l7254
 15200                           
 15201                           ;stkvar	_e @ sp[(-10)+8]
 15202  01502E  0EFE               	movlw	-2
 15203  015030  006F FF8C  F00C    	movff	plusw1,btemp+11
 15204  015036  0EFF               	movlw	255
 15205  015038  6E05               	movwf	(btemp+4)^0,c
 15206  01503A  0EFF               	movlw	255
 15207  01503C  6E06               	movwf	(btemp+5)^0,c
 15208  01503E  0E7F               	movlw	127
 15209  015040  6E07               	movwf	(btemp+6)^0,c
 15210  015042  0E00               	movlw	0
 15211  015044  6E08               	movwf	(btemp+7)^0,c
 15212  015046                     u5405:
 15213  015046  660C               	tstfsz	(btemp+11)^0,c
 15214  015048  D001               	goto	u5406
 15215  01504A  D007               	goto	u5407
 15216  01504C                     u5406:
 15217  01504C  3408               	rlcf	(btemp+7)^0,w,c
 15218  01504E  3208               	rrcf	(btemp+7)^0,f,c
 15219  015050  3207               	rrcf	(btemp+6)^0,f,c
 15220  015052  3206               	rrcf	(btemp+5)^0,f,c
 15221  015054  3205               	rrcf	(btemp+4)^0,f,c
 15222  015056  2E0C               	decfsz	(btemp+11)^0,f,c
 15223  015058  D7F6               	goto	u5405
 15224  01505A                     u5407:
 15225                           
 15226                           ;stkvar	_m @ sp[(-10)+4]
 15227  01505A  0EFA               	movlw	-6
 15228  01505C  0060  F017  FFE3   	movff	btemp+4,plusw1
 15229  015062  0EFB               	movlw	-5
 15230  015064  0060  F01B  FFE3   	movff	btemp+5,plusw1
 15231  01506A  0EFC               	movlw	-4
 15232  01506C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 15233  015072  0EFD               	movlw	-3
 15234  015074  0060  F023  FFE3   	movff	btemp+7,plusw1
 15235                           
 15236                           ;stkvar	_m @ sp[(-10)+4]
 15237                           ;stkvar	_u @ sp[(-10)+0]
 15238  01507A  0EF6               	movlw	-10
 15239  01507C  006F FF8C  F009    	movff	plusw1,btemp+8
 15240  015082  0EF7               	movlw	-9
 15241  015084  006F FF8C  F00A    	movff	plusw1,btemp+9
 15242  01508A  0EF8               	movlw	-8
 15243  01508C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15244  015092  0EF9               	movlw	-7
 15245  015094  006F FF8C  F00C    	movff	plusw1,btemp+11
 15246  01509A  0EFA               	movlw	-6
 15247  01509C  50E3               	movf	plusw1,w,c
 15248  01509E  1609               	andwf	(btemp+8)^0,f,c
 15249  0150A0  0EFB               	movlw	-5
 15250  0150A2  50E3               	movf	plusw1,w,c
 15251  0150A4  160A               	andwf	(btemp+9)^0,f,c
 15252  0150A6  0EFC               	movlw	-4
 15253  0150A8  50E3               	movf	plusw1,w,c
 15254  0150AA  160B               	andwf	(btemp+10)^0,f,c
 15255  0150AC  0EFD               	movlw	-3
 15256  0150AE  50E3               	movf	plusw1,w,c
 15257  0150B0  160C               	andwf	(btemp+11)^0,f,c
 15258  0150B2  5009               	movf	(btemp+8)^0,w,c
 15259  0150B4  100A               	iorwf	(btemp+9)^0,w,c
 15260  0150B6  100B               	iorwf	(btemp+10)^0,w,c
 15261  0150B8  100C               	iorwf	(btemp+11)^0,w,c
 15262  0150BA  B4D8               	btfsc	status,2,c
 15263  0150BC  D7A7               	goto	u5380
 15264                           
 15265                           ;stkvar	_u @ sp[(-10)+0]
 15266  0150BE  0EF6               	movlw	-10
 15267  0150C0  006F FF8C  F009    	movff	plusw1,btemp+8
 15268  0150C6  0EF7               	movlw	-9
 15269  0150C8  006F FF8C  F00A    	movff	plusw1,btemp+9
 15270  0150CE  0EF8               	movlw	-8
 15271  0150D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 15272  0150D6  0EF9               	movlw	-7
 15273  0150D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 15274  0150DE  0E20               	movlw	32
 15275  0150E0  D005               	goto	u5420
 15276  0150E2                     u5425:
 15277  0150E2  90D8               	bcf	status,0,c
 15278  0150E4  320C               	rrcf	(btemp+11)^0,f,c
 15279  0150E6  320B               	rrcf	(btemp+10)^0,f,c
 15280  0150E8  320A               	rrcf	(btemp+9)^0,f,c
 15281  0150EA  3209               	rrcf	(btemp+8)^0,f,c
 15282  0150EC                     u5420:
 15283  0150EC  2EE8               	decfsz	wreg,f,c
 15284  0150EE  D7F9               	goto	u5425
 15285  0150F0  5009               	movf	(btemp+8)^0,w,c
 15286  0150F2  B4D8               	btfsc	status,2,c
 15287  0150F4  D028               	goto	l7252
 15288                           
 15289                           ;stkvar	_m @ sp[(-10)+4]
 15290                           ;stkvar	_u @ sp[(-10)+0]
 15291  0150F6  0EF6               	movlw	-10
 15292  0150F8  50E3               	movf	plusw1,w,c
 15293  0150FA  6E01               	movwf	btemp^0,c
 15294  0150FC  0EFA               	movlw	-6
 15295  0150FE  50E3               	movf	plusw1,w,c
 15296  015100  2601               	addwf	btemp^0,f,c
 15297  015102  0EF6               	movlw	-10
 15298  015104  0060  F007  FFE3   	movff	btemp,plusw1
 15299  01510A  0EF7               	movlw	-9
 15300  01510C  50E3               	movf	plusw1,w,c
 15301  01510E  6E01               	movwf	btemp^0,c
 15302  015110  0EFB               	movlw	-5
 15303  015112  50E3               	movf	plusw1,w,c
 15304  015114  2201               	addwfc	btemp^0,f,c
 15305  015116  0EF7               	movlw	-9
 15306  015118  0060  F007  FFE3   	movff	btemp,plusw1
 15307  01511E  0EF8               	movlw	-8
 15308  015120  50E3               	movf	plusw1,w,c
 15309  015122  6E01               	movwf	btemp^0,c
 15310  015124  0EFC               	movlw	-4
 15311  015126  50E3               	movf	plusw1,w,c
 15312  015128  2201               	addwfc	btemp^0,f,c
 15313  01512A  0EF8               	movlw	-8
 15314  01512C  0060  F007  FFE3   	movff	btemp,plusw1
 15315  015132  0EF9               	movlw	-7
 15316  015134  50E3               	movf	plusw1,w,c
 15317  015136  6E01               	movwf	btemp^0,c
 15318  015138  0EFD               	movlw	-3
 15319  01513A  50E3               	movf	plusw1,w,c
 15320  01513C  2201               	addwfc	btemp^0,f,c
 15321  01513E  0EF9               	movlw	-7
 15322  015140  0060  F007  FFE3   	movff	btemp,plusw1
 15323  015146                     l7252:
 15324                           
 15325                           ;stkvar	_m @ sp[(-10)+4]
 15326  015146  0EFA               	movlw	-6
 15327  015148  006F FF8C  F009    	movff	plusw1,btemp+8
 15328  01514E  0EFB               	movlw	-5
 15329  015150  006F FF8C  F00A    	movff	plusw1,btemp+9
 15330  015156  0EFC               	movlw	-4
 15331  015158  006F FF8C  F00B    	movff	plusw1,btemp+10
 15332  01515E  0EFD               	movlw	-3
 15333  015160  006F FF8C  F00C    	movff	plusw1,btemp+11
 15334  015166  1C09               	comf	(btemp+8)^0,w,c
 15335  015168  6E05               	movwf	(btemp+4)^0,c
 15336  01516A  1C0A               	comf	(btemp+9)^0,w,c
 15337  01516C  6E06               	movwf	(btemp+5)^0,c
 15338  01516E  1C0B               	comf	(btemp+10)^0,w,c
 15339  015170  6E07               	movwf	(btemp+6)^0,c
 15340  015172  1C0C               	comf	(btemp+11)^0,w,c
 15341  015174  6E08               	movwf	(btemp+7)^0,c
 15342                           
 15343                           ;stkvar	_u @ sp[(-10)+0]
 15344  015176  50E1               	movf	fsr1l,w,c
 15345  015178  0FF6               	addlw	-10
 15346  01517A  6ED9               	movwf	fsr2l,c
 15347  01517C  50E2               	movf	fsr1h,w,c
 15348  01517E  6EDA               	movwf	fsr2h,c
 15349  015180  0EFF               	movlw	255
 15350  015182  22DA               	addwfc	fsr2h,f,c
 15351  015184  5005               	movf	(btemp+4)^0,w,c
 15352  015186  16DE               	andwf	postinc2,f,c
 15353  015188  5006               	movf	(btemp+5)^0,w,c
 15354  01518A  16DE               	andwf	postinc2,f,c
 15355  01518C  5007               	movf	(btemp+6)^0,w,c
 15356  01518E  16DE               	andwf	postinc2,f,c
 15357  015190  5008               	movf	(btemp+7)^0,w,c
 15358  015192  16DE               	andwf	postinc2,f,c
 15359  015194  D05B               	goto	l7262
 15360  015196                     l7254:
 15361                           
 15362                           ;stkvar	_u @ sp[(-10)+0]
 15363  015196  0EF6               	movlw	-10
 15364  015198  006F FF8C  F009    	movff	plusw1,btemp+8
 15365  01519E  0EF7               	movlw	-9
 15366  0151A0  006F FF8C  F00A    	movff	plusw1,btemp+9
 15367  0151A6  0EF8               	movlw	-8
 15368  0151A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15369  0151AE  0EF9               	movlw	-7
 15370  0151B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15371  0151B6  0E20               	movlw	32
 15372  0151B8  D005               	goto	u5440
 15373  0151BA                     u5445:
 15374  0151BA  90D8               	bcf	status,0,c
 15375  0151BC  320C               	rrcf	(btemp+11)^0,f,c
 15376  0151BE  320B               	rrcf	(btemp+10)^0,f,c
 15377  0151C0  320A               	rrcf	(btemp+9)^0,f,c
 15378  0151C2  3209               	rrcf	(btemp+8)^0,f,c
 15379  0151C4                     u5440:
 15380  0151C4  2EE8               	decfsz	wreg,f,c
 15381  0151C6  D7F9               	goto	u5445
 15382  0151C8  6609               	tstfsz	(btemp+8)^0,c
 15383  0151CA  D009               	goto	l7258
 15384                           
 15385                           ;stkvar	_u @ sp[(-10)+0]
 15386  0151CC  0EF6               	movlw	-10
 15387  0151CE  6AE3               	clrf	plusw1,c
 15388  0151D0  0EF7               	movlw	-9
 15389  0151D2  6AE3               	clrf	plusw1,c
 15390  0151D4  0EF8               	movlw	-8
 15391  0151D6  6AE3               	clrf	plusw1,c
 15392  0151D8  0EF9               	movlw	-7
 15393  0151DA  6AE3               	clrf	plusw1,c
 15394  0151DC  D037               	goto	l7262
 15395  0151DE                     l7258:
 15396                           
 15397                           ;stkvar	_u @ sp[(-10)+0]
 15398  0151DE  0EF6               	movlw	-10
 15399  0151E0  006F FF8C  F009    	movff	plusw1,btemp+8
 15400  0151E6  0EF7               	movlw	-9
 15401  0151E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 15402  0151EE  0EF8               	movlw	-8
 15403  0151F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 15404  0151F6  0EF9               	movlw	-7
 15405  0151F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 15406  0151FE  90D8               	bcf	status,0,c
 15407  015200  3409               	rlcf	(btemp+8)^0,w,c
 15408  015202  6E05               	movwf	(btemp+4)^0,c
 15409  015204  340A               	rlcf	(btemp+9)^0,w,c
 15410  015206  6E06               	movwf	(btemp+5)^0,c
 15411  015208  340B               	rlcf	(btemp+10)^0,w,c
 15412  01520A  6E07               	movwf	(btemp+6)^0,c
 15413  01520C  340C               	rlcf	(btemp+11)^0,w,c
 15414  01520E  6E08               	movwf	(btemp+7)^0,c
 15415  015210  5005               	movf	(btemp+4)^0,w,c
 15416  015212  1006               	iorwf	(btemp+5)^0,w,c
 15417  015214  1007               	iorwf	(btemp+6)^0,w,c
 15418  015216  1008               	iorwf	(btemp+7)^0,w,c
 15419  015218  B4D8               	btfsc	status,2,c
 15420  01521A  D018               	goto	l7262
 15421  01521C  0E00               	movlw	0
 15422  01521E  6E09               	movwf	(btemp+8)^0,c
 15423  015220  0E00               	movlw	0
 15424  015222  6E0A               	movwf	(btemp+9)^0,c
 15425  015224  0E80               	movlw	128
 15426  015226  6E0B               	movwf	(btemp+10)^0,c
 15427  015228  0EBF               	movlw	191
 15428  01522A  6E0C               	movwf	(btemp+11)^0,c
 15429                           
 15430                           ;stkvar	_u @ sp[(-10)+0]
 15431  01522C  0EF6               	movlw	-10
 15432  01522E  0060  F027  FFE3   	movff	btemp+8,plusw1
 15433  015234  0EF7               	movlw	-9
 15434  015236  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15435  01523C  0EF8               	movlw	-8
 15436  01523E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15437  015244  0EF9               	movlw	-7
 15438  015246  0060  F033  FFE3   	movff	btemp+11,plusw1
 15439  01524C                     l7262:
 15440                           
 15441                           ;stkvar	_u @ sp[(-10)+0]
 15442  01524C  0EF6               	movlw	-10
 15443  01524E  006F FF8C  F001    	movff	plusw1,btemp
 15444  015254  0EF7               	movlw	-9
 15445  015256  006F FF8C  F002    	movff	plusw1,btemp+1
 15446  01525C  0EF8               	movlw	-8
 15447  01525E  006F FF8C  F003    	movff	plusw1,btemp+2
 15448  015264  0EF9               	movlw	-7
 15449  015266                     L13:
 15450  015266  006F FF8C  F004    	movff	plusw1,btemp+3
 15451                           
 15452                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15453  01526C  0EF2               	movlw	242
 15454  01526E  26E1               	addwf	fsr1l,f,c
 15455  015270  0EFF               	movlw	255
 15456  015272  22E2               	addwfc	fsr1h,f,c
 15457  015274  0012               	return		;funcret
 15458  015276                     __end_of_floorf:
 15459                           	opt callstack 0
 15460                           
 15461 ;; *************** function ___fpclassifyf *****************
 15462 ;; Defined at:
 15463 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 15464 ;; Parameters:    Size  Location     Type
 15465 ;;  x               4  [STACK] float 
 15466 ;; Auto vars:     Size  Location     Type
 15467 ;;  u               4  [STACK] struct .
 15468 ;;  e               2  [STACK] int 
 15469 ;; Return value:  Size  Location     Type
 15470 ;;                  2  [STACK] int 
 15471 ;; Registers used:
 15472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 15473 ;; Tracked objects:
 15474 ;;		On entry : 0/0
 15475 ;;		On exit  : 0/0
 15476 ;;		Unchanged: 0/0
 15477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15482 ;;Total ram usage:        0 bytes
 15483 ;; Hardware stack levels used:    1
 15484 ;; Hardware stack levels required when called:   15
 15485 ;; This function calls:
 15486 ;;		Nothing
 15487 ;; This function is called by:
 15488 ;;		_efgtoa
 15489 ;; This function uses a reentrant model
 15490 ;;
 15491                           
 15492                           	psect	text55
 15493  016BCC                     __ptext55:
 15494                           	opt callstack 0
 15495  016BCC                     ___fpclassifyf:
 15496                           	opt callstack 0
 15497                           
 15498                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15499  016BCC  0E06               	movlw	6
 15500  016BCE  26E1               	addwf	fsr1l,f,c
 15501  016BD0  0E00               	movlw	0
 15502  016BD2  22E2               	addwfc	fsr1h,f,c
 15503                           
 15504                           ;incstack = 0
 15505 ;; hardware stack exceeded
 15506  016BD4  0060  F264  F009   	movff	___fpclassifyf@F463,btemp+8
 15507  016BDA  0060  F268  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 15508  016BE0  0060  F26C  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 15509  016BE6  0060  F270  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 15510                           
 15511                           ;stkvar	_u @ sp[(-6)+0]
 15512  016BEC  0EFA               	movlw	-6
 15513  016BEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 15514  016BF4  0EFB               	movlw	-5
 15515  016BF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15516  016BFC  0EFC               	movlw	-4
 15517  016BFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15518  016C04  0EFD               	movlw	-3
 15519  016C06  0060  F033  FFE3   	movff	btemp+11,plusw1
 15520                           
 15521                           ;stkvar	_x @ sp[(-6)+-4]
 15522  016C0C  0EF6               	movlw	-10
 15523  016C0E  006F FF8C  F009    	movff	plusw1,btemp+8
 15524  016C14  0EF7               	movlw	-9
 15525  016C16  006F FF8C  F00A    	movff	plusw1,btemp+9
 15526  016C1C  0EF8               	movlw	-8
 15527  016C1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15528  016C24  0EF9               	movlw	-7
 15529  016C26  006F FF8C  F00C    	movff	plusw1,btemp+11
 15530                           
 15531                           ;stkvar	_u @ sp[(-6)+0]
 15532  016C2C  0EFA               	movlw	-6
 15533  016C2E  0060  F027  FFE3   	movff	btemp+8,plusw1
 15534  016C34  0EFB               	movlw	-5
 15535  016C36  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15536  016C3C  0EFC               	movlw	-4
 15537  016C3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15538  016C44  0EFD               	movlw	-3
 15539  016C46  0060  F033  FFE3   	movff	btemp+11,plusw1
 15540                           
 15541                           ;stkvar	_u @ sp[(-6)+0]
 15542  016C4C  0EFA               	movlw	-6
 15543  016C4E  006F FF8C  F009    	movff	plusw1,btemp+8
 15544  016C54  0EFB               	movlw	-5
 15545  016C56  006F FF8C  F00A    	movff	plusw1,btemp+9
 15546  016C5C  0EFC               	movlw	-4
 15547  016C5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15548  016C64  0EFD               	movlw	-3
 15549  016C66  006F FF8C  F00C    	movff	plusw1,btemp+11
 15550  016C6C  0E18               	movlw	24
 15551  016C6E  D005               	goto	u5250
 15552  016C70                     u5255:
 15553  016C70  90D8               	bcf	status,0,c
 15554  016C72  320C               	rrcf	(btemp+11)^0,f,c
 15555  016C74  320B               	rrcf	(btemp+10)^0,f,c
 15556  016C76  320A               	rrcf	(btemp+9)^0,f,c
 15557  016C78  3209               	rrcf	(btemp+8)^0,f,c
 15558  016C7A                     u5250:
 15559  016C7A  2EE8               	decfsz	wreg,f,c
 15560  016C7C  D7F9               	goto	u5255
 15561  016C7E  0060  F024  F007   	movff	btemp+8,btemp+6
 15562  016C84  0060  F028  F008   	movff	btemp+9,btemp+7
 15563  016C8A  0EFF               	movlw	255
 15564  016C8C  1607               	andwf	(btemp+6)^0,f,c
 15565  016C8E  0E00               	movlw	0
 15566  016C90  1608               	andwf	(btemp+7)^0,f,c
 15567                           
 15568                           ;stkvar	_e @ sp[(-6)+4]
 15569  016C92  0EFE               	movlw	-2
 15570  016C94  0060  F01F  FFE3   	movff	btemp+6,plusw1
 15571  016C9A  0EFF               	movlw	-1
 15572  016C9C  0060  F023  FFE3   	movff	btemp+7,plusw1
 15573                           
 15574                           ;stkvar	_e @ sp[(-6)+4]
 15575  016CA2  0EFE               	movlw	-2
 15576  016CA4  006F FF8C  F001    	movff	plusw1,btemp
 15577  016CAA  0EFF               	movlw	-1
 15578  016CAC  50E3               	movf	plusw1,w,c
 15579  016CAE  1001               	iorwf	btemp^0,w,c
 15580  016CB0  A4D8               	btfss	status,2,c
 15581  016CB2  D023               	goto	l7200
 15582                           
 15583                           ;stkvar	_u @ sp[(-6)+0]
 15584  016CB4  0EFA               	movlw	-6
 15585  016CB6  006F FF8C  F009    	movff	plusw1,btemp+8
 15586  016CBC  0EFB               	movlw	-5
 15587  016CBE  006F FF8C  F00A    	movff	plusw1,btemp+9
 15588  016CC4  0EFC               	movlw	-4
 15589  016CC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 15590  016CCC  0EFD               	movlw	-3
 15591  016CCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15592  016CD4  90D8               	bcf	status,0,c
 15593  016CD6  3409               	rlcf	(btemp+8)^0,w,c
 15594  016CD8  6E05               	movwf	(btemp+4)^0,c
 15595  016CDA  340A               	rlcf	(btemp+9)^0,w,c
 15596  016CDC  6E06               	movwf	(btemp+5)^0,c
 15597  016CDE  340B               	rlcf	(btemp+10)^0,w,c
 15598  016CE0  6E07               	movwf	(btemp+6)^0,c
 15599  016CE2  340C               	rlcf	(btemp+11)^0,w,c
 15600  016CE4  6E08               	movwf	(btemp+7)^0,c
 15601  016CE6  5005               	movf	(btemp+4)^0,w,c
 15602  016CE8  1006               	iorwf	(btemp+5)^0,w,c
 15603  016CEA  1007               	iorwf	(btemp+6)^0,w,c
 15604  016CEC  1008               	iorwf	(btemp+7)^0,w,c
 15605  016CEE  A4D8               	btfss	status,2,c
 15606  016CF0  D002               	goto	l7196
 15607  016CF2  0E02               	movlw	2
 15608  016CF4  D02E               	goto	L14
 15609  016CF6                     l7196:
 15610  016CF6  0E03               	movlw	3
 15611  016CF8  D02C               	goto	L14
 15612  016CFA                     l7200:
 15613                           
 15614                           ;stkvar	_e @ sp[(-6)+4]
 15615  016CFA  0EFE               	movlw	-2
 15616  016CFC  28E3               	incf	plusw1,w,c
 15617  016CFE  E128               	bnz	l7206
 15618  016D00  0EFF               	movlw	-1
 15619  016D02  50E3               	movf	plusw1,w,c
 15620  016D04  A4D8               	btfss	status,2,c
 15621  016D06  D024               	goto	l7206
 15622                           
 15623                           ;stkvar	_u @ sp[(-6)+0]
 15624  016D08  0EFA               	movlw	-6
 15625  016D0A  006F FF8C  F009    	movff	plusw1,btemp+8
 15626  016D10  0EFB               	movlw	-5
 15627  016D12  006F FF8C  F00A    	movff	plusw1,btemp+9
 15628  016D18  0EFC               	movlw	-4
 15629  016D1A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15630  016D20  0EFD               	movlw	-3
 15631  016D22  006F FF8C  F00C    	movff	plusw1,btemp+11
 15632  016D28  0E09               	movlw	9
 15633  016D2A                     u5295:
 15634  016D2A  90D8               	bcf	status,0,c
 15635  016D2C  3609               	rlcf	(btemp+8)^0,f,c
 15636  016D2E  360A               	rlcf	(btemp+9)^0,f,c
 15637  016D30  360B               	rlcf	(btemp+10)^0,f,c
 15638  016D32  360C               	rlcf	(btemp+11)^0,f,c
 15639  016D34  2EE8               	decfsz	wreg,f,c
 15640  016D36  D7F9               	goto	u5295
 15641  016D38  5009               	movf	(btemp+8)^0,w,c
 15642  016D3A  100A               	iorwf	(btemp+9)^0,w,c
 15643  016D3C  100B               	iorwf	(btemp+10)^0,w,c
 15644  016D3E  100C               	iorwf	(btemp+11)^0,w,c
 15645  016D40  A4D8               	btfss	status,2,c
 15646  016D42  D002               	goto	u5300
 15647  016D44  0E01               	movlw	1
 15648  016D46  D001               	goto	u5310
 15649  016D48                     u5300:
 15650  016D48  0E00               	movlw	0
 15651  016D4A                     u5310:
 15652  016D4A  6E01               	movwf	btemp^0,c
 15653  016D4C  6A02               	clrf	(btemp+1)^0,c
 15654  016D4E  D004               	goto	l2914
 15655  016D50                     l7206:
 15656  016D50  0E04               	movlw	4
 15657  016D52                     L14:
 15658  016D52  6E01               	movwf	btemp^0,c
 15659  016D54  0E00               	movlw	0
 15660  016D56  6E02               	movwf	(btemp+1)^0,c
 15661  016D58                     l2914:
 15662                           
 15663                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 15664  016D58  0EF6               	movlw	246
 15665  016D5A  26E1               	addwf	fsr1l,f,c
 15666  016D5C  0EFF               	movlw	255
 15667  016D5E  22E2               	addwfc	fsr1h,f,c
 15668  016D60  0012               	return		;funcret
 15669  016D62                     __end_of___fpclassifyf:
 15670                           	opt callstack 0
 15671                           
 15672 ;; *************** function ___fltol *****************
 15673 ;; Defined at:
 15674 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 15675 ;; Parameters:    Size  Location     Type
 15676 ;;  f1              4  [STACK] int 
 15677 ;; Auto vars:     Size  Location     Type
 15678 ;;  exp1            1  [STACK] unsigned char 
 15679 ;;  sign1           1  [STACK] unsigned char 
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  4  [STACK] long 
 15682 ;; Registers used:
 15683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/1
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15693 ;;Total ram usage:        0 bytes
 15694 ;; Hardware stack levels used:    1
 15695 ;; Hardware stack levels required when called:   15
 15696 ;; This function calls:
 15697 ;;		Nothing
 15698 ;; This function is called by:
 15699 ;;		_calc_bsoc
 15700 ;;		_init_bsoc
 15701 ;;		_efgtoa
 15702 ;; This function uses a reentrant model
 15703 ;;
 15704                           
 15705                           	psect	text56
 15706  016D62                     __ptext56:
 15707                           	opt callstack 0
 15708  016D62                     ___fltol:
 15709                           	opt callstack 0
 15710                           
 15711                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15712  016D62  52E6               	movf	postinc1,f,c
 15713  016D64  52E6               	movf	postinc1,f,c
 15714                           
 15715                           ;stkvar	_f1 @ sp[(-2)+-4]
 15716                           
 15717                           ;incstack = 0
 15718 ;; hardware stack exceeded
 15719  016D66  0EFA               	movlw	-6
 15720  016D68  006F FF8C  F009    	movff	plusw1,btemp+8
 15721  016D6E  0EFB               	movlw	-5
 15722  016D70  006F FF8C  F00A    	movff	plusw1,btemp+9
 15723  016D76  0EFC               	movlw	-4
 15724  016D78  006F FF8C  F00B    	movff	plusw1,btemp+10
 15725  016D7E  0EFD               	movlw	-3
 15726  016D80  006F FF8C  F00C    	movff	plusw1,btemp+11
 15727  016D86  0E18               	movlw	24
 15728  016D88  D005               	goto	u6460
 15729  016D8A                     u6465:
 15730  016D8A  90D8               	bcf	status,0,c
 15731  016D8C  320C               	rrcf	(btemp+11)^0,f,c
 15732  016D8E  320B               	rrcf	(btemp+10)^0,f,c
 15733  016D90  320A               	rrcf	(btemp+9)^0,f,c
 15734  016D92  3209               	rrcf	(btemp+8)^0,f,c
 15735  016D94                     u6460:
 15736  016D94  2EE8               	decfsz	wreg,f,c
 15737  016D96  D7F9               	goto	u6465
 15738                           
 15739                           ;stkvar	_exp1 @ sp[(-2)+0]
 15740  016D98  0EFE               	movlw	-2
 15741  016D9A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15742  016DA0  0EFE               	movlw	-2
 15743  016DA2  50E3               	movf	plusw1,w,c
 15744  016DA4  A4D8               	btfss	status,2,c
 15745  016DA6  D006               	goto	l7826
 15746  016DA8                     u6470:
 15747  016DA8  0E00               	movlw	0
 15748  016DAA  6E01               	movwf	btemp^0,c
 15749  016DAC  6A02               	clrf	(btemp+1)^0,c
 15750  016DAE  6A03               	clrf	(btemp+2)^0,c
 15751  016DB0  6A04               	clrf	(btemp+3)^0,c
 15752  016DB2  D08B               	goto	l2530
 15753  016DB4                     l7826:
 15754                           
 15755                           ;stkvar	_f1 @ sp[(-2)+-4]
 15756  016DB4  0EFA               	movlw	-6
 15757  016DB6  006F FF8C  F009    	movff	plusw1,btemp+8
 15758  016DBC  0EFB               	movlw	-5
 15759  016DBE  006F FF8C  F00A    	movff	plusw1,btemp+9
 15760  016DC4  0EFC               	movlw	-4
 15761  016DC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 15762  016DCC  0EFD               	movlw	-3
 15763  016DCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15764  016DD4  0E20               	movlw	32
 15765  016DD6  D005               	goto	u6480
 15766  016DD8                     u6485:
 15767  016DD8  90D8               	bcf	status,0,c
 15768  016DDA  320C               	rrcf	(btemp+11)^0,f,c
 15769  016DDC  320B               	rrcf	(btemp+10)^0,f,c
 15770  016DDE  320A               	rrcf	(btemp+9)^0,f,c
 15771  016DE0  3209               	rrcf	(btemp+8)^0,f,c
 15772  016DE2                     u6480:
 15773  016DE2  2EE8               	decfsz	wreg,f,c
 15774  016DE4  D7F9               	goto	u6485
 15775                           
 15776                           ;stkvar	_sign1 @ sp[(-2)+1]
 15777  016DE6  0EFF               	movlw	-1
 15778  016DE8  0060  F027  FFE3   	movff	btemp+8,plusw1
 15779                           
 15780                           ;stkvar	_f1 @ sp[(-2)+-4]
 15781  016DEE  0EFC               	movlw	-4
 15782  016DF0  8EE3               	bsf	plusw1,7,c
 15783                           
 15784                           ;stkvar	_f1 @ sp[(-2)+-4]
 15785  016DF2  50E1               	movf	fsr1l,w,c
 15786  016DF4  0FFA               	addlw	-6
 15787  016DF6  6ED9               	movwf	fsr2l,c
 15788  016DF8  50E2               	movf	fsr1h,w,c
 15789  016DFA  6EDA               	movwf	fsr2h,c
 15790  016DFC  0EFF               	movlw	255
 15791  016DFE  22DA               	addwfc	fsr2h,f,c
 15792  016E00  0EFF               	movlw	255
 15793  016E02  16DE               	andwf	postinc2,f,c
 15794  016E04  0EFF               	movlw	255
 15795  016E06  16DE               	andwf	postinc2,f,c
 15796  016E08  0EFF               	movlw	255
 15797  016E0A  16DE               	andwf	postinc2,f,c
 15798  016E0C  0E00               	movlw	0
 15799  016E0E  16DE               	andwf	postinc2,f,c
 15800                           
 15801                           ;stkvar	_exp1 @ sp[(-2)+0]
 15802  016E10  0EFE               	movlw	-2
 15803  016E12  006F FF8C  F001    	movff	plusw1,btemp
 15804  016E18  0E96               	movlw	150
 15805  016E1A  5E01               	subwf	btemp^0,f,c
 15806  016E1C  0EFE               	movlw	-2
 15807  016E1E  0060  F007  FFE3   	movff	btemp,plusw1
 15808                           
 15809                           ;stkvar	_exp1 @ sp[(-2)+0]
 15810  016E24  0EFE               	movlw	-2
 15811  016E26  AEE3               	btfss	plusw1,7,c
 15812  016E28  D014               	goto	l7844
 15813                           
 15814                           ;stkvar	_exp1 @ sp[(-2)+0]
 15815  016E2A  0EFE               	movlw	-2
 15816  016E2C  50E3               	movf	plusw1,w,c
 15817  016E2E  0A80               	xorlw	128
 15818  016E30  0F97               	addlw	151
 15819  016E32  A0D8               	btfss	status,0,c
 15820  016E34  D7B9               	goto	u6470
 15821  016E36                     l7842:
 15822                           
 15823                           ;stkvar	_f1 @ sp[(-2)+-4]
 15824  016E36  90D8               	bcf	status,0,c
 15825  016E38  0EFD               	movlw	-3
 15826  016E3A  32E3               	rrcf	plusw1,f,c
 15827  016E3C  0EFC               	movlw	-4
 15828  016E3E  32E3               	rrcf	plusw1,f,c
 15829  016E40  0EFB               	movlw	-5
 15830  016E42  32E3               	rrcf	plusw1,f,c
 15831  016E44  0EFA               	movlw	-6
 15832  016E46  32E3               	rrcf	plusw1,f,c
 15833                           
 15834                           ;stkvar	_exp1 @ sp[(-2)+0]
 15835  016E48  0EFE               	movlw	-2
 15836  016E4A  2AE3               	incf	plusw1,f,c
 15837  016E4C  B4D8               	btfsc	status,2,c
 15838  016E4E  D018               	goto	u6530
 15839  016E50  D7F2               	goto	l7842
 15840  016E52                     l7844:
 15841                           
 15842                           ;stkvar	_exp1 @ sp[(-2)+0]
 15843  016E52  0EFE               	movlw	-2
 15844  016E54  006F FF8C  F001    	movff	plusw1,btemp
 15845  016E5A  0E1F               	movlw	31
 15846  016E5C  6401               	cpfsgt	btemp^0,c
 15847  016E5E  D00C               	goto	l7852
 15848  016E60  D7A3               	goto	u6470
 15849  016E62                     l7850:
 15850                           
 15851                           ;stkvar	_f1 @ sp[(-2)+-4]
 15852  016E62  90D8               	bcf	status,0,c
 15853  016E64  0EFA               	movlw	-6
 15854  016E66  36E3               	rlcf	plusw1,f,c
 15855  016E68  0EFB               	movlw	-5
 15856  016E6A  36E3               	rlcf	plusw1,f,c
 15857  016E6C  0EFC               	movlw	-4
 15858  016E6E  36E3               	rlcf	plusw1,f,c
 15859  016E70  0EFD               	movlw	-3
 15860  016E72  36E3               	rlcf	plusw1,f,c
 15861                           
 15862                           ;stkvar	_exp1 @ sp[(-2)+0]
 15863  016E74  0EFE               	movlw	-2
 15864  016E76  06E3               	decf	plusw1,f,c
 15865  016E78                     l7852:
 15866                           
 15867                           ;stkvar	_exp1 @ sp[(-2)+0]
 15868  016E78  0EFE               	movlw	-2
 15869  016E7A  50E3               	movf	plusw1,w,c
 15870  016E7C  A4D8               	btfss	status,2,c
 15871  016E7E  D7F1               	goto	l7850
 15872  016E80                     u6530:
 15873                           
 15874                           ;stkvar	_sign1 @ sp[(-2)+1]
 15875  016E80  0EFF               	movlw	-1
 15876  016E82  50E3               	movf	plusw1,w,c
 15877  016E84  B4D8               	btfsc	status,2,c
 15878  016E86  D011               	goto	u6550
 15879                           
 15880                           ;stkvar	_f1 @ sp[(-2)+-4]
 15881                           ;stkvar	_f1 @ sp[(-2)+-4]
 15882  016E88  0EFA               	movlw	-6
 15883  016E8A  6CE3               	negf	plusw1,c
 15884  016E8C  0EFB               	movlw	-5
 15885  016E8E  1EE3               	comf	plusw1,f,c
 15886  016E90  0EFC               	movlw	-4
 15887  016E92  1EE3               	comf	plusw1,f,c
 15888  016E94  0EFD               	movlw	-3
 15889  016E96  1EE3               	comf	plusw1,f,c
 15890  016E98  E308               	bnc	u6550
 15891  016E9A  0EFB               	movlw	-5
 15892  016E9C  2AE3               	incf	plusw1,f,c
 15893  016E9E  E305               	bnc	u6550
 15894  016EA0  0EFC               	movlw	-4
 15895  016EA2  2AE3               	incf	plusw1,f,c
 15896  016EA4  E302               	bnc	u6550
 15897  016EA6  0EFD               	movlw	-3
 15898  016EA8  2AE3               	incf	plusw1,f,c
 15899  016EAA                     u6550:
 15900                           
 15901                           ;stkvar	_f1 @ sp[(-2)+-4]
 15902  016EAA  0EFA               	movlw	-6
 15903  016EAC  006F FF8C  F001    	movff	plusw1,btemp
 15904  016EB2  0EFB               	movlw	-5
 15905  016EB4  006F FF8C  F002    	movff	plusw1,btemp+1
 15906  016EBA  0EFC               	movlw	-4
 15907  016EBC  006F FF8C  F003    	movff	plusw1,btemp+2
 15908  016EC2  0EFD               	movlw	-3
 15909  016EC4  006F FF8C  F004    	movff	plusw1,btemp+3
 15910  016ECA                     l2530:
 15911                           
 15912                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15913  016ECA  0EFA               	movlw	250
 15914  016ECC  26E1               	addwf	fsr1l,f,c
 15915  016ECE  0EFF               	movlw	255
 15916  016ED0  22E2               	addwfc	fsr1h,f,c
 15917  016ED2  0012               	return		;funcret
 15918  016ED4                     __end_of___fltol:
 15919                           	opt callstack 0
 15920                           
 15921 ;; *************** function ___flneg *****************
 15922 ;; Defined at:
 15923 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15924 ;; Parameters:    Size  Location     Type
 15925 ;;  f1              4  [STACK] long 
 15926 ;; Auto vars:     Size  Location     Type
 15927 ;;		None
 15928 ;; Return value:  Size  Location     Type
 15929 ;;                  4  [STACK] long 
 15930 ;; Registers used:
 15931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15932 ;; Tracked objects:
 15933 ;;		On entry : 0/0
 15934 ;;		On exit  : 0/0
 15935 ;;		Unchanged: 0/0
 15936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15941 ;;Total ram usage:        0 bytes
 15942 ;; Hardware stack levels used:    1
 15943 ;; Hardware stack levels required when called:   15
 15944 ;; This function calls:
 15945 ;;		Nothing
 15946 ;; This function is called by:
 15947 ;;		_calc_bsoc
 15948 ;;		_efgtoa
 15949 ;; This function uses a reentrant model
 15950 ;;
 15951                           
 15952                           	psect	text57
 15953  019050                     __ptext57:
 15954                           	opt callstack 0
 15955  019050                     ___flneg:
 15956                           	opt callstack 0
 15957                           
 15958                           ;stkvar	_f1 @ sp[(0)+-4]
 15959                           
 15960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15961                           ;incstack = 0
 15962 ;; hardware stack exceeded
 15963  019050  0EFC               	movlw	-4
 15964  019052  50E3               	movf	plusw1,w,c
 15965  019054  E10A               	bnz	u6450
 15966  019056  0EFD               	movlw	-3
 15967  019058  50E3               	movf	plusw1,w,c
 15968  01905A  E107               	bnz	u6450
 15969  01905C  0EFE               	movlw	-2
 15970  01905E  50E3               	movf	plusw1,w,c
 15971  019060  E104               	bnz	u6450
 15972  019062  0EFF               	movlw	-1
 15973  019064  50E3               	movf	plusw1,w,c
 15974  019066  B4D8               	btfsc	status,2,c
 15975  019068  D002               	goto	l7816
 15976  01906A                     u6450:
 15977                           
 15978                           ;stkvar	_f1 @ sp[(0)+-4]
 15979  01906A  0EFF               	movlw	-1
 15980  01906C  7EE3               	btg	plusw1,7,c
 15981  01906E                     l7816:
 15982                           
 15983                           ;stkvar	_f1 @ sp[(0)+-4]
 15984  01906E  0EFC               	movlw	-4
 15985  019070  006F FF8C  F001    	movff	plusw1,btemp
 15986  019076  0EFD               	movlw	-3
 15987  019078  006F FF8C  F002    	movff	plusw1,btemp+1
 15988  01907E  0EFE               	movlw	-2
 15989  019080  006F FF8C  F003    	movff	plusw1,btemp+2
 15990  019086  0EFF               	movlw	-1
 15991  019088  006F FF8C  F004    	movff	plusw1,btemp+3
 15992                           
 15993                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15994  01908E  52E5               	movf	postdec1,f,c
 15995  019090  52E5               	movf	postdec1,f,c
 15996  019092  52E5               	movf	postdec1,f,c
 15997  019094  52E5               	movf	postdec1,f,c
 15998  019096  0012               	return		;funcret
 15999  019098                     __end_of___flneg:
 16000                           	opt callstack 0
 16001                           
 16002 ;; *************** function ___flge *****************
 16003 ;; Defined at:
 16004 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;  ff1             4  [STACK] long 
 16007 ;;  ff2             4  [STACK] long 
 16008 ;; Auto vars:     Size  Location     Type
 16009 ;;		None
 16010 ;; Return value:  Size  Location     Type
 16011 ;;		None               void
 16012 ;; Registers used:
 16013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16014 ;; Tracked objects:
 16015 ;;		On entry : 0/0
 16016 ;;		On exit  : 0/0
 16017 ;;		Unchanged: 0/0
 16018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16023 ;;Total ram usage:        0 bytes
 16024 ;; Hardware stack levels used:    1
 16025 ;; Hardware stack levels required when called:   15
 16026 ;; This function calls:
 16027 ;;		Nothing
 16028 ;; This function is called by:
 16029 ;;		_calc_bsoc
 16030 ;;		_efgtoa
 16031 ;; This function uses a reentrant model
 16032 ;;
 16033                           
 16034                           	psect	text58
 16035  017044                     __ptext58:
 16036                           	opt callstack 0
 16037  017044                     ___flge:
 16038                           	opt callstack 0
 16039                           
 16040                           ;stkvar	_ff1 @ sp[(0)+-4]
 16041                           
 16042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16043                           ;incstack = 0
 16044 ;; hardware stack exceeded
 16045  017044  50E1               	movf	fsr1l,w,c
 16046  017046  0FFC               	addlw	-4
 16047  017048  6ED9               	movwf	fsr2l,c
 16048  01704A  50E2               	movf	fsr1h,w,c
 16049  01704C  6EDA               	movwf	fsr2h,c
 16050  01704E  0EFF               	movlw	255
 16051  017050  22DA               	addwfc	fsr2h,f,c
 16052  017052  0E00               	movlw	0
 16053  017054  14DE               	andwf	postinc2,w,c
 16054  017056  6E09               	movwf	(btemp+8)^0,c
 16055  017058  0E00               	movlw	0
 16056  01705A  14DE               	andwf	postinc2,w,c
 16057  01705C  6E0A               	movwf	(btemp+9)^0,c
 16058  01705E  0E80               	movlw	128
 16059  017060  14DE               	andwf	postinc2,w,c
 16060  017062  6E0B               	movwf	(btemp+10)^0,c
 16061  017064  0E7F               	movlw	127
 16062  017066  14DE               	andwf	postinc2,w,c
 16063  017068  6E0C               	movwf	(btemp+11)^0,c
 16064  01706A  5009               	movf	(btemp+8)^0,w,c
 16065  01706C  100A               	iorwf	(btemp+9)^0,w,c
 16066  01706E  100B               	iorwf	(btemp+10)^0,w,c
 16067  017070  100C               	iorwf	(btemp+11)^0,w,c
 16068  017072  A4D8               	btfss	status,2,c
 16069  017074  D008               	goto	l7790
 16070                           
 16071                           ;stkvar	_ff1 @ sp[(0)+-4]
 16072  017076  0EFC               	movlw	-4
 16073  017078  6AE3               	clrf	plusw1,c
 16074  01707A  0EFD               	movlw	-3
 16075  01707C  6AE3               	clrf	plusw1,c
 16076  01707E  0EFE               	movlw	-2
 16077  017080  6AE3               	clrf	plusw1,c
 16078  017082  0EFF               	movlw	-1
 16079  017084  6AE3               	clrf	plusw1,c
 16080  017086                     l7790:
 16081                           
 16082                           ;stkvar	_ff2 @ sp[(0)+-8]
 16083  017086  50E1               	movf	fsr1l,w,c
 16084  017088  0FF8               	addlw	-8
 16085  01708A  6ED9               	movwf	fsr2l,c
 16086  01708C  50E2               	movf	fsr1h,w,c
 16087  01708E  6EDA               	movwf	fsr2h,c
 16088  017090  0EFF               	movlw	255
 16089  017092  22DA               	addwfc	fsr2h,f,c
 16090  017094  0E00               	movlw	0
 16091  017096  14DE               	andwf	postinc2,w,c
 16092  017098  6E09               	movwf	(btemp+8)^0,c
 16093  01709A  0E00               	movlw	0
 16094  01709C  14DE               	andwf	postinc2,w,c
 16095  01709E  6E0A               	movwf	(btemp+9)^0,c
 16096  0170A0  0E80               	movlw	128
 16097  0170A2  14DE               	andwf	postinc2,w,c
 16098  0170A4  6E0B               	movwf	(btemp+10)^0,c
 16099  0170A6  0E7F               	movlw	127
 16100  0170A8  14DE               	andwf	postinc2,w,c
 16101  0170AA  6E0C               	movwf	(btemp+11)^0,c
 16102  0170AC  5009               	movf	(btemp+8)^0,w,c
 16103  0170AE  100A               	iorwf	(btemp+9)^0,w,c
 16104  0170B0  100B               	iorwf	(btemp+10)^0,w,c
 16105  0170B2  100C               	iorwf	(btemp+11)^0,w,c
 16106  0170B4  A4D8               	btfss	status,2,c
 16107  0170B6  D008               	goto	l2496
 16108                           
 16109                           ;stkvar	_ff2 @ sp[(0)+-8]
 16110  0170B8  0EF8               	movlw	-8
 16111  0170BA  6AE3               	clrf	plusw1,c
 16112  0170BC  0EF9               	movlw	-7
 16113  0170BE  6AE3               	clrf	plusw1,c
 16114  0170C0  0EFA               	movlw	-6
 16115  0170C2  6AE3               	clrf	plusw1,c
 16116  0170C4  0EFB               	movlw	-5
 16117  0170C6  6AE3               	clrf	plusw1,c
 16118  0170C8                     l2496:
 16119                           
 16120                           ;stkvar	_ff1 @ sp[(0)+-4]
 16121  0170C8  0EFF               	movlw	-1
 16122  0170CA  AEE3               	btfss	plusw1,7,c
 16123  0170CC  D024               	goto	l7796
 16124                           
 16125                           ;stkvar	_ff1 @ sp[(0)+-4]
 16126  0170CE  0E00               	movlw	0
 16127  0170D0  6E09               	movwf	(btemp+8)^0,c
 16128  0170D2  0E00               	movlw	0
 16129  0170D4  6E0A               	movwf	(btemp+9)^0,c
 16130  0170D6  0E00               	movlw	0
 16131  0170D8  6E0B               	movwf	(btemp+10)^0,c
 16132  0170DA  0E80               	movlw	128
 16133  0170DC  6E0C               	movwf	(btemp+11)^0,c
 16134  0170DE  0EFC               	movlw	-4
 16135  0170E0  50E3               	movf	plusw1,w,c
 16136  0170E2  5E09               	subwf	(btemp+8)^0,f,c
 16137  0170E4  0EFD               	movlw	-3
 16138  0170E6  50E3               	movf	plusw1,w,c
 16139  0170E8  5A0A               	subwfb	(btemp+9)^0,f,c
 16140  0170EA  0EFE               	movlw	-2
 16141  0170EC  50E3               	movf	plusw1,w,c
 16142  0170EE  5A0B               	subwfb	(btemp+10)^0,f,c
 16143  0170F0  0EFF               	movlw	-1
 16144  0170F2  50E3               	movf	plusw1,w,c
 16145  0170F4  5A0C               	subwfb	(btemp+11)^0,f,c
 16146                           
 16147                           ;stkvar	_ff1 @ sp[(0)+-4]
 16148  0170F6  0EFC               	movlw	-4
 16149  0170F8  0060  F027  FFE3   	movff	btemp+8,plusw1
 16150  0170FE  0EFD               	movlw	-3
 16151  017100  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16152  017106  0EFE               	movlw	-2
 16153  017108  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16154  01710E  0EFF               	movlw	-1
 16155  017110  0060  F033  FFE3   	movff	btemp+11,plusw1
 16156  017116                     l7796:
 16157                           
 16158                           ;stkvar	_ff2 @ sp[(0)+-8]
 16159  017116  0EFB               	movlw	-5
 16160  017118  AEE3               	btfss	plusw1,7,c
 16161  01711A  D024               	goto	l7800
 16162                           
 16163                           ;stkvar	_ff2 @ sp[(0)+-8]
 16164  01711C  0E00               	movlw	0
 16165  01711E  6E09               	movwf	(btemp+8)^0,c
 16166  017120  0E00               	movlw	0
 16167  017122  6E0A               	movwf	(btemp+9)^0,c
 16168  017124  0E00               	movlw	0
 16169  017126  6E0B               	movwf	(btemp+10)^0,c
 16170  017128  0E80               	movlw	128
 16171  01712A  6E0C               	movwf	(btemp+11)^0,c
 16172  01712C  0EF8               	movlw	-8
 16173  01712E  50E3               	movf	plusw1,w,c
 16174  017130  5E09               	subwf	(btemp+8)^0,f,c
 16175  017132  0EF9               	movlw	-7
 16176  017134  50E3               	movf	plusw1,w,c
 16177  017136  5A0A               	subwfb	(btemp+9)^0,f,c
 16178  017138  0EFA               	movlw	-6
 16179  01713A  50E3               	movf	plusw1,w,c
 16180  01713C  5A0B               	subwfb	(btemp+10)^0,f,c
 16181  01713E  0EFB               	movlw	-5
 16182  017140  50E3               	movf	plusw1,w,c
 16183  017142  5A0C               	subwfb	(btemp+11)^0,f,c
 16184                           
 16185                           ;stkvar	_ff2 @ sp[(0)+-8]
 16186  017144  0EF8               	movlw	-8
 16187  017146  0060  F027  FFE3   	movff	btemp+8,plusw1
 16188  01714C  0EF9               	movlw	-7
 16189  01714E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16190  017154  0EFA               	movlw	-6
 16191  017156  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16192  01715C  0EFB               	movlw	-5
 16193  01715E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16194  017164                     l7800:
 16195                           
 16196                           ;stkvar	_ff1 @ sp[(0)+-4]
 16197  017164  0EFF               	movlw	-1
 16198  017166  7EE3               	btg	plusw1,7,c
 16199                           
 16200                           ;stkvar	_ff2 @ sp[(0)+-8]
 16201  017168  0EFB               	movlw	-5
 16202  01716A  7EE3               	btg	plusw1,7,c
 16203                           
 16204                           ;stkvar	_ff2 @ sp[(0)+-8]
 16205                           ;stkvar	_ff1 @ sp[(0)+-4]
 16206  01716C  50E1               	movf	fsr1l,w,c
 16207  01716E  0FFC               	addlw	-4
 16208  017170  6ED9               	movwf	fsr2l,c
 16209  017172  50E2               	movf	fsr1h,w,c
 16210  017174  6EDA               	movwf	fsr2h,c
 16211  017176  0EFF               	movlw	255
 16212  017178  22DA               	addwfc	fsr2h,f,c
 16213  01717A  0EF8               	movlw	-8
 16214  01717C  50E3               	movf	plusw1,w,c
 16215  01717E  5CDE               	subwf	postinc2,w,c
 16216  017180  0EF9               	movlw	-7
 16217  017182  50E3               	movf	plusw1,w,c
 16218  017184  58DE               	subwfb	postinc2,w,c
 16219  017186  0EFA               	movlw	-6
 16220  017188  50E3               	movf	plusw1,w,c
 16221  01718A  58DE               	subwfb	postinc2,w,c
 16222  01718C  0EFB               	movlw	-5
 16223  01718E  50E3               	movf	plusw1,w,c
 16224  017190  58DE               	subwfb	postinc2,w,c
 16225  017192  B0D8               	btfsc	status,0,c
 16226  017194  D002               	goto	l7808
 16227  017196  9001               	bcf	btemp& (0+255),0,c
 16228  017198  D001               	goto	l2503
 16229  01719A                     l7808:
 16230  01719A  8001               	bsf	btemp& (0+255),0,c
 16231  01719C                     l2503:
 16232                           
 16233                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16234  01719C  0EF8               	movlw	248
 16235  01719E  26E1               	addwf	fsr1l,f,c
 16236  0171A0  0EFF               	movlw	255
 16237  0171A2  22E2               	addwfc	fsr1h,f,c
 16238  0171A4  0012               	return		;funcret
 16239  0171A6                     __end_of___flge:
 16240                           	opt callstack 0
 16241                           
 16242 ;; *************** function ___fleq *****************
 16243 ;; Defined at:
 16244 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16245 ;; Parameters:    Size  Location     Type
 16246 ;;  ff1             4  [STACK] long 
 16247 ;;  ff2             4  [STACK] long 
 16248 ;; Auto vars:     Size  Location     Type
 16249 ;;		None
 16250 ;; Return value:  Size  Location     Type
 16251 ;;		None               void
 16252 ;; Registers used:
 16253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16254 ;; Tracked objects:
 16255 ;;		On entry : 0/0
 16256 ;;		On exit  : 0/0
 16257 ;;		Unchanged: 0/0
 16258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16263 ;;Total ram usage:        0 bytes
 16264 ;; Hardware stack levels used:    1
 16265 ;; Hardware stack levels required when called:   15
 16266 ;; This function calls:
 16267 ;;		Nothing
 16268 ;; This function is called by:
 16269 ;;		_efgtoa
 16270 ;; This function uses a reentrant model
 16271 ;;
 16272                           
 16273                           	psect	text59
 16274  0180C0                     __ptext59:
 16275                           	opt callstack 0
 16276  0180C0                     ___fleq:
 16277                           	opt callstack 0
 16278                           
 16279                           ;stkvar	_ff1 @ sp[(0)+-4]
 16280                           
 16281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16282                           ;incstack = 0
 16283 ;; hardware stack exceeded
 16284  0180C0  50E1               	movf	fsr1l,w,c
 16285  0180C2  0FFC               	addlw	-4
 16286  0180C4  6ED9               	movwf	fsr2l,c
 16287  0180C6  50E2               	movf	fsr1h,w,c
 16288  0180C8  6EDA               	movwf	fsr2h,c
 16289  0180CA  0EFF               	movlw	255
 16290  0180CC  22DA               	addwfc	fsr2h,f,c
 16291  0180CE  0E00               	movlw	0
 16292  0180D0  14DE               	andwf	postinc2,w,c
 16293  0180D2  6E09               	movwf	(btemp+8)^0,c
 16294  0180D4  0E00               	movlw	0
 16295  0180D6  14DE               	andwf	postinc2,w,c
 16296  0180D8  6E0A               	movwf	(btemp+9)^0,c
 16297  0180DA  0E80               	movlw	128
 16298  0180DC  14DE               	andwf	postinc2,w,c
 16299  0180DE  6E0B               	movwf	(btemp+10)^0,c
 16300  0180E0  0E7F               	movlw	127
 16301  0180E2  14DE               	andwf	postinc2,w,c
 16302  0180E4  6E0C               	movwf	(btemp+11)^0,c
 16303  0180E6  5009               	movf	(btemp+8)^0,w,c
 16304  0180E8  100A               	iorwf	(btemp+9)^0,w,c
 16305  0180EA  100B               	iorwf	(btemp+10)^0,w,c
 16306  0180EC  100C               	iorwf	(btemp+11)^0,w,c
 16307  0180EE  A4D8               	btfss	status,2,c
 16308  0180F0  D008               	goto	l7774
 16309                           
 16310                           ;stkvar	_ff1 @ sp[(0)+-4]
 16311  0180F2  0EFC               	movlw	-4
 16312  0180F4  6AE3               	clrf	plusw1,c
 16313  0180F6  0EFD               	movlw	-3
 16314  0180F8  6AE3               	clrf	plusw1,c
 16315  0180FA  0EFE               	movlw	-2
 16316  0180FC  6AE3               	clrf	plusw1,c
 16317  0180FE  0EFF               	movlw	-1
 16318  018100  6AE3               	clrf	plusw1,c
 16319  018102                     l7774:
 16320                           
 16321                           ;stkvar	_ff2 @ sp[(0)+-8]
 16322  018102  50E1               	movf	fsr1l,w,c
 16323  018104  0FF8               	addlw	-8
 16324  018106  6ED9               	movwf	fsr2l,c
 16325  018108  50E2               	movf	fsr1h,w,c
 16326  01810A  6EDA               	movwf	fsr2h,c
 16327  01810C  0EFF               	movlw	255
 16328  01810E  22DA               	addwfc	fsr2h,f,c
 16329  018110  0E00               	movlw	0
 16330  018112  14DE               	andwf	postinc2,w,c
 16331  018114  6E09               	movwf	(btemp+8)^0,c
 16332  018116  0E00               	movlw	0
 16333  018118  14DE               	andwf	postinc2,w,c
 16334  01811A  6E0A               	movwf	(btemp+9)^0,c
 16335  01811C  0E80               	movlw	128
 16336  01811E  14DE               	andwf	postinc2,w,c
 16337  018120  6E0B               	movwf	(btemp+10)^0,c
 16338  018122  0E7F               	movlw	127
 16339  018124  14DE               	andwf	postinc2,w,c
 16340  018126  6E0C               	movwf	(btemp+11)^0,c
 16341  018128  5009               	movf	(btemp+8)^0,w,c
 16342  01812A  100A               	iorwf	(btemp+9)^0,w,c
 16343  01812C  100B               	iorwf	(btemp+10)^0,w,c
 16344  01812E  100C               	iorwf	(btemp+11)^0,w,c
 16345  018130  A4D8               	btfss	status,2,c
 16346  018132  D008               	goto	l7778
 16347                           
 16348                           ;stkvar	_ff2 @ sp[(0)+-8]
 16349  018134  0EF8               	movlw	-8
 16350  018136  6AE3               	clrf	plusw1,c
 16351  018138  0EF9               	movlw	-7
 16352  01813A  6AE3               	clrf	plusw1,c
 16353  01813C  0EFA               	movlw	-6
 16354  01813E  6AE3               	clrf	plusw1,c
 16355  018140  0EFB               	movlw	-5
 16356  018142  6AE3               	clrf	plusw1,c
 16357  018144                     l7778:
 16358                           
 16359                           ;stkvar	_ff2 @ sp[(0)+-8]
 16360                           ;stkvar	_ff1 @ sp[(0)+-4]
 16361  018144  50E1               	movf	fsr1l,w,c
 16362  018146  0FFC               	addlw	-4
 16363  018148  6ED9               	movwf	fsr2l,c
 16364  01814A  50E2               	movf	fsr1h,w,c
 16365  01814C  6EDA               	movwf	fsr2h,c
 16366  01814E  0EFF               	movlw	255
 16367  018150  22DA               	addwfc	fsr2h,f,c
 16368  018152  0EF8               	movlw	-8
 16369  018154  50E3               	movf	plusw1,w,c
 16370  018156  18DE               	xorwf	postinc2,w,c
 16371  018158  E10D               	bnz	u6390
 16372  01815A  0EF9               	movlw	-7
 16373  01815C  50E3               	movf	plusw1,w,c
 16374  01815E  18DE               	xorwf	postinc2,w,c
 16375  018160  E109               	bnz	u6390
 16376  018162  0EFA               	movlw	-6
 16377  018164  50E3               	movf	plusw1,w,c
 16378  018166  18DE               	xorwf	postinc2,w,c
 16379  018168  E105               	bnz	u6390
 16380  01816A  0EFB               	movlw	-5
 16381  01816C  50E3               	movf	plusw1,w,c
 16382  01816E  18DE               	xorwf	postinc2,w,c
 16383  018170  B4D8               	btfsc	status,2,c
 16384  018172  D002               	goto	l7782
 16385  018174                     u6390:
 16386  018174  9001               	bcf	btemp& (0+255),0,c
 16387  018176  D001               	goto	l2492
 16388  018178                     l7782:
 16389  018178  8001               	bsf	btemp& (0+255),0,c
 16390  01817A                     l2492:
 16391                           
 16392                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16393  01817A  0EF8               	movlw	248
 16394  01817C  26E1               	addwf	fsr1l,f,c
 16395  01817E  0EFF               	movlw	255
 16396  018180  22E2               	addwfc	fsr1h,f,c
 16397  018182  0012               	return		;funcret
 16398  018184                     __end_of___fleq:
 16399                           	opt callstack 0
 16400                           
 16401 ;; *************** function ___fldiv *****************
 16402 ;; Defined at:
 16403 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16404 ;; Parameters:    Size  Location     Type
 16405 ;;  b               4  [STACK] long 
 16406 ;;  a               4  [STACK] long 
 16407 ;; Auto vars:     Size  Location     Type
 16408 ;;  grs             4  [STACK] unsigned long 
 16409 ;;  rem             4  [STACK] unsigned long 
 16410 ;;  new_exp         2  [STACK] short 
 16411 ;;  aexp            1  [STACK] unsigned char 
 16412 ;;  bexp            1  [STACK] unsigned char 
 16413 ;;  sign            1  [STACK] unsigned char 
 16414 ;; Return value:  Size  Location     Type
 16415 ;;                  4  [STACK] unsigned char 
 16416 ;; Registers used:
 16417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/1
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16427 ;;Total ram usage:        0 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:   15
 16430 ;; This function calls:
 16431 ;;		Nothing
 16432 ;; This function is called by:
 16433 ;;		_conv_raw_result
 16434 ;;		_calc_bsoc
 16435 ;;		_init_bsoc
 16436 ;;		_efgtoa
 16437 ;; This function uses a reentrant model
 16438 ;;
 16439                           
 16440                           	psect	text60
 16441  013CAA                     __ptext60:
 16442                           	opt callstack 0
 16443  013CAA                     ___fldiv:
 16444                           	opt callstack 0
 16445                           
 16446                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16447  013CAA  0E0D               	movlw	13
 16448  013CAC  26E1               	addwf	fsr1l,f,c
 16449  013CAE  0E00               	movlw	0
 16450  013CB0  22E2               	addwfc	fsr1h,f,c
 16451                           
 16452                           ;stkvar	_b @ sp[(-13)+-4]
 16453                           
 16454                           ;incstack = 0
 16455 ;; hardware stack exceeded
 16456  013CB2  0EF2               	movlw	242
 16457  013CB4  24E1               	addwf	fsr1l,w,c
 16458  013CB6  6ED9               	movwf	fsr2l,c
 16459  013CB8  0EFF               	movlw	255
 16460  013CBA  20E2               	addwfc	fsr1h,w,c
 16461  013CBC  6EDA               	movwf	fsr2h,c
 16462  013CBE  50DF               	movf	indf2,w,c
 16463  013CC0  6E0C               	movwf	(btemp+11)^0,c
 16464  013CC2  0E80               	movlw	128
 16465  013CC4  160C               	andwf	(btemp+11)^0,f,c
 16466                           
 16467                           ;stkvar	_sign @ sp[(-13)+12]
 16468  013CC6  0EFF               	movlw	-1
 16469  013CC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16470                           
 16471                           ;stkvar	_b @ sp[(-13)+-4]
 16472  013CCE  0EF2               	movlw	242
 16473  013CD0  24E1               	addwf	fsr1l,w,c
 16474  013CD2  6ED9               	movwf	fsr2l,c
 16475  013CD4  0EFF               	movlw	255
 16476  013CD6  20E2               	addwfc	fsr1h,w,c
 16477  013CD8  6EDA               	movwf	fsr2h,c
 16478  013CDA  50DF               	movf	indf2,w,c
 16479  013CDC  6E0C               	movwf	(btemp+11)^0,c
 16480  013CDE  90D8               	bcf	status,0,c
 16481  013CE0  340C               	rlcf	(btemp+11)^0,w,c
 16482  013CE2  6E0B               	movwf	(btemp+10)^0,c
 16483                           
 16484                           ;stkvar	_bexp @ sp[(-13)+11]
 16485  013CE4  0EFE               	movlw	-2
 16486  013CE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16487                           
 16488                           ;stkvar	_b @ sp[(-13)+-4]
 16489  013CEC  0EF1               	movlw	241
 16490  013CEE  24E1               	addwf	fsr1l,w,c
 16491  013CF0  6ED9               	movwf	fsr2l,c
 16492  013CF2  0EFF               	movlw	255
 16493  013CF4  20E2               	addwfc	fsr1h,w,c
 16494  013CF6  6EDA               	movwf	fsr2h,c
 16495  013CF8  AEDF               	btfss	indf2,7,c
 16496  013CFA  D002               	goto	l7376
 16497                           
 16498                           ;stkvar	_bexp @ sp[(-13)+11]
 16499  013CFC  0EFE               	movlw	-2
 16500  013CFE  80E3               	bsf	plusw1,0,c
 16501  013D00                     l7376:
 16502                           
 16503                           ;stkvar	_bexp @ sp[(-13)+11]
 16504  013D00  0EFE               	movlw	-2
 16505  013D02  50E3               	movf	plusw1,w,c
 16506  013D04  B4D8               	btfsc	status,2,c
 16507  013D06  D027               	goto	l7386
 16508                           
 16509                           ;stkvar	_bexp @ sp[(-13)+11]
 16510  013D08  0EFE               	movlw	-2
 16511  013D0A  28E3               	incf	plusw1,w,c
 16512  013D0C  A4D8               	btfss	status,2,c
 16513  013D0E  D018               	goto	l7382
 16514  013D10  0E00               	movlw	0
 16515  013D12  6E09               	movwf	(btemp+8)^0,c
 16516  013D14  0E00               	movlw	0
 16517  013D16  6E0A               	movwf	(btemp+9)^0,c
 16518  013D18  0E00               	movlw	0
 16519  013D1A  6E0B               	movwf	(btemp+10)^0,c
 16520  013D1C  0E00               	movlw	0
 16521  013D1E  6E0C               	movwf	(btemp+11)^0,c
 16522                           
 16523                           ;stkvar	_b @ sp[(-13)+-4]
 16524  013D20  0EEF               	movlw	-17
 16525  013D22  0060  F027  FFE3   	movff	btemp+8,plusw1
 16526  013D28  0EF0               	movlw	-16
 16527  013D2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16528  013D30  0EF1               	movlw	-15
 16529  013D32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16530  013D38  0EF2               	movlw	-14
 16531  013D3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16532  013D40                     l7382:
 16533                           
 16534                           ;stkvar	_b @ sp[(-13)+-4]
 16535  013D40  0EF1               	movlw	-15
 16536  013D42  8EE3               	bsf	plusw1,7,c
 16537                           
 16538                           ;stkvar	_b @ sp[(-13)+-4]
 16539  013D44  0EF2               	movlw	242
 16540  013D46  24E1               	addwf	fsr1l,w,c
 16541  013D48  6ED9               	movwf	fsr2l,c
 16542  013D4A  0EFF               	movlw	255
 16543  013D4C  20E2               	addwfc	fsr1h,w,c
 16544  013D4E  6EDA               	movwf	fsr2h,c
 16545  013D50  0E00               	movlw	0
 16546  013D52  6EDF               	movwf	indf2,c
 16547  013D54  D018               	goto	l7388
 16548  013D56                     l7386:
 16549  013D56  0E00               	movlw	0
 16550  013D58  6E09               	movwf	(btemp+8)^0,c
 16551  013D5A  0E00               	movlw	0
 16552  013D5C  6E0A               	movwf	(btemp+9)^0,c
 16553  013D5E  0E00               	movlw	0
 16554  013D60  6E0B               	movwf	(btemp+10)^0,c
 16555  013D62  0E00               	movlw	0
 16556  013D64  6E0C               	movwf	(btemp+11)^0,c
 16557                           
 16558                           ;stkvar	_b @ sp[(-13)+-4]
 16559  013D66  0EEF               	movlw	-17
 16560  013D68  0060  F027  FFE3   	movff	btemp+8,plusw1
 16561  013D6E  0EF0               	movlw	-16
 16562  013D70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16563  013D76  0EF1               	movlw	-15
 16564  013D78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16565  013D7E  0EF2               	movlw	-14
 16566  013D80  0060  F033  FFE3   	movff	btemp+11,plusw1
 16567  013D86                     l7388:
 16568                           
 16569                           ;stkvar	_a @ sp[(-13)+-8]
 16570  013D86  0EEE               	movlw	238
 16571  013D88  24E1               	addwf	fsr1l,w,c
 16572  013D8A  6ED9               	movwf	fsr2l,c
 16573  013D8C  0EFF               	movlw	255
 16574  013D8E  20E2               	addwfc	fsr1h,w,c
 16575  013D90  6EDA               	movwf	fsr2h,c
 16576  013D92  50DF               	movf	indf2,w,c
 16577  013D94  6E0C               	movwf	(btemp+11)^0,c
 16578  013D96  0E80               	movlw	128
 16579  013D98  160C               	andwf	(btemp+11)^0,f,c
 16580                           
 16581                           ;stkvar	_sign @ sp[(-13)+12]
 16582  013D9A  50E1               	movf	fsr1l,w,c
 16583  013D9C  0FFF               	addlw	-1
 16584  013D9E  6ED9               	movwf	fsr2l,c
 16585  013DA0  50E2               	movf	fsr1h,w,c
 16586  013DA2  6EDA               	movwf	fsr2h,c
 16587  013DA4  0EFF               	movlw	255
 16588  013DA6  22DA               	addwfc	fsr2h,f,c
 16589  013DA8  500C               	movf	(btemp+11)^0,w,c
 16590  013DAA  1ADF               	xorwf	indf2,f,c
 16591                           
 16592                           ;stkvar	_a @ sp[(-13)+-8]
 16593  013DAC  0EEE               	movlw	238
 16594  013DAE  24E1               	addwf	fsr1l,w,c
 16595  013DB0  6ED9               	movwf	fsr2l,c
 16596  013DB2  0EFF               	movlw	255
 16597  013DB4  20E2               	addwfc	fsr1h,w,c
 16598  013DB6  6EDA               	movwf	fsr2h,c
 16599  013DB8  50DF               	movf	indf2,w,c
 16600  013DBA  6E0C               	movwf	(btemp+11)^0,c
 16601  013DBC  90D8               	bcf	status,0,c
 16602  013DBE  340C               	rlcf	(btemp+11)^0,w,c
 16603  013DC0  6E0B               	movwf	(btemp+10)^0,c
 16604                           
 16605                           ;stkvar	_aexp @ sp[(-13)+10]
 16606  013DC2  0EFD               	movlw	-3
 16607  013DC4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16608                           
 16609                           ;stkvar	_a @ sp[(-13)+-8]
 16610  013DCA  0EED               	movlw	237
 16611  013DCC  24E1               	addwf	fsr1l,w,c
 16612  013DCE  6ED9               	movwf	fsr2l,c
 16613  013DD0  0EFF               	movlw	255
 16614  013DD2  20E2               	addwfc	fsr1h,w,c
 16615  013DD4  6EDA               	movwf	fsr2h,c
 16616  013DD6  AEDF               	btfss	indf2,7,c
 16617  013DD8  D002               	goto	l7396
 16618                           
 16619                           ;stkvar	_aexp @ sp[(-13)+10]
 16620  013DDA  0EFD               	movlw	-3
 16621  013DDC  80E3               	bsf	plusw1,0,c
 16622  013DDE                     l7396:
 16623                           
 16624                           ;stkvar	_aexp @ sp[(-13)+10]
 16625  013DDE  0EFD               	movlw	-3
 16626  013DE0  50E3               	movf	plusw1,w,c
 16627  013DE2  B4D8               	btfsc	status,2,c
 16628  013DE4  D027               	goto	l7406
 16629                           
 16630                           ;stkvar	_aexp @ sp[(-13)+10]
 16631  013DE6  0EFD               	movlw	-3
 16632  013DE8  28E3               	incf	plusw1,w,c
 16633  013DEA  A4D8               	btfss	status,2,c
 16634  013DEC  D018               	goto	l7402
 16635  013DEE  0E00               	movlw	0
 16636  013DF0  6E09               	movwf	(btemp+8)^0,c
 16637  013DF2  0E00               	movlw	0
 16638  013DF4  6E0A               	movwf	(btemp+9)^0,c
 16639  013DF6  0E00               	movlw	0
 16640  013DF8  6E0B               	movwf	(btemp+10)^0,c
 16641  013DFA  0E00               	movlw	0
 16642  013DFC  6E0C               	movwf	(btemp+11)^0,c
 16643                           
 16644                           ;stkvar	_a @ sp[(-13)+-8]
 16645  013DFE  0EEB               	movlw	-21
 16646  013E00  0060  F027  FFE3   	movff	btemp+8,plusw1
 16647  013E06  0EEC               	movlw	-20
 16648  013E08  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16649  013E0E  0EED               	movlw	-19
 16650  013E10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16651  013E16  0EEE               	movlw	-18
 16652  013E18  0060  F033  FFE3   	movff	btemp+11,plusw1
 16653  013E1E                     l7402:
 16654                           
 16655                           ;stkvar	_a @ sp[(-13)+-8]
 16656  013E1E  0EED               	movlw	-19
 16657  013E20  8EE3               	bsf	plusw1,7,c
 16658                           
 16659                           ;stkvar	_a @ sp[(-13)+-8]
 16660  013E22  0EEE               	movlw	238
 16661  013E24  24E1               	addwf	fsr1l,w,c
 16662  013E26  6ED9               	movwf	fsr2l,c
 16663  013E28  0EFF               	movlw	255
 16664  013E2A  20E2               	addwfc	fsr1h,w,c
 16665  013E2C  6EDA               	movwf	fsr2h,c
 16666  013E2E  0E00               	movlw	0
 16667  013E30  6EDF               	movwf	indf2,c
 16668  013E32  D018               	goto	l7408
 16669  013E34                     l7406:
 16670  013E34  0E00               	movlw	0
 16671  013E36  6E09               	movwf	(btemp+8)^0,c
 16672  013E38  0E00               	movlw	0
 16673  013E3A  6E0A               	movwf	(btemp+9)^0,c
 16674  013E3C  0E00               	movlw	0
 16675  013E3E  6E0B               	movwf	(btemp+10)^0,c
 16676  013E40  0E00               	movlw	0
 16677  013E42  6E0C               	movwf	(btemp+11)^0,c
 16678                           
 16679                           ;stkvar	_a @ sp[(-13)+-8]
 16680  013E44  0EEB               	movlw	-21
 16681  013E46  0060  F027  FFE3   	movff	btemp+8,plusw1
 16682  013E4C  0EEC               	movlw	-20
 16683  013E4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16684  013E54  0EED               	movlw	-19
 16685  013E56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16686  013E5C  0EEE               	movlw	-18
 16687  013E5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16688  013E64                     l7408:
 16689                           
 16690                           ;stkvar	_a @ sp[(-13)+-8]
 16691  013E64  0EEB               	movlw	-21
 16692  013E66  50E3               	movf	plusw1,w,c
 16693  013E68  E139               	bnz	l7420
 16694  013E6A  0EEC               	movlw	-20
 16695  013E6C  50E3               	movf	plusw1,w,c
 16696  013E6E  E136               	bnz	l7420
 16697  013E70  0EED               	movlw	-19
 16698  013E72  50E3               	movf	plusw1,w,c
 16699  013E74  E133               	bnz	l7420
 16700  013E76  0EEE               	movlw	-18
 16701  013E78  50E3               	movf	plusw1,w,c
 16702  013E7A  A4D8               	btfss	status,2,c
 16703  013E7C  D02F               	goto	l7420
 16704                           
 16705                           ;stkvar	_b @ sp[(-13)+-4]
 16706  013E7E  0EEF               	movlw	-17
 16707  013E80  6AE3               	clrf	plusw1,c
 16708  013E82  0EF0               	movlw	-16
 16709  013E84  6AE3               	clrf	plusw1,c
 16710  013E86  0EF1               	movlw	-15
 16711  013E88  6AE3               	clrf	plusw1,c
 16712  013E8A  0EF2               	movlw	-14
 16713  013E8C  6AE3               	clrf	plusw1,c
 16714                           
 16715                           ;stkvar	_b @ sp[(-13)+-4]
 16716  013E8E  0EF1               	movlw	241
 16717  013E90  24E1               	addwf	fsr1l,w,c
 16718  013E92  6ED9               	movwf	fsr2l,c
 16719  013E94  0EFF               	movlw	255
 16720  013E96  20E2               	addwfc	fsr1h,w,c
 16721  013E98  6EDA               	movwf	fsr2h,c
 16722  013E9A  0E80               	movlw	128
 16723  013E9C  12DE               	iorwf	postinc2,f,c
 16724  013E9E  0E7F               	movlw	127
 16725  013EA0  12DD               	iorwf	postdec2,f,c
 16726  013EA2                     l7414:
 16727                           
 16728                           ;stkvar	_sign @ sp[(-13)+12]
 16729  013EA2  0EFF               	movlw	-1
 16730  013EA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16731                           
 16732                           ;stkvar	_b @ sp[(-13)+-4]
 16733  013EAA  0EF2               	movlw	242
 16734  013EAC  24E1               	addwf	fsr1l,w,c
 16735  013EAE  6ED9               	movwf	fsr2l,c
 16736  013EB0  0EFF               	movlw	255
 16737  013EB2  20E2               	addwfc	fsr1h,w,c
 16738  013EB4  6EDA               	movwf	fsr2h,c
 16739  013EB6  500C               	movf	(btemp+11)^0,w,c
 16740  013EB8  12DF               	iorwf	indf2,f,c
 16741                           
 16742                           ;stkvar	_b @ sp[(-13)+-4]
 16743  013EBA  0EEF               	movlw	-17
 16744  013EBC  006F FF8C  F001    	movff	plusw1,btemp
 16745  013EC2  0EF0               	movlw	-16
 16746  013EC4  006F FF8C  F002    	movff	plusw1,btemp+1
 16747  013ECA  0EF1               	movlw	-15
 16748  013ECC  006F FF8C  F003    	movff	plusw1,btemp+2
 16749  013ED2  0EF2               	movlw	-14
 16750  013ED4  006F FF8C  F004    	movff	plusw1,btemp+3
 16751  013EDA  D19F               	goto	l2815
 16752  013EDC                     l7420:
 16753                           
 16754                           ;stkvar	_bexp @ sp[(-13)+11]
 16755  013EDC  0EFE               	movlw	-2
 16756  013EDE  50E3               	movf	plusw1,w,c
 16757  013EE0  A4D8               	btfss	status,2,c
 16758  013EE2  D009               	goto	l7428
 16759  013EE4  0E00               	movlw	0
 16760  013EE6  6E01               	movwf	btemp^0,c
 16761  013EE8  0E00               	movlw	0
 16762  013EEA  6E02               	movwf	(btemp+1)^0,c
 16763  013EEC  0E00               	movlw	0
 16764  013EEE  6E03               	movwf	(btemp+2)^0,c
 16765  013EF0  0E00               	movlw	0
 16766  013EF2  6E04               	movwf	(btemp+3)^0,c
 16767  013EF4  D192               	goto	l2815
 16768  013EF6                     l7428:
 16769                           
 16770                           ;stkvar	_bexp @ sp[(-13)+11]
 16771  013EF6  0EFE               	movlw	-2
 16772  013EF8  50E3               	movf	plusw1,w,c
 16773  013EFA  6E0B               	movwf	(btemp+10)^0,c
 16774  013EFC  6A0C               	clrf	(btemp+11)^0,c
 16775                           
 16776                           ;stkvar	_aexp @ sp[(-13)+10]
 16777  013EFE  0EFD               	movlw	-3
 16778  013F00  50E3               	movf	plusw1,w,c
 16779  013F02  5E0B               	subwf	(btemp+10)^0,f,c
 16780  013F04  0E00               	movlw	0
 16781  013F06  5A0C               	subwfb	(btemp+11)^0,f,c
 16782  013F08  0E7F               	movlw	127
 16783  013F0A  260B               	addwf	(btemp+10)^0,f,c
 16784  013F0C  0E00               	movlw	0
 16785  013F0E  220C               	addwfc	(btemp+11)^0,f,c
 16786                           
 16787                           ;stkvar	_new_exp @ sp[(-13)+8]
 16788  013F10  0EFB               	movlw	-5
 16789  013F12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16790  013F18  0EFC               	movlw	-4
 16791  013F1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16792                           
 16793                           ;stkvar	_b @ sp[(-13)+-4]
 16794  013F20  0EEF               	movlw	-17
 16795  013F22  006F FF8C  F009    	movff	plusw1,btemp+8
 16796  013F28  0EF0               	movlw	-16
 16797  013F2A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16798  013F30  0EF1               	movlw	-15
 16799  013F32  006F FF8C  F00B    	movff	plusw1,btemp+10
 16800  013F38  0EF2               	movlw	-14
 16801  013F3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16802                           
 16803                           ;stkvar	_rem @ sp[(-13)+4]
 16804  013F40  0EF7               	movlw	-9
 16805  013F42  0060  F027  FFE3   	movff	btemp+8,plusw1
 16806  013F48  0EF8               	movlw	-8
 16807  013F4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16808  013F50  0EF9               	movlw	-7
 16809  013F52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16810  013F58  0EFA               	movlw	-6
 16811  013F5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16812                           
 16813                           ;stkvar	_b @ sp[(-13)+-4]
 16814  013F60  0EEF               	movlw	-17
 16815  013F62  6AE3               	clrf	plusw1,c
 16816  013F64  0EF0               	movlw	-16
 16817  013F66  6AE3               	clrf	plusw1,c
 16818  013F68  0EF1               	movlw	-15
 16819  013F6A  6AE3               	clrf	plusw1,c
 16820  013F6C  0EF2               	movlw	-14
 16821  013F6E  6AE3               	clrf	plusw1,c
 16822                           
 16823                           ;stkvar	_grs @ sp[(-13)+0]
 16824  013F70  0EF3               	movlw	-13
 16825  013F72  6AE3               	clrf	plusw1,c
 16826  013F74  0EF4               	movlw	-12
 16827  013F76  6AE3               	clrf	plusw1,c
 16828  013F78  0EF5               	movlw	-11
 16829  013F7A  6AE3               	clrf	plusw1,c
 16830  013F7C  0EF6               	movlw	-10
 16831  013F7E  6AE3               	clrf	plusw1,c
 16832                           
 16833                           ;stkvar	_aexp @ sp[(-13)+10]
 16834  013F80  0EFD               	movlw	-3
 16835  013F82  6AE3               	clrf	plusw1,c
 16836  013F84  D050               	goto	l7456
 16837  013F86                     l7438:
 16838                           
 16839                           ;stkvar	_aexp @ sp[(-13)+10]
 16840  013F86  0EFD               	movlw	-3
 16841  013F88  50E3               	movf	plusw1,w,c
 16842  013F8A  B4D8               	btfsc	status,2,c
 16843  013F8C  D020               	goto	l7448
 16844                           
 16845                           ;stkvar	_rem @ sp[(-13)+4]
 16846  013F8E  90D8               	bcf	status,0,c
 16847  013F90  0EF7               	movlw	-9
 16848  013F92  36E3               	rlcf	plusw1,f,c
 16849  013F94  0EF8               	movlw	-8
 16850  013F96  36E3               	rlcf	plusw1,f,c
 16851  013F98  0EF9               	movlw	-7
 16852  013F9A  36E3               	rlcf	plusw1,f,c
 16853  013F9C  0EFA               	movlw	-6
 16854  013F9E  36E3               	rlcf	plusw1,f,c
 16855                           
 16856                           ;stkvar	_b @ sp[(-13)+-4]
 16857  013FA0  90D8               	bcf	status,0,c
 16858  013FA2  0EEF               	movlw	-17
 16859  013FA4  36E3               	rlcf	plusw1,f,c
 16860  013FA6  0EF0               	movlw	-16
 16861  013FA8  36E3               	rlcf	plusw1,f,c
 16862  013FAA  0EF1               	movlw	-15
 16863  013FAC  36E3               	rlcf	plusw1,f,c
 16864  013FAE  0EF2               	movlw	-14
 16865  013FB0  36E3               	rlcf	plusw1,f,c
 16866                           
 16867                           ;stkvar	_grs @ sp[(-13)+0]
 16868  013FB2  0EF6               	movlw	-10
 16869  013FB4  AEE3               	btfss	plusw1,7,c
 16870  013FB6  D002               	goto	l7446
 16871                           
 16872                           ;stkvar	_b @ sp[(-13)+-4]
 16873  013FB8  0EEF               	movlw	-17
 16874  013FBA  80E3               	bsf	plusw1,0,c
 16875  013FBC                     l7446:
 16876                           
 16877                           ;stkvar	_grs @ sp[(-13)+0]
 16878  013FBC  90D8               	bcf	status,0,c
 16879  013FBE  0EF3               	movlw	-13
 16880  013FC0  36E3               	rlcf	plusw1,f,c
 16881  013FC2  0EF4               	movlw	-12
 16882  013FC4  36E3               	rlcf	plusw1,f,c
 16883  013FC6  0EF5               	movlw	-11
 16884  013FC8  36E3               	rlcf	plusw1,f,c
 16885  013FCA  0EF6               	movlw	-10
 16886  013FCC  36E3               	rlcf	plusw1,f,c
 16887  013FCE                     l7448:
 16888                           
 16889                           ;stkvar	_a @ sp[(-13)+-8]
 16890                           ;stkvar	_rem @ sp[(-13)+4]
 16891  013FCE  50E1               	movf	fsr1l,w,c
 16892  013FD0  0FF7               	addlw	-9
 16893  013FD2  6ED9               	movwf	fsr2l,c
 16894  013FD4  50E2               	movf	fsr1h,w,c
 16895  013FD6  6EDA               	movwf	fsr2h,c
 16896  013FD8  0EFF               	movlw	255
 16897  013FDA  22DA               	addwfc	fsr2h,f,c
 16898  013FDC  0EEB               	movlw	-21
 16899  013FDE  50E3               	movf	plusw1,w,c
 16900  013FE0  5CDE               	subwf	postinc2,w,c
 16901  013FE2  0EEC               	movlw	-20
 16902  013FE4  50E3               	movf	plusw1,w,c
 16903  013FE6  58DE               	subwfb	postinc2,w,c
 16904  013FE8  0EED               	movlw	-19
 16905  013FEA  50E3               	movf	plusw1,w,c
 16906  013FEC  58DE               	subwfb	postinc2,w,c
 16907  013FEE  0EEE               	movlw	-18
 16908  013FF0  50E3               	movf	plusw1,w,c
 16909  013FF2  58DE               	subwfb	postinc2,w,c
 16910  013FF4  A0D8               	btfss	status,0,c
 16911  013FF6  D015               	goto	l7454
 16912                           
 16913                           ;stkvar	_grs @ sp[(-13)+0]
 16914  013FF8  0EF6               	movlw	-10
 16915  013FFA  8CE3               	bsf	plusw1,6,c
 16916                           
 16917                           ;stkvar	_a @ sp[(-13)+-8]
 16918                           ;stkvar	_rem @ sp[(-13)+4]
 16919  013FFC  50E1               	movf	fsr1l,w,c
 16920  013FFE  0FF7               	addlw	-9
 16921  014000  6ED9               	movwf	fsr2l,c
 16922  014002  50E2               	movf	fsr1h,w,c
 16923  014004  6EDA               	movwf	fsr2h,c
 16924  014006  0EFF               	movlw	255
 16925  014008  22DA               	addwfc	fsr2h,f,c
 16926  01400A  0EEB               	movlw	-21
 16927  01400C  50E3               	movf	plusw1,w,c
 16928  01400E  5EDE               	subwf	postinc2,f,c
 16929  014010  0EEC               	movlw	-20
 16930  014012  50E3               	movf	plusw1,w,c
 16931  014014  5ADE               	subwfb	postinc2,f,c
 16932  014016  0EED               	movlw	-19
 16933  014018  50E3               	movf	plusw1,w,c
 16934  01401A  5ADE               	subwfb	postinc2,f,c
 16935  01401C  0EEE               	movlw	-18
 16936  01401E  50E3               	movf	plusw1,w,c
 16937  014020  5ADE               	subwfb	postinc2,f,c
 16938  014022                     l7454:
 16939                           
 16940                           ;stkvar	_aexp @ sp[(-13)+10]
 16941  014022  0EFD               	movlw	-3
 16942  014024  2AE3               	incf	plusw1,f,c
 16943  014026                     l7456:
 16944                           
 16945                           ;stkvar	_aexp @ sp[(-13)+10]
 16946  014026  0EFD               	movlw	-3
 16947  014028  006F FF8C  F001    	movff	plusw1,btemp
 16948  01402E  0E19               	movlw	25
 16949  014030  6401               	cpfsgt	btemp^0,c
 16950  014032  D7A9               	goto	l7438
 16951                           
 16952                           ;stkvar	_rem @ sp[(-13)+4]
 16953  014034  0EF7               	movlw	-9
 16954  014036  50E3               	movf	plusw1,w,c
 16955  014038  E10A               	bnz	u5890
 16956  01403A  0EF8               	movlw	-8
 16957  01403C  50E3               	movf	plusw1,w,c
 16958  01403E  E107               	bnz	u5890
 16959  014040  0EF9               	movlw	-7
 16960  014042  50E3               	movf	plusw1,w,c
 16961  014044  E104               	bnz	u5890
 16962  014046  0EFA               	movlw	-6
 16963  014048  50E3               	movf	plusw1,w,c
 16964  01404A  B4D8               	btfsc	status,2,c
 16965  01404C  D024               	goto	l7472
 16966  01404E                     u5890:
 16967                           
 16968                           ;stkvar	_grs @ sp[(-13)+0]
 16969  01404E  0EF3               	movlw	-13
 16970  014050  80E3               	bsf	plusw1,0,c
 16971  014052  D021               	goto	l7472
 16972  014054                     l7462:
 16973                           
 16974                           ;stkvar	_b @ sp[(-13)+-4]
 16975  014054  90D8               	bcf	status,0,c
 16976  014056  0EEF               	movlw	-17
 16977  014058  36E3               	rlcf	plusw1,f,c
 16978  01405A  0EF0               	movlw	-16
 16979  01405C  36E3               	rlcf	plusw1,f,c
 16980  01405E  0EF1               	movlw	-15
 16981  014060  36E3               	rlcf	plusw1,f,c
 16982  014062  0EF2               	movlw	-14
 16983  014064  36E3               	rlcf	plusw1,f,c
 16984                           
 16985                           ;stkvar	_grs @ sp[(-13)+0]
 16986  014066  0EF6               	movlw	-10
 16987  014068  AEE3               	btfss	plusw1,7,c
 16988  01406A  D002               	goto	l7468
 16989                           
 16990                           ;stkvar	_b @ sp[(-13)+-4]
 16991  01406C  0EEF               	movlw	-17
 16992  01406E  80E3               	bsf	plusw1,0,c
 16993  014070                     l7468:
 16994                           
 16995                           ;stkvar	_grs @ sp[(-13)+0]
 16996  014070  90D8               	bcf	status,0,c
 16997  014072  0EF3               	movlw	-13
 16998  014074  36E3               	rlcf	plusw1,f,c
 16999  014076  0EF4               	movlw	-12
 17000  014078  36E3               	rlcf	plusw1,f,c
 17001  01407A  0EF5               	movlw	-11
 17002  01407C  36E3               	rlcf	plusw1,f,c
 17003  01407E  0EF6               	movlw	-10
 17004  014080  36E3               	rlcf	plusw1,f,c
 17005                           
 17006                           ;stkvar	_new_exp @ sp[(-13)+8]
 17007  014082  50E1               	movf	fsr1l,w,c
 17008  014084  0FFB               	addlw	-5
 17009  014086  6ED9               	movwf	fsr2l,c
 17010  014088  50E2               	movf	fsr1h,w,c
 17011  01408A  6EDA               	movwf	fsr2h,c
 17012  01408C  0EFF               	movlw	255
 17013  01408E  22DA               	addwfc	fsr2h,f,c
 17014  014090  06DE               	decf	postinc2,f,c
 17015  014092  0E00               	movlw	0
 17016  014094  5ADD               	subwfb	postdec2,f,c
 17017  014096                     l7472:
 17018                           
 17019                           ;stkvar	_b @ sp[(-13)+-4]
 17020  014096  0EF1               	movlw	-15
 17021  014098  AEE3               	btfss	plusw1,7,c
 17022  01409A  D7DC               	goto	l7462
 17023                           
 17024                           ;stkvar	_aexp @ sp[(-13)+10]
 17025  01409C  0EFD               	movlw	-3
 17026  01409E  6AE3               	clrf	plusw1,c
 17027                           
 17028                           ;stkvar	_grs @ sp[(-13)+0]
 17029  0140A0  0EF6               	movlw	-10
 17030  0140A2  AEE3               	btfss	plusw1,7,c
 17031  0140A4  D020               	goto	l7486
 17032                           
 17033                           ;stkvar	_grs @ sp[(-13)+0]
 17034  0140A6  50E1               	movf	fsr1l,w,c
 17035  0140A8  0FF3               	addlw	-13
 17036  0140AA  6ED9               	movwf	fsr2l,c
 17037  0140AC  50E2               	movf	fsr1h,w,c
 17038  0140AE  6EDA               	movwf	fsr2h,c
 17039  0140B0  0EFF               	movlw	255
 17040  0140B2  22DA               	addwfc	fsr2h,f,c
 17041  0140B4  0EFF               	movlw	255
 17042  0140B6  14DE               	andwf	postinc2,w,c
 17043  0140B8  6E09               	movwf	(btemp+8)^0,c
 17044  0140BA  0EFF               	movlw	255
 17045  0140BC  14DE               	andwf	postinc2,w,c
 17046  0140BE  6E0A               	movwf	(btemp+9)^0,c
 17047  0140C0  0EFF               	movlw	255
 17048  0140C2  14DE               	andwf	postinc2,w,c
 17049  0140C4  6E0B               	movwf	(btemp+10)^0,c
 17050  0140C6  0E7F               	movlw	127
 17051  0140C8  14DE               	andwf	postinc2,w,c
 17052  0140CA  6E0C               	movwf	(btemp+11)^0,c
 17053  0140CC  5009               	movf	(btemp+8)^0,w,c
 17054  0140CE  100A               	iorwf	(btemp+9)^0,w,c
 17055  0140D0  100B               	iorwf	(btemp+10)^0,w,c
 17056  0140D2  100C               	iorwf	(btemp+11)^0,w,c
 17057  0140D4  B4D8               	btfsc	status,2,c
 17058  0140D6  D004               	goto	l7482
 17059  0140D8                     u5930:
 17060                           
 17061                           ;stkvar	_aexp @ sp[(-13)+10]
 17062  0140D8  0EFD               	movlw	-3
 17063  0140DA  6AE3               	clrf	plusw1,c
 17064  0140DC  2AE3               	incf	plusw1,f,c
 17065  0140DE  D003               	goto	l7486
 17066  0140E0                     l7482:
 17067                           
 17068                           ;stkvar	_b @ sp[(-13)+-4]
 17069  0140E0  0EEF               	movlw	-17
 17070  0140E2  B0E3               	btfsc	plusw1,0,c
 17071  0140E4  D7F9               	goto	u5930
 17072  0140E6                     l7486:
 17073                           
 17074                           ;stkvar	_aexp @ sp[(-13)+10]
 17075  0140E6  0EFD               	movlw	-3
 17076  0140E8  50E3               	movf	plusw1,w,c
 17077  0140EA  B4D8               	btfsc	status,2,c
 17078  0140EC  D036               	goto	l7496
 17079                           
 17080                           ;stkvar	_b @ sp[(-13)+-4]
 17081  0140EE  50E1               	movf	fsr1l,w,c
 17082  0140F0  0FEF               	addlw	-17
 17083  0140F2  6ED9               	movwf	fsr2l,c
 17084  0140F4  50E2               	movf	fsr1h,w,c
 17085  0140F6  6EDA               	movwf	fsr2h,c
 17086  0140F8  0EFF               	movlw	255
 17087  0140FA  22DA               	addwfc	fsr2h,f,c
 17088  0140FC  2ADE               	incf	postinc2,f,c
 17089  0140FE  0E00               	movlw	0
 17090  014100  22DE               	addwfc	postinc2,f,c
 17091  014102  22DE               	addwfc	postinc2,f,c
 17092  014104  22DE               	addwfc	postinc2,f,c
 17093                           
 17094                           ;stkvar	_b @ sp[(-13)+-4]
 17095  014106  0EF2               	movlw	-14
 17096  014108  A0E3               	btfss	plusw1,0,c
 17097  01410A  D027               	goto	l7496
 17098  01410C  0E01               	movlw	1
 17099  01410E  6E0C               	movwf	(btemp+11)^0,c
 17100                           
 17101                           ;stkvar	_b @ sp[(-13)+-4]
 17102  014110  50E1               	movf	fsr1l,w,c
 17103  014112  0FEF               	addlw	-17
 17104  014114  6ED9               	movwf	fsr2l,c
 17105  014116  50E2               	movf	fsr1h,w,c
 17106  014118  6EDA               	movwf	fsr2h,c
 17107  01411A  0EFF               	movlw	255
 17108  01411C  22DA               	addwfc	fsr2h,f,c
 17109  01411E  280C               	incf	(btemp+11)^0,w,c
 17110  014120  52DE               	movf	postinc2,f,c
 17111  014122  D008               	goto	u5970
 17112  014124                     u5975:
 17113  014124  52DE               	movf	postinc2,f,c
 17114  014126  90D8               	bcf	status,0,c
 17115  014128  BEDC               	btfsc	preinc2,7,c
 17116  01412A  80D8               	bsf	status,0,c
 17117  01412C  32DD               	rrcf	postdec2,f,c
 17118  01412E  32DD               	rrcf	postdec2,f,c
 17119  014130  32DD               	rrcf	postdec2,f,c
 17120  014132  32DE               	rrcf	postinc2,f,c
 17121  014134                     u5970:
 17122  014134  2EE8               	decfsz	wreg,f,c
 17123  014136  D7F6               	goto	u5975
 17124                           
 17125                           ;stkvar	_new_exp @ sp[(-13)+8]
 17126  014138  0EFB               	movlw	-5
 17127  01413A  50E3               	movf	plusw1,w,c
 17128  01413C  0F01               	addlw	1
 17129  01413E  6E01               	movwf	btemp^0,c
 17130  014140  0EFB               	movlw	-5
 17131  014142  0060  F007  FFE3   	movff	btemp,plusw1
 17132  014148  6A01               	clrf	btemp^0,c
 17133  01414A  0EFC               	movlw	-4
 17134  01414C  50E3               	movf	plusw1,w,c
 17135  01414E  2001               	addwfc	btemp^0,w,c
 17136  014150  6E01               	movwf	btemp^0,c
 17137  014152  0EFC               	movlw	-4
 17138  014154  0060  F007  FFE3   	movff	btemp,plusw1
 17139  01415A                     l7496:
 17140                           
 17141                           ;stkvar	_new_exp @ sp[(-13)+8]
 17142  01415A  0EFC               	movlw	-4
 17143  01415C  BEE3               	btfsc	plusw1,7,c
 17144  01415E  D01B               	goto	l7502
 17145  014160  0EFC               	movlw	-4
 17146  014162  50E3               	movf	plusw1,w,c
 17147  014164  E104               	bnz	u5980
 17148  014166  0EFB               	movlw	-5
 17149  014168  28E3               	incf	plusw1,w,c
 17150  01416A  A0D8               	btfss	status,0,c
 17151  01416C  D014               	goto	l7502
 17152  01416E                     u5980:
 17153  01416E  0EFF               	movlw	255
 17154  014170  6E0B               	movwf	(btemp+10)^0,c
 17155  014172  0E00               	movlw	0
 17156  014174  6E0C               	movwf	(btemp+11)^0,c
 17157                           
 17158                           ;stkvar	_new_exp @ sp[(-13)+8]
 17159  014176  0EFB               	movlw	-5
 17160  014178  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17161  01417E  0EFC               	movlw	-4
 17162  014180  0060  F033  FFE3   	movff	btemp+11,plusw1
 17163                           
 17164                           ;stkvar	_b @ sp[(-13)+-4]
 17165  014186  0EEF               	movlw	-17
 17166  014188  6AE3               	clrf	plusw1,c
 17167  01418A  0EF0               	movlw	-16
 17168  01418C  6AE3               	clrf	plusw1,c
 17169  01418E  0EF1               	movlw	-15
 17170  014190  6AE3               	clrf	plusw1,c
 17171  014192  0EF2               	movlw	-14
 17172  014194  6AE3               	clrf	plusw1,c
 17173  014196                     l7502:
 17174                           
 17175                           ;stkvar	_new_exp @ sp[(-13)+8]
 17176  014196  0EFC               	movlw	-4
 17177  014198  BEE3               	btfsc	plusw1,7,c
 17178  01419A  D007               	goto	u5990
 17179  01419C  0EFC               	movlw	-4
 17180  01419E  50E3               	movf	plusw1,w,c
 17181  0141A0  E112               	bnz	l7508
 17182  0141A2  0EFB               	movlw	-5
 17183  0141A4  04E3               	decf	plusw1,w,c
 17184  0141A6  B0D8               	btfsc	status,0,c
 17185  0141A8  D00E               	goto	l7508
 17186  0141AA                     u5990:
 17187                           
 17188                           ;stkvar	_new_exp @ sp[(-13)+8]
 17189  0141AA  0EFB               	movlw	-5
 17190  0141AC  6AE3               	clrf	plusw1,c
 17191  0141AE  0EFC               	movlw	-4
 17192  0141B0  6AE3               	clrf	plusw1,c
 17193                           
 17194                           ;stkvar	_b @ sp[(-13)+-4]
 17195  0141B2  0EEF               	movlw	-17
 17196  0141B4  6AE3               	clrf	plusw1,c
 17197  0141B6  0EF0               	movlw	-16
 17198  0141B8  6AE3               	clrf	plusw1,c
 17199  0141BA  0EF1               	movlw	-15
 17200  0141BC  6AE3               	clrf	plusw1,c
 17201  0141BE  0EF2               	movlw	-14
 17202  0141C0  6AE3               	clrf	plusw1,c
 17203                           
 17204                           ;stkvar	_sign @ sp[(-13)+12]
 17205  0141C2  0EFF               	movlw	-1
 17206  0141C4  6AE3               	clrf	plusw1,c
 17207  0141C6                     l7508:
 17208                           
 17209                           ;stkvar	_new_exp @ sp[(-13)+8]
 17210                           ;stkvar	_bexp @ sp[(-13)+11]
 17211  0141C6  0EFB               	movlw	-5
 17212  0141C8  006F FF8C  F001    	movff	plusw1,btemp
 17213  0141CE  0EFE               	movlw	-2
 17214  0141D0  0060  F007  FFE3   	movff	btemp,plusw1
 17215                           
 17216                           ;stkvar	_bexp @ sp[(-13)+11]
 17217  0141D6  0EFE               	movlw	-2
 17218  0141D8  A0E3               	btfss	plusw1,0,c
 17219  0141DA  D009               	goto	l7514
 17220                           
 17221                           ;stkvar	_b @ sp[(-13)+-4]
 17222  0141DC  0EF1               	movlw	241
 17223  0141DE  24E1               	addwf	fsr1l,w,c
 17224  0141E0  6ED9               	movwf	fsr2l,c
 17225  0141E2  0EFF               	movlw	255
 17226  0141E4  20E2               	addwfc	fsr1h,w,c
 17227  0141E6  6EDA               	movwf	fsr2h,c
 17228  0141E8  0E00               	movlw	0
 17229  0141EA  8EDB               	bsf	plusw2,7,c
 17230  0141EC  D008               	goto	l7516
 17231  0141EE                     l7514:
 17232                           
 17233                           ;stkvar	_b @ sp[(-13)+-4]
 17234  0141EE  0EF1               	movlw	241
 17235  0141F0  24E1               	addwf	fsr1l,w,c
 17236  0141F2  6ED9               	movwf	fsr2l,c
 17237  0141F4  0EFF               	movlw	255
 17238  0141F6  20E2               	addwfc	fsr1h,w,c
 17239  0141F8  6EDA               	movwf	fsr2h,c
 17240  0141FA  0E7F               	movlw	127
 17241  0141FC  16DF               	andwf	indf2,f,c
 17242  0141FE                     l7516:
 17243                           
 17244                           ;stkvar	_b @ sp[(-13)+-4]
 17245  0141FE  0EF2               	movlw	242
 17246  014200  24E1               	addwf	fsr1l,w,c
 17247  014202  6ED9               	movwf	fsr2l,c
 17248  014204  0EFF               	movlw	255
 17249  014206  20E2               	addwfc	fsr1h,w,c
 17250  014208  6EDA               	movwf	fsr2h,c
 17251                           
 17252                           ;stkvar	_bexp @ sp[(-13)+11]
 17253  01420A  0EFE               	movlw	-2
 17254  01420C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17255  014212  90D8               	bcf	status,0,c
 17256  014214  300C               	rrcf	(btemp+11)^0,w,c
 17257  014216  6EDF               	movwf	indf2,c
 17258  014218  D644               	goto	l7414
 17259  01421A                     l2815:
 17260                           
 17261                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17262  01421A  0EEB               	movlw	235
 17263  01421C  26E1               	addwf	fsr1l,f,c
 17264  01421E  0EFF               	movlw	255
 17265  014220  22E2               	addwfc	fsr1h,f,c
 17266  014222  0012               	return		;funcret
 17267  014224                     __end_of___fldiv:
 17268                           	opt callstack 0
 17269                           
 17270 ;; *************** function ___awmod *****************
 17271 ;; Defined at:
 17272 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17273 ;; Parameters:    Size  Location     Type
 17274 ;;  dividend        2  [STACK] int 
 17275 ;;  divisor         2  [STACK] int 
 17276 ;; Auto vars:     Size  Location     Type
 17277 ;;  sign            1  [STACK] unsigned char 
 17278 ;;  counter         1  [STACK] unsigned char 
 17279 ;; Return value:  Size  Location     Type
 17280 ;;                  2  [STACK] int 
 17281 ;; Registers used:
 17282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17283 ;; Tracked objects:
 17284 ;;		On entry : 0/0
 17285 ;;		On exit  : 0/0
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17292 ;;Total ram usage:        0 bytes
 17293 ;; Hardware stack levels used:    1
 17294 ;; Hardware stack levels required when called:   15
 17295 ;; This function calls:
 17296 ;;		Nothing
 17297 ;; This function is called by:
 17298 ;;		_efgtoa
 17299 ;; This function uses a reentrant model
 17300 ;;
 17301                           
 17302                           	psect	text61
 17303  0177D2                     __ptext61:
 17304                           	opt callstack 0
 17305  0177D2                     ___awmod:
 17306                           	opt callstack 0
 17307                           
 17308                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17309  0177D2  52E6               	movf	postinc1,f,c
 17310  0177D4  52E6               	movf	postinc1,f,c
 17311                           
 17312                           ;stkvar	_sign @ sp[(-2)+0]
 17313                           
 17314                           ;incstack = 0
 17315 ;; hardware stack exceeded
 17316  0177D6  0EFE               	movlw	-2
 17317  0177D8  6AE3               	clrf	plusw1,c
 17318                           
 17319                           ;stkvar	_dividend @ sp[(-2)+-2]
 17320  0177DA  0EFD               	movlw	-3
 17321  0177DC  AEE3               	btfss	plusw1,7,c
 17322  0177DE  D009               	goto	l7740
 17323                           
 17324                           ;stkvar	_dividend @ sp[(-2)+-2]
 17325                           ;stkvar	_dividend @ sp[(-2)+-2]
 17326  0177E0  0EFC               	movlw	-4
 17327  0177E2  6CE3               	negf	plusw1,c
 17328  0177E4  0EFD               	movlw	-3
 17329  0177E6  1EE3               	comf	plusw1,f,c
 17330  0177E8  B0D8               	btfsc	status,0,c
 17331  0177EA  2AE3               	incf	plusw1,f,c
 17332                           
 17333                           ;stkvar	_sign @ sp[(-2)+0]
 17334  0177EC  0EFE               	movlw	-2
 17335  0177EE  6AE3               	clrf	plusw1,c
 17336  0177F0  2AE3               	incf	plusw1,f,c
 17337  0177F2                     l7740:
 17338                           
 17339                           ;stkvar	_divisor @ sp[(-2)+-4]
 17340  0177F2  0EFB               	movlw	-5
 17341  0177F4  AEE3               	btfss	plusw1,7,c
 17342  0177F6  D006               	goto	l7744
 17343                           
 17344                           ;stkvar	_divisor @ sp[(-2)+-4]
 17345                           ;stkvar	_divisor @ sp[(-2)+-4]
 17346  0177F8  0EFA               	movlw	-6
 17347  0177FA  6CE3               	negf	plusw1,c
 17348  0177FC  0EFB               	movlw	-5
 17349  0177FE  1EE3               	comf	plusw1,f,c
 17350  017800  B0D8               	btfsc	status,0,c
 17351  017802  2AE3               	incf	plusw1,f,c
 17352  017804                     l7744:
 17353                           
 17354                           ;stkvar	_divisor @ sp[(-2)+-4]
 17355  017804  0EFA               	movlw	-6
 17356  017806  006F FF8C  F001    	movff	plusw1,btemp
 17357  01780C  0EFB               	movlw	-5
 17358  01780E  50E3               	movf	plusw1,w,c
 17359  017810  1001               	iorwf	btemp^0,w,c
 17360  017812  B4D8               	btfsc	status,2,c
 17361  017814  D053               	goto	u6350
 17362                           
 17363                           ;stkvar	_counter @ sp[(-2)+1]
 17364  017816  0EFF               	movlw	-1
 17365  017818  6AE3               	clrf	plusw1,c
 17366  01781A  D012               	goto	L15
 17367  01781C                     l7748:
 17368                           
 17369                           ;stkvar	_divisor @ sp[(-2)+-4]
 17370  01781C  0EFA               	movlw	-6
 17371  01781E  50E3               	movf	plusw1,w,c
 17372  017820  90D8               	bcf	status,0,c
 17373  017822  34E8               	rlcf	wreg,w,c
 17374  017824  6E01               	movwf	btemp^0,c
 17375  017826  0EFA               	movlw	-6
 17376  017828  0060  F007  FFE3   	movff	btemp,plusw1
 17377  01782E  0EFB               	movlw	-5
 17378  017830  50E3               	movf	plusw1,w,c
 17379  017832  34E8               	rlcf	wreg,w,c
 17380  017834  6E01               	movwf	btemp^0,c
 17381  017836  0EFB               	movlw	-5
 17382  017838  0060  F007  FFE3   	movff	btemp,plusw1
 17383                           
 17384                           ;stkvar	_counter @ sp[(-2)+1]
 17385  01783E  0EFF               	movlw	-1
 17386  017840                     L15:
 17387  017840  2AE3               	incf	plusw1,f,c
 17388                           
 17389                           ;stkvar	_divisor @ sp[(-2)+-4]
 17390  017842  0EFB               	movlw	-5
 17391  017844  AEE3               	btfss	plusw1,7,c
 17392  017846  D7EA               	goto	l7748
 17393  017848                     u6330:
 17394                           
 17395                           ;stkvar	_divisor @ sp[(-2)+-4]
 17396  017848  0EFA               	movlw	-6
 17397  01784A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17398  017850  0EFB               	movlw	-5
 17399  017852  006F FF8C  F00C    	movff	plusw1,btemp+11
 17400                           
 17401                           ;stkvar	_dividend @ sp[(-2)+-2]
 17402  017858  0EFC               	movlw	-4
 17403  01785A  006F FF8C  F009    	movff	plusw1,btemp+8
 17404  017860  0EFD               	movlw	-3
 17405  017862  006F FF8C  F00A    	movff	plusw1,btemp+9
 17406  017868  500B               	movf	(btemp+10)^0,w,c
 17407  01786A  5C09               	subwf	(btemp+8)^0,w,c
 17408  01786C  500C               	movf	(btemp+11)^0,w,c
 17409  01786E  580A               	subwfb	(btemp+9)^0,w,c
 17410  017870  A0D8               	btfss	status,0,c
 17411  017872  D014               	goto	l7758
 17412                           
 17413                           ;stkvar	_divisor @ sp[(-2)+-4]
 17414                           ;stkvar	_dividend @ sp[(-2)+-2]
 17415  017874  0EFC               	movlw	-4
 17416  017876  50E3               	movf	plusw1,w,c
 17417  017878  6E01               	movwf	btemp^0,c
 17418  01787A  0EFA               	movlw	-6
 17419  01787C  50E3               	movf	plusw1,w,c
 17420  01787E  5E01               	subwf	btemp^0,f,c
 17421  017880  0EFC               	movlw	-4
 17422  017882  0060  F007  FFE3   	movff	btemp,plusw1
 17423  017888  0EFD               	movlw	-3
 17424  01788A  50E3               	movf	plusw1,w,c
 17425  01788C  6E01               	movwf	btemp^0,c
 17426  01788E  0EFB               	movlw	-5
 17427  017890  50E3               	movf	plusw1,w,c
 17428  017892  5A01               	subwfb	btemp^0,f,c
 17429  017894  0EFD               	movlw	-3
 17430  017896  0060  F007  FFE3   	movff	btemp,plusw1
 17431  01789C                     l7758:
 17432                           
 17433                           ;stkvar	_divisor @ sp[(-2)+-4]
 17434  01789C  90D8               	bcf	status,0,c
 17435  01789E  0EFB               	movlw	-5
 17436  0178A0  32E3               	rrcf	plusw1,f,c
 17437  0178A2  0EFA               	movlw	-6
 17438  0178A4  32E3               	rrcf	plusw1,f,c
 17439                           
 17440                           ;stkvar	_counter @ sp[(-2)+1]
 17441  0178A6  0EFF               	movlw	-1
 17442  0178A8  50E3               	movf	plusw1,w,c
 17443  0178AA  6E01               	movwf	btemp^0,c
 17444  0178AC  0E01               	movlw	1
 17445  0178AE  5E01               	subwf	btemp^0,f,c
 17446  0178B0  0EFF               	movlw	-1
 17447  0178B2  0060  F007  FFE3   	movff	btemp,plusw1
 17448  0178B8  A4D8               	btfss	status,2,c
 17449  0178BA  D7C6               	goto	u6330
 17450  0178BC                     u6350:
 17451                           
 17452                           ;stkvar	_sign @ sp[(-2)+0]
 17453  0178BC  0EFE               	movlw	-2
 17454  0178BE  50E3               	movf	plusw1,w,c
 17455  0178C0  B4D8               	btfsc	status,2,c
 17456  0178C2  D006               	goto	l7766
 17457                           
 17458                           ;stkvar	_dividend @ sp[(-2)+-2]
 17459                           ;stkvar	_dividend @ sp[(-2)+-2]
 17460  0178C4  0EFC               	movlw	-4
 17461  0178C6  6CE3               	negf	plusw1,c
 17462  0178C8  0EFD               	movlw	-3
 17463  0178CA  1EE3               	comf	plusw1,f,c
 17464  0178CC  B0D8               	btfsc	status,0,c
 17465  0178CE  2AE3               	incf	plusw1,f,c
 17466  0178D0                     l7766:
 17467                           
 17468                           ;stkvar	_dividend @ sp[(-2)+-2]
 17469  0178D0  0EFC               	movlw	-4
 17470  0178D2  006F FF8C  F001    	movff	plusw1,btemp
 17471  0178D8  0EFD               	movlw	-3
 17472  0178DA  006F FF8C  F002    	movff	plusw1,btemp+1
 17473                           
 17474                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17475  0178E0  0EFA               	movlw	250
 17476  0178E2  26E1               	addwf	fsr1l,f,c
 17477  0178E4  0EFF               	movlw	255
 17478  0178E6  22E2               	addwfc	fsr1h,f,c
 17479  0178E8  0012               	return		;funcret
 17480  0178EA                     __end_of___awmod:
 17481                           	opt callstack 0
 17482                           
 17483 ;; *************** function ___awdiv *****************
 17484 ;; Defined at:
 17485 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;  dividend        2  [STACK] int 
 17488 ;;  divisor         2  [STACK] int 
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;  quotient        2  [STACK] int 
 17491 ;;  sign            1  [STACK] unsigned char 
 17492 ;;  counter         1  [STACK] unsigned char 
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  2  [STACK] int 
 17495 ;; Registers used:
 17496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17506 ;;Total ram usage:        0 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:   15
 17509 ;; This function calls:
 17510 ;;		Nothing
 17511 ;; This function is called by:
 17512 ;;		_efgtoa
 17513 ;; This function uses a reentrant model
 17514 ;;
 17515                           
 17516                           	psect	text62
 17517  01730A                     __ptext62:
 17518                           	opt callstack 0
 17519  01730A                     ___awdiv:
 17520                           	opt callstack 0
 17521                           
 17522                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17523  01730A  52E6               	movf	postinc1,f,c
 17524  01730C  52E6               	movf	postinc1,f,c
 17525  01730E  52E6               	movf	postinc1,f,c
 17526  017310  52E6               	movf	postinc1,f,c
 17527                           
 17528                           ;stkvar	_sign @ sp[(-4)+2]
 17529                           
 17530                           ;incstack = 0
 17531 ;; hardware stack exceeded
 17532  017312  0EFE               	movlw	-2
 17533  017314  6AE3               	clrf	plusw1,c
 17534                           
 17535                           ;stkvar	_divisor @ sp[(-4)+-4]
 17536  017316  0EF9               	movlw	-7
 17537  017318  AEE3               	btfss	plusw1,7,c
 17538  01731A  D009               	goto	l7694
 17539                           
 17540                           ;stkvar	_divisor @ sp[(-4)+-4]
 17541                           ;stkvar	_divisor @ sp[(-4)+-4]
 17542  01731C  0EF8               	movlw	-8
 17543  01731E  6CE3               	negf	plusw1,c
 17544  017320  0EF9               	movlw	-7
 17545  017322  1EE3               	comf	plusw1,f,c
 17546  017324  B0D8               	btfsc	status,0,c
 17547  017326  2AE3               	incf	plusw1,f,c
 17548                           
 17549                           ;stkvar	_sign @ sp[(-4)+2]
 17550  017328  0EFE               	movlw	-2
 17551  01732A  6AE3               	clrf	plusw1,c
 17552  01732C  2AE3               	incf	plusw1,f,c
 17553  01732E                     l7694:
 17554                           
 17555                           ;stkvar	_dividend @ sp[(-4)+-2]
 17556  01732E  0EFB               	movlw	-5
 17557  017330  AEE3               	btfss	plusw1,7,c
 17558  017332  D008               	goto	l7700
 17559                           
 17560                           ;stkvar	_dividend @ sp[(-4)+-2]
 17561                           ;stkvar	_dividend @ sp[(-4)+-2]
 17562  017334  0EFA               	movlw	-6
 17563  017336  6CE3               	negf	plusw1,c
 17564  017338  0EFB               	movlw	-5
 17565  01733A  1EE3               	comf	plusw1,f,c
 17566  01733C  B0D8               	btfsc	status,0,c
 17567  01733E  2AE3               	incf	plusw1,f,c
 17568                           
 17569                           ;stkvar	_sign @ sp[(-4)+2]
 17570  017340  0EFE               	movlw	-2
 17571  017342  70E3               	btg	plusw1,0,c
 17572  017344                     l7700:
 17573                           
 17574                           ;stkvar	_quotient @ sp[(-4)+0]
 17575  017344  0EFC               	movlw	-4
 17576  017346  6AE3               	clrf	plusw1,c
 17577  017348  0EFD               	movlw	-3
 17578  01734A  6AE3               	clrf	plusw1,c
 17579                           
 17580                           ;stkvar	_divisor @ sp[(-4)+-4]
 17581  01734C  0EF8               	movlw	-8
 17582  01734E  006F FF8C  F001    	movff	plusw1,btemp
 17583  017354  0EF9               	movlw	-7
 17584  017356  50E3               	movf	plusw1,w,c
 17585  017358  1001               	iorwf	btemp^0,w,c
 17586  01735A  B4D8               	btfsc	status,2,c
 17587  01735C  D066               	goto	u6280
 17588                           
 17589                           ;stkvar	_counter @ sp[(-4)+3]
 17590  01735E  0EFF               	movlw	-1
 17591  017360  6AE3               	clrf	plusw1,c
 17592  017362  D012               	goto	L16
 17593  017364                     l7706:
 17594                           
 17595                           ;stkvar	_divisor @ sp[(-4)+-4]
 17596  017364  0EF8               	movlw	-8
 17597  017366  50E3               	movf	plusw1,w,c
 17598  017368  90D8               	bcf	status,0,c
 17599  01736A  34E8               	rlcf	wreg,w,c
 17600  01736C  6E01               	movwf	btemp^0,c
 17601  01736E  0EF8               	movlw	-8
 17602  017370  0060  F007  FFE3   	movff	btemp,plusw1
 17603  017376  0EF9               	movlw	-7
 17604  017378  50E3               	movf	plusw1,w,c
 17605  01737A  34E8               	rlcf	wreg,w,c
 17606  01737C  6E01               	movwf	btemp^0,c
 17607  01737E  0EF9               	movlw	-7
 17608  017380  0060  F007  FFE3   	movff	btemp,plusw1
 17609                           
 17610                           ;stkvar	_counter @ sp[(-4)+3]
 17611  017386  0EFF               	movlw	-1
 17612  017388                     L16:
 17613  017388  2AE3               	incf	plusw1,f,c
 17614                           
 17615                           ;stkvar	_divisor @ sp[(-4)+-4]
 17616  01738A  0EF9               	movlw	-7
 17617  01738C  AEE3               	btfss	plusw1,7,c
 17618  01738E  D7EA               	goto	l7706
 17619  017390                     u6260:
 17620                           
 17621                           ;stkvar	_quotient @ sp[(-4)+0]
 17622  017390  0EFC               	movlw	-4
 17623  017392  50E3               	movf	plusw1,w,c
 17624  017394  90D8               	bcf	status,0,c
 17625  017396  34E8               	rlcf	wreg,w,c
 17626  017398  6E01               	movwf	btemp^0,c
 17627  01739A  0EFC               	movlw	-4
 17628  01739C  0060  F007  FFE3   	movff	btemp,plusw1
 17629  0173A2  0EFD               	movlw	-3
 17630  0173A4  50E3               	movf	plusw1,w,c
 17631  0173A6  34E8               	rlcf	wreg,w,c
 17632  0173A8  6E01               	movwf	btemp^0,c
 17633  0173AA  0EFD               	movlw	-3
 17634  0173AC  0060  F007  FFE3   	movff	btemp,plusw1
 17635                           
 17636                           ;stkvar	_divisor @ sp[(-4)+-4]
 17637  0173B2  0EF8               	movlw	-8
 17638  0173B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17639  0173BA  0EF9               	movlw	-7
 17640  0173BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17641                           
 17642                           ;stkvar	_dividend @ sp[(-4)+-2]
 17643  0173C2  0EFA               	movlw	-6
 17644  0173C4  006F FF8C  F009    	movff	plusw1,btemp+8
 17645  0173CA  0EFB               	movlw	-5
 17646  0173CC  006F FF8C  F00A    	movff	plusw1,btemp+9
 17647  0173D2  500B               	movf	(btemp+10)^0,w,c
 17648  0173D4  5C09               	subwf	(btemp+8)^0,w,c
 17649  0173D6  500C               	movf	(btemp+11)^0,w,c
 17650  0173D8  580A               	subwfb	(btemp+9)^0,w,c
 17651  0173DA  A0D8               	btfss	status,0,c
 17652  0173DC  D016               	goto	l7720
 17653                           
 17654                           ;stkvar	_divisor @ sp[(-4)+-4]
 17655                           ;stkvar	_dividend @ sp[(-4)+-2]
 17656  0173DE  0EFA               	movlw	-6
 17657  0173E0  50E3               	movf	plusw1,w,c
 17658  0173E2  6E01               	movwf	btemp^0,c
 17659  0173E4  0EF8               	movlw	-8
 17660  0173E6  50E3               	movf	plusw1,w,c
 17661  0173E8  5E01               	subwf	btemp^0,f,c
 17662  0173EA  0EFA               	movlw	-6
 17663  0173EC  0060  F007  FFE3   	movff	btemp,plusw1
 17664  0173F2  0EFB               	movlw	-5
 17665  0173F4  50E3               	movf	plusw1,w,c
 17666  0173F6  6E01               	movwf	btemp^0,c
 17667  0173F8  0EF9               	movlw	-7
 17668  0173FA  50E3               	movf	plusw1,w,c
 17669  0173FC  5A01               	subwfb	btemp^0,f,c
 17670  0173FE  0EFB               	movlw	-5
 17671  017400  0060  F007  FFE3   	movff	btemp,plusw1
 17672                           
 17673                           ;stkvar	_quotient @ sp[(-4)+0]
 17674  017406  0EFC               	movlw	-4
 17675  017408  80E3               	bsf	plusw1,0,c
 17676  01740A                     l7720:
 17677                           
 17678                           ;stkvar	_divisor @ sp[(-4)+-4]
 17679  01740A  90D8               	bcf	status,0,c
 17680  01740C  0EF9               	movlw	-7
 17681  01740E  32E3               	rrcf	plusw1,f,c
 17682  017410  0EF8               	movlw	-8
 17683  017412  32E3               	rrcf	plusw1,f,c
 17684                           
 17685                           ;stkvar	_counter @ sp[(-4)+3]
 17686  017414  0EFF               	movlw	-1
 17687  017416  50E3               	movf	plusw1,w,c
 17688  017418  6E01               	movwf	btemp^0,c
 17689  01741A  0E01               	movlw	1
 17690  01741C  5E01               	subwf	btemp^0,f,c
 17691  01741E  0EFF               	movlw	-1
 17692  017420  0060  F007  FFE3   	movff	btemp,plusw1
 17693  017426  A4D8               	btfss	status,2,c
 17694  017428  D7B3               	goto	u6260
 17695  01742A                     u6280:
 17696                           
 17697                           ;stkvar	_sign @ sp[(-4)+2]
 17698  01742A  0EFE               	movlw	-2
 17699  01742C  50E3               	movf	plusw1,w,c
 17700  01742E  B4D8               	btfsc	status,2,c
 17701  017430  D006               	goto	l7728
 17702                           
 17703                           ;stkvar	_quotient @ sp[(-4)+0]
 17704                           ;stkvar	_quotient @ sp[(-4)+0]
 17705  017432  0EFC               	movlw	-4
 17706  017434  6CE3               	negf	plusw1,c
 17707  017436  0EFD               	movlw	-3
 17708  017438  1EE3               	comf	plusw1,f,c
 17709  01743A  B0D8               	btfsc	status,0,c
 17710  01743C  2AE3               	incf	plusw1,f,c
 17711  01743E                     l7728:
 17712                           
 17713                           ;stkvar	_quotient @ sp[(-4)+0]
 17714  01743E  0EFC               	movlw	-4
 17715  017440  006F FF8C  F001    	movff	plusw1,btemp
 17716  017446  0EFD               	movlw	-3
 17717  017448  006F FF8C  F002    	movff	plusw1,btemp+1
 17718                           
 17719                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17720  01744E  0EF8               	movlw	248
 17721  017450  26E1               	addwf	fsr1l,f,c
 17722  017452  0EFF               	movlw	255
 17723  017454  22E2               	addwfc	fsr1h,f,c
 17724  017456  0012               	return		;funcret
 17725  017458                     __end_of___awdiv:
 17726                           	opt callstack 0
 17727                           
 17728 ;; *************** function _dtoa *****************
 17729 ;; Defined at:
 17730 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17731 ;; Parameters:    Size  Location     Type
 17732 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17733 ;;		 -> f(6), NULL(0), 
 17734 ;;  d               8  [STACK] long long 
 17735 ;; Auto vars:     Size  Location     Type
 17736 ;;  n               8  [STACK] long long 
 17737 ;;  i               2  [STACK] int 
 17738 ;;  s               2  [STACK] int 
 17739 ;;  w               2  [STACK] int 
 17740 ;;  p               2  [STACK] int 
 17741 ;; Return value:  Size  Location     Type
 17742 ;;                  2  [STACK] int 
 17743 ;; Registers used:
 17744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17745 ;; Tracked objects:
 17746 ;;		On entry : 0/0
 17747 ;;		On exit  : 0/0
 17748 ;;		Unchanged: 0/0
 17749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17754 ;;Total ram usage:        0 bytes
 17755 ;; Hardware stack levels used:    1
 17756 ;; Hardware stack levels required when called:   20
 17757 ;; This function calls:
 17758 ;;		___aodiv
 17759 ;;		___aomod
 17760 ;;		_abs
 17761 ;;		_pad
 17762 ;; This function is called by:
 17763 ;;		_vfpfcnvrt
 17764 ;; This function uses a reentrant model
 17765 ;;
 17766                           
 17767                           	psect	text63
 17768  0146D0                     __ptext63:
 17769                           	opt callstack 0
 17770  0146D0                     _dtoa:
 17771                           	opt callstack 0
 17772                           
 17773                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17774  0146D0  0E12               	movlw	18
 17775  0146D2  26E1               	addwf	fsr1l,f,c
 17776  0146D4  0E00               	movlw	0
 17777  0146D6  22E2               	addwfc	fsr1h,f,c
 17778                           
 17779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17780                           ;stkvar	_d @ sp[(-18)+-10]
 17781                           
 17782                           ;incstack = 0
 17783 ;; hardware stack exceeded
 17784  0146D8  0EE4               	movlw	228
 17785  0146DA  24E1               	addwf	fsr1l,w,c
 17786  0146DC  6ED9               	movwf	fsr2l,c
 17787  0146DE  0EFF               	movlw	255
 17788  0146E0  20E2               	addwfc	fsr1h,w,c
 17789  0146E2  6EDA               	movwf	fsr2h,c
 17790                           
 17791                           ;stkvar	_n @ sp[(-18)+2]
 17792  0146E4  0E08               	movlw	8
 17793  0146E6  6E01               	movwf	btemp^0,c
 17794  0146E8  0EF0               	movlw	-16
 17795  0146EA                     us950999:
 17796  0146EA  006F FF7B FFE3     	movff	postinc2,plusw1
 17797  0146F0  28E8               	incf	wreg,w,c
 17798  0146F2  2E01               	decfsz	btemp^0,f,c
 17799  0146F4  D7FA               	bra	us950999
 17800                           
 17801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17802                           ;stkvar	_n @ sp[(-18)+2]
 17803  0146F6  0EF7               	movlw	-9
 17804  0146F8  AEE3               	btfss	plusw1,7,c
 17805  0146FA  D002               	goto	u9510
 17806  0146FC  0E01               	movlw	1
 17807  0146FE  D001               	goto	u9520
 17808  014700                     u9510:
 17809  014700  0E00               	movlw	0
 17810  014702                     u9520:
 17811  014702  6E0B               	movwf	(btemp+10)^0,c
 17812  014704  6A0C               	clrf	(btemp+11)^0,c
 17813                           
 17814                           ;stkvar	_s @ sp[(-18)+12]
 17815  014706  0EFA               	movlw	-6
 17816  014708  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17817  01470E  0EFB               	movlw	-5
 17818  014710  0060  F033  FFE3   	movff	btemp+11,plusw1
 17819                           
 17820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17821                           ;stkvar	_s @ sp[(-18)+12]
 17822  014716  0EFA               	movlw	-6
 17823  014718  006F FF8C  F001    	movff	plusw1,btemp
 17824  01471E  0EFB               	movlw	-5
 17825  014720  50E3               	movf	plusw1,w,c
 17826  014722  1001               	iorwf	btemp^0,w,c
 17827  014724  B4D8               	btfsc	status,2,c
 17828  014726  D025               	goto	u9540
 17829                           
 17830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17831                           ;stkvar	_n @ sp[(-18)+2]
 17832                           ;stkvar	_n @ sp[(-18)+2]
 17833  014728  0EF0               	movlw	-16
 17834  01472A  6CE3               	negf	plusw1,c
 17835  01472C  0EF1               	movlw	-15
 17836  01472E  1EE3               	comf	plusw1,f,c
 17837  014730  0EF2               	movlw	-14
 17838  014732  1EE3               	comf	plusw1,f,c
 17839  014734  0EF3               	movlw	-13
 17840  014736  1EE3               	comf	plusw1,f,c
 17841  014738  0EF4               	movlw	-12
 17842  01473A  1EE3               	comf	plusw1,f,c
 17843  01473C  0EF5               	movlw	-11
 17844  01473E  1EE3               	comf	plusw1,f,c
 17845  014740  0EF6               	movlw	-10
 17846  014742  1EE3               	comf	plusw1,f,c
 17847  014744  0EF7               	movlw	-9
 17848  014746  1EE3               	comf	plusw1,f,c
 17849  014748  E314               	bnc	u9540
 17850  01474A  0EF1               	movlw	-15
 17851  01474C  2AE3               	incf	plusw1,f,c
 17852  01474E  E311               	bnc	u9540
 17853  014750  0EF2               	movlw	-14
 17854  014752  2AE3               	incf	plusw1,f,c
 17855  014754  E30E               	bnc	u9540
 17856  014756  0EF3               	movlw	-13
 17857  014758  2AE3               	incf	plusw1,f,c
 17858  01475A  E30B               	bnc	u9540
 17859  01475C  0EF4               	movlw	-12
 17860  01475E  2AE3               	incf	plusw1,f,c
 17861  014760  E308               	bnc	u9540
 17862  014762  0EF5               	movlw	-11
 17863  014764  2AE3               	incf	plusw1,f,c
 17864  014766  E305               	bnc	u9540
 17865  014768  0EF6               	movlw	-10
 17866  01476A  2AE3               	incf	plusw1,f,c
 17867  01476C  E302               	bnc	u9540
 17868  01476E  0EF7               	movlw	-9
 17869  014770  2AE3               	incf	plusw1,f,c
 17870  014772                     u9540:
 17871                           
 17872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17873  014772  AE24               	btfss	(_prec+1)^0,7,c
 17874                           
 17875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17876  014774  9225               	bcf	_flags^0,1,c
 17877                           
 17878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17879  014776  BE24               	btfsc	(_prec+1)^0,7,c
 17880  014778  D005               	goto	u9560
 17881  01477A  5024               	movf	(_prec+1)^0,w,c
 17882  01477C  E110               	bnz	l10568
 17883  01477E  0423               	decf	_prec^0,w,c
 17884  014780  B0D8               	btfsc	status,0,c
 17885  014782  D00D               	goto	l10568
 17886  014784                     u9560:
 17887  014784  0E01               	movlw	1
 17888  014786  6E0B               	movwf	(btemp+10)^0,c
 17889  014788  0E00               	movlw	0
 17890  01478A  6E0C               	movwf	(btemp+11)^0,c
 17891                           
 17892                           ;stkvar	_p @ sp[(-18)+16]
 17893  01478C  0EFE               	movlw	-2
 17894  01478E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17895  014794  0EFF               	movlw	-1
 17896  014796  0060  F033  FFE3   	movff	btemp+11,plusw1
 17897  01479C  D008               	goto	l2019
 17898  01479E                     l10568:
 17899                           
 17900                           ;stkvar	_p @ sp[(-18)+16]
 17901  01479E  0EFE               	movlw	-2
 17902  0147A0  0060  F08F  FFE3   	movff	_prec,plusw1
 17903  0147A6  0EFF               	movlw	-1
 17904  0147A8  0060  F093  FFE3   	movff	_prec+1,plusw1
 17905  0147AE                     l2019:
 17906                           
 17907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17908                           ;stkvar	_w @ sp[(-18)+14]
 17909  0147AE  0EFC               	movlw	-4
 17910  0147B0  0060  F087  FFE3   	movff	_width,plusw1
 17911  0147B6  0EFD               	movlw	-3
 17912  0147B8  0060  F08B  FFE3   	movff	_width+1,plusw1
 17913                           
 17914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17915                           ;stkvar	_s @ sp[(-18)+12]
 17916  0147BE  0EFA               	movlw	-6
 17917  0147C0  006F FF8C  F001    	movff	plusw1,btemp
 17918  0147C6  0EFB               	movlw	-5
 17919  0147C8  50E3               	movf	plusw1,w,c
 17920  0147CA  1001               	iorwf	btemp^0,w,c
 17921  0147CC  A4D8               	btfss	status,2,c
 17922  0147CE  D002               	goto	u9580
 17923  0147D0  A425               	btfss	_flags^0,2,c
 17924  0147D2  D00A               	goto	l10576
 17925  0147D4                     u9580:
 17926                           
 17927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17928                           ;stkvar	_w @ sp[(-18)+14]
 17929  0147D4  50E1               	movf	fsr1l,w,c
 17930  0147D6  0FFC               	addlw	-4
 17931  0147D8  6ED9               	movwf	fsr2l,c
 17932  0147DA  50E2               	movf	fsr1h,w,c
 17933  0147DC  6EDA               	movwf	fsr2h,c
 17934  0147DE  0EFF               	movlw	255
 17935  0147E0  22DA               	addwfc	fsr2h,f,c
 17936  0147E2  06DE               	decf	postinc2,f,c
 17937  0147E4  0E00               	movlw	0
 17938  0147E6  5ADD               	subwfb	postdec2,f,c
 17939  0147E8                     l10576:
 17940                           
 17941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17942  0147E8  0E4F               	movlw	79
 17943  0147EA  6E0B               	movwf	(btemp+10)^0,c
 17944  0147EC  0E00               	movlw	0
 17945  0147EE  6E0C               	movwf	(btemp+11)^0,c
 17946                           
 17947                           ;stkvar	_i @ sp[(-18)+10]
 17948  0147F0  0EF8               	movlw	-8
 17949  0147F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17950  0147F8  0EF9               	movlw	-7
 17951  0147FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17952                           
 17953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17954  014800  0103               	movlb	3	; () banked
 17955  014802  6BE3               	clrf	(_dbuf+79)& (0+255),b
 17956                           
 17957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17958  014804  D109               	goto	l10590
 17959  014806                     l10580:
 17960                           
 17961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17962                           ;stkvar	_i @ sp[(-18)+10]
 17963  014806  50E1               	movf	fsr1l,w,c
 17964  014808  0FF8               	addlw	-8
 17965  01480A  6ED9               	movwf	fsr2l,c
 17966  01480C  50E2               	movf	fsr1h,w,c
 17967  01480E  6EDA               	movwf	fsr2h,c
 17968  014810  0EFF               	movlw	255
 17969  014812  22DA               	addwfc	fsr2h,f,c
 17970  014814  06DE               	decf	postinc2,f,c
 17971  014816  0E00               	movlw	0
 17972  014818  5ADD               	subwfb	postdec2,f,c
 17973                           
 17974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17975  01481A  0E0A               	movlw	10
 17976  01481C  6EE6               	movwf	postinc1,c
 17977  01481E  0E00               	movlw	0
 17978  014820  6EE6               	movwf	postinc1,c
 17979  014822  0E00               	movlw	0
 17980  014824  6EE6               	movwf	postinc1,c
 17981  014826  0E00               	movlw	0
 17982  014828  6EE6               	movwf	postinc1,c
 17983  01482A  0E00               	movlw	0
 17984  01482C  6EE6               	movwf	postinc1,c
 17985  01482E  0E00               	movlw	0
 17986  014830  6EE6               	movwf	postinc1,c
 17987  014832  0E00               	movlw	0
 17988  014834  6EE6               	movwf	postinc1,c
 17989  014836  0E00               	movlw	0
 17990  014838  6EE6               	movwf	postinc1,c
 17991                           
 17992                           ;stkvar	_n @ sp[(-26)+2]
 17993  01483A  50E1               	movf	fsr1l,w,c
 17994  01483C  0FE8               	addlw	-24
 17995  01483E  6ED9               	movwf	fsr2l,c
 17996  014840  50E2               	movf	fsr1h,w,c
 17997  014842  6EDA               	movwf	fsr2h,c
 17998  014844  0EFF               	movlw	255
 17999  014846  22DA               	addwfc	fsr2h,f,c
 18000  014848  006F FF7B FFE6     	movff	postinc2,postinc1
 18001  01484E  006F FF7B FFE6     	movff	postinc2,postinc1
 18002  014854  006F FF7B FFE6     	movff	postinc2,postinc1
 18003  01485A  006F FF7B FFE6     	movff	postinc2,postinc1
 18004  014860  006F FF7B FFE6     	movff	postinc2,postinc1
 18005  014866  006F FF7B FFE6     	movff	postinc2,postinc1
 18006  01486C  006F FF7B FFE6     	movff	postinc2,postinc1
 18007  014872  006F FF7B FFE6     	movff	postinc2,postinc1
 18008  014878  ECF7  F0AF         	call	___aomod	;wreg free
 18009  01487C  52E5               	movf	postdec1,f,c
 18010  01487E  006F FF9C  F018    	movff	indf1,btemp+23
 18011  014884  52E5               	movf	postdec1,f,c
 18012  014886  006F FF9C  F017    	movff	indf1,btemp+22
 18013  01488C  52E5               	movf	postdec1,f,c
 18014  01488E  006F FF9C  F016    	movff	indf1,btemp+21
 18015  014894  52E5               	movf	postdec1,f,c
 18016  014896  006F FF9C  F015    	movff	indf1,btemp+20
 18017  01489C  52E5               	movf	postdec1,f,c
 18018  01489E  006F FF9C  F014    	movff	indf1,btemp+19
 18019  0148A4  52E5               	movf	postdec1,f,c
 18020  0148A6  006F FF9C  F013    	movff	indf1,btemp+18
 18021  0148AC  52E5               	movf	postdec1,f,c
 18022  0148AE  006F FF9C  F012    	movff	indf1,btemp+17
 18023  0148B4  52E5               	movf	postdec1,f,c
 18024  0148B6  006F FF9C  F011    	movff	indf1,btemp+16
 18025  0148BC  0EF8               	movlw	248
 18026  0148BE  26E1               	addwf	fsr1l,f,c
 18027  0148C0  0EFF               	movlw	255
 18028  0148C2  22E2               	addwfc	fsr1h,f,c
 18029  0148C4  0060  F044  F00B   	movff	btemp+16,btemp+10
 18030  0148CA  0060  F048  F00C   	movff	btemp+17,btemp+11
 18031  0148D0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18032  0148D6  0060  F033  FFE6   	movff	btemp+11,postinc1
 18033  0148DC  EC4C  F0C8         	call	_abs	;wreg free
 18034  0148E0  0E30               	movlw	48
 18035  0148E2  2601               	addwf	btemp^0,f,c
 18036                           
 18037                           ;stkvar	_i @ sp[(-18)+10]
 18038  0148E4  0EF8               	movlw	-8
 18039  0148E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18040  0148EC  0EF9               	movlw	-7
 18041  0148EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18042  0148F4  0E94               	movlw	low _dbuf
 18043  0148F6  240B               	addwf	(btemp+10)^0,w,c
 18044  0148F8  6ED9               	movwf	fsr2l,c
 18045  0148FA  0E03               	movlw	high _dbuf
 18046  0148FC  200C               	addwfc	(btemp+11)^0,w,c
 18047  0148FE  6EDA               	movwf	fsr2h,c
 18048  014900  0060  F007  FFDF   	movff	btemp,indf2
 18049                           
 18050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18051                           ;stkvar	_p @ sp[(-18)+16]
 18052  014906  50E1               	movf	fsr1l,w,c
 18053  014908  0FFE               	addlw	-2
 18054  01490A  6ED9               	movwf	fsr2l,c
 18055  01490C  50E2               	movf	fsr1h,w,c
 18056  01490E  6EDA               	movwf	fsr2h,c
 18057  014910  0EFF               	movlw	255
 18058  014912  22DA               	addwfc	fsr2h,f,c
 18059  014914  06DE               	decf	postinc2,f,c
 18060  014916  0E00               	movlw	0
 18061  014918  5ADD               	subwfb	postdec2,f,c
 18062                           
 18063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18064                           ;stkvar	_w @ sp[(-18)+14]
 18065  01491A  50E1               	movf	fsr1l,w,c
 18066  01491C  0FFC               	addlw	-4
 18067  01491E  6ED9               	movwf	fsr2l,c
 18068  014920  50E2               	movf	fsr1h,w,c
 18069  014922  6EDA               	movwf	fsr2h,c
 18070  014924  0EFF               	movlw	255
 18071  014926  22DA               	addwfc	fsr2h,f,c
 18072  014928  06DE               	decf	postinc2,f,c
 18073  01492A  0E00               	movlw	0
 18074  01492C  5ADD               	subwfb	postdec2,f,c
 18075                           
 18076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18077  01492E  0E0A               	movlw	10
 18078  014930  6EE6               	movwf	postinc1,c
 18079  014932  0E00               	movlw	0
 18080  014934  6EE6               	movwf	postinc1,c
 18081  014936  0E00               	movlw	0
 18082  014938  6EE6               	movwf	postinc1,c
 18083  01493A  0E00               	movlw	0
 18084  01493C  6EE6               	movwf	postinc1,c
 18085  01493E  0E00               	movlw	0
 18086  014940  6EE6               	movwf	postinc1,c
 18087  014942  0E00               	movlw	0
 18088  014944  6EE6               	movwf	postinc1,c
 18089  014946  0E00               	movlw	0
 18090  014948  6EE6               	movwf	postinc1,c
 18091  01494A  0E00               	movlw	0
 18092  01494C  6EE6               	movwf	postinc1,c
 18093                           
 18094                           ;stkvar	_n @ sp[(-26)+2]
 18095  01494E  50E1               	movf	fsr1l,w,c
 18096  014950  0FE8               	addlw	-24
 18097  014952  6ED9               	movwf	fsr2l,c
 18098  014954  50E2               	movf	fsr1h,w,c
 18099  014956  6EDA               	movwf	fsr2h,c
 18100  014958  0EFF               	movlw	255
 18101  01495A  22DA               	addwfc	fsr2h,f,c
 18102  01495C  006F FF7B FFE6     	movff	postinc2,postinc1
 18103  014962  006F FF7B FFE6     	movff	postinc2,postinc1
 18104  014968  006F FF7B FFE6     	movff	postinc2,postinc1
 18105  01496E  006F FF7B FFE6     	movff	postinc2,postinc1
 18106  014974  006F FF7B FFE6     	movff	postinc2,postinc1
 18107  01497A  006F FF7B FFE6     	movff	postinc2,postinc1
 18108  014980  006F FF7B FFE6     	movff	postinc2,postinc1
 18109  014986  006F FF7B FFE6     	movff	postinc2,postinc1
 18110  01498C  EC7D  F0AD         	call	___aodiv	;wreg free
 18111  014990  52E5               	movf	postdec1,f,c
 18112  014992  006F FF9C  F018    	movff	indf1,btemp+23
 18113  014998  52E5               	movf	postdec1,f,c
 18114  01499A  006F FF9C  F017    	movff	indf1,btemp+22
 18115  0149A0  52E5               	movf	postdec1,f,c
 18116  0149A2  006F FF9C  F016    	movff	indf1,btemp+21
 18117  0149A8  52E5               	movf	postdec1,f,c
 18118  0149AA  006F FF9C  F015    	movff	indf1,btemp+20
 18119  0149B0  52E5               	movf	postdec1,f,c
 18120  0149B2  006F FF9C  F014    	movff	indf1,btemp+19
 18121  0149B8  52E5               	movf	postdec1,f,c
 18122  0149BA  006F FF9C  F013    	movff	indf1,btemp+18
 18123  0149C0  52E5               	movf	postdec1,f,c
 18124  0149C2  006F FF9C  F012    	movff	indf1,btemp+17
 18125  0149C8  52E5               	movf	postdec1,f,c
 18126  0149CA  006F FF9C  F011    	movff	indf1,btemp+16
 18127  0149D0  0EF8               	movlw	248
 18128  0149D2  26E1               	addwf	fsr1l,f,c
 18129  0149D4  0EFF               	movlw	255
 18130  0149D6  22E2               	addwfc	fsr1h,f,c
 18131                           
 18132                           ;stkvar	_n @ sp[(-18)+2]
 18133  0149D8  0EF0               	movlw	-16
 18134  0149DA  0060  F047  FFE3   	movff	btemp+16,plusw1
 18135  0149E0  0EF1               	movlw	-15
 18136  0149E2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18137  0149E8  0EF2               	movlw	-14
 18138  0149EA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18139  0149F0  0EF3               	movlw	-13
 18140  0149F2  0060  F053  FFE3   	movff	btemp+19,plusw1
 18141  0149F8  0EF4               	movlw	-12
 18142  0149FA  0060  F057  FFE3   	movff	btemp+20,plusw1
 18143  014A00  0EF5               	movlw	-11
 18144  014A02  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18145  014A08  0EF6               	movlw	-10
 18146  014A0A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18147  014A10  0EF7               	movlw	-9
 18148  014A12  0060  F063  FFE3   	movff	btemp+23,plusw1
 18149  014A18                     l10590:
 18150                           
 18151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18152                           ;stkvar	_i @ sp[(-18)+10]
 18153  014A18  0EF9               	movlw	-7
 18154  014A1A  BEE3               	btfsc	plusw1,7,c
 18155  014A1C  D036               	goto	u9630
 18156  014A1E  0EF9               	movlw	-7
 18157  014A20  50E3               	movf	plusw1,w,c
 18158  014A22  E104               	bnz	u9590
 18159  014A24  0EF8               	movlw	-8
 18160  014A26  04E3               	decf	plusw1,w,c
 18161  014A28  A0D8               	btfss	status,0,c
 18162  014A2A  D02F               	goto	u9630
 18163  014A2C                     u9590:
 18164                           
 18165                           ;stkvar	_n @ sp[(-18)+2]
 18166  014A2C  0EF0               	movlw	-16
 18167  014A2E  50E3               	movf	plusw1,w,c
 18168  014A30  E115               	bnz	u9601
 18169  014A32  0EF1               	movlw	-15
 18170  014A34  50E3               	movf	plusw1,w,c
 18171  014A36  E112               	bnz	u9601
 18172  014A38  0EF2               	movlw	-14
 18173  014A3A  50E3               	movf	plusw1,w,c
 18174  014A3C  E10F               	bnz	u9601
 18175  014A3E  0EF3               	movlw	-13
 18176  014A40  50E3               	movf	plusw1,w,c
 18177  014A42  E10C               	bnz	u9601
 18178  014A44  0EF4               	movlw	-12
 18179  014A46  50E3               	movf	plusw1,w,c
 18180  014A48  E109               	bnz	u9601
 18181  014A4A  0EF5               	movlw	-11
 18182  014A4C  50E3               	movf	plusw1,w,c
 18183  014A4E  E106               	bnz	u9601
 18184  014A50  0EF6               	movlw	-10
 18185  014A52  50E3               	movf	plusw1,w,c
 18186  014A54  E103               	bnz	u9601
 18187  014A56  0EF7               	movlw	-9
 18188  014A58  50E3               	movf	plusw1,w,c
 18189  014A5A  A4D8               	btfss	status,2,c
 18190  014A5C                     u9601:
 18191  014A5C  D6D4               	goto	l10580
 18192                           
 18193                           ;stkvar	_p @ sp[(-18)+16]
 18194  014A5E  0EFF               	movlw	-1
 18195  014A60  BEE3               	btfsc	plusw1,7,c
 18196  014A62  D007               	goto	u9610
 18197  014A64  0EFF               	movlw	-1
 18198  014A66  50E3               	movf	plusw1,w,c
 18199  014A68  E103               	bnz	u9611
 18200  014A6A  0EFE               	movlw	-2
 18201  014A6C  04E3               	decf	plusw1,w,c
 18202  014A6E  B0D8               	btfsc	status,0,c
 18203  014A70                     u9611:
 18204  014A70  D6CA               	goto	l10580
 18205  014A72                     u9610:
 18206                           
 18207                           ;stkvar	_w @ sp[(-18)+14]
 18208  014A72  0EFD               	movlw	-3
 18209  014A74  BEE3               	btfsc	plusw1,7,c
 18210  014A76  D009               	goto	u9630
 18211  014A78  0EFD               	movlw	-3
 18212  014A7A  50E3               	movf	plusw1,w,c
 18213  014A7C  E104               	bnz	u9620
 18214  014A7E  0EFC               	movlw	-4
 18215  014A80  04E3               	decf	plusw1,w,c
 18216  014A82  A0D8               	btfss	status,0,c
 18217  014A84  D002               	goto	u9630
 18218  014A86                     u9620:
 18219  014A86  B225               	btfsc	_flags^0,1,c
 18220  014A88  D6BE               	goto	l10580
 18221  014A8A                     u9630:
 18222                           
 18223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18224                           ;stkvar	_s @ sp[(-18)+12]
 18225  014A8A  0EFA               	movlw	-6
 18226  014A8C  006F FF8C  F001    	movff	plusw1,btemp
 18227  014A92  0EFB               	movlw	-5
 18228  014A94  50E3               	movf	plusw1,w,c
 18229  014A96  1001               	iorwf	btemp^0,w,c
 18230  014A98  A4D8               	btfss	status,2,c
 18231  014A9A  D002               	goto	u9650
 18232  014A9C  A425               	btfss	_flags^0,2,c
 18233  014A9E  D033               	goto	l10614
 18234  014AA0                     u9650:
 18235                           
 18236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18237                           ;stkvar	_i @ sp[(-18)+10]
 18238  014AA0  50E1               	movf	fsr1l,w,c
 18239  014AA2  0FF8               	addlw	-8
 18240  014AA4  6ED9               	movwf	fsr2l,c
 18241  014AA6  50E2               	movf	fsr1h,w,c
 18242  014AA8  6EDA               	movwf	fsr2h,c
 18243  014AAA  0EFF               	movlw	255
 18244  014AAC  22DA               	addwfc	fsr2h,f,c
 18245  014AAE  06DE               	decf	postinc2,f,c
 18246  014AB0  0E00               	movlw	0
 18247  014AB2  5ADD               	subwfb	postdec2,f,c
 18248                           
 18249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18250                           ;stkvar	_s @ sp[(-18)+12]
 18251  014AB4  0EFA               	movlw	-6
 18252  014AB6  006F FF8C  F001    	movff	plusw1,btemp
 18253  014ABC  0EFB               	movlw	-5
 18254  014ABE  50E3               	movf	plusw1,w,c
 18255  014AC0  1001               	iorwf	btemp^0,w,c
 18256  014AC2  A4D8               	btfss	status,2,c
 18257  014AC4  D002               	goto	l10610
 18258  014AC6  0E2B               	movlw	43
 18259  014AC8  D001               	goto	L17
 18260  014ACA                     l10610:
 18261  014ACA  0E2D               	movlw	45
 18262  014ACC                     L17:
 18263  014ACC  6E0B               	movwf	(btemp+10)^0,c
 18264  014ACE  0E00               	movlw	0
 18265  014AD0  6E0C               	movwf	(btemp+11)^0,c
 18266                           
 18267                           ;stkvar	_dtoa$5120 @ sp[(-18)+0]
 18268  014AD2  0EEE               	movlw	-18
 18269  014AD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18270  014ADA  0EEF               	movlw	-17
 18271  014ADC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18272                           
 18273                           ;stkvar	_dtoa$5120 @ sp[(-18)+0]
 18274                           ;stkvar	_i @ sp[(-18)+10]
 18275  014AE2  0EF8               	movlw	-8
 18276  014AE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18277  014AEA  0EF9               	movlw	-7
 18278  014AEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18279  014AF2  0E94               	movlw	low _dbuf
 18280  014AF4  240B               	addwf	(btemp+10)^0,w,c
 18281  014AF6  6ED9               	movwf	fsr2l,c
 18282  014AF8  0E03               	movlw	high _dbuf
 18283  014AFA  200C               	addwfc	(btemp+11)^0,w,c
 18284  014AFC  6EDA               	movwf	fsr2h,c
 18285  014AFE  0EEE               	movlw	-18
 18286  014B00  006F FF8F FFDF     	movff	plusw1,indf2
 18287  014B06                     l10614:
 18288                           
 18289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18290                           ;stkvar	_w @ sp[(-18)+14]
 18291  014B06  0EFC               	movlw	-4
 18292  014B08  006F FF8F FFE6     	movff	plusw1,postinc1
 18293  014B0E  006F FF8F FFE6     	movff	plusw1,postinc1
 18294                           
 18295                           ;stkvar	_i @ sp[(-20)+10]
 18296  014B14  0E94               	movlw	low _dbuf
 18297  014B16  6E0B               	movwf	(btemp+10)^0,c
 18298  014B18  0E03               	movlw	high _dbuf
 18299  014B1A  6E0C               	movwf	(btemp+11)^0,c
 18300  014B1C  0EF6               	movlw	-10
 18301  014B1E  50E3               	movf	plusw1,w,c
 18302  014B20  260B               	addwf	(btemp+10)^0,f,c
 18303  014B22  0EF7               	movlw	-9
 18304  014B24  50E3               	movf	plusw1,w,c
 18305  014B26  220C               	addwfc	(btemp+11)^0,f,c
 18306  014B28  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18307  014B2E  0060  F033  FFE6   	movff	btemp+11,postinc1
 18308                           
 18309                           ;stkvar	_fp @ sp[(-22)+-2]
 18310  014B34  0EE8               	movlw	-24
 18311  014B36  006F FF8F FFE6     	movff	plusw1,postinc1
 18312  014B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18313  014B42  EC75  F0BC         	call	_pad	;wreg free
 18314                           
 18315                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18316  014B46  0EE4               	movlw	228
 18317  014B48  26E1               	addwf	fsr1l,f,c
 18318  014B4A  0EFF               	movlw	255
 18319  014B4C  22E2               	addwfc	fsr1h,f,c
 18320  014B4E  0012               	return		;funcret
 18321  014B50                     __end_of_dtoa:
 18322                           	opt callstack 0
 18323                           
 18324 ;; *************** function _abs *****************
 18325 ;; Defined at:
 18326 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18327 ;; Parameters:    Size  Location     Type
 18328 ;;  a               2  [STACK] int 
 18329 ;; Auto vars:     Size  Location     Type
 18330 ;;		None
 18331 ;; Return value:  Size  Location     Type
 18332 ;;                  2  [STACK] int 
 18333 ;; Registers used:
 18334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18335 ;; Tracked objects:
 18336 ;;		On entry : 0/3
 18337 ;;		On exit  : 0/0
 18338 ;;		Unchanged: 0/0
 18339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18344 ;;Total ram usage:        0 bytes
 18345 ;; Hardware stack levels used:    1
 18346 ;; Hardware stack levels required when called:   15
 18347 ;; This function calls:
 18348 ;;		Nothing
 18349 ;; This function is called by:
 18350 ;;		_dtoa
 18351 ;; This function uses a reentrant model
 18352 ;;
 18353                           
 18354                           	psect	text64
 18355  019098                     __ptext64:
 18356                           	opt callstack 0
 18357  019098                     _abs:
 18358                           	opt callstack 0
 18359                           
 18360                           ;stkvar	_a @ sp[(0)+-2]
 18361                           
 18362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18363                           ;incstack = 0
 18364 ;; hardware stack exceeded
 18365  019098  0EFF               	movlw	-1
 18366  01909A  BEE3               	btfsc	plusw1,7,c
 18367  01909C  D007               	goto	u5240
 18368  01909E  0EFF               	movlw	-1
 18369  0190A0  50E3               	movf	plusw1,w,c
 18370  0190A2  E112               	bnz	l7182
 18371  0190A4  0EFE               	movlw	-2
 18372  0190A6  04E3               	decf	plusw1,w,c
 18373  0190A8  B0D8               	btfsc	status,0,c
 18374  0190AA  D00E               	goto	l7182
 18375  0190AC                     u5240:
 18376                           
 18377                           ;stkvar	_a @ sp[(0)+-2]
 18378  0190AC  0EFE               	movlw	-2
 18379  0190AE  006F FF8C  F001    	movff	plusw1,btemp
 18380  0190B4  1E01               	comf	btemp^0,f,c
 18381  0190B6  0EFF               	movlw	-1
 18382  0190B8  006F FF8C  F002    	movff	plusw1,btemp+1
 18383  0190BE  1E02               	comf	(btemp+1)^0,f,c
 18384  0190C0  2A01               	incf	btemp^0,f,c
 18385  0190C2  B4D8               	btfsc	status,2,c
 18386  0190C4  2A02               	incf	(btemp+1)^0,f,c
 18387  0190C6  D008               	goto	l2922
 18388  0190C8                     l7182:
 18389                           
 18390                           ;stkvar	_a @ sp[(0)+-2]
 18391  0190C8  0EFE               	movlw	-2
 18392  0190CA  006F FF8C  F001    	movff	plusw1,btemp
 18393  0190D0  0EFF               	movlw	-1
 18394  0190D2  006F FF8C  F002    	movff	plusw1,btemp+1
 18395  0190D8                     l2922:
 18396                           
 18397                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18398  0190D8  52E5               	movf	postdec1,f,c
 18399  0190DA  52E5               	movf	postdec1,f,c
 18400  0190DC  0012               	return		;funcret
 18401  0190DE                     __end_of_abs:
 18402                           	opt callstack 0
 18403                           
 18404 ;; *************** function ___aomod *****************
 18405 ;; Defined at:
 18406 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18407 ;; Parameters:    Size  Location     Type
 18408 ;;  dividend        8  [STACK] long long 
 18409 ;;  divisor         8  [STACK] long long 
 18410 ;; Auto vars:     Size  Location     Type
 18411 ;;  sign            1  [STACK] unsigned char 
 18412 ;;  counter         1  [STACK] unsigned char 
 18413 ;; Return value:  Size  Location     Type
 18414 ;;                  8  [STACK] long long 
 18415 ;; Registers used:
 18416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18417 ;; Tracked objects:
 18418 ;;		On entry : 0/3
 18419 ;;		On exit  : 0/0
 18420 ;;		Unchanged: 0/0
 18421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18426 ;;Total ram usage:        0 bytes
 18427 ;; Hardware stack levels used:    1
 18428 ;; Hardware stack levels required when called:   15
 18429 ;; This function calls:
 18430 ;;		Nothing
 18431 ;; This function is called by:
 18432 ;;		_dtoa
 18433 ;; This function uses a reentrant model
 18434 ;;
 18435                           
 18436                           	psect	text65
 18437  015FEE                     __ptext65:
 18438                           	opt callstack 0
 18439  015FEE                     ___aomod:
 18440                           	opt callstack 0
 18441                           
 18442                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18443  015FEE  52E6               	movf	postinc1,f,c
 18444  015FF0  52E6               	movf	postinc1,f,c
 18445                           
 18446                           ;stkvar	_sign @ sp[(-2)+0]
 18447                           
 18448                           ;incstack = 0
 18449 ;; hardware stack exceeded
 18450  015FF2  0EFE               	movlw	-2
 18451  015FF4  6AE3               	clrf	plusw1,c
 18452                           
 18453                           ;stkvar	_dividend @ sp[(-2)+-8]
 18454  015FF6  0EFD               	movlw	-3
 18455  015FF8  AEE3               	btfss	plusw1,7,c
 18456  015FFA  D028               	goto	l7340
 18457                           
 18458                           ;stkvar	_dividend @ sp[(-2)+-8]
 18459                           ;stkvar	_dividend @ sp[(-2)+-8]
 18460  015FFC  0EF6               	movlw	-10
 18461  015FFE  6CE3               	negf	plusw1,c
 18462  016000  0EF7               	movlw	-9
 18463  016002  1EE3               	comf	plusw1,f,c
 18464  016004  0EF8               	movlw	-8
 18465  016006  1EE3               	comf	plusw1,f,c
 18466  016008  0EF9               	movlw	-7
 18467  01600A  1EE3               	comf	plusw1,f,c
 18468  01600C  0EFA               	movlw	-6
 18469  01600E  1EE3               	comf	plusw1,f,c
 18470  016010  0EFB               	movlw	-5
 18471  016012  1EE3               	comf	plusw1,f,c
 18472  016014  0EFC               	movlw	-4
 18473  016016  1EE3               	comf	plusw1,f,c
 18474  016018  0EFD               	movlw	-3
 18475  01601A  1EE3               	comf	plusw1,f,c
 18476  01601C  E314               	bnc	u5670
 18477  01601E  0EF7               	movlw	-9
 18478  016020  2AE3               	incf	plusw1,f,c
 18479  016022  E311               	bnc	u5670
 18480  016024  0EF8               	movlw	-8
 18481  016026  2AE3               	incf	plusw1,f,c
 18482  016028  E30E               	bnc	u5670
 18483  01602A  0EF9               	movlw	-7
 18484  01602C  2AE3               	incf	plusw1,f,c
 18485  01602E  E30B               	bnc	u5670
 18486  016030  0EFA               	movlw	-6
 18487  016032  2AE3               	incf	plusw1,f,c
 18488  016034  E308               	bnc	u5670
 18489  016036  0EFB               	movlw	-5
 18490  016038  2AE3               	incf	plusw1,f,c
 18491  01603A  E305               	bnc	u5670
 18492  01603C  0EFC               	movlw	-4
 18493  01603E  2AE3               	incf	plusw1,f,c
 18494  016040  E302               	bnc	u5670
 18495  016042  0EFD               	movlw	-3
 18496  016044  2AE3               	incf	plusw1,f,c
 18497  016046                     u5670:
 18498                           
 18499                           ;stkvar	_sign @ sp[(-2)+0]
 18500  016046  0EFE               	movlw	-2
 18501  016048  6AE3               	clrf	plusw1,c
 18502  01604A  2AE3               	incf	plusw1,f,c
 18503  01604C                     l7340:
 18504                           
 18505                           ;stkvar	_divisor @ sp[(-2)+-16]
 18506  01604C  0EF5               	movlw	-11
 18507  01604E  AEE3               	btfss	plusw1,7,c
 18508  016050  D025               	goto	u5690
 18509                           
 18510                           ;stkvar	_divisor @ sp[(-2)+-16]
 18511                           ;stkvar	_divisor @ sp[(-2)+-16]
 18512  016052  0EEE               	movlw	-18
 18513  016054  6CE3               	negf	plusw1,c
 18514  016056  0EEF               	movlw	-17
 18515  016058  1EE3               	comf	plusw1,f,c
 18516  01605A  0EF0               	movlw	-16
 18517  01605C  1EE3               	comf	plusw1,f,c
 18518  01605E  0EF1               	movlw	-15
 18519  016060  1EE3               	comf	plusw1,f,c
 18520  016062  0EF2               	movlw	-14
 18521  016064  1EE3               	comf	plusw1,f,c
 18522  016066  0EF3               	movlw	-13
 18523  016068  1EE3               	comf	plusw1,f,c
 18524  01606A  0EF4               	movlw	-12
 18525  01606C  1EE3               	comf	plusw1,f,c
 18526  01606E  0EF5               	movlw	-11
 18527  016070  1EE3               	comf	plusw1,f,c
 18528  016072  E314               	bnc	u5690
 18529  016074  0EEF               	movlw	-17
 18530  016076  2AE3               	incf	plusw1,f,c
 18531  016078  E311               	bnc	u5690
 18532  01607A  0EF0               	movlw	-16
 18533  01607C  2AE3               	incf	plusw1,f,c
 18534  01607E  E30E               	bnc	u5690
 18535  016080  0EF1               	movlw	-15
 18536  016082  2AE3               	incf	plusw1,f,c
 18537  016084  E30B               	bnc	u5690
 18538  016086  0EF2               	movlw	-14
 18539  016088  2AE3               	incf	plusw1,f,c
 18540  01608A  E308               	bnc	u5690
 18541  01608C  0EF3               	movlw	-13
 18542  01608E  2AE3               	incf	plusw1,f,c
 18543  016090  E305               	bnc	u5690
 18544  016092  0EF4               	movlw	-12
 18545  016094  2AE3               	incf	plusw1,f,c
 18546  016096  E302               	bnc	u5690
 18547  016098  0EF5               	movlw	-11
 18548  01609A  2AE3               	incf	plusw1,f,c
 18549  01609C                     u5690:
 18550                           
 18551                           ;stkvar	_divisor @ sp[(-2)+-16]
 18552  01609C  0EEE               	movlw	-18
 18553  01609E  50E3               	movf	plusw1,w,c
 18554  0160A0  E116               	bnz	u5700
 18555  0160A2  0EEF               	movlw	-17
 18556  0160A4  50E3               	movf	plusw1,w,c
 18557  0160A6  E113               	bnz	u5700
 18558  0160A8  0EF0               	movlw	-16
 18559  0160AA  50E3               	movf	plusw1,w,c
 18560  0160AC  E110               	bnz	u5700
 18561  0160AE  0EF1               	movlw	-15
 18562  0160B0  50E3               	movf	plusw1,w,c
 18563  0160B2  E10D               	bnz	u5700
 18564  0160B4  0EF2               	movlw	-14
 18565  0160B6  50E3               	movf	plusw1,w,c
 18566  0160B8  E10A               	bnz	u5700
 18567  0160BA  0EF3               	movlw	-13
 18568  0160BC  50E3               	movf	plusw1,w,c
 18569  0160BE  E107               	bnz	u5700
 18570  0160C0  0EF4               	movlw	-12
 18571  0160C2  50E3               	movf	plusw1,w,c
 18572  0160C4  E104               	bnz	u5700
 18573  0160C6  0EF5               	movlw	-11
 18574  0160C8  50E3               	movf	plusw1,w,c
 18575  0160CA  B4D8               	btfsc	status,2,c
 18576  0160CC  D075               	goto	u5730
 18577  0160CE                     u5700:
 18578                           
 18579                           ;stkvar	_counter @ sp[(-2)+1]
 18580  0160CE  0EFF               	movlw	-1
 18581  0160D0  6AE3               	clrf	plusw1,c
 18582  0160D2  D012               	goto	L18
 18583  0160D4                     l7348:
 18584                           
 18585                           ;stkvar	_divisor @ sp[(-2)+-16]
 18586  0160D4  90D8               	bcf	status,0,c
 18587  0160D6  0EEE               	movlw	-18
 18588  0160D8  36E3               	rlcf	plusw1,f,c
 18589  0160DA  0EEF               	movlw	-17
 18590  0160DC  36E3               	rlcf	plusw1,f,c
 18591  0160DE  0EF0               	movlw	-16
 18592  0160E0  36E3               	rlcf	plusw1,f,c
 18593  0160E2  0EF1               	movlw	-15
 18594  0160E4  36E3               	rlcf	plusw1,f,c
 18595  0160E6  0EF2               	movlw	-14
 18596  0160E8  36E3               	rlcf	plusw1,f,c
 18597  0160EA  0EF3               	movlw	-13
 18598  0160EC  36E3               	rlcf	plusw1,f,c
 18599  0160EE  0EF4               	movlw	-12
 18600  0160F0  36E3               	rlcf	plusw1,f,c
 18601  0160F2  0EF5               	movlw	-11
 18602  0160F4  36E3               	rlcf	plusw1,f,c
 18603                           
 18604                           ;stkvar	_counter @ sp[(-2)+1]
 18605  0160F6  0EFF               	movlw	-1
 18606  0160F8                     L18:
 18607  0160F8  2AE3               	incf	plusw1,f,c
 18608                           
 18609                           ;stkvar	_divisor @ sp[(-2)+-16]
 18610  0160FA  0EF5               	movlw	-11
 18611  0160FC  AEE3               	btfss	plusw1,7,c
 18612  0160FE  D7EA               	goto	l7348
 18613  016100                     u5710:
 18614                           
 18615                           ;stkvar	_divisor @ sp[(-2)+-16]
 18616                           ;stkvar	_dividend @ sp[(-2)+-8]
 18617  016100  50E1               	movf	fsr1l,w,c
 18618  016102  0FF6               	addlw	-10
 18619  016104  6ED9               	movwf	fsr2l,c
 18620  016106  50E2               	movf	fsr1h,w,c
 18621  016108  6EDA               	movwf	fsr2h,c
 18622  01610A  0EFF               	movlw	255
 18623  01610C  22DA               	addwfc	fsr2h,f,c
 18624  01610E  0EEE               	movlw	-18
 18625  016110  50E3               	movf	plusw1,w,c
 18626  016112  5CDE               	subwf	postinc2,w,c
 18627  016114  0EEF               	movlw	-17
 18628  016116  50E3               	movf	plusw1,w,c
 18629  016118  58DE               	subwfb	postinc2,w,c
 18630  01611A  0EF0               	movlw	-16
 18631  01611C  50E3               	movf	plusw1,w,c
 18632  01611E  58DE               	subwfb	postinc2,w,c
 18633  016120  0EF1               	movlw	-15
 18634  016122  50E3               	movf	plusw1,w,c
 18635  016124  58DE               	subwfb	postinc2,w,c
 18636  016126  0EF2               	movlw	-14
 18637  016128  50E3               	movf	plusw1,w,c
 18638  01612A  58DE               	subwfb	postinc2,w,c
 18639  01612C  0EF3               	movlw	-13
 18640  01612E  50E3               	movf	plusw1,w,c
 18641  016130  58DE               	subwfb	postinc2,w,c
 18642  016132  0EF4               	movlw	-12
 18643  016134  50E3               	movf	plusw1,w,c
 18644  016136  58DE               	subwfb	postinc2,w,c
 18645  016138  0EF5               	movlw	-11
 18646  01613A  50E3               	movf	plusw1,w,c
 18647  01613C  58DE               	subwfb	postinc2,w,c
 18648  01613E  A0D8               	btfss	status,0,c
 18649  016140  D01F               	goto	l7356
 18650                           
 18651                           ;stkvar	_divisor @ sp[(-2)+-16]
 18652                           ;stkvar	_dividend @ sp[(-2)+-8]
 18653  016142  50E1               	movf	fsr1l,w,c
 18654  016144  0FF6               	addlw	-10
 18655  016146  6ED9               	movwf	fsr2l,c
 18656  016148  50E2               	movf	fsr1h,w,c
 18657  01614A  6EDA               	movwf	fsr2h,c
 18658  01614C  0EFF               	movlw	255
 18659  01614E  22DA               	addwfc	fsr2h,f,c
 18660  016150  0EEE               	movlw	-18
 18661  016152  50E3               	movf	plusw1,w,c
 18662  016154  5EDE               	subwf	postinc2,f,c
 18663  016156  0EEF               	movlw	-17
 18664  016158  50E3               	movf	plusw1,w,c
 18665  01615A  5ADE               	subwfb	postinc2,f,c
 18666  01615C  0EF0               	movlw	-16
 18667  01615E  50E3               	movf	plusw1,w,c
 18668  016160  5ADE               	subwfb	postinc2,f,c
 18669  016162  0EF1               	movlw	-15
 18670  016164  50E3               	movf	plusw1,w,c
 18671  016166  5ADE               	subwfb	postinc2,f,c
 18672  016168  0EF2               	movlw	-14
 18673  01616A  50E3               	movf	plusw1,w,c
 18674  01616C  5ADE               	subwfb	postinc2,f,c
 18675  01616E  0EF3               	movlw	-13
 18676  016170  50E3               	movf	plusw1,w,c
 18677  016172  5ADE               	subwfb	postinc2,f,c
 18678  016174  0EF4               	movlw	-12
 18679  016176  50E3               	movf	plusw1,w,c
 18680  016178  5ADE               	subwfb	postinc2,f,c
 18681  01617A  0EF5               	movlw	-11
 18682  01617C  50E3               	movf	plusw1,w,c
 18683  01617E  5ADE               	subwfb	postinc2,f,c
 18684  016180                     l7356:
 18685                           
 18686                           ;stkvar	_divisor @ sp[(-2)+-16]
 18687  016180  90D8               	bcf	status,0,c
 18688  016182  0EF5               	movlw	-11
 18689  016184  32E3               	rrcf	plusw1,f,c
 18690  016186  0EF4               	movlw	-12
 18691  016188  32E3               	rrcf	plusw1,f,c
 18692  01618A  0EF3               	movlw	-13
 18693  01618C  32E3               	rrcf	plusw1,f,c
 18694  01618E  0EF2               	movlw	-14
 18695  016190  32E3               	rrcf	plusw1,f,c
 18696  016192  0EF1               	movlw	-15
 18697  016194  32E3               	rrcf	plusw1,f,c
 18698  016196  0EF0               	movlw	-16
 18699  016198  32E3               	rrcf	plusw1,f,c
 18700  01619A  0EEF               	movlw	-17
 18701  01619C  32E3               	rrcf	plusw1,f,c
 18702  01619E  0EEE               	movlw	-18
 18703  0161A0  32E3               	rrcf	plusw1,f,c
 18704                           
 18705                           ;stkvar	_counter @ sp[(-2)+1]
 18706  0161A2  0EFF               	movlw	-1
 18707  0161A4  50E3               	movf	plusw1,w,c
 18708  0161A6  6E01               	movwf	btemp^0,c
 18709  0161A8  0E01               	movlw	1
 18710  0161AA  5E01               	subwf	btemp^0,f,c
 18711  0161AC  0EFF               	movlw	-1
 18712  0161AE  0060  F007  FFE3   	movff	btemp,plusw1
 18713  0161B4  A4D8               	btfss	status,2,c
 18714  0161B6  D7A4               	goto	u5710
 18715  0161B8                     u5730:
 18716                           
 18717                           ;stkvar	_sign @ sp[(-2)+0]
 18718  0161B8  0EFE               	movlw	-2
 18719  0161BA  50E3               	movf	plusw1,w,c
 18720  0161BC  B4D8               	btfsc	status,2,c
 18721  0161BE  D025               	goto	u5750
 18722                           
 18723                           ;stkvar	_dividend @ sp[(-2)+-8]
 18724                           ;stkvar	_dividend @ sp[(-2)+-8]
 18725  0161C0  0EF6               	movlw	-10
 18726  0161C2  6CE3               	negf	plusw1,c
 18727  0161C4  0EF7               	movlw	-9
 18728  0161C6  1EE3               	comf	plusw1,f,c
 18729  0161C8  0EF8               	movlw	-8
 18730  0161CA  1EE3               	comf	plusw1,f,c
 18731  0161CC  0EF9               	movlw	-7
 18732  0161CE  1EE3               	comf	plusw1,f,c
 18733  0161D0  0EFA               	movlw	-6
 18734  0161D2  1EE3               	comf	plusw1,f,c
 18735  0161D4  0EFB               	movlw	-5
 18736  0161D6  1EE3               	comf	plusw1,f,c
 18737  0161D8  0EFC               	movlw	-4
 18738  0161DA  1EE3               	comf	plusw1,f,c
 18739  0161DC  0EFD               	movlw	-3
 18740  0161DE  1EE3               	comf	plusw1,f,c
 18741  0161E0  E314               	bnc	u5750
 18742  0161E2  0EF7               	movlw	-9
 18743  0161E4  2AE3               	incf	plusw1,f,c
 18744  0161E6  E311               	bnc	u5750
 18745  0161E8  0EF8               	movlw	-8
 18746  0161EA  2AE3               	incf	plusw1,f,c
 18747  0161EC  E30E               	bnc	u5750
 18748  0161EE  0EF9               	movlw	-7
 18749  0161F0  2AE3               	incf	plusw1,f,c
 18750  0161F2  E30B               	bnc	u5750
 18751  0161F4  0EFA               	movlw	-6
 18752  0161F6  2AE3               	incf	plusw1,f,c
 18753  0161F8  E308               	bnc	u5750
 18754  0161FA  0EFB               	movlw	-5
 18755  0161FC  2AE3               	incf	plusw1,f,c
 18756  0161FE  E305               	bnc	u5750
 18757  016200  0EFC               	movlw	-4
 18758  016202  2AE3               	incf	plusw1,f,c
 18759  016204  E302               	bnc	u5750
 18760  016206  0EFD               	movlw	-3
 18761  016208  2AE3               	incf	plusw1,f,c
 18762  01620A                     u5750:
 18763                           
 18764                           ;stkvar	_dividend @ sp[(-2)+-8]
 18765  01620A  0EF6               	movlw	246
 18766  01620C  24E1               	addwf	fsr1l,w,c
 18767  01620E  6ED9               	movwf	fsr2l,c
 18768  016210  0EFF               	movlw	255
 18769  016212  20E2               	addwfc	fsr1h,w,c
 18770  016214  6EDA               	movwf	fsr2h,c
 18771                           
 18772                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18773  016216  0E08               	movlw	8
 18774  016218  6E01               	movwf	btemp^0,c
 18775  01621A  0EF6               	movlw	-10
 18776  01621C                     us576999:
 18777  01621C  006F FF7B FFE3     	movff	postinc2,plusw1
 18778  016222  28E8               	incf	wreg,w,c
 18779  016224  2E01               	decfsz	btemp^0,f,c
 18780  016226  D7FA               	bra	us576999
 18781                           
 18782                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18783  016228  52E5               	movf	postdec1,f,c
 18784  01622A  52E5               	movf	postdec1,f,c
 18785  01622C  0012               	return		;funcret
 18786  01622E                     __end_of___aomod:
 18787                           	opt callstack 0
 18788                           
 18789 ;; *************** function ___aodiv *****************
 18790 ;; Defined at:
 18791 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;  dividend        8  [STACK] long long 
 18794 ;;  divisor         8  [STACK] long long 
 18795 ;; Auto vars:     Size  Location     Type
 18796 ;;  quotient        8  [STACK] long long 
 18797 ;;  sign            1  [STACK] unsigned char 
 18798 ;;  counter         1  [STACK] unsigned char 
 18799 ;; Return value:  Size  Location     Type
 18800 ;;                  8  [STACK] long long 
 18801 ;; Registers used:
 18802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18803 ;; Tracked objects:
 18804 ;;		On entry : 0/3
 18805 ;;		On exit  : 0/0
 18806 ;;		Unchanged: 0/0
 18807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18812 ;;Total ram usage:        0 bytes
 18813 ;; Hardware stack levels used:    1
 18814 ;; Hardware stack levels required when called:   15
 18815 ;; This function calls:
 18816 ;;		Nothing
 18817 ;; This function is called by:
 18818 ;;		_dtoa
 18819 ;; This function uses a reentrant model
 18820 ;;
 18821                           
 18822                           	psect	text66
 18823  015AFA                     __ptext66:
 18824                           	opt callstack 0
 18825  015AFA                     ___aodiv:
 18826                           	opt callstack 0
 18827                           
 18828                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18829  015AFA  0E0A               	movlw	10
 18830  015AFC  26E1               	addwf	fsr1l,f,c
 18831  015AFE  0E00               	movlw	0
 18832  015B00  22E2               	addwfc	fsr1h,f,c
 18833                           
 18834                           ;stkvar	_sign @ sp[(-10)+8]
 18835                           
 18836                           ;incstack = 0
 18837 ;; hardware stack exceeded
 18838  015B02  0EFE               	movlw	-2
 18839  015B04  6AE3               	clrf	plusw1,c
 18840                           
 18841                           ;stkvar	_divisor @ sp[(-10)+-16]
 18842  015B06  0EED               	movlw	-19
 18843  015B08  AEE3               	btfss	plusw1,7,c
 18844  015B0A  D028               	goto	l7296
 18845                           
 18846                           ;stkvar	_divisor @ sp[(-10)+-16]
 18847                           ;stkvar	_divisor @ sp[(-10)+-16]
 18848  015B0C  0EE6               	movlw	-26
 18849  015B0E  6CE3               	negf	plusw1,c
 18850  015B10  0EE7               	movlw	-25
 18851  015B12  1EE3               	comf	plusw1,f,c
 18852  015B14  0EE8               	movlw	-24
 18853  015B16  1EE3               	comf	plusw1,f,c
 18854  015B18  0EE9               	movlw	-23
 18855  015B1A  1EE3               	comf	plusw1,f,c
 18856  015B1C  0EEA               	movlw	-22
 18857  015B1E  1EE3               	comf	plusw1,f,c
 18858  015B20  0EEB               	movlw	-21
 18859  015B22  1EE3               	comf	plusw1,f,c
 18860  015B24  0EEC               	movlw	-20
 18861  015B26  1EE3               	comf	plusw1,f,c
 18862  015B28  0EED               	movlw	-19
 18863  015B2A  1EE3               	comf	plusw1,f,c
 18864  015B2C  E314               	bnc	u5550
 18865  015B2E  0EE7               	movlw	-25
 18866  015B30  2AE3               	incf	plusw1,f,c
 18867  015B32  E311               	bnc	u5550
 18868  015B34  0EE8               	movlw	-24
 18869  015B36  2AE3               	incf	plusw1,f,c
 18870  015B38  E30E               	bnc	u5550
 18871  015B3A  0EE9               	movlw	-23
 18872  015B3C  2AE3               	incf	plusw1,f,c
 18873  015B3E  E30B               	bnc	u5550
 18874  015B40  0EEA               	movlw	-22
 18875  015B42  2AE3               	incf	plusw1,f,c
 18876  015B44  E308               	bnc	u5550
 18877  015B46  0EEB               	movlw	-21
 18878  015B48  2AE3               	incf	plusw1,f,c
 18879  015B4A  E305               	bnc	u5550
 18880  015B4C  0EEC               	movlw	-20
 18881  015B4E  2AE3               	incf	plusw1,f,c
 18882  015B50  E302               	bnc	u5550
 18883  015B52  0EED               	movlw	-19
 18884  015B54  2AE3               	incf	plusw1,f,c
 18885  015B56                     u5550:
 18886                           
 18887                           ;stkvar	_sign @ sp[(-10)+8]
 18888  015B56  0EFE               	movlw	-2
 18889  015B58  6AE3               	clrf	plusw1,c
 18890  015B5A  2AE3               	incf	plusw1,f,c
 18891  015B5C                     l7296:
 18892                           
 18893                           ;stkvar	_dividend @ sp[(-10)+-8]
 18894  015B5C  0EF5               	movlw	-11
 18895  015B5E  AEE3               	btfss	plusw1,7,c
 18896  015B60  D027               	goto	l7302
 18897                           
 18898                           ;stkvar	_dividend @ sp[(-10)+-8]
 18899                           ;stkvar	_dividend @ sp[(-10)+-8]
 18900  015B62  0EEE               	movlw	-18
 18901  015B64  6CE3               	negf	plusw1,c
 18902  015B66  0EEF               	movlw	-17
 18903  015B68  1EE3               	comf	plusw1,f,c
 18904  015B6A  0EF0               	movlw	-16
 18905  015B6C  1EE3               	comf	plusw1,f,c
 18906  015B6E  0EF1               	movlw	-15
 18907  015B70  1EE3               	comf	plusw1,f,c
 18908  015B72  0EF2               	movlw	-14
 18909  015B74  1EE3               	comf	plusw1,f,c
 18910  015B76  0EF3               	movlw	-13
 18911  015B78  1EE3               	comf	plusw1,f,c
 18912  015B7A  0EF4               	movlw	-12
 18913  015B7C  1EE3               	comf	plusw1,f,c
 18914  015B7E  0EF5               	movlw	-11
 18915  015B80  1EE3               	comf	plusw1,f,c
 18916  015B82  E314               	bnc	u5570
 18917  015B84  0EEF               	movlw	-17
 18918  015B86  2AE3               	incf	plusw1,f,c
 18919  015B88  E311               	bnc	u5570
 18920  015B8A  0EF0               	movlw	-16
 18921  015B8C  2AE3               	incf	plusw1,f,c
 18922  015B8E  E30E               	bnc	u5570
 18923  015B90  0EF1               	movlw	-15
 18924  015B92  2AE3               	incf	plusw1,f,c
 18925  015B94  E30B               	bnc	u5570
 18926  015B96  0EF2               	movlw	-14
 18927  015B98  2AE3               	incf	plusw1,f,c
 18928  015B9A  E308               	bnc	u5570
 18929  015B9C  0EF3               	movlw	-13
 18930  015B9E  2AE3               	incf	plusw1,f,c
 18931  015BA0  E305               	bnc	u5570
 18932  015BA2  0EF4               	movlw	-12
 18933  015BA4  2AE3               	incf	plusw1,f,c
 18934  015BA6  E302               	bnc	u5570
 18935  015BA8  0EF5               	movlw	-11
 18936  015BAA  2AE3               	incf	plusw1,f,c
 18937  015BAC                     u5570:
 18938                           
 18939                           ;stkvar	_sign @ sp[(-10)+8]
 18940  015BAC  0EFE               	movlw	-2
 18941  015BAE  70E3               	btg	plusw1,0,c
 18942  015BB0                     l7302:
 18943                           
 18944                           ;stkvar	_quotient @ sp[(-10)+0]
 18945  015BB0  0E07               	movlw	7
 18946  015BB2  6E01               	movwf	btemp^0,c
 18947  015BB4  0EF6               	movlw	-10
 18948  015BB6                     u5581:
 18949  015BB6  6AE3               	clrf	plusw1,c
 18950  015BB8  2AE8               	incf	wreg,f,c
 18951  015BBA  0601               	decf	btemp^0,f,c
 18952  015BBC  E2FC               	bc	u5581
 18953                           
 18954                           ;stkvar	_divisor @ sp[(-10)+-16]
 18955  015BBE  0EE6               	movlw	-26
 18956  015BC0  50E3               	movf	plusw1,w,c
 18957  015BC2  E116               	bnz	u5590
 18958  015BC4  0EE7               	movlw	-25
 18959  015BC6  50E3               	movf	plusw1,w,c
 18960  015BC8  E113               	bnz	u5590
 18961  015BCA  0EE8               	movlw	-24
 18962  015BCC  50E3               	movf	plusw1,w,c
 18963  015BCE  E110               	bnz	u5590
 18964  015BD0  0EE9               	movlw	-23
 18965  015BD2  50E3               	movf	plusw1,w,c
 18966  015BD4  E10D               	bnz	u5590
 18967  015BD6  0EEA               	movlw	-22
 18968  015BD8  50E3               	movf	plusw1,w,c
 18969  015BDA  E10A               	bnz	u5590
 18970  015BDC  0EEB               	movlw	-21
 18971  015BDE  50E3               	movf	plusw1,w,c
 18972  015BE0  E107               	bnz	u5590
 18973  015BE2  0EEC               	movlw	-20
 18974  015BE4  50E3               	movf	plusw1,w,c
 18975  015BE6  E104               	bnz	u5590
 18976  015BE8  0EED               	movlw	-19
 18977  015BEA  50E3               	movf	plusw1,w,c
 18978  015BEC  B4D8               	btfsc	status,2,c
 18979  015BEE  D088               	goto	u5620
 18980  015BF0                     u5590:
 18981                           
 18982                           ;stkvar	_counter @ sp[(-10)+9]
 18983  015BF0  0EFF               	movlw	-1
 18984  015BF2  6AE3               	clrf	plusw1,c
 18985  015BF4  D012               	goto	L19
 18986  015BF6                     l7308:
 18987                           
 18988                           ;stkvar	_divisor @ sp[(-10)+-16]
 18989  015BF6  90D8               	bcf	status,0,c
 18990  015BF8  0EE6               	movlw	-26
 18991  015BFA  36E3               	rlcf	plusw1,f,c
 18992  015BFC  0EE7               	movlw	-25
 18993  015BFE  36E3               	rlcf	plusw1,f,c
 18994  015C00  0EE8               	movlw	-24
 18995  015C02  36E3               	rlcf	plusw1,f,c
 18996  015C04  0EE9               	movlw	-23
 18997  015C06  36E3               	rlcf	plusw1,f,c
 18998  015C08  0EEA               	movlw	-22
 18999  015C0A  36E3               	rlcf	plusw1,f,c
 19000  015C0C  0EEB               	movlw	-21
 19001  015C0E  36E3               	rlcf	plusw1,f,c
 19002  015C10  0EEC               	movlw	-20
 19003  015C12  36E3               	rlcf	plusw1,f,c
 19004  015C14  0EED               	movlw	-19
 19005  015C16  36E3               	rlcf	plusw1,f,c
 19006                           
 19007                           ;stkvar	_counter @ sp[(-10)+9]
 19008  015C18  0EFF               	movlw	-1
 19009  015C1A                     L19:
 19010  015C1A  2AE3               	incf	plusw1,f,c
 19011                           
 19012                           ;stkvar	_divisor @ sp[(-10)+-16]
 19013  015C1C  0EED               	movlw	-19
 19014  015C1E  AEE3               	btfss	plusw1,7,c
 19015  015C20  D7EA               	goto	l7308
 19016  015C22                     u5600:
 19017                           
 19018                           ;stkvar	_quotient @ sp[(-10)+0]
 19019  015C22  90D8               	bcf	status,0,c
 19020  015C24  0EF6               	movlw	-10
 19021  015C26  36E3               	rlcf	plusw1,f,c
 19022  015C28  0EF7               	movlw	-9
 19023  015C2A  36E3               	rlcf	plusw1,f,c
 19024  015C2C  0EF8               	movlw	-8
 19025  015C2E  36E3               	rlcf	plusw1,f,c
 19026  015C30  0EF9               	movlw	-7
 19027  015C32  36E3               	rlcf	plusw1,f,c
 19028  015C34  0EFA               	movlw	-6
 19029  015C36  36E3               	rlcf	plusw1,f,c
 19030  015C38  0EFB               	movlw	-5
 19031  015C3A  36E3               	rlcf	plusw1,f,c
 19032  015C3C  0EFC               	movlw	-4
 19033  015C3E  36E3               	rlcf	plusw1,f,c
 19034  015C40  0EFD               	movlw	-3
 19035  015C42  36E3               	rlcf	plusw1,f,c
 19036                           
 19037                           ;stkvar	_divisor @ sp[(-10)+-16]
 19038                           ;stkvar	_dividend @ sp[(-10)+-8]
 19039  015C44  50E1               	movf	fsr1l,w,c
 19040  015C46  0FEE               	addlw	-18
 19041  015C48  6ED9               	movwf	fsr2l,c
 19042  015C4A  50E2               	movf	fsr1h,w,c
 19043  015C4C  6EDA               	movwf	fsr2h,c
 19044  015C4E  0EFF               	movlw	255
 19045  015C50  22DA               	addwfc	fsr2h,f,c
 19046  015C52  0EE6               	movlw	-26
 19047  015C54  50E3               	movf	plusw1,w,c
 19048  015C56  5CDE               	subwf	postinc2,w,c
 19049  015C58  0EE7               	movlw	-25
 19050  015C5A  50E3               	movf	plusw1,w,c
 19051  015C5C  58DE               	subwfb	postinc2,w,c
 19052  015C5E  0EE8               	movlw	-24
 19053  015C60  50E3               	movf	plusw1,w,c
 19054  015C62  58DE               	subwfb	postinc2,w,c
 19055  015C64  0EE9               	movlw	-23
 19056  015C66  50E3               	movf	plusw1,w,c
 19057  015C68  58DE               	subwfb	postinc2,w,c
 19058  015C6A  0EEA               	movlw	-22
 19059  015C6C  50E3               	movf	plusw1,w,c
 19060  015C6E  58DE               	subwfb	postinc2,w,c
 19061  015C70  0EEB               	movlw	-21
 19062  015C72  50E3               	movf	plusw1,w,c
 19063  015C74  58DE               	subwfb	postinc2,w,c
 19064  015C76  0EEC               	movlw	-20
 19065  015C78  50E3               	movf	plusw1,w,c
 19066  015C7A  58DE               	subwfb	postinc2,w,c
 19067  015C7C  0EED               	movlw	-19
 19068  015C7E  50E3               	movf	plusw1,w,c
 19069  015C80  58DE               	subwfb	postinc2,w,c
 19070  015C82  A0D8               	btfss	status,0,c
 19071  015C84  D021               	goto	l7320
 19072                           
 19073                           ;stkvar	_divisor @ sp[(-10)+-16]
 19074                           ;stkvar	_dividend @ sp[(-10)+-8]
 19075  015C86  50E1               	movf	fsr1l,w,c
 19076  015C88  0FEE               	addlw	-18
 19077  015C8A  6ED9               	movwf	fsr2l,c
 19078  015C8C  50E2               	movf	fsr1h,w,c
 19079  015C8E  6EDA               	movwf	fsr2h,c
 19080  015C90  0EFF               	movlw	255
 19081  015C92  22DA               	addwfc	fsr2h,f,c
 19082  015C94  0EE6               	movlw	-26
 19083  015C96  50E3               	movf	plusw1,w,c
 19084  015C98  5EDE               	subwf	postinc2,f,c
 19085  015C9A  0EE7               	movlw	-25
 19086  015C9C  50E3               	movf	plusw1,w,c
 19087  015C9E  5ADE               	subwfb	postinc2,f,c
 19088  015CA0  0EE8               	movlw	-24
 19089  015CA2  50E3               	movf	plusw1,w,c
 19090  015CA4  5ADE               	subwfb	postinc2,f,c
 19091  015CA6  0EE9               	movlw	-23
 19092  015CA8  50E3               	movf	plusw1,w,c
 19093  015CAA  5ADE               	subwfb	postinc2,f,c
 19094  015CAC  0EEA               	movlw	-22
 19095  015CAE  50E3               	movf	plusw1,w,c
 19096  015CB0  5ADE               	subwfb	postinc2,f,c
 19097  015CB2  0EEB               	movlw	-21
 19098  015CB4  50E3               	movf	plusw1,w,c
 19099  015CB6  5ADE               	subwfb	postinc2,f,c
 19100  015CB8  0EEC               	movlw	-20
 19101  015CBA  50E3               	movf	plusw1,w,c
 19102  015CBC  5ADE               	subwfb	postinc2,f,c
 19103  015CBE  0EED               	movlw	-19
 19104  015CC0  50E3               	movf	plusw1,w,c
 19105  015CC2  5ADE               	subwfb	postinc2,f,c
 19106                           
 19107                           ;stkvar	_quotient @ sp[(-10)+0]
 19108  015CC4  0EF6               	movlw	-10
 19109  015CC6  80E3               	bsf	plusw1,0,c
 19110  015CC8                     l7320:
 19111                           
 19112                           ;stkvar	_divisor @ sp[(-10)+-16]
 19113  015CC8  90D8               	bcf	status,0,c
 19114  015CCA  0EED               	movlw	-19
 19115  015CCC  32E3               	rrcf	plusw1,f,c
 19116  015CCE  0EEC               	movlw	-20
 19117  015CD0  32E3               	rrcf	plusw1,f,c
 19118  015CD2  0EEB               	movlw	-21
 19119  015CD4  32E3               	rrcf	plusw1,f,c
 19120  015CD6  0EEA               	movlw	-22
 19121  015CD8  32E3               	rrcf	plusw1,f,c
 19122  015CDA  0EE9               	movlw	-23
 19123  015CDC  32E3               	rrcf	plusw1,f,c
 19124  015CDE  0EE8               	movlw	-24
 19125  015CE0  32E3               	rrcf	plusw1,f,c
 19126  015CE2  0EE7               	movlw	-25
 19127  015CE4  32E3               	rrcf	plusw1,f,c
 19128  015CE6  0EE6               	movlw	-26
 19129  015CE8  32E3               	rrcf	plusw1,f,c
 19130                           
 19131                           ;stkvar	_counter @ sp[(-10)+9]
 19132  015CEA  0EFF               	movlw	-1
 19133  015CEC  50E3               	movf	plusw1,w,c
 19134  015CEE  6E01               	movwf	btemp^0,c
 19135  015CF0  0E01               	movlw	1
 19136  015CF2  5E01               	subwf	btemp^0,f,c
 19137  015CF4  0EFF               	movlw	-1
 19138  015CF6  0060  F007  FFE3   	movff	btemp,plusw1
 19139  015CFC  A4D8               	btfss	status,2,c
 19140  015CFE  D791               	goto	u5600
 19141  015D00                     u5620:
 19142                           
 19143                           ;stkvar	_sign @ sp[(-10)+8]
 19144  015D00  0EFE               	movlw	-2
 19145  015D02  50E3               	movf	plusw1,w,c
 19146  015D04  B4D8               	btfsc	status,2,c
 19147  015D06  D025               	goto	u5640
 19148                           
 19149                           ;stkvar	_quotient @ sp[(-10)+0]
 19150                           ;stkvar	_quotient @ sp[(-10)+0]
 19151  015D08  0EF6               	movlw	-10
 19152  015D0A  6CE3               	negf	plusw1,c
 19153  015D0C  0EF7               	movlw	-9
 19154  015D0E  1EE3               	comf	plusw1,f,c
 19155  015D10  0EF8               	movlw	-8
 19156  015D12  1EE3               	comf	plusw1,f,c
 19157  015D14  0EF9               	movlw	-7
 19158  015D16  1EE3               	comf	plusw1,f,c
 19159  015D18  0EFA               	movlw	-6
 19160  015D1A  1EE3               	comf	plusw1,f,c
 19161  015D1C  0EFB               	movlw	-5
 19162  015D1E  1EE3               	comf	plusw1,f,c
 19163  015D20  0EFC               	movlw	-4
 19164  015D22  1EE3               	comf	plusw1,f,c
 19165  015D24  0EFD               	movlw	-3
 19166  015D26  1EE3               	comf	plusw1,f,c
 19167  015D28  E314               	bnc	u5640
 19168  015D2A  0EF7               	movlw	-9
 19169  015D2C  2AE3               	incf	plusw1,f,c
 19170  015D2E  E311               	bnc	u5640
 19171  015D30  0EF8               	movlw	-8
 19172  015D32  2AE3               	incf	plusw1,f,c
 19173  015D34  E30E               	bnc	u5640
 19174  015D36  0EF9               	movlw	-7
 19175  015D38  2AE3               	incf	plusw1,f,c
 19176  015D3A  E30B               	bnc	u5640
 19177  015D3C  0EFA               	movlw	-6
 19178  015D3E  2AE3               	incf	plusw1,f,c
 19179  015D40  E308               	bnc	u5640
 19180  015D42  0EFB               	movlw	-5
 19181  015D44  2AE3               	incf	plusw1,f,c
 19182  015D46  E305               	bnc	u5640
 19183  015D48  0EFC               	movlw	-4
 19184  015D4A  2AE3               	incf	plusw1,f,c
 19185  015D4C  E302               	bnc	u5640
 19186  015D4E  0EFD               	movlw	-3
 19187  015D50  2AE3               	incf	plusw1,f,c
 19188  015D52                     u5640:
 19189                           
 19190                           ;stkvar	_quotient @ sp[(-10)+0]
 19191  015D52  0EF6               	movlw	246
 19192  015D54  24E1               	addwf	fsr1l,w,c
 19193  015D56  6ED9               	movwf	fsr2l,c
 19194  015D58  0EFF               	movlw	255
 19195  015D5A  20E2               	addwfc	fsr1h,w,c
 19196  015D5C  6EDA               	movwf	fsr2h,c
 19197                           
 19198                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19199  015D5E  0E08               	movlw	8
 19200  015D60  6E01               	movwf	btemp^0,c
 19201  015D62  0EEE               	movlw	-18
 19202  015D64                     us565999:
 19203  015D64  006F FF7B FFE3     	movff	postinc2,plusw1
 19204  015D6A  28E8               	incf	wreg,w,c
 19205  015D6C  2E01               	decfsz	btemp^0,f,c
 19206  015D6E  D7FA               	bra	us565999
 19207                           
 19208                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19209  015D70  0EF6               	movlw	246
 19210  015D72  26E1               	addwf	fsr1l,f,c
 19211  015D74  0EFF               	movlw	255
 19212  015D76  22E2               	addwfc	fsr1h,f,c
 19213  015D78  0012               	return		;funcret
 19214  015D7A                     __end_of___aodiv:
 19215                           	opt callstack 0
 19216                           
 19217 ;; *************** function _ctoa *****************
 19218 ;; Defined at:
 19219 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19220 ;; Parameters:    Size  Location     Type
 19221 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19222 ;;		 -> f(6), NULL(0), 
 19223 ;;  c               1  [STACK] unsigned char 
 19224 ;; Auto vars:     Size  Location     Type
 19225 ;;  w               2  [STACK] int 
 19226 ;;  l               2    0        int 
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  2  [STACK] int 
 19229 ;; Registers used:
 19230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19240 ;;Total ram usage:        0 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:   20
 19243 ;; This function calls:
 19244 ;;		_pad
 19245 ;; This function is called by:
 19246 ;;		_vfpfcnvrt
 19247 ;; This function uses a reentrant model
 19248 ;;
 19249                           
 19250                           	psect	text67
 19251  018878                     __ptext67:
 19252                           	opt callstack 0
 19253  018878                     _ctoa:
 19254                           	opt callstack 0
 19255                           
 19256                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19257  018878  52E6               	movf	postinc1,f,c
 19258  01887A  52E6               	movf	postinc1,f,c
 19259                           
 19260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19261                           
 19262                           ;incstack = 0
 19263 ;; hardware stack exceeded
 19264  01887C  5021               	movf	_width^0,w,c
 19265  01887E  1022               	iorwf	(_width+1)^0,w,c
 19266  018880  A4D8               	btfss	status,2,c
 19267  018882  D009               	goto	l10542
 19268                           
 19269                           ;stkvar	_w @ sp[(-2)+0]
 19270  018884  0EFE               	movlw	-2
 19271  018886  0060  F087  FFE3   	movff	_width,plusw1
 19272  01888C  0EFF               	movlw	-1
 19273  01888E  0060  F08B  FFE3   	movff	_width+1,plusw1
 19274  018894  D016               	goto	l10544
 19275  018896                     l10542:
 19276  018896  0EFF               	movlw	255
 19277  018898  6E0B               	movwf	(btemp+10)^0,c
 19278  01889A  0EFF               	movlw	255
 19279  01889C  6E0C               	movwf	(btemp+11)^0,c
 19280  01889E  0060  F084  F009   	movff	_width,btemp+8
 19281  0188A4  0060  F088  F00A   	movff	_width+1,btemp+9
 19282  0188AA  500B               	movf	(btemp+10)^0,w,c
 19283  0188AC  2609               	addwf	(btemp+8)^0,f,c
 19284  0188AE  500C               	movf	(btemp+11)^0,w,c
 19285  0188B0  220A               	addwfc	(btemp+9)^0,f,c
 19286                           
 19287                           ;stkvar	_w @ sp[(-2)+0]
 19288  0188B2  0EFE               	movlw	-2
 19289  0188B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 19290  0188BA  0EFF               	movlw	-1
 19291  0188BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19292  0188C2                     l10544:
 19293                           
 19294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19295                           ;stkvar	_c @ sp[(-2)+-3]
 19296  0188C2  0EFB               	movlw	-5
 19297  0188C4  006F FF8C  F394    	movff	plusw1,_dbuf
 19298                           
 19299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19300  0188CA  0103               	movlb	3	; () banked
 19301  0188CC  6B95               	clrf	(_dbuf+1)& (0+255),b
 19302                           
 19303                           ; BSR set to: 3
 19304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19305                           ;stkvar	_w @ sp[(-2)+0]
 19306  0188CE  0EFE               	movlw	-2
 19307  0188D0  006F FF8F FFE6     	movff	plusw1,postinc1
 19308  0188D6  006F FF8F FFE6     	movff	plusw1,postinc1
 19309  0188DC  0E94               	movlw	low _dbuf
 19310  0188DE  6EE6               	movwf	postinc1,c
 19311  0188E0  0E03               	movlw	high _dbuf
 19312  0188E2  6EE6               	movwf	postinc1,c
 19313                           
 19314                           ;stkvar	_fp @ sp[(-6)+-2]
 19315  0188E4  0EF8               	movlw	-8
 19316  0188E6  006F FF8F FFE6     	movff	plusw1,postinc1
 19317  0188EC  006F FF8F FFE6     	movff	plusw1,postinc1
 19318  0188F2  EC75  F0BC         	call	_pad	;wreg free
 19319                           
 19320                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19321  0188F6  0EFB               	movlw	251
 19322  0188F8  26E1               	addwf	fsr1l,f,c
 19323  0188FA  0EFF               	movlw	255
 19324  0188FC  22E2               	addwfc	fsr1h,f,c
 19325  0188FE  0012               	return		;funcret
 19326  018900                     __end_of_ctoa:
 19327                           	opt callstack 0
 19328                           
 19329 ;; *************** function _pad *****************
 19330 ;; Defined at:
 19331 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19332 ;; Parameters:    Size  Location     Type
 19333 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19334 ;;		 -> f(6), NULL(0), 
 19335 ;;  buf             2  [STACK] PTR unsigned char 
 19336 ;;		 -> dbuf(80), 
 19337 ;;  p               2  [STACK] int 
 19338 ;; Auto vars:     Size  Location     Type
 19339 ;;  w               2  [STACK] int 
 19340 ;;  i               2  [STACK] int 
 19341 ;; Return value:  Size  Location     Type
 19342 ;;                  2  [STACK] int 
 19343 ;; Registers used:
 19344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19345 ;; Tracked objects:
 19346 ;;		On entry : 0/3
 19347 ;;		On exit  : 0/0
 19348 ;;		Unchanged: 0/0
 19349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19354 ;;Total ram usage:        0 bytes
 19355 ;; Hardware stack levels used:    1
 19356 ;; Hardware stack levels required when called:   19
 19357 ;; This function calls:
 19358 ;;		_fputc
 19359 ;;		_fputs
 19360 ;;		_strlen
 19361 ;; This function is called by:
 19362 ;;		_ctoa
 19363 ;;		_dtoa
 19364 ;;		_efgtoa
 19365 ;;		_xtoa
 19366 ;; This function uses a reentrant model
 19367 ;;
 19368                           
 19369                           	psect	text68
 19370  0178EA                     __ptext68:
 19371                           	opt callstack 0
 19372  0178EA                     _pad:
 19373                           	opt callstack 0
 19374                           
 19375                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19376  0178EA  52E6               	movf	postinc1,f,c
 19377  0178EC  52E6               	movf	postinc1,f,c
 19378  0178EE  52E6               	movf	postinc1,f,c
 19379  0178F0  52E6               	movf	postinc1,f,c
 19380                           
 19381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19382                           
 19383                           ;incstack = 0
 19384 ;; hardware stack exceeded
 19385  0178F2  A025               	btfss	_flags^0,0,c
 19386  0178F4  D010               	goto	l10464
 19387                           
 19388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19389                           ;stkvar	_fp @ sp[(-4)+-2]
 19390  0178F6  0EFA               	movlw	-6
 19391  0178F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19392  0178FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19393                           
 19394                           ;stkvar	_buf @ sp[(-6)+-4]
 19395  017904  0EF6               	movlw	-10
 19396  017906  006F FF8F FFE6     	movff	plusw1,postinc1
 19397  01790C  006F FF8F FFE6     	movff	plusw1,postinc1
 19398  017912  ECCB  F0C2         	call	_fputs	;wreg free
 19399  017916                     l10464:
 19400                           
 19401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19402                           ;stkvar	_p @ sp[(-4)+-6]
 19403  017916  0EF7               	movlw	-9
 19404  017918  BEE3               	btfsc	plusw1,7,c
 19405  01791A  D011               	goto	l10468
 19406                           
 19407                           ;stkvar	_p @ sp[(-4)+-6]
 19408                           ;stkvar	_w @ sp[(-4)+0]
 19409  01791C  0EF6               	movlw	-10
 19410  01791E  006F FF8C  F001    	movff	plusw1,btemp
 19411  017924  0EFC               	movlw	-4
 19412  017926  0060  F007  FFE3   	movff	btemp,plusw1
 19413  01792C  0EF7               	movlw	-9
 19414  01792E  006F FF8C  F001    	movff	plusw1,btemp
 19415  017934  0EFD               	movlw	-3
 19416  017936  0060  F007  FFE3   	movff	btemp,plusw1
 19417  01793C  D004               	goto	l1999
 19418  01793E                     l10468:
 19419                           
 19420                           ;stkvar	_w @ sp[(-4)+0]
 19421  01793E  0EFC               	movlw	-4
 19422  017940  6AE3               	clrf	plusw1,c
 19423  017942  0EFD               	movlw	-3
 19424  017944  6AE3               	clrf	plusw1,c
 19425  017946                     l1999:
 19426                           
 19427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19428                           ;stkvar	_i @ sp[(-4)+2]
 19429  017946  0EFE               	movlw	-2
 19430  017948  6AE3               	clrf	plusw1,c
 19431  01794A  0EFF               	movlw	-1
 19432  01794C  6AE3               	clrf	plusw1,c
 19433                           
 19434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19435  01794E  D01E               	goto	l10474
 19436  017950                     l10470:
 19437                           
 19438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19439                           ;stkvar	_fp @ sp[(-4)+-2]
 19440  017950  0EFA               	movlw	-6
 19441  017952  006F FF8F FFE6     	movff	plusw1,postinc1
 19442  017958  006F FF8F FFE6     	movff	plusw1,postinc1
 19443  01795E  0E20               	movlw	32
 19444  017960  6EE6               	movwf	postinc1,c
 19445  017962  0E00               	movlw	0
 19446  017964  6EE6               	movwf	postinc1,c
 19447  017966  EC57  F0BB         	call	_fputc	;wreg free
 19448                           
 19449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19450                           ;stkvar	_i @ sp[(-4)+2]
 19451  01796A  0EFE               	movlw	-2
 19452  01796C  50E3               	movf	plusw1,w,c
 19453  01796E  0F01               	addlw	1
 19454  017970  6E01               	movwf	btemp^0,c
 19455  017972  0EFE               	movlw	-2
 19456  017974  0060  F007  FFE3   	movff	btemp,plusw1
 19457  01797A  6A01               	clrf	btemp^0,c
 19458  01797C  0EFF               	movlw	-1
 19459  01797E  50E3               	movf	plusw1,w,c
 19460  017980  2001               	addwfc	btemp^0,w,c
 19461  017982  6E01               	movwf	btemp^0,c
 19462  017984  0EFF               	movlw	-1
 19463  017986  0060  F007  FFE3   	movff	btemp,plusw1
 19464  01798C                     l10474:
 19465                           
 19466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19467                           ;stkvar	_w @ sp[(-4)+0]
 19468                           ;stkvar	_i @ sp[(-4)+2]
 19469  01798C  50E1               	movf	fsr1l,w,c
 19470  01798E  0FFE               	addlw	-2
 19471  017990  6ED9               	movwf	fsr2l,c
 19472  017992  50E2               	movf	fsr1h,w,c
 19473  017994  6EDA               	movwf	fsr2h,c
 19474  017996  0EFF               	movlw	255
 19475  017998  22DA               	addwfc	fsr2h,f,c
 19476  01799A  0EFC               	movlw	-4
 19477  01799C  50E3               	movf	plusw1,w,c
 19478  01799E  5CDE               	subwf	postinc2,w,c
 19479  0179A0  50DE               	movf	postinc2,w,c
 19480  0179A2  0A80               	xorlw	128
 19481  0179A4  6E01               	movwf	btemp^0,c
 19482  0179A6  0EFD               	movlw	-3
 19483  0179A8  50E3               	movf	plusw1,w,c
 19484  0179AA  0A80               	xorlw	128
 19485  0179AC  5801               	subwfb	btemp^0,w,c
 19486  0179AE  A0D8               	btfss	status,0,c
 19487  0179B0  D7CF               	goto	l10470
 19488                           
 19489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19490  0179B2  B025               	btfsc	_flags^0,0,c
 19491  0179B4  D010               	goto	l10478
 19492                           
 19493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19494                           ;stkvar	_fp @ sp[(-4)+-2]
 19495  0179B6  0EFA               	movlw	-6
 19496  0179B8  006F FF8F FFE6     	movff	plusw1,postinc1
 19497  0179BE  006F FF8F FFE6     	movff	plusw1,postinc1
 19498                           
 19499                           ;stkvar	_buf @ sp[(-6)+-4]
 19500  0179C4  0EF6               	movlw	-10
 19501  0179C6  006F FF8F FFE6     	movff	plusw1,postinc1
 19502  0179CC  006F FF8F FFE6     	movff	plusw1,postinc1
 19503  0179D2  ECCB  F0C2         	call	_fputs	;wreg free
 19504  0179D6                     l10478:
 19505                           
 19506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19507                           ;stkvar	_w @ sp[(-4)+0]
 19508                           ;stkvar	_buf @ sp[(-4)+-4]
 19509  0179D6  0EF8               	movlw	-8
 19510  0179D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19511  0179DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19512  0179E4  EC7A  F0C2         	call	_strlen	;wreg free
 19513  0179E8  0EFC               	movlw	-4
 19514  0179EA  50E3               	movf	plusw1,w,c
 19515  0179EC  2601               	addwf	btemp^0,f,c
 19516  0179EE  0EFD               	movlw	-3
 19517  0179F0  50E3               	movf	plusw1,w,c
 19518  0179F2  2202               	addwfc	(btemp+1)^0,f,c
 19519                           
 19520                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19521  0179F4  0EF6               	movlw	246
 19522  0179F6  26E1               	addwf	fsr1l,f,c
 19523  0179F8  0EFF               	movlw	255
 19524  0179FA  22E2               	addwfc	fsr1h,f,c
 19525  0179FC  0012               	return		;funcret
 19526  0179FE                     __end_of_pad:
 19527                           	opt callstack 0
 19528                           
 19529 ;; *************** function _strlen *****************
 19530 ;; Defined at:
 19531 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19532 ;; Parameters:    Size  Location     Type
 19533 ;;  s               2  [STACK] PTR const unsigned char 
 19534 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19535 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 19536 ;;		 -> T(144), port_data(512), STR_7(6), STR_3(6), 
 19537 ;;		 -> V(188), 
 19538 ;; Auto vars:     Size  Location     Type
 19539 ;;  a               2  [STACK] PTR const unsigned char 
 19540 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19541 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 19542 ;;		 -> T(144), port_data(512), STR_7(6), STR_3(6), 
 19543 ;;		 -> V(188), 
 19544 ;; Return value:  Size  Location     Type
 19545 ;;                  2  [STACK] unsigned int 
 19546 ;; Registers used:
 19547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19548 ;; Tracked objects:
 19549 ;;		On entry : 0/0
 19550 ;;		On exit  : 0/0
 19551 ;;		Unchanged: 0/0
 19552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19557 ;;Total ram usage:        0 bytes
 19558 ;; Hardware stack levels used:    1
 19559 ;; Hardware stack levels required when called:   15
 19560 ;; This function calls:
 19561 ;;		Nothing
 19562 ;; This function is called by:
 19563 ;;		_eaDogM_WriteString
 19564 ;;		_calc_bsoc
 19565 ;;		_pad
 19566 ;;		_stoa
 19567 ;; This function uses a reentrant model
 19568 ;;
 19569                           
 19570                           	psect	text69
 19571  0184F4                     __ptext69:
 19572                           	opt callstack 0
 19573  0184F4                     _strlen:
 19574                           	opt callstack 0
 19575                           
 19576                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19577  0184F4  52E6               	movf	postinc1,f,c
 19578  0184F6  52E6               	movf	postinc1,f,c
 19579                           
 19580                           ;stkvar	_s @ sp[(-2)+-2]
 19581                           
 19582                           ;incstack = 0
 19583 ;; hardware stack exceeded
 19584  0184F8  0EFC               	movlw	-4
 19585  0184FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19586  018500  0EFD               	movlw	-3
 19587  018502  006F FF8C  F00C    	movff	plusw1,btemp+11
 19588                           
 19589                           ;stkvar	_a @ sp[(-2)+0]
 19590  018508  0EFF               	movlw	-1
 19591  01850A  0060  F033  FFE3   	movff	btemp+11,plusw1
 19592  018510  0EFE               	movlw	-2
 19593  018512  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19594  018518  D011               	goto	l6914
 19595  01851A                     l6912:
 19596                           
 19597                           ;stkvar	_s @ sp[(-2)+-2]
 19598  01851A  0EFC               	movlw	-4
 19599  01851C  50E3               	movf	plusw1,w,c
 19600  01851E  0F01               	addlw	1
 19601  018520  6E01               	movwf	btemp^0,c
 19602  018522  0EFC               	movlw	-4
 19603  018524  0060  F007  FFE3   	movff	btemp,plusw1
 19604  01852A  6A01               	clrf	btemp^0,c
 19605  01852C  0EFD               	movlw	-3
 19606  01852E  50E3               	movf	plusw1,w,c
 19607  018530  2001               	addwfc	btemp^0,w,c
 19608  018532  6E01               	movwf	btemp^0,c
 19609  018534  0EFD               	movlw	-3
 19610  018536  0060  F007  FFE3   	movff	btemp,plusw1
 19611  01853C                     l6914:
 19612                           
 19613                           ;stkvar	_s @ sp[(-2)+-2]
 19614  01853C  0EFC               	movlw	-4
 19615  01853E  006F FF8F FFF6     	movff	plusw1,tblptrl
 19616  018544  0EFD               	movlw	-3
 19617  018546  006F FF8F FFF7     	movff	plusw1,tblptrh
 19618  01854C  0E00               	movlw	low (__mediumconst shr (0+16))
 19619  01854E  6EF8               	movwf	tblptru,c
 19620  018550  0E1F               	movlw	(high __ramtop+-1)
 19621  018552  64F7               	cpfsgt	tblptrh,c
 19622  018554  D003               	bra	u4717
 19623  018556  0008               	tblrd		*
 19624  018558  50F5               	movf	tablat,w,c
 19625  01855A  D007               	bra	u4710
 19626  01855C                     u4717:
 19627  01855C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19628  018562  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19629  018568  50EF               	movf	indf0,w,c
 19630  01856A                     u4710:
 19631  01856A  0900               	iorlw	0
 19632  01856C  A4D8               	btfss	status,2,c
 19633  01856E  D7D5               	goto	l6912
 19634                           
 19635                           ;stkvar	_a @ sp[(-2)+0]
 19636                           ;stkvar	_s @ sp[(-2)+-2]
 19637  018570  0EFC               	movlw	-4
 19638  018572  006F FF8C  F001    	movff	plusw1,btemp
 19639  018578  0EFD               	movlw	-3
 19640  01857A  006F FF8C  F002    	movff	plusw1,btemp+1
 19641  018580  0EFE               	movlw	-2
 19642  018582  50E3               	movf	plusw1,w,c
 19643  018584  5E01               	subwf	btemp^0,f,c
 19644  018586  0EFF               	movlw	-1
 19645  018588  50E3               	movf	plusw1,w,c
 19646  01858A  5A02               	subwfb	(btemp+1)^0,f,c
 19647                           
 19648                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19649  01858C  52E5               	movf	postdec1,f,c
 19650  01858E  52E5               	movf	postdec1,f,c
 19651  018590  52E5               	movf	postdec1,f,c
 19652  018592  52E5               	movf	postdec1,f,c
 19653  018594  0012               	return		;funcret
 19654  018596                     __end_of_strlen:
 19655                           	opt callstack 0
 19656                           
 19657 ;; *************** function _fputs *****************
 19658 ;; Defined at:
 19659 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19660 ;; Parameters:    Size  Location     Type
 19661 ;;  s               2  [STACK] PTR const unsigned char 
 19662 ;;		 -> dbuf(80), 
 19663 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19664 ;;		 -> f(6), NULL(0), 
 19665 ;; Auto vars:     Size  Location     Type
 19666 ;;  i               2  [STACK] int 
 19667 ;;  c               1  [STACK] unsigned char 
 19668 ;; Return value:  Size  Location     Type
 19669 ;;                  2  [STACK] int 
 19670 ;; Registers used:
 19671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19672 ;; Tracked objects:
 19673 ;;		On entry : 0/3
 19674 ;;		On exit  : 0/0
 19675 ;;		Unchanged: 0/0
 19676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19681 ;;Total ram usage:        0 bytes
 19682 ;; Hardware stack levels used:    1
 19683 ;; Hardware stack levels required when called:   18
 19684 ;; This function calls:
 19685 ;;		_fputc
 19686 ;; This function is called by:
 19687 ;;		_pad
 19688 ;; This function uses a reentrant model
 19689 ;;
 19690                           
 19691                           	psect	text70
 19692  018596                     __ptext70:
 19693                           	opt callstack 0
 19694  018596                     _fputs:
 19695                           	opt callstack 0
 19696                           
 19697                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19698  018596  52E6               	movf	postinc1,f,c
 19699  018598  52E6               	movf	postinc1,f,c
 19700  01859A  52E6               	movf	postinc1,f,c
 19701                           
 19702                           ;stkvar	_i @ sp[(-3)+0]
 19703                           
 19704                           ;incstack = 0
 19705 ;; hardware stack exceeded
 19706  01859C  0EFD               	movlw	-3
 19707  01859E  6AE3               	clrf	plusw1,c
 19708  0185A0  0EFE               	movlw	-2
 19709  0185A2  6AE3               	clrf	plusw1,c
 19710  0185A4  D01F               	goto	l10458
 19711  0185A6                     l10454:
 19712                           
 19713                           ;stkvar	_fp @ sp[(-3)+-4]
 19714  0185A6  0EF9               	movlw	-7
 19715  0185A8  006F FF8F FFE6     	movff	plusw1,postinc1
 19716  0185AE  006F FF8F FFE6     	movff	plusw1,postinc1
 19717                           
 19718                           ;stkvar	_c @ sp[(-5)+2]
 19719  0185B4  0EFD               	movlw	-3
 19720  0185B6  50E3               	movf	plusw1,w,c
 19721  0185B8  6EE6               	movwf	postinc1,c
 19722  0185BA  0E00               	movlw	0
 19723  0185BC  6EE6               	movwf	postinc1,c
 19724  0185BE  EC57  F0BB         	call	_fputc	;wreg free
 19725                           
 19726                           ;stkvar	_i @ sp[(-3)+0]
 19727  0185C2  0EFD               	movlw	-3
 19728  0185C4  50E3               	movf	plusw1,w,c
 19729  0185C6  0F01               	addlw	1
 19730  0185C8  6E01               	movwf	btemp^0,c
 19731  0185CA  0EFD               	movlw	-3
 19732  0185CC  0060  F007  FFE3   	movff	btemp,plusw1
 19733  0185D2  6A01               	clrf	btemp^0,c
 19734  0185D4  0EFE               	movlw	-2
 19735  0185D6  50E3               	movf	plusw1,w,c
 19736  0185D8  2001               	addwfc	btemp^0,w,c
 19737  0185DA  6E01               	movwf	btemp^0,c
 19738  0185DC  0EFE               	movlw	-2
 19739  0185DE  0060  F007  FFE3   	movff	btemp,plusw1
 19740  0185E4                     l10458:
 19741                           
 19742                           ;stkvar	_i @ sp[(-3)+0]
 19743  0185E4  0EFD               	movlw	-3
 19744  0185E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 19745  0185EC  0EFE               	movlw	-2
 19746  0185EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19747                           
 19748                           ;stkvar	_s @ sp[(-3)+-2]
 19749  0185F4  0EFB               	movlw	-5
 19750  0185F6  006F FF8C  F009    	movff	plusw1,btemp+8
 19751  0185FC  0EFC               	movlw	-4
 19752  0185FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19753  018604  500B               	movf	(btemp+10)^0,w,c
 19754  018606  2409               	addwf	(btemp+8)^0,w,c
 19755  018608  6ED9               	movwf	fsr2l,c
 19756  01860A  500C               	movf	(btemp+11)^0,w,c
 19757  01860C  200A               	addwfc	(btemp+9)^0,w,c
 19758  01860E  6EDA               	movwf	fsr2h,c
 19759  018610  50DF               	movf	indf2,w,c
 19760  018612  6E0C               	movwf	(btemp+11)^0,c
 19761                           
 19762                           ;stkvar	_c @ sp[(-3)+2]
 19763  018614  0EFF               	movlw	-1
 19764  018616  0060  F033  FFE3   	movff	btemp+11,plusw1
 19765  01861C  0EFF               	movlw	-1
 19766  01861E  50E3               	movf	plusw1,w,c
 19767  018620  A4D8               	btfss	status,2,c
 19768  018622  D7C1               	goto	l10454
 19769                           
 19770                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19771  018624  0EF9               	movlw	249
 19772  018626  26E1               	addwf	fsr1l,f,c
 19773  018628  0EFF               	movlw	255
 19774  01862A  22E2               	addwfc	fsr1h,f,c
 19775  01862C  0012               	return		;funcret
 19776  01862E                     __end_of_fputs:
 19777                           	opt callstack 0
 19778                           
 19779 ;; *************** function _fputc *****************
 19780 ;; Defined at:
 19781 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19782 ;; Parameters:    Size  Location     Type
 19783 ;;  c               2  [STACK] int 
 19784 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19785 ;;		 -> f(6), NULL(0), 
 19786 ;; Auto vars:     Size  Location     Type
 19787 ;;		None
 19788 ;; Return value:  Size  Location     Type
 19789 ;;                  2  [STACK] int 
 19790 ;; Registers used:
 19791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19792 ;; Tracked objects:
 19793 ;;		On entry : 0/0
 19794 ;;		On exit  : 0/0
 19795 ;;		Unchanged: 0/0
 19796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19801 ;;Total ram usage:        0 bytes
 19802 ;; Hardware stack levels used:    1
 19803 ;; Hardware stack levels required when called:   17
 19804 ;; This function calls:
 19805 ;;		_putch
 19806 ;; This function is called by:
 19807 ;;		_pad
 19808 ;;		_stoa
 19809 ;;		_vfpfcnvrt
 19810 ;;		_fputs
 19811 ;; This function uses a reentrant model
 19812 ;;
 19813                           
 19814                           	psect	text71
 19815  0176AE                     __ptext71:
 19816                           	opt callstack 0
 19817  0176AE                     _fputc:
 19818                           	opt callstack 0
 19819                           
 19820                           ;stkvar	_fp @ sp[(0)+-4]
 19821                           
 19822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19823                           ;incstack = 0
 19824 ;; hardware stack exceeded
 19825  0176AE  0EFC               	movlw	-4
 19826  0176B0  006F FF8C  F001    	movff	plusw1,btemp
 19827  0176B6  0EFD               	movlw	-3
 19828  0176B8  50E3               	movf	plusw1,w,c
 19829  0176BA  1001               	iorwf	btemp^0,w,c
 19830  0176BC  B4D8               	btfsc	status,2,c
 19831  0176BE  D009               	goto	u9330
 19832                           
 19833                           ;stkvar	_fp @ sp[(0)+-4]
 19834  0176C0  0EFC               	movlw	-4
 19835  0176C2  006F FF8C  F001    	movff	plusw1,btemp
 19836  0176C8  0EFD               	movlw	-3
 19837  0176CA  50E3               	movf	plusw1,w,c
 19838  0176CC  1001               	iorwf	btemp^0,w,c
 19839  0176CE  A4D8               	btfss	status,2,c
 19840  0176D0  D006               	goto	l10442
 19841  0176D2                     u9330:
 19842                           
 19843                           ;stkvar	_c @ sp[(0)+-2]
 19844  0176D2  0EFE               	movlw	-2
 19845  0176D4  50E3               	movf	plusw1,w,c
 19846  0176D6  6EE6               	movwf	postinc1,c
 19847  0176D8  ECB8  F0CD         	call	_putch	;wreg free
 19848  0176DC  D075               	goto	l3017
 19849  0176DE                     l10442:
 19850                           
 19851                           ;stkvar	_fp @ sp[(0)+-4]
 19852  0176DE  0EFC               	movlw	-4
 19853  0176E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19854  0176E6  0EFD               	movlw	-3
 19855  0176E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19856  0176EE  0E04               	movlw	4
 19857  0176F0  240B               	addwf	(btemp+10)^0,w,c
 19858  0176F2  6ED9               	movwf	fsr2l,c
 19859  0176F4  0E00               	movlw	0
 19860  0176F6  200C               	addwfc	(btemp+11)^0,w,c
 19861  0176F8  6EDA               	movwf	fsr2h,c
 19862  0176FA  50DE               	movf	postinc2,w,c
 19863  0176FC  10DE               	iorwf	postinc2,w,c
 19864  0176FE  B4D8               	btfsc	status,2,c
 19865  017700  D026               	goto	u9350
 19866                           
 19867                           ;stkvar	_fp @ sp[(0)+-4]
 19868  017702  0EFC               	movlw	-4
 19869  017704  006F FF8C  F00B    	movff	plusw1,btemp+10
 19870  01770A  0EFD               	movlw	-3
 19871  01770C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19872  017712  0E04               	movlw	4
 19873  017714  240B               	addwf	(btemp+10)^0,w,c
 19874  017716  6ED9               	movwf	fsr2l,c
 19875  017718  0E00               	movlw	0
 19876  01771A  200C               	addwfc	(btemp+11)^0,w,c
 19877  01771C  6EDA               	movwf	fsr2h,c
 19878                           
 19879                           ;stkvar	_fp @ sp[(0)+-4]
 19880  01771E  0EFC               	movlw	-4
 19881  017720  006F FF8C  F00B    	movff	plusw1,btemp+10
 19882  017726  0EFD               	movlw	-3
 19883  017728  006F FF8C  F00C    	movff	plusw1,btemp+11
 19884  01772E  0E02               	movlw	2
 19885  017730  240B               	addwf	(btemp+10)^0,w,c
 19886  017732  6EE9               	movwf	fsr0l,c
 19887  017734  0E00               	movlw	0
 19888  017736  200C               	addwfc	(btemp+11)^0,w,c
 19889  017738  6EEA               	movwf	fsr0h,c
 19890  01773A  50DE               	movf	postinc2,w,c
 19891  01773C  5CEE               	subwf	postinc0,w,c
 19892  01773E  50EE               	movf	postinc0,w,c
 19893  017740  0A80               	xorlw	128
 19894  017742  6E01               	movwf	btemp^0,c
 19895  017744  50DE               	movf	postinc2,w,c
 19896  017746  0A80               	xorlw	128
 19897  017748  5801               	subwfb	btemp^0,w,c
 19898  01774A  B0D8               	btfsc	status,0,c
 19899  01774C  D03D               	goto	l3017
 19900  01774E                     u9350:
 19901                           
 19902                           ;stkvar	_c @ sp[(0)+-2]
 19903                           ;stkvar	_fp @ sp[(0)+-4]
 19904  01774E  0EFC               	movlw	-4
 19905  017750  006F FF8C  F00B    	movff	plusw1,btemp+10
 19906  017756  0EFD               	movlw	-3
 19907  017758  006F FF8C  F00C    	movff	plusw1,btemp+11
 19908  01775E  0E02               	movlw	2
 19909  017760  240B               	addwf	(btemp+10)^0,w,c
 19910  017762  6ED9               	movwf	fsr2l,c
 19911  017764  0E00               	movlw	0
 19912  017766  200C               	addwfc	(btemp+11)^0,w,c
 19913  017768  6EDA               	movwf	fsr2h,c
 19914  01776A  006F FF78  F00B    	movff	postinc2,btemp+10
 19915  017770  006F FF74  F00C    	movff	postdec2,btemp+11
 19916                           
 19917                           ;stkvar	_fp @ sp[(0)+-4]
 19918  017776  0EFC               	movlw	-4
 19919  017778  006F FF8F FFD9     	movff	plusw1,fsr2l
 19920  01777E  0EFD               	movlw	-3
 19921  017780  006F FF8F FFDA     	movff	plusw1,fsr2h
 19922  017786  006F FF78  F009    	movff	postinc2,btemp+8
 19923  01778C  006F FF74  F00A    	movff	postdec2,btemp+9
 19924  017792  500B               	movf	(btemp+10)^0,w,c
 19925  017794  2409               	addwf	(btemp+8)^0,w,c
 19926  017796  6ED9               	movwf	fsr2l,c
 19927  017798  500C               	movf	(btemp+11)^0,w,c
 19928  01779A  200A               	addwfc	(btemp+9)^0,w,c
 19929  01779C  6EDA               	movwf	fsr2h,c
 19930  01779E  0EFE               	movlw	-2
 19931  0177A0  006F FF8F FFDF     	movff	plusw1,indf2
 19932                           
 19933                           ;stkvar	_fp @ sp[(0)+-4]
 19934  0177A6  0EFC               	movlw	-4
 19935  0177A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19936  0177AE  0EFD               	movlw	-3
 19937  0177B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19938  0177B6  0E02               	movlw	2
 19939  0177B8  240B               	addwf	(btemp+10)^0,w,c
 19940  0177BA  6ED9               	movwf	fsr2l,c
 19941  0177BC  0E00               	movlw	0
 19942  0177BE  200C               	addwfc	(btemp+11)^0,w,c
 19943  0177C0  6EDA               	movwf	fsr2h,c
 19944  0177C2  2ADE               	incf	postinc2,f,c
 19945  0177C4  0E00               	movlw	0
 19946  0177C6  22DD               	addwfc	postdec2,f,c
 19947  0177C8                     l3017:
 19948                           
 19949                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19950  0177C8  52E5               	movf	postdec1,f,c
 19951  0177CA  52E5               	movf	postdec1,f,c
 19952  0177CC  52E5               	movf	postdec1,f,c
 19953  0177CE  52E5               	movf	postdec1,f,c
 19954  0177D0  0012               	return		;funcret
 19955  0177D2                     __end_of_fputc:
 19956                           	opt callstack 0
 19957                           
 19958 ;; *************** function _putch *****************
 19959 ;; Defined at:
 19960 ;;		line 170 in file "eadog.c"
 19961 ;; Parameters:    Size  Location     Type
 19962 ;;  c               1  [STACK] unsigned char 
 19963 ;; Auto vars:     Size  Location     Type
 19964 ;;		None
 19965 ;; Return value:  Size  Location     Type
 19966 ;;                  1  [STACK] void 
 19967 ;; Registers used:
 19968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19969 ;; Tracked objects:
 19970 ;;		On entry : 0/0
 19971 ;;		On exit  : 0/0
 19972 ;;		Unchanged: 0/0
 19973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19978 ;;Total ram usage:        0 bytes
 19979 ;; Hardware stack levels used:    1
 19980 ;; Hardware stack levels required when called:   16
 19981 ;; This function calls:
 19982 ;;		_ringBufS_put_dma
 19983 ;; This function is called by:
 19984 ;;		_fputc
 19985 ;; This function uses a reentrant model
 19986 ;;
 19987                           
 19988                           	psect	text72
 19989  019B70                     __ptext72:
 19990                           	opt callstack 0
 19991  019B70                     _putch:
 19992                           	opt callstack 0
 19993                           
 19994                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19995                           ;stkvar	_c @ sp[(0)+-1]
 19996                           
 19997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19998                           ;incstack = 0
 19999 ;; hardware stack exceeded
 20000  019B70  0EFF               	movlw	-1
 20001  019B72  50E3               	movf	plusw1,w,c
 20002  019B74  6EE6               	movwf	postinc1,c
 20003  019B76  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 20004  019B7C  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 20005  019B82  ECD2  F0C1         	call	_ringBufS_put_dma	;wreg free
 20006                           
 20007                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20008  019B86  52E5               	movf	postdec1,f,c
 20009  019B88  0012               	return		;funcret
 20010  019B8A                     __end_of_putch:
 20011                           	opt callstack 0
 20012                           
 20013 ;; *************** function _ringBufS_put_dma *****************
 20014 ;; Defined at:
 20015 ;;		line 67 in file "ringbufs.c"
 20016 ;; Parameters:    Size  Location     Type
 20017 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20018 ;;		 -> ring_buf1(67), 
 20019 ;;  c               1  [STACK] const unsigned char 
 20020 ;; Auto vars:     Size  Location     Type
 20021 ;;		None
 20022 ;; Return value:  Size  Location     Type
 20023 ;;                  1  [STACK] void 
 20024 ;; Registers used:
 20025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20026 ;; Tracked objects:
 20027 ;;		On entry : 0/0
 20028 ;;		On exit  : 0/0
 20029 ;;		Unchanged: 0/0
 20030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20035 ;;Total ram usage:        0 bytes
 20036 ;; Hardware stack levels used:    1
 20037 ;; Hardware stack levels required when called:   15
 20038 ;; This function calls:
 20039 ;;		Nothing
 20040 ;; This function is called by:
 20041 ;;		_putch
 20042 ;; This function uses a reentrant model
 20043 ;;
 20044                           
 20045                           	psect	text73
 20046  0183A4                     __ptext73:
 20047                           	opt callstack 0
 20048  0183A4                     _ringBufS_put_dma:
 20049                           	opt callstack 0
 20050                           
 20051                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20052                           ;stkvar	__this @ sp[(0)+-2]
 20053                           
 20054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20055                           ;incstack = 0
 20056 ;; hardware stack exceeded
 20057  0183A4  0EFE               	movlw	-2
 20058  0183A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20059  0183AC  0EFF               	movlw	-1
 20060  0183AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20061  0183B4  0E42               	movlw	66
 20062  0183B6  240B               	addwf	(btemp+10)^0,w,c
 20063  0183B8  6ED9               	movwf	fsr2l,c
 20064  0183BA  0E00               	movlw	0
 20065  0183BC  200C               	addwfc	(btemp+11)^0,w,c
 20066  0183BE  6EDA               	movwf	fsr2h,c
 20067  0183C0  0E40               	movlw	64
 20068  0183C2  60DF               	cpfslt	indf2,c
 20069  0183C4  D040               	goto	l1554
 20070                           
 20071                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20072                           ;stkvar	_c @ sp[(0)+-3]
 20073                           ;stkvar	__this @ sp[(0)+-2]
 20074  0183C6  0EFE               	movlw	-2
 20075  0183C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20076  0183CE  0EFF               	movlw	-1
 20077  0183D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20078  0183D6  0E40               	movlw	64
 20079  0183D8  240B               	addwf	(btemp+10)^0,w,c
 20080  0183DA  6ED9               	movwf	fsr2l,c
 20081  0183DC  0E00               	movlw	0
 20082  0183DE  200C               	addwfc	(btemp+11)^0,w,c
 20083  0183E0  6EDA               	movwf	fsr2h,c
 20084  0183E2  50DF               	movf	indf2,w,c
 20085  0183E4  6E0C               	movwf	(btemp+11)^0,c
 20086                           
 20087                           ;stkvar	__this @ sp[(0)+-2]
 20088  0183E6  0EFE               	movlw	-2
 20089  0183E8  006F FF8C  F009    	movff	plusw1,btemp+8
 20090  0183EE  0EFF               	movlw	-1
 20091  0183F0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20092  0183F6  500C               	movf	(btemp+11)^0,w,c
 20093  0183F8  2409               	addwf	(btemp+8)^0,w,c
 20094  0183FA  6ED9               	movwf	fsr2l,c
 20095  0183FC  0E00               	movlw	0
 20096  0183FE  200A               	addwfc	(btemp+9)^0,w,c
 20097  018400  6EDA               	movwf	fsr2h,c
 20098  018402  0EFD               	movlw	-3
 20099  018404  006F FF8F FFDF     	movff	plusw1,indf2
 20100                           
 20101                           ;ringbufs.c: 71:   ++_this->head;
 20102                           ;stkvar	__this @ sp[(0)+-2]
 20103  01840A  0EFE               	movlw	-2
 20104  01840C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20105  018412  0EFF               	movlw	-1
 20106  018414  006F FF8C  F00C    	movff	plusw1,btemp+11
 20107  01841A  0E40               	movlw	64
 20108  01841C  240B               	addwf	(btemp+10)^0,w,c
 20109  01841E  6ED9               	movwf	fsr2l,c
 20110  018420  0E00               	movlw	0
 20111  018422  200C               	addwfc	(btemp+11)^0,w,c
 20112  018424  6EDA               	movwf	fsr2h,c
 20113  018426  2ADF               	incf	indf2,f,c
 20114                           
 20115                           ;ringbufs.c: 72:   ++_this->count;
 20116                           ;stkvar	__this @ sp[(0)+-2]
 20117  018428  0EFE               	movlw	-2
 20118  01842A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20119  018430  0EFF               	movlw	-1
 20120  018432  006F FF8C  F00C    	movff	plusw1,btemp+11
 20121  018438  0E42               	movlw	66
 20122  01843A  240B               	addwf	(btemp+10)^0,w,c
 20123  01843C  6ED9               	movwf	fsr2l,c
 20124  01843E  0E00               	movlw	0
 20125  018440  200C               	addwfc	(btemp+11)^0,w,c
 20126  018442  6EDA               	movwf	fsr2h,c
 20127  018444  2ADF               	incf	indf2,f,c
 20128  018446                     l1554:
 20129                           
 20130                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20131  018446  52E5               	movf	postdec1,f,c
 20132  018448  52E5               	movf	postdec1,f,c
 20133  01844A  52E5               	movf	postdec1,f,c
 20134  01844C  0012               	return		;funcret
 20135  01844E                     __end_of_ringBufS_put_dma:
 20136                           	opt callstack 0
 20137                           
 20138 ;; *************** function _atoi *****************
 20139 ;; Defined at:
 20140 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  s               2  [STACK] PTR const unsigned char 
 20143 ;;		 -> STR_46(27), STR_44(3), STR_43(3), STR_42(19), 
 20144 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
 20145 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
 20146 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
 20147 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
 20148 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
 20149 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
 20150 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
 20151 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
 20152 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 20153 ;;		 -> STR_1(17), 
 20154 ;; Auto vars:     Size  Location     Type
 20155 ;;  n               2  [STACK] int 
 20156 ;;  neg             2  [STACK] int 
 20157 ;; Return value:  Size  Location     Type
 20158 ;;                  2  [STACK] int 
 20159 ;; Registers used:
 20160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20161 ;; Tracked objects:
 20162 ;;		On entry : 0/0
 20163 ;;		On exit  : 0/0
 20164 ;;		Unchanged: 0/0
 20165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20170 ;;Total ram usage:        0 bytes
 20171 ;; Hardware stack levels used:    1
 20172 ;; Hardware stack levels required when called:   16
 20173 ;; This function calls:
 20174 ;;		_isdigit
 20175 ;;		_isspace
 20176 ;; This function is called by:
 20177 ;;		_vfpfcnvrt
 20178 ;; This function uses a reentrant model
 20179 ;;
 20180                           
 20181                           	psect	text74
 20182  015D7A                     __ptext74:
 20183                           	opt callstack 0
 20184  015D7A                     _atoi:
 20185                           	opt callstack 0
 20186                           
 20187                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20188  015D7A  0E09               	movlw	9
 20189  015D7C  26E1               	addwf	fsr1l,f,c
 20190  015D7E  0E00               	movlw	0
 20191  015D80  22E2               	addwfc	fsr1h,f,c
 20192                           
 20193                           ;stkvar	_n @ sp[(-9)+5]
 20194                           
 20195                           ;incstack = 0
 20196 ;; hardware stack exceeded
 20197  015D82  0EFC               	movlw	-4
 20198  015D84  6AE3               	clrf	plusw1,c
 20199  015D86  0EFD               	movlw	-3
 20200  015D88  6AE3               	clrf	plusw1,c
 20201                           
 20202                           ;stkvar	_neg @ sp[(-9)+7]
 20203  015D8A  0EFE               	movlw	-2
 20204  015D8C  6AE3               	clrf	plusw1,c
 20205  015D8E  0EFF               	movlw	-1
 20206  015D90  6AE3               	clrf	plusw1,c
 20207  015D92  D011               	goto	l8438
 20208  015D94                     l8436:
 20209                           
 20210                           ;stkvar	_s @ sp[(-9)+-2]
 20211  015D94  0EF5               	movlw	-11
 20212  015D96  50E3               	movf	plusw1,w,c
 20213  015D98  0F01               	addlw	1
 20214  015D9A  6E01               	movwf	btemp^0,c
 20215  015D9C  0EF5               	movlw	-11
 20216  015D9E  0060  F007  FFE3   	movff	btemp,plusw1
 20217  015DA4  6A01               	clrf	btemp^0,c
 20218  015DA6  0EF6               	movlw	-10
 20219  015DA8  50E3               	movf	plusw1,w,c
 20220  015DAA  2001               	addwfc	btemp^0,w,c
 20221  015DAC  6E01               	movwf	btemp^0,c
 20222  015DAE  0EF6               	movlw	-10
 20223  015DB0  0060  F007  FFE3   	movff	btemp,plusw1
 20224  015DB6                     l8438:
 20225                           
 20226                           ;stkvar	_atoi$5672 @ sp[(-9)+4]
 20227  015DB6  0EFB               	movlw	-5
 20228  015DB8  6AE3               	clrf	plusw1,c
 20229  015DBA  2AE3               	incf	plusw1,f,c
 20230                           
 20231                           ;stkvar	_s @ sp[(-9)+-2]
 20232  015DBC  50E1               	movf	fsr1l,w,c
 20233  015DBE  0FF5               	addlw	-11
 20234  015DC0  6ED9               	movwf	fsr2l,c
 20235  015DC2  50E2               	movf	fsr1h,w,c
 20236  015DC4  6EDA               	movwf	fsr2h,c
 20237  015DC6  0EFF               	movlw	255
 20238  015DC8  22DA               	addwfc	fsr2h,f,c
 20239  015DCA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20240  015DD0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20241  015DD6                     	if	0	;tblptru may be non-zero
 20242  015DD6                     	endif
 20243  015DD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20244  015DD6  0E00               	movlw	low (__mediumconst shr (0+16))
 20245  015DD8  6EF8               	movwf	tblptru,c
 20246  015DDA                     	endif
 20247  015DDA  0008               	tblrd		*
 20248  015DDC  50F5               	movf	tablat,w,c
 20249  015DDE  0A20               	xorlw	32
 20250  015DE0  B4D8               	btfsc	status,2,c
 20251  015DE2  D023               	goto	l8446
 20252  015DE4  0EF7               	movlw	247
 20253  015DE6  6E0B               	movwf	(btemp+10)^0,c
 20254  015DE8  0EFF               	movlw	255
 20255  015DEA  6E0C               	movwf	(btemp+11)^0,c
 20256                           
 20257                           ;stkvar	_s @ sp[(-9)+-2]
 20258  015DEC  50E1               	movf	fsr1l,w,c
 20259  015DEE  0FF5               	addlw	-11
 20260  015DF0  6ED9               	movwf	fsr2l,c
 20261  015DF2  50E2               	movf	fsr1h,w,c
 20262  015DF4  6EDA               	movwf	fsr2h,c
 20263  015DF6  0EFF               	movlw	255
 20264  015DF8  22DA               	addwfc	fsr2h,f,c
 20265  015DFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20266  015E00  006F FF77 FFF7     	movff	postdec2,tblptrh
 20267  015E06                     	if	0	;tblptru may be non-zero
 20268  015E06                     	endif
 20269  015E06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20270  015E06  0E00               	movlw	low (__mediumconst shr (0+16))
 20271  015E08  6EF8               	movwf	tblptru,c
 20272  015E0A                     	endif
 20273  015E0A  0008               	tblrd		*
 20274  015E0C  50F5               	movf	tablat,w,c
 20275  015E0E  6E09               	movwf	(btemp+8)^0,c
 20276  015E10  6A0A               	clrf	(btemp+9)^0,c
 20277  015E12  500B               	movf	(btemp+10)^0,w,c
 20278  015E14  2609               	addwf	(btemp+8)^0,f,c
 20279  015E16  500C               	movf	(btemp+11)^0,w,c
 20280  015E18  220A               	addwfc	(btemp+9)^0,f,c
 20281  015E1A  500A               	movf	(btemp+9)^0,w,c
 20282  015E1C  E104               	bnz	u7630
 20283  015E1E  0E05               	movlw	5
 20284  015E20  5C09               	subwf	(btemp+8)^0,w,c
 20285  015E22  A0D8               	btfss	status,0,c
 20286  015E24  D002               	goto	l8446
 20287  015E26                     u7630:
 20288                           
 20289                           ;stkvar	_atoi$5672 @ sp[(-9)+4]
 20290  015E26  0EFB               	movlw	-5
 20291  015E28  6AE3               	clrf	plusw1,c
 20292  015E2A                     l8446:
 20293                           
 20294                           ;stkvar	_atoi$5672 @ sp[(-9)+4]
 20295  015E2A  0EFB               	movlw	-5
 20296  015E2C  50E3               	movf	plusw1,w,c
 20297  015E2E  6E0B               	movwf	(btemp+10)^0,c
 20298  015E30  6A0C               	clrf	(btemp+11)^0,c
 20299                           
 20300                           ;stkvar	_atoi$5671 @ sp[(-9)+2]
 20301  015E32  0EF9               	movlw	-7
 20302  015E34  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20303  015E3A  0EFA               	movlw	-6
 20304  015E3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20305                           
 20306                           ;stkvar	_atoi$5671 @ sp[(-9)+2]
 20307  015E42  0EF9               	movlw	-7
 20308  015E44  006F FF8C  F001    	movff	plusw1,btemp
 20309  015E4A  0EFA               	movlw	-6
 20310  015E4C  50E3               	movf	plusw1,w,c
 20311  015E4E  1001               	iorwf	btemp^0,w,c
 20312  015E50  B4D8               	btfsc	status,2,c
 20313  015E52  D01F               	goto	l8456
 20314  015E54  D79F               	goto	l8436
 20315  015E56                     l8452:
 20316  015E56  0E01               	movlw	1
 20317  015E58  6E0B               	movwf	(btemp+10)^0,c
 20318  015E5A  0E00               	movlw	0
 20319  015E5C  6E0C               	movwf	(btemp+11)^0,c
 20320                           
 20321                           ;stkvar	_neg @ sp[(-9)+7]
 20322  015E5E  0EFE               	movlw	-2
 20323  015E60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20324  015E66  0EFF               	movlw	-1
 20325  015E68  0060  F033  FFE3   	movff	btemp+11,plusw1
 20326  015E6E                     l8454:
 20327                           
 20328                           ;stkvar	_s @ sp[(-9)+-2]
 20329  015E6E  0EF5               	movlw	-11
 20330  015E70  50E3               	movf	plusw1,w,c
 20331  015E72  0F01               	addlw	1
 20332  015E74  6E01               	movwf	btemp^0,c
 20333  015E76  0EF5               	movlw	-11
 20334  015E78  0060  F007  FFE3   	movff	btemp,plusw1
 20335  015E7E  6A01               	clrf	btemp^0,c
 20336  015E80  0EF6               	movlw	-10
 20337  015E82  50E3               	movf	plusw1,w,c
 20338  015E84  2001               	addwfc	btemp^0,w,c
 20339  015E86  6E01               	movwf	btemp^0,c
 20340  015E88  0EF6               	movlw	-10
 20341  015E8A  0060  F007  FFE3   	movff	btemp,plusw1
 20342  015E90  D053               	goto	l8462
 20343  015E92                     l8456:
 20344                           
 20345                           ;stkvar	_s @ sp[(-9)+-2]
 20346  015E92  50E1               	movf	fsr1l,w,c
 20347  015E94  0FF5               	addlw	-11
 20348  015E96  6ED9               	movwf	fsr2l,c
 20349  015E98  50E2               	movf	fsr1h,w,c
 20350  015E9A  6EDA               	movwf	fsr2h,c
 20351  015E9C  0EFF               	movlw	255
 20352  015E9E  22DA               	addwfc	fsr2h,f,c
 20353  015EA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 20354  015EA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 20355  015EAC                     	if	0	;tblptru may be non-zero
 20356  015EAC                     	endif
 20357  015EAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20358  015EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 20359  015EAE  6EF8               	movwf	tblptru,c
 20360  015EB0                     	endif
 20361  015EB0  0008               	tblrd		*
 20362  015EB2  50F5               	movf	tablat,w,c
 20363  015EB4  6E0B               	movwf	(btemp+10)^0,c
 20364  015EB6  6A0C               	clrf	(btemp+11)^0,c
 20365                           
 20366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20367                           ; Switch size 1, requested type "simple"
 20368                           ; Number of cases is 1, Range of values is 0 to 0
 20369                           ; switch strategies available:
 20370                           ; Name         Instructions Cycles
 20371                           ; simple_byte            4     3 (average)
 20372                           ;	Chosen strategy is simple_byte
 20373  015EB8  500C               	movf	(btemp+11)^0,w,c
 20374  015EBA  0A00               	xorlw	0	; case 0
 20375  015EBC  A4D8               	btfss	status,2,c
 20376  015EBE  D03C               	goto	l8462
 20377                           
 20378                           ; Switch size 1, requested type "simple"
 20379                           ; Number of cases is 2, Range of values is 43 to 45
 20380                           ; switch strategies available:
 20381                           ; Name         Instructions Cycles
 20382                           ; simple_byte            7     4 (average)
 20383                           ;	Chosen strategy is simple_byte
 20384  015EC0  500B               	movf	(btemp+10)^0,w,c
 20385  015EC2  0A2B               	xorlw	43	; case 43
 20386  015EC4  B4D8               	btfsc	status,2,c
 20387  015EC6  D7D3               	goto	l8454
 20388  015EC8  0A06               	xorlw	6	; case 45
 20389  015ECA  B4D8               	btfsc	status,2,c
 20390  015ECC  D7C4               	goto	l8452
 20391  015ECE  D034               	goto	l8462
 20392  015ED0                     l8458:
 20393                           
 20394                           ;stkvar	_n @ sp[(-9)+5]
 20395  015ED0  0EFC               	movlw	-4
 20396  015ED2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20397  015ED8  0EFD               	movlw	-3
 20398  015EDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20399  015EE0  0E0A               	movlw	10
 20400  015EE2  020B               	mulwf	(btemp+10)^0,c
 20401  015EE4  006F FFCC  F009    	movff	prodl,btemp+8
 20402  015EEA  006F FFD0  F00A    	movff	prodh,btemp+9
 20403  015EF0  020C               	mulwf	(btemp+11)^0,c
 20404  015EF2  50F3               	movf	prodl,w,c
 20405  015EF4  260A               	addwf	(btemp+9)^0,f,c
 20406                           
 20407                           ;stkvar	_s @ sp[(-9)+-2]
 20408  015EF6  50E1               	movf	fsr1l,w,c
 20409  015EF8  0FF5               	addlw	-11
 20410  015EFA  6ED9               	movwf	fsr2l,c
 20411  015EFC  50E2               	movf	fsr1h,w,c
 20412  015EFE  6EDA               	movwf	fsr2h,c
 20413  015F00  0EFF               	movlw	255
 20414  015F02  22DA               	addwfc	fsr2h,f,c
 20415  015F04  006F FF7B FFF6     	movff	postinc2,tblptrl
 20416  015F0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 20417  015F10                     	if	0	;tblptru may be non-zero
 20418  015F10                     	endif
 20419  015F10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20420  015F10  0E00               	movlw	low (__mediumconst shr (0+16))
 20421  015F12  6EF8               	movwf	tblptru,c
 20422  015F14                     	endif
 20423  015F14  0008               	tblrd		*
 20424  015F16  50F5               	movf	tablat,w,c
 20425  015F18  5E09               	subwf	(btemp+8)^0,f,c
 20426  015F1A  0E00               	movlw	0
 20427  015F1C  5A0A               	subwfb	(btemp+9)^0,f,c
 20428  015F1E  0E30               	movlw	48
 20429  015F20  2609               	addwf	(btemp+8)^0,f,c
 20430  015F22  0E00               	movlw	0
 20431  015F24  220A               	addwfc	(btemp+9)^0,f,c
 20432                           
 20433                           ;stkvar	_n @ sp[(-9)+5]
 20434  015F26  0EFC               	movlw	-4
 20435  015F28  0060  F027  FFE3   	movff	btemp+8,plusw1
 20436  015F2E  0EFD               	movlw	-3
 20437  015F30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20438  015F36  D79B               	goto	l8454
 20439  015F38                     l8462:
 20440  015F38  0ED0               	movlw	208
 20441  015F3A  6E0B               	movwf	(btemp+10)^0,c
 20442  015F3C  0EFF               	movlw	255
 20443  015F3E  6E0C               	movwf	(btemp+11)^0,c
 20444                           
 20445                           ;stkvar	_s @ sp[(-9)+-2]
 20446  015F40  50E1               	movf	fsr1l,w,c
 20447  015F42  0FF5               	addlw	-11
 20448  015F44  6ED9               	movwf	fsr2l,c
 20449  015F46  50E2               	movf	fsr1h,w,c
 20450  015F48  6EDA               	movwf	fsr2h,c
 20451  015F4A  0EFF               	movlw	255
 20452  015F4C  22DA               	addwfc	fsr2h,f,c
 20453  015F4E  006F FF7B FFF6     	movff	postinc2,tblptrl
 20454  015F54  006F FF77 FFF7     	movff	postdec2,tblptrh
 20455  015F5A                     	if	0	;tblptru may be non-zero
 20456  015F5A                     	endif
 20457  015F5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20458  015F5A  0E00               	movlw	low (__mediumconst shr (0+16))
 20459  015F5C  6EF8               	movwf	tblptru,c
 20460  015F5E                     	endif
 20461  015F5E  0008               	tblrd		*
 20462  015F60  50F5               	movf	tablat,w,c
 20463  015F62  6E09               	movwf	(btemp+8)^0,c
 20464  015F64  6A0A               	clrf	(btemp+9)^0,c
 20465  015F66  500B               	movf	(btemp+10)^0,w,c
 20466  015F68  2609               	addwf	(btemp+8)^0,f,c
 20467  015F6A  500C               	movf	(btemp+11)^0,w,c
 20468  015F6C  220A               	addwfc	(btemp+9)^0,f,c
 20469  015F6E  500A               	movf	(btemp+9)^0,w,c
 20470  015F70  E106               	bnz	u7650
 20471  015F72  0E0A               	movlw	10
 20472  015F74  5C09               	subwf	(btemp+8)^0,w,c
 20473  015F76  B0D8               	btfsc	status,0,c
 20474  015F78  D002               	goto	u7650
 20475  015F7A  0E01               	movlw	1
 20476  015F7C  D001               	goto	u7660
 20477  015F7E                     u7650:
 20478  015F7E  0E00               	movlw	0
 20479  015F80                     u7660:
 20480  015F80  6E0B               	movwf	(btemp+10)^0,c
 20481  015F82  6A0C               	clrf	(btemp+11)^0,c
 20482                           
 20483                           ;stkvar	_atoi$5673 @ sp[(-9)+0]
 20484  015F84  0EF7               	movlw	-9
 20485  015F86  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20486  015F8C  0EF8               	movlw	-8
 20487  015F8E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20488                           
 20489                           ;stkvar	_atoi$5673 @ sp[(-9)+0]
 20490  015F94  0EF7               	movlw	-9
 20491  015F96  006F FF8C  F001    	movff	plusw1,btemp
 20492  015F9C  0EF8               	movlw	-8
 20493  015F9E  50E3               	movf	plusw1,w,c
 20494  015FA0  1001               	iorwf	btemp^0,w,c
 20495  015FA2  A4D8               	btfss	status,2,c
 20496  015FA4  D795               	goto	l8458
 20497                           
 20498                           ;stkvar	_neg @ sp[(-9)+7]
 20499  015FA6  0EFE               	movlw	-2
 20500  015FA8  006F FF8C  F001    	movff	plusw1,btemp
 20501  015FAE  0EFF               	movlw	-1
 20502  015FB0  50E3               	movf	plusw1,w,c
 20503  015FB2  1001               	iorwf	btemp^0,w,c
 20504  015FB4  A4D8               	btfss	status,2,c
 20505  015FB6  D00E               	goto	l8472
 20506                           
 20507                           ;stkvar	_n @ sp[(-9)+5]
 20508  015FB8  0EFC               	movlw	-4
 20509  015FBA  006F FF8C  F001    	movff	plusw1,btemp
 20510  015FC0  1E01               	comf	btemp^0,f,c
 20511  015FC2  0EFD               	movlw	-3
 20512  015FC4  006F FF8C  F002    	movff	plusw1,btemp+1
 20513  015FCA  1E02               	comf	(btemp+1)^0,f,c
 20514  015FCC  2A01               	incf	btemp^0,f,c
 20515  015FCE  B4D8               	btfsc	status,2,c
 20516  015FD0  2A02               	incf	(btemp+1)^0,f,c
 20517  015FD2  D008               	goto	l2953
 20518  015FD4                     l8472:
 20519                           
 20520                           ;stkvar	_n @ sp[(-9)+5]
 20521  015FD4  0EFC               	movlw	-4
 20522  015FD6  006F FF8C  F001    	movff	plusw1,btemp
 20523  015FDC  0EFD               	movlw	-3
 20524  015FDE  006F FF8C  F002    	movff	plusw1,btemp+1
 20525  015FE4                     l2953:
 20526                           
 20527                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20528  015FE4  0EF5               	movlw	245
 20529  015FE6  26E1               	addwf	fsr1l,f,c
 20530  015FE8  0EFF               	movlw	255
 20531  015FEA  22E2               	addwfc	fsr1h,f,c
 20532  015FEC  0012               	return		;funcret
 20533  015FEE                     __end_of_atoi:
 20534                           	opt callstack 0
 20535                           
 20536 ;; *************** function _isspace *****************
 20537 ;; Defined at:
 20538 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20539 ;; Parameters:    Size  Location     Type
 20540 ;;  c               2  [STACK] int 
 20541 ;; Auto vars:     Size  Location     Type
 20542 ;;		None
 20543 ;; Return value:  Size  Location     Type
 20544 ;;                  2  [STACK] int 
 20545 ;; Registers used:
 20546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20547 ;; Tracked objects:
 20548 ;;		On entry : 0/0
 20549 ;;		On exit  : 0/0
 20550 ;;		Unchanged: 0/0
 20551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20556 ;;Total ram usage:        0 bytes
 20557 ;; Hardware stack levels used:    1
 20558 ;; Hardware stack levels required when called:   15
 20559 ;; This function calls:
 20560 ;;		Nothing
 20561 ;; This function is called by:
 20562 ;;		_atoi
 20563 ;; This function uses a reentrant model
 20564 ;;
 20565                           
 20566                           	psect	text75
 20567  018F14                     __ptext75:
 20568                           	opt callstack 0
 20569  018F14                     _isspace:
 20570                           	opt callstack 0
 20571                           
 20572                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20573  018F14  52E6               	movf	postinc1,f,c
 20574                           
 20575                           ;stkvar	_isspace$5711 @ sp[(-1)+0]
 20576                           
 20577                           ;incstack = 0
 20578 ;; hardware stack exceeded
 20579  018F16  0EFF               	movlw	-1
 20580  018F18  6AE3               	clrf	plusw1,c
 20581  018F1A  2AE3               	incf	plusw1,f,c
 20582                           
 20583                           ;stkvar	_c @ sp[(-1)+-2]
 20584  018F1C  0EFD               	movlw	-3
 20585  018F1E  006F FF8C  F001    	movff	plusw1,btemp
 20586  018F24  0E20               	movlw	32
 20587  018F26  1801               	xorwf	btemp^0,w,c
 20588  018F28  E104               	bnz	u6560
 20589  018F2A  0EFE               	movlw	-2
 20590  018F2C  50E3               	movf	plusw1,w,c
 20591  018F2E  B4D8               	btfsc	status,2,c
 20592  018F30  D012               	goto	l7870
 20593  018F32                     u6560:
 20594                           
 20595                           ;stkvar	_c @ sp[(-1)+-2]
 20596  018F32  0EFD               	movlw	-3
 20597  018F34  50E3               	movf	plusw1,w,c
 20598  018F36  0FF7               	addlw	247
 20599  018F38  6E0B               	movwf	(btemp+10)^0,c
 20600  018F3A  0EFE               	movlw	-2
 20601  018F3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20602  018F42  0EFF               	movlw	255
 20603  018F44  220C               	addwfc	(btemp+11)^0,f,c
 20604  018F46  500C               	movf	(btemp+11)^0,w,c
 20605  018F48  E104               	bnz	u6570
 20606  018F4A  0E05               	movlw	5
 20607  018F4C  5C0B               	subwf	(btemp+10)^0,w,c
 20608  018F4E  A0D8               	btfss	status,0,c
 20609  018F50  D002               	goto	l7870
 20610  018F52                     u6570:
 20611                           
 20612                           ;stkvar	_isspace$5711 @ sp[(-1)+0]
 20613  018F52  0EFF               	movlw	-1
 20614  018F54  6AE3               	clrf	plusw1,c
 20615  018F56                     l7870:
 20616                           
 20617                           ;stkvar	_isspace$5711 @ sp[(-1)+0]
 20618  018F56  0EFF               	movlw	-1
 20619  018F58  50E3               	movf	plusw1,w,c
 20620  018F5A  6E01               	movwf	btemp^0,c
 20621  018F5C  6A02               	clrf	(btemp+1)^0,c
 20622                           
 20623                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20624  018F5E  52E5               	movf	postdec1,f,c
 20625  018F60  52E5               	movf	postdec1,f,c
 20626  018F62  52E5               	movf	postdec1,f,c
 20627  018F64  0012               	return		;funcret
 20628  018F66                     __end_of_isspace:
 20629                           	opt callstack 0
 20630                           
 20631 ;; *************** function _isdigit *****************
 20632 ;; Defined at:
 20633 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20634 ;; Parameters:    Size  Location     Type
 20635 ;;  c               2  [STACK] int 
 20636 ;; Auto vars:     Size  Location     Type
 20637 ;;		None
 20638 ;; Return value:  Size  Location     Type
 20639 ;;                  2  [STACK] int 
 20640 ;; Registers used:
 20641 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20642 ;; Tracked objects:
 20643 ;;		On entry : 0/0
 20644 ;;		On exit  : 0/0
 20645 ;;		Unchanged: 0/0
 20646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20651 ;;Total ram usage:        0 bytes
 20652 ;; Hardware stack levels used:    1
 20653 ;; Hardware stack levels required when called:   15
 20654 ;; This function calls:
 20655 ;;		Nothing
 20656 ;; This function is called by:
 20657 ;;		_vfpfcnvrt
 20658 ;;		_atoi
 20659 ;; This function uses a reentrant model
 20660 ;;
 20661                           
 20662                           	psect	text76
 20663  019556                     __ptext76:
 20664                           	opt callstack 0
 20665  019556                     _isdigit:
 20666                           	opt callstack 0
 20667                           
 20668                           ;stkvar	_c @ sp[(0)+-2]
 20669                           
 20670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20671                           ;incstack = 0
 20672 ;; hardware stack exceeded
 20673  019556  0EFE               	movlw	-2
 20674  019558  50E3               	movf	plusw1,w,c
 20675  01955A  0FD0               	addlw	208
 20676  01955C  6E0B               	movwf	(btemp+10)^0,c
 20677  01955E  0EFF               	movlw	-1
 20678  019560  006F FF8C  F00C    	movff	plusw1,btemp+11
 20679  019566  0EFF               	movlw	255
 20680  019568  220C               	addwfc	(btemp+11)^0,f,c
 20681  01956A  500C               	movf	(btemp+11)^0,w,c
 20682  01956C  E106               	bnz	u5520
 20683  01956E  0E0A               	movlw	10
 20684  019570  5C0B               	subwf	(btemp+10)^0,w,c
 20685  019572  B0D8               	btfsc	status,0,c
 20686  019574  D002               	goto	u5520
 20687  019576  0E01               	movlw	1
 20688  019578  D001               	goto	u5530
 20689  01957A                     u5520:
 20690  01957A  0E00               	movlw	0
 20691  01957C                     u5530:
 20692  01957C  6E01               	movwf	btemp^0,c
 20693  01957E  6A02               	clrf	(btemp+1)^0,c
 20694                           
 20695                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20696  019580  52E5               	movf	postdec1,f,c
 20697  019582  52E5               	movf	postdec1,f,c
 20698  019584  0012               	return		;funcret
 20699  019586                     __end_of_isdigit:
 20700                           	opt callstack 0
 20701                           
 20702 ;; *************** function _set_vterm *****************
 20703 ;; Defined at:
 20704 ;;		line 107 in file "mconfig.c"
 20705 ;; Parameters:    Size  Location     Type
 20706 ;;  vterm           1  [STACK] const unsigned char 
 20707 ;; Auto vars:     Size  Location     Type
 20708 ;;		None
 20709 ;; Return value:  Size  Location     Type
 20710 ;;                  1  [STACK] unsigned char 
 20711 ;; Registers used:
 20712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 20713 ;; Tracked objects:
 20714 ;;		On entry : 0/2
 20715 ;;		On exit  : 0/0
 20716 ;;		Unchanged: 0/0
 20717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20722 ;;Total ram usage:        0 bytes
 20723 ;; Hardware stack levels used:    1
 20724 ;; Hardware stack levels required when called:   15
 20725 ;; This function calls:
 20726 ;;		Nothing
 20727 ;; This function is called by:
 20728 ;;		_main
 20729 ;;		_check_help
 20730 ;; This function uses a reentrant model
 20731 ;;
 20732                           
 20733                           	psect	text77
 20734  019AFA                     __ptext77:
 20735                           	opt callstack 0
 20736  019AFA                     _set_vterm:
 20737                           	opt callstack 15
 20738                           
 20739                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20740                           ;stkvar	_vterm @ sp[(0)+-1]
 20741                           
 20742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20743                           ;incstack = 0
 20744  019AFA  0EFF               	movlw	-1
 20745  019AFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20746  019B02  0E03               	movlw	3
 20747  019B04  160C               	andwf	(btemp+11)^0,f,c
 20748  019B06  EE22  F11F         	lfsr	2,_D+288
 20749  019B0A  50DF               	movf	223,w,c
 20750  019B0C  180C               	xorwf	(btemp+11)^0,w,c
 20751  019B0E  0BFE               	andlw	-2
 20752  019B10  180C               	xorwf	(btemp+11)^0,w,c
 20753  019B12  6EDF               	movwf	223,c
 20754                           
 20755                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20756  019B14  52E5               	movf	postdec1,f,c
 20757  019B16  0012               	return		;funcret
 20758  019B18                     __end_of_set_vterm:
 20759                           	opt callstack 0
 20760                           
 20761 ;; *************** function _set_temp_display_help *****************
 20762 ;; Defined at:
 20763 ;;		line 211 in file "mconfig.c"
 20764 ;; Parameters:    Size  Location     Type
 20765 ;;  new_response    1  [STACK] const enum E16509
 20766 ;; Auto vars:     Size  Location     Type
 20767 ;;		None
 20768 ;; Return value:  Size  Location     Type
 20769 ;;                  1  [STACK] enum E16509
 20770 ;; Registers used:
 20771 ;;		wreg, fsr1l, fsr1h
 20772 ;; Tracked objects:
 20773 ;;		On entry : 0/2
 20774 ;;		On exit  : 3F/2
 20775 ;;		Unchanged: 0/0
 20776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20781 ;;Total ram usage:        0 bytes
 20782 ;; Hardware stack levels used:    1
 20783 ;; Hardware stack levels required when called:   15
 20784 ;; This function calls:
 20785 ;;		Nothing
 20786 ;; This function is called by:
 20787 ;;		_check_help
 20788 ;; This function uses a reentrant model
 20789 ;;
 20790                           
 20791                           	psect	text78
 20792  019C3E                     __ptext78:
 20793                           	opt callstack 0
 20794  019C3E                     _set_temp_display_help:
 20795                           	opt callstack 14
 20796                           
 20797                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20798                           
 20799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20800                           ;incstack = 0
 20801  019C3E  0102               	movlb	2	; () banked
 20802  019C40  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20803                           
 20804                           ; BSR set to: 2
 20805                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20806                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20807  019C42  0EFF               	movlw	-1
 20808  019C44  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 20809                           
 20810                           ; BSR set to: 2
 20811                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20812  019C4A  52E5               	movf	postdec1,f,c
 20813  019C4C  0012               	return		;funcret
 20814  019C4E                     __end_of_set_temp_display_help:
 20815                           	opt callstack 0
 20816                           
 20817 ;; *************** function _set_display_info *****************
 20818 ;; Defined at:
 20819 ;;		line 200 in file "mconfig.c"
 20820 ;; Parameters:    Size  Location     Type
 20821 ;;  new_response    1  [STACK] const enum E16509
 20822 ;; Auto vars:     Size  Location     Type
 20823 ;;		None
 20824 ;; Return value:  Size  Location     Type
 20825 ;;                  1  [STACK] enum E16994
 20826 ;; Registers used:
 20827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20828 ;; Tracked objects:
 20829 ;;		On entry : 0/1
 20830 ;;		On exit  : 0/0
 20831 ;;		Unchanged: 0/0
 20832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20837 ;;Total ram usage:        0 bytes
 20838 ;; Hardware stack levels used:    1
 20839 ;; Hardware stack levels required when called:   16
 20840 ;; This function calls:
 20841 ;;		_TimerDone
 20842 ;; This function is called by:
 20843 ;;		_main
 20844 ;;		_check_help
 20845 ;; This function uses a reentrant model
 20846 ;;
 20847                           
 20848                           	psect	text79
 20849  019B18                     __ptext79:
 20850                           	opt callstack 0
 20851  019B18                     _set_display_info:
 20852                           	opt callstack 14
 20853                           
 20854                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20855                           
 20856                           ; BSR set to: 2
 20857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20858                           ;incstack = 0
 20859  019B18  0E07               	movlw	7
 20860  019B1A  6EE6               	movwf	postinc1,c
 20861  019B1C  EC83  F0CB         	call	_TimerDone	;wreg free
 20862  019B20  5001               	movf	btemp^0,w,c
 20863  019B22  B4D8               	btfsc	status,2,c
 20864  019B24  D006               	goto	l1689
 20865                           
 20866                           ;mconfig.c: 205:   old_info = V.response.info;
 20867  019B26  0102               	movlb	2	; () banked
 20868  019B28  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20869                           
 20870                           ; BSR set to: 2
 20871                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20872                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20873  019B2A  0EFF               	movlw	-1
 20874  019B2C  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 20875  019B32                     l1689:
 20876                           
 20877                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20878  019B32  52E5               	movf	postdec1,f,c
 20879  019B34  0012               	return		;funcret
 20880  019B36                     __end_of_set_display_info:
 20881                           	opt callstack 0
 20882                           
 20883 ;; *************** function _mode_lamp_dim *****************
 20884 ;; Defined at:
 20885 ;;		line 13 in file "mconfig.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;  level           2  [STACK] const unsigned short 
 20888 ;; Auto vars:     Size  Location     Type
 20889 ;;		None
 20890 ;; Return value:  Size  Location     Type
 20891 ;;                  1  [STACK] void 
 20892 ;; Registers used:
 20893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20894 ;; Tracked objects:
 20895 ;;		On entry : 0/2
 20896 ;;		On exit  : 0/0
 20897 ;;		Unchanged: 0/0
 20898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20903 ;;Total ram usage:        0 bytes
 20904 ;; Hardware stack levels used:    1
 20905 ;; Hardware stack levels required when called:   16
 20906 ;; This function calls:
 20907 ;;		_PWM8_LoadDutyValue
 20908 ;; This function is called by:
 20909 ;;		_main
 20910 ;;		_check_help
 20911 ;; This function uses a reentrant model
 20912 ;;
 20913                           
 20914                           	psect	text80
 20915  019BA6                     __ptext80:
 20916                           	opt callstack 0
 20917  019BA6                     _mode_lamp_dim:
 20918                           	opt callstack 14
 20919                           
 20920                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20921                           ;stkvar	_level @ sp[(0)+-2]
 20922                           
 20923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20924                           ;incstack = 0
 20925  019BA6  0EFE               	movlw	-2
 20926  019BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 20927  019BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 20928  019BB4  EC1D  F0C9         	call	_PWM8_LoadDutyValue	;wreg free
 20929                           
 20930                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20931  019BB8  52E5               	movf	postdec1,f,c
 20932  019BBA  52E5               	movf	postdec1,f,c
 20933  019BBC  0012               	return		;funcret
 20934  019BBE                     __end_of_mode_lamp_dim:
 20935                           	opt callstack 0
 20936                           
 20937 ;; *************** function _mode_lamp_bright *****************
 20938 ;; Defined at:
 20939 ;;		line 18 in file "mconfig.c"
 20940 ;; Parameters:    Size  Location     Type
 20941 ;;		None
 20942 ;; Auto vars:     Size  Location     Type
 20943 ;;		None
 20944 ;; Return value:  Size  Location     Type
 20945 ;;                  1  [STACK] void 
 20946 ;; Registers used:
 20947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20948 ;; Tracked objects:
 20949 ;;		On entry : 0/0
 20950 ;;		On exit  : 0/0
 20951 ;;		Unchanged: 0/0
 20952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20957 ;;Total ram usage:        0 bytes
 20958 ;; Hardware stack levels used:    1
 20959 ;; Hardware stack levels required when called:   16
 20960 ;; This function calls:
 20961 ;;		_PWM8_LoadDutyValue
 20962 ;; This function is called by:
 20963 ;;		_check_help
 20964 ;; This function uses a reentrant model
 20965 ;;
 20966                           
 20967                           	psect	text81
 20968  019C5C                     __ptext81:
 20969                           	opt callstack 0
 20970  019C5C                     _mode_lamp_bright:
 20971                           	opt callstack 13
 20972                           
 20973                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20974                           
 20975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20976                           ;incstack = 0
 20977  019C5C  0E2C               	movlw	44
 20978  019C5E  6EE6               	movwf	postinc1,c
 20979  019C60  0E01               	movlw	1
 20980  019C62  6EE6               	movwf	postinc1,c
 20981  019C64  EC1D  F0C9         	call	_PWM8_LoadDutyValue	;wreg free
 20982                           
 20983                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20984  019C68  0012               	return		;funcret
 20985  019C6A                     __end_of_mode_lamp_bright:
 20986                           	opt callstack 0
 20987                           
 20988 ;; *************** function _PWM8_LoadDutyValue *****************
 20989 ;; Defined at:
 20990 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20991 ;; Parameters:    Size  Location     Type
 20992 ;;  dutyValue       2  [STACK] unsigned short 
 20993 ;; Auto vars:     Size  Location     Type
 20994 ;;		None
 20995 ;; Return value:  Size  Location     Type
 20996 ;;                  1  [STACK] void 
 20997 ;; Registers used:
 20998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20999 ;; Tracked objects:
 21000 ;;		On entry : 0/2
 21001 ;;		On exit  : 0/0
 21002 ;;		Unchanged: 0/0
 21003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21008 ;;Total ram usage:        0 bytes
 21009 ;; Hardware stack levels used:    1
 21010 ;; Hardware stack levels required when called:   15
 21011 ;; This function calls:
 21012 ;;		Nothing
 21013 ;; This function is called by:
 21014 ;;		_mode_lamp_dim
 21015 ;;		_mode_lamp_bright
 21016 ;; This function uses a reentrant model
 21017 ;;
 21018                           
 21019                           	psect	text82
 21020  01923A                     __ptext82:
 21021                           	opt callstack 0
 21022  01923A                     _PWM8_LoadDutyValue:
 21023                           	opt callstack 14
 21024                           
 21025                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21026                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21027                           
 21028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21029                           ;incstack = 0
 21030  01923A  0EFE               	movlw	-2
 21031  01923C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21032  019242  0EFF               	movlw	-1
 21033  019244  006F FF8C  F00C    	movff	plusw1,btemp+11
 21034  01924A  90D8               	bcf	status,0,c
 21035  01924C  320C               	rrcf	(btemp+11)^0,f,c
 21036  01924E  320B               	rrcf	(btemp+10)^0,f,c
 21037  019250  90D8               	bcf	status,0,c
 21038  019252  320C               	rrcf	(btemp+11)^0,f,c
 21039  019254  320B               	rrcf	(btemp+10)^0,f,c
 21040  019256  500B               	movf	(btemp+10)^0,w,c
 21041  019258  6E61               	movwf	97,c	;volatile
 21042                           
 21043                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21044                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21045  01925A  0EFE               	movlw	-2
 21046  01925C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21047  019262  0E03               	movlw	3
 21048  019264  160C               	andwf	(btemp+11)^0,f,c
 21049  019266  0E06               	movlw	6
 21050  019268  6E01               	movwf	btemp^0,c
 21051  01926A                     u8055:
 21052  01926A  90D8               	bcf	status,0,c
 21053  01926C  360C               	rlcf	(btemp+11)^0,f,c
 21054  01926E  2E01               	decfsz	btemp^0,f,c
 21055  019270  D7FC               	goto	u8055
 21056  019272  500C               	movf	(btemp+11)^0,w,c
 21057  019274  6E60               	movwf	96,c	;volatile
 21058                           
 21059                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21060  019276  52E5               	movf	postdec1,f,c
 21061  019278  52E5               	movf	postdec1,f,c
 21062  01927A  0012               	return		;funcret
 21063  01927C                     __end_of_PWM8_LoadDutyValue:
 21064                           	opt callstack 0
 21065                           
 21066 ;; *************** function _help_button *****************
 21067 ;; Defined at:
 21068 ;;		line 26 in file "mconfig.c"
 21069 ;; Parameters:    Size  Location     Type
 21070 ;;		None
 21071 ;; Auto vars:     Size  Location     Type
 21072 ;;		None
 21073 ;; Return value:  Size  Location     Type
 21074 ;;                  1  [STACK] _Bool 
 21075 ;; Registers used:
 21076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21077 ;; Tracked objects:
 21078 ;;		On entry : 0/2
 21079 ;;		On exit  : 0/0
 21080 ;;		Unchanged: 0/0
 21081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21086 ;;Total ram usage:        0 bytes
 21087 ;; Hardware stack levels used:    1
 21088 ;; Hardware stack levels required when called:   16
 21089 ;; This function calls:
 21090 ;;		_StartTimer
 21091 ;;		_TimerDone
 21092 ;; This function is called by:
 21093 ;;		_check_help
 21094 ;; This function uses a reentrant model
 21095 ;;
 21096                           
 21097                           	psect	text83
 21098  0193BA                     __ptext83:
 21099                           	opt callstack 0
 21100  0193BA                     _help_button:
 21101                           	opt callstack 13
 21102                           
 21103                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21104                           
 21105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21106                           ;incstack = 0
 21107  0193BA  B0CB               	btfsc	203,0,c	;volatile
 21108  0193BC  D00C               	goto	l1632
 21109                           
 21110                           ;mconfig.c: 29:   V.help = 1;
 21111  0193BE  0102               	movlb	2	; () banked
 21112  0193C0  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21113                           
 21114                           ; BSR set to: 2
 21115                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21116  0193C2  0E08               	movlw	8
 21117  0193C4  6EE6               	movwf	postinc1,c
 21118  0193C6  EC83  F0CB         	call	_TimerDone	;wreg free
 21119  0193CA  5001               	movf	btemp^0,w,c
 21120  0193CC  B4D8               	btfsc	status,2,c
 21121  0193CE  D003               	goto	l1632
 21122                           
 21123                           ;mconfig.c: 31:    return 1;
 21124  0193D0  0E01               	movlw	1
 21125  0193D2  6E01               	movwf	btemp^0,c
 21126  0193D4  0012               	return	
 21127  0193D6                     l1632:
 21128                           
 21129                           ;mconfig.c: 34:  if (!V.help)
 21130  0193D6  0102               	movlb	2	; () banked
 21131  0193D8  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21132  0193DA  D008               	goto	l9386
 21133                           
 21134                           ; BSR set to: 2
 21135                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21136  0193DC  0E2C               	movlw	44
 21137  0193DE  6EE6               	movwf	postinc1,c
 21138  0193E0  0E01               	movlw	1
 21139  0193E2  6EE6               	movwf	postinc1,c
 21140  0193E4  0E08               	movlw	8
 21141  0193E6  6EE6               	movwf	postinc1,c
 21142  0193E8  EC3E  F0C9         	call	_StartTimer	;wreg free
 21143  0193EC                     l9386:
 21144                           
 21145                           ;mconfig.c: 37:  return 0;
 21146  0193EC  0E00               	movlw	0
 21147  0193EE  6E01               	movwf	btemp^0,c
 21148                           
 21149                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21150  0193F0  0012               	return		;funcret
 21151  0193F2                     __end_of_help_button:
 21152                           	opt callstack 0
 21153                           
 21154 ;; *************** function _TimerDone *****************
 21155 ;; Defined at:
 21156 ;;		line 20 in file "timers.c"
 21157 ;; Parameters:    Size  Location     Type
 21158 ;;  timer           1  [STACK] const unsigned char 
 21159 ;; Auto vars:     Size  Location     Type
 21160 ;;		None
 21161 ;; Return value:  Size  Location     Type
 21162 ;;                  1  [STACK] _Bool 
 21163 ;; Registers used:
 21164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21165 ;; Tracked objects:
 21166 ;;		On entry : 0/1
 21167 ;;		On exit  : 0/0
 21168 ;;		Unchanged: 0/0
 21169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21174 ;;Total ram usage:        0 bytes
 21175 ;; Hardware stack levels used:    1
 21176 ;; Hardware stack levels required when called:   15
 21177 ;; This function calls:
 21178 ;;		Nothing
 21179 ;; This function is called by:
 21180 ;;		_main
 21181 ;;		_WaitMs
 21182 ;;		_help_button
 21183 ;;		_check_help
 21184 ;;		_set_display_info
 21185 ;; This function uses a reentrant model
 21186 ;;
 21187                           
 21188                           	psect	text84
 21189  019706                     __ptext84:
 21190                           	opt callstack 0
 21191  019706                     _TimerDone:
 21192                           	opt callstack 14
 21193                           
 21194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21195                           ;incstack = 0
 21196  019706  0004               	clrwdt		;# 
 21197                           
 21198                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21199                           ;stkvar	_timer @ sp[(0)+-1]
 21200  019708  0EFF               	movlw	-1
 21201  01970A  50E3               	movf	plusw1,w,c
 21202  01970C  0D02               	mullw	2
 21203  01970E  0EDA               	movlw	low _tickCount
 21204  019710  24F3               	addwf	243,w,c
 21205  019712  6ED9               	movwf	fsr2l,c
 21206  019714  0E01               	movlw	high _tickCount
 21207  019716  20F4               	addwfc	prodh,w,c
 21208  019718  6EDA               	movwf	fsr2h,c
 21209  01971A  50DE               	movf	postinc2,w,c
 21210  01971C  10DE               	iorwf	postinc2,w,c
 21211  01971E  A4D8               	btfss	status,2,c
 21212  019720  D002               	goto	l8694
 21213                           
 21214                           ;timers.c: 24:   return 1;
 21215  019722  0E01               	movlw	1
 21216  019724  D001               	goto	L20
 21217  019726                     l8694:
 21218                           
 21219                           ;timers.c: 26:  return 0;
 21220  019726  0E00               	movlw	0
 21221  019728                     L20:
 21222  019728  6E01               	movwf	btemp^0,c
 21223                           
 21224                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21225  01972A  52E5               	movf	postdec1,f,c
 21226  01972C  0012               	return		;funcret
 21227  01972E                     __end_of_TimerDone:
 21228                           	opt callstack 0
 21229                           
 21230 ;; *************** function _StartTimer *****************
 21231 ;; Defined at:
 21232 ;;		line 12 in file "timers.c"
 21233 ;; Parameters:    Size  Location     Type
 21234 ;;  timer           1  [STACK] const unsigned char 
 21235 ;;  count           2  [STACK] const unsigned short 
 21236 ;; Auto vars:     Size  Location     Type
 21237 ;;		None
 21238 ;; Return value:  Size  Location     Type
 21239 ;;                  1  [STACK] void 
 21240 ;; Registers used:
 21241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21242 ;; Tracked objects:
 21243 ;;		On entry : 0/0
 21244 ;;		On exit  : 0/0
 21245 ;;		Unchanged: 0/0
 21246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21251 ;;Total ram usage:        0 bytes
 21252 ;; Hardware stack levels used:    1
 21253 ;; Hardware stack levels required when called:   15
 21254 ;; This function calls:
 21255 ;;		Nothing
 21256 ;; This function is called by:
 21257 ;;		_main
 21258 ;;		_WaitMs
 21259 ;;		_help_button
 21260 ;;		_check_help
 21261 ;; This function uses a reentrant model
 21262 ;;
 21263                           
 21264                           	psect	text85
 21265  01927C                     __ptext85:
 21266                           	opt callstack 0
 21267  01927C                     _StartTimer:
 21268                           	opt callstack 12
 21269                           
 21270                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21271                           ;stkvar	_count @ sp[(0)+-3]
 21272                           
 21273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21274                           ;incstack = 0
 21275  01927C  0EFD               	movlw	-3
 21276  01927E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21277  019284  0EFE               	movlw	-2
 21278  019286  006F FF8C  F00C    	movff	plusw1,btemp+11
 21279  01928C  90D8               	bcf	status,0,c
 21280  01928E  340B               	rlcf	(btemp+10)^0,w,c
 21281  019290  6E09               	movwf	(btemp+8)^0,c
 21282  019292  340C               	rlcf	(btemp+11)^0,w,c
 21283  019294  6E0A               	movwf	(btemp+9)^0,c
 21284                           
 21285                           ;stkvar	_timer @ sp[(0)+-1]
 21286  019296  0EFF               	movlw	-1
 21287  019298  50E3               	movf	plusw1,w,c
 21288  01929A  0D02               	mullw	2
 21289  01929C  0EDA               	movlw	low _tickCount
 21290  01929E  24F3               	addwf	243,w,c
 21291  0192A0  6ED9               	movwf	fsr2l,c
 21292  0192A2  0E01               	movlw	high _tickCount
 21293  0192A4  20F4               	addwfc	prodh,w,c
 21294  0192A6  6EDA               	movwf	fsr2h,c
 21295  0192A8  0060  F027  FFDE   	movff	btemp+8,postinc2
 21296  0192AE  0060  F02B  FFDD   	movff	btemp+9,postdec2
 21297                           
 21298                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21299  0192B4  52E5               	movf	postdec1,f,c
 21300  0192B6  52E5               	movf	postdec1,f,c
 21301  0192B8  52E5               	movf	postdec1,f,c
 21302  0192BA  0012               	return		;funcret
 21303  0192BC                     __end_of_StartTimer:
 21304                           	opt callstack 0
 21305                           
 21306 ;; *************** function _display_info *****************
 21307 ;; Defined at:
 21308 ;;		line 190 in file "mconfig.c"
 21309 ;; Parameters:    Size  Location     Type
 21310 ;;		None
 21311 ;; Auto vars:     Size  Location     Type
 21312 ;;		None
 21313 ;; Return value:  Size  Location     Type
 21314 ;;                  1  [STACK] enum E16509
 21315 ;; Registers used:
 21316 ;;		btemp
 21317 ;; Tracked objects:
 21318 ;;		On entry : 0/2
 21319 ;;		On exit  : 0/0
 21320 ;;		Unchanged: 0/0
 21321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21326 ;;Total ram usage:        0 bytes
 21327 ;; Hardware stack levels used:    1
 21328 ;; Hardware stack levels required when called:   15
 21329 ;; This function calls:
 21330 ;;		Nothing
 21331 ;; This function is called by:
 21332 ;;		_check_help
 21333 ;; This function uses a reentrant model
 21334 ;;
 21335                           
 21336                           	psect	text86
 21337  019CCA                     __ptext86:
 21338                           	opt callstack 0
 21339  019CCA                     _display_info:
 21340                           	opt callstack 14
 21341                           
 21342                           ;mconfig.c: 192:  return V.response.info;
 21343                           
 21344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21345                           ;incstack = 0
 21346  019CCA  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 21347                           
 21348                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21349  019CD0  0012               	return		;funcret
 21350  019CD2                     __end_of_display_info:
 21351                           	opt callstack 0
 21352                           
 21353 ;; *************** function _display_help *****************
 21354 ;; Defined at:
 21355 ;;		line 195 in file "mconfig.c"
 21356 ;; Parameters:    Size  Location     Type
 21357 ;;		None
 21358 ;; Auto vars:     Size  Location     Type
 21359 ;;		None
 21360 ;; Return value:  Size  Location     Type
 21361 ;;                  1  [STACK] enum E16509
 21362 ;; Registers used:
 21363 ;;		btemp
 21364 ;; Tracked objects:
 21365 ;;		On entry : 3F/2
 21366 ;;		On exit  : 0/0
 21367 ;;		Unchanged: 0/0
 21368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21373 ;;Total ram usage:        0 bytes
 21374 ;; Hardware stack levels used:    1
 21375 ;; Hardware stack levels required when called:   15
 21376 ;; This function calls:
 21377 ;;		Nothing
 21378 ;; This function is called by:
 21379 ;;		_check_help
 21380 ;; This function uses a reentrant model
 21381 ;;
 21382                           
 21383                           	psect	text87
 21384  019CD2                     __ptext87:
 21385                           	opt callstack 0
 21386  019CD2                     _display_help:
 21387                           	opt callstack 14
 21388                           
 21389                           ;mconfig.c: 197:  return V.response.help_temp;
 21390                           
 21391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21392                           ;incstack = 0
 21393  019CD2  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 21394                           
 21395                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21396  019CD8  0012               	return		;funcret
 21397  019CDA                     __end_of_display_help:
 21398                           	opt callstack 0
 21399                           
 21400 ;; *************** function _check_enter_button *****************
 21401 ;; Defined at:
 21402 ;;		line 42 in file "hid.c"
 21403 ;; Parameters:    Size  Location     Type
 21404 ;;  h               1  [STACK] PTR struct H_data
 21405 ;;		 -> H(7), 
 21406 ;; Auto vars:     Size  Location     Type
 21407 ;;		None
 21408 ;; Return value:  Size  Location     Type
 21409 ;;                  1  [STACK] _Bool 
 21410 ;; Registers used:
 21411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21412 ;; Tracked objects:
 21413 ;;		On entry : 0/1
 21414 ;;		On exit  : 0/0
 21415 ;;		Unchanged: 0/0
 21416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21421 ;;Total ram usage:        0 bytes
 21422 ;; Hardware stack levels used:    1
 21423 ;; Hardware stack levels required when called:   15
 21424 ;; This function calls:
 21425 ;;		Nothing
 21426 ;; This function is called by:
 21427 ;;		_main
 21428 ;; This function uses a reentrant model
 21429 ;;
 21430                           
 21431                           	psect	text88
 21432  0192BC                     __ptext88:
 21433                           	opt callstack 0
 21434  0192BC                     _check_enter_button:
 21435                           	opt callstack 15
 21436                           
 21437                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 21438                           ;stkvar	_h @ sp[(0)+-1]
 21439                           
 21440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21441                           ;incstack = 0
 21442  0192BC  0EFF               	movlw	-1
 21443  0192BE  50E3               	movf	plusw1,w,c
 21444  0192C0  6ED9               	movwf	fsr2l,c
 21445  0192C2  6ADA               	clrf	fsr2h,c
 21446  0192C4  0E04               	movlw	4
 21447  0192C6  26D9               	addwf	fsr2l,f,c
 21448  0192C8  50DF               	movf	indf2,w,c
 21449  0192CA  A4D8               	btfss	status,2,c
 21450  0192CC  D013               	goto	l9956
 21451                           
 21452                           ;stkvar	_h @ sp[(0)+-1]
 21453  0192CE  0EFF               	movlw	-1
 21454  0192D0  50E3               	movf	plusw1,w,c
 21455  0192D2  6ED9               	movwf	fsr2l,c
 21456  0192D4  6ADA               	clrf	fsr2h,c
 21457  0192D6  0E05               	movlw	5
 21458  0192D8  26D9               	addwf	fsr2l,f,c
 21459  0192DA  50DF               	movf	indf2,w,c
 21460  0192DC  A4D8               	btfss	status,2,c
 21461  0192DE  D00A               	goto	l9956
 21462                           
 21463                           ;hid.c: 45:   h->wait_enter = 1;
 21464                           ;stkvar	_h @ sp[(0)+-1]
 21465  0192E0  0EFF               	movlw	-1
 21466  0192E2  50E3               	movf	plusw1,w,c
 21467  0192E4  6ED9               	movwf	fsr2l,c
 21468  0192E6  6ADA               	clrf	fsr2h,c
 21469  0192E8  0E04               	movlw	4
 21470  0192EA  26D9               	addwf	fsr2l,f,c
 21471  0192EC  0E01               	movlw	1
 21472  0192EE  6EDF               	movwf	indf2,c
 21473                           
 21474                           ;hid.c: 46:   return 1;
 21475  0192F0  0E01               	movlw	1
 21476  0192F2  D001               	goto	L21
 21477  0192F4                     l9956:
 21478                           
 21479                           ;hid.c: 48:  return 0;
 21480  0192F4  0E00               	movlw	0
 21481  0192F6                     L21:
 21482  0192F6  6E01               	movwf	btemp^0,c
 21483                           
 21484                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 21485  0192F8  52E5               	movf	postdec1,f,c
 21486  0192FA  0012               	return		;funcret
 21487  0192FC                     __end_of_check_enter_button:
 21488                           	opt callstack 0
 21489                           
 21490 ;; *************** function _check_adc_scan *****************
 21491 ;; Defined at:
 21492 ;;		line 56 in file "daq.c"
 21493 ;; Parameters:    Size  Location     Type
 21494 ;;		None
 21495 ;; Auto vars:     Size  Location     Type
 21496 ;;		None
 21497 ;; Return value:  Size  Location     Type
 21498 ;;                  1  [STACK] _Bool 
 21499 ;; Registers used:
 21500 ;;		btemp
 21501 ;; Tracked objects:
 21502 ;;		On entry : 0/1
 21503 ;;		On exit  : 0/0
 21504 ;;		Unchanged: 0/0
 21505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21510 ;;Total ram usage:        0 bytes
 21511 ;; Hardware stack levels used:    1
 21512 ;; Hardware stack levels required when called:   15
 21513 ;; This function calls:
 21514 ;;		Nothing
 21515 ;; This function is called by:
 21516 ;;		_main
 21517 ;; This function uses a reentrant model
 21518 ;;
 21519                           
 21520                           	psect	text89
 21521  019CDA                     __ptext89:
 21522                           	opt callstack 0
 21523  019CDA                     _check_adc_scan:
 21524                           	opt callstack 15
 21525                           
 21526                           ;daq.c: 58:  return R.done;
 21527                           
 21528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21529                           ;incstack = 0
 21530  019CDA  0060  F3C8  F001   	movff	_R+39,btemp	;volatile
 21531                           
 21532                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21533  019CE0  0012               	return		;funcret
 21534  019CE2                     __end_of_check_adc_scan:
 21535                           	opt callstack 0
 21536                           
 21537 ;; *************** function _calc_model_data *****************
 21538 ;; Defined at:
 21539 ;;		line 56 in file "mbmc.c"
 21540 ;; Parameters:    Size  Location     Type
 21541 ;;		None
 21542 ;; Auto vars:     Size  Location     Type
 21543 ;;		None
 21544 ;; Return value:  Size  Location     Type
 21545 ;;                  1  [STACK] void 
 21546 ;; Registers used:
 21547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21548 ;; Tracked objects:
 21549 ;;		On entry : 0/1
 21550 ;;		On exit  : 3F/1
 21551 ;;		Unchanged: 0/0
 21552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21557 ;;Total ram usage:        0 bytes
 21558 ;; Hardware stack levels used:    1
 21559 ;; Hardware stack levels required when called:   18
 21560 ;; This function calls:
 21561 ;;		___fladd
 21562 ;;		___flmul
 21563 ;;		___flsub
 21564 ;;		_lp_filter
 21565 ;;		_start_bsoc
 21566 ;;		_stop_bsoc
 21567 ;; This function is called by:
 21568 ;;		_main
 21569 ;; This function uses a reentrant model
 21570 ;;
 21571                           
 21572                           	psect	text90
 21573  015562                     __ptext90:
 21574                           	opt callstack 0
 21575  015562                     _calc_model_data:
 21576                           	opt callstack 12
 21577                           
 21578                           ;mbmc.c: 58:  stop_bsoc();
 21579                           
 21580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21581                           ;incstack = 0
 21582  015562  EC7E  F0CE         	call	_stop_bsoc	;wreg free
 21583                           
 21584                           ; BSR set to: 57
 21585                           ;mbmc.c: 60:  if (!V.calib) {
 21586  015566  0102               	movlb	2	; () banked
 21587  015568  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 21588  01556A  A4D8               	btfss	status,2,c
 21589  01556C  D161               	goto	l9856
 21590                           
 21591                           ; BSR set to: 2
 21592                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 21593  01556E  C100  F144         	movff	_C,_C+68	;volatile
 21594  015572  C101  F145         	movff	_C+1,_C+69	;volatile
 21595  015576  C102  F146         	movff	_C+2,_C+70	;volatile
 21596  01557A  C103  F147         	movff	_C+3,_C+71	;volatile
 21597                           
 21598                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 21599  01557E  C104  F148         	movff	_C+4,_C+72	;volatile
 21600  015582  C105  F149         	movff	_C+5,_C+73	;volatile
 21601  015586  C106  F14A         	movff	_C+6,_C+74	;volatile
 21602  01558A  C107  F14B         	movff	_C+7,_C+75	;volatile
 21603                           
 21604                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 21605  01558E  C110  F154         	movff	_C+16,_C+84	;volatile
 21606  015592  C111  F155         	movff	_C+17,_C+85	;volatile
 21607  015596  C112  F156         	movff	_C+18,_C+86	;volatile
 21608  01559A  C113  F157         	movff	_C+19,_C+87	;volatile
 21609                           
 21610                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 21611  01559E  C114  F150         	movff	_C+20,_C+80	;volatile
 21612  0155A2  C115  F151         	movff	_C+21,_C+81	;volatile
 21613  0155A6  C116  F152         	movff	_C+22,_C+82	;volatile
 21614  0155AA  C117  F153         	movff	_C+23,_C+83	;volatile
 21615                           
 21616                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 21617  0155AE  C130  F164         	movff	_C+48,_C+100	;volatile
 21618  0155B2  C131  F165         	movff	_C+49,_C+101	;volatile
 21619  0155B6  C132  F166         	movff	_C+50,_C+102	;volatile
 21620  0155BA  C133  F167         	movff	_C+51,_C+103	;volatile
 21621                           
 21622                           ; BSR set to: 2
 21623                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 21624  0155BE  0E01               	movlw	1
 21625  0155C0  6EE6               	movwf	postinc1,c
 21626  0155C2  0E10               	movlw	16
 21627  0155C4  6EE6               	movwf	postinc1,c
 21628  0155C6  0060  F403  FFE6   	movff	_C,postinc1
 21629  0155CC  0060  F407  FFE6   	movff	_C+1,postinc1
 21630  0155D2  0060  F40B  FFE6   	movff	_C+2,postinc1
 21631  0155D8  0060  F40F  FFE6   	movff	_C+3,postinc1
 21632  0155DE  0060  F413  FFE6   	movff	_C+4,postinc1
 21633  0155E4  0060  F417  FFE6   	movff	_C+5,postinc1
 21634  0155EA  0060  F41B  FFE6   	movff	_C+6,postinc1
 21635  0155F0  0060  F41F  FFE6   	movff	_C+7,postinc1
 21636  0155F6  EC6F  F0C8         	call	___flsub	;wreg free
 21637  0155FA  0060  F007  FFE6   	movff	btemp,postinc1
 21638  015600  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21639  015606  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21640  01560C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21641  015612  EC06  F0B5         	call	_lp_filter	;wreg free
 21642  015616  0060  F004  F140   	movff	btemp,_C+64	;volatile
 21643  01561C  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 21644  015622  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 21645  015628  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 21646                           
 21647                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 21648  01562E  0E01               	movlw	1
 21649  015630  6EE6               	movwf	postinc1,c
 21650  015632  0E11               	movlw	17
 21651  015634  6EE6               	movwf	postinc1,c
 21652  015636  0060  F553  FFE6   	movff	_C+84,postinc1
 21653  01563C  0060  F557  FFE6   	movff	_C+85,postinc1
 21654  015642  0060  F55B  FFE6   	movff	_C+86,postinc1
 21655  015648  0060  F55F  FFE6   	movff	_C+87,postinc1
 21656  01564E  0060  F503  FFE6   	movff	_C+64,postinc1
 21657  015654  0060  F507  FFE6   	movff	_C+65,postinc1
 21658  01565A  0060  F50B  FFE6   	movff	_C+66,postinc1
 21659  015660  0060  F50F  FFE6   	movff	_C+67,postinc1
 21660  015666  EC1C  F093         	call	___flmul	;wreg free
 21661  01566A  0060  F007  FFE6   	movff	btemp,postinc1
 21662  015670  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21663  015676  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21664  01567C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21665  015682  EC06  F0B5         	call	_lp_filter	;wreg free
 21666  015686  0060  F004  F168   	movff	btemp,_C+104	;volatile
 21667  01568C  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 21668  015692  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 21669  015698  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 21670                           
 21671                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 21672  01569E  0E01               	movlw	1
 21673  0156A0  6EE6               	movwf	postinc1,c
 21674  0156A2  0E12               	movlw	18
 21675  0156A4  6EE6               	movwf	postinc1,c
 21676  0156A6  0060  F543  FFE6   	movff	_C+80,postinc1
 21677  0156AC  0060  F547  FFE6   	movff	_C+81,postinc1
 21678  0156B2  0060  F54B  FFE6   	movff	_C+82,postinc1
 21679  0156B8  0060  F54F  FFE6   	movff	_C+83,postinc1
 21680  0156BE  0060  F523  FFE6   	movff	_C+72,postinc1
 21681  0156C4  0060  F527  FFE6   	movff	_C+73,postinc1
 21682  0156CA  0060  F52B  FFE6   	movff	_C+74,postinc1
 21683  0156D0  0060  F52F  FFE6   	movff	_C+75,postinc1
 21684  0156D6  EC1C  F093         	call	___flmul	;wreg free
 21685  0156DA  0060  F007  FFE6   	movff	btemp,postinc1
 21686  0156E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21687  0156E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21688  0156EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 21689  0156F2  EC06  F0B5         	call	_lp_filter	;wreg free
 21690  0156F6  0060  F004  F170   	movff	btemp,_C+112	;volatile
 21691  0156FC  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 21692  015702  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 21693  015708  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 21694                           
 21695                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 21696  01570E  0E01               	movlw	1
 21697  015710  6EE6               	movwf	postinc1,c
 21698  015712  0E13               	movlw	19
 21699  015714  6EE6               	movwf	postinc1,c
 21700  015716  0E00               	movlw	0
 21701  015718  6EE6               	movwf	postinc1,c
 21702  01571A  0E00               	movlw	0
 21703  01571C  6EE6               	movwf	postinc1,c
 21704  01571E  0E60               	movlw	96
 21705  015720  6EE6               	movwf	postinc1,c
 21706  015722  0EC1               	movlw	193
 21707  015724  6EE6               	movwf	postinc1,c
 21708  015726  0060  F593  FFE6   	movff	_C+100,postinc1
 21709  01572C  0060  F597  FFE6   	movff	_C+101,postinc1
 21710  015732  0060  F59B  FFE6   	movff	_C+102,postinc1
 21711  015738  0060  F59F  FFE6   	movff	_C+103,postinc1
 21712  01573E  0060  F503  FFE6   	movff	_C+64,postinc1
 21713  015744  0060  F507  FFE6   	movff	_C+65,postinc1
 21714  01574A  0060  F50B  FFE6   	movff	_C+66,postinc1
 21715  015750  0060  F50F  FFE6   	movff	_C+67,postinc1
 21716  015756  EC1C  F093         	call	___flmul	;wreg free
 21717  01575A  0060  F007  FFE6   	movff	btemp,postinc1
 21718  015760  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21719  015766  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21720  01576C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21721  015772  EC31  F097         	call	___fladd	;wreg free
 21722  015776  0060  F007  FFE6   	movff	btemp,postinc1
 21723  01577C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21724  015782  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21725  015788  0060  F013  FFE6   	movff	btemp+3,postinc1
 21726  01578E  EC06  F0B5         	call	_lp_filter	;wreg free
 21727  015792  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 21728  015798  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 21729  01579E  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 21730  0157A4  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 21731                           
 21732                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 21733  0157AA  0E01               	movlw	1
 21734  0157AC  6EE6               	movwf	postinc1,c
 21735  0157AE  0E14               	movlw	20
 21736  0157B0  6EE6               	movwf	postinc1,c
 21737  0157B2  0060  F553  FFE6   	movff	_C+84,postinc1
 21738  0157B8  0060  F557  FFE6   	movff	_C+85,postinc1
 21739  0157BE  0060  F55B  FFE6   	movff	_C+86,postinc1
 21740  0157C4  0060  F55F  FFE6   	movff	_C+87,postinc1
 21741  0157CA  0060  F513  FFE6   	movff	_C+68,postinc1
 21742  0157D0  0060  F517  FFE6   	movff	_C+69,postinc1
 21743  0157D6  0060  F51B  FFE6   	movff	_C+70,postinc1
 21744  0157DC  0060  F51F  FFE6   	movff	_C+71,postinc1
 21745  0157E2  EC1C  F093         	call	___flmul	;wreg free
 21746  0157E6  0060  F007  FFE6   	movff	btemp,postinc1
 21747  0157EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21748  0157F2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21749  0157F8  0060  F013  FFE6   	movff	btemp+3,postinc1
 21750  0157FE  EC06  F0B5         	call	_lp_filter	;wreg free
 21751  015802  0060  F004  F174   	movff	btemp,_C+116	;volatile
 21752  015808  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 21753  01580E  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 21754  015814  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 21755                           
 21756                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 21757  01581A  0101               	movlb	1	; () banked
 21758  01581C  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 21759  01581E  D008               	goto	l9856
 21760                           
 21761                           ; BSR set to: 1
 21762                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 21763  015820  0E17               	movlw	23
 21764  015822  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 21765  015824  0EB7               	movlw	183
 21766  015826  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 21767  015828  0ED1               	movlw	209
 21768  01582A  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 21769  01582C  0E38               	movlw	56
 21770  01582E  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 21771  015830                     l9856:
 21772                           
 21773                           ;mbmc.c: 77:  start_bsoc();
 21774  015830  EC2E  F0CD         	call	_start_bsoc	;wreg free
 21775                           
 21776                           ; BSR set to: 57
 21777                           ;mbmc.c: 78:  C.update = 1;
 21778  015834  0E01               	movlw	1
 21779  015836  0101               	movlb	1	; () banked
 21780  015838  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 21781                           
 21782                           ; BSR set to: 1
 21783                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21784  01583A  0012               	return		;funcret
 21785  01583C                     __end_of_calc_model_data:
 21786                           	opt callstack 0
 21787                           
 21788 ;; *************** function _stop_bsoc *****************
 21789 ;; Defined at:
 21790 ;;		line 99 in file "bsoc.c"
 21791 ;; Parameters:    Size  Location     Type
 21792 ;;		None
 21793 ;; Auto vars:     Size  Location     Type
 21794 ;;		None
 21795 ;; Return value:  Size  Location     Type
 21796 ;;                  1  [STACK] void 
 21797 ;; Registers used:
 21798 ;;		None
 21799 ;; Tracked objects:
 21800 ;;		On entry : 0/1
 21801 ;;		On exit  : 3F/39
 21802 ;;		Unchanged: 0/0
 21803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21808 ;;Total ram usage:        0 bytes
 21809 ;; Hardware stack levels used:    1
 21810 ;; Hardware stack levels required when called:   15
 21811 ;; This function calls:
 21812 ;;		Nothing
 21813 ;; This function is called by:
 21814 ;;		_calc_model_data
 21815 ;; This function uses a reentrant model
 21816 ;;
 21817                           
 21818                           	psect	text91
 21819  019CFC                     __ptext91:
 21820                           	opt callstack 0
 21821  019CFC                     _stop_bsoc:
 21822                           	opt callstack 14
 21823                           
 21824                           ;bsoc.c: 102:  PIE6bits.TMR3IE = 0;
 21825                           
 21826                           ; BSR set to: 1
 21827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21828                           ;incstack = 0
 21829  019CFC  0139               	movlb	57	; () banked
 21830  019CFE  9D96               	bcf	150,6,b	;volatile
 21831                           
 21832                           ; BSR set to: 57
 21833                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21834  019D00  0012               	return		;funcret
 21835  019D02                     __end_of_stop_bsoc:
 21836                           	opt callstack 0
 21837                           
 21838 ;; *************** function _start_bsoc *****************
 21839 ;; Defined at:
 21840 ;;		line 90 in file "bsoc.c"
 21841 ;; Parameters:    Size  Location     Type
 21842 ;;		None
 21843 ;; Auto vars:     Size  Location     Type
 21844 ;;		None
 21845 ;; Return value:  Size  Location     Type
 21846 ;;                  1  [STACK] void 
 21847 ;; Registers used:
 21848 ;;		wreg, status,2, status,0, btemp+11
 21849 ;; Tracked objects:
 21850 ;;		On entry : 3C/2
 21851 ;;		On exit  : 3F/39
 21852 ;;		Unchanged: 0/0
 21853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21858 ;;Total ram usage:        0 bytes
 21859 ;; Hardware stack levels used:    1
 21860 ;; Hardware stack levels required when called:   15
 21861 ;; This function calls:
 21862 ;;		Nothing
 21863 ;; This function is called by:
 21864 ;;		_calc_model_data
 21865 ;; This function uses a reentrant model
 21866 ;;
 21867                           
 21868                           	psect	text92
 21869  019A5C                     __ptext92:
 21870                           	opt callstack 0
 21871  019A5C                     _start_bsoc:
 21872                           	opt callstack 14
 21873                           
 21874                           ;bsoc.c: 93:  PIE6bits.TMR3IE = 1;
 21875                           
 21876                           ; BSR set to: 57
 21877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21878                           ;incstack = 0
 21879  019A5C  0139               	movlb	57	; () banked
 21880  019A5E  8D96               	bsf	150,6,b	;volatile
 21881                           
 21882                           ; BSR set to: 57
 21883  019A60  A4BE               	btfss	190,2,c	;volatile
 21884  019A62  D002               	goto	u8490
 21885  019A64  0E01               	movlw	1
 21886  019A66  D001               	goto	u8496
 21887  019A68                     u8490:
 21888  019A68  0E00               	movlw	0
 21889  019A6A                     u8496:
 21890  019A6A  0AFF               	xorlw	255
 21891  019A6C  6E0C               	movwf	(btemp+11)^0,c
 21892  019A6E  460C               	rlncf	(btemp+11)^0,f,c
 21893  019A70  460C               	rlncf	(btemp+11)^0,f,c
 21894  019A72  50BE               	movf	190,w,c	;volatile
 21895  019A74  180C               	xorwf	(btemp+11)^0,w,c
 21896  019A76  0BFB               	andlw	-5
 21897  019A78  180C               	xorwf	(btemp+11)^0,w,c
 21898  019A7A  6EBE               	movwf	190,c	;volatile
 21899                           
 21900                           ; BSR set to: 57
 21901                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21902  019A7C  0012               	return		;funcret
 21903  019A7E                     __end_of_start_bsoc:
 21904                           	opt callstack 0
 21905                           
 21906 ;; *************** function _lp_filter *****************
 21907 ;; Defined at:
 21908 ;;		line 18 in file "mbmc.c"
 21909 ;; Parameters:    Size  Location     Type
 21910 ;;  new             4  [STACK] const float 
 21911 ;;  bn              1  [STACK] const unsigned char 
 21912 ;;  slow            1  [STACK] const char 
 21913 ;; Auto vars:     Size  Location     Type
 21914 ;;  lp_speed        4  [STACK] float 
 21915 ;; Return value:  Size  Location     Type
 21916 ;;                  4  [STACK] float 
 21917 ;; Registers used:
 21918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21919 ;; Tracked objects:
 21920 ;;		On entry : 0/2
 21921 ;;		On exit  : 0/0
 21922 ;;		Unchanged: 0/0
 21923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21928 ;;Total ram usage:        0 bytes
 21929 ;; Hardware stack levels used:    1
 21930 ;; Hardware stack levels required when called:   17
 21931 ;; This function calls:
 21932 ;;		___fladd
 21933 ;;		___flmul
 21934 ;;		___flsub
 21935 ;; This function is called by:
 21936 ;;		_main
 21937 ;;		_convert_adc_data
 21938 ;;		_calc_model_data
 21939 ;; This function uses a reentrant model
 21940 ;;
 21941                           
 21942                           	psect	text93
 21943  016A0C                     __ptext93:
 21944                           	opt callstack 0
 21945  016A0C                     _lp_filter:
 21946                           	opt callstack 0
 21947                           
 21948                           ; BSR set to: 57
 21949                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21950  016A0C  52E6               	movf	postinc1,f,c
 21951  016A0E  52E6               	movf	postinc1,f,c
 21952  016A10  52E6               	movf	postinc1,f,c
 21953  016A12  52E6               	movf	postinc1,f,c
 21954                           
 21955                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 21956                           ;stkvar	_bn @ sp[(-4)+-5]
 21957                           
 21958                           ;incstack = 0
 21959  016A14  0EF7               	movlw	-9
 21960  016A16  006F FF8C  F001    	movff	plusw1,btemp
 21961  016A1C  0E14               	movlw	20
 21962  016A1E  6401               	cpfsgt	btemp^0,c
 21963  016A20  D011               	goto	l9340
 21964  016A22                     u8310:
 21965                           
 21966                           ;mbmc.c: 24:   return new;
 21967                           ;stkvar	_new @ sp[(-4)+-4]
 21968  016A22  0EF8               	movlw	-8
 21969  016A24  006F FF8C  F001    	movff	plusw1,btemp
 21970  016A2A  0EF9               	movlw	-7
 21971  016A2C  006F FF8C  F002    	movff	plusw1,btemp+1
 21972  016A32  0EFA               	movlw	-6
 21973  016A34  006F FF8C  F003    	movff	plusw1,btemp+2
 21974  016A3A  0EFB               	movlw	-5
 21975  016A3C  006F FF8C  F004    	movff	plusw1,btemp+3
 21976  016A42  D0BF               	goto	l1780
 21977  016A44                     l9340:
 21978                           
 21979                           ;mbmc.c: 26:  if (slow == (-1)) {
 21980                           ;stkvar	_slow @ sp[(-4)+-6]
 21981  016A44  0EF6               	movlw	-10
 21982  016A46  28E3               	incf	plusw1,w,c
 21983  016A48  A4D8               	btfss	status,2,c
 21984  016A4A  D012               	goto	l9348
 21985                           
 21986                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 21987                           ;stkvar	_bn @ sp[(-4)+-5]
 21988  016A4C  0EF7               	movlw	-9
 21989  016A4E  50E3               	movf	plusw1,w,c
 21990  016A50  0D04               	mullw	4
 21991  016A52  0E00               	movlw	low lp_filter@smooth
 21992  016A54  24F3               	addwf	243,w,c
 21993  016A56  6ED9               	movwf	fsr2l,c
 21994  016A58  0E03               	movlw	high lp_filter@smooth
 21995  016A5A  20F4               	addwfc	prodh,w,c
 21996  016A5C  6EDA               	movwf	fsr2h,c
 21997  016A5E  0E00               	movlw	0
 21998  016A60  6EDE               	movwf	postinc2,c
 21999  016A62  0E00               	movlw	0
 22000  016A64  6EDE               	movwf	postinc2,c
 22001  016A66  0E00               	movlw	0
 22002  016A68  6EDE               	movwf	postinc2,c
 22003  016A6A  0E00               	movlw	0
 22004  016A6C  6EDD               	movwf	postdec2,c
 22005  016A6E  D7D9               	goto	u8310
 22006  016A70                     l9348:
 22007                           
 22008                           ;mbmc.c: 31:  if (slow) {
 22009                           ;stkvar	_slow @ sp[(-4)+-6]
 22010  016A70  0EF6               	movlw	-10
 22011  016A72  50E3               	movf	plusw1,w,c
 22012  016A74  B4D8               	btfsc	status,2,c
 22013  016A76  D008               	goto	l9352
 22014                           
 22015                           ;mbmc.c: 32:   lp_speed = 0.033;
 22016  016A78  0E02               	movlw	2
 22017  016A7A  6E09               	movwf	(btemp+8)^0,c
 22018  016A7C  0E2B               	movlw	43
 22019  016A7E  6E0A               	movwf	(btemp+9)^0,c
 22020  016A80  0E07               	movlw	7
 22021  016A82  6E0B               	movwf	(btemp+10)^0,c
 22022  016A84  0E3D               	movlw	61
 22023  016A86  D007               	goto	L22
 22024  016A88                     l9352:
 22025                           
 22026                           ;mbmc.c: 34:   lp_speed = 0.125;
 22027  016A88  0E00               	movlw	0
 22028  016A8A  6E09               	movwf	(btemp+8)^0,c
 22029  016A8C  0E00               	movlw	0
 22030  016A8E  6E0A               	movwf	(btemp+9)^0,c
 22031  016A90  0E00               	movlw	0
 22032  016A92  6E0B               	movwf	(btemp+10)^0,c
 22033  016A94  0E3E               	movlw	62
 22034  016A96                     L22:
 22035  016A96  6E0C               	movwf	(btemp+11)^0,c
 22036                           
 22037                           ;stkvar	_lp_speed @ sp[(-4)+0]
 22038  016A98  0EFC               	movlw	-4
 22039  016A9A  0060  F027  FFE3   	movff	btemp+8,plusw1
 22040  016AA0  0EFD               	movlw	-3
 22041  016AA2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22042  016AA8  0EFE               	movlw	-2
 22043  016AAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22044  016AB0  0EFF               	movlw	-1
 22045  016AB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22046                           
 22047                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 22048                           ;stkvar	_bn @ sp[(-4)+-5]
 22049  016AB8  0EF7               	movlw	-9
 22050  016ABA  50E3               	movf	plusw1,w,c
 22051  016ABC  0D04               	mullw	4
 22052  016ABE  0E00               	movlw	low lp_filter@smooth
 22053  016AC0  24F3               	addwf	243,w,c
 22054  016AC2  6ED9               	movwf	fsr2l,c
 22055  016AC4  0E03               	movlw	high lp_filter@smooth
 22056  016AC6  20F4               	addwfc	prodh,w,c
 22057  016AC8  6EDA               	movwf	fsr2h,c
 22058  016ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 22059  016AD0  006F FF7B FFE6     	movff	postinc2,postinc1
 22060  016AD6  006F FF7B FFE6     	movff	postinc2,postinc1
 22061  016ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 22062                           
 22063                           ;stkvar	_lp_speed @ sp[(-8)+0]
 22064  016AE2  0EF8               	movlw	-8
 22065  016AE4  006F FF8F FFE6     	movff	plusw1,postinc1
 22066  016AEA  006F FF8F FFE6     	movff	plusw1,postinc1
 22067  016AF0  006F FF8F FFE6     	movff	plusw1,postinc1
 22068  016AF6  006F FF8F FFE6     	movff	plusw1,postinc1
 22069                           
 22070                           ;stkvar	_bn @ sp[(-12)+-5]
 22071  016AFC  0EEF               	movlw	-17
 22072  016AFE  50E3               	movf	plusw1,w,c
 22073  016B00  0D04               	mullw	4
 22074  016B02  0E00               	movlw	low lp_filter@smooth
 22075  016B04  24F3               	addwf	243,w,c
 22076  016B06  6ED9               	movwf	fsr2l,c
 22077  016B08  0E03               	movlw	high lp_filter@smooth
 22078  016B0A  20F4               	addwfc	prodh,w,c
 22079  016B0C  6EDA               	movwf	fsr2h,c
 22080  016B0E  006F FF7B FFE6     	movff	postinc2,postinc1
 22081  016B14  006F FF7B FFE6     	movff	postinc2,postinc1
 22082  016B1A  006F FF7B FFE6     	movff	postinc2,postinc1
 22083  016B20  006F FF7B FFE6     	movff	postinc2,postinc1
 22084                           
 22085                           ;stkvar	_new @ sp[(-16)+-4]
 22086  016B26  0EEC               	movlw	-20
 22087  016B28  006F FF8F FFE6     	movff	plusw1,postinc1
 22088  016B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 22089  016B34  006F FF8F FFE6     	movff	plusw1,postinc1
 22090  016B3A  006F FF8F FFE6     	movff	plusw1,postinc1
 22091  016B40  EC6F  F0C8         	call	___flsub	;wreg free
 22092  016B44  0060  F007  FFE6   	movff	btemp,postinc1
 22093  016B4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22094  016B50  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22095  016B56  0060  F013  FFE6   	movff	btemp+3,postinc1
 22096  016B5C  EC1C  F093         	call	___flmul	;wreg free
 22097  016B60  0060  F007  FFE6   	movff	btemp,postinc1
 22098  016B66  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22099  016B6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22100  016B72  0060  F013  FFE6   	movff	btemp+3,postinc1
 22101  016B78  EC31  F097         	call	___fladd	;wreg free
 22102                           
 22103                           ;stkvar	_bn @ sp[(-4)+-5]
 22104  016B7C  0EF7               	movlw	-9
 22105  016B7E  50E3               	movf	plusw1,w,c
 22106  016B80  0D04               	mullw	4
 22107  016B82  0E00               	movlw	low lp_filter@smooth
 22108  016B84  24F3               	addwf	243,w,c
 22109  016B86  6ED9               	movwf	fsr2l,c
 22110  016B88  0E03               	movlw	high lp_filter@smooth
 22111  016B8A  20F4               	addwfc	prodh,w,c
 22112  016B8C  6EDA               	movwf	fsr2h,c
 22113  016B8E  0060  F007  FFDE   	movff	btemp,postinc2
 22114  016B94  0060  F00B  FFDE   	movff	btemp+1,postinc2
 22115  016B9A  0060  F00F  FFDE   	movff	btemp+2,postinc2
 22116  016BA0  0060  F013  FFDD   	movff	btemp+3,postdec2
 22117  016BA6  52DD               	movf	postdec2,f,c
 22118  016BA8  52DD               	movf	postdec2,f,c
 22119  016BAA  006F FF78  F001    	movff	postinc2,btemp
 22120  016BB0  006F FF78  F002    	movff	postinc2,btemp+1
 22121  016BB6  006F FF78  F003    	movff	postinc2,btemp+2
 22122  016BBC  006F FF78  F004    	movff	postinc2,btemp+3
 22123  016BC2                     l1780:
 22124                           
 22125                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 22126  016BC2  0EF6               	movlw	246
 22127  016BC4  26E1               	addwf	fsr1l,f,c
 22128  016BC6  0EFF               	movlw	255
 22129  016BC8  22E2               	addwfc	fsr1h,f,c
 22130  016BCA  0012               	return		;funcret
 22131  016BCC                     __end_of_lp_filter:
 22132                           	opt callstack 0
 22133                           
 22134 ;; *************** function ___flsub *****************
 22135 ;; Defined at:
 22136 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 22137 ;; Parameters:    Size  Location     Type
 22138 ;;  b               4  [STACK] float 
 22139 ;;  a               4  [STACK] float 
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;		None
 22142 ;; Return value:  Size  Location     Type
 22143 ;;                  4  [STACK] float 
 22144 ;; Registers used:
 22145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22146 ;; Tracked objects:
 22147 ;;		On entry : 0/1
 22148 ;;		On exit  : 0/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22155 ;;Total ram usage:        0 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; Hardware stack levels required when called:   16
 22158 ;; This function calls:
 22159 ;;		___fladd
 22160 ;; This function is called by:
 22161 ;;		_conv_raw_result
 22162 ;;		_lp_filter
 22163 ;;		_calc_model_data
 22164 ;;		_efgtoa
 22165 ;; This function uses a reentrant model
 22166 ;;
 22167                           
 22168                           	psect	text94
 22169  0190DE                     __ptext94:
 22170                           	opt callstack 0
 22171  0190DE                     ___flsub:
 22172                           	opt callstack 0
 22173                           
 22174                           ;stkvar	_a @ sp[(0)+-8]
 22175                           
 22176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22177                           ;incstack = 0
 22178 ;; hardware stack exceeded
 22179  0190DE  0EFB               	movlw	-5
 22180  0190E0  7EE3               	btg	plusw1,7,c
 22181                           
 22182                           ;stkvar	_a @ sp[(0)+-8]
 22183  0190E2  0EF8               	movlw	-8
 22184  0190E4  006F FF8F FFE6     	movff	plusw1,postinc1
 22185  0190EA  006F FF8F FFE6     	movff	plusw1,postinc1
 22186  0190F0  006F FF8F FFE6     	movff	plusw1,postinc1
 22187  0190F6  006F FF8F FFE6     	movff	plusw1,postinc1
 22188                           
 22189                           ;stkvar	_b @ sp[(-4)+-4]
 22190  0190FC  0EF8               	movlw	-8
 22191  0190FE  006F FF8F FFE6     	movff	plusw1,postinc1
 22192  019104  006F FF8F FFE6     	movff	plusw1,postinc1
 22193  01910A  006F FF8F FFE6     	movff	plusw1,postinc1
 22194  019110  006F FF8F FFE6     	movff	plusw1,postinc1
 22195  019116  EC31  F097         	call	___fladd	;wreg free
 22196                           
 22197                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22198  01911A  0EF8               	movlw	248
 22199  01911C  26E1               	addwf	fsr1l,f,c
 22200  01911E  0EFF               	movlw	255
 22201  019120  22E2               	addwfc	fsr1h,f,c
 22202  019122  0012               	return		;funcret
 22203  019124                     __end_of___flsub:
 22204                           	opt callstack 0
 22205                           
 22206 ;; *************** function ___fladd *****************
 22207 ;; Defined at:
 22208 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 22209 ;; Parameters:    Size  Location     Type
 22210 ;;  b               4  [STACK] float 
 22211 ;;  a               4  [STACK] float 
 22212 ;; Auto vars:     Size  Location     Type
 22213 ;;  grs             1  [STACK] unsigned char 
 22214 ;;  bexp            1  [STACK] unsigned char 
 22215 ;;  aexp            1  [STACK] unsigned char 
 22216 ;;  signs           1  [STACK] unsigned char 
 22217 ;; Return value:  Size  Location     Type
 22218 ;;                  4  [STACK] unsigned char 
 22219 ;; Registers used:
 22220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22221 ;; Tracked objects:
 22222 ;;		On entry : 0/0
 22223 ;;		On exit  : 0/0
 22224 ;;		Unchanged: 0/0
 22225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22230 ;;Total ram usage:        0 bytes
 22231 ;; Hardware stack levels used:    1
 22232 ;; Hardware stack levels required when called:   15
 22233 ;; This function calls:
 22234 ;;		Nothing
 22235 ;; This function is called by:
 22236 ;;		_lp_filter
 22237 ;;		_calc_model_data
 22238 ;;		_calc_bsoc
 22239 ;;		_efgtoa
 22240 ;;		___flsub
 22241 ;; This function uses a reentrant model
 22242 ;;
 22243                           
 22244                           	psect	text95
 22245  012E62                     __ptext95:
 22246                           	opt callstack 0
 22247  012E62                     ___fladd:
 22248                           	opt callstack 0
 22249                           
 22250                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22251  012E62  52E6               	movf	postinc1,f,c
 22252  012E64  52E6               	movf	postinc1,f,c
 22253  012E66  52E6               	movf	postinc1,f,c
 22254  012E68  52E6               	movf	postinc1,f,c
 22255                           
 22256                           ;stkvar	_b @ sp[(-4)+-4]
 22257                           
 22258                           ;incstack = 0
 22259 ;; hardware stack exceeded
 22260  012E6A  0EFB               	movlw	251
 22261  012E6C  24E1               	addwf	fsr1l,w,c
 22262  012E6E  6ED9               	movwf	fsr2l,c
 22263  012E70  0EFF               	movlw	255
 22264  012E72  20E2               	addwfc	fsr1h,w,c
 22265  012E74  6EDA               	movwf	fsr2h,c
 22266  012E76  50DF               	movf	indf2,w,c
 22267  012E78  6E0C               	movwf	(btemp+11)^0,c
 22268  012E7A  0E80               	movlw	128
 22269  012E7C  160C               	andwf	(btemp+11)^0,f,c
 22270                           
 22271                           ;stkvar	_signs @ sp[(-4)+3]
 22272  012E7E  0EFF               	movlw	-1
 22273  012E80  0060  F033  FFE3   	movff	btemp+11,plusw1
 22274                           
 22275                           ;stkvar	_b @ sp[(-4)+-4]
 22276  012E86  0EFB               	movlw	251
 22277  012E88  24E1               	addwf	fsr1l,w,c
 22278  012E8A  6ED9               	movwf	fsr2l,c
 22279  012E8C  0EFF               	movlw	255
 22280  012E8E  20E2               	addwfc	fsr1h,w,c
 22281  012E90  6EDA               	movwf	fsr2h,c
 22282  012E92  50DF               	movf	indf2,w,c
 22283  012E94  6E0C               	movwf	(btemp+11)^0,c
 22284  012E96  90D8               	bcf	status,0,c
 22285  012E98  340C               	rlcf	(btemp+11)^0,w,c
 22286  012E9A  6E0B               	movwf	(btemp+10)^0,c
 22287                           
 22288                           ;stkvar	_bexp @ sp[(-4)+1]
 22289  012E9C  0EFD               	movlw	-3
 22290  012E9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22291                           
 22292                           ;stkvar	_b @ sp[(-4)+-4]
 22293  012EA4  0EFA               	movlw	250
 22294  012EA6  24E1               	addwf	fsr1l,w,c
 22295  012EA8  6ED9               	movwf	fsr2l,c
 22296  012EAA  0EFF               	movlw	255
 22297  012EAC  20E2               	addwfc	fsr1h,w,c
 22298  012EAE  6EDA               	movwf	fsr2h,c
 22299  012EB0  AEDF               	btfss	indf2,7,c
 22300  012EB2  D002               	goto	l6940
 22301                           
 22302                           ;stkvar	_bexp @ sp[(-4)+1]
 22303  012EB4  0EFD               	movlw	-3
 22304  012EB6  80E3               	bsf	plusw1,0,c
 22305  012EB8                     l6940:
 22306                           
 22307                           ;stkvar	_bexp @ sp[(-4)+1]
 22308  012EB8  0EFD               	movlw	-3
 22309  012EBA  50E3               	movf	plusw1,w,c
 22310  012EBC  B4D8               	btfsc	status,2,c
 22311  012EBE  D027               	goto	l6950
 22312                           
 22313                           ;stkvar	_bexp @ sp[(-4)+1]
 22314  012EC0  0EFD               	movlw	-3
 22315  012EC2  28E3               	incf	plusw1,w,c
 22316  012EC4  A4D8               	btfss	status,2,c
 22317  012EC6  D018               	goto	l6946
 22318  012EC8  0E00               	movlw	0
 22319  012ECA  6E09               	movwf	(btemp+8)^0,c
 22320  012ECC  0E00               	movlw	0
 22321  012ECE  6E0A               	movwf	(btemp+9)^0,c
 22322  012ED0  0E00               	movlw	0
 22323  012ED2  6E0B               	movwf	(btemp+10)^0,c
 22324  012ED4  0E00               	movlw	0
 22325  012ED6  6E0C               	movwf	(btemp+11)^0,c
 22326                           
 22327                           ;stkvar	_b @ sp[(-4)+-4]
 22328  012ED8  0EF8               	movlw	-8
 22329  012EDA  0060  F027  FFE3   	movff	btemp+8,plusw1
 22330  012EE0  0EF9               	movlw	-7
 22331  012EE2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22332  012EE8  0EFA               	movlw	-6
 22333  012EEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22334  012EF0  0EFB               	movlw	-5
 22335  012EF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22336  012EF8                     l6946:
 22337                           
 22338                           ;stkvar	_b @ sp[(-4)+-4]
 22339  012EF8  0EFA               	movlw	-6
 22340  012EFA  8EE3               	bsf	plusw1,7,c
 22341                           
 22342                           ;stkvar	_b @ sp[(-4)+-4]
 22343  012EFC  0EFB               	movlw	251
 22344  012EFE  24E1               	addwf	fsr1l,w,c
 22345  012F00  6ED9               	movwf	fsr2l,c
 22346  012F02  0EFF               	movlw	255
 22347  012F04  20E2               	addwfc	fsr1h,w,c
 22348  012F06  6EDA               	movwf	fsr2h,c
 22349  012F08  0E00               	movlw	0
 22350  012F0A  6EDF               	movwf	indf2,c
 22351  012F0C  D018               	goto	l6952
 22352  012F0E                     l6950:
 22353  012F0E  0E00               	movlw	0
 22354  012F10  6E09               	movwf	(btemp+8)^0,c
 22355  012F12  0E00               	movlw	0
 22356  012F14  6E0A               	movwf	(btemp+9)^0,c
 22357  012F16  0E00               	movlw	0
 22358  012F18  6E0B               	movwf	(btemp+10)^0,c
 22359  012F1A  0E00               	movlw	0
 22360  012F1C  6E0C               	movwf	(btemp+11)^0,c
 22361                           
 22362                           ;stkvar	_b @ sp[(-4)+-4]
 22363  012F1E  0EF8               	movlw	-8
 22364  012F20  0060  F027  FFE3   	movff	btemp+8,plusw1
 22365  012F26  0EF9               	movlw	-7
 22366  012F28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22367  012F2E  0EFA               	movlw	-6
 22368  012F30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22369  012F36  0EFB               	movlw	-5
 22370  012F38  0060  F033  FFE3   	movff	btemp+11,plusw1
 22371  012F3E                     l6952:
 22372                           
 22373                           ;stkvar	_a @ sp[(-4)+-8]
 22374  012F3E  0EF7               	movlw	247
 22375  012F40  24E1               	addwf	fsr1l,w,c
 22376  012F42  6ED9               	movwf	fsr2l,c
 22377  012F44  0EFF               	movlw	255
 22378  012F46  20E2               	addwfc	fsr1h,w,c
 22379  012F48  6EDA               	movwf	fsr2h,c
 22380  012F4A  50DF               	movf	indf2,w,c
 22381  012F4C  6E0C               	movwf	(btemp+11)^0,c
 22382  012F4E  0E80               	movlw	128
 22383  012F50  160C               	andwf	(btemp+11)^0,f,c
 22384                           
 22385                           ;stkvar	_aexp @ sp[(-4)+2]
 22386  012F52  0EFE               	movlw	-2
 22387  012F54  0060  F033  FFE3   	movff	btemp+11,plusw1
 22388                           
 22389                           ;stkvar	_signs @ sp[(-4)+3]
 22390                           ;stkvar	_aexp @ sp[(-4)+2]
 22391  012F5A  50E1               	movf	fsr1l,w,c
 22392  012F5C  0FFE               	addlw	-2
 22393  012F5E  6ED9               	movwf	fsr2l,c
 22394  012F60  50E2               	movf	fsr1h,w,c
 22395  012F62  6EDA               	movwf	fsr2h,c
 22396  012F64  0EFF               	movlw	255
 22397  012F66  22DA               	addwfc	fsr2h,f,c
 22398  012F68  0EFF               	movlw	-1
 22399  012F6A  50E3               	movf	plusw1,w,c
 22400  012F6C  18DE               	xorwf	postinc2,w,c
 22401  012F6E  B4D8               	btfsc	status,2,c
 22402  012F70  D002               	goto	l6958
 22403                           
 22404                           ;stkvar	_signs @ sp[(-4)+3]
 22405  012F72  0EFF               	movlw	-1
 22406  012F74  8CE3               	bsf	plusw1,6,c
 22407  012F76                     l6958:
 22408                           
 22409                           ;stkvar	_a @ sp[(-4)+-8]
 22410  012F76  0EF7               	movlw	247
 22411  012F78  24E1               	addwf	fsr1l,w,c
 22412  012F7A  6ED9               	movwf	fsr2l,c
 22413  012F7C  0EFF               	movlw	255
 22414  012F7E  20E2               	addwfc	fsr1h,w,c
 22415  012F80  6EDA               	movwf	fsr2h,c
 22416  012F82  50DF               	movf	indf2,w,c
 22417  012F84  6E0C               	movwf	(btemp+11)^0,c
 22418  012F86  90D8               	bcf	status,0,c
 22419  012F88  340C               	rlcf	(btemp+11)^0,w,c
 22420  012F8A  6E0B               	movwf	(btemp+10)^0,c
 22421                           
 22422                           ;stkvar	_aexp @ sp[(-4)+2]
 22423  012F8C  0EFE               	movlw	-2
 22424  012F8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22425                           
 22426                           ;stkvar	_a @ sp[(-4)+-8]
 22427  012F94  0EF6               	movlw	246
 22428  012F96  24E1               	addwf	fsr1l,w,c
 22429  012F98  6ED9               	movwf	fsr2l,c
 22430  012F9A  0EFF               	movlw	255
 22431  012F9C  20E2               	addwfc	fsr1h,w,c
 22432  012F9E  6EDA               	movwf	fsr2h,c
 22433  012FA0  AEDF               	btfss	indf2,7,c
 22434  012FA2  D002               	goto	l6964
 22435                           
 22436                           ;stkvar	_aexp @ sp[(-4)+2]
 22437  012FA4  0EFE               	movlw	-2
 22438  012FA6  80E3               	bsf	plusw1,0,c
 22439  012FA8                     l6964:
 22440                           
 22441                           ;stkvar	_aexp @ sp[(-4)+2]
 22442  012FA8  0EFE               	movlw	-2
 22443  012FAA  50E3               	movf	plusw1,w,c
 22444  012FAC  B4D8               	btfsc	status,2,c
 22445  012FAE  D027               	goto	l6974
 22446                           
 22447                           ;stkvar	_aexp @ sp[(-4)+2]
 22448  012FB0  0EFE               	movlw	-2
 22449  012FB2  28E3               	incf	plusw1,w,c
 22450  012FB4  A4D8               	btfss	status,2,c
 22451  012FB6  D018               	goto	l6970
 22452  012FB8  0E00               	movlw	0
 22453  012FBA  6E09               	movwf	(btemp+8)^0,c
 22454  012FBC  0E00               	movlw	0
 22455  012FBE  6E0A               	movwf	(btemp+9)^0,c
 22456  012FC0  0E00               	movlw	0
 22457  012FC2  6E0B               	movwf	(btemp+10)^0,c
 22458  012FC4  0E00               	movlw	0
 22459  012FC6  6E0C               	movwf	(btemp+11)^0,c
 22460                           
 22461                           ;stkvar	_a @ sp[(-4)+-8]
 22462  012FC8  0EF4               	movlw	-12
 22463  012FCA  0060  F027  FFE3   	movff	btemp+8,plusw1
 22464  012FD0  0EF5               	movlw	-11
 22465  012FD2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22466  012FD8  0EF6               	movlw	-10
 22467  012FDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22468  012FE0  0EF7               	movlw	-9
 22469  012FE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22470  012FE8                     l6970:
 22471                           
 22472                           ;stkvar	_a @ sp[(-4)+-8]
 22473  012FE8  0EF6               	movlw	-10
 22474  012FEA  8EE3               	bsf	plusw1,7,c
 22475                           
 22476                           ;stkvar	_a @ sp[(-4)+-8]
 22477  012FEC  0EF7               	movlw	247
 22478  012FEE  24E1               	addwf	fsr1l,w,c
 22479  012FF0  6ED9               	movwf	fsr2l,c
 22480  012FF2  0EFF               	movlw	255
 22481  012FF4  20E2               	addwfc	fsr1h,w,c
 22482  012FF6  6EDA               	movwf	fsr2h,c
 22483  012FF8  0E00               	movlw	0
 22484  012FFA  6EDF               	movwf	indf2,c
 22485  012FFC  D018               	goto	l6976
 22486  012FFE                     l6974:
 22487  012FFE  0E00               	movlw	0
 22488  013000  6E09               	movwf	(btemp+8)^0,c
 22489  013002  0E00               	movlw	0
 22490  013004  6E0A               	movwf	(btemp+9)^0,c
 22491  013006  0E00               	movlw	0
 22492  013008  6E0B               	movwf	(btemp+10)^0,c
 22493  01300A  0E00               	movlw	0
 22494  01300C  6E0C               	movwf	(btemp+11)^0,c
 22495                           
 22496                           ;stkvar	_a @ sp[(-4)+-8]
 22497  01300E  0EF4               	movlw	-12
 22498  013010  0060  F027  FFE3   	movff	btemp+8,plusw1
 22499  013016  0EF5               	movlw	-11
 22500  013018  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22501  01301E  0EF6               	movlw	-10
 22502  013020  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22503  013026  0EF7               	movlw	-9
 22504  013028  0060  F033  FFE3   	movff	btemp+11,plusw1
 22505  01302E                     l6976:
 22506                           
 22507                           ;stkvar	_bexp @ sp[(-4)+1]
 22508                           ;stkvar	_aexp @ sp[(-4)+2]
 22509  01302E  50E1               	movf	fsr1l,w,c
 22510  013030  0FFE               	addlw	-2
 22511  013032  6ED9               	movwf	fsr2l,c
 22512  013034  50E2               	movf	fsr1h,w,c
 22513  013036  6EDA               	movwf	fsr2h,c
 22514  013038  0EFF               	movlw	255
 22515  01303A  22DA               	addwfc	fsr2h,f,c
 22516  01303C  0EFD               	movlw	-3
 22517  01303E  50E3               	movf	plusw1,w,c
 22518  013040  5CDE               	subwf	postinc2,w,c
 22519  013042  B0D8               	btfsc	status,0,c
 22520  013044  D0A4               	goto	l7012
 22521                           
 22522                           ;stkvar	_signs @ sp[(-4)+3]
 22523  013046  0EFF               	movlw	-1
 22524  013048  ACE3               	btfss	plusw1,6,c
 22525  01304A  D002               	goto	l6982
 22526                           
 22527                           ;stkvar	_signs @ sp[(-4)+3]
 22528  01304C  0EFF               	movlw	-1
 22529  01304E  7EE3               	btg	plusw1,7,c
 22530  013050                     l6982:
 22531                           
 22532                           ;stkvar	_bexp @ sp[(-4)+1]
 22533                           ;stkvar	_grs @ sp[(-4)+0]
 22534  013050  0EFD               	movlw	-3
 22535  013052  006F FF8C  F001    	movff	plusw1,btemp
 22536  013058  0EFC               	movlw	-4
 22537  01305A  0060  F007  FFE3   	movff	btemp,plusw1
 22538                           
 22539                           ;stkvar	_aexp @ sp[(-4)+2]
 22540                           ;stkvar	_bexp @ sp[(-4)+1]
 22541  013060  0EFE               	movlw	-2
 22542  013062  006F FF8C  F001    	movff	plusw1,btemp
 22543  013068  0EFD               	movlw	-3
 22544  01306A  0060  F007  FFE3   	movff	btemp,plusw1
 22545                           
 22546                           ;stkvar	_grs @ sp[(-4)+0]
 22547                           ;stkvar	_aexp @ sp[(-4)+2]
 22548  013070  0EFC               	movlw	-4
 22549  013072  006F FF8C  F001    	movff	plusw1,btemp
 22550  013078  0EFE               	movlw	-2
 22551  01307A  0060  F007  FFE3   	movff	btemp,plusw1
 22552                           
 22553                           ;stkvar	_b @ sp[(-4)+-4]
 22554                           ;stkvar	_grs @ sp[(-4)+0]
 22555  013080  0EF8               	movlw	-8
 22556  013082  006F FF8C  F001    	movff	plusw1,btemp
 22557  013088  0EFC               	movlw	-4
 22558  01308A  0060  F007  FFE3   	movff	btemp,plusw1
 22559                           
 22560                           ;stkvar	_a @ sp[(-4)+-8]
 22561                           ;stkvar	_b @ sp[(-4)+-4]
 22562  013090  0EF4               	movlw	-12
 22563  013092  006F FF8C  F001    	movff	plusw1,btemp
 22564  013098  0EF8               	movlw	-8
 22565  01309A  0060  F007  FFE3   	movff	btemp,plusw1
 22566                           
 22567                           ;stkvar	_grs @ sp[(-4)+0]
 22568                           ;stkvar	_a @ sp[(-4)+-8]
 22569  0130A0  0EFC               	movlw	-4
 22570  0130A2  006F FF8C  F001    	movff	plusw1,btemp
 22571  0130A8  0EF4               	movlw	-12
 22572  0130AA  0060  F007  FFE3   	movff	btemp,plusw1
 22573                           
 22574                           ;stkvar	_b @ sp[(-4)+-4]
 22575  0130B0  0EF9               	movlw	249
 22576  0130B2  24E1               	addwf	fsr1l,w,c
 22577  0130B4  6ED9               	movwf	fsr2l,c
 22578  0130B6  0EFF               	movlw	255
 22579  0130B8  20E2               	addwfc	fsr1h,w,c
 22580  0130BA  6EDA               	movwf	fsr2h,c
 22581  0130BC  50DF               	movf	indf2,w,c
 22582  0130BE  6E0C               	movwf	(btemp+11)^0,c
 22583                           
 22584                           ;stkvar	_grs @ sp[(-4)+0]
 22585  0130C0  0EFC               	movlw	-4
 22586  0130C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22587                           
 22588                           ;stkvar	_a @ sp[(-4)+-8]
 22589  0130C8  0EF5               	movlw	245
 22590  0130CA  24E1               	addwf	fsr1l,w,c
 22591  0130CC  6ED9               	movwf	fsr2l,c
 22592  0130CE  0EFF               	movlw	255
 22593  0130D0  20E2               	addwfc	fsr1h,w,c
 22594  0130D2  6EDA               	movwf	fsr2h,c
 22595                           
 22596                           ;stkvar	_b @ sp[(-4)+-4]
 22597  0130D4  0EF9               	movlw	249
 22598  0130D6  24E1               	addwf	fsr1l,w,c
 22599  0130D8  6EE9               	movwf	fsr0l,c
 22600  0130DA  0EFF               	movlw	255
 22601  0130DC  20E2               	addwfc	fsr1h,w,c
 22602  0130DE  6EEA               	movwf	fsr0h,c
 22603  0130E0  006F FF7F FFEF     	movff	indf2,indf0
 22604                           
 22605                           ;stkvar	_grs @ sp[(-4)+0]
 22606                           ;stkvar	_a @ sp[(-4)+-8]
 22607  0130E6  0EF5               	movlw	245
 22608  0130E8  24E1               	addwf	fsr1l,w,c
 22609  0130EA  6ED9               	movwf	fsr2l,c
 22610  0130EC  0EFF               	movlw	255
 22611  0130EE  20E2               	addwfc	fsr1h,w,c
 22612  0130F0  6EDA               	movwf	fsr2h,c
 22613  0130F2  0EFC               	movlw	-4
 22614  0130F4  006F FF8F FFDF     	movff	plusw1,indf2
 22615                           
 22616                           ;stkvar	_b @ sp[(-4)+-4]
 22617  0130FA  0EFA               	movlw	250
 22618  0130FC  24E1               	addwf	fsr1l,w,c
 22619  0130FE  6ED9               	movwf	fsr2l,c
 22620  013100  0EFF               	movlw	255
 22621  013102  20E2               	addwfc	fsr1h,w,c
 22622  013104  6EDA               	movwf	fsr2h,c
 22623  013106  50DF               	movf	indf2,w,c
 22624  013108  6E0C               	movwf	(btemp+11)^0,c
 22625                           
 22626                           ;stkvar	_grs @ sp[(-4)+0]
 22627  01310A  0EFC               	movlw	-4
 22628  01310C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22629                           
 22630                           ;stkvar	_a @ sp[(-4)+-8]
 22631  013112  0EF6               	movlw	246
 22632  013114  24E1               	addwf	fsr1l,w,c
 22633  013116  6ED9               	movwf	fsr2l,c
 22634  013118  0EFF               	movlw	255
 22635  01311A  20E2               	addwfc	fsr1h,w,c
 22636  01311C  6EDA               	movwf	fsr2h,c
 22637                           
 22638                           ;stkvar	_b @ sp[(-4)+-4]
 22639  01311E  0EFA               	movlw	250
 22640  013120  24E1               	addwf	fsr1l,w,c
 22641  013122  6EE9               	movwf	fsr0l,c
 22642  013124  0EFF               	movlw	255
 22643  013126  20E2               	addwfc	fsr1h,w,c
 22644  013128  6EEA               	movwf	fsr0h,c
 22645  01312A  006F FF7F FFEF     	movff	indf2,indf0
 22646                           
 22647                           ;stkvar	_grs @ sp[(-4)+0]
 22648                           ;stkvar	_a @ sp[(-4)+-8]
 22649  013130  0EF6               	movlw	246
 22650  013132  24E1               	addwf	fsr1l,w,c
 22651  013134  6ED9               	movwf	fsr2l,c
 22652  013136  0EFF               	movlw	255
 22653  013138  20E2               	addwfc	fsr1h,w,c
 22654  01313A  6EDA               	movwf	fsr2h,c
 22655  01313C  0EFC               	movlw	-4
 22656  01313E  006F FF8F FFDF     	movff	plusw1,indf2
 22657                           
 22658                           ;stkvar	_b @ sp[(-4)+-4]
 22659  013144  0EFB               	movlw	251
 22660  013146  24E1               	addwf	fsr1l,w,c
 22661  013148  6ED9               	movwf	fsr2l,c
 22662  01314A  0EFF               	movlw	255
 22663  01314C  20E2               	addwfc	fsr1h,w,c
 22664  01314E  6EDA               	movwf	fsr2h,c
 22665  013150  50DF               	movf	indf2,w,c
 22666  013152  6E0C               	movwf	(btemp+11)^0,c
 22667                           
 22668                           ;stkvar	_grs @ sp[(-4)+0]
 22669  013154  0EFC               	movlw	-4
 22670  013156  0060  F033  FFE3   	movff	btemp+11,plusw1
 22671                           
 22672                           ;stkvar	_a @ sp[(-4)+-8]
 22673  01315C  0EF7               	movlw	247
 22674  01315E  24E1               	addwf	fsr1l,w,c
 22675  013160  6ED9               	movwf	fsr2l,c
 22676  013162  0EFF               	movlw	255
 22677  013164  20E2               	addwfc	fsr1h,w,c
 22678  013166  6EDA               	movwf	fsr2h,c
 22679                           
 22680                           ;stkvar	_b @ sp[(-4)+-4]
 22681  013168  0EFB               	movlw	251
 22682  01316A  24E1               	addwf	fsr1l,w,c
 22683  01316C  6EE9               	movwf	fsr0l,c
 22684  01316E  0EFF               	movlw	255
 22685  013170  20E2               	addwfc	fsr1h,w,c
 22686  013172  6EEA               	movwf	fsr0h,c
 22687  013174  006F FF7F FFEF     	movff	indf2,indf0
 22688                           
 22689                           ;stkvar	_grs @ sp[(-4)+0]
 22690                           ;stkvar	_a @ sp[(-4)+-8]
 22691  01317A  0EF7               	movlw	247
 22692  01317C  24E1               	addwf	fsr1l,w,c
 22693  01317E  6ED9               	movwf	fsr2l,c
 22694  013180  0EFF               	movlw	255
 22695  013182  20E2               	addwfc	fsr1h,w,c
 22696  013184  6EDA               	movwf	fsr2h,c
 22697  013186  0EFC               	movlw	-4
 22698  013188  006F FF8F FFDF     	movff	plusw1,indf2
 22699  01318E                     l7012:
 22700                           
 22701                           ;stkvar	_grs @ sp[(-4)+0]
 22702  01318E  0EFC               	movlw	-4
 22703  013190  6AE3               	clrf	plusw1,c
 22704                           
 22705                           ;stkvar	_aexp @ sp[(-4)+2]
 22706  013192  0EFE               	movlw	-2
 22707  013194  50E3               	movf	plusw1,w,c
 22708  013196  6E0B               	movwf	(btemp+10)^0,c
 22709  013198  6A0C               	clrf	(btemp+11)^0,c
 22710                           
 22711                           ;stkvar	_bexp @ sp[(-4)+1]
 22712  01319A  0EFD               	movlw	-3
 22713  01319C  50E3               	movf	plusw1,w,c
 22714  01319E  5E0B               	subwf	(btemp+10)^0,f,c
 22715  0131A0  0E00               	movlw	0
 22716  0131A2  5A0C               	subwfb	(btemp+11)^0,f,c
 22717  0131A4  BE0C               	btfsc	(btemp+11)^0,7,c
 22718  0131A6  D062               	goto	l7036
 22719  0131A8  500C               	movf	(btemp+11)^0,w,c
 22720  0131AA  E104               	bnz	u4850
 22721  0131AC  0E1A               	movlw	26
 22722  0131AE  5C0B               	subwf	(btemp+10)^0,w,c
 22723  0131B0  A0D8               	btfss	status,0,c
 22724  0131B2  D05C               	goto	l7036
 22725  0131B4                     u4850:
 22726                           
 22727                           ;stkvar	_b @ sp[(-4)+-4]
 22728  0131B4  0EF8               	movlw	-8
 22729  0131B6  50E3               	movf	plusw1,w,c
 22730  0131B8  E10A               	bnz	u4861
 22731  0131BA  0EF9               	movlw	-7
 22732  0131BC  50E3               	movf	plusw1,w,c
 22733  0131BE  E107               	bnz	u4861
 22734  0131C0  0EFA               	movlw	-6
 22735  0131C2  50E3               	movf	plusw1,w,c
 22736  0131C4  E104               	bnz	u4861
 22737  0131C6  0EFB               	movlw	-5
 22738  0131C8  50E3               	movf	plusw1,w,c
 22739  0131CA  B4D8               	btfsc	status,2,c
 22740  0131CC  D003               	goto	u4860
 22741  0131CE                     u4861:
 22742  0131CE  6A0C               	clrf	(btemp+11)^0,c
 22743  0131D0  2A0C               	incf	(btemp+11)^0,f,c
 22744  0131D2  D001               	goto	u4878
 22745  0131D4                     u4860:
 22746  0131D4  6A0C               	clrf	(btemp+11)^0,c
 22747  0131D6                     u4878:
 22748                           
 22749                           ;stkvar	_grs @ sp[(-4)+0]
 22750  0131D6  0EFC               	movlw	-4
 22751  0131D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22752                           
 22753                           ;stkvar	_b @ sp[(-4)+-4]
 22754  0131DE  0EF8               	movlw	-8
 22755  0131E0  6AE3               	clrf	plusw1,c
 22756  0131E2  0EF9               	movlw	-7
 22757  0131E4  6AE3               	clrf	plusw1,c
 22758  0131E6  0EFA               	movlw	-6
 22759  0131E8  6AE3               	clrf	plusw1,c
 22760  0131EA  0EFB               	movlw	-5
 22761  0131EC  6AE3               	clrf	plusw1,c
 22762                           
 22763                           ;stkvar	_aexp @ sp[(-4)+2]
 22764                           ;stkvar	_bexp @ sp[(-4)+1]
 22765  0131EE  0EFE               	movlw	-2
 22766  0131F0  006F FF8C  F001    	movff	plusw1,btemp
 22767  0131F6  0EFD               	movlw	-3
 22768  0131F8  0060  F007  FFE3   	movff	btemp,plusw1
 22769  0131FE  D042               	goto	u4910
 22770  013200                     l7022:
 22771                           
 22772                           ;stkvar	_grs @ sp[(-4)+0]
 22773  013200  0EFC               	movlw	-4
 22774  013202  A0E3               	btfss	plusw1,0,c
 22775  013204  D00D               	goto	l7026
 22776                           
 22777                           ;stkvar	_grs @ sp[(-4)+0]
 22778  013206  0EFC               	movlw	-4
 22779  013208  006F FF8C  F00C    	movff	plusw1,btemp+11
 22780  01320E  90D8               	bcf	status,0,c
 22781  013210  320C               	rrcf	(btemp+11)^0,f,c
 22782  013212  0E01               	movlw	1
 22783  013214  120C               	iorwf	(btemp+11)^0,f,c
 22784                           
 22785                           ;stkvar	_grs @ sp[(-4)+0]
 22786  013216  0EFC               	movlw	-4
 22787  013218  0060  F033  FFE3   	movff	btemp+11,plusw1
 22788  01321E  D009               	goto	l7028
 22789  013220                     l7026:
 22790                           
 22791                           ;stkvar	_grs @ sp[(-4)+0]
 22792  013220  50E1               	movf	fsr1l,w,c
 22793  013222  0FFC               	addlw	-4
 22794  013224  6ED9               	movwf	fsr2l,c
 22795  013226  50E2               	movf	fsr1h,w,c
 22796  013228  6EDA               	movwf	fsr2h,c
 22797  01322A  0EFF               	movlw	255
 22798  01322C  22DA               	addwfc	fsr2h,f,c
 22799  01322E  90D8               	bcf	status,0,c
 22800  013230  32DF               	rrcf	indf2,f,c
 22801  013232                     l7028:
 22802                           
 22803                           ;stkvar	_b @ sp[(-4)+-4]
 22804  013232  0EF8               	movlw	-8
 22805  013234  A0E3               	btfss	plusw1,0,c
 22806  013236  D002               	goto	l7032
 22807                           
 22808                           ;stkvar	_grs @ sp[(-4)+0]
 22809  013238  0EFC               	movlw	-4
 22810  01323A  8EE3               	bsf	plusw1,7,c
 22811  01323C                     l7032:
 22812  01323C  0E01               	movlw	1
 22813  01323E  6E0C               	movwf	(btemp+11)^0,c
 22814                           
 22815                           ;stkvar	_b @ sp[(-4)+-4]
 22816  013240  50E1               	movf	fsr1l,w,c
 22817  013242  0FF8               	addlw	-8
 22818  013244  6ED9               	movwf	fsr2l,c
 22819  013246  50E2               	movf	fsr1h,w,c
 22820  013248  6EDA               	movwf	fsr2h,c
 22821  01324A  0EFF               	movlw	255
 22822  01324C  22DA               	addwfc	fsr2h,f,c
 22823  01324E  280C               	incf	(btemp+11)^0,w,c
 22824  013250  52DE               	movf	postinc2,f,c
 22825  013252  D008               	goto	u4900
 22826  013254                     u4905:
 22827  013254  52DE               	movf	postinc2,f,c
 22828  013256  90D8               	bcf	status,0,c
 22829  013258  BEDC               	btfsc	preinc2,7,c
 22830  01325A  80D8               	bsf	status,0,c
 22831  01325C  32DD               	rrcf	postdec2,f,c
 22832  01325E  32DD               	rrcf	postdec2,f,c
 22833  013260  32DD               	rrcf	postdec2,f,c
 22834  013262  32DE               	rrcf	postinc2,f,c
 22835  013264                     u4900:
 22836  013264  2EE8               	decfsz	wreg,f,c
 22837  013266  D7F6               	goto	u4905
 22838                           
 22839                           ;stkvar	_bexp @ sp[(-4)+1]
 22840  013268  0EFD               	movlw	-3
 22841  01326A  2AE3               	incf	plusw1,f,c
 22842  01326C                     l7036:
 22843                           
 22844                           ;stkvar	_aexp @ sp[(-4)+2]
 22845                           ;stkvar	_bexp @ sp[(-4)+1]
 22846  01326C  50E1               	movf	fsr1l,w,c
 22847  01326E  0FFD               	addlw	-3
 22848  013270  6ED9               	movwf	fsr2l,c
 22849  013272  50E2               	movf	fsr1h,w,c
 22850  013274  6EDA               	movwf	fsr2h,c
 22851  013276  0EFF               	movlw	255
 22852  013278  22DA               	addwfc	fsr2h,f,c
 22853  01327A  0EFE               	movlw	-2
 22854  01327C  50E3               	movf	plusw1,w,c
 22855  01327E  5CDE               	subwf	postinc2,w,c
 22856  013280  A0D8               	btfss	status,0,c
 22857  013282  D7BE               	goto	l7022
 22858  013284                     u4910:
 22859                           
 22860                           ;stkvar	_signs @ sp[(-4)+3]
 22861  013284  0EFF               	movlw	-1
 22862  013286  BCE3               	btfsc	plusw1,6,c
 22863  013288  D066               	goto	l7064
 22864                           
 22865                           ;stkvar	_bexp @ sp[(-4)+1]
 22866  01328A  0EFD               	movlw	-3
 22867  01328C  50E3               	movf	plusw1,w,c
 22868  01328E  B4D8               	btfsc	status,2,c
 22869  013290  D0F2               	goto	u5010
 22870                           
 22871                           ;stkvar	_a @ sp[(-4)+-8]
 22872                           ;stkvar	_b @ sp[(-4)+-4]
 22873  013292  0EF8               	movlw	-8
 22874  013294  50E3               	movf	plusw1,w,c
 22875  013296  6E01               	movwf	btemp^0,c
 22876  013298  0EF4               	movlw	-12
 22877  01329A  50E3               	movf	plusw1,w,c
 22878  01329C  2601               	addwf	btemp^0,f,c
 22879  01329E  0EF8               	movlw	-8
 22880  0132A0  0060  F007  FFE3   	movff	btemp,plusw1
 22881  0132A6  0EF9               	movlw	-7
 22882  0132A8  50E3               	movf	plusw1,w,c
 22883  0132AA  6E01               	movwf	btemp^0,c
 22884  0132AC  0EF5               	movlw	-11
 22885  0132AE  50E3               	movf	plusw1,w,c
 22886  0132B0  2201               	addwfc	btemp^0,f,c
 22887  0132B2  0EF9               	movlw	-7
 22888  0132B4  0060  F007  FFE3   	movff	btemp,plusw1
 22889  0132BA  0EFA               	movlw	-6
 22890  0132BC  50E3               	movf	plusw1,w,c
 22891  0132BE  6E01               	movwf	btemp^0,c
 22892  0132C0  0EF6               	movlw	-10
 22893  0132C2  50E3               	movf	plusw1,w,c
 22894  0132C4  2201               	addwfc	btemp^0,f,c
 22895  0132C6  0EFA               	movlw	-6
 22896  0132C8  0060  F007  FFE3   	movff	btemp,plusw1
 22897  0132CE  0EFB               	movlw	-5
 22898  0132D0  50E3               	movf	plusw1,w,c
 22899  0132D2  6E01               	movwf	btemp^0,c
 22900  0132D4  0EF7               	movlw	-9
 22901  0132D6  50E3               	movf	plusw1,w,c
 22902  0132D8  2201               	addwfc	btemp^0,f,c
 22903  0132DA  0EFB               	movlw	-5
 22904  0132DC  0060  F007  FFE3   	movff	btemp,plusw1
 22905                           
 22906                           ;stkvar	_b @ sp[(-4)+-4]
 22907  0132E2  0EFB               	movlw	-5
 22908  0132E4  A0E3               	btfss	plusw1,0,c
 22909  0132E6  D101               	goto	u5050
 22910                           
 22911                           ;stkvar	_grs @ sp[(-4)+0]
 22912  0132E8  0EFC               	movlw	-4
 22913  0132EA  A0E3               	btfss	plusw1,0,c
 22914  0132EC  D00D               	goto	l7054
 22915                           
 22916                           ;stkvar	_grs @ sp[(-4)+0]
 22917  0132EE  0EFC               	movlw	-4
 22918  0132F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22919  0132F6  90D8               	bcf	status,0,c
 22920  0132F8  320C               	rrcf	(btemp+11)^0,f,c
 22921  0132FA  0E01               	movlw	1
 22922  0132FC  120C               	iorwf	(btemp+11)^0,f,c
 22923                           
 22924                           ;stkvar	_grs @ sp[(-4)+0]
 22925  0132FE  0EFC               	movlw	-4
 22926  013300  0060  F033  FFE3   	movff	btemp+11,plusw1
 22927  013306  D009               	goto	l7056
 22928  013308                     l7054:
 22929                           
 22930                           ;stkvar	_grs @ sp[(-4)+0]
 22931  013308  50E1               	movf	fsr1l,w,c
 22932  01330A  0FFC               	addlw	-4
 22933  01330C  6ED9               	movwf	fsr2l,c
 22934  01330E  50E2               	movf	fsr1h,w,c
 22935  013310  6EDA               	movwf	fsr2h,c
 22936  013312  0EFF               	movlw	255
 22937  013314  22DA               	addwfc	fsr2h,f,c
 22938  013316  90D8               	bcf	status,0,c
 22939  013318  32DF               	rrcf	indf2,f,c
 22940  01331A                     l7056:
 22941                           
 22942                           ;stkvar	_b @ sp[(-4)+-4]
 22943  01331A  0EF8               	movlw	-8
 22944  01331C  A0E3               	btfss	plusw1,0,c
 22945  01331E  D002               	goto	l7060
 22946                           
 22947                           ;stkvar	_grs @ sp[(-4)+0]
 22948  013320  0EFC               	movlw	-4
 22949  013322  8EE3               	bsf	plusw1,7,c
 22950  013324                     l7060:
 22951  013324  0E01               	movlw	1
 22952  013326  6E0C               	movwf	(btemp+11)^0,c
 22953                           
 22954                           ;stkvar	_b @ sp[(-4)+-4]
 22955  013328  50E1               	movf	fsr1l,w,c
 22956  01332A  0FF8               	addlw	-8
 22957  01332C  6ED9               	movwf	fsr2l,c
 22958  01332E  50E2               	movf	fsr1h,w,c
 22959  013330  6EDA               	movwf	fsr2h,c
 22960  013332  0EFF               	movlw	255
 22961  013334  22DA               	addwfc	fsr2h,f,c
 22962  013336  280C               	incf	(btemp+11)^0,w,c
 22963  013338  52DE               	movf	postinc2,f,c
 22964  01333A  D008               	goto	u4970
 22965  01333C                     u4975:
 22966  01333C  52DE               	movf	postinc2,f,c
 22967  01333E  90D8               	bcf	status,0,c
 22968  013340  BEDC               	btfsc	preinc2,7,c
 22969  013342  80D8               	bsf	status,0,c
 22970  013344  32DD               	rrcf	postdec2,f,c
 22971  013346  32DD               	rrcf	postdec2,f,c
 22972  013348  32DD               	rrcf	postdec2,f,c
 22973  01334A  32DE               	rrcf	postinc2,f,c
 22974  01334C                     u4970:
 22975  01334C  2EE8               	decfsz	wreg,f,c
 22976  01334E  D7F6               	goto	u4975
 22977                           
 22978                           ;stkvar	_bexp @ sp[(-4)+1]
 22979  013350  0EFD               	movlw	-3
 22980  013352  2AE3               	incf	plusw1,f,c
 22981  013354  D0CA               	goto	u5050
 22982  013356                     l7064:
 22983                           
 22984                           ;stkvar	_a @ sp[(-4)+-8]
 22985                           ;stkvar	_b @ sp[(-4)+-4]
 22986  013356  50E1               	movf	fsr1l,w,c
 22987  013358  0FF8               	addlw	-8
 22988  01335A  6ED9               	movwf	fsr2l,c
 22989  01335C  50E2               	movf	fsr1h,w,c
 22990  01335E  6EDA               	movwf	fsr2h,c
 22991  013360  0EFF               	movlw	255
 22992  013362  22DA               	addwfc	fsr2h,f,c
 22993  013364  0EF4               	movlw	-12
 22994  013366  50E3               	movf	plusw1,w,c
 22995  013368  5CDE               	subwf	postinc2,w,c
 22996  01336A  0EF5               	movlw	-11
 22997  01336C  50E3               	movf	plusw1,w,c
 22998  01336E  58DE               	subwfb	postinc2,w,c
 22999  013370  0EF6               	movlw	-10
 23000  013372  50E3               	movf	plusw1,w,c
 23001  013374  58DE               	subwfb	postinc2,w,c
 23002  013376  50DE               	movf	postinc2,w,c
 23003  013378  0A80               	xorlw	128
 23004  01337A  6E01               	movwf	btemp^0,c
 23005  01337C  0EF7               	movlw	-9
 23006  01337E  50E3               	movf	plusw1,w,c
 23007  013380  0A80               	xorlw	128
 23008  013382  5801               	subwfb	btemp^0,w,c
 23009  013384  B0D8               	btfsc	status,0,c
 23010  013386  D053               	goto	l7076
 23011                           
 23012                           ;stkvar	_b @ sp[(-4)+-4]
 23013                           ;stkvar	_a @ sp[(-4)+-8]
 23014  013388  0EF4               	movlw	-12
 23015  01338A  006F FF8C  F009    	movff	plusw1,btemp+8
 23016  013390  0EF5               	movlw	-11
 23017  013392  006F FF8C  F00A    	movff	plusw1,btemp+9
 23018  013398  0EF6               	movlw	-10
 23019  01339A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23020  0133A0  0EF7               	movlw	-9
 23021  0133A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23022  0133A8  0EF8               	movlw	-8
 23023  0133AA  50E3               	movf	plusw1,w,c
 23024  0133AC  5E09               	subwf	(btemp+8)^0,f,c
 23025  0133AE  0EF9               	movlw	-7
 23026  0133B0  50E3               	movf	plusw1,w,c
 23027  0133B2  5A0A               	subwfb	(btemp+9)^0,f,c
 23028  0133B4  0EFA               	movlw	-6
 23029  0133B6  50E3               	movf	plusw1,w,c
 23030  0133B8  5A0B               	subwfb	(btemp+10)^0,f,c
 23031  0133BA  0EFB               	movlw	-5
 23032  0133BC  50E3               	movf	plusw1,w,c
 23033  0133BE  5A0C               	subwfb	(btemp+11)^0,f,c
 23034  0133C0  0EFF               	movlw	255
 23035  0133C2  2409               	addwf	(btemp+8)^0,w,c
 23036  0133C4  6E05               	movwf	(btemp+4)^0,c
 23037  0133C6  0EFF               	movlw	255
 23038  0133C8  200A               	addwfc	(btemp+9)^0,w,c
 23039  0133CA  6E06               	movwf	(btemp+5)^0,c
 23040  0133CC  0EFF               	movlw	255
 23041  0133CE  200B               	addwfc	(btemp+10)^0,w,c
 23042  0133D0  6E07               	movwf	(btemp+6)^0,c
 23043  0133D2  0EFF               	movlw	255
 23044  0133D4  200C               	addwfc	(btemp+11)^0,w,c
 23045  0133D6  6E08               	movwf	(btemp+7)^0,c
 23046                           
 23047                           ;stkvar	_b @ sp[(-4)+-4]
 23048  0133D8  0EF8               	movlw	-8
 23049  0133DA  0060  F017  FFE3   	movff	btemp+4,plusw1
 23050  0133E0  0EF9               	movlw	-7
 23051  0133E2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23052  0133E8  0EFA               	movlw	-6
 23053  0133EA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23054  0133F0  0EFB               	movlw	-5
 23055  0133F2  0060  F023  FFE3   	movff	btemp+7,plusw1
 23056                           
 23057                           ;stkvar	_signs @ sp[(-4)+3]
 23058  0133F8  0EFF               	movlw	-1
 23059  0133FA  7EE3               	btg	plusw1,7,c
 23060                           
 23061                           ;stkvar	_grs @ sp[(-4)+0]
 23062  0133FC  0EFC               	movlw	-4
 23063  0133FE  50E3               	movf	plusw1,w,c
 23064  013400  0800               	sublw	0
 23065  013402  6E0C               	movwf	(btemp+11)^0,c
 23066                           
 23067                           ;stkvar	_grs @ sp[(-4)+0]
 23068  013404  0EFC               	movlw	-4
 23069  013406  0060  F033  FFE3   	movff	btemp+11,plusw1
 23070                           
 23071                           ;stkvar	_grs @ sp[(-4)+0]
 23072  01340C  0EFC               	movlw	-4
 23073  01340E  50E3               	movf	plusw1,w,c
 23074  013410  A4D8               	btfss	status,2,c
 23075  013412  D020               	goto	l7078
 23076                           
 23077                           ;stkvar	_b @ sp[(-4)+-4]
 23078  013414  50E1               	movf	fsr1l,w,c
 23079  013416  0FF8               	addlw	-8
 23080  013418  6ED9               	movwf	fsr2l,c
 23081  01341A  50E2               	movf	fsr1h,w,c
 23082  01341C  6EDA               	movwf	fsr2h,c
 23083  01341E  0EFF               	movlw	255
 23084  013420  22DA               	addwfc	fsr2h,f,c
 23085  013422  2ADE               	incf	postinc2,f,c
 23086  013424  0E00               	movlw	0
 23087  013426  22DE               	addwfc	postinc2,f,c
 23088  013428  22DE               	addwfc	postinc2,f,c
 23089  01342A  22DE               	addwfc	postinc2,f,c
 23090  01342C  D013               	goto	l7078
 23091  01342E                     l7076:
 23092                           
 23093                           ;stkvar	_a @ sp[(-4)+-8]
 23094                           ;stkvar	_b @ sp[(-4)+-4]
 23095  01342E  50E1               	movf	fsr1l,w,c
 23096  013430  0FF8               	addlw	-8
 23097  013432  6ED9               	movwf	fsr2l,c
 23098  013434  50E2               	movf	fsr1h,w,c
 23099  013436  6EDA               	movwf	fsr2h,c
 23100  013438  0EFF               	movlw	255
 23101  01343A  22DA               	addwfc	fsr2h,f,c
 23102  01343C  0EF4               	movlw	-12
 23103  01343E  50E3               	movf	plusw1,w,c
 23104  013440  5EDE               	subwf	postinc2,f,c
 23105  013442  0EF5               	movlw	-11
 23106  013444  50E3               	movf	plusw1,w,c
 23107  013446  5ADE               	subwfb	postinc2,f,c
 23108  013448  0EF6               	movlw	-10
 23109  01344A  50E3               	movf	plusw1,w,c
 23110  01344C  5ADE               	subwfb	postinc2,f,c
 23111  01344E  0EF7               	movlw	-9
 23112  013450  50E3               	movf	plusw1,w,c
 23113  013452  5ADE               	subwfb	postinc2,f,c
 23114  013454                     l7078:
 23115                           
 23116                           ;stkvar	_b @ sp[(-4)+-4]
 23117  013454  0EF8               	movlw	-8
 23118  013456  50E3               	movf	plusw1,w,c
 23119  013458  E145               	bnz	l7100
 23120  01345A  0EF9               	movlw	-7
 23121  01345C  50E3               	movf	plusw1,w,c
 23122  01345E  E142               	bnz	l7100
 23123  013460  0EFA               	movlw	-6
 23124  013462  50E3               	movf	plusw1,w,c
 23125  013464  E13F               	bnz	l7100
 23126  013466  0EFB               	movlw	-5
 23127  013468  50E3               	movf	plusw1,w,c
 23128  01346A  A4D8               	btfss	status,2,c
 23129  01346C  D03B               	goto	l7100
 23130                           
 23131                           ;stkvar	_grs @ sp[(-4)+0]
 23132  01346E  0EFC               	movlw	-4
 23133  013470  50E3               	movf	plusw1,w,c
 23134  013472  A4D8               	btfss	status,2,c
 23135  013474  D037               	goto	l7100
 23136  013476                     u5010:
 23137  013476  0E00               	movlw	0
 23138  013478  6E01               	movwf	btemp^0,c
 23139  01347A  0E00               	movlw	0
 23140  01347C  6E02               	movwf	(btemp+1)^0,c
 23141  01347E  0E00               	movlw	0
 23142  013480  6E03               	movwf	(btemp+2)^0,c
 23143  013482  0E00               	movlw	0
 23144  013484  6E04               	movwf	(btemp+3)^0,c
 23145  013486  D0C6               	goto	l2770
 23146  013488                     l7086:
 23147                           
 23148                           ;stkvar	_b @ sp[(-4)+-4]
 23149  013488  90D8               	bcf	status,0,c
 23150  01348A  0EF8               	movlw	-8
 23151  01348C  36E3               	rlcf	plusw1,f,c
 23152  01348E  0EF9               	movlw	-7
 23153  013490  36E3               	rlcf	plusw1,f,c
 23154  013492  0EFA               	movlw	-6
 23155  013494  36E3               	rlcf	plusw1,f,c
 23156  013496  0EFB               	movlw	-5
 23157  013498  36E3               	rlcf	plusw1,f,c
 23158                           
 23159                           ;stkvar	_grs @ sp[(-4)+0]
 23160  01349A  0EFC               	movlw	-4
 23161  01349C  AEE3               	btfss	plusw1,7,c
 23162  01349E  D002               	goto	l2782
 23163                           
 23164                           ;stkvar	_b @ sp[(-4)+-4]
 23165  0134A0  0EF8               	movlw	-8
 23166  0134A2  80E3               	bsf	plusw1,0,c
 23167  0134A4                     l2782:
 23168                           
 23169                           ;stkvar	_grs @ sp[(-4)+0]
 23170  0134A4  0EFC               	movlw	-4
 23171  0134A6  A0E3               	btfss	plusw1,0,c
 23172  0134A8  D00E               	goto	l7094
 23173                           
 23174                           ;stkvar	_grs @ sp[(-4)+0]
 23175  0134AA  0EFC               	movlw	-4
 23176  0134AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23177  0134B2  90D8               	bcf	status,0,c
 23178  0134B4  340C               	rlcf	(btemp+11)^0,w,c
 23179  0134B6  6E0B               	movwf	(btemp+10)^0,c
 23180  0134B8  0E01               	movlw	1
 23181  0134BA  120B               	iorwf	(btemp+10)^0,f,c
 23182                           
 23183                           ;stkvar	_grs @ sp[(-4)+0]
 23184  0134BC  0EFC               	movlw	-4
 23185  0134BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23186  0134C4  D009               	goto	l7096
 23187  0134C6                     l7094:
 23188                           
 23189                           ;stkvar	_grs @ sp[(-4)+0]
 23190  0134C6  50E1               	movf	fsr1l,w,c
 23191  0134C8  0FFC               	addlw	-4
 23192  0134CA  6ED9               	movwf	fsr2l,c
 23193  0134CC  50E2               	movf	fsr1h,w,c
 23194  0134CE  6EDA               	movwf	fsr2h,c
 23195  0134D0  0EFF               	movlw	255
 23196  0134D2  22DA               	addwfc	fsr2h,f,c
 23197  0134D4  90D8               	bcf	status,0,c
 23198  0134D6  36DF               	rlcf	indf2,f,c
 23199  0134D8                     l7096:
 23200                           
 23201                           ;stkvar	_bexp @ sp[(-4)+1]
 23202  0134D8  0EFD               	movlw	-3
 23203  0134DA  50E3               	movf	plusw1,w,c
 23204  0134DC  B4D8               	btfsc	status,2,c
 23205  0134DE  D002               	goto	l7100
 23206                           
 23207                           ;stkvar	_bexp @ sp[(-4)+1]
 23208  0134E0  0EFD               	movlw	-3
 23209  0134E2  06E3               	decf	plusw1,f,c
 23210  0134E4                     l7100:
 23211                           
 23212                           ;stkvar	_b @ sp[(-4)+-4]
 23213  0134E4  0EFA               	movlw	-6
 23214  0134E6  AEE3               	btfss	plusw1,7,c
 23215  0134E8  D7CF               	goto	l7086
 23216  0134EA                     u5050:
 23217                           
 23218                           ;stkvar	_aexp @ sp[(-4)+2]
 23219  0134EA  0EFE               	movlw	-2
 23220  0134EC  6AE3               	clrf	plusw1,c
 23221                           
 23222                           ;stkvar	_grs @ sp[(-4)+0]
 23223  0134EE  0EFC               	movlw	-4
 23224  0134F0  AEE3               	btfss	plusw1,7,c
 23225  0134F2  D00F               	goto	l7114
 23226                           
 23227                           ;stkvar	_grs @ sp[(-4)+0]
 23228  0134F4  0EFC               	movlw	-4
 23229  0134F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23230  0134FC  0E7F               	movlw	127
 23231  0134FE  160C               	andwf	(btemp+11)^0,f,c
 23232  013500  B4D8               	btfsc	status,2,c
 23233  013502  D004               	goto	l7110
 23234  013504                     u5070:
 23235                           
 23236                           ;stkvar	_aexp @ sp[(-4)+2]
 23237  013504  0EFE               	movlw	-2
 23238  013506  6AE3               	clrf	plusw1,c
 23239  013508  2AE3               	incf	plusw1,f,c
 23240  01350A  D003               	goto	l7114
 23241  01350C                     l7110:
 23242                           
 23243                           ;stkvar	_b @ sp[(-4)+-4]
 23244  01350C  0EF8               	movlw	-8
 23245  01350E  B0E3               	btfsc	plusw1,0,c
 23246  013510  D7F9               	goto	u5070
 23247  013512                     l7114:
 23248                           
 23249                           ;stkvar	_aexp @ sp[(-4)+2]
 23250  013512  0EFE               	movlw	-2
 23251  013514  50E3               	movf	plusw1,w,c
 23252  013516  B4D8               	btfsc	status,2,c
 23253  013518  D02B               	goto	l7126
 23254                           
 23255                           ;stkvar	_b @ sp[(-4)+-4]
 23256  01351A  50E1               	movf	fsr1l,w,c
 23257  01351C  0FF8               	addlw	-8
 23258  01351E  6ED9               	movwf	fsr2l,c
 23259  013520  50E2               	movf	fsr1h,w,c
 23260  013522  6EDA               	movwf	fsr2h,c
 23261  013524  0EFF               	movlw	255
 23262  013526  22DA               	addwfc	fsr2h,f,c
 23263  013528  2ADE               	incf	postinc2,f,c
 23264  01352A  0E00               	movlw	0
 23265  01352C  22DE               	addwfc	postinc2,f,c
 23266  01352E  22DE               	addwfc	postinc2,f,c
 23267  013530  22DE               	addwfc	postinc2,f,c
 23268                           
 23269                           ;stkvar	_b @ sp[(-4)+-4]
 23270  013532  0EFB               	movlw	-5
 23271  013534  A0E3               	btfss	plusw1,0,c
 23272  013536  D01C               	goto	l7126
 23273  013538  0E01               	movlw	1
 23274  01353A  6E0C               	movwf	(btemp+11)^0,c
 23275                           
 23276                           ;stkvar	_b @ sp[(-4)+-4]
 23277  01353C  50E1               	movf	fsr1l,w,c
 23278  01353E  0FF8               	addlw	-8
 23279  013540  6ED9               	movwf	fsr2l,c
 23280  013542  50E2               	movf	fsr1h,w,c
 23281  013544  6EDA               	movwf	fsr2h,c
 23282  013546  0EFF               	movlw	255
 23283  013548  22DA               	addwfc	fsr2h,f,c
 23284  01354A  280C               	incf	(btemp+11)^0,w,c
 23285  01354C  52DE               	movf	postinc2,f,c
 23286  01354E  D008               	goto	u5110
 23287  013550                     u5115:
 23288  013550  52DE               	movf	postinc2,f,c
 23289  013552  90D8               	bcf	status,0,c
 23290  013554  BEDC               	btfsc	preinc2,7,c
 23291  013556  80D8               	bsf	status,0,c
 23292  013558  32DD               	rrcf	postdec2,f,c
 23293  01355A  32DD               	rrcf	postdec2,f,c
 23294  01355C  32DD               	rrcf	postdec2,f,c
 23295  01355E  32DE               	rrcf	postinc2,f,c
 23296  013560                     u5110:
 23297  013560  2EE8               	decfsz	wreg,f,c
 23298  013562  D7F6               	goto	u5115
 23299                           
 23300                           ;stkvar	_bexp @ sp[(-4)+1]
 23301  013564  0EFD               	movlw	-3
 23302  013566  28E3               	incf	plusw1,w,c
 23303  013568  B4D8               	btfsc	status,2,c
 23304  01356A  D002               	goto	l7126
 23305                           
 23306                           ;stkvar	_bexp @ sp[(-4)+1]
 23307  01356C  0EFD               	movlw	-3
 23308  01356E  2AE3               	incf	plusw1,f,c
 23309  013570                     l7126:
 23310                           
 23311                           ;stkvar	_bexp @ sp[(-4)+1]
 23312  013570  0EFD               	movlw	-3
 23313  013572  28E3               	incf	plusw1,w,c
 23314  013574  B4D8               	btfsc	status,2,c
 23315  013576  D004               	goto	u5140
 23316                           
 23317                           ;stkvar	_bexp @ sp[(-4)+1]
 23318  013578  0EFD               	movlw	-3
 23319  01357A  50E3               	movf	plusw1,w,c
 23320  01357C  A4D8               	btfss	status,2,c
 23321  01357E  D00E               	goto	l7136
 23322  013580                     u5140:
 23323                           
 23324                           ;stkvar	_b @ sp[(-4)+-4]
 23325  013580  0EF8               	movlw	-8
 23326  013582  6AE3               	clrf	plusw1,c
 23327  013584  0EF9               	movlw	-7
 23328  013586  6AE3               	clrf	plusw1,c
 23329  013588  0EFA               	movlw	-6
 23330  01358A  6AE3               	clrf	plusw1,c
 23331  01358C  0EFB               	movlw	-5
 23332  01358E  6AE3               	clrf	plusw1,c
 23333                           
 23334                           ;stkvar	_bexp @ sp[(-4)+1]
 23335  013590  0EFD               	movlw	-3
 23336  013592  50E3               	movf	plusw1,w,c
 23337  013594  A4D8               	btfss	status,2,c
 23338  013596  D002               	goto	l7136
 23339                           
 23340                           ;stkvar	_signs @ sp[(-4)+3]
 23341  013598  0EFF               	movlw	-1
 23342  01359A  6AE3               	clrf	plusw1,c
 23343  01359C                     l7136:
 23344                           
 23345                           ;stkvar	_bexp @ sp[(-4)+1]
 23346  01359C  0EFD               	movlw	-3
 23347  01359E  A0E3               	btfss	plusw1,0,c
 23348  0135A0  D009               	goto	l7140
 23349                           
 23350                           ;stkvar	_b @ sp[(-4)+-4]
 23351  0135A2  0EFA               	movlw	250
 23352  0135A4  24E1               	addwf	fsr1l,w,c
 23353  0135A6  6ED9               	movwf	fsr2l,c
 23354  0135A8  0EFF               	movlw	255
 23355  0135AA  20E2               	addwfc	fsr1h,w,c
 23356  0135AC  6EDA               	movwf	fsr2h,c
 23357  0135AE  0E00               	movlw	0
 23358  0135B0  8EDB               	bsf	plusw2,7,c
 23359  0135B2  D008               	goto	l7142
 23360  0135B4                     l7140:
 23361                           
 23362                           ;stkvar	_b @ sp[(-4)+-4]
 23363  0135B4  0EFA               	movlw	250
 23364  0135B6  24E1               	addwf	fsr1l,w,c
 23365  0135B8  6ED9               	movwf	fsr2l,c
 23366  0135BA  0EFF               	movlw	255
 23367  0135BC  20E2               	addwfc	fsr1h,w,c
 23368  0135BE  6EDA               	movwf	fsr2h,c
 23369  0135C0  0E7F               	movlw	127
 23370  0135C2  16DF               	andwf	indf2,f,c
 23371  0135C4                     l7142:
 23372                           
 23373                           ;stkvar	_b @ sp[(-4)+-4]
 23374  0135C4  0EFB               	movlw	251
 23375  0135C6  24E1               	addwf	fsr1l,w,c
 23376  0135C8  6ED9               	movwf	fsr2l,c
 23377  0135CA  0EFF               	movlw	255
 23378  0135CC  20E2               	addwfc	fsr1h,w,c
 23379  0135CE  6EDA               	movwf	fsr2h,c
 23380                           
 23381                           ;stkvar	_bexp @ sp[(-4)+1]
 23382  0135D0  0EFD               	movlw	-3
 23383  0135D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23384  0135D8  90D8               	bcf	status,0,c
 23385  0135DA  300C               	rrcf	(btemp+11)^0,w,c
 23386  0135DC  6EDF               	movwf	indf2,c
 23387                           
 23388                           ;stkvar	_signs @ sp[(-4)+3]
 23389  0135DE  0EFF               	movlw	-1
 23390  0135E0  AEE3               	btfss	plusw1,7,c
 23391  0135E2  D008               	goto	l7148
 23392                           
 23393                           ;stkvar	_b @ sp[(-4)+-4]
 23394  0135E4  0EFB               	movlw	251
 23395  0135E6  24E1               	addwf	fsr1l,w,c
 23396  0135E8  6ED9               	movwf	fsr2l,c
 23397  0135EA  0EFF               	movlw	255
 23398  0135EC  20E2               	addwfc	fsr1h,w,c
 23399  0135EE  6EDA               	movwf	fsr2h,c
 23400  0135F0  0E00               	movlw	0
 23401  0135F2  8EDB               	bsf	plusw2,7,c
 23402  0135F4                     l7148:
 23403                           
 23404                           ;stkvar	_b @ sp[(-4)+-4]
 23405  0135F4  0EF8               	movlw	-8
 23406  0135F6  006F FF8C  F001    	movff	plusw1,btemp
 23407  0135FC  0EF9               	movlw	-7
 23408  0135FE  006F FF8C  F002    	movff	plusw1,btemp+1
 23409  013604  0EFA               	movlw	-6
 23410  013606  006F FF8C  F003    	movff	plusw1,btemp+2
 23411  01360C  0EFB               	movlw	-5
 23412  01360E  006F FF8C  F004    	movff	plusw1,btemp+3
 23413  013614                     l2770:
 23414                           
 23415                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 23416  013614  0EF4               	movlw	244
 23417  013616  26E1               	addwf	fsr1l,f,c
 23418  013618  0EFF               	movlw	255
 23419  01361A  22E2               	addwfc	fsr1h,f,c
 23420  01361C  0012               	return		;funcret
 23421  01361E                     __end_of___fladd:
 23422                           	opt callstack 0
 23423                           
 23424 ;; *************** function ___flmul *****************
 23425 ;; Defined at:
 23426 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 23427 ;; Parameters:    Size  Location     Type
 23428 ;;  b               4  [STACK] unsigned char 
 23429 ;;  a               4  [STACK] unsigned char 
 23430 ;; Auto vars:     Size  Location     Type
 23431 ;;  prod            4  [STACK] struct .
 23432 ;;  grs             4  [STACK] unsigned long 
 23433 ;;  temp            2  [STACK] struct .
 23434 ;;  bexp            1  [STACK] unsigned char 
 23435 ;;  aexp            1  [STACK] unsigned char 
 23436 ;;  sign            1  [STACK] unsigned char 
 23437 ;; Return value:  Size  Location     Type
 23438 ;;                  4  [STACK] unsigned char 
 23439 ;; Registers used:
 23440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23441 ;; Tracked objects:
 23442 ;;		On entry : 0/1
 23443 ;;		On exit  : 0/0
 23444 ;;		Unchanged: 0/0
 23445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23450 ;;Total ram usage:        0 bytes
 23451 ;; Hardware stack levels used:    1
 23452 ;; Hardware stack levels required when called:   15
 23453 ;; This function calls:
 23454 ;;		Nothing
 23455 ;; This function is called by:
 23456 ;;		_conv_raw_result
 23457 ;;		_lp_filter
 23458 ;;		_calc_model_data
 23459 ;;		_calc_bsoc
 23460 ;;		_init_bsoc
 23461 ;;		_efgtoa
 23462 ;; This function uses a reentrant model
 23463 ;;
 23464                           
 23465                           	psect	text96
 23466  012638                     __ptext96:
 23467                           	opt callstack 0
 23468  012638                     ___flmul:
 23469                           	opt callstack 0
 23470                           
 23471                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23472  012638  0E0D               	movlw	13
 23473  01263A  26E1               	addwf	fsr1l,f,c
 23474  01263C  0E00               	movlw	0
 23475  01263E  22E2               	addwfc	fsr1h,f,c
 23476                           
 23477                           ;stkvar	_b @ sp[(-13)+-4]
 23478                           
 23479                           ;incstack = 0
 23480 ;; hardware stack exceeded
 23481  012640  0EF2               	movlw	242
 23482  012642  24E1               	addwf	fsr1l,w,c
 23483  012644  6ED9               	movwf	fsr2l,c
 23484  012646  0EFF               	movlw	255
 23485  012648  20E2               	addwfc	fsr1h,w,c
 23486  01264A  6EDA               	movwf	fsr2h,c
 23487  01264C  50DF               	movf	indf2,w,c
 23488  01264E  6E0C               	movwf	(btemp+11)^0,c
 23489  012650  0E80               	movlw	128
 23490  012652  160C               	andwf	(btemp+11)^0,f,c
 23491                           
 23492                           ;stkvar	_sign @ sp[(-13)+12]
 23493  012654  0EFF               	movlw	-1
 23494  012656  0060  F033  FFE3   	movff	btemp+11,plusw1
 23495                           
 23496                           ;stkvar	_b @ sp[(-13)+-4]
 23497  01265C  0EF2               	movlw	242
 23498  01265E  24E1               	addwf	fsr1l,w,c
 23499  012660  6ED9               	movwf	fsr2l,c
 23500  012662  0EFF               	movlw	255
 23501  012664  20E2               	addwfc	fsr1h,w,c
 23502  012666  6EDA               	movwf	fsr2h,c
 23503  012668  50DF               	movf	indf2,w,c
 23504  01266A  6E0C               	movwf	(btemp+11)^0,c
 23505  01266C  90D8               	bcf	status,0,c
 23506  01266E  340C               	rlcf	(btemp+11)^0,w,c
 23507  012670  6E0B               	movwf	(btemp+10)^0,c
 23508                           
 23509                           ;stkvar	_bexp @ sp[(-13)+10]
 23510  012672  0EFD               	movlw	-3
 23511  012674  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23512                           
 23513                           ;stkvar	_b @ sp[(-13)+-4]
 23514  01267A  0EF1               	movlw	241
 23515  01267C  24E1               	addwf	fsr1l,w,c
 23516  01267E  6ED9               	movwf	fsr2l,c
 23517  012680  0EFF               	movlw	255
 23518  012682  20E2               	addwfc	fsr1h,w,c
 23519  012684  6EDA               	movwf	fsr2h,c
 23520  012686  AEDF               	btfss	indf2,7,c
 23521  012688  D002               	goto	l7532
 23522                           
 23523                           ;stkvar	_bexp @ sp[(-13)+10]
 23524  01268A  0EFD               	movlw	-3
 23525  01268C  80E3               	bsf	plusw1,0,c
 23526  01268E                     l7532:
 23527                           
 23528                           ;stkvar	_bexp @ sp[(-13)+10]
 23529  01268E  0EFD               	movlw	-3
 23530  012690  50E3               	movf	plusw1,w,c
 23531  012692  B4D8               	btfsc	status,2,c
 23532  012694  D01F               	goto	l7540
 23533                           
 23534                           ;stkvar	_bexp @ sp[(-13)+10]
 23535  012696  0EFD               	movlw	-3
 23536  012698  28E3               	incf	plusw1,w,c
 23537  01269A  A4D8               	btfss	status,2,c
 23538  01269C  D018               	goto	l7538
 23539  01269E  0E00               	movlw	0
 23540  0126A0  6E09               	movwf	(btemp+8)^0,c
 23541  0126A2  0E00               	movlw	0
 23542  0126A4  6E0A               	movwf	(btemp+9)^0,c
 23543  0126A6  0E00               	movlw	0
 23544  0126A8  6E0B               	movwf	(btemp+10)^0,c
 23545  0126AA  0E00               	movlw	0
 23546  0126AC  6E0C               	movwf	(btemp+11)^0,c
 23547                           
 23548                           ;stkvar	_b @ sp[(-13)+-4]
 23549  0126AE  0EEF               	movlw	-17
 23550  0126B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23551  0126B6  0EF0               	movlw	-16
 23552  0126B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23553  0126BE  0EF1               	movlw	-15
 23554  0126C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23555  0126C6  0EF2               	movlw	-14
 23556  0126C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23557  0126CE                     l7538:
 23558                           
 23559                           ;stkvar	_b @ sp[(-13)+-4]
 23560  0126CE  0EF1               	movlw	-15
 23561  0126D0  8EE3               	bsf	plusw1,7,c
 23562  0126D2  D018               	goto	l7542
 23563  0126D4                     l7540:
 23564  0126D4  0E00               	movlw	0
 23565  0126D6  6E09               	movwf	(btemp+8)^0,c
 23566  0126D8  0E00               	movlw	0
 23567  0126DA  6E0A               	movwf	(btemp+9)^0,c
 23568  0126DC  0E00               	movlw	0
 23569  0126DE  6E0B               	movwf	(btemp+10)^0,c
 23570  0126E0  0E00               	movlw	0
 23571  0126E2  6E0C               	movwf	(btemp+11)^0,c
 23572                           
 23573                           ;stkvar	_b @ sp[(-13)+-4]
 23574  0126E4  0EEF               	movlw	-17
 23575  0126E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 23576  0126EC  0EF0               	movlw	-16
 23577  0126EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23578  0126F4  0EF1               	movlw	-15
 23579  0126F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23580  0126FC  0EF2               	movlw	-14
 23581  0126FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 23582  012704                     l7542:
 23583                           
 23584                           ;stkvar	_a @ sp[(-13)+-8]
 23585  012704  0EEE               	movlw	238
 23586  012706  24E1               	addwf	fsr1l,w,c
 23587  012708  6ED9               	movwf	fsr2l,c
 23588  01270A  0EFF               	movlw	255
 23589  01270C  20E2               	addwfc	fsr1h,w,c
 23590  01270E  6EDA               	movwf	fsr2h,c
 23591  012710  50DF               	movf	indf2,w,c
 23592  012712  6E0C               	movwf	(btemp+11)^0,c
 23593  012714  0E80               	movlw	128
 23594  012716  160C               	andwf	(btemp+11)^0,f,c
 23595                           
 23596                           ;stkvar	_sign @ sp[(-13)+12]
 23597  012718  50E1               	movf	fsr1l,w,c
 23598  01271A  0FFF               	addlw	-1
 23599  01271C  6ED9               	movwf	fsr2l,c
 23600  01271E  50E2               	movf	fsr1h,w,c
 23601  012720  6EDA               	movwf	fsr2h,c
 23602  012722  0EFF               	movlw	255
 23603  012724  22DA               	addwfc	fsr2h,f,c
 23604  012726  500C               	movf	(btemp+11)^0,w,c
 23605  012728  1ADF               	xorwf	indf2,f,c
 23606                           
 23607                           ;stkvar	_a @ sp[(-13)+-8]
 23608  01272A  0EEE               	movlw	238
 23609  01272C  24E1               	addwf	fsr1l,w,c
 23610  01272E  6ED9               	movwf	fsr2l,c
 23611  012730  0EFF               	movlw	255
 23612  012732  20E2               	addwfc	fsr1h,w,c
 23613  012734  6EDA               	movwf	fsr2h,c
 23614  012736  50DF               	movf	indf2,w,c
 23615  012738  6E0C               	movwf	(btemp+11)^0,c
 23616  01273A  90D8               	bcf	status,0,c
 23617  01273C  340C               	rlcf	(btemp+11)^0,w,c
 23618  01273E  6E0B               	movwf	(btemp+10)^0,c
 23619                           
 23620                           ;stkvar	_aexp @ sp[(-13)+11]
 23621  012740  0EFE               	movlw	-2
 23622  012742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23623                           
 23624                           ;stkvar	_a @ sp[(-13)+-8]
 23625  012748  0EED               	movlw	237
 23626  01274A  24E1               	addwf	fsr1l,w,c
 23627  01274C  6ED9               	movwf	fsr2l,c
 23628  01274E  0EFF               	movlw	255
 23629  012750  20E2               	addwfc	fsr1h,w,c
 23630  012752  6EDA               	movwf	fsr2h,c
 23631  012754  AEDF               	btfss	indf2,7,c
 23632  012756  D002               	goto	l7550
 23633                           
 23634                           ;stkvar	_aexp @ sp[(-13)+11]
 23635  012758  0EFE               	movlw	-2
 23636  01275A  80E3               	bsf	plusw1,0,c
 23637  01275C                     l7550:
 23638                           
 23639                           ;stkvar	_aexp @ sp[(-13)+11]
 23640  01275C  0EFE               	movlw	-2
 23641  01275E  50E3               	movf	plusw1,w,c
 23642  012760  B4D8               	btfsc	status,2,c
 23643  012762  D01F               	goto	l7558
 23644                           
 23645                           ;stkvar	_aexp @ sp[(-13)+11]
 23646  012764  0EFE               	movlw	-2
 23647  012766  28E3               	incf	plusw1,w,c
 23648  012768  A4D8               	btfss	status,2,c
 23649  01276A  D018               	goto	l7556
 23650  01276C  0E00               	movlw	0
 23651  01276E  6E09               	movwf	(btemp+8)^0,c
 23652  012770  0E00               	movlw	0
 23653  012772  6E0A               	movwf	(btemp+9)^0,c
 23654  012774  0E00               	movlw	0
 23655  012776  6E0B               	movwf	(btemp+10)^0,c
 23656  012778  0E00               	movlw	0
 23657  01277A  6E0C               	movwf	(btemp+11)^0,c
 23658                           
 23659                           ;stkvar	_a @ sp[(-13)+-8]
 23660  01277C  0EEB               	movlw	-21
 23661  01277E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23662  012784  0EEC               	movlw	-20
 23663  012786  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23664  01278C  0EED               	movlw	-19
 23665  01278E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23666  012794  0EEE               	movlw	-18
 23667  012796  0060  F033  FFE3   	movff	btemp+11,plusw1
 23668  01279C                     l7556:
 23669                           
 23670                           ;stkvar	_a @ sp[(-13)+-8]
 23671  01279C  0EED               	movlw	-19
 23672  01279E  8EE3               	bsf	plusw1,7,c
 23673  0127A0  D018               	goto	l7560
 23674  0127A2                     l7558:
 23675  0127A2  0E00               	movlw	0
 23676  0127A4  6E09               	movwf	(btemp+8)^0,c
 23677  0127A6  0E00               	movlw	0
 23678  0127A8  6E0A               	movwf	(btemp+9)^0,c
 23679  0127AA  0E00               	movlw	0
 23680  0127AC  6E0B               	movwf	(btemp+10)^0,c
 23681  0127AE  0E00               	movlw	0
 23682  0127B0  6E0C               	movwf	(btemp+11)^0,c
 23683                           
 23684                           ;stkvar	_a @ sp[(-13)+-8]
 23685  0127B2  0EEB               	movlw	-21
 23686  0127B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 23687  0127BA  0EEC               	movlw	-20
 23688  0127BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23689  0127C2  0EED               	movlw	-19
 23690  0127C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23691  0127CA  0EEE               	movlw	-18
 23692  0127CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23693  0127D2                     l7560:
 23694                           
 23695                           ;stkvar	_aexp @ sp[(-13)+11]
 23696  0127D2  0EFE               	movlw	-2
 23697  0127D4  50E3               	movf	plusw1,w,c
 23698  0127D6  B4D8               	btfsc	status,2,c
 23699  0127D8  D004               	goto	u6080
 23700                           
 23701                           ;stkvar	_bexp @ sp[(-13)+10]
 23702  0127DA  0EFD               	movlw	-3
 23703  0127DC  50E3               	movf	plusw1,w,c
 23704  0127DE  A4D8               	btfss	status,2,c
 23705  0127E0  D009               	goto	l7568
 23706  0127E2                     u6080:
 23707  0127E2  0E00               	movlw	0
 23708  0127E4  6E01               	movwf	btemp^0,c
 23709  0127E6  0E00               	movlw	0
 23710  0127E8  6E02               	movwf	(btemp+1)^0,c
 23711  0127EA  0E00               	movlw	0
 23712  0127EC  6E03               	movwf	(btemp+2)^0,c
 23713  0127EE  0E00               	movlw	0
 23714  0127F0  6E04               	movwf	(btemp+3)^0,c
 23715  0127F2  D332               	goto	l2851
 23716  0127F4                     l7568:
 23717                           
 23718                           ;stkvar	_b @ sp[(-13)+-4]
 23719  0127F4  0EEF               	movlw	-17
 23720  0127F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23721                           
 23722                           ;stkvar	_a @ sp[(-13)+-8]
 23723  0127FC  0EED               	movlw	237
 23724  0127FE  24E1               	addwf	fsr1l,w,c
 23725  012800  6ED9               	movwf	fsr2l,c
 23726  012802  0EFF               	movlw	255
 23727  012804  20E2               	addwfc	fsr1h,w,c
 23728  012806  6EDA               	movwf	fsr2h,c
 23729  012808  50DF               	movf	indf2,w,c
 23730  01280A  020C               	mulwf	(btemp+11)^0,c
 23731                           
 23732                           ;stkvar	_temp @ sp[(-13)+8]
 23733  01280C  0EFB               	movlw	-5
 23734  01280E  006F FFCF FFE3     	movff	prodl,plusw1
 23735  012814  0EFC               	movlw	-4
 23736  012816  006F FFD3 FFE3     	movff	prodh,plusw1
 23737                           
 23738                           ;stkvar	_temp @ sp[(-13)+8]
 23739  01281C  0EFB               	movlw	-5
 23740  01281E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23741  012824  0060  F030  F005   	movff	btemp+11,btemp+4
 23742  01282A  6A06               	clrf	(btemp+5)^0,c
 23743  01282C  6A07               	clrf	(btemp+6)^0,c
 23744  01282E  6A08               	clrf	(btemp+7)^0,c
 23745                           
 23746                           ;stkvar	_grs @ sp[(-13)+4]
 23747  012830  0EF7               	movlw	-9
 23748  012832  0060  F017  FFE3   	movff	btemp+4,plusw1
 23749  012838  0EF8               	movlw	-8
 23750  01283A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23751  012840  0EF9               	movlw	-7
 23752  012842  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23753  012848  0EFA               	movlw	-6
 23754  01284A  0060  F023  FFE3   	movff	btemp+7,plusw1
 23755                           
 23756                           ;stkvar	_temp @ sp[(-13)+8]
 23757  012850  0EFC               	movlw	252
 23758  012852  24E1               	addwf	fsr1l,w,c
 23759  012854  6ED9               	movwf	fsr2l,c
 23760  012856  0EFF               	movlw	255
 23761  012858  20E2               	addwfc	fsr1h,w,c
 23762  01285A  6EDA               	movwf	fsr2h,c
 23763  01285C  50DF               	movf	indf2,w,c
 23764  01285E  6E0C               	movwf	(btemp+11)^0,c
 23765  012860  0060  F030  F005   	movff	btemp+11,btemp+4
 23766  012866  6A06               	clrf	(btemp+5)^0,c
 23767  012868  6A07               	clrf	(btemp+6)^0,c
 23768  01286A  6A08               	clrf	(btemp+7)^0,c
 23769                           
 23770                           ;stkvar	_prod @ sp[(-13)+0]
 23771  01286C  0EF3               	movlw	-13
 23772  01286E  0060  F017  FFE3   	movff	btemp+4,plusw1
 23773  012874  0EF4               	movlw	-12
 23774  012876  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23775  01287C  0EF5               	movlw	-11
 23776  01287E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23777  012884  0EF6               	movlw	-10
 23778  012886  0060  F023  FFE3   	movff	btemp+7,plusw1
 23779                           
 23780                           ;stkvar	_b @ sp[(-13)+-4]
 23781  01288C  0EF0               	movlw	240
 23782  01288E  24E1               	addwf	fsr1l,w,c
 23783  012890  6ED9               	movwf	fsr2l,c
 23784  012892  0EFF               	movlw	255
 23785  012894  20E2               	addwfc	fsr1h,w,c
 23786  012896  6EDA               	movwf	fsr2h,c
 23787  012898  50DF               	movf	indf2,w,c
 23788  01289A  6E0C               	movwf	(btemp+11)^0,c
 23789                           
 23790                           ;stkvar	_a @ sp[(-13)+-8]
 23791  01289C  0EEC               	movlw	236
 23792  01289E  24E1               	addwf	fsr1l,w,c
 23793  0128A0  6ED9               	movwf	fsr2l,c
 23794  0128A2  0EFF               	movlw	255
 23795  0128A4  20E2               	addwfc	fsr1h,w,c
 23796  0128A6  6EDA               	movwf	fsr2h,c
 23797  0128A8  50DF               	movf	indf2,w,c
 23798  0128AA  020C               	mulwf	(btemp+11)^0,c
 23799                           
 23800                           ;stkvar	_temp @ sp[(-13)+8]
 23801  0128AC  0EFB               	movlw	-5
 23802  0128AE  006F FFCF FFE3     	movff	prodl,plusw1
 23803  0128B4  0EFC               	movlw	-4
 23804  0128B6  006F FFD3 FFE3     	movff	prodh,plusw1
 23805                           
 23806                           ;stkvar	_grs @ sp[(-13)+4]
 23807  0128BC  50E1               	movf	fsr1l,w,c
 23808  0128BE  0FF7               	addlw	-9
 23809  0128C0  6ED9               	movwf	fsr2l,c
 23810  0128C2  50E2               	movf	fsr1h,w,c
 23811  0128C4  6EDA               	movwf	fsr2h,c
 23812  0128C6  0EFF               	movlw	255
 23813  0128C8  22DA               	addwfc	fsr2h,f,c
 23814                           
 23815                           ;stkvar	_temp @ sp[(-13)+8]
 23816  0128CA  0EFB               	movlw	-5
 23817  0128CC  50E3               	movf	plusw1,w,c
 23818  0128CE  26DE               	addwf	postinc2,f,c
 23819  0128D0  0E00               	movlw	0
 23820  0128D2  22DE               	addwfc	postinc2,f,c
 23821  0128D4  22DE               	addwfc	postinc2,f,c
 23822  0128D6  22DE               	addwfc	postinc2,f,c
 23823                           
 23824                           ;stkvar	_prod @ sp[(-13)+0]
 23825  0128D8  50E1               	movf	fsr1l,w,c
 23826  0128DA  0FF3               	addlw	-13
 23827  0128DC  6ED9               	movwf	fsr2l,c
 23828  0128DE  50E2               	movf	fsr1h,w,c
 23829  0128E0  6EDA               	movwf	fsr2h,c
 23830  0128E2  0EFF               	movlw	255
 23831  0128E4  22DA               	addwfc	fsr2h,f,c
 23832                           
 23833                           ;stkvar	_temp @ sp[(-13)+8]
 23834  0128E6  0EFC               	movlw	252
 23835  0128E8  24E1               	addwf	fsr1l,w,c
 23836  0128EA  6EE9               	movwf	fsr0l,c
 23837  0128EC  0EFF               	movlw	255
 23838  0128EE  20E2               	addwfc	fsr1h,w,c
 23839  0128F0  6EEA               	movwf	fsr0h,c
 23840  0128F2  50EF               	movf	indf0,w,c
 23841  0128F4  26DE               	addwf	postinc2,f,c
 23842  0128F6  0E00               	movlw	0
 23843  0128F8  22DE               	addwfc	postinc2,f,c
 23844  0128FA  22DE               	addwfc	postinc2,f,c
 23845  0128FC  22DE               	addwfc	postinc2,f,c
 23846                           
 23847                           ;stkvar	_b @ sp[(-13)+-4]
 23848  0128FE  0EF1               	movlw	241
 23849  012900  24E1               	addwf	fsr1l,w,c
 23850  012902  6ED9               	movwf	fsr2l,c
 23851  012904  0EFF               	movlw	255
 23852  012906  20E2               	addwfc	fsr1h,w,c
 23853  012908  6EDA               	movwf	fsr2h,c
 23854  01290A  50DF               	movf	indf2,w,c
 23855  01290C  6E0C               	movwf	(btemp+11)^0,c
 23856                           
 23857                           ;stkvar	_a @ sp[(-13)+-8]
 23858  01290E  0EEB               	movlw	-21
 23859  012910  50E3               	movf	plusw1,w,c
 23860  012912  020C               	mulwf	(btemp+11)^0,c
 23861                           
 23862                           ;stkvar	_temp @ sp[(-13)+8]
 23863  012914  0EFB               	movlw	-5
 23864  012916  006F FFCF FFE3     	movff	prodl,plusw1
 23865  01291C  0EFC               	movlw	-4
 23866  01291E  006F FFD3 FFE3     	movff	prodh,plusw1
 23867                           
 23868                           ;stkvar	_grs @ sp[(-13)+4]
 23869  012924  50E1               	movf	fsr1l,w,c
 23870  012926  0FF7               	addlw	-9
 23871  012928  6ED9               	movwf	fsr2l,c
 23872  01292A  50E2               	movf	fsr1h,w,c
 23873  01292C  6EDA               	movwf	fsr2h,c
 23874  01292E  0EFF               	movlw	255
 23875  012930  22DA               	addwfc	fsr2h,f,c
 23876                           
 23877                           ;stkvar	_temp @ sp[(-13)+8]
 23878  012932  0EFB               	movlw	-5
 23879  012934  50E3               	movf	plusw1,w,c
 23880  012936  26DE               	addwf	postinc2,f,c
 23881  012938  0E00               	movlw	0
 23882  01293A  22DE               	addwfc	postinc2,f,c
 23883  01293C  22DE               	addwfc	postinc2,f,c
 23884  01293E  22DE               	addwfc	postinc2,f,c
 23885                           
 23886                           ;stkvar	_prod @ sp[(-13)+0]
 23887  012940  50E1               	movf	fsr1l,w,c
 23888  012942  0FF3               	addlw	-13
 23889  012944  6ED9               	movwf	fsr2l,c
 23890  012946  50E2               	movf	fsr1h,w,c
 23891  012948  6EDA               	movwf	fsr2h,c
 23892  01294A  0EFF               	movlw	255
 23893  01294C  22DA               	addwfc	fsr2h,f,c
 23894                           
 23895                           ;stkvar	_temp @ sp[(-13)+8]
 23896  01294E  0EFC               	movlw	252
 23897  012950  24E1               	addwf	fsr1l,w,c
 23898  012952  6EE9               	movwf	fsr0l,c
 23899  012954  0EFF               	movlw	255
 23900  012956  20E2               	addwfc	fsr1h,w,c
 23901  012958  6EEA               	movwf	fsr0h,c
 23902  01295A  50EF               	movf	indf0,w,c
 23903  01295C  26DE               	addwf	postinc2,f,c
 23904  01295E  0E00               	movlw	0
 23905  012960  22DE               	addwfc	postinc2,f,c
 23906  012962  22DE               	addwfc	postinc2,f,c
 23907  012964  22DE               	addwfc	postinc2,f,c
 23908                           
 23909                           ;stkvar	_grs @ sp[(-13)+4]
 23910  012966  50E1               	movf	fsr1l,w,c
 23911  012968  0FF7               	addlw	-9
 23912  01296A  6ED9               	movwf	fsr2l,c
 23913  01296C  50E2               	movf	fsr1h,w,c
 23914  01296E  6EDA               	movwf	fsr2h,c
 23915  012970  0EFF               	movlw	255
 23916  012972  22DA               	addwfc	fsr2h,f,c
 23917  012974  0E08               	movlw	8
 23918  012976                     u6095:
 23919  012976  90D8               	bcf	status,0,c
 23920  012978  36DE               	rlcf	postinc2,f,c
 23921  01297A  36DE               	rlcf	postinc2,f,c
 23922  01297C  36DE               	rlcf	postinc2,f,c
 23923  01297E  36DD               	rlcf	postdec2,f,c
 23924  012980  52DD               	movf	postdec2,f,c
 23925  012982  52DD               	movf	postdec2,f,c
 23926  012984  2EE8               	decfsz	wreg,f,c
 23927  012986  D7F7               	goto	u6095
 23928                           
 23929                           ;stkvar	_b @ sp[(-13)+-4]
 23930  012988  0EF0               	movlw	240
 23931  01298A  24E1               	addwf	fsr1l,w,c
 23932  01298C  6ED9               	movwf	fsr2l,c
 23933  01298E  0EFF               	movlw	255
 23934  012990  20E2               	addwfc	fsr1h,w,c
 23935  012992  6EDA               	movwf	fsr2h,c
 23936  012994  50DF               	movf	indf2,w,c
 23937  012996  6E0C               	movwf	(btemp+11)^0,c
 23938                           
 23939                           ;stkvar	_a @ sp[(-13)+-8]
 23940  012998  0EEB               	movlw	-21
 23941  01299A  50E3               	movf	plusw1,w,c
 23942  01299C  020C               	mulwf	(btemp+11)^0,c
 23943                           
 23944                           ;stkvar	_temp @ sp[(-13)+8]
 23945  01299E  0EFB               	movlw	-5
 23946  0129A0  006F FFCF FFE3     	movff	prodl,plusw1
 23947  0129A6  0EFC               	movlw	-4
 23948  0129A8  006F FFD3 FFE3     	movff	prodh,plusw1
 23949                           
 23950                           ;stkvar	_temp @ sp[(-13)+8]
 23951  0129AE  0EFB               	movlw	-5
 23952  0129B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23953  0129B6  0EFC               	movlw	-4
 23954  0129B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23955                           
 23956                           ;stkvar	_grs @ sp[(-13)+4]
 23957  0129BE  50E1               	movf	fsr1l,w,c
 23958  0129C0  0FF7               	addlw	-9
 23959  0129C2  6ED9               	movwf	fsr2l,c
 23960  0129C4  50E2               	movf	fsr1h,w,c
 23961  0129C6  6EDA               	movwf	fsr2h,c
 23962  0129C8  0EFF               	movlw	255
 23963  0129CA  22DA               	addwfc	fsr2h,f,c
 23964  0129CC  500B               	movf	(btemp+10)^0,w,c
 23965  0129CE  26DE               	addwf	postinc2,f,c
 23966  0129D0  500C               	movf	(btemp+11)^0,w,c
 23967  0129D2  22DE               	addwfc	postinc2,f,c
 23968  0129D4  0E00               	movlw	0
 23969  0129D6  22DE               	addwfc	postinc2,f,c
 23970  0129D8  22DE               	addwfc	postinc2,f,c
 23971                           
 23972                           ;stkvar	_b @ sp[(-13)+-4]
 23973  0129DA  0EEF               	movlw	-17
 23974  0129DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23975                           
 23976                           ;stkvar	_a @ sp[(-13)+-8]
 23977  0129E2  0EEC               	movlw	236
 23978  0129E4  24E1               	addwf	fsr1l,w,c
 23979  0129E6  6ED9               	movwf	fsr2l,c
 23980  0129E8  0EFF               	movlw	255
 23981  0129EA  20E2               	addwfc	fsr1h,w,c
 23982  0129EC  6EDA               	movwf	fsr2h,c
 23983  0129EE  50DF               	movf	indf2,w,c
 23984  0129F0  020C               	mulwf	(btemp+11)^0,c
 23985                           
 23986                           ;stkvar	_temp @ sp[(-13)+8]
 23987  0129F2  0EFB               	movlw	-5
 23988  0129F4  006F FFCF FFE3     	movff	prodl,plusw1
 23989  0129FA  0EFC               	movlw	-4
 23990  0129FC  006F FFD3 FFE3     	movff	prodh,plusw1
 23991                           
 23992                           ;stkvar	_temp @ sp[(-13)+8]
 23993  012A02  0EFB               	movlw	-5
 23994  012A04  006F FF8C  F00B    	movff	plusw1,btemp+10
 23995  012A0A  0EFC               	movlw	-4
 23996  012A0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23997                           
 23998                           ;stkvar	_grs @ sp[(-13)+4]
 23999  012A12  50E1               	movf	fsr1l,w,c
 24000  012A14  0FF7               	addlw	-9
 24001  012A16  6ED9               	movwf	fsr2l,c
 24002  012A18  50E2               	movf	fsr1h,w,c
 24003  012A1A  6EDA               	movwf	fsr2h,c
 24004  012A1C  0EFF               	movlw	255
 24005  012A1E  22DA               	addwfc	fsr2h,f,c
 24006  012A20  500B               	movf	(btemp+10)^0,w,c
 24007  012A22  26DE               	addwf	postinc2,f,c
 24008  012A24  500C               	movf	(btemp+11)^0,w,c
 24009  012A26  22DE               	addwfc	postinc2,f,c
 24010  012A28  0E00               	movlw	0
 24011  012A2A  22DE               	addwfc	postinc2,f,c
 24012  012A2C  22DE               	addwfc	postinc2,f,c
 24013                           
 24014                           ;stkvar	_grs @ sp[(-13)+4]
 24015  012A2E  50E1               	movf	fsr1l,w,c
 24016  012A30  0FF7               	addlw	-9
 24017  012A32  6ED9               	movwf	fsr2l,c
 24018  012A34  50E2               	movf	fsr1h,w,c
 24019  012A36  6EDA               	movwf	fsr2h,c
 24020  012A38  0EFF               	movlw	255
 24021  012A3A  22DA               	addwfc	fsr2h,f,c
 24022  012A3C  0E08               	movlw	8
 24023  012A3E                     u6105:
 24024  012A3E  90D8               	bcf	status,0,c
 24025  012A40  36DE               	rlcf	postinc2,f,c
 24026  012A42  36DE               	rlcf	postinc2,f,c
 24027  012A44  36DE               	rlcf	postinc2,f,c
 24028  012A46  36DD               	rlcf	postdec2,f,c
 24029  012A48  52DD               	movf	postdec2,f,c
 24030  012A4A  52DD               	movf	postdec2,f,c
 24031  012A4C  2EE8               	decfsz	wreg,f,c
 24032  012A4E  D7F7               	goto	u6105
 24033                           
 24034                           ;stkvar	_b @ sp[(-13)+-4]
 24035  012A50  0EEF               	movlw	-17
 24036  012A52  006F FF8C  F00C    	movff	plusw1,btemp+11
 24037                           
 24038                           ;stkvar	_a @ sp[(-13)+-8]
 24039  012A58  0EEB               	movlw	-21
 24040  012A5A  50E3               	movf	plusw1,w,c
 24041  012A5C  020C               	mulwf	(btemp+11)^0,c
 24042                           
 24043                           ;stkvar	_temp @ sp[(-13)+8]
 24044  012A5E  0EFB               	movlw	-5
 24045  012A60  006F FFCF FFE3     	movff	prodl,plusw1
 24046  012A66  0EFC               	movlw	-4
 24047  012A68  006F FFD3 FFE3     	movff	prodh,plusw1
 24048                           
 24049                           ;stkvar	_temp @ sp[(-13)+8]
 24050  012A6E  0EFB               	movlw	-5
 24051  012A70  006F FF8C  F00B    	movff	plusw1,btemp+10
 24052  012A76  0EFC               	movlw	-4
 24053  012A78  006F FF8C  F00C    	movff	plusw1,btemp+11
 24054                           
 24055                           ;stkvar	_grs @ sp[(-13)+4]
 24056  012A7E  50E1               	movf	fsr1l,w,c
 24057  012A80  0FF7               	addlw	-9
 24058  012A82  6ED9               	movwf	fsr2l,c
 24059  012A84  50E2               	movf	fsr1h,w,c
 24060  012A86  6EDA               	movwf	fsr2h,c
 24061  012A88  0EFF               	movlw	255
 24062  012A8A  22DA               	addwfc	fsr2h,f,c
 24063  012A8C  500B               	movf	(btemp+10)^0,w,c
 24064  012A8E  26DE               	addwf	postinc2,f,c
 24065  012A90  500C               	movf	(btemp+11)^0,w,c
 24066  012A92  22DE               	addwfc	postinc2,f,c
 24067  012A94  0E00               	movlw	0
 24068  012A96  22DE               	addwfc	postinc2,f,c
 24069  012A98  22DE               	addwfc	postinc2,f,c
 24070                           
 24071                           ;stkvar	_b @ sp[(-13)+-4]
 24072  012A9A  0EF0               	movlw	240
 24073  012A9C  24E1               	addwf	fsr1l,w,c
 24074  012A9E  6ED9               	movwf	fsr2l,c
 24075  012AA0  0EFF               	movlw	255
 24076  012AA2  20E2               	addwfc	fsr1h,w,c
 24077  012AA4  6EDA               	movwf	fsr2h,c
 24078  012AA6  50DF               	movf	indf2,w,c
 24079  012AA8  6E0C               	movwf	(btemp+11)^0,c
 24080                           
 24081                           ;stkvar	_a @ sp[(-13)+-8]
 24082  012AAA  0EED               	movlw	237
 24083  012AAC  24E1               	addwf	fsr1l,w,c
 24084  012AAE  6ED9               	movwf	fsr2l,c
 24085  012AB0  0EFF               	movlw	255
 24086  012AB2  20E2               	addwfc	fsr1h,w,c
 24087  012AB4  6EDA               	movwf	fsr2h,c
 24088  012AB6  50DF               	movf	indf2,w,c
 24089  012AB8  020C               	mulwf	(btemp+11)^0,c
 24090                           
 24091                           ;stkvar	_temp @ sp[(-13)+8]
 24092  012ABA  0EFB               	movlw	-5
 24093  012ABC  006F FFCF FFE3     	movff	prodl,plusw1
 24094  012AC2  0EFC               	movlw	-4
 24095  012AC4  006F FFD3 FFE3     	movff	prodh,plusw1
 24096                           
 24097                           ;stkvar	_temp @ sp[(-13)+8]
 24098  012ACA  0EFB               	movlw	-5
 24099  012ACC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24100  012AD2  0EFC               	movlw	-4
 24101  012AD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24102                           
 24103                           ;stkvar	_prod @ sp[(-13)+0]
 24104  012ADA  50E1               	movf	fsr1l,w,c
 24105  012ADC  0FF3               	addlw	-13
 24106  012ADE  6ED9               	movwf	fsr2l,c
 24107  012AE0  50E2               	movf	fsr1h,w,c
 24108  012AE2  6EDA               	movwf	fsr2h,c
 24109  012AE4  0EFF               	movlw	255
 24110  012AE6  22DA               	addwfc	fsr2h,f,c
 24111  012AE8  500B               	movf	(btemp+10)^0,w,c
 24112  012AEA  26DE               	addwf	postinc2,f,c
 24113  012AEC  500C               	movf	(btemp+11)^0,w,c
 24114  012AEE  22DE               	addwfc	postinc2,f,c
 24115  012AF0  0E00               	movlw	0
 24116  012AF2  22DE               	addwfc	postinc2,f,c
 24117  012AF4  22DE               	addwfc	postinc2,f,c
 24118                           
 24119                           ;stkvar	_b @ sp[(-13)+-4]
 24120  012AF6  0EF1               	movlw	241
 24121  012AF8  24E1               	addwf	fsr1l,w,c
 24122  012AFA  6ED9               	movwf	fsr2l,c
 24123  012AFC  0EFF               	movlw	255
 24124  012AFE  20E2               	addwfc	fsr1h,w,c
 24125  012B00  6EDA               	movwf	fsr2h,c
 24126  012B02  50DF               	movf	indf2,w,c
 24127  012B04  6E0C               	movwf	(btemp+11)^0,c
 24128                           
 24129                           ;stkvar	_a @ sp[(-13)+-8]
 24130  012B06  0EEC               	movlw	236
 24131  012B08  24E1               	addwf	fsr1l,w,c
 24132  012B0A  6ED9               	movwf	fsr2l,c
 24133  012B0C  0EFF               	movlw	255
 24134  012B0E  20E2               	addwfc	fsr1h,w,c
 24135  012B10  6EDA               	movwf	fsr2h,c
 24136  012B12  50DF               	movf	indf2,w,c
 24137  012B14  020C               	mulwf	(btemp+11)^0,c
 24138                           
 24139                           ;stkvar	_temp @ sp[(-13)+8]
 24140  012B16  0EFB               	movlw	-5
 24141  012B18  006F FFCF FFE3     	movff	prodl,plusw1
 24142  012B1E  0EFC               	movlw	-4
 24143  012B20  006F FFD3 FFE3     	movff	prodh,plusw1
 24144                           
 24145                           ;stkvar	_temp @ sp[(-13)+8]
 24146  012B26  0EFB               	movlw	-5
 24147  012B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 24148  012B2E  0EFC               	movlw	-4
 24149  012B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 24150                           
 24151                           ;stkvar	_prod @ sp[(-13)+0]
 24152  012B36  50E1               	movf	fsr1l,w,c
 24153  012B38  0FF3               	addlw	-13
 24154  012B3A  6ED9               	movwf	fsr2l,c
 24155  012B3C  50E2               	movf	fsr1h,w,c
 24156  012B3E  6EDA               	movwf	fsr2h,c
 24157  012B40  0EFF               	movlw	255
 24158  012B42  22DA               	addwfc	fsr2h,f,c
 24159  012B44  500B               	movf	(btemp+10)^0,w,c
 24160  012B46  26DE               	addwf	postinc2,f,c
 24161  012B48  500C               	movf	(btemp+11)^0,w,c
 24162  012B4A  22DE               	addwfc	postinc2,f,c
 24163  012B4C  0E00               	movlw	0
 24164  012B4E  22DE               	addwfc	postinc2,f,c
 24165  012B50  22DE               	addwfc	postinc2,f,c
 24166                           
 24167                           ;stkvar	_b @ sp[(-13)+-4]
 24168  012B52  0EF1               	movlw	241
 24169  012B54  24E1               	addwf	fsr1l,w,c
 24170  012B56  6ED9               	movwf	fsr2l,c
 24171  012B58  0EFF               	movlw	255
 24172  012B5A  20E2               	addwfc	fsr1h,w,c
 24173  012B5C  6EDA               	movwf	fsr2h,c
 24174  012B5E  50DF               	movf	indf2,w,c
 24175  012B60  6E0C               	movwf	(btemp+11)^0,c
 24176                           
 24177                           ;stkvar	_a @ sp[(-13)+-8]
 24178  012B62  0EED               	movlw	237
 24179  012B64  24E1               	addwf	fsr1l,w,c
 24180  012B66  6ED9               	movwf	fsr2l,c
 24181  012B68  0EFF               	movlw	255
 24182  012B6A  20E2               	addwfc	fsr1h,w,c
 24183  012B6C  6EDA               	movwf	fsr2h,c
 24184  012B6E  50DF               	movf	indf2,w,c
 24185  012B70  020C               	mulwf	(btemp+11)^0,c
 24186                           
 24187                           ;stkvar	_temp @ sp[(-13)+8]
 24188  012B72  0EFB               	movlw	-5
 24189  012B74  006F FFCF FFE3     	movff	prodl,plusw1
 24190  012B7A  0EFC               	movlw	-4
 24191  012B7C  006F FFD3 FFE3     	movff	prodh,plusw1
 24192                           
 24193                           ;stkvar	_temp @ sp[(-13)+8]
 24194  012B82  0EFB               	movlw	-5
 24195  012B84  006F FF8C  F00B    	movff	plusw1,btemp+10
 24196  012B8A  0EFC               	movlw	-4
 24197  012B8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24198  012B92  500B               	movf	(btemp+10)^0,w,c
 24199  012B94  6E05               	movwf	(btemp+4)^0,c
 24200  012B96  500C               	movf	(btemp+11)^0,w,c
 24201  012B98  6E06               	movwf	(btemp+5)^0,c
 24202  012B9A  6A07               	clrf	(btemp+6)^0,c
 24203  012B9C  6A08               	clrf	(btemp+7)^0,c
 24204  012B9E  0060  F01C  F008   	movff	btemp+6,btemp+7
 24205  012BA4  0060  F018  F007   	movff	btemp+5,btemp+6
 24206  012BAA  0060  F014  F006   	movff	btemp+4,btemp+5
 24207  012BB0  6A05               	clrf	(btemp+4)^0,c
 24208                           
 24209                           ;stkvar	_prod @ sp[(-13)+0]
 24210  012BB2  50E1               	movf	fsr1l,w,c
 24211  012BB4  0FF3               	addlw	-13
 24212  012BB6  6ED9               	movwf	fsr2l,c
 24213  012BB8  50E2               	movf	fsr1h,w,c
 24214  012BBA  6EDA               	movwf	fsr2h,c
 24215  012BBC  0EFF               	movlw	255
 24216  012BBE  22DA               	addwfc	fsr2h,f,c
 24217  012BC0  5005               	movf	(btemp+4)^0,w,c
 24218  012BC2  26DE               	addwf	postinc2,f,c
 24219  012BC4  5006               	movf	(btemp+5)^0,w,c
 24220  012BC6  22DE               	addwfc	postinc2,f,c
 24221  012BC8  5007               	movf	(btemp+6)^0,w,c
 24222  012BCA  22DE               	addwfc	postinc2,f,c
 24223  012BCC  5008               	movf	(btemp+7)^0,w,c
 24224  012BCE  22DE               	addwfc	postinc2,f,c
 24225                           
 24226                           ;stkvar	_prod @ sp[(-13)+0]
 24227  012BD0  50E1               	movf	fsr1l,w,c
 24228  012BD2  0FF3               	addlw	-13
 24229  012BD4  6ED9               	movwf	fsr2l,c
 24230  012BD6  50E2               	movf	fsr1h,w,c
 24231  012BD8  6EDA               	movwf	fsr2h,c
 24232  012BDA  0EFF               	movlw	255
 24233  012BDC  22DA               	addwfc	fsr2h,f,c
 24234                           
 24235                           ;stkvar	_grs @ sp[(-13)+4]
 24236  012BDE  0EFA               	movlw	250
 24237  012BE0  24E1               	addwf	fsr1l,w,c
 24238  012BE2  6EE9               	movwf	fsr0l,c
 24239  012BE4  0EFF               	movlw	255
 24240  012BE6  20E2               	addwfc	fsr1h,w,c
 24241  012BE8  6EEA               	movwf	fsr0h,c
 24242  012BEA  50EF               	movf	indf0,w,c
 24243  012BEC  26DE               	addwf	postinc2,f,c
 24244  012BEE  0E00               	movlw	0
 24245  012BF0  22DE               	addwfc	postinc2,f,c
 24246  012BF2  22DE               	addwfc	postinc2,f,c
 24247  012BF4  22DE               	addwfc	postinc2,f,c
 24248                           
 24249                           ;stkvar	_grs @ sp[(-13)+4]
 24250  012BF6  50E1               	movf	fsr1l,w,c
 24251  012BF8  0FF7               	addlw	-9
 24252  012BFA  6ED9               	movwf	fsr2l,c
 24253  012BFC  50E2               	movf	fsr1h,w,c
 24254  012BFE  6EDA               	movwf	fsr2h,c
 24255  012C00  0EFF               	movlw	255
 24256  012C02  22DA               	addwfc	fsr2h,f,c
 24257  012C04  0E08               	movlw	8
 24258  012C06                     u6115:
 24259  012C06  90D8               	bcf	status,0,c
 24260  012C08  36DE               	rlcf	postinc2,f,c
 24261  012C0A  36DE               	rlcf	postinc2,f,c
 24262  012C0C  36DE               	rlcf	postinc2,f,c
 24263  012C0E  36DD               	rlcf	postdec2,f,c
 24264  012C10  52DD               	movf	postdec2,f,c
 24265  012C12  52DD               	movf	postdec2,f,c
 24266  012C14  2EE8               	decfsz	wreg,f,c
 24267  012C16  D7F7               	goto	u6115
 24268  012C18  0E82               	movlw	130
 24269  012C1A  6E0B               	movwf	(btemp+10)^0,c
 24270  012C1C  0EFF               	movlw	255
 24271  012C1E  6E0C               	movwf	(btemp+11)^0,c
 24272                           
 24273                           ;stkvar	_bexp @ sp[(-13)+10]
 24274  012C20  0EFD               	movlw	-3
 24275  012C22  50E3               	movf	plusw1,w,c
 24276  012C24  6E09               	movwf	(btemp+8)^0,c
 24277  012C26  6A0A               	clrf	(btemp+9)^0,c
 24278                           
 24279                           ;stkvar	_aexp @ sp[(-13)+11]
 24280  012C28  0EFE               	movlw	-2
 24281  012C2A  50E3               	movf	plusw1,w,c
 24282  012C2C  2609               	addwf	(btemp+8)^0,f,c
 24283  012C2E  0E00               	movlw	0
 24284  012C30  220A               	addwfc	(btemp+9)^0,f,c
 24285  012C32  500B               	movf	(btemp+10)^0,w,c
 24286  012C34  2609               	addwf	(btemp+8)^0,f,c
 24287  012C36  500C               	movf	(btemp+11)^0,w,c
 24288  012C38  220A               	addwfc	(btemp+9)^0,f,c
 24289                           
 24290                           ;stkvar	_temp @ sp[(-13)+8]
 24291  012C3A  0EFB               	movlw	-5
 24292  012C3C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24293  012C42  0EFC               	movlw	-4
 24294  012C44  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24295  012C4A  D021               	goto	l7630
 24296  012C4C                     l7620:
 24297                           
 24298                           ;stkvar	_prod @ sp[(-13)+0]
 24299  012C4C  90D8               	bcf	status,0,c
 24300  012C4E  0EF3               	movlw	-13
 24301  012C50  36E3               	rlcf	plusw1,f,c
 24302  012C52  0EF4               	movlw	-12
 24303  012C54  36E3               	rlcf	plusw1,f,c
 24304  012C56  0EF5               	movlw	-11
 24305  012C58  36E3               	rlcf	plusw1,f,c
 24306  012C5A  0EF6               	movlw	-10
 24307  012C5C  36E3               	rlcf	plusw1,f,c
 24308                           
 24309                           ;stkvar	_grs @ sp[(-13)+4]
 24310  012C5E  0EFA               	movlw	-6
 24311  012C60  AEE3               	btfss	plusw1,7,c
 24312  012C62  D002               	goto	l7626
 24313                           
 24314                           ;stkvar	_prod @ sp[(-13)+0]
 24315  012C64  0EF3               	movlw	-13
 24316  012C66  80E3               	bsf	plusw1,0,c
 24317  012C68                     l7626:
 24318                           
 24319                           ;stkvar	_grs @ sp[(-13)+4]
 24320  012C68  90D8               	bcf	status,0,c
 24321  012C6A  0EF7               	movlw	-9
 24322  012C6C  36E3               	rlcf	plusw1,f,c
 24323  012C6E  0EF8               	movlw	-8
 24324  012C70  36E3               	rlcf	plusw1,f,c
 24325  012C72  0EF9               	movlw	-7
 24326  012C74  36E3               	rlcf	plusw1,f,c
 24327  012C76  0EFA               	movlw	-6
 24328  012C78  36E3               	rlcf	plusw1,f,c
 24329                           
 24330                           ;stkvar	_temp @ sp[(-13)+8]
 24331  012C7A  50E1               	movf	fsr1l,w,c
 24332  012C7C  0FFB               	addlw	-5
 24333  012C7E  6ED9               	movwf	fsr2l,c
 24334  012C80  50E2               	movf	fsr1h,w,c
 24335  012C82  6EDA               	movwf	fsr2h,c
 24336  012C84  0EFF               	movlw	255
 24337  012C86  22DA               	addwfc	fsr2h,f,c
 24338  012C88  06DE               	decf	postinc2,f,c
 24339  012C8A  0E00               	movlw	0
 24340  012C8C  5ADD               	subwfb	postdec2,f,c
 24341  012C8E                     l7630:
 24342                           
 24343                           ;stkvar	_prod @ sp[(-13)+0]
 24344  012C8E  0EF5               	movlw	-11
 24345  012C90  AEE3               	btfss	plusw1,7,c
 24346  012C92  D7DC               	goto	l7620
 24347                           
 24348                           ;stkvar	_aexp @ sp[(-13)+11]
 24349  012C94  0EFE               	movlw	-2
 24350  012C96  6AE3               	clrf	plusw1,c
 24351                           
 24352                           ;stkvar	_grs @ sp[(-13)+4]
 24353  012C98  0EFA               	movlw	-6
 24354  012C9A  AEE3               	btfss	plusw1,7,c
 24355  012C9C  D020               	goto	l7644
 24356                           
 24357                           ;stkvar	_grs @ sp[(-13)+4]
 24358  012C9E  50E1               	movf	fsr1l,w,c
 24359  012CA0  0FF7               	addlw	-9
 24360  012CA2  6ED9               	movwf	fsr2l,c
 24361  012CA4  50E2               	movf	fsr1h,w,c
 24362  012CA6  6EDA               	movwf	fsr2h,c
 24363  012CA8  0EFF               	movlw	255
 24364  012CAA  22DA               	addwfc	fsr2h,f,c
 24365  012CAC  0EFF               	movlw	255
 24366  012CAE  14DE               	andwf	postinc2,w,c
 24367  012CB0  6E09               	movwf	(btemp+8)^0,c
 24368  012CB2  0EFF               	movlw	255
 24369  012CB4  14DE               	andwf	postinc2,w,c
 24370  012CB6  6E0A               	movwf	(btemp+9)^0,c
 24371  012CB8  0EFF               	movlw	255
 24372  012CBA  14DE               	andwf	postinc2,w,c
 24373  012CBC  6E0B               	movwf	(btemp+10)^0,c
 24374  012CBE  0E7F               	movlw	127
 24375  012CC0  14DE               	andwf	postinc2,w,c
 24376  012CC2  6E0C               	movwf	(btemp+11)^0,c
 24377  012CC4  5009               	movf	(btemp+8)^0,w,c
 24378  012CC6  100A               	iorwf	(btemp+9)^0,w,c
 24379  012CC8  100B               	iorwf	(btemp+10)^0,w,c
 24380  012CCA  100C               	iorwf	(btemp+11)^0,w,c
 24381  012CCC  B4D8               	btfsc	status,2,c
 24382  012CCE  D004               	goto	l7640
 24383  012CD0                     u6150:
 24384                           
 24385                           ;stkvar	_aexp @ sp[(-13)+11]
 24386  012CD0  0EFE               	movlw	-2
 24387  012CD2  6AE3               	clrf	plusw1,c
 24388  012CD4  2AE3               	incf	plusw1,f,c
 24389  012CD6  D003               	goto	l7644
 24390  012CD8                     l7640:
 24391                           
 24392                           ;stkvar	_prod @ sp[(-13)+0]
 24393  012CD8  0EF3               	movlw	-13
 24394  012CDA  B0E3               	btfsc	plusw1,0,c
 24395  012CDC  D7F9               	goto	u6150
 24396  012CDE                     l7644:
 24397                           
 24398                           ;stkvar	_aexp @ sp[(-13)+11]
 24399  012CDE  0EFE               	movlw	-2
 24400  012CE0  50E3               	movf	plusw1,w,c
 24401  012CE2  B4D8               	btfsc	status,2,c
 24402  012CE4  D036               	goto	l7654
 24403                           
 24404                           ;stkvar	_prod @ sp[(-13)+0]
 24405  012CE6  50E1               	movf	fsr1l,w,c
 24406  012CE8  0FF3               	addlw	-13
 24407  012CEA  6ED9               	movwf	fsr2l,c
 24408  012CEC  50E2               	movf	fsr1h,w,c
 24409  012CEE  6EDA               	movwf	fsr2h,c
 24410  012CF0  0EFF               	movlw	255
 24411  012CF2  22DA               	addwfc	fsr2h,f,c
 24412  012CF4  2ADE               	incf	postinc2,f,c
 24413  012CF6  0E00               	movlw	0
 24414  012CF8  22DE               	addwfc	postinc2,f,c
 24415  012CFA  22DE               	addwfc	postinc2,f,c
 24416  012CFC  22DE               	addwfc	postinc2,f,c
 24417                           
 24418                           ;stkvar	_prod @ sp[(-13)+0]
 24419  012CFE  0EF6               	movlw	-10
 24420  012D00  A0E3               	btfss	plusw1,0,c
 24421  012D02  D027               	goto	l7654
 24422  012D04  0E01               	movlw	1
 24423  012D06  6E0C               	movwf	(btemp+11)^0,c
 24424                           
 24425                           ;stkvar	_prod @ sp[(-13)+0]
 24426  012D08  50E1               	movf	fsr1l,w,c
 24427  012D0A  0FF3               	addlw	-13
 24428  012D0C  6ED9               	movwf	fsr2l,c
 24429  012D0E  50E2               	movf	fsr1h,w,c
 24430  012D10  6EDA               	movwf	fsr2h,c
 24431  012D12  0EFF               	movlw	255
 24432  012D14  22DA               	addwfc	fsr2h,f,c
 24433  012D16  280C               	incf	(btemp+11)^0,w,c
 24434  012D18  52DE               	movf	postinc2,f,c
 24435  012D1A  D008               	goto	u6190
 24436  012D1C                     u6195:
 24437  012D1C  52DE               	movf	postinc2,f,c
 24438  012D1E  90D8               	bcf	status,0,c
 24439  012D20  BEDC               	btfsc	preinc2,7,c
 24440  012D22  80D8               	bsf	status,0,c
 24441  012D24  32DD               	rrcf	postdec2,f,c
 24442  012D26  32DD               	rrcf	postdec2,f,c
 24443  012D28  32DD               	rrcf	postdec2,f,c
 24444  012D2A  32DE               	rrcf	postinc2,f,c
 24445  012D2C                     u6190:
 24446  012D2C  2EE8               	decfsz	wreg,f,c
 24447  012D2E  D7F6               	goto	u6195
 24448                           
 24449                           ;stkvar	_temp @ sp[(-13)+8]
 24450  012D30  0EFB               	movlw	-5
 24451  012D32  50E3               	movf	plusw1,w,c
 24452  012D34  0F01               	addlw	1
 24453  012D36  6E01               	movwf	btemp^0,c
 24454  012D38  0EFB               	movlw	-5
 24455  012D3A  0060  F007  FFE3   	movff	btemp,plusw1
 24456  012D40  6A01               	clrf	btemp^0,c
 24457  012D42  0EFC               	movlw	-4
 24458  012D44  50E3               	movf	plusw1,w,c
 24459  012D46  2001               	addwfc	btemp^0,w,c
 24460  012D48  6E01               	movwf	btemp^0,c
 24461  012D4A  0EFC               	movlw	-4
 24462  012D4C  0060  F007  FFE3   	movff	btemp,plusw1
 24463  012D52                     l7654:
 24464                           
 24465                           ;stkvar	_temp @ sp[(-13)+8]
 24466  012D52  0EFC               	movlw	-4
 24467  012D54  BEE3               	btfsc	plusw1,7,c
 24468  012D56  D020               	goto	l7658
 24469  012D58  0EFC               	movlw	-4
 24470  012D5A  50E3               	movf	plusw1,w,c
 24471  012D5C  E104               	bnz	u6200
 24472  012D5E  0EFB               	movlw	-5
 24473  012D60  28E3               	incf	plusw1,w,c
 24474  012D62  A0D8               	btfss	status,0,c
 24475  012D64  D019               	goto	l7658
 24476  012D66                     u6200:
 24477  012D66  0E00               	movlw	0
 24478  012D68  6E09               	movwf	(btemp+8)^0,c
 24479  012D6A  0E00               	movlw	0
 24480  012D6C  6E0A               	movwf	(btemp+9)^0,c
 24481  012D6E  0E80               	movlw	128
 24482  012D70  6E0B               	movwf	(btemp+10)^0,c
 24483  012D72  0E7F               	movlw	127
 24484  012D74  6E0C               	movwf	(btemp+11)^0,c
 24485                           
 24486                           ;stkvar	_prod @ sp[(-13)+0]
 24487  012D76  0EF3               	movlw	-13
 24488  012D78  0060  F027  FFE3   	movff	btemp+8,plusw1
 24489  012D7E  0EF4               	movlw	-12
 24490  012D80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24491  012D86  0EF5               	movlw	-11
 24492  012D88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24493  012D8E  0EF6               	movlw	-10
 24494  012D90  0060  F033  FFE3   	movff	btemp+11,plusw1
 24495  012D96  D044               	goto	l7674
 24496  012D98                     l7658:
 24497                           
 24498                           ;stkvar	_temp @ sp[(-13)+8]
 24499  012D98  0EFC               	movlw	-4
 24500  012D9A  BEE3               	btfsc	plusw1,7,c
 24501  012D9C  D007               	goto	u6210
 24502  012D9E  0EFC               	movlw	-4
 24503  012DA0  50E3               	movf	plusw1,w,c
 24504  012DA2  E10F               	bnz	l7664
 24505  012DA4  0EFB               	movlw	-5
 24506  012DA6  04E3               	decf	plusw1,w,c
 24507  012DA8  B0D8               	btfsc	status,0,c
 24508  012DAA  D00B               	goto	l7664
 24509  012DAC                     u6210:
 24510                           
 24511                           ;stkvar	_prod @ sp[(-13)+0]
 24512  012DAC  0EF3               	movlw	-13
 24513  012DAE  6AE3               	clrf	plusw1,c
 24514  012DB0  0EF4               	movlw	-12
 24515  012DB2  6AE3               	clrf	plusw1,c
 24516  012DB4  0EF5               	movlw	-11
 24517  012DB6  6AE3               	clrf	plusw1,c
 24518  012DB8  0EF6               	movlw	-10
 24519  012DBA  6AE3               	clrf	plusw1,c
 24520                           
 24521                           ;stkvar	_sign @ sp[(-13)+12]
 24522  012DBC  0EFF               	movlw	-1
 24523  012DBE  6AE3               	clrf	plusw1,c
 24524  012DC0  D02F               	goto	l7674
 24525  012DC2                     l7664:
 24526                           
 24527                           ;stkvar	_temp @ sp[(-13)+8]
 24528                           ;stkvar	_bexp @ sp[(-13)+10]
 24529  012DC2  0EFB               	movlw	-5
 24530  012DC4  006F FF8C  F001    	movff	plusw1,btemp
 24531  012DCA  0EFD               	movlw	-3
 24532  012DCC  0060  F007  FFE3   	movff	btemp,plusw1
 24533                           
 24534                           ;stkvar	_prod @ sp[(-13)+0]
 24535  012DD2  50E1               	movf	fsr1l,w,c
 24536  012DD4  0FF3               	addlw	-13
 24537  012DD6  6ED9               	movwf	fsr2l,c
 24538  012DD8  50E2               	movf	fsr1h,w,c
 24539  012DDA  6EDA               	movwf	fsr2h,c
 24540  012DDC  0EFF               	movlw	255
 24541  012DDE  22DA               	addwfc	fsr2h,f,c
 24542  012DE0  0EFF               	movlw	255
 24543  012DE2  16DE               	andwf	postinc2,f,c
 24544  012DE4  0EFF               	movlw	255
 24545  012DE6  16DE               	andwf	postinc2,f,c
 24546  012DE8  0E7F               	movlw	127
 24547  012DEA  16DE               	andwf	postinc2,f,c
 24548  012DEC  0E00               	movlw	0
 24549  012DEE  16DE               	andwf	postinc2,f,c
 24550                           
 24551                           ;stkvar	_bexp @ sp[(-13)+10]
 24552  012DF0  0EFD               	movlw	-3
 24553  012DF2  A0E3               	btfss	plusw1,0,c
 24554  012DF4  D008               	goto	l7672
 24555                           
 24556                           ;stkvar	_prod @ sp[(-13)+0]
 24557  012DF6  0EF5               	movlw	245
 24558  012DF8  24E1               	addwf	fsr1l,w,c
 24559  012DFA  6ED9               	movwf	fsr2l,c
 24560  012DFC  0EFF               	movlw	255
 24561  012DFE  20E2               	addwfc	fsr1h,w,c
 24562  012E00  6EDA               	movwf	fsr2h,c
 24563  012E02  0E00               	movlw	0
 24564  012E04  8EDB               	bsf	plusw2,7,c
 24565  012E06                     l7672:
 24566                           
 24567                           ;stkvar	_prod @ sp[(-13)+0]
 24568  012E06  0EF6               	movlw	246
 24569  012E08  24E1               	addwf	fsr1l,w,c
 24570  012E0A  6ED9               	movwf	fsr2l,c
 24571  012E0C  0EFF               	movlw	255
 24572  012E0E  20E2               	addwfc	fsr1h,w,c
 24573  012E10  6EDA               	movwf	fsr2h,c
 24574                           
 24575                           ;stkvar	_bexp @ sp[(-13)+10]
 24576  012E12  0EFD               	movlw	-3
 24577  012E14  006F FF8C  F00C    	movff	plusw1,btemp+11
 24578  012E1A  90D8               	bcf	status,0,c
 24579  012E1C  300C               	rrcf	(btemp+11)^0,w,c
 24580  012E1E  6EDF               	movwf	indf2,c
 24581  012E20                     l7674:
 24582                           
 24583                           ;stkvar	_sign @ sp[(-13)+12]
 24584  012E20  0EFF               	movlw	-1
 24585  012E22  006F FF8C  F00C    	movff	plusw1,btemp+11
 24586                           
 24587                           ;stkvar	_prod @ sp[(-13)+0]
 24588  012E28  0EF6               	movlw	246
 24589  012E2A  24E1               	addwf	fsr1l,w,c
 24590  012E2C  6ED9               	movwf	fsr2l,c
 24591  012E2E  0EFF               	movlw	255
 24592  012E30  20E2               	addwfc	fsr1h,w,c
 24593  012E32  6EDA               	movwf	fsr2h,c
 24594  012E34  500C               	movf	(btemp+11)^0,w,c
 24595  012E36  12DF               	iorwf	indf2,f,c
 24596                           
 24597                           ;stkvar	_prod @ sp[(-13)+0]
 24598  012E38  0EF3               	movlw	-13
 24599  012E3A  006F FF8C  F001    	movff	plusw1,btemp
 24600  012E40  0EF4               	movlw	-12
 24601  012E42  006F FF8C  F002    	movff	plusw1,btemp+1
 24602  012E48  0EF5               	movlw	-11
 24603  012E4A  006F FF8C  F003    	movff	plusw1,btemp+2
 24604  012E50  0EF6               	movlw	-10
 24605  012E52  006F FF8C  F004    	movff	plusw1,btemp+3
 24606  012E58                     l2851:
 24607                           
 24608                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 24609  012E58  0EEB               	movlw	235
 24610  012E5A  26E1               	addwf	fsr1l,f,c
 24611  012E5C  0EFF               	movlw	255
 24612  012E5E  22E2               	addwfc	fsr1h,f,c
 24613  012E60  0012               	return		;funcret
 24614  012E62                     __end_of___flmul:
 24615                           	opt callstack 0
 24616                           
 24617 ;; *************** function _SYSTEM_Initialize *****************
 24618 ;; Defined at:
 24619 ;;		line 50 in file "mcc_generated_files/mcc.c"
 24620 ;; Parameters:    Size  Location     Type
 24621 ;;		None
 24622 ;; Auto vars:     Size  Location     Type
 24623 ;;		None
 24624 ;; Return value:  Size  Location     Type
 24625 ;;                  1  [STACK] void 
 24626 ;; Registers used:
 24627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 24628 ;; Tracked objects:
 24629 ;;		On entry : 0/0
 24630 ;;		On exit  : 3F/3C
 24631 ;;		Unchanged: 0/0
 24632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24637 ;;Total ram usage:        0 bytes
 24638 ;; Hardware stack levels used:    1
 24639 ;; Hardware stack levels required when called:   17
 24640 ;; This function calls:
 24641 ;;		_ADCC_Initialize
 24642 ;;		_CLKREF_Initialize
 24643 ;;		_DMA1_Initialize
 24644 ;;		_DMA2_Initialize
 24645 ;;		_EXT_INT_Initialize
 24646 ;;		_FVR_Initialize
 24647 ;;		_INTERRUPT_Initialize
 24648 ;;		_OSCILLATOR_Initialize
 24649 ;;		_PIN_MANAGER_Initialize
 24650 ;;		_PMD_Initialize
 24651 ;;		_PWM8_Initialize
 24652 ;;		_SPI1_Initialize
 24653 ;;		_TMR2_Initialize
 24654 ;;		_TMR3_Initialize
 24655 ;;		_TMR5_Initialize
 24656 ;;		_TMR6_Initialize
 24657 ;;		_UART1_Initialize
 24658 ;;		_UART2_Initialize
 24659 ;; This function is called by:
 24660 ;;		_main
 24661 ;; This function uses a reentrant model
 24662 ;;
 24663                           
 24664                           	psect	text97
 24665  019006                     __ptext97:
 24666                           	opt callstack 0
 24667  019006                     _SYSTEM_Initialize:
 24668                           	opt callstack 13
 24669                           
 24670                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 24671                           
 24672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24673                           ;incstack = 0
 24674  019006  ECE3  F0C5         	call	_INTERRUPT_Initialize	;wreg free
 24675                           
 24676                           ; BSR set to: 57
 24677                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 24678  01900A  EC0C  F0CE         	call	_PMD_Initialize	;wreg free
 24679                           
 24680                           ; BSR set to: 57
 24681                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 24682  01900E  ECAB  F0C3         	call	_PIN_MANAGER_Initialize	;wreg free
 24683                           
 24684                           ; BSR set to: 58
 24685                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 24686  019012  EC01  F0CE         	call	_OSCILLATOR_Initialize	;wreg free
 24687                           
 24688                           ; BSR set to: 57
 24689                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 24690  019016  EC71  F0CE         	call	_FVR_Initialize	;wreg free
 24691                           
 24692                           ; BSR set to: 62
 24693                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 24694  01901A  EC78  F0C5         	call	_ADCC_Initialize	;wreg free
 24695                           
 24696                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 24697  01901E  ECDF  F0CD         	call	_TMR2_Initialize	;wreg free
 24698                           
 24699                           ; BSR set to: 57
 24700                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 24701  019022  ECF6  F0CD         	call	_PWM8_Initialize	;wreg free
 24702                           
 24703                           ; BSR set to: 63
 24704                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 24705  019026  EC49  F0CA         	call	_EXT_INT_Initialize	;wreg free
 24706                           
 24707                           ; BSR set to: 57
 24708                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 24709  01902A  EC1E  F0CB         	call	_TMR6_Initialize	;wreg free
 24710                           
 24711                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 24712  01902E  ECD8  F0C8         	call	_TMR3_Initialize	;wreg free
 24713                           
 24714                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 24715  019032  ECB5  F0C8         	call	_TMR5_Initialize	;wreg free
 24716                           
 24717                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 24718  019036  EC92  F0C8         	call	_UART1_Initialize	;wreg free
 24719                           
 24720                           ; BSR set to: 57
 24721                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 24722  01903A  ECAA  F0C6         	call	_UART2_Initialize	;wreg free
 24723                           
 24724                           ; BSR set to: 57
 24725                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 24726  01903E  ECEB  F0CD         	call	_SPI1_Initialize	;wreg free
 24727                           
 24728                           ; BSR set to: 61
 24729                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 24730  019042  EC06  F0C7         	call	_DMA2_Initialize	;wreg free
 24731                           
 24732                           ; BSR set to: 59
 24733                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 24734  019046  EC43  F0C5         	call	_DMA1_Initialize	;wreg free
 24735                           
 24736                           ; BSR set to: 59
 24737                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 24738  01904A  EC45  F0CE         	call	_CLKREF_Initialize	;wreg free
 24739                           
 24740                           ; BSR set to: 60
 24741                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24742  01904E  0012               	return		;funcret
 24743  019050                     __end_of_SYSTEM_Initialize:
 24744                           	opt callstack 0
 24745                           
 24746 ;; *************** function _UART2_Initialize *****************
 24747 ;; Defined at:
 24748 ;;		line 78 in file "mcc_generated_files/uart2.c"
 24749 ;; Parameters:    Size  Location     Type
 24750 ;;		None
 24751 ;; Auto vars:     Size  Location     Type
 24752 ;;		None
 24753 ;; Return value:  Size  Location     Type
 24754 ;;                  1  [STACK] void 
 24755 ;; Registers used:
 24756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24757 ;; Tracked objects:
 24758 ;;		On entry : 3F/39
 24759 ;;		On exit  : 3F/39
 24760 ;;		Unchanged: 0/0
 24761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24766 ;;Total ram usage:        0 bytes
 24767 ;; Hardware stack levels used:    1
 24768 ;; Hardware stack levels required when called:   16
 24769 ;; This function calls:
 24770 ;;		_UART2_SetRxInterruptHandler
 24771 ;;		_UART2_SetTxInterruptHandler
 24772 ;; This function is called by:
 24773 ;;		_SYSTEM_Initialize
 24774 ;; This function uses a reentrant model
 24775 ;;
 24776                           
 24777                           	psect	text98
 24778  018D54                     __ptext98:
 24779                           	opt callstack 0
 24780  018D54                     _UART2_Initialize:
 24781                           	opt callstack 13
 24782                           
 24783                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 24784                           
 24785                           ; BSR set to: 60
 24786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24787                           ;incstack = 0
 24788  018D54  0139               	movlb	57	; () banked
 24789  018D56  9596               	bcf	150,2,b	;volatile
 24790                           
 24791                           ; BSR set to: 57
 24792                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 24793  018D58  0E36               	movlw	low _UART2_Receive_ISR
 24794  018D5A  6EE6               	movwf	postinc1,c
 24795  018D5C  0E9B               	movlw	high _UART2_Receive_ISR
 24796  018D5E  6EE6               	movwf	postinc1,c
 24797  018D60  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 24798  018D62  6EE6               	movwf	postinc1,c
 24799  018D64  ECAB  F0CB         	call	_UART2_SetRxInterruptHandler	;wreg free
 24800                           
 24801                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 24802  018D68  0139               	movlb	57	; () banked
 24803  018D6A  9796               	bcf	150,3,b	;volatile
 24804                           
 24805                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 24806  018D6C  0E10               	movlw	low _UART2_Transmit_ISR
 24807  018D6E  6EE6               	movwf	postinc1,c
 24808  018D70  0E96               	movlw	high _UART2_Transmit_ISR
 24809  018D72  6EE6               	movwf	postinc1,c
 24810  018D74  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 24811  018D76  6EE6               	movwf	postinc1,c
 24812  018D78  EC97  F0CB         	call	_UART2_SetTxInterruptHandler	;wreg free
 24813                           
 24814                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 24815  018D7C  013D               	movlb	61	; () banked
 24816  018D7E  6BD4               	clrf	212,b	;volatile
 24817                           
 24818                           ; BSR set to: 61
 24819                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 24820  018D80  6BD6               	clrf	214,b	;volatile
 24821                           
 24822                           ; BSR set to: 61
 24823                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 24824  018D82  6BD8               	clrf	216,b	;volatile
 24825                           
 24826                           ; BSR set to: 61
 24827                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 24828  018D84  0EB0               	movlw	176
 24829  018D86  6FDA               	movwf	218,b	;volatile
 24830                           
 24831                           ; BSR set to: 61
 24832                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 24833  018D88  0E80               	movlw	128
 24834  018D8A  6FDB               	movwf	219,b	;volatile
 24835                           
 24836                           ; BSR set to: 61
 24837                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 24838  018D8C  6BDC               	clrf	220,b	;volatile
 24839                           
 24840                           ; BSR set to: 61
 24841                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 24842  018D8E  0E82               	movlw	130
 24843  018D90  6FDD               	movwf	221,b	;volatile
 24844                           
 24845                           ; BSR set to: 61
 24846                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 24847  018D92  0E06               	movlw	6
 24848  018D94  6FDE               	movwf	222,b	;volatile
 24849                           
 24850                           ; BSR set to: 61
 24851                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 24852  018D96  6BDF               	clrf	223,b	;volatile
 24853                           
 24854                           ; BSR set to: 61
 24855                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 24856  018D98  6BE0               	clrf	224,b	;volatile
 24857                           
 24858                           ; BSR set to: 61
 24859                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 24860  018D9A  6BE1               	clrf	225,b	;volatile
 24861                           
 24862                           ; BSR set to: 61
 24863                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 24864  018D9C  6BE2               	clrf	226,b	;volatile
 24865                           
 24866                           ; BSR set to: 61
 24867                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 24868  018D9E  6A34               	clrf	_uart2TxHead^0,c	;volatile
 24869                           
 24870                           ; BSR set to: 61
 24871                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 24872  018DA0  6A33               	clrf	_uart2TxTail^0,c	;volatile
 24873                           
 24874                           ; BSR set to: 61
 24875                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 24876  018DA2  0E40               	movlw	64
 24877  018DA4  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 24878                           
 24879                           ; BSR set to: 61
 24880                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 24881  018DA6  6A31               	clrf	_uart2RxHead^0,c	;volatile
 24882                           
 24883                           ; BSR set to: 61
 24884                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 24885  018DA8  6A30               	clrf	_uart2RxTail^0,c	;volatile
 24886                           
 24887                           ; BSR set to: 61
 24888                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 24889  018DAA  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 24890                           
 24891                           ; BSR set to: 61
 24892                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 24893  018DAC  0139               	movlb	57	; () banked
 24894  018DAE  8596               	bsf	150,2,b	;volatile
 24895                           
 24896                           ; BSR set to: 57
 24897                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24898  018DB0  0012               	return		;funcret
 24899  018DB2                     __end_of_UART2_Initialize:
 24900                           	opt callstack 0
 24901                           
 24902 ;; *************** function _UART2_SetTxInterruptHandler *****************
 24903 ;; Defined at:
 24904 ;;		line 252 in file "mcc_generated_files/uart2.c"
 24905 ;; Parameters:    Size  Location     Type
 24906 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24907 ;;		 -> UART2_Transmit_ISR(1), 
 24908 ;; Auto vars:     Size  Location     Type
 24909 ;;		None
 24910 ;; Return value:  Size  Location     Type
 24911 ;;                  1  [STACK] void 
 24912 ;; Registers used:
 24913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24914 ;; Tracked objects:
 24915 ;;		On entry : 3F/39
 24916 ;;		On exit  : 0/0
 24917 ;;		Unchanged: 0/0
 24918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24923 ;;Total ram usage:        0 bytes
 24924 ;; Hardware stack levels used:    1
 24925 ;; Hardware stack levels required when called:   15
 24926 ;; This function calls:
 24927 ;;		Nothing
 24928 ;; This function is called by:
 24929 ;;		_UART2_Initialize
 24930 ;; This function uses a reentrant model
 24931 ;;
 24932                           
 24933                           	psect	text99
 24934  01972E                     __ptext99:
 24935                           	opt callstack 0
 24936  01972E                     _UART2_SetTxInterruptHandler:
 24937                           	opt callstack 13
 24938                           
 24939                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 24940                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24941                           
 24942                           ; BSR set to: 57
 24943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24944                           ;incstack = 0
 24945  01972E  50E1               	movf	fsr1l,w,c
 24946  019730  0FFD               	addlw	-3
 24947  019732  6ED9               	movwf	fsr2l,c
 24948  019734  50E2               	movf	fsr1h,w,c
 24949  019736  6EDA               	movwf	fsr2h,c
 24950  019738  0EFF               	movlw	255
 24951  01973A  22DA               	addwfc	fsr2h,f,c
 24952  01973C  006F FF78  F0BB    	movff	postinc2,_UART2_TxInterruptHandler
 24953  019742  006F FF78  F0BC    	movff	postinc2,_UART2_TxInterruptHandler+1
 24954  019748  006F FF74  F0BD    	movff	postdec2,_UART2_TxInterruptHandler+2
 24955                           
 24956                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24957  01974E  52E5               	movf	postdec1,f,c
 24958  019750  52E5               	movf	postdec1,f,c
 24959  019752  52E5               	movf	postdec1,f,c
 24960  019754  0012               	return		;funcret
 24961  019756                     __end_of_UART2_SetTxInterruptHandler:
 24962                           	opt callstack 0
 24963                           
 24964 ;; *************** function _UART2_SetRxInterruptHandler *****************
 24965 ;; Defined at:
 24966 ;;		line 248 in file "mcc_generated_files/uart2.c"
 24967 ;; Parameters:    Size  Location     Type
 24968 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24969 ;;		 -> UART2_Receive_ISR(1), 
 24970 ;; Auto vars:     Size  Location     Type
 24971 ;;		None
 24972 ;; Return value:  Size  Location     Type
 24973 ;;                  1  [STACK] void 
 24974 ;; Registers used:
 24975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24976 ;; Tracked objects:
 24977 ;;		On entry : 3F/39
 24978 ;;		On exit  : 0/0
 24979 ;;		Unchanged: 0/0
 24980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24985 ;;Total ram usage:        0 bytes
 24986 ;; Hardware stack levels used:    1
 24987 ;; Hardware stack levels required when called:   15
 24988 ;; This function calls:
 24989 ;;		Nothing
 24990 ;; This function is called by:
 24991 ;;		_UART2_Initialize
 24992 ;; This function uses a reentrant model
 24993 ;;
 24994                           
 24995                           	psect	text100
 24996  019756                     __ptext100:
 24997                           	opt callstack 0
 24998  019756                     _UART2_SetRxInterruptHandler:
 24999                           	opt callstack 13
 25000                           
 25001                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 25002                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25003                           
 25004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25005                           ;incstack = 0
 25006  019756  50E1               	movf	fsr1l,w,c
 25007  019758  0FFD               	addlw	-3
 25008  01975A  6ED9               	movwf	fsr2l,c
 25009  01975C  50E2               	movf	fsr1h,w,c
 25010  01975E  6EDA               	movwf	fsr2h,c
 25011  019760  0EFF               	movlw	255
 25012  019762  22DA               	addwfc	fsr2h,f,c
 25013  019764  006F FF78  F0BE    	movff	postinc2,_UART2_RxInterruptHandler
 25014  01976A  006F FF78  F0BF    	movff	postinc2,_UART2_RxInterruptHandler+1
 25015  019770  006F FF74  F0C0    	movff	postdec2,_UART2_RxInterruptHandler+2
 25016                           
 25017                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25018  019776  52E5               	movf	postdec1,f,c
 25019  019778  52E5               	movf	postdec1,f,c
 25020  01977A  52E5               	movf	postdec1,f,c
 25021  01977C  0012               	return		;funcret
 25022  01977E                     __end_of_UART2_SetRxInterruptHandler:
 25023                           	opt callstack 0
 25024                           
 25025 ;; *************** function _UART1_Initialize *****************
 25026 ;; Defined at:
 25027 ;;		line 75 in file "mcc_generated_files/uart1.c"
 25028 ;; Parameters:    Size  Location     Type
 25029 ;;		None
 25030 ;; Auto vars:     Size  Location     Type
 25031 ;;		None
 25032 ;; Return value:  Size  Location     Type
 25033 ;;                  1  [STACK] void 
 25034 ;; Registers used:
 25035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25036 ;; Tracked objects:
 25037 ;;		On entry : 0/39
 25038 ;;		On exit  : 3F/39
 25039 ;;		Unchanged: 0/0
 25040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25045 ;;Total ram usage:        0 bytes
 25046 ;; Hardware stack levels used:    1
 25047 ;; Hardware stack levels required when called:   16
 25048 ;; This function calls:
 25049 ;;		_UART1_SetRxInterruptHandler
 25050 ;; This function is called by:
 25051 ;;		_SYSTEM_Initialize
 25052 ;; This function uses a reentrant model
 25053 ;;
 25054                           
 25055                           	psect	text101
 25056  019124                     __ptext101:
 25057                           	opt callstack 0
 25058  019124                     _UART1_Initialize:
 25059                           	opt callstack 13
 25060                           
 25061                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 25062                           
 25063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25064                           ;incstack = 0
 25065  019124  0139               	movlb	57	; () banked
 25066  019126  9793               	bcf	147,3,b	;volatile
 25067                           
 25068                           ; BSR set to: 57
 25069                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 25070  019128  0E9E               	movlw	low _UART1_Receive_ISR
 25071  01912A  6EE6               	movwf	postinc1,c
 25072  01912C  0E9A               	movlw	high _UART1_Receive_ISR
 25073  01912E  6EE6               	movwf	postinc1,c
 25074  019130  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 25075  019132  6EE6               	movwf	postinc1,c
 25076  019134  ECBF  F0CB         	call	_UART1_SetRxInterruptHandler	;wreg free
 25077                           
 25078                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 25079  019138  013D               	movlb	61	; () banked
 25080  01913A  6BEC               	clrf	236,b	;volatile
 25081                           
 25082                           ; BSR set to: 61
 25083                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 25084  01913C  6BED               	clrf	237,b	;volatile
 25085                           
 25086                           ; BSR set to: 61
 25087                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 25088  01913E  6BEE               	clrf	238,b	;volatile
 25089                           
 25090                           ; BSR set to: 61
 25091                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 25092  019140  6BEF               	clrf	239,b	;volatile
 25093                           
 25094                           ; BSR set to: 61
 25095                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 25096  019142  6BF0               	clrf	240,b	;volatile
 25097                           
 25098                           ; BSR set to: 61
 25099                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 25100  019144  6BF1               	clrf	241,b	;volatile
 25101                           
 25102                           ; BSR set to: 61
 25103                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 25104  019146  0EB0               	movlw	176
 25105  019148  6FF2               	movwf	242,b	;volatile
 25106                           
 25107                           ; BSR set to: 61
 25108                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 25109  01914A  0E80               	movlw	128
 25110  01914C  6FF3               	movwf	243,b	;volatile
 25111                           
 25112                           ; BSR set to: 61
 25113                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 25114  01914E  6BF4               	clrf	244,b	;volatile
 25115                           
 25116                           ; BSR set to: 61
 25117                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 25118  019150  0E8A               	movlw	138
 25119  019152  6FF5               	movwf	245,b	;volatile
 25120                           
 25121                           ; BSR set to: 61
 25122                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 25123  019154  6BF6               	clrf	246,b	;volatile
 25124                           
 25125                           ; BSR set to: 61
 25126                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 25127  019156  6BF7               	clrf	247,b	;volatile
 25128                           
 25129                           ; BSR set to: 61
 25130                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 25131  019158  6BF8               	clrf	248,b	;volatile
 25132                           
 25133                           ; BSR set to: 61
 25134                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 25135  01915A  6BF9               	clrf	249,b	;volatile
 25136                           
 25137                           ; BSR set to: 61
 25138                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 25139  01915C  6BFA               	clrf	250,b	;volatile
 25140                           
 25141                           ; BSR set to: 61
 25142                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 25143  01915E  6A37               	clrf	_uart1RxHead^0,c	;volatile
 25144                           
 25145                           ; BSR set to: 61
 25146                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 25147  019160  6A36               	clrf	_uart1RxTail^0,c	;volatile
 25148                           
 25149                           ; BSR set to: 61
 25150                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 25151  019162  6A35               	clrf	_uart1RxCount^0,c	;volatile
 25152                           
 25153                           ; BSR set to: 61
 25154                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 25155  019164  0139               	movlb	57	; () banked
 25156  019166  8793               	bsf	147,3,b	;volatile
 25157                           
 25158                           ; BSR set to: 57
 25159                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 25160  019168  0012               	return		;funcret
 25161  01916A                     __end_of_UART1_Initialize:
 25162                           	opt callstack 0
 25163                           
 25164 ;; *************** function _UART1_SetRxInterruptHandler *****************
 25165 ;; Defined at:
 25166 ;;		line 207 in file "mcc_generated_files/uart1.c"
 25167 ;; Parameters:    Size  Location     Type
 25168 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25169 ;;		 -> UART1_Receive_ISR(1), 
 25170 ;; Auto vars:     Size  Location     Type
 25171 ;;		None
 25172 ;; Return value:  Size  Location     Type
 25173 ;;                  1  [STACK] void 
 25174 ;; Registers used:
 25175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25176 ;; Tracked objects:
 25177 ;;		On entry : 3F/39
 25178 ;;		On exit  : 0/0
 25179 ;;		Unchanged: 0/0
 25180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25185 ;;Total ram usage:        0 bytes
 25186 ;; Hardware stack levels used:    1
 25187 ;; Hardware stack levels required when called:   15
 25188 ;; This function calls:
 25189 ;;		Nothing
 25190 ;; This function is called by:
 25191 ;;		_UART1_Initialize
 25192 ;; This function uses a reentrant model
 25193 ;;
 25194                           
 25195                           	psect	text102
 25196  01977E                     __ptext102:
 25197                           	opt callstack 0
 25198  01977E                     _UART1_SetRxInterruptHandler:
 25199                           	opt callstack 13
 25200                           
 25201                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 25202                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25203                           
 25204                           ; BSR set to: 57
 25205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25206                           ;incstack = 0
 25207  01977E  50E1               	movf	fsr1l,w,c
 25208  019780  0FFD               	addlw	-3
 25209  019782  6ED9               	movwf	fsr2l,c
 25210  019784  50E2               	movf	fsr1h,w,c
 25211  019786  6EDA               	movwf	fsr2h,c
 25212  019788  0EFF               	movlw	255
 25213  01978A  22DA               	addwfc	fsr2h,f,c
 25214  01978C  006F FF78  F0B8    	movff	postinc2,_UART1_RxInterruptHandler
 25215  019792  006F FF78  F0B9    	movff	postinc2,_UART1_RxInterruptHandler+1
 25216  019798  006F FF74  F0BA    	movff	postdec2,_UART1_RxInterruptHandler+2
 25217                           
 25218                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25219  01979E  52E5               	movf	postdec1,f,c
 25220  0197A0  52E5               	movf	postdec1,f,c
 25221  0197A2  52E5               	movf	postdec1,f,c
 25222  0197A4  0012               	return		;funcret
 25223  0197A6                     __end_of_UART1_SetRxInterruptHandler:
 25224                           	opt callstack 0
 25225                           
 25226 ;; *************** function _TMR6_Initialize *****************
 25227 ;; Defined at:
 25228 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 25229 ;; Parameters:    Size  Location     Type
 25230 ;;		None
 25231 ;; Auto vars:     Size  Location     Type
 25232 ;;		None
 25233 ;; Return value:  Size  Location     Type
 25234 ;;                  1  [STACK] void 
 25235 ;; Registers used:
 25236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25237 ;; Tracked objects:
 25238 ;;		On entry : 3F/39
 25239 ;;		On exit  : 0/0
 25240 ;;		Unchanged: 0/0
 25241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25246 ;;Total ram usage:        0 bytes
 25247 ;; Hardware stack levels used:    1
 25248 ;; Hardware stack levels required when called:   16
 25249 ;; This function calls:
 25250 ;;		_TMR6_SetInterruptHandler
 25251 ;; This function is called by:
 25252 ;;		_SYSTEM_Initialize
 25253 ;; This function uses a reentrant model
 25254 ;;
 25255                           
 25256                           	psect	text103
 25257  01963C                     __ptext103:
 25258                           	opt callstack 0
 25259  01963C                     _TMR6_Initialize:
 25260                           	opt callstack 13
 25261                           
 25262                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 25263                           
 25264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25265                           ;incstack = 0
 25266  01963C  0E01               	movlw	1
 25267  01963E  6E96               	movwf	150,c	;volatile
 25268                           
 25269                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 25270  019640  6A95               	clrf	149,c	;volatile
 25271                           
 25272                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 25273  019642  6A97               	clrf	151,c	;volatile
 25274                           
 25275                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 25276  019644  0E7C               	movlw	124
 25277  019646  6E93               	movwf	147,c	;volatile
 25278                           
 25279                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 25280  019648  6A92               	clrf	146,c	;volatile
 25281                           
 25282                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 25283  01964A  0139               	movlb	57	; () banked
 25284  01964C  91A9               	bcf	169,0,b	;volatile
 25285                           
 25286                           ; BSR set to: 57
 25287                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 25288  01964E  8199               	bsf	153,0,b	;volatile
 25289                           
 25290                           ; BSR set to: 57
 25291                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 25292  019650  0EB8               	movlw	low _TMR6_DefaultInterruptHandler
 25293  019652  6EE6               	movwf	postinc1,c
 25294  019654  0E8F               	movlw	high _TMR6_DefaultInterruptHandler
 25295  019656  6EE6               	movwf	postinc1,c
 25296  019658  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 25297  01965A  6EE6               	movwf	postinc1,c
 25298  01965C  ECD3  F0CB         	call	_TMR6_SetInterruptHandler	;wreg free
 25299                           
 25300                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 25301  019660  0EE0               	movlw	224
 25302  019662  6E94               	movwf	148,c	;volatile
 25303                           
 25304                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25305  019664  0012               	return		;funcret
 25306  019666                     __end_of_TMR6_Initialize:
 25307                           	opt callstack 0
 25308                           
 25309 ;; *************** function _TMR6_SetInterruptHandler *****************
 25310 ;; Defined at:
 25311 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 25312 ;; Parameters:    Size  Location     Type
 25313 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25314 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 25315 ;; Auto vars:     Size  Location     Type
 25316 ;;		None
 25317 ;; Return value:  Size  Location     Type
 25318 ;;                  1  [STACK] void 
 25319 ;; Registers used:
 25320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25321 ;; Tracked objects:
 25322 ;;		On entry : 3F/39
 25323 ;;		On exit  : 0/0
 25324 ;;		Unchanged: 0/0
 25325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25330 ;;Total ram usage:        0 bytes
 25331 ;; Hardware stack levels used:    1
 25332 ;; Hardware stack levels required when called:   15
 25333 ;; This function calls:
 25334 ;;		Nothing
 25335 ;; This function is called by:
 25336 ;;		_TMR6_Initialize
 25337 ;; This function uses a reentrant model
 25338 ;;
 25339                           
 25340                           	psect	text104
 25341  0197A6                     __ptext104:
 25342                           	opt callstack 0
 25343  0197A6                     _TMR6_SetInterruptHandler:
 25344                           	opt callstack 13
 25345                           
 25346                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 25347                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25348                           
 25349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25350                           ;incstack = 0
 25351  0197A6  50E1               	movf	fsr1l,w,c
 25352  0197A8  0FFD               	addlw	-3
 25353  0197AA  6ED9               	movwf	fsr2l,c
 25354  0197AC  50E2               	movf	fsr1h,w,c
 25355  0197AE  6EDA               	movwf	fsr2h,c
 25356  0197B0  0EFF               	movlw	255
 25357  0197B2  22DA               	addwfc	fsr2h,f,c
 25358  0197B4  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 25359  0197BA  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 25360  0197C0  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 25361                           
 25362                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25363  0197C6  52E5               	movf	postdec1,f,c
 25364  0197C8  52E5               	movf	postdec1,f,c
 25365  0197CA  52E5               	movf	postdec1,f,c
 25366  0197CC  0012               	return		;funcret
 25367  0197CE                     __end_of_TMR6_SetInterruptHandler:
 25368                           	opt callstack 0
 25369                           
 25370 ;; *************** function _TMR5_Initialize *****************
 25371 ;; Defined at:
 25372 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 25373 ;; Parameters:    Size  Location     Type
 25374 ;;		None
 25375 ;; Auto vars:     Size  Location     Type
 25376 ;;		None
 25377 ;; Return value:  Size  Location     Type
 25378 ;;                  1  [STACK] void 
 25379 ;; Registers used:
 25380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 25381 ;; Tracked objects:
 25382 ;;		On entry : 0/39
 25383 ;;		On exit  : 0/0
 25384 ;;		Unchanged: 0/0
 25385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25390 ;;Total ram usage:        0 bytes
 25391 ;; Hardware stack levels used:    1
 25392 ;; Hardware stack levels required when called:   16
 25393 ;; This function calls:
 25394 ;;		_TMR5_SetInterruptHandler
 25395 ;; This function is called by:
 25396 ;;		_SYSTEM_Initialize
 25397 ;; This function uses a reentrant model
 25398 ;;
 25399                           
 25400                           	psect	text105
 25401  01916A                     __ptext105:
 25402                           	opt callstack 0
 25403  01916A                     _TMR5_Initialize:
 25404                           	opt callstack 13
 25405                           
 25406                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 25407                           
 25408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25409                           ;incstack = 0
 25410  01916A  6A9B               	clrf	155,c	;volatile
 25411                           
 25412                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 25413  01916C  6A9C               	clrf	156,c	;volatile
 25414                           
 25415                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 25416  01916E  0E01               	movlw	1
 25417  019170  6E9D               	movwf	157,c	;volatile
 25418                           
 25419                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 25420  019172  0E63               	movlw	99
 25421  019174  6E99               	movwf	153,c	;volatile
 25422                           
 25423                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 25424  019176  0EC0               	movlw	192
 25425  019178  6E98               	movwf	152,c	;volatile
 25426                           
 25427                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 25428  01917A  5098               	movf	152,w,c	;volatile
 25429  01917C  006F FE64  F001    	movff	16281,btemp	;volatile
 25430  019182  6A02               	clrf	(btemp+1)^0,c
 25431  019184  0060  F004  F002   	movff	btemp,btemp+1
 25432  01918A  6A01               	clrf	btemp^0,c
 25433  01918C  1001               	iorwf	btemp^0,w,c
 25434  01918E  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 25435  019190  5002               	movf	(btemp+1)^0,w,c
 25436  019192  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 25437                           
 25438                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 25439  019194  0139               	movlb	57	; () banked
 25440  019196  9DA8               	bcf	168,6,b	;volatile
 25441                           
 25442                           ; BSR set to: 57
 25443                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 25444  019198  8D98               	bsf	152,6,b	;volatile
 25445                           
 25446                           ; BSR set to: 57
 25447                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 25448  01919A  0EBE               	movlw	low _TMR5_DefaultInterruptHandler
 25449  01919C  6EE6               	movwf	postinc1,c
 25450  01919E  0E98               	movlw	high _TMR5_DefaultInterruptHandler
 25451  0191A0  6EE6               	movwf	postinc1,c
 25452  0191A2  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 25453  0191A4  6EE6               	movwf	postinc1,c
 25454  0191A6  ECE7  F0CB         	call	_TMR5_SetInterruptHandler	;wreg free
 25455                           
 25456                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 25457  0191AA  0E31               	movlw	49
 25458  0191AC  6E9A               	movwf	154,c	;volatile
 25459                           
 25460                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25461  0191AE  0012               	return		;funcret
 25462  0191B0                     __end_of_TMR5_Initialize:
 25463                           	opt callstack 0
 25464                           
 25465 ;; *************** function _TMR5_SetInterruptHandler *****************
 25466 ;; Defined at:
 25467 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 25468 ;; Parameters:    Size  Location     Type
 25469 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25470 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 25471 ;; Auto vars:     Size  Location     Type
 25472 ;;		None
 25473 ;; Return value:  Size  Location     Type
 25474 ;;                  1  [STACK] void 
 25475 ;; Registers used:
 25476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25477 ;; Tracked objects:
 25478 ;;		On entry : 3F/39
 25479 ;;		On exit  : 0/0
 25480 ;;		Unchanged: 0/0
 25481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25486 ;;Total ram usage:        0 bytes
 25487 ;; Hardware stack levels used:    1
 25488 ;; Hardware stack levels required when called:   15
 25489 ;; This function calls:
 25490 ;;		Nothing
 25491 ;; This function is called by:
 25492 ;;		_TMR5_Initialize
 25493 ;; This function uses a reentrant model
 25494 ;;
 25495                           
 25496                           	psect	text106
 25497  0197CE                     __ptext106:
 25498                           	opt callstack 0
 25499  0197CE                     _TMR5_SetInterruptHandler:
 25500                           	opt callstack 13
 25501                           
 25502                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 25503                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25504                           
 25505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25506                           ;incstack = 0
 25507  0197CE  50E1               	movf	fsr1l,w,c
 25508  0197D0  0FFD               	addlw	-3
 25509  0197D2  6ED9               	movwf	fsr2l,c
 25510  0197D4  50E2               	movf	fsr1h,w,c
 25511  0197D6  6EDA               	movwf	fsr2h,c
 25512  0197D8  0EFF               	movlw	255
 25513  0197DA  22DA               	addwfc	fsr2h,f,c
 25514  0197DC  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 25515  0197E2  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 25516  0197E8  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 25517                           
 25518                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25519  0197EE  52E5               	movf	postdec1,f,c
 25520  0197F0  52E5               	movf	postdec1,f,c
 25521  0197F2  52E5               	movf	postdec1,f,c
 25522  0197F4  0012               	return		;funcret
 25523  0197F6                     __end_of_TMR5_SetInterruptHandler:
 25524                           	opt callstack 0
 25525                           
 25526 ;; *************** function _TMR3_Initialize *****************
 25527 ;; Defined at:
 25528 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 25529 ;; Parameters:    Size  Location     Type
 25530 ;;		None
 25531 ;; Auto vars:     Size  Location     Type
 25532 ;;		None
 25533 ;; Return value:  Size  Location     Type
 25534 ;;                  1  [STACK] void 
 25535 ;; Registers used:
 25536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 25537 ;; Tracked objects:
 25538 ;;		On entry : 0/39
 25539 ;;		On exit  : 0/0
 25540 ;;		Unchanged: 0/0
 25541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25546 ;;Total ram usage:        0 bytes
 25547 ;; Hardware stack levels used:    1
 25548 ;; Hardware stack levels required when called:   16
 25549 ;; This function calls:
 25550 ;;		_TMR3_SetInterruptHandler
 25551 ;; This function is called by:
 25552 ;;		_SYSTEM_Initialize
 25553 ;; This function uses a reentrant model
 25554 ;;
 25555                           
 25556                           	psect	text107
 25557  0191B0                     __ptext107:
 25558                           	opt callstack 0
 25559  0191B0                     _TMR3_Initialize:
 25560                           	opt callstack 13
 25561                           
 25562                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 25563                           
 25564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25565                           ;incstack = 0
 25566  0191B0  6AA7               	clrf	167,c	;volatile
 25567                           
 25568                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 25569  0191B2  6AA8               	clrf	168,c	;volatile
 25570                           
 25571                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 25572  0191B4  0E01               	movlw	1
 25573  0191B6  6EA9               	movwf	169,c	;volatile
 25574                           
 25575                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 25576  0191B8  0E3C               	movlw	60
 25577  0191BA  6EA5               	movwf	165,c	;volatile
 25578                           
 25579                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 25580  0191BC  0EB0               	movlw	176
 25581  0191BE  6EA4               	movwf	164,c	;volatile
 25582                           
 25583                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 25584  0191C0  50A4               	movf	164,w,c	;volatile
 25585  0191C2  006F FE94  F001    	movff	16293,btemp	;volatile
 25586  0191C8  6A02               	clrf	(btemp+1)^0,c
 25587  0191CA  0060  F004  F002   	movff	btemp,btemp+1
 25588  0191D0  6A01               	clrf	btemp^0,c
 25589  0191D2  1001               	iorwf	btemp^0,w,c
 25590  0191D4  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 25591  0191D6  5002               	movf	(btemp+1)^0,w,c
 25592  0191D8  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 25593                           
 25594                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 25595  0191DA  0139               	movlb	57	; () banked
 25596  0191DC  9DA6               	bcf	166,6,b	;volatile
 25597                           
 25598                           ; BSR set to: 57
 25599                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 25600  0191DE  8D96               	bsf	150,6,b	;volatile
 25601                           
 25602                           ; BSR set to: 57
 25603                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 25604  0191E0  0E0C               	movlw	low _TMR3_DefaultInterruptHandler
 25605  0191E2  6EE6               	movwf	postinc1,c
 25606  0191E4  0E9D               	movlw	high _TMR3_DefaultInterruptHandler
 25607  0191E6  6EE6               	movwf	postinc1,c
 25608  0191E8  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 25609  0191EA  6EE6               	movwf	postinc1,c
 25610  0191EC  ECFB  F0CB         	call	_TMR3_SetInterruptHandler	;wreg free
 25611                           
 25612                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 25613  0191F0  0E31               	movlw	49
 25614  0191F2  6EA6               	movwf	166,c	;volatile
 25615                           
 25616                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25617  0191F4  0012               	return		;funcret
 25618  0191F6                     __end_of_TMR3_Initialize:
 25619                           	opt callstack 0
 25620                           
 25621 ;; *************** function _TMR3_SetInterruptHandler *****************
 25622 ;; Defined at:
 25623 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 25624 ;; Parameters:    Size  Location     Type
 25625 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25626 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 25627 ;; Auto vars:     Size  Location     Type
 25628 ;;		None
 25629 ;; Return value:  Size  Location     Type
 25630 ;;                  1  [STACK] void 
 25631 ;; Registers used:
 25632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25633 ;; Tracked objects:
 25634 ;;		On entry : 0/1
 25635 ;;		On exit  : 0/0
 25636 ;;		Unchanged: 0/0
 25637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25642 ;;Total ram usage:        0 bytes
 25643 ;; Hardware stack levels used:    1
 25644 ;; Hardware stack levels required when called:   15
 25645 ;; This function calls:
 25646 ;;		Nothing
 25647 ;; This function is called by:
 25648 ;;		_TMR3_Initialize
 25649 ;;		_init_bsoc
 25650 ;; This function uses a reentrant model
 25651 ;;
 25652                           
 25653                           	psect	text108
 25654  0197F6                     __ptext108:
 25655                           	opt callstack 0
 25656  0197F6                     _TMR3_SetInterruptHandler:
 25657                           	opt callstack 14
 25658                           
 25659                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 25660                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25661                           
 25662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25663                           ;incstack = 0
 25664  0197F6  50E1               	movf	fsr1l,w,c
 25665  0197F8  0FFD               	addlw	-3
 25666  0197FA  6ED9               	movwf	fsr2l,c
 25667  0197FC  50E2               	movf	fsr1h,w,c
 25668  0197FE  6EDA               	movwf	fsr2h,c
 25669  019800  0EFF               	movlw	255
 25670  019802  22DA               	addwfc	fsr2h,f,c
 25671  019804  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 25672  01980A  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 25673  019810  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 25674                           
 25675                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25676  019816  52E5               	movf	postdec1,f,c
 25677  019818  52E5               	movf	postdec1,f,c
 25678  01981A  52E5               	movf	postdec1,f,c
 25679  01981C  0012               	return		;funcret
 25680  01981E                     __end_of_TMR3_SetInterruptHandler:
 25681                           	opt callstack 0
 25682                           
 25683 ;; *************** function _TMR2_Initialize *****************
 25684 ;; Defined at:
 25685 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 25686 ;; Parameters:    Size  Location     Type
 25687 ;;		None
 25688 ;; Auto vars:     Size  Location     Type
 25689 ;;		None
 25690 ;; Return value:  Size  Location     Type
 25691 ;;                  1  [STACK] void 
 25692 ;; Registers used:
 25693 ;;		wreg, status,2
 25694 ;; Tracked objects:
 25695 ;;		On entry : 0/3E
 25696 ;;		On exit  : 3F/39
 25697 ;;		Unchanged: 0/0
 25698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25703 ;;Total ram usage:        0 bytes
 25704 ;; Hardware stack levels used:    1
 25705 ;; Hardware stack levels required when called:   15
 25706 ;; This function calls:
 25707 ;;		Nothing
 25708 ;; This function is called by:
 25709 ;;		_SYSTEM_Initialize
 25710 ;; This function uses a reentrant model
 25711 ;;
 25712                           
 25713                           	psect	text109
 25714  019BBE                     __ptext109:
 25715                           	opt callstack 0
 25716  019BBE                     _TMR2_Initialize:
 25717                           	opt callstack 14
 25718                           
 25719                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 25720                           
 25721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25722                           ;incstack = 0
 25723  019BBE  0E01               	movlw	1
 25724  019BC0  6EAE               	movwf	174,c	;volatile
 25725                           
 25726                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 25727  019BC2  6AAD               	clrf	173,c	;volatile
 25728                           
 25729                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 25730  019BC4  6AAF               	clrf	175,c	;volatile
 25731                           
 25732                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 25733  019BC6  0E63               	movlw	99
 25734  019BC8  6EAB               	movwf	171,c	;volatile
 25735                           
 25736                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 25737  019BCA  6AAA               	clrf	170,c	;volatile
 25738                           
 25739                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 25740  019BCC  0139               	movlb	57	; () banked
 25741  019BCE  95A4               	bcf	164,2,b	;volatile
 25742                           
 25743                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 25744  019BD0  0EC0               	movlw	192
 25745  019BD2  6EAC               	movwf	172,c	;volatile
 25746                           
 25747                           ; BSR set to: 57
 25748                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25749  019BD4  0012               	return		;funcret
 25750  019BD6                     __end_of_TMR2_Initialize:
 25751                           	opt callstack 0
 25752                           
 25753 ;; *************** function _SPI1_Initialize *****************
 25754 ;; Defined at:
 25755 ;;		line 64 in file "mcc_generated_files/spi1.c"
 25756 ;; Parameters:    Size  Location     Type
 25757 ;;		None
 25758 ;; Auto vars:     Size  Location     Type
 25759 ;;		None
 25760 ;; Return value:  Size  Location     Type
 25761 ;;                  1  [STACK] void 
 25762 ;; Registers used:
 25763 ;;		wreg, status,2
 25764 ;; Tracked objects:
 25765 ;;		On entry : 3F/39
 25766 ;;		On exit  : 3F/3D
 25767 ;;		Unchanged: 0/0
 25768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;Total ram usage:        0 bytes
 25774 ;; Hardware stack levels used:    1
 25775 ;; Hardware stack levels required when called:   15
 25776 ;; This function calls:
 25777 ;;		Nothing
 25778 ;; This function is called by:
 25779 ;;		_SYSTEM_Initialize
 25780 ;; This function uses a reentrant model
 25781 ;;
 25782                           
 25783                           	psect	text110
 25784  019BD6                     __ptext110:
 25785                           	opt callstack 0
 25786  019BD6                     _SPI1_Initialize:
 25787                           	opt callstack 14
 25788                           
 25789                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 25790                           
 25791                           ; BSR set to: 57
 25792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25793                           ;incstack = 0
 25794  019BD6  0E40               	movlw	64
 25795  019BD8  013D               	movlb	61	; () banked
 25796  019BDA  6F15               	movwf	21,b	;volatile
 25797                           
 25798                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 25799  019BDC  0E03               	movlw	3
 25800  019BDE  6F16               	movwf	22,b	;volatile
 25801                           
 25802                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 25803  019BE0  0E4F               	movlw	79
 25804  019BE2  6F19               	movwf	25,b	;volatile
 25805                           
 25806                           ; BSR set to: 61
 25807                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 25808  019BE4  6B1C               	clrf	28,b	;volatile
 25809                           
 25810                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 25811  019BE6  0E83               	movlw	131
 25812  019BE8  6F14               	movwf	20,b	;volatile
 25813                           
 25814                           ; BSR set to: 61
 25815                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25816  019BEA  0012               	return		;funcret
 25817  019BEC                     __end_of_SPI1_Initialize:
 25818                           	opt callstack 0
 25819                           
 25820 ;; *************** function _PWM8_Initialize *****************
 25821 ;; Defined at:
 25822 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 25823 ;; Parameters:    Size  Location     Type
 25824 ;;		None
 25825 ;; Auto vars:     Size  Location     Type
 25826 ;;		None
 25827 ;; Return value:  Size  Location     Type
 25828 ;;                  1  [STACK] void 
 25829 ;; Registers used:
 25830 ;;		wreg, status,2
 25831 ;; Tracked objects:
 25832 ;;		On entry : 3F/39
 25833 ;;		On exit  : 3F/3F
 25834 ;;		Unchanged: 0/0
 25835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25840 ;;Total ram usage:        0 bytes
 25841 ;; Hardware stack levels used:    1
 25842 ;; Hardware stack levels required when called:   15
 25843 ;; This function calls:
 25844 ;;		Nothing
 25845 ;; This function is called by:
 25846 ;;		_SYSTEM_Initialize
 25847 ;; This function uses a reentrant model
 25848 ;;
 25849                           
 25850                           	psect	text111
 25851  019BEC                     __ptext111:
 25852                           	opt callstack 0
 25853  019BEC                     _PWM8_Initialize:
 25854                           	opt callstack 14
 25855                           
 25856                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 25857                           
 25858                           ; BSR set to: 61
 25859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25860                           ;incstack = 0
 25861  019BEC  0E80               	movlw	128
 25862  019BEE  6E62               	movwf	98,c	;volatile
 25863                           
 25864                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 25865  019BF0  6A61               	clrf	97,c	;volatile
 25866                           
 25867                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 25868  019BF2  0E40               	movlw	64
 25869  019BF4  6E60               	movwf	96,c	;volatile
 25870                           
 25871                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 25872  019BF6  013F               	movlb	63	; () banked
 25873  019BF8  515F               	movf	95,w,b	;volatile
 25874  019BFA  0B3F               	andlw	-193
 25875  019BFC  0940               	iorlw	64
 25876  019BFE  6F5F               	movwf	95,b	;volatile
 25877                           
 25878                           ; BSR set to: 63
 25879                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25880  019C00  0012               	return		;funcret
 25881  019C02                     __end_of_PWM8_Initialize:
 25882                           	opt callstack 0
 25883                           
 25884 ;; *************** function _PMD_Initialize *****************
 25885 ;; Defined at:
 25886 ;;		line 90 in file "mcc_generated_files/mcc.c"
 25887 ;; Parameters:    Size  Location     Type
 25888 ;;		None
 25889 ;; Auto vars:     Size  Location     Type
 25890 ;;		None
 25891 ;; Return value:  Size  Location     Type
 25892 ;;                  1  [STACK] void 
 25893 ;; Registers used:
 25894 ;;		None
 25895 ;; Tracked objects:
 25896 ;;		On entry : 3F/39
 25897 ;;		On exit  : 3F/39
 25898 ;;		Unchanged: 0/0
 25899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25904 ;;Total ram usage:        0 bytes
 25905 ;; Hardware stack levels used:    1
 25906 ;; Hardware stack levels required when called:   15
 25907 ;; This function calls:
 25908 ;;		Nothing
 25909 ;; This function is called by:
 25910 ;;		_SYSTEM_Initialize
 25911 ;; This function uses a reentrant model
 25912 ;;
 25913                           
 25914                           	psect	text112
 25915  019C18                     __ptext112:
 25916                           	opt callstack 0
 25917  019C18                     _PMD_Initialize:
 25918                           	opt callstack 14
 25919                           
 25920                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 25921                           
 25922                           ; BSR set to: 63
 25923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25924                           ;incstack = 0
 25925  019C18  0139               	movlb	57	; () banked
 25926  019C1A  6BC0               	clrf	192,b	;volatile
 25927                           
 25928                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 25929  019C1C  6BC1               	clrf	193,b	;volatile
 25930                           
 25931                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 25932  019C1E  6BC2               	clrf	194,b	;volatile
 25933                           
 25934                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 25935  019C20  6BC3               	clrf	195,b	;volatile
 25936                           
 25937                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 25938  019C22  6BC4               	clrf	196,b	;volatile
 25939                           
 25940                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 25941  019C24  6BC5               	clrf	197,b	;volatile
 25942                           
 25943                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 25944  019C26  6BC6               	clrf	198,b	;volatile
 25945                           
 25946                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 25947  019C28  6BC7               	clrf	199,b	;volatile
 25948                           
 25949                           ; BSR set to: 57
 25950                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25951  019C2A  0012               	return		;funcret
 25952  019C2C                     __end_of_PMD_Initialize:
 25953                           	opt callstack 0
 25954                           
 25955 ;; *************** function _PIN_MANAGER_Initialize *****************
 25956 ;; Defined at:
 25957 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 25958 ;; Parameters:    Size  Location     Type
 25959 ;;		None
 25960 ;; Auto vars:     Size  Location     Type
 25961 ;;		None
 25962 ;; Return value:  Size  Location     Type
 25963 ;;                  1  [STACK] void 
 25964 ;; Registers used:
 25965 ;;		wreg, status,2
 25966 ;; Tracked objects:
 25967 ;;		On entry : 3F/39
 25968 ;;		On exit  : 3F/3A
 25969 ;;		Unchanged: 0/0
 25970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25975 ;;Total ram usage:        0 bytes
 25976 ;; Hardware stack levels used:    1
 25977 ;; Hardware stack levels required when called:   15
 25978 ;; This function calls:
 25979 ;;		Nothing
 25980 ;; This function is called by:
 25981 ;;		_SYSTEM_Initialize
 25982 ;; This function uses a reentrant model
 25983 ;;
 25984                           
 25985                           	psect	text113
 25986  018756                     __ptext113:
 25987                           	opt callstack 0
 25988  018756                     _PIN_MANAGER_Initialize:
 25989                           	opt callstack 14
 25990                           
 25991                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 25992                           
 25993                           ; BSR set to: 57
 25994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25995                           ;incstack = 0
 25996  018756  0E07               	movlw	7
 25997  018758  6EBE               	movwf	190,c	;volatile
 25998                           
 25999                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 26000  01875A  0E80               	movlw	128
 26001  01875C  6EBD               	movwf	189,c	;volatile
 26002                           
 26003                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 26004  01875E  6ABA               	clrf	186,c	;volatile
 26005                           
 26006                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 26007  018760  6ABF               	clrf	191,c	;volatile
 26008                           
 26009                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 26010  018762  6ABB               	clrf	187,c	;volatile
 26011                           
 26012                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 26013  018764  0E07               	movlw	7
 26014  018766  6EBC               	movwf	188,c	;volatile
 26015                           
 26016                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 26017  018768  6AC6               	clrf	198,c	;volatile
 26018                           
 26019                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 26020  01876A  0E0F               	movlw	15
 26021  01876C  6EC7               	movwf	199,c	;volatile
 26022                           
 26023                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 26024  01876E  68C2               	setf	194,c	;volatile
 26025                           
 26026                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 26027  018770  0EBF               	movlw	191
 26028  018772  6EC3               	movwf	195,c	;volatile
 26029                           
 26030                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 26031  018774  0E90               	movlw	144
 26032  018776  6EC4               	movwf	196,c	;volatile
 26033                           
 26034                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 26035  018778  0E0C               	movlw	12
 26036  01877A  6EC5               	movwf	197,c	;volatile
 26037                           
 26038                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 26039  01877C  013A               	movlb	58	; () banked
 26040  01877E  6B70               	clrf	112,b	;volatile
 26041                           
 26042                           ; BSR set to: 58
 26043                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 26044  018780  6B60               	clrf	96,b	;volatile
 26045                           
 26046                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 26047  018782  0E3C               	movlw	60
 26048  018784  6F50               	movwf	80,b	;volatile
 26049                           
 26050                           ; BSR set to: 58
 26051                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 26052  018786  6B80               	clrf	128,b	;volatile
 26053                           
 26054                           ; BSR set to: 58
 26055                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 26056  018788  6B90               	clrf	144,b	;volatile
 26057                           
 26058                           ; BSR set to: 58
 26059                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 26060  01878A  6940               	setf	64,b	;volatile
 26061                           
 26062                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 26063  01878C  0E0C               	movlw	12
 26064  01878E  6F71               	movwf	113,b	;volatile
 26065                           
 26066                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 26067  018790  0E0F               	movlw	15
 26068  018792  6F91               	movwf	145,b	;volatile
 26069                           
 26070                           ; BSR set to: 58
 26071                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 26072  018794  6B81               	clrf	129,b	;volatile
 26073                           
 26074                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 26075  018796  0E83               	movlw	131
 26076  018798  6F51               	movwf	81,b	;volatile
 26077                           
 26078                           ; BSR set to: 58
 26079                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 26080  01879A  6B41               	clrf	65,b	;volatile
 26081                           
 26082                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 26083  01879C  0E97               	movlw	151
 26084  01879E  6F61               	movwf	97,b	;volatile
 26085                           
 26086                           ; BSR set to: 58
 26087                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 26088  0187A0  6B82               	clrf	130,b	;volatile
 26089                           
 26090                           ; BSR set to: 58
 26091                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 26092  0187A2  6B92               	clrf	146,b	;volatile
 26093                           
 26094                           ; BSR set to: 58
 26095                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 26096  0187A4  6B42               	clrf	66,b	;volatile
 26097                           
 26098                           ; BSR set to: 58
 26099                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 26100  0187A6  6B52               	clrf	82,b	;volatile
 26101                           
 26102                           ; BSR set to: 58
 26103                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 26104  0187A8  6B62               	clrf	98,b	;volatile
 26105                           
 26106                           ; BSR set to: 58
 26107                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 26108  0187AA  6B72               	clrf	114,b	;volatile
 26109                           
 26110                           ; BSR set to: 58
 26111                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 26112  0187AC  6943               	setf	67,b	;volatile
 26113                           
 26114                           ; BSR set to: 58
 26115                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 26116  0187AE  6953               	setf	83,b	;volatile
 26117                           
 26118                           ; BSR set to: 58
 26119                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 26120  0187B0  6963               	setf	99,b	;volatile
 26121                           
 26122                           ; BSR set to: 58
 26123                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 26124  0187B2  6973               	setf	115,b	;volatile
 26125                           
 26126                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 26127  0187B4  0E07               	movlw	7
 26128  0187B6  6F83               	movwf	131,b	;volatile
 26129                           
 26130                           ; BSR set to: 58
 26131                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 26132  0187B8  6993               	setf	147,b	;volatile
 26133                           
 26134                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 26135  0187BA  0E0F               	movlw	15
 26136  0187BC  6FE8               	movwf	232,b	;volatile
 26137                           
 26138                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 26139  0187BE  0E13               	movlw	19
 26140  0187C0  6FDE               	movwf	222,b	;volatile
 26141                           
 26142                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 26143  0187C2  0E16               	movlw	22
 26144  0187C4  6F0E               	movwf	14,b	;volatile
 26145                           
 26146                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 26147  0187C6  0E1E               	movlw	30
 26148  0187C8  6F13               	movwf	19,b	;volatile
 26149                           
 26150                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 26151  0187CA  0E08               	movlw	8
 26152  0187CC  6FC0               	movwf	192,b	;volatile
 26153                           
 26154                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 26155  0187CE  0E10               	movlw	16
 26156  0187D0  6F19               	movwf	25,b	;volatile
 26157                           
 26158                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 26159  0187D2  0E09               	movlw	9
 26160  0187D4  6FC1               	movwf	193,b	;volatile
 26161                           
 26162                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 26163  0187D6  0E1F               	movlw	31
 26164  0187D8  6F15               	movwf	21,b	;volatile
 26165                           
 26166                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 26167  0187DA  0E13               	movlw	19
 26168  0187DC  6F16               	movwf	22,b	;volatile
 26169                           
 26170                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 26171  0187DE  0E17               	movlw	23
 26172  0187E0  6FE5               	movwf	229,b	;volatile
 26173                           
 26174                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 26175  0187E2  0E14               	movlw	20
 26176  0187E4  6FDF               	movwf	223,b	;volatile
 26177                           
 26178                           ; BSR set to: 58
 26179                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 26180  0187E6  0012               	return		;funcret
 26181  0187E8                     __end_of_PIN_MANAGER_Initialize:
 26182                           	opt callstack 0
 26183                           
 26184 ;; *************** function _OSCILLATOR_Initialize *****************
 26185 ;; Defined at:
 26186 ;;		line 72 in file "mcc_generated_files/mcc.c"
 26187 ;; Parameters:    Size  Location     Type
 26188 ;;		None
 26189 ;; Auto vars:     Size  Location     Type
 26190 ;;		None
 26191 ;; Return value:  Size  Location     Type
 26192 ;;                  1  [STACK] void 
 26193 ;; Registers used:
 26194 ;;		wreg, status,2
 26195 ;; Tracked objects:
 26196 ;;		On entry : 3F/3A
 26197 ;;		On exit  : 3F/39
 26198 ;;		Unchanged: 0/0
 26199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26204 ;;Total ram usage:        0 bytes
 26205 ;; Hardware stack levels used:    1
 26206 ;; Hardware stack levels required when called:   15
 26207 ;; This function calls:
 26208 ;;		Nothing
 26209 ;; This function is called by:
 26210 ;;		_SYSTEM_Initialize
 26211 ;; This function uses a reentrant model
 26212 ;;
 26213                           
 26214                           	psect	text114
 26215  019C02                     __ptext114:
 26216                           	opt callstack 0
 26217  019C02                     _OSCILLATOR_Initialize:
 26218                           	opt callstack 14
 26219                           
 26220                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 26221                           
 26222                           ; BSR set to: 58
 26223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26224                           ;incstack = 0
 26225  019C02  0E20               	movlw	32
 26226  019C04  0139               	movlb	57	; () banked
 26227  019C06  6FD9               	movwf	217,b	;volatile
 26228                           
 26229                           ; BSR set to: 57
 26230                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 26231  019C08  6BDB               	clrf	219,b	;volatile
 26232                           
 26233                           ; BSR set to: 57
 26234                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 26235  019C0A  6BDD               	clrf	221,b	;volatile
 26236                           
 26237                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 26238  019C0C  0E02               	movlw	2
 26239  019C0E  6FDF               	movwf	223,b	;volatile
 26240                           
 26241                           ; BSR set to: 57
 26242                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 26243  019C10  6BDE               	clrf	222,b	;volatile
 26244  019C12                     l169:
 26245                           
 26246                           ; BSR set to: 57
 26247                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 26248  019C12  B1DC               	btfsc	220,0,b	;volatile
 26249  019C14  0012               	return	
 26250  019C16  D7FD               	goto	l169
 26251  019C18                     __end_of_OSCILLATOR_Initialize:
 26252                           	opt callstack 0
 26253                           
 26254 ;; *************** function _INTERRUPT_Initialize *****************
 26255 ;; Defined at:
 26256 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26257 ;; Parameters:    Size  Location     Type
 26258 ;;		None
 26259 ;; Auto vars:     Size  Location     Type
 26260 ;;  state           1  [STACK] _Bool 
 26261 ;; Return value:  Size  Location     Type
 26262 ;;                  1  [STACK] void 
 26263 ;; Registers used:
 26264 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 26265 ;; Tracked objects:
 26266 ;;		On entry : 0/0
 26267 ;;		On exit  : 3F/39
 26268 ;;		Unchanged: 0/0
 26269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26274 ;;Total ram usage:        0 bytes
 26275 ;; Hardware stack levels used:    1
 26276 ;; Hardware stack levels required when called:   15
 26277 ;; This function calls:
 26278 ;;		Nothing
 26279 ;; This function is called by:
 26280 ;;		_SYSTEM_Initialize
 26281 ;; This function uses a reentrant model
 26282 ;;
 26283                           
 26284                           	psect	text115
 26285  018BC6                     __ptext115:
 26286                           	opt callstack 0
 26287  018BC6                     _INTERRUPT_Initialize:
 26288                           	opt callstack 0
 26289                           
 26290                           ; BSR set to: 57
 26291                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26292  018BC6  52E6               	movf	postinc1,f,c
 26293                           
 26294                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 26295                           
 26296                           ;incstack = 0
 26297  018BC8  8AD2               	bsf	210,5,c	;volatile
 26298                           
 26299                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 26300  018BCA  AED2               	btfss	16338,7,c	;volatile
 26301  018BCC  D003               	goto	u8210
 26302  018BCE  6A0C               	clrf	(btemp+11)^0,c
 26303  018BD0  2A0C               	incf	(btemp+11)^0,f,c
 26304  018BD2  D001               	goto	u8228
 26305  018BD4                     u8210:
 26306  018BD4  6A0C               	clrf	(btemp+11)^0,c
 26307  018BD6                     u8228:
 26308                           
 26309                           ;stkvar	_state @ sp[(-1)+0]
 26310  018BD6  0EFF               	movlw	-1
 26311  018BD8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26312                           
 26313                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 26314  018BDE  9ED2               	bcf	16338,7,c	;volatile
 26315                           
 26316                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 26317  018BE0  0E55               	movlw	85
 26318  018BE2  6ED4               	movwf	212,c	;volatile
 26319                           
 26320                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 26321  018BE4  0EAA               	movlw	170
 26322  018BE6  6ED4               	movwf	212,c	;volatile
 26323                           
 26324                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 26325  018BE8  90D4               	bcf	212,0,c	;volatile
 26326                           
 26327                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 26328  018BEA  0138               	movlb	56	; () banked
 26329  018BEC  6B9F               	clrf	159,b	;volatile
 26330                           
 26331                           ; BSR set to: 56
 26332                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 26333  018BEE  6B9E               	clrf	158,b	;volatile
 26334                           
 26335                           ; BSR set to: 56
 26336                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 26337  018BF0  0E08               	movlw	8
 26338  018BF2  6F9D               	movwf	157,b	;volatile
 26339                           
 26340                           ; BSR set to: 56
 26341                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 26342  018BF4  0E55               	movlw	85
 26343  018BF6  6ED4               	movwf	212,c	;volatile
 26344                           
 26345                           ; BSR set to: 56
 26346                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 26347  018BF8  0EAA               	movlw	170
 26348  018BFA  6ED4               	movwf	212,c	;volatile
 26349                           
 26350                           ; BSR set to: 56
 26351                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 26352  018BFC  80D4               	bsf	212,0,c	;volatile
 26353                           
 26354                           ; BSR set to: 56
 26355                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 26356                           ;stkvar	_state @ sp[(-1)+0]
 26357  018BFE  0EFF               	movlw	-1
 26358  018C00  B0E3               	btfsc	plusw1,0,c
 26359  018C02  D002               	bra	u8235
 26360  018C04  9ED2               	bcf	16338,7,c	;volatile
 26361  018C06  D001               	bra	u8236
 26362  018C08                     u8235:
 26363  018C08  8ED2               	bsf	16338,7,c	;volatile
 26364  018C0A                     u8236:
 26365                           
 26366                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 26367  018C0A  0139               	movlb	57	; () banked
 26368  018C0C  8782               	bsf	130,3,b	;volatile
 26369                           
 26370                           ; BSR set to: 57
 26371                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 26372  018C0E  8382               	bsf	130,1,b	;volatile
 26373                           
 26374                           ; BSR set to: 57
 26375                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 26376  018C10  8182               	bsf	130,0,b	;volatile
 26377                           
 26378                           ; BSR set to: 57
 26379                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 26380  018C12  8582               	bsf	130,2,b	;volatile
 26381                           
 26382                           ; BSR set to: 57
 26383                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 26384  018C14  8786               	bsf	134,3,b	;volatile
 26385                           
 26386                           ; BSR set to: 57
 26387                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 26388  018C16  8586               	bsf	134,2,b	;volatile
 26389                           
 26390                           ; BSR set to: 57
 26391                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 26392  018C18  8783               	bsf	131,3,b	;volatile
 26393                           
 26394                           ; BSR set to: 57
 26395                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 26396  018C1A  8181               	bsf	129,0,b	;volatile
 26397                           
 26398                           ; BSR set to: 57
 26399                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 26400  018C1C  9185               	bcf	133,0,b	;volatile
 26401                           
 26402                           ; BSR set to: 57
 26403                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 26404  018C1E  8189               	bsf	137,0,b	;volatile
 26405                           
 26406                           ; BSR set to: 57
 26407                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 26408  018C20  9D88               	bcf	136,6,b	;volatile
 26409                           
 26410                           ; BSR set to: 57
 26411                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 26412  018C22  9D86               	bcf	134,6,b	;volatile
 26413                           
 26414                           ; BSR set to: 57
 26415                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 26416  018C24  8581               	bsf	129,2,b	;volatile
 26417                           
 26418                           ; BSR set to: 57
 26419                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 26420  018C26  8781               	bsf	129,3,b	;volatile
 26421                           
 26422                           ; BSR set to: 57
 26423                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 26424  018C28  52E5               	movf	postdec1,f,c
 26425  018C2A  0012               	return		;funcret
 26426  018C2C                     __end_of_INTERRUPT_Initialize:
 26427                           	opt callstack 0
 26428                           
 26429 ;; *************** function _FVR_Initialize *****************
 26430 ;; Defined at:
 26431 ;;		line 58 in file "mcc_generated_files/fvr.c"
 26432 ;; Parameters:    Size  Location     Type
 26433 ;;		None
 26434 ;; Auto vars:     Size  Location     Type
 26435 ;;		None
 26436 ;; Return value:  Size  Location     Type
 26437 ;;                  1  [STACK] void 
 26438 ;; Registers used:
 26439 ;;		wreg, status,2
 26440 ;; Tracked objects:
 26441 ;;		On entry : 3F/39
 26442 ;;		On exit  : 3F/3E
 26443 ;;		Unchanged: 0/0
 26444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26449 ;;Total ram usage:        0 bytes
 26450 ;; Hardware stack levels used:    1
 26451 ;; Hardware stack levels required when called:   15
 26452 ;; This function calls:
 26453 ;;		Nothing
 26454 ;; This function is called by:
 26455 ;;		_SYSTEM_Initialize
 26456 ;; This function uses a reentrant model
 26457 ;;
 26458                           
 26459                           	psect	text116
 26460  019CE2                     __ptext116:
 26461                           	opt callstack 0
 26462  019CE2                     _FVR_Initialize:
 26463                           	opt callstack 14
 26464                           
 26465                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 26466                           
 26467                           ; BSR set to: 57
 26468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26469                           ;incstack = 0
 26470  019CE2  0EAF               	movlw	175
 26471  019CE4  013E               	movlb	62	; () banked
 26472  019CE6  6FC1               	movwf	193,b	;volatile
 26473                           
 26474                           ; BSR set to: 62
 26475                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26476  019CE8  0012               	return		;funcret
 26477  019CEA                     __end_of_FVR_Initialize:
 26478                           	opt callstack 0
 26479                           
 26480 ;; *************** function _EXT_INT_Initialize *****************
 26481 ;; Defined at:
 26482 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 26483 ;; Parameters:    Size  Location     Type
 26484 ;;		None
 26485 ;; Auto vars:     Size  Location     Type
 26486 ;;		None
 26487 ;; Return value:  Size  Location     Type
 26488 ;;                  1  [STACK] void 
 26489 ;; Registers used:
 26490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26491 ;; Tracked objects:
 26492 ;;		On entry : 3F/3F
 26493 ;;		On exit  : 3F/39
 26494 ;;		Unchanged: 0/0
 26495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26500 ;;Total ram usage:        0 bytes
 26501 ;; Hardware stack levels used:    1
 26502 ;; Hardware stack levels required when called:   16
 26503 ;; This function calls:
 26504 ;;		_INT0_SetInterruptHandler
 26505 ;;		_INT1_SetInterruptHandler
 26506 ;; This function is called by:
 26507 ;;		_SYSTEM_Initialize
 26508 ;; This function uses a reentrant model
 26509 ;;
 26510                           
 26511                           	psect	text117
 26512  019492                     __ptext117:
 26513                           	opt callstack 0
 26514  019492                     _EXT_INT_Initialize:
 26515                           	opt callstack 13
 26516                           
 26517                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 26518                           
 26519                           ; BSR set to: 62
 26520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26521                           ;incstack = 0
 26522  019492  0139               	movlb	57	; () banked
 26523  019494  91A1               	bcf	161,0,b	;volatile
 26524                           
 26525                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 26526  019496  90D2               	bcf	210,0,c	;volatile
 26527                           
 26528                           ; BSR set to: 57
 26529                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 26530  019498  0E0E               	movlw	low _INT0_DefaultInterruptHandler
 26531  01949A  6EE6               	movwf	postinc1,c
 26532  01949C  0E9D               	movlw	high _INT0_DefaultInterruptHandler
 26533  01949E  6EE6               	movwf	postinc1,c
 26534  0194A0  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 26535  0194A2  6EE6               	movwf	postinc1,c
 26536  0194A4  EC23  F0CC         	call	_INT0_SetInterruptHandler	;wreg free
 26537                           
 26538                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 26539  0194A8  0139               	movlb	57	; () banked
 26540  0194AA  8191               	bsf	145,0,b	;volatile
 26541                           
 26542                           ; BSR set to: 57
 26543                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 26544  0194AC  91A5               	bcf	165,0,b	;volatile
 26545                           
 26546                           ; BSR set to: 57
 26547                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 26548  0194AE  92D2               	bcf	210,1,c	;volatile
 26549                           
 26550                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 26551  0194B0  0E0A               	movlw	low _INT1_DefaultInterruptHandler
 26552  0194B2  6EE6               	movwf	postinc1,c
 26553  0194B4  0E9D               	movlw	high _INT1_DefaultInterruptHandler
 26554  0194B6  6EE6               	movwf	postinc1,c
 26555  0194B8  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 26556  0194BA  6EE6               	movwf	postinc1,c
 26557  0194BC  EC0F  F0CC         	call	_INT1_SetInterruptHandler	;wreg free
 26558                           
 26559                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 26560  0194C0  0139               	movlb	57	; () banked
 26561  0194C2  8195               	bsf	149,0,b	;volatile
 26562                           
 26563                           ; BSR set to: 57
 26564                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26565  0194C4  0012               	return		;funcret
 26566  0194C6                     __end_of_EXT_INT_Initialize:
 26567                           	opt callstack 0
 26568                           
 26569 ;; *************** function _INT1_SetInterruptHandler *****************
 26570 ;; Defined at:
 26571 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 26572 ;; Parameters:    Size  Location     Type
 26573 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26574 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 26575 ;; Auto vars:     Size  Location     Type
 26576 ;;		None
 26577 ;; Return value:  Size  Location     Type
 26578 ;;                  1  [STACK] void 
 26579 ;; Registers used:
 26580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26581 ;; Tracked objects:
 26582 ;;		On entry : 3F/39
 26583 ;;		On exit  : 0/0
 26584 ;;		Unchanged: 0/0
 26585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26590 ;;Total ram usage:        0 bytes
 26591 ;; Hardware stack levels used:    1
 26592 ;; Hardware stack levels required when called:   15
 26593 ;; This function calls:
 26594 ;;		Nothing
 26595 ;; This function is called by:
 26596 ;;		_EXT_INT_Initialize
 26597 ;;		_start_switch_handler
 26598 ;; This function uses a reentrant model
 26599 ;;
 26600                           
 26601                           	psect	text118
 26602  01981E                     __ptext118:
 26603                           	opt callstack 0
 26604  01981E                     _INT1_SetInterruptHandler:
 26605                           	opt callstack 14
 26606                           
 26607                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 26608                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26609                           
 26610                           ; BSR set to: 57
 26611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26612                           ;incstack = 0
 26613  01981E  50E1               	movf	fsr1l,w,c
 26614  019820  0FFD               	addlw	-3
 26615  019822  6ED9               	movwf	fsr2l,c
 26616  019824  50E2               	movf	fsr1h,w,c
 26617  019826  6EDA               	movwf	fsr2h,c
 26618  019828  0EFF               	movlw	255
 26619  01982A  22DA               	addwfc	fsr2h,f,c
 26620  01982C  006F FF78  F0C1    	movff	postinc2,_INT1_InterruptHandler
 26621  019832  006F FF78  F0C2    	movff	postinc2,_INT1_InterruptHandler+1
 26622  019838  006F FF74  F0C3    	movff	postdec2,_INT1_InterruptHandler+2
 26623                           
 26624                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 26625  01983E  52E5               	movf	postdec1,f,c
 26626  019840  52E5               	movf	postdec1,f,c
 26627  019842  52E5               	movf	postdec1,f,c
 26628  019844  0012               	return		;funcret
 26629  019846                     __end_of_INT1_SetInterruptHandler:
 26630                           	opt callstack 0
 26631                           
 26632 ;; *************** function _INT0_SetInterruptHandler *****************
 26633 ;; Defined at:
 26634 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 26635 ;; Parameters:    Size  Location     Type
 26636 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26637 ;;		 -> INT0_DefaultInterruptHandler(1), 
 26638 ;; Auto vars:     Size  Location     Type
 26639 ;;		None
 26640 ;; Return value:  Size  Location     Type
 26641 ;;                  1  [STACK] void 
 26642 ;; Registers used:
 26643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26644 ;; Tracked objects:
 26645 ;;		On entry : 3F/39
 26646 ;;		On exit  : 0/0
 26647 ;;		Unchanged: 0/0
 26648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26653 ;;Total ram usage:        0 bytes
 26654 ;; Hardware stack levels used:    1
 26655 ;; Hardware stack levels required when called:   15
 26656 ;; This function calls:
 26657 ;;		Nothing
 26658 ;; This function is called by:
 26659 ;;		_EXT_INT_Initialize
 26660 ;; This function uses a reentrant model
 26661 ;;
 26662                           
 26663                           	psect	text119
 26664  019846                     __ptext119:
 26665                           	opt callstack 0
 26666  019846                     _INT0_SetInterruptHandler:
 26667                           	opt callstack 13
 26668                           
 26669                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 26670                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26671                           
 26672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26673                           ;incstack = 0
 26674  019846  50E1               	movf	fsr1l,w,c
 26675  019848  0FFD               	addlw	-3
 26676  01984A  6ED9               	movwf	fsr2l,c
 26677  01984C  50E2               	movf	fsr1h,w,c
 26678  01984E  6EDA               	movwf	fsr2h,c
 26679  019850  0EFF               	movlw	255
 26680  019852  22DA               	addwfc	fsr2h,f,c
 26681  019854  006F FF78  F0C4    	movff	postinc2,_INT0_InterruptHandler
 26682  01985A  006F FF78  F0C5    	movff	postinc2,_INT0_InterruptHandler+1
 26683  019860  006F FF74  F0C6    	movff	postdec2,_INT0_InterruptHandler+2
 26684                           
 26685                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 26686  019866  52E5               	movf	postdec1,f,c
 26687  019868  52E5               	movf	postdec1,f,c
 26688  01986A  52E5               	movf	postdec1,f,c
 26689  01986C  0012               	return		;funcret
 26690  01986E                     __end_of_INT0_SetInterruptHandler:
 26691                           	opt callstack 0
 26692                           
 26693 ;; *************** function _DMA2_Initialize *****************
 26694 ;; Defined at:
 26695 ;;		line 61 in file "mcc_generated_files/dma2.c"
 26696 ;; Parameters:    Size  Location     Type
 26697 ;;		None
 26698 ;; Auto vars:     Size  Location     Type
 26699 ;;		None
 26700 ;; Return value:  Size  Location     Type
 26701 ;;                  1  [STACK] void 
 26702 ;; Registers used:
 26703 ;;		wreg, status,2
 26704 ;; Tracked objects:
 26705 ;;		On entry : 3F/3D
 26706 ;;		On exit  : 3F/3B
 26707 ;;		Unchanged: 0/0
 26708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26713 ;;Total ram usage:        0 bytes
 26714 ;; Hardware stack levels used:    1
 26715 ;; Hardware stack levels required when called:   15
 26716 ;; This function calls:
 26717 ;;		Nothing
 26718 ;; This function is called by:
 26719 ;;		_SYSTEM_Initialize
 26720 ;; This function uses a reentrant model
 26721 ;;
 26722                           
 26723                           	psect	text120
 26724  018E0C                     __ptext120:
 26725                           	opt callstack 0
 26726  018E0C                     _DMA2_Initialize:
 26727                           	opt callstack 14
 26728                           
 26729                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 26730                           
 26731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26732                           ;incstack = 0
 26733  018E0C  0E00               	movlw	0
 26734  018E0E  013B               	movlb	59	; () banked
 26735  018E10  6FD9               	movwf	217,b	;volatile
 26736  018E12  0E10               	movlw	16
 26737  018E14  6FDA               	movwf	218,b	;volatile
 26738  018E16  0E00               	movlw	0
 26739  018E18  6FDB               	movwf	219,b	;volatile
 26740                           
 26741                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 26742  018E1A  0E3F               	movlw	63
 26743  018E1C  6FD1               	movwf	209,b	;volatile
 26744  018E1E  0EBB               	movlw	187
 26745  018E20  6FD0               	movwf	208,b	;volatile
 26746                           
 26747                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 26748  018E22  0E03               	movlw	3
 26749  018E24  6FDD               	movwf	221,b	;volatile
 26750                           
 26751                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 26752  018E26  0E00               	movlw	0
 26753  018E28  6FD8               	movwf	216,b	;volatile
 26754  018E2A  0E01               	movlw	1
 26755  018E2C  6FD7               	movwf	215,b	;volatile
 26756                           
 26757                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 26758  018E2E  0E00               	movlw	0
 26759  018E30  6FCF               	movwf	207,b	;volatile
 26760  018E32  0E01               	movlw	1
 26761  018E34  6FCE               	movwf	206,b	;volatile
 26762                           
 26763                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 26764  018E36  0E1C               	movlw	28
 26765  018E38  6FDF               	movwf	223,b	;volatile
 26766                           
 26767                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 26768  018E3A  0E3D               	movlw	61
 26769  018E3C  6FDE               	movwf	222,b	;volatile
 26770                           
 26771                           ; BSR set to: 59
 26772                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 26773  018E3E  0139               	movlb	57	; () banked
 26774  018E40  97A5               	bcf	165,3,b	;volatile
 26775                           
 26776                           ; BSR set to: 57
 26777                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 26778  018E42  95A5               	bcf	165,2,b	;volatile
 26779                           
 26780                           ; BSR set to: 57
 26781                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 26782  018E44  9BA5               	bcf	165,5,b	;volatile
 26783                           
 26784                           ; BSR set to: 57
 26785                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 26786  018E46  99A5               	bcf	165,4,b	;volatile
 26787                           
 26788                           ; BSR set to: 57
 26789                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 26790  018E48  9795               	bcf	149,3,b	;volatile
 26791                           
 26792                           ; BSR set to: 57
 26793                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 26794  018E4A  9595               	bcf	149,2,b	;volatile
 26795                           
 26796                           ; BSR set to: 57
 26797                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 26798  018E4C  9B95               	bcf	149,5,b	;volatile
 26799                           
 26800                           ; BSR set to: 57
 26801                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 26802  018E4E  9995               	bcf	149,4,b	;volatile
 26803  018E50  9ED2               	bcf	16338,7,c	;# 
 26804  018E52  0139               	banksel	14831	;# 
 26805  018E54  0E55               	movlw	85	;# 
 26806  018E56  6FEF               	movwf	14831,b	;# 
 26807  018E58  0EAA               	movlw	170	;# 
 26808  018E5A  6FEF               	movwf	14831,b	;# 
 26809  018E5C  81EF               	bsf	14831,0,b	;# 
 26810  018E5E  8ED2               	bsf	16338,7,c	;# 
 26811                           
 26812                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 26813  018E60  013B               	movlb	59	; () banked
 26814  018E62  6BDC               	clrf	220,b	;volatile
 26815                           
 26816                           ; BSR set to: 59
 26817                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26818  018E64  0012               	return		;funcret
 26819  018E66                     __end_of_DMA2_Initialize:
 26820                           	opt callstack 0
 26821                           
 26822 ;; *************** function _DMA1_Initialize *****************
 26823 ;; Defined at:
 26824 ;;		line 86 in file "mcc_generated_files/dma1.c"
 26825 ;; Parameters:    Size  Location     Type
 26826 ;;		None
 26827 ;; Auto vars:     Size  Location     Type
 26828 ;;		None
 26829 ;; Return value:  Size  Location     Type
 26830 ;;                  1  [STACK] void 
 26831 ;; Registers used:
 26832 ;;		wreg, status,2
 26833 ;; Tracked objects:
 26834 ;;		On entry : 3F/3B
 26835 ;;		On exit  : 3F/3B
 26836 ;;		Unchanged: 0/0
 26837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26842 ;;Total ram usage:        0 bytes
 26843 ;; Hardware stack levels used:    1
 26844 ;; Hardware stack levels required when called:   15
 26845 ;; This function calls:
 26846 ;;		Nothing
 26847 ;; This function is called by:
 26848 ;;		_SYSTEM_Initialize
 26849 ;; This function uses a reentrant model
 26850 ;;
 26851                           
 26852                           	psect	text121
 26853  018A86                     __ptext121:
 26854                           	opt callstack 0
 26855  018A86                     _DMA1_Initialize:
 26856                           	opt callstack 14
 26857                           
 26858                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 26859                           
 26860                           ; BSR set to: 59
 26861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26862                           ;incstack = 0
 26863  018A86  0E00               	movlw	0
 26864  018A88  013B               	movlb	59	; () banked
 26865  018A8A  6FF9               	movwf	249,b	;volatile
 26866  018A8C  0E10               	movlw	16
 26867  018A8E  6FFA               	movwf	250,b	;volatile
 26868  018A90  0E00               	movlw	0
 26869  018A92  6FFB               	movwf	251,b	;volatile
 26870                           
 26871                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 26872  018A94  0E3D               	movlw	61
 26873  018A96  6FF1               	movwf	241,b	;volatile
 26874  018A98  0E11               	movlw	17
 26875  018A9A  6FF0               	movwf	240,b	;volatile
 26876                           
 26877                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 26878  018A9C  0E03               	movlw	3
 26879  018A9E  6FFD               	movwf	253,b	;volatile
 26880                           
 26881                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 26882  018AA0  0E00               	movlw	0
 26883  018AA2  6FF8               	movwf	248,b	;volatile
 26884  018AA4  0E01               	movlw	1
 26885  018AA6  6FF7               	movwf	247,b	;volatile
 26886                           
 26887                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 26888  018AA8  0E00               	movlw	0
 26889  018AAA  6FEF               	movwf	239,b	;volatile
 26890  018AAC  0E01               	movlw	1
 26891  018AAE  6FEE               	movwf	238,b	;volatile
 26892                           
 26893                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 26894  018AB0  0E15               	movlw	21
 26895  018AB2  6FFF               	movwf	255,b	;volatile
 26896                           
 26897                           ; BSR set to: 59
 26898                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 26899  018AB4  6BFE               	clrf	254,b	;volatile
 26900                           
 26901                           ; BSR set to: 59
 26902                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 26903  018AB6  0139               	movlb	57	; () banked
 26904  018AB8  93A2               	bcf	162,1,b	;volatile
 26905                           
 26906                           ; BSR set to: 57
 26907                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 26908  018ABA  91A2               	bcf	162,0,b	;volatile
 26909                           
 26910                           ; BSR set to: 57
 26911                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 26912  018ABC  97A2               	bcf	162,3,b	;volatile
 26913                           
 26914                           ; BSR set to: 57
 26915                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 26916  018ABE  95A2               	bcf	162,2,b	;volatile
 26917                           
 26918                           ; BSR set to: 57
 26919                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 26920  018AC0  8392               	bsf	146,1,b	;volatile
 26921                           
 26922                           ; BSR set to: 57
 26923                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 26924  018AC2  8192               	bsf	146,0,b	;volatile
 26925                           
 26926                           ; BSR set to: 57
 26927                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 26928  018AC4  8792               	bsf	146,3,b	;volatile
 26929                           
 26930                           ; BSR set to: 57
 26931                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 26932  018AC6  8592               	bsf	146,2,b	;volatile
 26933                           
 26934                           ; BSR set to: 57
 26935                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 26936  018AC8  6BF1               	clrf	241,b	;volatile
 26937                           
 26938                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 26939  018ACA  0E01               	movlw	1
 26940  018ACC  6FF2               	movwf	242,b	;volatile
 26941                           
 26942                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 26943  018ACE  0E04               	movlw	4
 26944  018AD0  6FF3               	movwf	243,b	;volatile
 26945                           
 26946                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 26947  018AD2  0E02               	movlw	2
 26948  018AD4  6FF4               	movwf	244,b	;volatile
 26949                           
 26950                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 26951  018AD6  0E03               	movlw	3
 26952  018AD8  6FF7               	movwf	247,b	;volatile
 26953  018ADA  9ED2               	bcf	16338,7,c	;# 
 26954  018ADC  0139               	banksel	14831	;# 
 26955  018ADE  0E55               	movlw	85	;# 
 26956  018AE0  6FEF               	movwf	14831,b	;# 
 26957  018AE2  0EAA               	movlw	170	;# 
 26958  018AE4  6FEF               	movwf	14831,b	;# 
 26959  018AE6  81EF               	bsf	14831,0,b	;# 
 26960  018AE8  8ED2               	bsf	16338,7,c	;# 
 26961                           
 26962                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 26963  018AEA  013B               	movlb	59	; () banked
 26964  018AEC  6BFC               	clrf	252,b	;volatile
 26965                           
 26966                           ; BSR set to: 59
 26967                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26968  018AEE  0012               	return		;funcret
 26969  018AF0                     __end_of_DMA1_Initialize:
 26970                           	opt callstack 0
 26971                           
 26972 ;; *************** function _CLKREF_Initialize *****************
 26973 ;; Defined at:
 26974 ;;		line 58 in file "mcc_generated_files/clkref.c"
 26975 ;; Parameters:    Size  Location     Type
 26976 ;;		None
 26977 ;; Auto vars:     Size  Location     Type
 26978 ;;		None
 26979 ;; Return value:  Size  Location     Type
 26980 ;;                  1  [STACK] void 
 26981 ;; Registers used:
 26982 ;;		wreg, status,2
 26983 ;; Tracked objects:
 26984 ;;		On entry : 3F/3B
 26985 ;;		On exit  : 3F/3C
 26986 ;;		Unchanged: 0/0
 26987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26992 ;;Total ram usage:        0 bytes
 26993 ;; Hardware stack levels used:    1
 26994 ;; Hardware stack levels required when called:   15
 26995 ;; This function calls:
 26996 ;;		Nothing
 26997 ;; This function is called by:
 26998 ;;		_SYSTEM_Initialize
 26999 ;; This function uses a reentrant model
 27000 ;;
 27001                           
 27002                           	psect	text122
 27003  019C8A                     __ptext122:
 27004                           	opt callstack 0
 27005  019C8A                     _CLKREF_Initialize:
 27006                           	opt callstack 14
 27007                           
 27008                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 27009                           
 27010                           ; BSR set to: 59
 27011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27012                           ;incstack = 0
 27013  019C8A  013C               	movlb	60	; () banked
 27014  019C8C  6BE6               	clrf	230,b	;volatile
 27015                           
 27016                           ; BSR set to: 60
 27017                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 27018  019C8E  0E94               	movlw	148
 27019  019C90  6FE5               	movwf	229,b	;volatile
 27020                           
 27021                           ; BSR set to: 60
 27022                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27023  019C92  0012               	return		;funcret
 27024  019C94                     __end_of_CLKREF_Initialize:
 27025                           	opt callstack 0
 27026                           
 27027 ;; *************** function _ADCC_Initialize *****************
 27028 ;; Defined at:
 27029 ;;		line 65 in file "mcc_generated_files/adcc.c"
 27030 ;; Parameters:    Size  Location     Type
 27031 ;;		None
 27032 ;; Auto vars:     Size  Location     Type
 27033 ;;		None
 27034 ;; Return value:  Size  Location     Type
 27035 ;;                  1  [STACK] void 
 27036 ;; Registers used:
 27037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27038 ;; Tracked objects:
 27039 ;;		On entry : 3F/3E
 27040 ;;		On exit  : 0/0
 27041 ;;		Unchanged: 0/0
 27042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27047 ;;Total ram usage:        0 bytes
 27048 ;; Hardware stack levels used:    1
 27049 ;; Hardware stack levels required when called:   16
 27050 ;; This function calls:
 27051 ;;		_ADCC_SetADIInterruptHandler
 27052 ;;		_ADCC_SetADTIInterruptHandler
 27053 ;; This function is called by:
 27054 ;;		_SYSTEM_Initialize
 27055 ;; This function uses a reentrant model
 27056 ;;
 27057                           
 27058                           	psect	text123
 27059  018AF0                     __ptext123:
 27060                           	opt callstack 0
 27061  018AF0                     _ADCC_Initialize:
 27062                           	opt callstack 13
 27063                           
 27064                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 27065                           
 27066                           ; BSR set to: 60
 27067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27068                           ;incstack = 0
 27069  018AF0  013E               	movlb	62	; () banked
 27070  018AF2  6BDE               	clrf	222,b	;volatile
 27071                           
 27072                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 27073  018AF4  6BDF               	clrf	223,b	;volatile
 27074                           
 27075                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 27076  018AF6  6BE0               	clrf	224,b	;volatile
 27077                           
 27078                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 27079  018AF8  6BE1               	clrf	225,b	;volatile
 27080                           
 27081                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 27082  018AFA  6BE4               	clrf	228,b	;volatile
 27083                           
 27084                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 27085  018AFC  6BE5               	clrf	229,b	;volatile
 27086                           
 27087                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 27088  018AFE  6BEA               	clrf	234,b	;volatile
 27089                           
 27090                           ; BSR set to: 62
 27091                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 27092  018B00  0E40               	movlw	64
 27093  018B02  6FEC               	movwf	236,b	;volatile
 27094                           
 27095                           ; BSR set to: 62
 27096                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 27097  018B04  6BF1               	clrf	241,b	;volatile
 27098                           
 27099                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 27100  018B06  0E20               	movlw	32
 27101  018B08  6FF3               	movwf	243,b	;volatile
 27102                           
 27103                           ; BSR set to: 62
 27104                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 27105  018B0A  6BF4               	clrf	244,b	;volatile
 27106                           
 27107                           ; BSR set to: 62
 27108                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 27109  018B0C  6BF5               	clrf	245,b	;volatile
 27110                           
 27111                           ; BSR set to: 62
 27112                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 27113  018B0E  6BF6               	clrf	246,b	;volatile
 27114                           
 27115                           ; BSR set to: 62
 27116                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 27117  018B10  6BF7               	clrf	247,b	;volatile
 27118                           
 27119                           ; BSR set to: 62
 27120                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 27121  018B12  6BF9               	clrf	249,b	;volatile
 27122                           
 27123                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 27124  018B14  0E5B               	movlw	91
 27125  018B16  6FFA               	movwf	250,b	;volatile
 27126                           
 27127                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 27128  018B18  0E27               	movlw	39
 27129  018B1A  6FFB               	movwf	251,b	;volatile
 27130                           
 27131                           ; BSR set to: 62
 27132                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 27133  018B1C  6BFC               	clrf	252,b	;volatile
 27134                           
 27135                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 27136  018B1E  0E02               	movlw	2
 27137  018B20  6FFD               	movwf	253,b	;volatile
 27138                           
 27139                           ; BSR set to: 62
 27140                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 27141  018B22  6BFE               	clrf	254,b	;volatile
 27142                           
 27143                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 27144  018B24  0E07               	movlw	7
 27145  018B26  6FFF               	movwf	255,b	;volatile
 27146                           
 27147                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 27148  018B28  0E84               	movlw	132
 27149  018B2A  6FF8               	movwf	248,b	;volatile
 27150                           
 27151                           ; BSR set to: 62
 27152                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 27153  018B2C  0139               	movlb	57	; () banked
 27154  018B2E  95A1               	bcf	161,2,b	;volatile
 27155                           
 27156                           ; BSR set to: 57
 27157                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 27158  018B30  8591               	bsf	145,2,b	;volatile
 27159                           
 27160                           ; BSR set to: 57
 27161                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 27162  018B32  0E10               	movlw	low _ADCC_DefaultInterruptHandler
 27163  018B34  6EE6               	movwf	postinc1,c
 27164  018B36  0E9D               	movlw	high _ADCC_DefaultInterruptHandler
 27165  018B38  6EE6               	movwf	postinc1,c
 27166  018B3A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 27167  018B3C  6EE6               	movwf	postinc1,c
 27168  018B3E  EC4B  F0CC         	call	_ADCC_SetADIInterruptHandler	;wreg free
 27169                           
 27170                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 27171  018B42  0139               	movlb	57	; () banked
 27172  018B44  97A1               	bcf	161,3,b	;volatile
 27173                           
 27174                           ; BSR set to: 57
 27175                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 27176  018B46  8791               	bsf	145,3,b	;volatile
 27177                           
 27178                           ; BSR set to: 57
 27179                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 27180  018B48  0E10               	movlw	low _ADCC_DefaultInterruptHandler
 27181  018B4A  6EE6               	movwf	postinc1,c
 27182  018B4C  0E9D               	movlw	high _ADCC_DefaultInterruptHandler
 27183  018B4E  6EE6               	movwf	postinc1,c
 27184  018B50  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 27185  018B52  6EE6               	movwf	postinc1,c
 27186  018B54  EC37  F0CC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 27187                           
 27188                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27189  018B58  0012               	return		;funcret
 27190  018B5A                     __end_of_ADCC_Initialize:
 27191                           	opt callstack 0
 27192                           
 27193 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 27194 ;; Defined at:
 27195 ;;		line 336 in file "mcc_generated_files/adcc.c"
 27196 ;; Parameters:    Size  Location     Type
 27197 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27198 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 27199 ;; Auto vars:     Size  Location     Type
 27200 ;;		None
 27201 ;; Return value:  Size  Location     Type
 27202 ;;                  1  [STACK] void 
 27203 ;; Registers used:
 27204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27205 ;; Tracked objects:
 27206 ;;		On entry : 0/0
 27207 ;;		On exit  : 0/0
 27208 ;;		Unchanged: 0/0
 27209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27214 ;;Total ram usage:        0 bytes
 27215 ;; Hardware stack levels used:    1
 27216 ;; Hardware stack levels required when called:   15
 27217 ;; This function calls:
 27218 ;;		Nothing
 27219 ;; This function is called by:
 27220 ;;		_ADCC_Initialize
 27221 ;;		_start_adc_scan
 27222 ;; This function uses a reentrant model
 27223 ;;
 27224                           
 27225                           	psect	text124
 27226  01986E                     __ptext124:
 27227                           	opt callstack 0
 27228  01986E                     _ADCC_SetADTIInterruptHandler:
 27229                           	opt callstack 14
 27230                           
 27231                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 27232                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27233                           
 27234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27235                           ;incstack = 0
 27236  01986E  50E1               	movf	fsr1l,w,c
 27237  019870  0FFD               	addlw	-3
 27238  019872  6ED9               	movwf	fsr2l,c
 27239  019874  50E2               	movf	fsr1h,w,c
 27240  019876  6EDA               	movwf	fsr2h,c
 27241  019878  0EFF               	movlw	255
 27242  01987A  22DA               	addwfc	fsr2h,f,c
 27243  01987C  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 27244  019882  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 27245  019888  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 27246                           
 27247                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 27248  01988E  52E5               	movf	postdec1,f,c
 27249  019890  52E5               	movf	postdec1,f,c
 27250  019892  52E5               	movf	postdec1,f,c
 27251  019894  0012               	return		;funcret
 27252  019896                     __end_of_ADCC_SetADTIInterruptHandler:
 27253                           	opt callstack 0
 27254                           
 27255 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 27256 ;; Defined at:
 27257 ;;		line 323 in file "mcc_generated_files/adcc.c"
 27258 ;; Parameters:    Size  Location     Type
 27259 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27260 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 27261 ;; Auto vars:     Size  Location     Type
 27262 ;;		None
 27263 ;; Return value:  Size  Location     Type
 27264 ;;                  1  [STACK] void 
 27265 ;; Registers used:
 27266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27267 ;; Tracked objects:
 27268 ;;		On entry : 6/0
 27269 ;;		On exit  : 0/0
 27270 ;;		Unchanged: 0/0
 27271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27276 ;;Total ram usage:        0 bytes
 27277 ;; Hardware stack levels used:    1
 27278 ;; Hardware stack levels required when called:   15
 27279 ;; This function calls:
 27280 ;;		Nothing
 27281 ;; This function is called by:
 27282 ;;		_ADCC_Initialize
 27283 ;;		_start_adc_scan
 27284 ;; This function uses a reentrant model
 27285 ;;
 27286                           
 27287                           	psect	text125
 27288  019896                     __ptext125:
 27289                           	opt callstack 0
 27290  019896                     _ADCC_SetADIInterruptHandler:
 27291                           	opt callstack 14
 27292                           
 27293                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 27294                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27295                           
 27296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27297                           ;incstack = 0
 27298  019896  50E1               	movf	fsr1l,w,c
 27299  019898  0FFD               	addlw	-3
 27300  01989A  6ED9               	movwf	fsr2l,c
 27301  01989C  50E2               	movf	fsr1h,w,c
 27302  01989E  6EDA               	movwf	fsr2h,c
 27303  0198A0  0EFF               	movlw	255
 27304  0198A2  22DA               	addwfc	fsr2h,f,c
 27305  0198A4  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 27306  0198AA  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 27307  0198B0  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 27308                           
 27309                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27310  0198B6  52E5               	movf	postdec1,f,c
 27311  0198B8  52E5               	movf	postdec1,f,c
 27312  0198BA  52E5               	movf	postdec1,f,c
 27313  0198BC  0012               	return		;funcret
 27314  0198BE                     __end_of_ADCC_SetADIInterruptHandler:
 27315                           	opt callstack 0
 27316                           
 27317 ;; *************** function _INT1_ISR *****************
 27318 ;; Defined at:
 27319 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 27320 ;; Parameters:    Size  Location     Type
 27321 ;;		None
 27322 ;; Auto vars:     Size  Location     Type
 27323 ;;		None
 27324 ;; Return value:  Size  Location     Type
 27325 ;;                  1    wreg      void 
 27326 ;; Registers used:
 27327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 27328 ;; Tracked objects:
 27329 ;;		On entry : 0/0
 27330 ;;		On exit  : 0/0
 27331 ;;		Unchanged: 0/0
 27332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27335 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27337 ;;Total ram usage:        4 bytes
 27338 ;; Hardware stack levels used:    1
 27339 ;; Hardware stack levels required when called:    5
 27340 ;; This function calls:
 27341 ;;		_INT1_CallBack
 27342 ;; This function is called by:
 27343 ;;		Interrupt level 1
 27344 ;; This function uses a non-reentrant model
 27345 ;;
 27346                           
 27347                           	psect	text126
 27348  01937C                     __ptext126:
 27349                           	opt callstack 0
 27350  01937C                     _INT1_ISR:
 27351                           	opt callstack 12
 27352                           
 27353                           ;incstack = 0
 27354  01937C  006F FF60  F03E    	movff	status,??_INT1_ISR
 27355  019382  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 27356  019388  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 27357  01938E  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 27358  019394  EE16  F061         	lfsr	1,___intlo_sp
 27359                           
 27360                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 27361  019398  0139               	movlb	57	; () banked
 27362  01939A  91A5               	bcf	165,0,b	;volatile
 27363                           
 27364                           ; BSR set to: 57
 27365                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 27366  01939C  ECD4  F0CC         	call	_INT1_CallBack	;wreg free
 27367  0193A0  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 27368  0193A6  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 27369  0193AC  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 27370  0193B2  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 27371  0193B8  0011               	retfie		f
 27372  0193BA                     __end_of_INT1_ISR:
 27373                           	opt callstack 0
 27374                           
 27375 ;; *************** function _INT1_CallBack *****************
 27376 ;; Defined at:
 27377 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 27378 ;; Parameters:    Size  Location     Type
 27379 ;;		None
 27380 ;; Auto vars:     Size  Location     Type
 27381 ;;		None
 27382 ;; Return value:  Size  Location     Type
 27383 ;;                  1  [STACK] void 
 27384 ;; Registers used:
 27385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 27386 ;; Tracked objects:
 27387 ;;		On entry : 3F/39
 27388 ;;		On exit  : 0/0
 27389 ;;		Unchanged: 0/0
 27390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27395 ;;Total ram usage:        0 bytes
 27396 ;; Hardware stack levels used:    1
 27397 ;; Hardware stack levels required when called:    4
 27398 ;; This function calls:
 27399 ;;		Absolute function
 27400 ;;		_INT1_DefaultInterruptHandler
 27401 ;;		_switch_handler
 27402 ;; This function is called by:
 27403 ;;		_INT1_ISR
 27404 ;; This function uses a reentrant model
 27405 ;;
 27406                           
 27407                           	psect	text127
 27408  0199A8                     __ptext127:
 27409                           	opt callstack 0
 27410  0199A8                     _INT1_CallBack:
 27411                           	opt callstack 12
 27412                           
 27413                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 27414                           
 27415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27416                           ;incstack = 0
 27417  0199A8  0100               	movlb	0	; () banked
 27418  0199AA  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 27419  0199AC  11C2               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 27420  0199AE  11C3               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 27421  0199B0  B4D8               	btfsc	status,2,c
 27422  0199B2  0012               	return	
 27423                           
 27424                           ; BSR set to: 0
 27425                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 27426  0199B4  D801               	call	u875_28
 27427  0199B6  0012               	return	
 27428  0199B8                     u875_28:
 27429  0199B8  0005               	push	
 27430  0199BA  6EFA               	movwf	pclath,c
 27431  0199BC  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 27432  0199BE  6EFD               	movwf	tosl,c
 27433  0199C0  51C2               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 27434  0199C2  6EFE               	movwf	tosh,c
 27435  0199C4  51C3               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 27436  0199C6  6EFF               	movwf	tosu,c
 27437  0199C8  50FA               	movf	pclath,w,c
 27438  0199CA  0012               	return		;indir
 27439  0199CC                     __end_of_INT1_CallBack:
 27440                           	opt callstack 0
 27441                           
 27442 ;; *************** function _INT1_DefaultInterruptHandler *****************
 27443 ;; Defined at:
 27444 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 27445 ;; Parameters:    Size  Location     Type
 27446 ;;		None
 27447 ;; Auto vars:     Size  Location     Type
 27448 ;;		None
 27449 ;; Return value:  Size  Location     Type
 27450 ;;                  1  [STACK] void 
 27451 ;; Registers used:
 27452 ;;		None
 27453 ;; Tracked objects:
 27454 ;;		On entry : 3F/0
 27455 ;;		On exit  : 0/0
 27456 ;;		Unchanged: 0/0
 27457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27462 ;;Total ram usage:        0 bytes
 27463 ;; Hardware stack levels used:    1
 27464 ;; Hardware stack levels required when called:    3
 27465 ;; This function calls:
 27466 ;;		Nothing
 27467 ;; This function is called by:
 27468 ;;		_EXT_INT_Initialize
 27469 ;;		_INT1_CallBack
 27470 ;; This function uses a reentrant model
 27471 ;;
 27472                           
 27473                           	psect	text128
 27474  019D0A                     __ptext128:
 27475                           	opt callstack 0
 27476  019D0A                     _INT1_DefaultInterruptHandler:
 27477                           	opt callstack 12
 27478                           
 27479                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27480                           
 27481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27482                           ;incstack = 0
 27483  019D0A  0012               	return		;funcret
 27484  019D0C                     __end_of_INT1_DefaultInterruptHandler:
 27485                           	opt callstack 0
 27486                           
 27487 ;; *************** function _switch_handler *****************
 27488 ;; Defined at:
 27489 ;;		line 58 in file "dio.c"
 27490 ;; Parameters:    Size  Location     Type
 27491 ;;		None
 27492 ;; Auto vars:     Size  Location     Type
 27493 ;;  i               1  [STACK] unsigned char 
 27494 ;;  sw_value        1  [STACK] unsigned char 
 27495 ;; Return value:  Size  Location     Type
 27496 ;;                  1  [STACK] void 
 27497 ;; Registers used:
 27498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 27499 ;; Tracked objects:
 27500 ;;		On entry : 3F/0
 27501 ;;		On exit  : 0/0
 27502 ;;		Unchanged: 0/0
 27503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27508 ;;Total ram usage:        0 bytes
 27509 ;; Hardware stack levels used:    1
 27510 ;; Hardware stack levels required when called:    3
 27511 ;; This function calls:
 27512 ;;		Nothing
 27513 ;; This function is called by:
 27514 ;;		_start_switch_handler
 27515 ;;		_INT1_CallBack
 27516 ;; This function uses a reentrant model
 27517 ;;
 27518                           
 27519                           	psect	text129
 27520  017586                     __ptext129:
 27521                           	opt callstack 0
 27522  017586                     _switch_handler:
 27523                           	opt callstack 0
 27524                           
 27525                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27526  017586  52E6               	movf	postinc1,f,c
 27527  017588  52E6               	movf	postinc1,f,c
 27528                           
 27529                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 27530                           ;stkvar	_i @ sp[(-2)+0]
 27531                           
 27532                           ;incstack = 0
 27533  01758A  0EFE               	movlw	-2
 27534  01758C  6AE3               	clrf	plusw1,c
 27535  01758E  9EBD               	bcf	189,7,c	;volatile
 27536                           
 27537                           ;dio.c: 72:  __nop();
 27538  017590  F000               	nop	
 27539                           
 27540                           ;dio.c: 73:  __nop();
 27541  017592  F000               	nop	
 27542                           
 27543                           ;dio.c: 74:  __nop();
 27544  017594  F000               	nop	
 27545  017596  D019               	goto	l9514
 27546  017598                     l9502:
 27547                           
 27548                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 27549  017598  A6CF               	btfss	207,3,c	;volatile
 27550  01759A  D011               	goto	u853_20
 27551  01759C  D00D               	goto	u853_21
 27552  01759E                     u850_28:
 27553                           
 27554                           ;stkvar	_sw_value @ sp[(-2)+1]
 27555  01759E  0EFF               	movlw	-1
 27556  0175A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27557                           
 27558                           ;dio.c: 80:    break;
 27559  0175A6  D027               	goto	l9516
 27560  0175A8                     l9504:
 27561                           
 27562                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 27563  0175A8  A4CF               	btfss	207,2,c	;volatile
 27564  0175AA  D009               	goto	u853_20
 27565  0175AC  D005               	goto	u853_21
 27566  0175AE                     l9506:
 27567                           
 27568                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 27569  0175AE  A2CF               	btfss	207,1,c	;volatile
 27570  0175B0  D006               	goto	u853_20
 27571  0175B2  D002               	goto	u853_21
 27572  0175B4                     l9508:
 27573                           
 27574                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 27575  0175B4  A0CF               	btfss	207,0,c	;volatile
 27576  0175B6  D003               	goto	u853_20
 27577  0175B8                     u853_21:
 27578  0175B8  6A0C               	clrf	(btemp+11)^0,c
 27579  0175BA  2A0C               	incf	(btemp+11)^0,f,c
 27580  0175BC  D7F0               	goto	u850_28
 27581  0175BE                     u853_20:
 27582  0175BE  6A0C               	clrf	(btemp+11)^0,c
 27583  0175C0  D7EE               	goto	u850_28
 27584  0175C2                     l9510:
 27585                           
 27586                           ;dio.c: 91:    sw_value = 1;
 27587                           ;stkvar	_sw_value @ sp[(-2)+1]
 27588  0175C2  0EFF               	movlw	-1
 27589  0175C4  6AE3               	clrf	plusw1,c
 27590  0175C6  2AE3               	incf	plusw1,f,c
 27591                           
 27592                           ;dio.c: 92:    break;
 27593  0175C8  D016               	goto	l9516
 27594  0175CA                     l9514:
 27595                           
 27596                           ;stkvar	_i @ sp[(-2)+0]
 27597  0175CA  0EFE               	movlw	-2
 27598  0175CC  50E3               	movf	plusw1,w,c
 27599  0175CE  6E0B               	movwf	(btemp+10)^0,c
 27600  0175D0  6A0C               	clrf	(btemp+11)^0,c
 27601                           
 27602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27603                           ; Switch size 1, requested type "simple"
 27604                           ; Number of cases is 1, Range of values is 0 to 0
 27605                           ; switch strategies available:
 27606                           ; Name         Instructions Cycles
 27607                           ; simple_byte            4     3 (average)
 27608                           ;	Chosen strategy is simple_byte
 27609  0175D2  500C               	movf	(btemp+11)^0,w,c
 27610  0175D4  0A00               	xorlw	0	; case 0
 27611  0175D6  A4D8               	btfss	status,2,c
 27612  0175D8  D7F4               	goto	l9510
 27613                           
 27614                           ; Switch size 1, requested type "simple"
 27615                           ; Number of cases is 4, Range of values is 0 to 3
 27616                           ; switch strategies available:
 27617                           ; Name         Instructions Cycles
 27618                           ; simple_byte           13     7 (average)
 27619                           ;	Chosen strategy is simple_byte
 27620  0175DA  500B               	movf	(btemp+10)^0,w,c
 27621  0175DC  0A00               	xorlw	0	; case 0
 27622  0175DE  B4D8               	btfsc	status,2,c
 27623  0175E0  D7E9               	goto	l9508
 27624  0175E2  0A01               	xorlw	1	; case 1
 27625  0175E4  B4D8               	btfsc	status,2,c
 27626  0175E6  D7E3               	goto	l9506
 27627  0175E8  0A03               	xorlw	3	; case 2
 27628  0175EA  B4D8               	btfsc	status,2,c
 27629  0175EC  D7DD               	goto	l9504
 27630  0175EE  0A01               	xorlw	1	; case 3
 27631  0175F0  B4D8               	btfsc	status,2,c
 27632  0175F2  D7D2               	goto	l9502
 27633  0175F4  D7E6               	goto	l9510
 27634  0175F6                     l9516:
 27635                           
 27636                           ;dio.c: 96:   if (sw_value) {
 27637                           ;stkvar	_sw_value @ sp[(-2)+1]
 27638  0175F6  0EFF               	movlw	-1
 27639  0175F8  50E3               	movf	plusw1,w,c
 27640  0175FA  B4D8               	btfsc	status,2,c
 27641  0175FC  D014               	goto	l9522
 27642                           
 27643                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 27644                           ;stkvar	_i @ sp[(-2)+0]
 27645  0175FE  0EFE               	movlw	-2
 27646  017600  50E3               	movf	plusw1,w,c
 27647  017602  0D05               	mullw	5
 27648  017604  50F3               	movf	243,w,c
 27649  017606  0F60               	addlw	low _S
 27650  017608  6ED9               	movwf	fsr2l,c
 27651  01760A  6ADA               	clrf	fsr2h,c
 27652  01760C  04DE               	decf	postinc2,w,c
 27653  01760E  A4D8               	btfss	status,2,c
 27654  017610  D041               	goto	l9530
 27655                           
 27656                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 27657                           ;stkvar	_i @ sp[(-2)+0]
 27658  017612  0EFE               	movlw	-2
 27659  017614  50E3               	movf	plusw1,w,c
 27660  017616  0D05               	mullw	5
 27661  017618  50F3               	movf	243,w,c
 27662  01761A  0F60               	addlw	low _S
 27663  01761C  6ED9               	movwf	fsr2l,c
 27664  01761E  6ADA               	clrf	fsr2h,c
 27665  017620  0E00               	movlw	0
 27666  017622  6EDF               	movwf	indf2,c
 27667  017624  D037               	goto	l9530
 27668  017626                     l9522:
 27669                           
 27670                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 27671                           ;stkvar	_i @ sp[(-2)+0]
 27672  017626  0EFE               	movlw	-2
 27673  017628  50E3               	movf	plusw1,w,c
 27674  01762A  0D05               	mullw	5
 27675  01762C  50F3               	movf	243,w,c
 27676  01762E  0F60               	addlw	low _S
 27677  017630  6ED9               	movwf	fsr2l,c
 27678  017632  6ADA               	clrf	fsr2h,c
 27679  017634  50DF               	movf	indf2,w,c
 27680  017636  A4D8               	btfss	status,2,c
 27681  017638  D02D               	goto	l9530
 27682                           
 27683                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 27684                           ;stkvar	_i @ sp[(-2)+0]
 27685  01763A  0EFE               	movlw	-2
 27686  01763C  50E3               	movf	plusw1,w,c
 27687  01763E  0D05               	mullw	5
 27688  017640  50F3               	movf	243,w,c
 27689  017642  0F60               	addlw	low _S
 27690  017644  6ED9               	movwf	fsr2l,c
 27691  017646  6ADA               	clrf	fsr2h,c
 27692  017648  0E01               	movlw	1
 27693  01764A  6EDF               	movwf	indf2,c
 27694                           
 27695                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 27696  01764C  EE20  F2B8         	lfsr	2,_V+184	;volatile
 27697                           
 27698                           ;stkvar	_i @ sp[(-2)+0]
 27699  017650  0EFE               	movlw	-2
 27700  017652  50E3               	movf	plusw1,w,c
 27701  017654  0D05               	mullw	5
 27702  017656  50F3               	movf	243,w,c
 27703  017658  0F61               	addlw	low (_S+1)
 27704  01765A  6EE9               	movwf	fsr0l,c
 27705  01765C  6AEA               	clrf	fsr0h,c
 27706  01765E  006F FF7B FFEE     	movff	postinc2,postinc0
 27707  017664  006F FF7B FFEE     	movff	postinc2,postinc0
 27708  01766A  006F FF7B FFEE     	movff	postinc2,postinc0
 27709  017670  006F FF7B FFEE     	movff	postinc2,postinc0
 27710                           
 27711                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 27712                           ;stkvar	_i @ sp[(-2)+0]
 27713  017676  0EFE               	movlw	-2
 27714  017678  006F FF8C  F00C    	movff	plusw1,btemp+11
 27715  01767E  0E01               	movlw	1
 27716  017680  6E0B               	movwf	(btemp+10)^0,c
 27717  017682  2A0C               	incf	(btemp+11)^0,f,c
 27718  017684  D002               	goto	u857_24
 27719  017686                     u857_25:
 27720  017686  90D8               	bcf	status,0,c
 27721  017688  360B               	rlcf	(btemp+10)^0,f,c
 27722  01768A                     u857_24:
 27723  01768A  2E0C               	decfsz	(btemp+11)^0,f,c
 27724  01768C  D7FC               	goto	u857_25
 27725  01768E  500B               	movf	(btemp+10)^0,w,c
 27726  017690  0100               	movlb	0	; () banked
 27727  017692  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 27728  017694                     l9530:
 27729                           
 27730                           ;dio.c: 107:  } while (++i < 4);
 27731                           ;stkvar	_i @ sp[(-2)+0]
 27732  017694  0EFE               	movlw	-2
 27733  017696  2AE3               	incf	plusw1,f,c
 27734  017698  0EFE               	movlw	-2
 27735  01769A  006F FF8C  F001    	movff	plusw1,btemp
 27736  0176A0  0E03               	movlw	3
 27737  0176A2  6401               	cpfsgt	btemp^0,c
 27738  0176A4  D792               	goto	l9514
 27739                           
 27740                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 27741  0176A6  8EBD               	bsf	189,7,c	;volatile
 27742                           
 27743                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27744  0176A8  52E5               	movf	postdec1,f,c
 27745  0176AA  52E5               	movf	postdec1,f,c
 27746  0176AC  0012               	return		;funcret
 27747  0176AE                     __end_of_switch_handler:
 27748                           	opt callstack 0
 27749                           
 27750 ;; *************** function _TMR5_ISR *****************
 27751 ;; Defined at:
 27752 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 27753 ;; Parameters:    Size  Location     Type
 27754 ;;		None
 27755 ;; Auto vars:     Size  Location     Type
 27756 ;;		None
 27757 ;; Return value:  Size  Location     Type
 27758 ;;                  1    wreg      void 
 27759 ;; Registers used:
 27760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 27761 ;; Tracked objects:
 27762 ;;		On entry : 0/0
 27763 ;;		On exit  : 0/0
 27764 ;;		Unchanged: 0/0
 27765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27770 ;;Total ram usage:        4 bytes
 27771 ;; Hardware stack levels used:    1
 27772 ;; Hardware stack levels required when called:    5
 27773 ;; This function calls:
 27774 ;;		_TMR5_CallBack
 27775 ;;		_TMR5_WriteTimer
 27776 ;; This function is called by:
 27777 ;;		Interrupt level 1
 27778 ;; This function uses a non-reentrant model
 27779 ;;
 27780                           
 27781                           	psect	text130
 27782  018E68                     __ptext130:
 27783                           	opt callstack 0
 27784  018E68                     _TMR5_ISR:
 27785                           	opt callstack 12
 27786                           
 27787                           ;incstack = 0
 27788  018E68  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 27789  018E6E  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 27790  018E74  EE16  F061         	lfsr	1,___intlo_sp
 27791                           
 27792                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 27793  018E78  0139               	movlb	57	; () banked
 27794  018E7A  9DA8               	bcf	168,6,b	;volatile
 27795                           
 27796                           ; BSR set to: 57
 27797                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 27798  018E7C  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 27799  018E82  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 27800  018E88  EC7E  F0C9         	call	_TMR5_WriteTimer	;wreg free
 27801                           
 27802                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 27803  018E8C  0102               	movlb	2	; () banked
 27804  018E8E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 27805  018E90  6E42               	movwf	??_TMR5_ISR^0,c
 27806  018E92  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 27807  018E94  0E05               	movlw	5
 27808  018E96  2642               	addwf	??_TMR5_ISR^0,f,c
 27809  018E98  0E00               	movlw	0
 27810  018E9A  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 27811  018E9C  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 27812  018E9E  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 27813  018EA0  5042               	movf	??_TMR5_ISR^0,w,c
 27814  018EA2  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 27815  018EA4  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 27816  018EA6  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 27817  018EA8  A0D8               	btfss	status,0,c
 27818  018EAA  D004               	goto	i1l1017
 27819                           
 27820                           ; BSR set to: 2
 27821                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 27822  018EAC  ECE6  F0CC         	call	_TMR5_CallBack	;wreg free
 27823                           
 27824                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 27825  018EB0  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 27826  018EB2  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 27827  018EB4                     i1l1017:
 27828  018EB4  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 27829  018EBA  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 27830  018EC0  0011               	retfie		f
 27831  018EC2                     __end_of_TMR5_ISR:
 27832                           	opt callstack 0
 27833                           
 27834 ;; *************** function _TMR5_WriteTimer *****************
 27835 ;; Defined at:
 27836 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 27837 ;; Parameters:    Size  Location     Type
 27838 ;;  timerVal        2  [STACK] unsigned short 
 27839 ;; Auto vars:     Size  Location     Type
 27840 ;;		None
 27841 ;; Return value:  Size  Location     Type
 27842 ;;                  1  [STACK] void 
 27843 ;; Registers used:
 27844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27845 ;; Tracked objects:
 27846 ;;		On entry : 3F/39
 27847 ;;		On exit  : 0/0
 27848 ;;		Unchanged: 0/0
 27849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27854 ;;Total ram usage:        0 bytes
 27855 ;; Hardware stack levels used:    1
 27856 ;; Hardware stack levels required when called:    3
 27857 ;; This function calls:
 27858 ;;		Nothing
 27859 ;; This function is called by:
 27860 ;;		_TMR5_ISR
 27861 ;; This function uses a reentrant model
 27862 ;;
 27863                           
 27864                           	psect	text131
 27865  0192FC                     __ptext131:
 27866                           	opt callstack 0
 27867  0192FC                     _TMR5_WriteTimer:
 27868                           	opt callstack 13
 27869                           
 27870                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 27871                           
 27872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27873                           ;incstack = 0
 27874  0192FC  A49A               	btfss	154,2,c	;volatile
 27875  0192FE  D00F               	goto	l9694
 27876                           
 27877                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 27878  019300  909A               	bcf	154,0,c	;volatile
 27879                           
 27880                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 27881                           ;stkvar	_timerVal @ sp[(0)+-2]
 27882  019302  0EFF               	movlw	255
 27883  019304  24E1               	addwf	fsr1l,w,c
 27884  019306  6ED9               	movwf	fsr2l,c
 27885  019308  0EFF               	movlw	255
 27886  01930A  20E2               	addwfc	fsr1h,w,c
 27887  01930C  6EDA               	movwf	fsr2h,c
 27888  01930E  50DF               	movf	indf2,w,c
 27889  019310  6E99               	movwf	153,c	;volatile
 27890                           
 27891                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 27892                           ;stkvar	_timerVal @ sp[(0)+-2]
 27893  019312  0EFE               	movlw	-2
 27894  019314  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27895                           
 27896                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 27897  01931A  809A               	bsf	154,0,c	;volatile
 27898                           
 27899                           ;mcc_generated_files/tmr5.c: 142:  } else {
 27900  01931C  D00C               	goto	l1000
 27901  01931E                     l9694:
 27902                           
 27903                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 27904                           ;stkvar	_timerVal @ sp[(0)+-2]
 27905  01931E  0EFF               	movlw	255
 27906  019320  24E1               	addwf	fsr1l,w,c
 27907  019322  6ED9               	movwf	fsr2l,c
 27908  019324  0EFF               	movlw	255
 27909  019326  20E2               	addwfc	fsr1h,w,c
 27910  019328  6EDA               	movwf	fsr2h,c
 27911  01932A  50DF               	movf	indf2,w,c
 27912  01932C  6E99               	movwf	153,c	;volatile
 27913                           
 27914                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 27915                           ;stkvar	_timerVal @ sp[(0)+-2]
 27916  01932E  0EFE               	movlw	-2
 27917  019330  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27918  019336                     l1000:
 27919                           
 27920                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27921  019336  52E5               	movf	postdec1,f,c
 27922  019338  52E5               	movf	postdec1,f,c
 27923  01933A  0012               	return		;funcret
 27924  01933C                     __end_of_TMR5_WriteTimer:
 27925                           	opt callstack 0
 27926                           
 27927 ;; *************** function _TMR5_CallBack *****************
 27928 ;; Defined at:
 27929 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 27930 ;; Parameters:    Size  Location     Type
 27931 ;;		None
 27932 ;; Auto vars:     Size  Location     Type
 27933 ;;		None
 27934 ;; Return value:  Size  Location     Type
 27935 ;;                  1  [STACK] void 
 27936 ;; Registers used:
 27937 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 27938 ;; Tracked objects:
 27939 ;;		On entry : 3F/2
 27940 ;;		On exit  : 0/0
 27941 ;;		Unchanged: 0/0
 27942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27947 ;;Total ram usage:        0 bytes
 27948 ;; Hardware stack levels used:    1
 27949 ;; Hardware stack levels required when called:    4
 27950 ;; This function calls:
 27951 ;;		Absolute function
 27952 ;;		_TMR5_DefaultInterruptHandler
 27953 ;; This function is called by:
 27954 ;;		_TMR5_ISR
 27955 ;; This function uses a reentrant model
 27956 ;;
 27957                           
 27958                           	psect	text132
 27959  0199CC                     __ptext132:
 27960                           	opt callstack 0
 27961  0199CC                     _TMR5_CallBack:
 27962                           	opt callstack 12
 27963                           
 27964                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 27965                           
 27966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27967                           ;incstack = 0
 27968  0199CC  0100               	movlb	0	; () banked
 27969  0199CE  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27970  0199D0  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27971  0199D2  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 27972  0199D4  B4D8               	btfsc	status,2,c
 27973  0199D6  0012               	return	
 27974                           
 27975                           ; BSR set to: 0
 27976                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 27977  0199D8  D801               	call	u884_28
 27978  0199DA  0012               	return	
 27979  0199DC                     u884_28:
 27980  0199DC  0005               	push	
 27981  0199DE  6EFA               	movwf	pclath,c
 27982  0199E0  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27983  0199E2  6EFD               	movwf	tosl,c
 27984  0199E4  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27985  0199E6  6EFE               	movwf	tosh,c
 27986  0199E8  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 27987  0199EA  6EFF               	movwf	tosu,c
 27988  0199EC  50FA               	movf	pclath,w,c
 27989  0199EE  0012               	return		;indir
 27990  0199F0                     __end_of_TMR5_CallBack:
 27991                           	opt callstack 0
 27992                           
 27993 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 27994 ;; Defined at:
 27995 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 27996 ;; Parameters:    Size  Location     Type
 27997 ;;		None
 27998 ;; Auto vars:     Size  Location     Type
 27999 ;;		None
 28000 ;; Return value:  Size  Location     Type
 28001 ;;                  1  [STACK] void 
 28002 ;; Registers used:
 28003 ;;		wreg, status,2, status,0, btemp+11
 28004 ;; Tracked objects:
 28005 ;;		On entry : 3F/0
 28006 ;;		On exit  : 3F/2
 28007 ;;		Unchanged: 0/0
 28008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28013 ;;Total ram usage:        0 bytes
 28014 ;; Hardware stack levels used:    1
 28015 ;; Hardware stack levels required when called:    3
 28016 ;; This function calls:
 28017 ;;		Nothing
 28018 ;; This function is called by:
 28019 ;;		_TMR5_Initialize
 28020 ;;		_TMR5_CallBack
 28021 ;; This function uses a reentrant model
 28022 ;;
 28023                           
 28024                           	psect	text133
 28025  0198BE                     __ptext133:
 28026                           	opt callstack 0
 28027  0198BE                     _TMR5_DefaultInterruptHandler:
 28028                           	opt callstack 12
 28029                           
 28030                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 28031                           
 28032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28033                           ;incstack = 0
 28034  0198BE  A0BE               	btfss	190,0,c	;volatile
 28035  0198C0  D002               	goto	u827_20
 28036  0198C2  0E01               	movlw	1
 28037  0198C4  D001               	goto	u827_26
 28038  0198C6                     u827_20:
 28039  0198C6  0E00               	movlw	0
 28040  0198C8                     u827_26:
 28041  0198C8  0AFF               	xorlw	255
 28042  0198CA  6E0C               	movwf	(btemp+11)^0,c
 28043  0198CC  50BE               	movf	190,w,c	;volatile
 28044  0198CE  180C               	xorwf	(btemp+11)^0,w,c
 28045  0198D0  0BFE               	andlw	-2
 28046  0198D2  180C               	xorwf	(btemp+11)^0,w,c
 28047  0198D4  6EBE               	movwf	190,c	;volatile
 28048                           
 28049                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 28050  0198D6  0E01               	movlw	1
 28051  0198D8  0102               	movlb	2	; () banked
 28052  0198DA  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 28053  0198DC  0E00               	movlw	0
 28054  0198DE  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 28055  0198E0  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 28056  0198E2  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 28057                           
 28058                           ; BSR set to: 2
 28059                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28060  0198E4  0012               	return		;funcret
 28061  0198E6                     __end_of_TMR5_DefaultInterruptHandler:
 28062                           	opt callstack 0
 28063                           
 28064 ;; *************** function _TMR3_ISR *****************
 28065 ;; Defined at:
 28066 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 28067 ;; Parameters:    Size  Location     Type
 28068 ;;		None
 28069 ;; Auto vars:     Size  Location     Type
 28070 ;;		None
 28071 ;; Return value:  Size  Location     Type
 28072 ;;                  1    wreg      void 
 28073 ;; Registers used:
 28074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 28075 ;; Tracked objects:
 28076 ;;		On entry : 0/0
 28077 ;;		On exit  : 3F/0
 28078 ;;		Unchanged: 0/0
 28079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28082 ;;      Temps:          0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28083 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28084 ;;Total ram usage:       25 bytes
 28085 ;; Hardware stack levels used:    1
 28086 ;; Hardware stack levels required when called:   14
 28087 ;; This function calls:
 28088 ;;		_TMR3_CallBack
 28089 ;;		_TMR3_WriteTimer
 28090 ;; This function is called by:
 28091 ;;		Interrupt level 1
 28092 ;; This function uses a non-reentrant model
 28093 ;;
 28094                           
 28095                           	psect	text134
 28096  0171A8                     __ptext134:
 28097                           	opt callstack 0
 28098  0171A8                     _TMR3_ISR:
 28099                           	opt callstack 3
 28100                           
 28101                           ; BSR set to: 2
 28102                           ;incstack = 0
 28103  0171A8  006F FF60  F2BC    	movff	status,??_TMR3_ISR
 28104  0171AE  006F FFD8  F2BD    	movff	tblptrl,??_TMR3_ISR+1
 28105  0171B4  006F FFDC  F2BE    	movff	tblptrh,??_TMR3_ISR+2
 28106  0171BA  006F FFE0  F2BF    	movff	tblptru,??_TMR3_ISR+3
 28107  0171C0  006F FFD4  F2C0    	movff	tablat,??_TMR3_ISR+4
 28108  0171C6  0060  F004  F2C1   	movff	btemp,??_TMR3_ISR+5
 28109  0171CC  0060  F008  F2C2   	movff	btemp+1,??_TMR3_ISR+6
 28110  0171D2  0060  F00C  F2C3   	movff	btemp+2,??_TMR3_ISR+7
 28111  0171D8  0060  F010  F2C4   	movff	btemp+3,??_TMR3_ISR+8
 28112  0171DE  0060  F014  F2C5   	movff	btemp+4,??_TMR3_ISR+9
 28113  0171E4  0060  F018  F2C6   	movff	btemp+5,??_TMR3_ISR+10
 28114  0171EA  0060  F01C  F2C7   	movff	btemp+6,??_TMR3_ISR+11
 28115  0171F0  0060  F020  F2C8   	movff	btemp+7,??_TMR3_ISR+12
 28116  0171F6  0060  F024  F2C9   	movff	btemp+8,??_TMR3_ISR+13
 28117  0171FC  0060  F028  F2CA   	movff	btemp+9,??_TMR3_ISR+14
 28118  017202  0060  F02C  F2CB   	movff	btemp+10,??_TMR3_ISR+15
 28119  017208  0060  F030  F2CC   	movff	btemp+11,??_TMR3_ISR+16
 28120  01720E  0060  F044  F2CD   	movff	btemp+16,??_TMR3_ISR+17
 28121  017214  0060  F048  F2CE   	movff	btemp+17,??_TMR3_ISR+18
 28122  01721A  0060  F04C  F2CF   	movff	btemp+18,??_TMR3_ISR+19
 28123  017220  0060  F050  F2D0   	movff	btemp+19,??_TMR3_ISR+20
 28124  017226  0060  F054  F2D1   	movff	btemp+20,??_TMR3_ISR+21
 28125  01722C  0060  F058  F2D2   	movff	btemp+21,??_TMR3_ISR+22
 28126  017232  0060  F05C  F2D3   	movff	btemp+22,??_TMR3_ISR+23
 28127  017238  0060  F060  F2D4   	movff	btemp+23,??_TMR3_ISR+24
 28128  01723E  EE16  F061         	lfsr	1,___intlo_sp
 28129                           
 28130                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 28131  017242  0139               	movlb	57	; () banked
 28132  017244  9DA6               	bcf	166,6,b	;volatile
 28133                           
 28134                           ; BSR set to: 57
 28135                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 28136  017246  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 28137  01724C  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 28138  017252  EC9E  F0C9         	call	_TMR3_WriteTimer	;wreg free
 28139                           
 28140                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 28141  017256  0100               	movlb	0	; () banked
 28142  017258  4BC9               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 28143  01725A  2BCA               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 28144  01725C  51CA               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 28145  01725E  E104               	bnz	i1u1115_20
 28146  017260  0E28               	movlw	40
 28147  017262  5DC9               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 28148  017264  A0D8               	btfss	status,0,c
 28149  017266  D005               	goto	i1l1205
 28150  017268                     i1u1115_20:
 28151                           
 28152                           ; BSR set to: 0
 28153                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 28154  017268  ECF8  F0CC         	call	_TMR3_CallBack	;wreg free
 28155                           
 28156                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 28157  01726C  0100               	movlb	0	; () banked
 28158  01726E  6BC9               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 28159  017270  6BCA               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 28160  017272                     i1l1205:
 28161                           
 28162                           ; BSR set to: 0
 28163  017272  0060  FB50  F018   	movff	??_TMR3_ISR+24,btemp+23
 28164  017278  0060  FB4C  F017   	movff	??_TMR3_ISR+23,btemp+22
 28165  01727E  0060  FB48  F016   	movff	??_TMR3_ISR+22,btemp+21
 28166  017284  0060  FB44  F015   	movff	??_TMR3_ISR+21,btemp+20
 28167  01728A  0060  FB40  F014   	movff	??_TMR3_ISR+20,btemp+19
 28168  017290  0060  FB3C  F013   	movff	??_TMR3_ISR+19,btemp+18
 28169  017296  0060  FB38  F012   	movff	??_TMR3_ISR+18,btemp+17
 28170  01729C  0060  FB34  F011   	movff	??_TMR3_ISR+17,btemp+16
 28171  0172A2  0060  FB30  F00C   	movff	??_TMR3_ISR+16,btemp+11
 28172  0172A8  0060  FB2C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 28173  0172AE  0060  FB28  F00A   	movff	??_TMR3_ISR+14,btemp+9
 28174  0172B4  0060  FB24  F009   	movff	??_TMR3_ISR+13,btemp+8
 28175  0172BA  0060  FB20  F008   	movff	??_TMR3_ISR+12,btemp+7
 28176  0172C0  0060  FB1C  F007   	movff	??_TMR3_ISR+11,btemp+6
 28177  0172C6  0060  FB18  F006   	movff	??_TMR3_ISR+10,btemp+5
 28178  0172CC  0060  FB14  F005   	movff	??_TMR3_ISR+9,btemp+4
 28179  0172D2  0060  FB10  F004   	movff	??_TMR3_ISR+8,btemp+3
 28180  0172D8  0060  FB0C  F003   	movff	??_TMR3_ISR+7,btemp+2
 28181  0172DE  0060  FB08  F002   	movff	??_TMR3_ISR+6,btemp+1
 28182  0172E4  0060  FB04  F001   	movff	??_TMR3_ISR+5,btemp
 28183  0172EA  0060  FB03  FFF5   	movff	??_TMR3_ISR+4,tablat
 28184  0172F0  0060  FAFF  FFF8   	movff	??_TMR3_ISR+3,tblptru
 28185  0172F6  0060  FAFB  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 28186  0172FC  0060  FAF7  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 28187  017302  0060  FAF3  FFD8   	movff	??_TMR3_ISR,status
 28188  017308  0011               	retfie		f
 28189  01730A                     __end_of_TMR3_ISR:
 28190                           	opt callstack 0
 28191                           
 28192 ;; *************** function _TMR3_WriteTimer *****************
 28193 ;; Defined at:
 28194 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 28195 ;; Parameters:    Size  Location     Type
 28196 ;;  timerVal        2  [STACK] unsigned short 
 28197 ;; Auto vars:     Size  Location     Type
 28198 ;;		None
 28199 ;; Return value:  Size  Location     Type
 28200 ;;                  1  [STACK] void 
 28201 ;; Registers used:
 28202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28203 ;; Tracked objects:
 28204 ;;		On entry : 3F/39
 28205 ;;		On exit  : 0/0
 28206 ;;		Unchanged: 0/0
 28207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28212 ;;Total ram usage:        0 bytes
 28213 ;; Hardware stack levels used:    1
 28214 ;; Hardware stack levels required when called:    3
 28215 ;; This function calls:
 28216 ;;		Nothing
 28217 ;; This function is called by:
 28218 ;;		_TMR3_ISR
 28219 ;; This function uses a reentrant model
 28220 ;;
 28221                           
 28222                           	psect	text135
 28223  01933C                     __ptext135:
 28224                           	opt callstack 0
 28225  01933C                     _TMR3_WriteTimer:
 28226                           	opt callstack 13
 28227                           
 28228                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 28229                           
 28230                           ; BSR set to: 0
 28231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28232                           ;incstack = 0
 28233  01933C  A4A6               	btfss	166,2,c	;volatile
 28234  01933E  D00F               	goto	l9712
 28235                           
 28236                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 28237  019340  90A6               	bcf	166,0,c	;volatile
 28238                           
 28239                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 28240                           ;stkvar	_timerVal @ sp[(0)+-2]
 28241  019342  0EFF               	movlw	255
 28242  019344  24E1               	addwf	fsr1l,w,c
 28243  019346  6ED9               	movwf	fsr2l,c
 28244  019348  0EFF               	movlw	255
 28245  01934A  20E2               	addwfc	fsr1h,w,c
 28246  01934C  6EDA               	movwf	fsr2h,c
 28247  01934E  50DF               	movf	indf2,w,c
 28248  019350  6EA5               	movwf	165,c	;volatile
 28249                           
 28250                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 28251                           ;stkvar	_timerVal @ sp[(0)+-2]
 28252  019352  0EFE               	movlw	-2
 28253  019354  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 28254                           
 28255                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 28256  01935A  80A6               	bsf	166,0,c	;volatile
 28257                           
 28258                           ;mcc_generated_files/tmr3.c: 141:     }
 28259  01935C  D00C               	goto	l1188
 28260  01935E                     l9712:
 28261                           
 28262                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 28263                           ;stkvar	_timerVal @ sp[(0)+-2]
 28264  01935E  0EFF               	movlw	255
 28265  019360  24E1               	addwf	fsr1l,w,c
 28266  019362  6ED9               	movwf	fsr2l,c
 28267  019364  0EFF               	movlw	255
 28268  019366  20E2               	addwfc	fsr1h,w,c
 28269  019368  6EDA               	movwf	fsr2h,c
 28270  01936A  50DF               	movf	indf2,w,c
 28271  01936C  6EA5               	movwf	165,c	;volatile
 28272                           
 28273                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 28274                           ;stkvar	_timerVal @ sp[(0)+-2]
 28275  01936E  0EFE               	movlw	-2
 28276  019370  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 28277  019376                     l1188:
 28278                           
 28279                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 28280  019376  52E5               	movf	postdec1,f,c
 28281  019378  52E5               	movf	postdec1,f,c
 28282  01937A  0012               	return		;funcret
 28283  01937C                     __end_of_TMR3_WriteTimer:
 28284                           	opt callstack 0
 28285                           
 28286 ;; *************** function _TMR3_CallBack *****************
 28287 ;; Defined at:
 28288 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 28289 ;; Parameters:    Size  Location     Type
 28290 ;;		None
 28291 ;; Auto vars:     Size  Location     Type
 28292 ;;		None
 28293 ;; Return value:  Size  Location     Type
 28294 ;;                  1  [STACK] void 
 28295 ;; Registers used:
 28296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 28297 ;; Tracked objects:
 28298 ;;		On entry : 3F/0
 28299 ;;		On exit  : 0/0
 28300 ;;		Unchanged: 0/0
 28301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28306 ;;Total ram usage:        0 bytes
 28307 ;; Hardware stack levels used:    1
 28308 ;; Hardware stack levels required when called:   13
 28309 ;; This function calls:
 28310 ;;		Absolute function
 28311 ;;		_TMR3_DefaultInterruptHandler
 28312 ;;		_calc_bsoc
 28313 ;; This function is called by:
 28314 ;;		_TMR3_ISR
 28315 ;; This function uses a reentrant model
 28316 ;;
 28317                           
 28318                           	psect	text136
 28319  0199F0                     __ptext136:
 28320                           	opt callstack 0
 28321  0199F0                     _TMR3_CallBack:
 28322                           	opt callstack 3
 28323                           
 28324                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 28325                           
 28326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28327                           ;incstack = 0
 28328  0199F0  0100               	movlb	0	; () banked
 28329  0199F2  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 28330  0199F4  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 28331  0199F6  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 28332  0199F8  B4D8               	btfsc	status,2,c
 28333  0199FA  0012               	return	
 28334                           
 28335                           ; BSR set to: 0
 28336                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 28337  0199FC  D801               	call	u1090_28
 28338  0199FE  0012               	return	
 28339  019A00                     u1090_28:
 28340  019A00  0005               	push	
 28341  019A02  6EFA               	movwf	pclath,c
 28342  019A04  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 28343  019A06  6EFD               	movwf	tosl,c
 28344  019A08  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 28345  019A0A  6EFE               	movwf	tosh,c
 28346  019A0C  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 28347  019A0E  6EFF               	movwf	tosu,c
 28348  019A10  50FA               	movf	pclath,w,c
 28349  019A12  0012               	return		;indir
 28350  019A14                     __end_of_TMR3_CallBack:
 28351                           	opt callstack 0
 28352                           
 28353 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 28354 ;; Defined at:
 28355 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 28356 ;; Parameters:    Size  Location     Type
 28357 ;;		None
 28358 ;; Auto vars:     Size  Location     Type
 28359 ;;		None
 28360 ;; Return value:  Size  Location     Type
 28361 ;;                  1  [STACK] void 
 28362 ;; Registers used:
 28363 ;;		None
 28364 ;; Tracked objects:
 28365 ;;		On entry : 3F/0
 28366 ;;		On exit  : 0/0
 28367 ;;		Unchanged: 0/0
 28368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28373 ;;Total ram usage:        0 bytes
 28374 ;; Hardware stack levels used:    1
 28375 ;; Hardware stack levels required when called:    3
 28376 ;; This function calls:
 28377 ;;		Nothing
 28378 ;; This function is called by:
 28379 ;;		_TMR3_Initialize
 28380 ;;		_TMR3_CallBack
 28381 ;; This function uses a reentrant model
 28382 ;;
 28383                           
 28384                           	psect	text137
 28385  019D0C                     __ptext137:
 28386                           	opt callstack 0
 28387  019D0C                     _TMR3_DefaultInterruptHandler:
 28388                           	opt callstack 12
 28389                           
 28390                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28391                           
 28392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28393                           ;incstack = 0
 28394  019D0C  0012               	return		;funcret
 28395  019D0E                     __end_of_TMR3_DefaultInterruptHandler:
 28396                           	opt callstack 0
 28397                           
 28398 ;; *************** function _calc_bsoc *****************
 28399 ;; Defined at:
 28400 ;;		line 36 in file "bsoc.c"
 28401 ;; Parameters:    Size  Location     Type
 28402 ;;		None
 28403 ;; Auto vars:     Size  Location     Type
 28404 ;;  log_ptr         2  [STACK] PTR unsigned char 
 28405 ;;		 -> port_data(512), 
 28406 ;;  temp            2  [STACK] unsigned short 
 28407 ;; Return value:  Size  Location     Type
 28408 ;;                  1  [STACK] void 
 28409 ;; Registers used:
 28410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 28411 ;; Tracked objects:
 28412 ;;		On entry : 3F/0
 28413 ;;		On exit  : 3F/1
 28414 ;;		Unchanged: 0/0
 28415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28420 ;;Total ram usage:        0 bytes
 28421 ;; Hardware stack levels used:    1
 28422 ;; Hardware stack levels required when called:   12
 28423 ;; This function calls:
 28424 ;;		_Volts_to_SOC
 28425 ;;		___fladd
 28426 ;;		___fldiv
 28427 ;;		___flge
 28428 ;;		___flmul
 28429 ;;		___flneg
 28430 ;;		___fltol
 28431 ;;		___xxtofl
 28432 ;;		_port_data_dma_ptr
 28433 ;;		_send_port_data_dma
 28434 ;;		_sprintf
 28435 ;;		_strlen
 28436 ;; This function is called by:
 28437 ;;		_init_bsoc
 28438 ;;		_TMR3_CallBack
 28439 ;; This function uses a reentrant model
 28440 ;;
 28441                           
 28442                           	psect	text138
 28443  01361E                     __ptext138:
 28444                           	opt callstack 0
 28445  01361E                     _calc_bsoc:
 28446                           	opt callstack 0
 28447                           
 28448                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28449  01361E  52E6               	movf	postinc1,f,c
 28450  013620  52E6               	movf	postinc1,f,c
 28451  013622  52E6               	movf	postinc1,f,c
 28452  013624  52E6               	movf	postinc1,f,c
 28453                           
 28454                           ;incstack = 0
 28455                           ;bsoc.c: 38:  uint8_t * log_ptr;;bsoc.c: 39:  uint16_t temp;;bsoc.c: 41:  do { LATEbits.
      +                          LATE1 = 1; } while(0);
 28456  013626  82BE               	bsf	190,1,c	;volatile
 28457                           
 28458                           ;bsoc.c: 43:  C.dynamic_ah += (C.c_bat / 3600.0);
 28459  013628  0E00               	movlw	0
 28460  01362A  6EE6               	movwf	postinc1,c
 28461  01362C  0E00               	movlw	0
 28462  01362E  6EE6               	movwf	postinc1,c
 28463  013630  0E61               	movlw	97
 28464  013632  6EE6               	movwf	postinc1,c
 28465  013634  0E45               	movlw	69
 28466  013636  6EE6               	movwf	postinc1,c
 28467  013638  0060  F513  FFE6   	movff	_C+68,postinc1
 28468  01363E  0060  F517  FFE6   	movff	_C+69,postinc1
 28469  013644  0060  F51B  FFE6   	movff	_C+70,postinc1
 28470  01364A  0060  F51F  FFE6   	movff	_C+71,postinc1
 28471  013650  EC55  F09E         	call	___fldiv	;wreg free
 28472  013654  0060  F007  FFE6   	movff	btemp,postinc1
 28473  01365A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28474  013660  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28475  013666  0060  F013  FFE6   	movff	btemp+3,postinc1
 28476  01366C  0060  F603  FFE6   	movff	_C+128,postinc1
 28477  013672  0060  F607  FFE6   	movff	_C+129,postinc1
 28478  013678  0060  F60B  FFE6   	movff	_C+130,postinc1
 28479  01367E  0060  F60F  FFE6   	movff	_C+131,postinc1
 28480  013684  EC31  F097         	call	___fladd	;wreg free
 28481  013688  0060  F004  F180   	movff	btemp,_C+128	;volatile
 28482  01368E  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
 28483  013694  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
 28484  01369A  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
 28485                           
 28486                           ;bsoc.c: 44:  if (C.dynamic_ah > (C.bank_ah))
 28487  0136A0  0060  F603  FFE6   	movff	_C+128,postinc1
 28488  0136A6  0060  F607  FFE6   	movff	_C+129,postinc1
 28489  0136AC  0060  F60B  FFE6   	movff	_C+130,postinc1
 28490  0136B2  0060  F60F  FFE6   	movff	_C+131,postinc1
 28491  0136B8  0060  F5F3  FFE6   	movff	_C+124,postinc1
 28492  0136BE  0060  F5F7  FFE6   	movff	_C+125,postinc1
 28493  0136C4  0060  F5FB  FFE6   	movff	_C+126,postinc1
 28494  0136CA  0060  F5FF  FFE6   	movff	_C+127,postinc1
 28495  0136D0  EC22  F0B8         	call	___flge	;wreg free
 28496  0136D4  B001               	btfsc	btemp& (0+255),0,c
 28497  0136D6  D008               	goto	l11448
 28498                           
 28499                           ;bsoc.c: 45:   C.dynamic_ah = C.bank_ah;
 28500  0136D8  C17C  F180         	movff	_C+124,_C+128	;volatile
 28501  0136DC  C17D  F181         	movff	_C+125,_C+129	;volatile
 28502  0136E0  C17E  F182         	movff	_C+126,_C+130	;volatile
 28503  0136E4  C17F  F183         	movff	_C+127,_C+131	;volatile
 28504  0136E8                     l11448:
 28505                           
 28506                           ;bsoc.c: 46:  if (C.dynamic_ah < 0.1)
 28507  0136E8  0ECD               	movlw	205
 28508  0136EA  6EE6               	movwf	postinc1,c
 28509  0136EC  0ECC               	movlw	204
 28510  0136EE  6EE6               	movwf	postinc1,c
 28511  0136F0  0ECC               	movlw	204
 28512  0136F2  6EE6               	movwf	postinc1,c
 28513  0136F4  0E3D               	movlw	61
 28514  0136F6  6EE6               	movwf	postinc1,c
 28515  0136F8  0060  F603  FFE6   	movff	_C+128,postinc1
 28516  0136FE  0060  F607  FFE6   	movff	_C+129,postinc1
 28517  013704  0060  F60B  FFE6   	movff	_C+130,postinc1
 28518  01370A  0060  F60F  FFE6   	movff	_C+131,postinc1
 28519  013710  EC22  F0B8         	call	___flge	;wreg free
 28520  013714  B001               	btfsc	btemp& (0+255),0,c
 28521  013716  D009               	goto	l11452
 28522                           
 28523                           ;bsoc.c: 47:   C.dynamic_ah = 0.1;
 28524  013718  0ECD               	movlw	205
 28525  01371A  0101               	movlb	1	; () banked
 28526  01371C  6F80               	movwf	(_C+128)& (0+255),b	;volatile
 28527  01371E  0ECC               	movlw	204
 28528  013720  6F81               	movwf	(_C+129)& (0+255),b	;volatile
 28529  013722  0ECC               	movlw	204
 28530  013724  6F82               	movwf	(_C+130)& (0+255),b	;volatile
 28531  013726  0E3D               	movlw	61
 28532  013728  6F83               	movwf	(_C+131)& (0+255),b	;volatile
 28533  01372A                     l11452:
 28534                           
 28535                           ;bsoc.c: 49:  C.pv_ah += (C.c_pv / 3600.0);
 28536  01372A  0E00               	movlw	0
 28537  01372C  6EE6               	movwf	postinc1,c
 28538  01372E  0E00               	movlw	0
 28539  013730  6EE6               	movwf	postinc1,c
 28540  013732  0E61               	movlw	97
 28541  013734  6EE6               	movwf	postinc1,c
 28542  013736  0E45               	movlw	69
 28543  013738  6EE6               	movwf	postinc1,c
 28544  01373A  0060  F523  FFE6   	movff	_C+72,postinc1
 28545  013740  0060  F527  FFE6   	movff	_C+73,postinc1
 28546  013746  0060  F52B  FFE6   	movff	_C+74,postinc1
 28547  01374C  0060  F52F  FFE6   	movff	_C+75,postinc1
 28548  013752  EC55  F09E         	call	___fldiv	;wreg free
 28549  013756  0060  F007  FFE6   	movff	btemp,postinc1
 28550  01375C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28551  013762  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28552  013768  0060  F013  FFE6   	movff	btemp+3,postinc1
 28553  01376E  0060  F613  FFE6   	movff	_C+132,postinc1
 28554  013774  0060  F617  FFE6   	movff	_C+133,postinc1
 28555  01377A  0060  F61B  FFE6   	movff	_C+134,postinc1
 28556  013780  0060  F61F  FFE6   	movff	_C+135,postinc1
 28557  013786  EC31  F097         	call	___fladd	;wreg free
 28558  01378A  0060  F004  F184   	movff	btemp,_C+132	;volatile
 28559  013790  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
 28560  013796  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
 28561  01379C  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
 28562                           
 28563                           ;bsoc.c: 50:  C.pvkw += (C.p_pv / 3600.0);
 28564  0137A2  0E00               	movlw	0
 28565  0137A4  6EE6               	movwf	postinc1,c
 28566  0137A6  0E00               	movlw	0
 28567  0137A8  6EE6               	movwf	postinc1,c
 28568  0137AA  0E61               	movlw	97
 28569  0137AC  6EE6               	movwf	postinc1,c
 28570  0137AE  0E45               	movlw	69
 28571  0137B0  6EE6               	movwf	postinc1,c
 28572  0137B2  0060  F5C3  FFE6   	movff	_C+112,postinc1
 28573  0137B8  0060  F5C7  FFE6   	movff	_C+113,postinc1
 28574  0137BE  0060  F5CB  FFE6   	movff	_C+114,postinc1
 28575  0137C4  0060  F5CF  FFE6   	movff	_C+115,postinc1
 28576  0137CA  EC55  F09E         	call	___fldiv	;wreg free
 28577  0137CE  0060  F007  FFE6   	movff	btemp,postinc1
 28578  0137D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28579  0137DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28580  0137E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 28581  0137E6  0060  F653  FFE6   	movff	_C+148,postinc1
 28582  0137EC  0060  F657  FFE6   	movff	_C+149,postinc1
 28583  0137F2  0060  F65B  FFE6   	movff	_C+150,postinc1
 28584  0137F8  0060  F65F  FFE6   	movff	_C+151,postinc1
 28585  0137FE  EC31  F097         	call	___fladd	;wreg free
 28586  013802  0060  F004  F194   	movff	btemp,_C+148	;volatile
 28587  013808  0060  F008  F195   	movff	btemp+1,_C+149	;volatile
 28588  01380E  0060  F00C  F196   	movff	btemp+2,_C+150	;volatile
 28589  013814  0060  F010  F197   	movff	btemp+3,_C+151	;volatile
 28590                           
 28591                           ;bsoc.c: 51:  C.invkw += (C.p_inverter / 3600.0);
 28592  01381A  0E00               	movlw	0
 28593  01381C  6EE6               	movwf	postinc1,c
 28594  01381E  0E00               	movlw	0
 28595  013820  6EE6               	movwf	postinc1,c
 28596  013822  0E61               	movlw	97
 28597  013824  6EE6               	movwf	postinc1,c
 28598  013826  0E45               	movlw	69
 28599  013828  6EE6               	movwf	postinc1,c
 28600  01382A  0060  F5B3  FFE6   	movff	_C+108,postinc1
 28601  013830  0060  F5B7  FFE6   	movff	_C+109,postinc1
 28602  013836  0060  F5BB  FFE6   	movff	_C+110,postinc1
 28603  01383C  0060  F5BF  FFE6   	movff	_C+111,postinc1
 28604  013842  EC55  F09E         	call	___fldiv	;wreg free
 28605  013846  0060  F007  FFE6   	movff	btemp,postinc1
 28606  01384C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28607  013852  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28608  013858  0060  F013  FFE6   	movff	btemp+3,postinc1
 28609  01385E  0060  F663  FFE6   	movff	_C+152,postinc1
 28610  013864  0060  F667  FFE6   	movff	_C+153,postinc1
 28611  01386A  0060  F66B  FFE6   	movff	_C+154,postinc1
 28612  013870  0060  F66F  FFE6   	movff	_C+155,postinc1
 28613  013876  EC31  F097         	call	___fladd	;wreg free
 28614  01387A  0060  F004  F198   	movff	btemp,_C+152	;volatile
 28615  013880  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 28616  013886  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 28617  01388C  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 28618                           
 28619                           ;bsoc.c: 52:  if (C.p_bat > 0.0)
 28620  013892  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28621  013898  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28622  01389E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28623  0138A4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28624  0138AA  0E00               	movlw	0
 28625  0138AC  6EE6               	movwf	postinc1,c
 28626  0138AE  0E00               	movlw	0
 28627  0138B0  6EE6               	movwf	postinc1,c
 28628  0138B2  0E00               	movlw	0
 28629  0138B4  6EE6               	movwf	postinc1,c
 28630  0138B6  0E00               	movlw	0
 28631  0138B8  6EE6               	movwf	postinc1,c
 28632  0138BA  EC22  F0B8         	call	___flge	;wreg free
 28633  0138BE  B001               	btfsc	btemp& (0+255),0,c
 28634  0138C0  D03C               	goto	l11462
 28635                           
 28636                           ;bsoc.c: 53:   C.bkwi += (C.p_bat / 3600.0);
 28637  0138C2  0E00               	movlw	0
 28638  0138C4  6EE6               	movwf	postinc1,c
 28639  0138C6  0E00               	movlw	0
 28640  0138C8  6EE6               	movwf	postinc1,c
 28641  0138CA  0E61               	movlw	97
 28642  0138CC  6EE6               	movwf	postinc1,c
 28643  0138CE  0E45               	movlw	69
 28644  0138D0  6EE6               	movwf	postinc1,c
 28645  0138D2  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28646  0138D8  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28647  0138DE  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28648  0138E4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28649  0138EA  EC55  F09E         	call	___fldiv	;wreg free
 28650  0138EE  0060  F007  FFE6   	movff	btemp,postinc1
 28651  0138F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28652  0138FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28653  013900  0060  F013  FFE6   	movff	btemp+3,postinc1
 28654  013906  0060  F633  FFE6   	movff	_C+140,postinc1
 28655  01390C  0060  F637  FFE6   	movff	_C+141,postinc1
 28656  013912  0060  F63B  FFE6   	movff	_C+142,postinc1
 28657  013918  0060  F63F  FFE6   	movff	_C+143,postinc1
 28658  01391E  EC31  F097         	call	___fladd	;wreg free
 28659  013922  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 28660  013928  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 28661  01392E  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 28662  013934  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 28663  01393A                     l11462:
 28664                           
 28665                           ;bsoc.c: 54:  if (C.p_bat < 0.0)
 28666  01393A  0101               	movlb	1	; () banked
 28667  01393C  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 28668  01393E  D03C               	goto	l11466
 28669                           
 28670                           ; BSR set to: 1
 28671                           ;bsoc.c: 55:   C.bkwo += (C.p_bat / 3600.0);
 28672  013940  0E00               	movlw	0
 28673  013942  6EE6               	movwf	postinc1,c
 28674  013944  0E00               	movlw	0
 28675  013946  6EE6               	movwf	postinc1,c
 28676  013948  0E61               	movlw	97
 28677  01394A  6EE6               	movwf	postinc1,c
 28678  01394C  0E45               	movlw	69
 28679  01394E  6EE6               	movwf	postinc1,c
 28680  013950  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28681  013956  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28682  01395C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28683  013962  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28684  013968  EC55  F09E         	call	___fldiv	;wreg free
 28685  01396C  0060  F007  FFE6   	movff	btemp,postinc1
 28686  013972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28687  013978  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28688  01397E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28689  013984  0060  F643  FFE6   	movff	_C+144,postinc1
 28690  01398A  0060  F647  FFE6   	movff	_C+145,postinc1
 28691  013990  0060  F64B  FFE6   	movff	_C+146,postinc1
 28692  013996  0060  F64F  FFE6   	movff	_C+147,postinc1
 28693  01399C  EC31  F097         	call	___fladd	;wreg free
 28694  0139A0  0060  F004  F190   	movff	btemp,_C+144	;volatile
 28695  0139A6  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 28696  0139AC  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 28697  0139B2  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 28698  0139B8                     l11466:
 28699                           
 28700                           ;bsoc.c: 57:  temp = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 28701  0139B8  0E00               	movlw	0
 28702  0139BA  6EE6               	movwf	postinc1,c
 28703  0139BC  0E00               	movlw	0
 28704  0139BE  6EE6               	movwf	postinc1,c
 28705  0139C0  0EC8               	movlw	200
 28706  0139C2  6EE6               	movwf	postinc1,c
 28707  0139C4  0E42               	movlw	66
 28708  0139C6  6EE6               	movwf	postinc1,c
 28709  0139C8  0060  F5F3  FFE6   	movff	_C+124,postinc1
 28710  0139CE  0060  F5F7  FFE6   	movff	_C+125,postinc1
 28711  0139D4  0060  F5FB  FFE6   	movff	_C+126,postinc1
 28712  0139DA  0060  F5FF  FFE6   	movff	_C+127,postinc1
 28713  0139E0  0060  F603  FFE6   	movff	_C+128,postinc1
 28714  0139E6  0060  F607  FFE6   	movff	_C+129,postinc1
 28715  0139EC  0060  F60B  FFE6   	movff	_C+130,postinc1
 28716  0139F2  0060  F60F  FFE6   	movff	_C+131,postinc1
 28717  0139F8  EC55  F09E         	call	___fldiv	;wreg free
 28718  0139FC  0060  F007  FFE6   	movff	btemp,postinc1
 28719  013A02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28720  013A08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28721  013A0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28722  013A14  EC1C  F093         	call	___flmul	;wreg free
 28723  013A18  0060  F007  FFE6   	movff	btemp,postinc1
 28724  013A1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28725  013A24  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28726  013A2A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28727  013A30  ECB1  F0B6         	call	___fltol	;wreg free
 28728  013A34  0060  F004  F00B   	movff	btemp,btemp+10
 28729  013A3A  0060  F008  F00C   	movff	btemp+1,btemp+11
 28730  013A40  0E01               	movlw	1
 28731  013A42  260B               	addwf	(btemp+10)^0,f,c
 28732  013A44  0E00               	movlw	0
 28733  013A46  220C               	addwfc	(btemp+11)^0,f,c
 28734                           
 28735                           ;stkvar	_temp @ sp[(-4)+2]
 28736  013A48  0EFE               	movlw	-2
 28737  013A4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28738  013A50  0EFF               	movlw	-1
 28739  013A52  0060  F033  FFE3   	movff	btemp+11,plusw1
 28740                           
 28741                           ;bsoc.c: 58:  C.soc = (Volts_to_SOC((uint32_t) C.v_bat * 1000.0) + temp) / 2;
 28742                           ;stkvar	_temp @ sp[(-4)+2]
 28743  013A58  0E00               	movlw	0
 28744  013A5A  6EE6               	movwf	postinc1,c
 28745  013A5C  0E00               	movlw	0
 28746  013A5E  6EE6               	movwf	postinc1,c
 28747  013A60  0E7A               	movlw	122
 28748  013A62  6EE6               	movwf	postinc1,c
 28749  013A64  0E44               	movlw	68
 28750  013A66  6EE6               	movwf	postinc1,c
 28751  013A68  0060  F553  FFE6   	movff	_C+84,postinc1
 28752  013A6E  0060  F557  FFE6   	movff	_C+85,postinc1
 28753  013A74  0060  F55B  FFE6   	movff	_C+86,postinc1
 28754  013A7A  0060  F55F  FFE6   	movff	_C+87,postinc1
 28755  013A80  ECB1  F0B6         	call	___fltol	;wreg free
 28756  013A84  0060  F007  FFE6   	movff	btemp,postinc1
 28757  013A8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28758  013A90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28759  013A96  0060  F013  FFE6   	movff	btemp+3,postinc1
 28760  013A9C  0E00               	movlw	0
 28761  013A9E  6EE6               	movwf	postinc1,c
 28762  013AA0  EC20  F0B2         	call	___xxtofl	;wreg free
 28763  013AA4  0060  F007  FFE6   	movff	btemp,postinc1
 28764  013AAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28765  013AB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28766  013AB6  0060  F013  FFE6   	movff	btemp+3,postinc1
 28767  013ABC  EC1C  F093         	call	___flmul	;wreg free
 28768  013AC0  0060  F007  FFE6   	movff	btemp,postinc1
 28769  013AC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28770  013ACC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28771  013AD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28772  013AD8  ECB1  F0B6         	call	___fltol	;wreg free
 28773  013ADC  0060  F007  FFE6   	movff	btemp,postinc1
 28774  013AE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28775  013AE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28776  013AEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28777  013AF4  EC17  F0C3         	call	_Volts_to_SOC	;wreg free
 28778  013AF8  0EFE               	movlw	-2
 28779  013AFA  50E3               	movf	plusw1,w,c
 28780  013AFC  2601               	addwf	btemp^0,f,c
 28781  013AFE  0EFF               	movlw	-1
 28782  013B00  50E3               	movf	plusw1,w,c
 28783  013B02  2202               	addwfc	(btemp+1)^0,f,c
 28784  013B04  90D8               	bcf	status,0,c
 28785  013B06  3002               	rrcf	(btemp+1)^0,w,c
 28786  013B08  6E0C               	movwf	(btemp+11)^0,c
 28787  013B0A  3001               	rrcf	btemp^0,w,c
 28788  013B0C  6E0B               	movwf	(btemp+10)^0,c
 28789  013B0E  0060  F02C  F19E   	movff	btemp+10,_C+158	;volatile
 28790  013B14  0060  F030  F19F   	movff	btemp+11,_C+159	;volatile
 28791                           
 28792                           ;bsoc.c: 59:  if (C.soc > 100)
 28793  013B1A  0101               	movlb	1	; () banked
 28794  013B1C  519F               	movf	(_C+159)& (0+255),w,b	;volatile
 28795  013B1E  E104               	bnz	u1083_20
 28796  013B20  0E65               	movlw	101
 28797  013B22  5D9E               	subwf	(_C+158)& (0+255),w,b	;volatile
 28798  013B24  A0D8               	btfss	status,0,c
 28799  013B26  D004               	goto	l11474
 28800  013B28                     u1083_20:
 28801                           
 28802                           ; BSR set to: 1
 28803                           ;bsoc.c: 60:   C.soc = 100;
 28804  013B28  0E00               	movlw	0
 28805  013B2A  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
 28806  013B2C  0E64               	movlw	100
 28807  013B2E  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
 28808  013B30                     l11474:
 28809                           
 28810                           ; BSR set to: 1
 28811                           ;bsoc.c: 62:  if (C.c_bat < 0.0) {
 28812  013B30  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 28813  013B32  D043               	goto	l11478
 28814                           
 28815                           ; BSR set to: 1
 28816                           ;bsoc.c: 63:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 28817  013B34  0060  F513  FFE6   	movff	_C+68,postinc1
 28818  013B3A  0060  F517  FFE6   	movff	_C+69,postinc1
 28819  013B40  0060  F51B  FFE6   	movff	_C+70,postinc1
 28820  013B46  0060  F51F  FFE6   	movff	_C+71,postinc1
 28821  013B4C  0060  F603  FFE6   	movff	_C+128,postinc1
 28822  013B52  0060  F607  FFE6   	movff	_C+129,postinc1
 28823  013B58  0060  F60B  FFE6   	movff	_C+130,postinc1
 28824  013B5E  0060  F60F  FFE6   	movff	_C+131,postinc1
 28825  013B64  EC55  F09E         	call	___fldiv	;wreg free
 28826  013B68  0060  F007  FFE6   	movff	btemp,postinc1
 28827  013B6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28828  013B74  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28829  013B7A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28830  013B80  EC28  F0C8         	call	___flneg	;wreg free
 28831  013B84  0060  F007  FFE6   	movff	btemp,postinc1
 28832  013B8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28833  013B90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28834  013B96  0060  F013  FFE6   	movff	btemp+3,postinc1
 28835  013B9C  ECB1  F0B6         	call	___fltol	;wreg free
 28836  013BA0  0060  F004  F00B   	movff	btemp,btemp+10
 28837  013BA6  0060  F008  F00C   	movff	btemp+1,btemp+11
 28838  013BAC  0060  F02C  F19C   	movff	btemp+10,_C+156	;volatile
 28839  013BB2  0060  F030  F19D   	movff	btemp+11,_C+157	;volatile
 28840                           
 28841                           ;bsoc.c: 64:  } else {
 28842  013BB8  D004               	goto	l11480
 28843  013BBA                     l11478:
 28844                           
 28845                           ; BSR set to: 1
 28846                           ;bsoc.c: 65:   C.runtime = 120;
 28847  013BBA  0E00               	movlw	0
 28848  013BBC  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 28849  013BBE  0E78               	movlw	120
 28850  013BC0  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 28851  013BC2                     l11480:
 28852                           
 28853                           ;bsoc.c: 67:  if (C.runtime > 120)
 28854  013BC2  0101               	movlb	1	; () banked
 28855  013BC4  519D               	movf	(_C+157)& (0+255),w,b	;volatile
 28856  013BC6  E104               	bnz	u1085_20
 28857  013BC8  0E79               	movlw	121
 28858  013BCA  5D9C               	subwf	(_C+156)& (0+255),w,b	;volatile
 28859  013BCC  A0D8               	btfss	status,0,c
 28860  013BCE  D004               	goto	l11484
 28861  013BD0                     u1085_20:
 28862                           
 28863                           ; BSR set to: 1
 28864                           ;bsoc.c: 68:   C.runtime = 120;
 28865  013BD0  0E00               	movlw	0
 28866  013BD2  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 28867  013BD4  0E78               	movlw	120
 28868  013BD6  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 28869  013BD8                     l11484:
 28870                           
 28871                           ; BSR set to: 1
 28872                           ;bsoc.c: 70:  V.lowint_count++;
 28873  013BD8  0E01               	movlw	1
 28874  013BDA  0102               	movlb	2	; () banked
 28875  013BDC  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 28876  013BDE  0E00               	movlw	0
 28877  013BE0  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 28878  013BE2  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 28879  013BE4  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 28880                           
 28881                           ; BSR set to: 2
 28882                           ;bsoc.c: 71:  log_ptr = port_data_dma_ptr();
 28883  013BE6  EC4A  F0CE         	call	_port_data_dma_ptr	;wreg free
 28884                           
 28885                           ;stkvar	_log_ptr @ sp[(-4)+0]
 28886  013BEA  0EFD               	movlw	-3
 28887  013BEC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 28888  013BF2  0EFC               	movlw	-4
 28889  013BF4  0060  F007  FFE3   	movff	btemp,plusw1
 28890                           
 28891                           ;bsoc.c: 72:  sprintf((char*) log_ptr, " %4.3f,%4.3f,%4.3f,%4.3f\r\n", C.v_bat, C.v_pv, 
      +                          C.v_cc, C.v_inverter);
 28892  013BFA  0060  F593  FFE6   	movff	_C+100,postinc1
 28893  013C00  0060  F597  FFE6   	movff	_C+101,postinc1
 28894  013C06  0060  F59B  FFE6   	movff	_C+102,postinc1
 28895  013C0C  0060  F59F  FFE6   	movff	_C+103,postinc1
 28896  013C12  0060  F533  FFE6   	movff	_C+76,postinc1
 28897  013C18  0060  F537  FFE6   	movff	_C+77,postinc1
 28898  013C1E  0060  F53B  FFE6   	movff	_C+78,postinc1
 28899  013C24  0060  F53F  FFE6   	movff	_C+79,postinc1
 28900  013C2A  0060  F543  FFE6   	movff	_C+80,postinc1
 28901  013C30  0060  F547  FFE6   	movff	_C+81,postinc1
 28902  013C36  0060  F54B  FFE6   	movff	_C+82,postinc1
 28903  013C3C  0060  F54F  FFE6   	movff	_C+83,postinc1
 28904  013C42  0060  F553  FFE6   	movff	_C+84,postinc1
 28905  013C48  0060  F557  FFE6   	movff	_C+85,postinc1
 28906  013C4E  0060  F55B  FFE6   	movff	_C+86,postinc1
 28907  013C54  0060  F55F  FFE6   	movff	_C+87,postinc1
 28908  013C5A  0E25               	movlw	low STR_46
 28909  013C5C  6EE6               	movwf	postinc1,c
 28910  013C5E  0EFE               	movlw	high STR_46
 28911  013C60  6EE6               	movwf	postinc1,c
 28912                           
 28913                           ;stkvar	_log_ptr @ sp[(-22)+0]
 28914  013C62  0EEA               	movlw	-22
 28915  013C64  006F FF8F FFE6     	movff	plusw1,postinc1
 28916  013C6A  006F FF8F FFE6     	movff	plusw1,postinc1
 28917  013C70  0E14               	movlw	20
 28918  013C72  6EE6               	movwf	postinc1,c
 28919  013C74  EC0E  F0BE         	call	_sprintf	;wreg free
 28920                           
 28921                           ; BSR set to: 0
 28922                           ;bsoc.c: 73:  send_port_data_dma(strlen((char*) log_ptr));
 28923                           ;stkvar	_log_ptr @ sp[(-4)+0]
 28924  013C78  0EFC               	movlw	-4
 28925  013C7A  006F FF8F FFE6     	movff	plusw1,postinc1
 28926  013C80  006F FF8F FFE6     	movff	plusw1,postinc1
 28927  013C86  EC7A  F0C2         	call	_strlen	;wreg free
 28928  013C8A  0060  F007  FFE6   	movff	btemp,postinc1
 28929  013C90  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28930  013C96  ECB3  F0C7         	call	_send_port_data_dma	;wreg free
 28931                           
 28932                           ; BSR set to: 59
 28933                           ;bsoc.c: 74:  C.update = 0;
 28934  013C9A  0101               	movlb	1	; () banked
 28935  013C9C  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 28936                           
 28937                           ; BSR set to: 1
 28938  013C9E  92BE               	bcf	190,1,c	;volatile
 28939                           
 28940                           ; BSR set to: 1
 28941                           ; _calc_bsoc: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 28942  013CA0  52E5               	movf	postdec1,f,c
 28943  013CA2  52E5               	movf	postdec1,f,c
 28944  013CA4  52E5               	movf	postdec1,f,c
 28945  013CA6  52E5               	movf	postdec1,f,c
 28946  013CA8  0012               	return		;funcret
 28947  013CAA                     __end_of_calc_bsoc:
 28948                           	opt callstack 0
 28949                           
 28950 ;; *************** function _send_port_data_dma *****************
 28951 ;; Defined at:
 28952 ;;		line 258 in file "eadog.c"
 28953 ;; Parameters:    Size  Location     Type
 28954 ;;  dsize           2  [STACK] unsigned short 
 28955 ;; Auto vars:     Size  Location     Type
 28956 ;;		None
 28957 ;; Return value:  Size  Location     Type
 28958 ;;                  1  [STACK] void 
 28959 ;; Registers used:
 28960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 28961 ;; Tracked objects:
 28962 ;;		On entry : 0/0
 28963 ;;		On exit  : 3F/3B
 28964 ;;		Unchanged: 0/0
 28965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28970 ;;Total ram usage:        0 bytes
 28971 ;; Hardware stack levels used:    1
 28972 ;; Hardware stack levels required when called:    3
 28973 ;; This function calls:
 28974 ;;		Nothing
 28975 ;; This function is called by:
 28976 ;;		_calc_bsoc
 28977 ;; This function uses a reentrant model
 28978 ;;
 28979                           
 28980                           	psect	text139
 28981  018F66                     __ptext139:
 28982                           	opt callstack 0
 28983  018F66                     _send_port_data_dma:
 28984                           	opt callstack 11
 28985                           
 28986                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 28987                           ;stkvar	_dsize @ sp[(0)+-2]
 28988                           
 28989                           ; BSR set to: 1
 28990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28991                           ;incstack = 0
 28992  018F66  0EFE               	movlw	-2
 28993  018F68  04E3               	decf	plusw1,w,c
 28994  018F6A  0EFF               	movlw	-1
 28995  018F6C  006F FF8C  F001    	movff	plusw1,btemp
 28996  018F72  0E02               	movlw	2
 28997  018F74  5A01               	subwfb	btemp^0,f,c
 28998  018F76  A0D8               	btfss	status,0,c
 28999  018F78  D00C               	goto	l8824
 29000                           
 29001                           ;eadog.c: 261:   dsize = 512;
 29002  018F7A  0E00               	movlw	0
 29003  018F7C  6E0B               	movwf	(btemp+10)^0,c
 29004  018F7E  0E02               	movlw	2
 29005  018F80  6E0C               	movwf	(btemp+11)^0,c
 29006                           
 29007                           ;stkvar	_dsize @ sp[(0)+-2]
 29008  018F82  0EFE               	movlw	-2
 29009  018F84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29010  018F8A  0EFF               	movlw	-1
 29011  018F8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 29012  018F92                     l8824:
 29013                           
 29014                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 29015  018F92  013B               	movlb	59	; () banked
 29016  018F94  9FDC               	bcf	220,7,b	;volatile
 29017                           
 29018                           ; BSR set to: 59
 29019                           ;eadog.c: 264:  DMA2SSZ = dsize;
 29020                           ;stkvar	_dsize @ sp[(0)+-2]
 29021  018F96  0EFE               	movlw	-2
 29022  018F98  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 29023  018F9E  0EFF               	movlw	-1
 29024  018FA0  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 29025                           
 29026                           ; BSR set to: 59
 29027                           ;eadog.c: 265:  DMA2DSZ = 1;
 29028  018FA6  0E00               	movlw	0
 29029  018FA8  6FCF               	movwf	207,b	;volatile
 29030  018FAA  0E01               	movlw	1
 29031  018FAC  6FCE               	movwf	206,b	;volatile
 29032                           
 29033                           ; BSR set to: 59
 29034                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 29035  018FAE  8FDC               	bsf	220,7,b	;volatile
 29036                           
 29037                           ; BSR set to: 59
 29038                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 29039  018FB0  8DDC               	bsf	220,6,b	;volatile
 29040                           
 29041                           ; BSR set to: 59
 29042                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 29043  018FB2  52E5               	movf	postdec1,f,c
 29044  018FB4  52E5               	movf	postdec1,f,c
 29045  018FB6  0012               	return		;funcret
 29046  018FB8                     __end_of_send_port_data_dma:
 29047                           	opt callstack 0
 29048                           
 29049 ;; *************** function _port_data_dma_ptr *****************
 29050 ;; Defined at:
 29051 ;;		line 270 in file "eadog.c"
 29052 ;; Parameters:    Size  Location     Type
 29053 ;;		None
 29054 ;; Auto vars:     Size  Location     Type
 29055 ;;		None
 29056 ;; Return value:  Size  Location     Type
 29057 ;;                  2  [STACK] PTR unsigned char 
 29058 ;; Registers used:
 29059 ;;		wreg, status,2, status,0, btemp, btemp+1
 29060 ;; Tracked objects:
 29061 ;;		On entry : 3F/2
 29062 ;;		On exit  : 0/0
 29063 ;;		Unchanged: 0/0
 29064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29069 ;;Total ram usage:        0 bytes
 29070 ;; Hardware stack levels used:    1
 29071 ;; Hardware stack levels required when called:    3
 29072 ;; This function calls:
 29073 ;;		Nothing
 29074 ;; This function is called by:
 29075 ;;		_calc_bsoc
 29076 ;; This function uses a reentrant model
 29077 ;;
 29078                           
 29079                           	psect	text140
 29080  019C94                     __ptext140:
 29081                           	opt callstack 0
 29082  019C94                     _port_data_dma_ptr:
 29083                           	opt callstack 11
 29084                           
 29085                           ;eadog.c: 272:  return port_data;
 29086                           
 29087                           ; BSR set to: 59
 29088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29089                           ;incstack = 0
 29090  019C94  0EFF               	movlw	low _port_data
 29091  019C96  6E01               	movwf	btemp^0,c
 29092  019C98  0E05               	movlw	high _port_data
 29093  019C9A  6E02               	movwf	(btemp+1)^0,c
 29094                           
 29095                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29096  019C9C  0012               	return		;funcret
 29097  019C9E                     __end_of_port_data_dma_ptr:
 29098                           	opt callstack 0
 29099                           
 29100 ;; *************** function _INT0_ISR *****************
 29101 ;; Defined at:
 29102 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 29103 ;; Parameters:    Size  Location     Type
 29104 ;;		None
 29105 ;; Auto vars:     Size  Location     Type
 29106 ;;		None
 29107 ;; Return value:  Size  Location     Type
 29108 ;;                  1    wreg      void 
 29109 ;; Registers used:
 29110 ;;		wreg, status,2, status,0, pclath, tosl
 29111 ;; Tracked objects:
 29112 ;;		On entry : 0/0
 29113 ;;		On exit  : 0/0
 29114 ;;		Unchanged: 0/0
 29115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29120 ;;Total ram usage:        0 bytes
 29121 ;; Hardware stack levels used:    1
 29122 ;; Hardware stack levels required when called:    2
 29123 ;; This function calls:
 29124 ;;		_INT0_CallBack
 29125 ;; This function is called by:
 29126 ;;		Interrupt level 2
 29127 ;; This function uses a non-reentrant model
 29128 ;;
 29129                           
 29130                           	psect	text141
 29131  019C6C                     __ptext141:
 29132                           	opt callstack 0
 29133  019C6C                     _INT0_ISR:
 29134                           	opt callstack 3
 29135                           
 29136                           ;incstack = 0
 29137  019C6C  EE14  F0C2         	lfsr	1,___inthi_sp
 29138                           
 29139                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 29140  019C70  0139               	movlb	57	; () banked
 29141  019C72  91A1               	bcf	161,0,b	;volatile
 29142                           
 29143                           ; BSR set to: 57
 29144                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 29145  019C74  EC0A  F0CD         	call	_INT0_CallBack	;wreg free
 29146  019C78  0011               	retfie		f
 29147  019C7A                     __end_of_INT0_ISR:
 29148                           	opt callstack 0
 29149                           
 29150 ;; *************** function _INT0_CallBack *****************
 29151 ;; Defined at:
 29152 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 29153 ;; Parameters:    Size  Location     Type
 29154 ;;		None
 29155 ;; Auto vars:     Size  Location     Type
 29156 ;;		None
 29157 ;; Return value:  Size  Location     Type
 29158 ;;                  1  [STACK] void 
 29159 ;; Registers used:
 29160 ;;		wreg, status,2, status,0, pclath, tosl
 29161 ;; Tracked objects:
 29162 ;;		On entry : 3F/39
 29163 ;;		On exit  : 0/0
 29164 ;;		Unchanged: 0/0
 29165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29170 ;;Total ram usage:        0 bytes
 29171 ;; Hardware stack levels used:    1
 29172 ;; Hardware stack levels required when called:    1
 29173 ;; This function calls:
 29174 ;;		Absolute function
 29175 ;;		_INT0_DefaultInterruptHandler
 29176 ;; This function is called by:
 29177 ;;		_INT0_ISR
 29178 ;; This function uses a reentrant model
 29179 ;;
 29180                           
 29181                           	psect	text142
 29182  019A14                     __ptext142:
 29183                           	opt callstack 0
 29184  019A14                     _INT0_CallBack:
 29185                           	opt callstack 3
 29186                           
 29187                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 29188                           
 29189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29190                           ;incstack = 0
 29191  019A14  0100               	movlb	0	; () banked
 29192  019A16  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 29193  019A18  11C5               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 29194  019A1A  11C6               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 29195  019A1C  B4D8               	btfsc	status,2,c
 29196  019A1E  0012               	return	
 29197                           
 29198                           ; BSR set to: 0
 29199                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 29200  019A20  D801               	call	u873_48
 29201  019A22  0012               	return	
 29202  019A24                     u873_48:
 29203  019A24  0005               	push	
 29204  019A26  6EFA               	movwf	pclath,c
 29205  019A28  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 29206  019A2A  6EFD               	movwf	tosl,c
 29207  019A2C  51C5               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 29208  019A2E  6EFE               	movwf	tosh,c
 29209  019A30  51C6               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 29210  019A32  6EFF               	movwf	tosu,c
 29211  019A34  50FA               	movf	pclath,w,c
 29212  019A36  0012               	return		;indir
 29213  019A38                     __end_of_INT0_CallBack:
 29214                           	opt callstack 0
 29215                           
 29216 ;; *************** function _INT0_DefaultInterruptHandler *****************
 29217 ;; Defined at:
 29218 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 29219 ;; Parameters:    Size  Location     Type
 29220 ;;		None
 29221 ;; Auto vars:     Size  Location     Type
 29222 ;;		None
 29223 ;; Return value:  Size  Location     Type
 29224 ;;                  1  [STACK] void 
 29225 ;; Registers used:
 29226 ;;		None
 29227 ;; Tracked objects:
 29228 ;;		On entry : 3F/0
 29229 ;;		On exit  : 0/0
 29230 ;;		Unchanged: 0/0
 29231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29236 ;;Total ram usage:        0 bytes
 29237 ;; Hardware stack levels used:    1
 29238 ;; This function calls:
 29239 ;;		Nothing
 29240 ;; This function is called by:
 29241 ;;		_EXT_INT_Initialize
 29242 ;;		_INT0_CallBack
 29243 ;; This function uses a reentrant model
 29244 ;;
 29245                           
 29246                           	psect	text143
 29247  019D0E                     __ptext143:
 29248                           	opt callstack 0
 29249  019D0E                     _INT0_DefaultInterruptHandler:
 29250                           	opt callstack 3
 29251                           
 29252                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29253                           
 29254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29255                           ;incstack = 0
 29256  019D0E  0012               	return		;funcret
 29257  019D10                     __end_of_INT0_DefaultInterruptHandler:
 29258                           	opt callstack 0
 29259                           
 29260 ;; *************** function _Default_ISR *****************
 29261 ;; Defined at:
 29262 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 29263 ;; Parameters:    Size  Location     Type
 29264 ;;		None
 29265 ;; Auto vars:     Size  Location     Type
 29266 ;;		None
 29267 ;; Return value:  Size  Location     Type
 29268 ;;                  1    wreg      void 
 29269 ;; Registers used:
 29270 ;;		None
 29271 ;; Tracked objects:
 29272 ;;		On entry : 0/0
 29273 ;;		On exit  : 0/0
 29274 ;;		Unchanged: 0/0
 29275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29280 ;;Total ram usage:        0 bytes
 29281 ;; Hardware stack levels used:    1
 29282 ;; This function calls:
 29283 ;;		Nothing
 29284 ;; This function is called by:
 29285 ;;		Interrupt level 2
 29286 ;; This function uses a non-reentrant model
 29287 ;;
 29288                           
 29289                           	psect	text144
 29290  019D04                     __ptext144:
 29291                           	opt callstack 0
 29292  019D04                     _Default_ISR:
 29293                           	opt callstack 5
 29294                           
 29295                           ;incstack = 0
 29296  019D04  EE14  F0C2         	lfsr	1,___inthi_sp
 29297  019D08  0011               	retfie		f
 29298  019D0A                     __end_of_Default_ISR:
 29299                           	opt callstack 0
 29300                           
 29301 ;; *************** function _ADCC_ISR *****************
 29302 ;; Defined at:
 29303 ;;		line 314 in file "mcc_generated_files/adcc.c"
 29304 ;; Parameters:    Size  Location     Type
 29305 ;;		None
 29306 ;; Auto vars:     Size  Location     Type
 29307 ;;		None
 29308 ;; Return value:  Size  Location     Type
 29309 ;;                  1    wreg      void 
 29310 ;; Registers used:
 29311 ;;		wreg, status,2, status,0, pclath, tosl
 29312 ;; Tracked objects:
 29313 ;;		On entry : 0/0
 29314 ;;		On exit  : 0/0
 29315 ;;		Unchanged: 0/0
 29316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29321 ;;Total ram usage:        0 bytes
 29322 ;; Hardware stack levels used:    1
 29323 ;; Hardware stack levels required when called:    1
 29324 ;; This function calls:
 29325 ;;		Absolute function
 29326 ;;		_ADCC_DefaultInterruptHandler
 29327 ;;		_adc_int_handler
 29328 ;; This function is called by:
 29329 ;;		Interrupt level 2
 29330 ;; This function uses a non-reentrant model
 29331 ;;
 29332                           
 29333                           	psect	text145
 29334  0195E4                     __ptext145:
 29335                           	opt callstack 0
 29336  0195E4                     _ADCC_ISR:
 29337                           	opt callstack 4
 29338                           
 29339                           ;incstack = 0
 29340  0195E4  EE14  F0C2         	lfsr	1,___inthi_sp
 29341                           
 29342                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 29343  0195E8  0139               	movlb	57	; () banked
 29344  0195EA  95A1               	bcf	161,2,b	;volatile
 29345                           
 29346                           ; BSR set to: 57
 29347                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 29348  0195EC  0100               	movlb	0	; () banked
 29349  0195EE  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 29350  0195F0  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 29351  0195F2  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 29352  0195F4  B4D8               	btfsc	status,2,c
 29353  0195F6  0011               	retfie		f
 29354                           
 29355                           ; BSR set to: 0
 29356                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 29357  0195F8  D801               	call	i2u909_48
 29358  0195FA  0011               	retfie		f
 29359  0195FC                     i2u909_48:
 29360  0195FC  0005               	push	
 29361  0195FE  6EFA               	movwf	pclath,c
 29362  019600  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 29363  019602  6EFD               	movwf	tosl,c
 29364  019604  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 29365  019606  6EFE               	movwf	tosh,c
 29366  019608  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 29367  01960A  6EFF               	movwf	tosu,c
 29368  01960C  50FA               	movf	pclath,w,c
 29369  01960E  0012               	return		;indir
 29370  019610                     __end_of_ADCC_ISR:
 29371                           	opt callstack 0
 29372                           
 29373 ;; *************** function _adc_int_t_handler *****************
 29374 ;; Defined at:
 29375 ;;		line 128 in file "daq.c"
 29376 ;; Parameters:    Size  Location     Type
 29377 ;;		None
 29378 ;; Auto vars:     Size  Location     Type
 29379 ;;		None
 29380 ;; Return value:  Size  Location     Type
 29381 ;;                  1  [STACK] void 
 29382 ;; Registers used:
 29383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 29384 ;; Tracked objects:
 29385 ;;		On entry : 3F/0
 29386 ;;		On exit  : 1/0
 29387 ;;		Unchanged: 0/0
 29388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29393 ;;Total ram usage:        0 bytes
 29394 ;; Hardware stack levels used:    1
 29395 ;; Hardware stack levels required when called:    1
 29396 ;; This function calls:
 29397 ;;		_ADCC_DischargeSampleCapacitor
 29398 ;;		_ADCC_StartConversion
 29399 ;; This function is called by:
 29400 ;;		_start_adc_scan
 29401 ;;		_ADCC_ThresholdISR
 29402 ;; This function uses a reentrant model
 29403 ;;
 29404                           
 29405                           	psect	text146
 29406  018A08                     __ptext146:
 29407                           	opt callstack 0
 29408  018A08                     _adc_int_t_handler:
 29409                           	opt callstack 3
 29410                           
 29411                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 29412                           
 29413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29414                           ;incstack = 0
 29415  018A08  013E               	movlb	62	; () banked
 29416  018A0A  51E6               	movf	230,w,b	;volatile
 29417  018A0C  006F FB9C  F001    	movff	16103,btemp	;volatile
 29418  018A12  6A02               	clrf	(btemp+1)^0,c
 29419  018A14  0060  F004  F002   	movff	btemp,btemp+1
 29420  018A1A  6A01               	clrf	btemp^0,c
 29421  018A1C  2601               	addwf	btemp^0,f,c
 29422  018A1E  0E00               	movlw	0
 29423  018A20  2202               	addwfc	(btemp+1)^0,f,c
 29424  018A22  0100               	movlb	0	; () banked
 29425  018A24  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 29426  018A26  0D02               	mullw	2
 29427  018A28  50F3               	movf	243,w,c
 29428  018A2A  0FCB               	addlw	low _R
 29429  018A2C  6ED9               	movwf	fsr2l,c
 29430  018A2E  6ADA               	clrf	fsr2h,c
 29431  018A30  0060  F007  FFDE   	movff	btemp,postinc2
 29432  018A36  0060  F00B  FFDD   	movff	btemp+1,postdec2
 29433  018A3C                     l9962:
 29434                           
 29435                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 29436  018A3C  0100               	movlb	0	; () banked
 29437  018A3E  2BEF               	incf	(_R+36)& (0+255),f,b	;volatile
 29438  018A40  0E0D               	movlw	13
 29439  018A42  65EF               	cpfsgt	(_R+36)& (0+255),b	;volatile
 29440  018A44  D003               	goto	l9968
 29441                           
 29442                           ; BSR set to: 0
 29443                           ;daq.c: 136:    R.done = 1;
 29444  018A46  0E01               	movlw	1
 29445  018A48  6FF2               	movwf	(_R+39)& (0+255),b	;volatile
 29446  018A4A  0012               	return	
 29447  018A4C                     l9968:
 29448                           
 29449                           ; BSR set to: 0
 29450                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 29451  018A4C  0060  F3BC  F00C   	movff	_R+36,btemp+11	;volatile
 29452  018A52  EE20  F0F0         	lfsr	2,_R+37	;volatile
 29453  018A56  006F FF78  F009    	movff	postinc2,btemp+8
 29454  018A5C  006F FF74  F00A    	movff	postdec2,btemp+9
 29455  018A62  2A0C               	incf	(btemp+11)^0,f,c
 29456  018A64  D003               	goto	u906_44
 29457  018A66                     u906_45:
 29458  018A66  90D8               	bcf	status,0,c
 29459  018A68  320A               	rrcf	(btemp+9)^0,f,c
 29460  018A6A  3209               	rrcf	(btemp+8)^0,f,c
 29461  018A6C                     u906_44:
 29462  018A6C  2E0C               	decfsz	(btemp+11)^0,f,c
 29463  018A6E  D7FB               	goto	u906_45
 29464  018A70  A009               	btfss	(btemp+8)^0,0,c
 29465  018A72  D7E4               	goto	l9962
 29466                           
 29467                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 29468  018A74  EC61  F0CE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 29469                           
 29470                           ; BSR set to: 62
 29471                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 29472  018A78  0100               	movlb	0	; () banked
 29473  018A7A  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 29474  018A7C  0B0F               	andlw	15
 29475  018A7E  6EE6               	movwf	postinc1,c
 29476  018A80  EC16  F0CE         	call	_ADCC_StartConversion	;wreg free
 29477                           
 29478                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29479  018A84  0012               	return		;funcret
 29480  018A86                     __end_of_adc_int_t_handler:
 29481                           	opt callstack 0
 29482                           
 29483 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 29484 ;; Defined at:
 29485 ;;		line 339 in file "mcc_generated_files/adcc.c"
 29486 ;; Parameters:    Size  Location     Type
 29487 ;;		None
 29488 ;; Auto vars:     Size  Location     Type
 29489 ;;		None
 29490 ;; Return value:  Size  Location     Type
 29491 ;;                  1  [STACK] void 
 29492 ;; Registers used:
 29493 ;;		None
 29494 ;; Tracked objects:
 29495 ;;		On entry : 3F/0
 29496 ;;		On exit  : 0/0
 29497 ;;		Unchanged: 0/0
 29498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29503 ;;Total ram usage:        0 bytes
 29504 ;; Hardware stack levels used:    1
 29505 ;; This function calls:
 29506 ;;		Nothing
 29507 ;; This function is called by:
 29508 ;;		_ADCC_Initialize
 29509 ;;		_ADCC_ISR
 29510 ;;		_ADCC_ThresholdISR
 29511 ;; This function uses a reentrant model
 29512 ;;
 29513                           
 29514                           	psect	text147
 29515  019D10                     __ptext147:
 29516                           	opt callstack 0
 29517  019D10                     _ADCC_DefaultInterruptHandler:
 29518                           	opt callstack 4
 29519                           
 29520                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29521                           
 29522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29523                           ;incstack = 0
 29524  019D10  0012               	return		;funcret
 29525  019D12                     __end_of_ADCC_DefaultInterruptHandler:
 29526                           	opt callstack 0
 29527                           
 29528 ;; *************** function _adc_int_handler *****************
 29529 ;; Defined at:
 29530 ;;		line 118 in file "daq.c"
 29531 ;; Parameters:    Size  Location     Type
 29532 ;;		None
 29533 ;; Auto vars:     Size  Location     Type
 29534 ;;		None
 29535 ;; Return value:  Size  Location     Type
 29536 ;;                  1  [STACK] void 
 29537 ;; Registers used:
 29538 ;;		None
 29539 ;; Tracked objects:
 29540 ;;		On entry : 3F/0
 29541 ;;		On exit  : 0/0
 29542 ;;		Unchanged: 0/0
 29543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29548 ;;Total ram usage:        0 bytes
 29549 ;; Hardware stack levels used:    1
 29550 ;; This function calls:
 29551 ;;		Nothing
 29552 ;; This function is called by:
 29553 ;;		_start_adc_scan
 29554 ;;		_ADCC_ISR
 29555 ;; This function uses a reentrant model
 29556 ;;
 29557                           
 29558                           	psect	text148
 29559  019D12                     __ptext148:
 29560                           	opt callstack 0
 29561  019D12                     _adc_int_handler:
 29562                           	opt callstack 4
 29563                           
 29564                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29565                           
 29566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29567                           ;incstack = 0
 29568  019D12  0012               	return		;funcret
 29569  019D14                     __end_of_adc_int_handler:
 29570                           	opt callstack 0
 29571                           
 29572 ;; *************** function _ADCC_ThresholdISR *****************
 29573 ;; Defined at:
 29574 ;;		line 327 in file "mcc_generated_files/adcc.c"
 29575 ;; Parameters:    Size  Location     Type
 29576 ;;		None
 29577 ;; Auto vars:     Size  Location     Type
 29578 ;;		None
 29579 ;; Return value:  Size  Location     Type
 29580 ;;                  1    wreg      void 
 29581 ;; Registers used:
 29582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 29583 ;; Tracked objects:
 29584 ;;		On entry : 0/0
 29585 ;;		On exit  : 0/0
 29586 ;;		Unchanged: 0/0
 29587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29590 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29591 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29592 ;;Total ram usage:        5 bytes
 29593 ;; Hardware stack levels used:    1
 29594 ;; Hardware stack levels required when called:    2
 29595 ;; This function calls:
 29596 ;;		Absolute function
 29597 ;;		_ADCC_DefaultInterruptHandler
 29598 ;;		_adc_int_t_handler
 29599 ;; This function is called by:
 29600 ;;		Interrupt level 2
 29601 ;; This function uses a non-reentrant model
 29602 ;;
 29603                           
 29604                           	psect	text149
 29605  018B5C                     __ptext149:
 29606                           	opt callstack 0
 29607  018B5C                     _ADCC_ThresholdISR:
 29608                           	opt callstack 3
 29609                           
 29610                           ;incstack = 0
 29611  018B5C  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 29612  018B62  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 29613  018B68  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 29614  018B6E  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 29615  018B74  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 29616  018B7A  EE14  F0C2         	lfsr	1,___inthi_sp
 29617                           
 29618                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 29619  018B7E  0139               	movlb	57	; () banked
 29620  018B80  97A1               	bcf	161,3,b	;volatile
 29621                           
 29622                           ; BSR set to: 57
 29623                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 29624  018B82  0100               	movlb	0	; () banked
 29625  018B84  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 29626  018B86  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 29627  018B88  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 29628  018B8A  B4D8               	btfsc	status,2,c
 29629  018B8C  D00C               	goto	i2u911_49
 29630                           
 29631                           ; BSR set to: 0
 29632                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 29633  018B8E  D801               	call	i2u911_48
 29634  018B90  D00A               	goto	i2u911_49
 29635  018B92                     i2u911_48:
 29636  018B92  0005               	push	
 29637  018B94  6EFA               	movwf	pclath,c
 29638  018B96  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 29639  018B98  6EFD               	movwf	tosl,c
 29640  018B9A  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 29641  018B9C  6EFE               	movwf	tosh,c
 29642  018B9E  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 29643  018BA0  6EFF               	movwf	tosu,c
 29644  018BA2  50FA               	movf	pclath,w,c
 29645  018BA4  0012               	return		;indir
 29646  018BA6                     i2u911_49:
 29647  018BA6  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 29648  018BAC  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 29649  018BB2  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 29650  018BB8  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 29651  018BBE  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 29652  018BC4  0011               	retfie		f
 29653  018BC6                     __end_of_ADCC_ThresholdISR:
 29654                           	opt callstack 0
 29655                           
 29656 ;; *************** function _UART1_rx_vect_isr *****************
 29657 ;; Defined at:
 29658 ;;		line 181 in file "mcc_generated_files/uart1.c"
 29659 ;; Parameters:    Size  Location     Type
 29660 ;;		None
 29661 ;; Auto vars:     Size  Location     Type
 29662 ;;		None
 29663 ;; Return value:  Size  Location     Type
 29664 ;;                  1    wreg      void 
 29665 ;; Registers used:
 29666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29667 ;; Tracked objects:
 29668 ;;		On entry : 0/0
 29669 ;;		On exit  : 0/0
 29670 ;;		Unchanged: 0/0
 29671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29676 ;;Total ram usage:        0 bytes
 29677 ;; Hardware stack levels used:    1
 29678 ;; Hardware stack levels required when called:    1
 29679 ;; This function calls:
 29680 ;;		Absolute function
 29681 ;;		_UART1_Receive_ISR
 29682 ;; This function is called by:
 29683 ;;		Interrupt level 2
 29684 ;; This function uses a non-reentrant model
 29685 ;;
 29686                           
 29687                           	psect	text150
 29688  0198E8                     __ptext150:
 29689                           	opt callstack 0
 29690  0198E8                     _UART1_rx_vect_isr:
 29691                           	opt callstack 4
 29692                           
 29693                           ;incstack = 0
 29694  0198E8  EE14  F0C2         	lfsr	1,___inthi_sp
 29695                           
 29696                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 29697  0198EC  0100               	movlb	0	; () banked
 29698  0198EE  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 29699  0198F0  11B9               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 29700  0198F2  11BA               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 29701  0198F4  B4D8               	btfsc	status,2,c
 29702  0198F6  0011               	retfie		f
 29703                           
 29704                           ; BSR set to: 0
 29705                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 29706  0198F8  D801               	call	i2u1100_48
 29707  0198FA  0011               	retfie		f
 29708  0198FC                     i2u1100_48:
 29709  0198FC  0005               	push	
 29710  0198FE  6EFA               	movwf	pclath,c
 29711  019900  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 29712  019902  6EFD               	movwf	tosl,c
 29713  019904  51B9               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 29714  019906  6EFE               	movwf	tosh,c
 29715  019908  51BA               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 29716  01990A  6EFF               	movwf	tosu,c
 29717  01990C  50FA               	movf	pclath,w,c
 29718  01990E  0012               	return		;indir
 29719  019910                     __end_of_UART1_rx_vect_isr:
 29720                           	opt callstack 0
 29721                           
 29722 ;; *************** function _UART1_Receive_ISR *****************
 29723 ;; Defined at:
 29724 ;;		line 192 in file "mcc_generated_files/uart1.c"
 29725 ;; Parameters:    Size  Location     Type
 29726 ;;		None
 29727 ;; Auto vars:     Size  Location     Type
 29728 ;;		None
 29729 ;; Return value:  Size  Location     Type
 29730 ;;                  1  [STACK] void 
 29731 ;; Registers used:
 29732 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29733 ;; Tracked objects:
 29734 ;;		On entry : 3F/0
 29735 ;;		On exit  : 0/0
 29736 ;;		Unchanged: 0/0
 29737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29742 ;;Total ram usage:        0 bytes
 29743 ;; Hardware stack levels used:    1
 29744 ;; This function calls:
 29745 ;;		Nothing
 29746 ;; This function is called by:
 29747 ;;		_UART1_Initialize
 29748 ;;		_UART1_rx_vect_isr
 29749 ;; This function uses a reentrant model
 29750 ;;
 29751                           
 29752                           	psect	text151
 29753  019A9E                     __ptext151:
 29754                           	opt callstack 0
 29755  019A9E                     _UART1_Receive_ISR:
 29756                           	opt callstack 4
 29757                           
 29758                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 29759                           
 29760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29761                           ;incstack = 0
 29762  019A9E  0EF2               	movlw	low _uart1RxBuffer
 29763  019AA0  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 29764  019AA2  6ED9               	movwf	fsr2l,c
 29765  019AA4  6ADA               	clrf	fsr2h,c
 29766  019AA6  0E01               	movlw	high _uart1RxBuffer
 29767  019AA8  22DA               	addwfc	fsr2h,f,c
 29768  019AAA  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 29769  019AB0  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 29770                           
 29771                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 29772  019AB2  0E07               	movlw	7
 29773  019AB4  6437               	cpfsgt	_uart1RxHead^0,c
 29774  019AB6  D001               	goto	l11540
 29775                           
 29776                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 29777  019AB8  6A37               	clrf	_uart1RxHead^0,c	;volatile
 29778  019ABA                     l11540:
 29779                           
 29780                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 29781  019ABA  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 29782                           
 29783                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29784  019ABC  0012               	return		;funcret
 29785  019ABE                     __end_of_UART1_Receive_ISR:
 29786                           	opt callstack 0
 29787                           
 29788 ;; *************** function _UART2_tx_vect_isr *****************
 29789 ;; Defined at:
 29790 ;;		line 195 in file "mcc_generated_files/uart2.c"
 29791 ;; Parameters:    Size  Location     Type
 29792 ;;		None
 29793 ;; Auto vars:     Size  Location     Type
 29794 ;;		None
 29795 ;; Return value:  Size  Location     Type
 29796 ;;                  1    wreg      void 
 29797 ;; Registers used:
 29798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29799 ;; Tracked objects:
 29800 ;;		On entry : 0/0
 29801 ;;		On exit  : 0/0
 29802 ;;		Unchanged: 0/0
 29803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29808 ;;Total ram usage:        0 bytes
 29809 ;; Hardware stack levels used:    1
 29810 ;; Hardware stack levels required when called:    1
 29811 ;; This function calls:
 29812 ;;		Absolute function
 29813 ;;		_UART2_Transmit_ISR
 29814 ;; This function is called by:
 29815 ;;		Interrupt level 2
 29816 ;; This function uses a non-reentrant model
 29817 ;;
 29818                           
 29819                           	psect	text152
 29820  019910                     __ptext152:
 29821                           	opt callstack 0
 29822  019910                     _UART2_tx_vect_isr:
 29823                           	opt callstack 4
 29824                           
 29825                           ;incstack = 0
 29826  019910  EE14  F0C2         	lfsr	1,___inthi_sp
 29827                           
 29828                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 29829  019914  0100               	movlb	0	; () banked
 29830  019916  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 29831  019918  11BC               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 29832  01991A  11BD               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 29833  01991C  B4D8               	btfsc	status,2,c
 29834  01991E  0011               	retfie		f
 29835                           
 29836                           ; BSR set to: 0
 29837                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 29838  019920  D801               	call	i2u1102_48
 29839  019922  0011               	retfie		f
 29840  019924                     i2u1102_48:
 29841  019924  0005               	push	
 29842  019926  6EFA               	movwf	pclath,c
 29843  019928  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 29844  01992A  6EFD               	movwf	tosl,c
 29845  01992C  51BC               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 29846  01992E  6EFE               	movwf	tosh,c
 29847  019930  51BD               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 29848  019932  6EFF               	movwf	tosu,c
 29849  019934  50FA               	movf	pclath,w,c
 29850  019936  0012               	return		;indir
 29851  019938                     __end_of_UART2_tx_vect_isr:
 29852                           	opt callstack 0
 29853                           
 29854 ;; *************** function _UART2_Transmit_ISR *****************
 29855 ;; Defined at:
 29856 ;;		line 213 in file "mcc_generated_files/uart2.c"
 29857 ;; Parameters:    Size  Location     Type
 29858 ;;		None
 29859 ;; Auto vars:     Size  Location     Type
 29860 ;;		None
 29861 ;; Return value:  Size  Location     Type
 29862 ;;                  1  [STACK] void 
 29863 ;; Registers used:
 29864 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29865 ;; Tracked objects:
 29866 ;;		On entry : 3F/0
 29867 ;;		On exit  : 3B/39
 29868 ;;		Unchanged: 0/0
 29869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29874 ;;Total ram usage:        0 bytes
 29875 ;; Hardware stack levels used:    1
 29876 ;; This function calls:
 29877 ;;		Nothing
 29878 ;; This function is called by:
 29879 ;;		_UART2_Initialize
 29880 ;;		_UART2_tx_vect_isr
 29881 ;; This function uses a reentrant model
 29882 ;;
 29883                           
 29884                           	psect	text153
 29885  019610                     __ptext153:
 29886                           	opt callstack 0
 29887  019610                     _UART2_Transmit_ISR:
 29888                           	opt callstack 4
 29889                           
 29890                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 29891                           
 29892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29893                           ;incstack = 0
 29894  019610  0E40               	movlw	64
 29895  019612  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 29896  019614  D010               	goto	l673
 29897                           
 29898                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 29899  019616  0E54               	movlw	low _uart2TxBuffer
 29900  019618  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 29901  01961A  6ED9               	movwf	fsr2l,c
 29902  01961C  6ADA               	clrf	fsr2h,c
 29903  01961E  0E03               	movlw	high _uart2TxBuffer
 29904  019620  22DA               	addwfc	fsr2h,f,c
 29905  019622  50DF               	movf	indf2,w,c
 29906  019624  013D               	movlb	61	; () banked
 29907  019626  6FD2               	movwf	210,b	;volatile
 29908                           
 29909                           ; BSR set to: 61
 29910  019628  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 29911                           
 29912                           ; BSR set to: 61
 29913                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 29914  01962A  0E3F               	movlw	63
 29915  01962C  6433               	cpfsgt	_uart2TxTail^0,c
 29916  01962E  D001               	goto	l11552
 29917                           
 29918                           ; BSR set to: 61
 29919                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 29920  019630  6A33               	clrf	_uart2TxTail^0,c	;volatile
 29921  019632                     l11552:
 29922                           
 29923                           ; BSR set to: 61
 29924                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 29925  019632  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 29926                           
 29927                           ;mcc_generated_files/uart2.c: 224:     }
 29928  019634  0012               	return	
 29929  019636                     l673:
 29930                           
 29931                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 29932  019636  0139               	movlb	57	; () banked
 29933  019638  9796               	bcf	150,3,b	;volatile
 29934                           
 29935                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 29936  01963A  0012               	return		;funcret
 29937  01963C                     __end_of_UART2_Transmit_ISR:
 29938                           	opt callstack 0
 29939                           
 29940 ;; *************** function _UART2_rx_vect_isr *****************
 29941 ;; Defined at:
 29942 ;;		line 203 in file "mcc_generated_files/uart2.c"
 29943 ;; Parameters:    Size  Location     Type
 29944 ;;		None
 29945 ;; Auto vars:     Size  Location     Type
 29946 ;;		None
 29947 ;; Return value:  Size  Location     Type
 29948 ;;                  1    wreg      void 
 29949 ;; Registers used:
 29950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29951 ;; Tracked objects:
 29952 ;;		On entry : 0/0
 29953 ;;		On exit  : 0/0
 29954 ;;		Unchanged: 0/0
 29955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29960 ;;Total ram usage:        0 bytes
 29961 ;; Hardware stack levels used:    1
 29962 ;; Hardware stack levels required when called:    1
 29963 ;; This function calls:
 29964 ;;		Absolute function
 29965 ;;		_UART2_Receive_ISR
 29966 ;; This function is called by:
 29967 ;;		Interrupt level 2
 29968 ;; This function uses a non-reentrant model
 29969 ;;
 29970                           
 29971                           	psect	text154
 29972  019938                     __ptext154:
 29973                           	opt callstack 0
 29974  019938                     _UART2_rx_vect_isr:
 29975                           	opt callstack 4
 29976                           
 29977                           ;incstack = 0
 29978  019938  EE14  F0C2         	lfsr	1,___inthi_sp
 29979                           
 29980                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 29981  01993C  0100               	movlb	0	; () banked
 29982  01993E  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 29983  019940  11BF               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 29984  019942  11C0               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 29985  019944  B4D8               	btfsc	status,2,c
 29986  019946  0011               	retfie		f
 29987                           
 29988                           ; BSR set to: 0
 29989                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 29990  019948  D801               	call	i2u917_48
 29991  01994A  0011               	retfie		f
 29992  01994C                     i2u917_48:
 29993  01994C  0005               	push	
 29994  01994E  6EFA               	movwf	pclath,c
 29995  019950  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 29996  019952  6EFD               	movwf	tosl,c
 29997  019954  51BF               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 29998  019956  6EFE               	movwf	tosh,c
 29999  019958  51C0               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 30000  01995A  6EFF               	movwf	tosu,c
 30001  01995C  50FA               	movf	pclath,w,c
 30002  01995E  0012               	return		;indir
 30003  019960                     __end_of_UART2_rx_vect_isr:
 30004                           	opt callstack 0
 30005                           
 30006 ;; *************** function _UART2_Receive_ISR *****************
 30007 ;; Defined at:
 30008 ;;		line 233 in file "mcc_generated_files/uart2.c"
 30009 ;; Parameters:    Size  Location     Type
 30010 ;;		None
 30011 ;; Auto vars:     Size  Location     Type
 30012 ;;		None
 30013 ;; Return value:  Size  Location     Type
 30014 ;;                  1  [STACK] void 
 30015 ;; Registers used:
 30016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30017 ;; Tracked objects:
 30018 ;;		On entry : 3F/0
 30019 ;;		On exit  : 0/0
 30020 ;;		Unchanged: 0/0
 30021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30026 ;;Total ram usage:        0 bytes
 30027 ;; Hardware stack levels used:    1
 30028 ;; This function calls:
 30029 ;;		Nothing
 30030 ;; This function is called by:
 30031 ;;		_UART2_Initialize
 30032 ;;		_UART2_rx_vect_isr
 30033 ;; This function uses a reentrant model
 30034 ;;
 30035                           
 30036                           	psect	text155
 30037  019B36                     __ptext155:
 30038                           	opt callstack 0
 30039  019B36                     _UART2_Receive_ISR:
 30040                           	opt callstack 4
 30041                           
 30042                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 30043                           
 30044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30045                           ;incstack = 0
 30046  019B36  0E00               	movlw	low _uart2RxBuffer
 30047  019B38  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 30048  019B3A  6ED9               	movwf	fsr2l,c
 30049  019B3C  6ADA               	clrf	fsr2h,c
 30050  019B3E  0E05               	movlw	high _uart2RxBuffer
 30051  019B40  22DA               	addwfc	fsr2h,f,c
 30052  019B42  006F F743 FFDF     	movff	15824,indf2	;volatile
 30053  019B48  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 30054                           
 30055                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 30056  019B4A  2831               	incf	_uart2RxHead^0,w,c
 30057  019B4C  B4D8               	btfsc	status,2,c
 30058                           
 30059                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 30060  019B4E  6A31               	clrf	_uart2RxHead^0,c	;volatile
 30061                           
 30062                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 30063  019B50  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 30064                           
 30065                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30066  019B52  0012               	return		;funcret
 30067  019B54                     __end_of_UART2_Receive_ISR:
 30068                           	opt callstack 0
 30069                           
 30070 ;; *************** function _TMR6_ISR *****************
 30071 ;; Defined at:
 30072 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 30073 ;; Parameters:    Size  Location     Type
 30074 ;;		None
 30075 ;; Auto vars:     Size  Location     Type
 30076 ;;		None
 30077 ;; Return value:  Size  Location     Type
 30078 ;;                  1    wreg      void 
 30079 ;; Registers used:
 30080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 30081 ;; Tracked objects:
 30082 ;;		On entry : 0/0
 30083 ;;		On exit  : 0/0
 30084 ;;		Unchanged: 0/0
 30085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30090 ;;Total ram usage:        1 bytes
 30091 ;; Hardware stack levels used:    1
 30092 ;; Hardware stack levels required when called:    2
 30093 ;; This function calls:
 30094 ;;		_TMR6_CallBack
 30095 ;; This function is called by:
 30096 ;;		Interrupt level 2
 30097 ;; This function uses a non-reentrant model
 30098 ;;
 30099                           
 30100                           	psect	text156
 30101  019B8C                     __ptext156:
 30102                           	opt callstack 0
 30103  019B8C                     _TMR6_ISR:
 30104                           	opt callstack 3
 30105                           
 30106                           ;incstack = 0
 30107  019B8C  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 30108  019B92  EE14  F0C2         	lfsr	1,___inthi_sp
 30109                           
 30110                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 30111  019B96  0139               	movlb	57	; () banked
 30112  019B98  91A9               	bcf	169,0,b	;volatile
 30113                           
 30114                           ; BSR set to: 57
 30115                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 30116  019B9A  EC1C  F0CD         	call	_TMR6_CallBack	;wreg free
 30117  019B9E  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 30118  019BA4  0011               	retfie		f
 30119  019BA6                     __end_of_TMR6_ISR:
 30120                           	opt callstack 0
 30121                           
 30122 ;; *************** function _TMR6_CallBack *****************
 30123 ;; Defined at:
 30124 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 30125 ;; Parameters:    Size  Location     Type
 30126 ;;		None
 30127 ;; Auto vars:     Size  Location     Type
 30128 ;;		None
 30129 ;; Return value:  Size  Location     Type
 30130 ;;                  1  [STACK] void 
 30131 ;; Registers used:
 30132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 30133 ;; Tracked objects:
 30134 ;;		On entry : 3F/39
 30135 ;;		On exit  : 0/0
 30136 ;;		Unchanged: 0/0
 30137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30142 ;;Total ram usage:        0 bytes
 30143 ;; Hardware stack levels used:    1
 30144 ;; Hardware stack levels required when called:    1
 30145 ;; This function calls:
 30146 ;;		Absolute function
 30147 ;;		_TMR6_DefaultInterruptHandler
 30148 ;; This function is called by:
 30149 ;;		_TMR6_ISR
 30150 ;; This function uses a reentrant model
 30151 ;;
 30152                           
 30153                           	psect	text157
 30154  019A38                     __ptext157:
 30155                           	opt callstack 0
 30156  019A38                     _TMR6_CallBack:
 30157                           	opt callstack 3
 30158                           
 30159                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 30160                           
 30161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30162                           ;incstack = 0
 30163  019A38  0100               	movlb	0	; () banked
 30164  019A3A  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30165  019A3C  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30166  019A3E  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30167  019A40  B4D8               	btfsc	status,2,c
 30168  019A42  0012               	return	
 30169                           
 30170                           ; BSR set to: 0
 30171                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 30172  019A44  D801               	call	u881_48
 30173  019A46  0012               	return	
 30174  019A48                     u881_48:
 30175  019A48  0005               	push	
 30176  019A4A  6EFA               	movwf	pclath,c
 30177  019A4C  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30178  019A4E  6EFD               	movwf	tosl,c
 30179  019A50  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30180  019A52  6EFE               	movwf	tosh,c
 30181  019A54  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30182  019A56  6EFF               	movwf	tosu,c
 30183  019A58  50FA               	movf	pclath,w,c
 30184  019A5A  0012               	return		;indir
 30185  019A5C                     __end_of_TMR6_CallBack:
 30186                           	opt callstack 0
 30187                           
 30188 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 30189 ;; Defined at:
 30190 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 30191 ;; Parameters:    Size  Location     Type
 30192 ;;		None
 30193 ;; Auto vars:     Size  Location     Type
 30194 ;;  i               1  [STACK] unsigned char 
 30195 ;; Return value:  Size  Location     Type
 30196 ;;                  1  [STACK] void 
 30197 ;; Registers used:
 30198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 30199 ;; Tracked objects:
 30200 ;;		On entry : 3F/0
 30201 ;;		On exit  : 0/0
 30202 ;;		Unchanged: 0/0
 30203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30208 ;;Total ram usage:        0 bytes
 30209 ;; Hardware stack levels used:    1
 30210 ;; This function calls:
 30211 ;;		Nothing
 30212 ;; This function is called by:
 30213 ;;		_TMR6_Initialize
 30214 ;;		_TMR6_CallBack
 30215 ;; This function uses a reentrant model
 30216 ;;
 30217                           
 30218                           	psect	text158
 30219  018FB8                     __ptext158:
 30220                           	opt callstack 0
 30221  018FB8                     _TMR6_DefaultInterruptHandler:
 30222                           	opt callstack 0
 30223                           
 30224                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30225  018FB8  52E6               	movf	postinc1,f,c
 30226                           
 30227                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 30228                           ;stkvar	_i @ sp[(-1)+0]
 30229                           
 30230                           ;incstack = 0
 30231  018FBA  0EFF               	movlw	-1
 30232  018FBC  6AE3               	clrf	plusw1,c
 30233  018FBE                     l9284:
 30234                           
 30235                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 30236                           ;stkvar	_i @ sp[(-1)+0]
 30237  018FBE  0EFF               	movlw	-1
 30238  018FC0  50E3               	movf	plusw1,w,c
 30239  018FC2  0D02               	mullw	2
 30240  018FC4  0EDA               	movlw	low _tickCount
 30241  018FC6  24F3               	addwf	243,w,c
 30242  018FC8  6ED9               	movwf	fsr2l,c
 30243  018FCA  0E01               	movlw	high _tickCount
 30244  018FCC  20F4               	addwfc	prodh,w,c
 30245  018FCE  6EDA               	movwf	fsr2h,c
 30246  018FD0  50DE               	movf	postinc2,w,c
 30247  018FD2  10DE               	iorwf	postinc2,w,c
 30248  018FD4  B4D8               	btfsc	status,2,c
 30249  018FD6  D00C               	goto	l9288
 30250                           
 30251                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 30252                           ;stkvar	_i @ sp[(-1)+0]
 30253  018FD8  0EFF               	movlw	-1
 30254  018FDA  50E3               	movf	plusw1,w,c
 30255  018FDC  0D02               	mullw	2
 30256  018FDE  0EDA               	movlw	low _tickCount
 30257  018FE0  24F3               	addwf	243,w,c
 30258  018FE2  6ED9               	movwf	fsr2l,c
 30259  018FE4  0E01               	movlw	high _tickCount
 30260  018FE6  20F4               	addwfc	prodh,w,c
 30261  018FE8  6EDA               	movwf	fsr2h,c
 30262  018FEA  06DE               	decf	postinc2,f,c
 30263  018FEC  0E00               	movlw	0
 30264  018FEE  5ADD               	subwfb	postdec2,f,c
 30265  018FF0                     l9288:
 30266                           
 30267                           ;mcc_generated_files/tmr6.c: 207:  }
 30268                           ;stkvar	_i @ sp[(-1)+0]
 30269  018FF0  0EFF               	movlw	-1
 30270  018FF2  2AE3               	incf	plusw1,f,c
 30271                           
 30272                           ;stkvar	_i @ sp[(-1)+0]
 30273  018FF4  0EFF               	movlw	-1
 30274  018FF6  006F FF8C  F001    	movff	plusw1,btemp
 30275  018FFC  0E0B               	movlw	11
 30276  018FFE  6401               	cpfsgt	btemp^0,c
 30277  019000  D7DE               	goto	l9284
 30278                           
 30279                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30280  019002  52E5               	movf	postdec1,f,c
 30281  019004  0012               	return		;funcret
 30282  019006                     __end_of_TMR6_DefaultInterruptHandler:
 30283                           	opt callstack 0
 30284                           
 30285 ;; *************** function _DMA1_DMASCNT_ISR *****************
 30286 ;; Defined at:
 30287 ;;		line 126 in file "mcc_generated_files/dma1.c"
 30288 ;; Parameters:    Size  Location     Type
 30289 ;;		None
 30290 ;; Auto vars:     Size  Location     Type
 30291 ;;		None
 30292 ;; Return value:  Size  Location     Type
 30293 ;;                  1    wreg      void 
 30294 ;; Registers used:
 30295 ;;		None
 30296 ;; Tracked objects:
 30297 ;;		On entry : 0/0
 30298 ;;		On exit  : 3F/0
 30299 ;;		Unchanged: 0/0
 30300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30305 ;;Total ram usage:        0 bytes
 30306 ;; Hardware stack levels used:    1
 30307 ;; This function calls:
 30308 ;;		Nothing
 30309 ;; This function is called by:
 30310 ;;		Interrupt level 2
 30311 ;; This function uses a non-reentrant model
 30312 ;;
 30313                           
 30314                           	psect	text159
 30315  019C7C                     __ptext159:
 30316                           	opt callstack 0
 30317  019C7C                     _DMA1_DMASCNT_ISR:
 30318                           	opt callstack 5
 30319                           
 30320                           ;incstack = 0
 30321  019C7C  EE14  F0C2         	lfsr	1,___inthi_sp
 30322                           
 30323                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 30324  019C80  0139               	movlb	57	; () banked
 30325  019C82  91A2               	bcf	162,0,b	;volatile
 30326                           
 30327                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 30328  019C84  0100               	movlb	0	; () banked
 30329  019C86  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 30330                           
 30331                           ; BSR set to: 0
 30332  019C88  0011               	retfie		f
 30333  019C8A                     __end_of_DMA1_DMASCNT_ISR:
 30334                           	opt callstack 0
 30335                           
 30336 ;; *************** function _DMA1_DMADCNT_ISR *****************
 30337 ;; Defined at:
 30338 ;;		line 134 in file "mcc_generated_files/dma1.c"
 30339 ;; Parameters:    Size  Location     Type
 30340 ;;		None
 30341 ;; Auto vars:     Size  Location     Type
 30342 ;;		None
 30343 ;; Return value:  Size  Location     Type
 30344 ;;                  1    wreg      void 
 30345 ;; Registers used:
 30346 ;;		None
 30347 ;; Tracked objects:
 30348 ;;		On entry : 0/0
 30349 ;;		On exit  : 3F/39
 30350 ;;		Unchanged: 0/0
 30351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30356 ;;Total ram usage:        0 bytes
 30357 ;; Hardware stack levels used:    1
 30358 ;; This function calls:
 30359 ;;		Nothing
 30360 ;; This function is called by:
 30361 ;;		Interrupt level 2
 30362 ;; This function uses a non-reentrant model
 30363 ;;
 30364                           
 30365                           	psect	text160
 30366  019CA0                     __ptext160:
 30367                           	opt callstack 0
 30368  019CA0                     _DMA1_DMADCNT_ISR:
 30369                           	opt callstack 5
 30370                           
 30371                           ; BSR set to: 0
 30372                           ;incstack = 0
 30373  019CA0  EE14  F0C2         	lfsr	1,___inthi_sp
 30374                           
 30375                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 30376  019CA4  0139               	movlb	57	; () banked
 30377  019CA6  93A2               	bcf	162,1,b	;volatile
 30378                           
 30379                           ; BSR set to: 57
 30380  019CA8  0011               	retfie		f
 30381  019CAA                     __end_of_DMA1_DMADCNT_ISR:
 30382                           	opt callstack 0
 30383                           
 30384 ;; *************** function _DMA1_DMAA_ISR *****************
 30385 ;; Defined at:
 30386 ;;		line 144 in file "mcc_generated_files/dma1.c"
 30387 ;; Parameters:    Size  Location     Type
 30388 ;;		None
 30389 ;; Auto vars:     Size  Location     Type
 30390 ;;		None
 30391 ;; Return value:  Size  Location     Type
 30392 ;;                  1    wreg      void 
 30393 ;; Registers used:
 30394 ;;		None
 30395 ;; Tracked objects:
 30396 ;;		On entry : 0/0
 30397 ;;		On exit  : 3F/39
 30398 ;;		Unchanged: 0/0
 30399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30404 ;;Total ram usage:        0 bytes
 30405 ;; Hardware stack levels used:    1
 30406 ;; This function calls:
 30407 ;;		Nothing
 30408 ;; This function is called by:
 30409 ;;		Interrupt level 2
 30410 ;; This function uses a non-reentrant model
 30411 ;;
 30412                           
 30413                           	psect	text161
 30414  019CAC                     __ptext161:
 30415                           	opt callstack 0
 30416  019CAC                     _DMA1_DMAA_ISR:
 30417                           	opt callstack 5
 30418                           
 30419                           ; BSR set to: 57
 30420                           ;incstack = 0
 30421  019CAC  EE14  F0C2         	lfsr	1,___inthi_sp
 30422                           
 30423                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 30424  019CB0  0139               	movlb	57	; () banked
 30425  019CB2  97A2               	bcf	162,3,b	;volatile
 30426                           
 30427                           ; BSR set to: 57
 30428  019CB4  0011               	retfie		f
 30429  019CB6                     __end_of_DMA1_DMAA_ISR:
 30430                           	opt callstack 0
 30431                           
 30432 ;; *************** function _DMA1_DMAOR_ISR *****************
 30433 ;; Defined at:
 30434 ;;		line 155 in file "mcc_generated_files/dma1.c"
 30435 ;; Parameters:    Size  Location     Type
 30436 ;;		None
 30437 ;; Auto vars:     Size  Location     Type
 30438 ;;		None
 30439 ;; Return value:  Size  Location     Type
 30440 ;;                  1    wreg      void 
 30441 ;; Registers used:
 30442 ;;		None
 30443 ;; Tracked objects:
 30444 ;;		On entry : 0/0
 30445 ;;		On exit  : 3F/39
 30446 ;;		Unchanged: 0/0
 30447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30452 ;;Total ram usage:        0 bytes
 30453 ;; Hardware stack levels used:    1
 30454 ;; This function calls:
 30455 ;;		Nothing
 30456 ;; This function is called by:
 30457 ;;		Interrupt level 2
 30458 ;; This function uses a non-reentrant model
 30459 ;;
 30460                           
 30461                           	psect	text162
 30462  019CB8                     __ptext162:
 30463                           	opt callstack 0
 30464  019CB8                     _DMA1_DMAOR_ISR:
 30465                           	opt callstack 5
 30466                           
 30467                           ; BSR set to: 57
 30468                           ;incstack = 0
 30469  019CB8  EE14  F0C2         	lfsr	1,___inthi_sp
 30470                           
 30471                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 30472  019CBC  0139               	movlb	57	; () banked
 30473  019CBE  95A2               	bcf	162,2,b	;volatile
 30474                           
 30475                           ; BSR set to: 57
 30476  019CC0  0011               	retfie		f
 30477  019CC2                     __end_of_DMA1_DMAOR_ISR:
 30478                           	opt callstack 0
 30479                           
 30480                           ;
 30481                           ; Interrupt Vector Table @ 0x8
 30482                           ;
 30483                           
 30484                           	psect	ivt0x8
 30485  000008                     __pivt0x8:
 30486                           	opt callstack 0
 30487  000008                     ivt0x8_base:
 30488                           	opt callstack 0
 30489                           
 30490                           ; Vector 0 : SWINT
 30491  000008  6741               	dw	_Default_ISR shr (0+2)
 30492                           
 30493                           ; Vector 1 : HLVD
 30494  00000A  6741               	dw	_Default_ISR shr (0+2)
 30495                           
 30496                           ; Vector 2 : OSF
 30497  00000C  6741               	dw	_Default_ISR shr (0+2)
 30498                           
 30499                           ; Vector 3 : CSW
 30500  00000E  6741               	dw	_Default_ISR shr (0+2)
 30501                           
 30502                           ; Vector 4 : NVM
 30503  000010  6741               	dw	_Default_ISR shr (0+2)
 30504                           
 30505                           ; Vector 5 : SCAN
 30506  000012  6741               	dw	_Default_ISR shr (0+2)
 30507                           
 30508                           ; Vector 6 : CRC
 30509  000014  6741               	dw	_Default_ISR shr (0+2)
 30510                           
 30511                           ; Vector 7 : IOC
 30512  000016  6741               	dw	_Default_ISR shr (0+2)
 30513                           
 30514                           ; Vector 8 : INT0
 30515  000018  671B               	dw	_INT0_ISR shr (0+2)
 30516                           
 30517                           ; Vector 9 : ZCD
 30518  00001A  6741               	dw	_Default_ISR shr (0+2)
 30519                           
 30520                           ; Vector 10 : AD
 30521  00001C  6579               	dw	_ADCC_ISR shr (0+2)
 30522                           
 30523                           ; Vector 11 : ADT
 30524  00001E  62D7               	dw	_ADCC_ThresholdISR shr (0+2)
 30525                           
 30526                           ; Vector 12 : CMP1
 30527  000020  6741               	dw	_Default_ISR shr (0+2)
 30528                           
 30529                           ; Vector 13 : SMT1
 30530  000022  6741               	dw	_Default_ISR shr (0+2)
 30531                           
 30532                           ; Vector 14 : SMT1PRA
 30533  000024  6741               	dw	_Default_ISR shr (0+2)
 30534                           
 30535                           ; Vector 15 : SMT1PRW
 30536  000026  6741               	dw	_Default_ISR shr (0+2)
 30537                           
 30538                           ; Vector 16 : DMA1SCNT
 30539  000028  671F               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 30540                           
 30541                           ; Vector 17 : DMA1DCNT
 30542  00002A  6728               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 30543                           
 30544                           ; Vector 18 : DMA1OR
 30545  00002C  672E               	dw	_DMA1_DMAOR_ISR shr (0+2)
 30546                           
 30547                           ; Vector 19 : DMA1A
 30548  00002E  672B               	dw	_DMA1_DMAA_ISR shr (0+2)
 30549                           
 30550                           ; Vector 20 : SPI1RX
 30551  000030  6741               	dw	_Default_ISR shr (0+2)
 30552                           
 30553                           ; Vector 21 : SPI1TX
 30554  000032  6741               	dw	_Default_ISR shr (0+2)
 30555                           
 30556                           ; Vector 22 : SPI1
 30557  000034  6741               	dw	_Default_ISR shr (0+2)
 30558                           
 30559                           ; Vector 23 : I2C1RX
 30560  000036  6741               	dw	_Default_ISR shr (0+2)
 30561                           
 30562                           ; Vector 24 : I2C1TX
 30563  000038  6741               	dw	_Default_ISR shr (0+2)
 30564                           
 30565                           ; Vector 25 : I2C1
 30566  00003A  6741               	dw	_Default_ISR shr (0+2)
 30567                           
 30568                           ; Vector 26 : I2C1E
 30569  00003C  6741               	dw	_Default_ISR shr (0+2)
 30570                           
 30571                           ; Vector 27 : U1RX
 30572  00003E  663A               	dw	_UART1_rx_vect_isr shr (0+2)
 30573                           
 30574                           ; Vector 28 : U1TX
 30575  000040  6741               	dw	_Default_ISR shr (0+2)
 30576                           
 30577                           ; Vector 29 : U1E
 30578  000042  6741               	dw	_Default_ISR shr (0+2)
 30579                           
 30580                           ; Vector 30 : U1
 30581  000044  6741               	dw	_Default_ISR shr (0+2)
 30582                           
 30583                           ; Vector 31 : TMR0
 30584  000046  6741               	dw	_Default_ISR shr (0+2)
 30585                           
 30586                           ; Vector 32 : TMR1
 30587  000048  6741               	dw	_Default_ISR shr (0+2)
 30588                           
 30589                           ; Vector 33 : TMR1G
 30590  00004A  6741               	dw	_Default_ISR shr (0+2)
 30591                           
 30592                           ; Vector 34 : TMR2
 30593  00004C  6741               	dw	_Default_ISR shr (0+2)
 30594                           
 30595                           ; Vector 35 : CCP1
 30596  00004E  6741               	dw	_Default_ISR shr (0+2)
 30597                           
 30598                           ; Vector 36 : Undefined
 30599  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 30600                           
 30601                           ; Vector 37 : NCO1
 30602  000052  6741               	dw	_Default_ISR shr (0+2)
 30603                           
 30604                           ; Vector 38 : CWG1
 30605  000054  6741               	dw	_Default_ISR shr (0+2)
 30606                           
 30607                           ; Vector 39 : CLC1
 30608  000056  6741               	dw	_Default_ISR shr (0+2)
 30609                           
 30610                           ; Vector 40 : INT1
 30611  000058  64DF               	dw	_INT1_ISR shr (0+2)
 30612                           
 30613                           ; Vector 41 : CMP2
 30614  00005A  6741               	dw	_Default_ISR shr (0+2)
 30615                           
 30616                           ; Vector 42 : DMA2SCNT
 30617  00005C  6741               	dw	_Default_ISR shr (0+2)
 30618                           
 30619                           ; Vector 43 : DMA2DCNT
 30620  00005E  6741               	dw	_Default_ISR shr (0+2)
 30621                           
 30622                           ; Vector 44 : DMA2OR
 30623  000060  6741               	dw	_Default_ISR shr (0+2)
 30624                           
 30625                           ; Vector 45 : DMA2A
 30626  000062  6741               	dw	_Default_ISR shr (0+2)
 30627                           
 30628                           ; Vector 46 : I2C2RX
 30629  000064  6741               	dw	_Default_ISR shr (0+2)
 30630                           
 30631                           ; Vector 47 : I2C2TX
 30632  000066  6741               	dw	_Default_ISR shr (0+2)
 30633                           
 30634                           ; Vector 48 : I2C2
 30635  000068  6741               	dw	_Default_ISR shr (0+2)
 30636                           
 30637                           ; Vector 49 : I2C2E
 30638  00006A  6741               	dw	_Default_ISR shr (0+2)
 30639                           
 30640                           ; Vector 50 : U2RX
 30641  00006C  664E               	dw	_UART2_rx_vect_isr shr (0+2)
 30642                           
 30643                           ; Vector 51 : U2TX
 30644  00006E  6644               	dw	_UART2_tx_vect_isr shr (0+2)
 30645                           
 30646                           ; Vector 52 : U2E
 30647  000070  6741               	dw	_Default_ISR shr (0+2)
 30648                           
 30649                           ; Vector 53 : U2
 30650  000072  6741               	dw	_Default_ISR shr (0+2)
 30651                           
 30652                           ; Vector 54 : TMR3
 30653  000074  5C6A               	dw	_TMR3_ISR shr (0+2)
 30654                           
 30655                           ; Vector 55 : TMR3G
 30656  000076  6741               	dw	_Default_ISR shr (0+2)
 30657                           
 30658                           ; Vector 56 : TMR4
 30659  000078  6741               	dw	_Default_ISR shr (0+2)
 30660                           
 30661                           ; Vector 57 : CCP2
 30662  00007A  6741               	dw	_Default_ISR shr (0+2)
 30663                           
 30664                           ; Vector 58 : Undefined
 30665  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 30666                           
 30667                           ; Vector 59 : CWG2
 30668  00007E  6741               	dw	_Default_ISR shr (0+2)
 30669                           
 30670                           ; Vector 60 : CLC2
 30671  000080  6741               	dw	_Default_ISR shr (0+2)
 30672                           
 30673                           ; Vector 61 : INT2
 30674  000082  6741               	dw	_Default_ISR shr (0+2)
 30675                           
 30676                           ; Vector 62 : Undefined
 30677  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 30678                           
 30679                           ; Vector 63 : Undefined
 30680  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 30681                           
 30682                           ; Vector 64 : Undefined
 30683  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 30684                           
 30685                           ; Vector 65 : Undefined
 30686  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 30687                           
 30688                           ; Vector 66 : Undefined
 30689  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 30690                           
 30691                           ; Vector 67 : Undefined
 30692  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 30693                           
 30694                           ; Vector 68 : Undefined
 30695  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 30696                           
 30697                           ; Vector 69 : Undefined
 30698  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 30699                           
 30700                           ; Vector 70 : TMR5
 30701  000094  639A               	dw	_TMR5_ISR shr (0+2)
 30702                           
 30703                           ; Vector 71 : TMR5G
 30704  000096  6741               	dw	_Default_ISR shr (0+2)
 30705                           
 30706                           ; Vector 72 : TMR6
 30707  000098  66E3               	dw	_TMR6_ISR shr (0+2)
 30708                           
 30709                           ; Vector 73 : CCP3
 30710  00009A  6741               	dw	_Default_ISR shr (0+2)
 30711                           
 30712                           ; Vector 74 : CWG3
 30713  00009C  6741               	dw	_Default_ISR shr (0+2)
 30714                           
 30715                           ; Vector 75 : CLC3
 30716  00009E  6741               	dw	_Default_ISR shr (0+2)
 30717                           
 30718                           ; Vector 76 : Undefined
 30719  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 30720                           
 30721                           ; Vector 77 : Undefined
 30722  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 30723                           
 30724                           ; Vector 78 : Undefined
 30725  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 30726                           
 30727                           ; Vector 79 : Undefined
 30728  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 30729                           
 30730                           ; Vector 80 : CCP4
 30731  0000A8  6741               	dw	_Default_ISR shr (0+2)
 30732                           
 30733                           ; Vector 81 : CLC4
 30734  0000AA  6741               	dw	_Default_ISR shr (0+2)
 30735  0000AC                     ivt0x8_undefint:
 30736                           	opt callstack 0
 30737  0000AC  00FF               	reset	
 30738                           
 30739                           	psect	text163
 30740  000000                     __ptext163:
 30741                           	opt callstack 0
 30742                           
 30743                           	psect	rparam
 30744  0000                     
 30745                           	psect	temp
 30746  000001                     btemp:
 30747                           	opt callstack 0
 30748  000001                     	ds	32
 30749  0000                     wtemp0	set	btemp
 30750  0000                     wtemp1	set	btemp+2
 30751  0000                     wtemp2	set	btemp+4
 30752  0000                     wtemp3	set	btemp+6
 30753  0000                     wtemp4	set	btemp+8
 30754  0000                     wtemp5	set	btemp+10
 30755  0000                     wtemp8	set	btemp+1
 30756  0000                     ttemp0	set	btemp
 30757  0000                     ttemp1	set	btemp+3
 30758  0000                     ttemp2	set	btemp+6
 30759  0000                     ttemp3	set	btemp+9
 30760  0000                     ttemp5	set	btemp+1
 30761  0000                     ttemp6	set	btemp+4
 30762  0000                     ttemp7	set	btemp+8
 30763  0000                     ltemp0	set	btemp
 30764  0000                     ltemp1	set	btemp+4
 30765  0000                     ltemp2	set	btemp+8
 30766  0000                     lltemp0	set	btemp
 30767  0000                     lltemp1	set	btemp+8
 30768  0000                     lltemp2	set	btemp+16
 30769  0000                     lltemp3	set	btemp+24
 30770                           tosu	equ	0x3FFF
 30771                           tosh	equ	0x3FFE
 30772                           tosl	equ	0x3FFD
 30773                           stkptr	equ	0x3FFC
 30774                           pclatu	equ	0x3FFB
 30775                           pclath	equ	0x3FFA
 30776                           pcl	equ	0x3FF9
 30777                           tblptru	equ	0x3FF8
 30778                           tblptrh	equ	0x3FF7
 30779                           tblptrl	equ	0x3FF6
 30780                           tablat	equ	0x3FF5
 30781                           prodh	equ	0x3FF4
 30782                           prodl	equ	0x3FF3
 30783                           indf0	equ	0x3FEF
 30784                           postinc0	equ	0x3FEE
 30785                           postdec0	equ	0x3FED
 30786                           preinc0	equ	0x3FEC
 30787                           plusw0	equ	0x3FEB
 30788                           fsr0h	equ	0x3FEA
 30789                           fsr0l	equ	0x3FE9
 30790                           wreg	equ	0x3FE8
 30791                           indf1	equ	0x3FE7
 30792                           postinc1	equ	0x3FE6
 30793                           postdec1	equ	0x3FE5
 30794                           preinc1	equ	0x3FE4
 30795                           plusw1	equ	0x3FE3
 30796                           fsr1h	equ	0x3FE2
 30797                           fsr1l	equ	0x3FE1
 30798                           bsr	equ	0x3FE0
 30799                           indf2	equ	0x3FDF
 30800                           postinc2	equ	0x3FDE
 30801                           postdec2	equ	0x3FDD
 30802                           preinc2	equ	0x3FDC
 30803                           plusw2	equ	0x3FDB
 30804                           fsr2h	equ	0x3FDA
 30805                           fsr2l	equ	0x3FD9
 30806                           status	equ	0x3FD8


Data Sizes:
    Strings     473
    Constant    372
    Data        965
    BSS         1077
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     154
    BANK1           256      0     250
    BANK2           256     25     221
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_60(CODE[1]), STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_57(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_57(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_46(CODE[27]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5739_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_46(CODE[27]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_46(CODE[27]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 27
		 -> STR_46(CODE[27]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4381tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  317816
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27994
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  167020
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83257
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            30    10     20   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56422
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56140
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27963
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   32553
                                              0 BANK2     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   32463
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           4     4      0   32463
                       _Volts_to_SOC
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            30    10     20   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _Volts_to_SOC
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     19      DD       9       86.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FF      58        0.0%
DATA                 0      0     821       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec  7 18:13:17 2019

                     _SPI1_Exchange8bit 9ABE                __end_of_set_display_info 9B36  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 00A5  
                                     _R 00CB                                       _S 0060  
                                     _T FD81                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 97F6            __end_of_start_switch_handler 9A9E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FE11                  __end_of_FVR_Initialize 9CEA  
                           __CFG_LVP$ON 000000                                     l169 9C12  
                                   l807 9ACC                                     l673 9636  
                                   _GIE 01FE97                                     _abs 9098  
                                   _pad 78EA                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 9BBE                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 9A14                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0096                           _INT1_CallBack 99A8  
                          __CFG_ZCD$OFF 000000                                    l1000 9336  
                                  l2019 47AE                                    l1316 1FA8  
                                  l1308 1DE0                                    l1333 25FC  
                                  l1414 8DBC                                    l1326 2046  
                                  l1318 1FAE                                    l2055 123A  
                                  l2208 1D78                                    l1328 210C  
                                  l3017 77C8                                    l2137 5926  
                                  l1329 221A                         _timer3ReloadVal 0027  
                                  l1188 9376                                    l2084 066A  
                                  l2158 4B94                                    l2503 719C  
                                  l1632 93D6                                    l3312 897A  
                                  l1641 62E0                                    l1554 8446  
                                  l2530 6ECA                                    l1642 643C  
                                  l2099 0B1A                                    l1573 940A  
                                  l1558 874E                                    l1649 7B0A  
                                  l1737 46CA                                    l1780 6BC2  
                                  l2492 817A                                    l3284 6A02  
                  _ADCC_StartConversion 9C2C                                    l2815 421A  
                                  l2496 70C8                                    l1689 9B32  
                                  l1857 8874                                    l2770 3614  
                                  l2922 90D8                                    l2914 6D58  
                                  l1866 7E24                                    l2851 2E58  
                                  l3299 89FE                                    l7100 34E4  
                                  l7012 318E                                    l7110 350C  
                                  l2782 34A4                                    l7022 3200  
                                  l7032 323C                                    l7200 6CFA  
                                  l2953 5FE4                                    l7114 3512  
                                  l7026 3220                                    l2891 663A  
                                  l7140 35B4                                    l7060 3324  
                                  l7028 3232                                    l7036 326C  
                                  l7142 35C4                                    l7126 3570  
                                  l7054 3308                                    l7302 5BB0  
                                  l7206 6D50                                    l1999 7946  
                                  l7136 359C                                    l7056 331A  
                                  l7064 3356                                    l7320 5CC8  
                                  l7224 89EE                                    l7402 3E1E  
                                  l7148 35F4                                    l7076 342E  
                                  l7308 5BF6                                    l7340 604C  
                                  l7420 3EDC                                    l7252 5146  
                                  l7094 34C6                                    l7086 3488  
                                  l7078 3454                                    l7182 90C8  
                                  l7502 4196                                    l7414 3EA2  
                                  l7406 3E34                                    l7262 524C  
                                  l7254 5196                                    l7238 5028  
                                  l7096 34D8                                    l7408 3E64  
                                  l7280 896A                                    l7514 41EE  
                                  l7258 51DE                                    l7620 2C4C  
                                  l7540 26D4                                    l7532 268E  
                                  l7356 6180                                    l7348 60D4  
                                  l7700 7344                                    l7516 41FE  
                                  l7508 41C6                                    l7428 3EF6  
                                  l7196 6CF6                                    l7630 2C8E  
                                  l7550 275C                                    l7542 2704  
                                  l7462 4054                                    l7454 4022  
                                  l7446 3FBC                                    l7438 3F86  
                                  l7382 3D40                                    l7640 2CD8  
                                  l7560 27D2                                    l6912 851A  
                                  l7296 5B5C                                    l7720 740A  
                                  l7472 4096                                    l7448 3FCE  
                                  l7456 4026                                    l7376 3D00  
                                  l7800 7164                                    l7626 2C68  
                                  l7538 26CE                                    l6914 853C  
                                  l7706 7364                                    l7482 40E0  
                                  l7386 3D56                                    l7644 2CDE  
                                  l7556 279C                                    l6940 2EB8  
                                  l9340 6A44                                    l8452 5E56  
                                  l8436 5D94                                    l7740 77F2  
                                  l7468 4070                                    l7396 3DDE  
                                  l7388 3D86                                    l9510 75C2  
                                  l9502 7598                                    l7654 2D52  
                                  l7558 27A2                                    l6950 2F0E  
                                  l8462 5F38                                    l8454 5E6E  
                                  l8446 5E2A                                    l8438 5DB6  
                                  l7486 40E6                                    l9422 4226  
                                  l9504 75A8                                    l7672 2E06  
                                  l7664 2DC2                                    l7568 27F4  
                                  l6952 2F3E                                    l9352 6A88  
                                  l8472 5FD4                                    l8456 5E92  
                                  l7728 743E                                    l7744 7804  
                                  l7496 415A                                    l7808 719A  
                                  l7816 906E                                    l9530 7694  
                                  l9522 7626                                    l9506 75AE  
                                  l9514 75CA                                    l7674 2E20  
                                  l7658 2D98                                    l6970 2FE8  
                                  l6946 2EF8                                    l8458 5ED0  
                                  l7850 6E62                                    l7842 6E36  
                                  l7826 6DB4                                    l8490 6938  
                                  l9450 4480                                    l9442 444E  
                                  l9284 8FBE                                    l9508 75B4  
                                  l9516 75F6                                    l6964 2FA8  
                                  l9348 6A70                                    l7748 781C  
                                  l7852 6E78                                    l7844 6E52  
                                  l9428 4256                                    l6982 3050  
                                  l6974 2FFE                                    l6958 2F76  
                                  l7870 8F56                                    l7694 732E  
                                  l7766 78D0                                    l7758 789C  
                                  l7782 8178                                    l7774 8102  
                                  l7790 7086                                    l8902 65B8  
                                  l9462 45FC                                    l9454 451C  
                                  l9438 4374                                    l9542 882E  
                                  l9288 8FF0                                    l8824 8F92  
                                  l9712 935E                                    l6976 302E  
                                  l8488 68CC                                    l8912 661A  
                                  l8816 96F0                                    l9386 93EC  
                                  l7778 8144                                    l7796 7116  
                                  l9468 4698                                    l9476 46AA  
                                  l8860 86AA                                    l8852 863E  
                                  l8694 9726                                    l8870 648A  
                                  l8880 6504                                    l8856 86A6  
                                  l8848 8636                                    l8786 9414  
                                  l8890 6566                                    l8882 651A  
                                  l9834 8246                                    l8892 6584  
                                  l8884 6538                                    l9694 931E  
                                  l8894 659A                                    l8878 64F6  
                                  l9838 8284                                    l9862 7D32  
                                  STR_1 FF5F                                    l9856 5830  
                                  STR_2 FFB1                                    STR_3 FFDF  
                                  l9962 8A3C                                    l9874 7D8E  
                                  STR_4 FF4E                                    STR_5 FF70  
                                  l9956 92F4                                    l9884 7DFE  
                                  STR_6 FFB1                                    STR_7 FFDF  
                                  STR_8 FF3D                                    STR_9 FF92  
                                  l9968 8A4C                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 3476  
                                  _T2PR 003FAB                                    u5110 3560  
                                  u5050 34EA                                    u5115 3550  
                                  u5140 3580                                    u5300 6D48  
                                  u5070 3504                                    u5310 6D4A  
                                  u6200 2D66                                    u5240 90AC  
                                  u6105 2A3E                                    u6210 2DAC  
                                  u5250 6C7A                                    _T6PR 003F93  
                                  u6115 2C06                                    u5420 50EC  
                                  u5340 89AC                                    u5180 951A  
                                  u5500 892A                                    _PMD0 0039C0  
                                  u5405 5046                                    _PMD1 0039C1  
                                  u6150 2CD0                                    u4710 856A  
                                  u5406 504C                                    u5350 89AE  
                                  u5190 951C                                    _PMD2 0039C2  
                                  u5255 6C70                                    u5407 505A  
                                  _PMD3 0039C3                                    u6080 27E2  
                                  u5520 957A                                    u5600 5C22  
                                  u5440 51C4                                    _PMD4 0039C4  
                                  u5425 50E2                                    _PMD5 0039C5  
                                  u5530 957C                                    u6330 7848  
                                  u5370 4FC0                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u4900 3264  
                                  u5620 5D00                                    u5700 60CE  
                                  u6260 7390                                    u5380 500C  
                                  u4740 954A                                    u4717 855C  
                                  u5445 51BA                                    u6190 2D2C  
                                  u4910 3284                                    u5550 5B56  
                                  u5710 6100                                    u6350 78BC  
                                  u4750 954C                                    u5470 922E  
                                  u6095 2976                                    u5295 6D2A  
                                  u5375 4FB6                                    u5640 5D52  
                                  u6280 742A                                    u5480 9230  
                                  u4905 3254                                    u8210 8BD4  
                                  u4850 31B4                                    u5570 5BAC  
                                  u5730 61B8                                    u6450 906A  
                                  u6530 6E80                                    u5490 8928  
                                  u6195 2D1C                                    u4860 31D4  
                                  u6460 6D94                                    u4861 31CE  
                                  u5581 5BB6                                    u8310 6A22  
                                  u5590 5BF0                                    u5750 620A  
                                  u5670 6046                                    u6390 8174  
                                  u6550 6EAA                                    u6470 6DA8  
                                  u8055 926A                                    u6560 8F32  
                                  u6480 6DE2                                    u6465 6D8A  
                                  u4970 334C                                    u6570 8F52  
                                  u5690 609C                                    u5930 40D8  
                                  u8170 65AE                                    u8235 8C08  
                                  u8236 8C0A                                    u8228 8BD6  
                                  u6485 6DD8                                    u4878 31D6  
                                  u7630 5E26                                    u8414 4292  
                                  u4975 333C                                    u8415 428C  
                                  u8600 881A                                    u7650 5F7E  
                                  u9330 76D2                                    u5970 4134  
                                  u5890 404E                                    u9410 80AE  
                                  u7730 69C4                                    u8434 4468  
                                  u8435 4462                                    u7660 5F80  
                                  u5980 416E                                    u9350 774E  
                                  u9510 4700                                    u5990 41AA  
                                  u8454 4536                                    u8374 4240  
                                  u8630 8860                                    u5975 4124  
                                  u8455 4530                                    u8375 423A  
                                  u9520 4702                                    u8480 4560  
                                  u9601 4A5C                                    u9417 80A0  
                                  u8490 9A68                                    u9610 4A72  
                                  u8474 4558                                    u8394 4270  
                                  u8618 881C                                    u9611 4A70  
                                  u8475 4552                                    u8395 426A  
                                  u9620 4A86                                    u9540 4772  
                                  u9630 4A8A                                    u8496 9A6A  
                                  u9560 4784                                    u9720 0194  
                                  u9480 5558                                    u8648 8862  
                                  u9650 4AA0                                    u9810 050E  
                                  u9730 0196                                    _PLLR 01CEE0  
                                  u9580 47D4                                    u9590 4A2C  
                                  u9910 0648                                    u9840 0562  
                                  u9760 02A6                                    u9770 02A8  
                                  u9690 00DA                                    u9870 05C6  
                                  u9980 0A18                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 9610  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FE21                                    _cp_l FE1D  
                                  _atoi 5D7A                                    _ctoa 8878  
                                  _main 1D82                                    _dtoa 46D0  
                                  _nanf 8C90                                    _seed 02D5  
                                  _prec 0023                                    _nout 00C7  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 583C  
                                  btemp 0001                                    _xtoa 4B50  
                __end_of_check_adc_scan 9CE2                           ___fpclassifyf 6BCC  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit 9ADC               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 91B0                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 98E8                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR 9C7A  
                      __end_of_INT1_ISR 93BA          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 844E           __end_of_OSCILLATOR_Initialize 9C18  
                                 l11002 4C5A                                   l11102 14A8  
                                 l11200 1CA6                                   l11104 14E2  
                                 l11042 4EC0                                   l11018 4D50  
                                 l11026 4DD6                                   l11210 1D04  
                                 l11122 165C                                   l11106 14F8  
                                 l11132 16F2                                   l11206 1D00  
                                 l10510 530E                                   l11152 18E8  
                                 l11144 1830                                   l11080 1326  
                                 l11216 1D24                                   l10442 76DE  
                                 l10610 4ACA                                   l11082 1360  
                                 l10530 54E4                                   l10522 5436  
                                 l11156 191C                                   l11084 1376  
                                 l10516 53CC                                   l10454 85A6  
                                 l10470 7950                                   l10542 8896  
                                 l10614 4B06                                   l10702 04D2  
                                 l11270 8324                                   l10464 7916  
                                 l10544 88C2                                   l10720 058E  
                                 l10640 00F0                                   l11176 1A7C  
                                 l11272 8366                                   l11256 84A6  
                                 l10458 85E4                                   l10474 798C  
                                 l10810 0C32                                   l10714 0554  
                                 l11186 1B2A                                   l11540 9ABA  
                                 l11452 372A                                   l10468 793E  
                                 l10580 4806                                   l10484 8034  
                                 l10660 0216                                   l10628 00AC  
                                 l11462 393A                                   l10478 79D6  
                                 l10590 4A18                                   l10910 119A  
                                 l10822 0CBA                                   l10830 0D24  
                                 l10734 05F6                                   l10726 0594  
                                 l10718 057C                                   l10662 022C  
                                 l11552 9632                                   l11480 3BC2  
                                 l11448 36E8                                   l10576 47E8  
                                 l10568 479E                                   l10752 06B8  
                                 l10736 0602                                   l10648 0146  
                                 l11800 2038                                   l11720 1DC2  
                                 l11474 3B30                                   l11466 39B8  
                                 l10762 077A                                   l10658 01EA  
                                 l10666 0258                                   l10930 58A8  
                                 l11650 62B0                                   l11722 1DCA  
                                 l11484 3BD8                                   l10772 0926  
                                 l10756 06F0                                   l10692 0396  
                                 l10676 02FC                                   l10684 032A  
                                 l11396 7A22                                   l11812 22F8  
                                 PRLOCK 0039EF                                   l11478 3BBA  
                                 l10838 0D90                                   l10846 0EA2  
                                 l10950 5998                                   l11726 1DE8  
                                 l10872 0FD6                                   l10696 0406  
                                 l10960 5A52                                   l11664 63D8  
                                 l11816 235A                                   l11728 1DFA  
                                 l10874 0FF0                                   l10858 0F3A  
                                 l10794 0B12                                   l10786 0A48  
                                 l10698 0470                                   l10954 59C8  
                                 l10946 595C                                   l11850 2576  
                                 l11826 24D6                                   l11834 2520  
                                 l10884 1092                                   l10796 0B34  
                                 l10964 5A7E                                   l11852 258E  
                                 l11844 2564                                   l11828 2500  
                                 l11780 1FE0                                   l10894 10E2  
                                 l10982 4B84                                   l11862 25D2  
                                 l10968 5ABA                                   l11872 2626  
                                 l11792 2014                                   l10994 4BFA  
                                 l11858 25AC                                   l11778 1FB2  
                                 l10988 4BBE                         __end_of___aodiv 5D7A  
                          _Volts_to_SOC 862E                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 361E  
                                 _ADCLK 003EFF                         __end_of___aomod 622E  
                                 _ADPCH 003EF1                         __end_of___fldiv 4224  
                                 _ADREF 003EFD                         __end_of___awdiv 7458  
                       __end_of___flneg 9098                                   STR_11 FF81  
                                 STR_12 FEB8                                   STR_20 FEA5  
                                 STR_21 FF92                                   STR_13 FEDE  
                                 STR_30 FE7F                                   STR_22 FF92  
                                 STR_14 FECB                                   STR_23 FF81  
                                 STR_31 FFCC                                   STR_15 FF2A  
                                 STR_32 FFCC                                   STR_24 FFFB  
                                 STR_16 FF04                                   STR_25 FFF8  
                                 STR_33 FFA2                                   STR_17 FF17  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA2  
                                 STR_18 FEF1                                   STR_35 FFA2  
                                 STR_51 FFE9                                   STR_27 FFC0  
                                 STR_19 FE58                                   STR_52 FFF1  
                                 STR_28 FFD6                                   STR_36 FE40  
                       __end_of___awmod 78EA                                   STR_45 FE3F  
                                 STR_29 FE7F                                   STR_38 FE92  
                                 STR_46 FE25                                   STR_55 FFF5  
                                 STR_47 FFE5                                   STR_39 FE6C  
                                 STR_48 FFED                                   _ADRPT 003EEC  
                                 STR_57 FFF5                         __end_of___flmul 2E62  
                       __end_of___flsub 9124                         __end_of___fltol 6ED4  
                                 u10140 10B8                                   u10300 4B6A  
                                 u10160 116E                                   u10080 0EE4  
                                 u10240 59BE                                   u10400 4DD2  
                                 u10170 1170                                   u10250 5A04  
                                 u10410 4DF2                                   u10330 4C52  
                                 u10340 4CA6                                   u10421 4E22  
                                 u10405 4DB4                                   u10430 4E38  
                                 u10350 4CA8                                   u10431 4E36  
                                 u10280 5AE0                                   u10440 4E4C  
                                 u10520 13BE                                   u10257 59F6  
                                 u10450 4E50                                   u10370 4D06  
                                 u10530 13C0                                   u10380 4D08  
                                 u10540 13E6                                   u10720 1B7E  
                                 u10640 1746                                   u10570 1540  
                                 _U1P1H 003DED                                   u10580 1542  
                                 u10740 8486                                   _U1P2H 003DEF  
                                 u10670 19D6                                   u10590 1568  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10680 19D8  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10970 6428                                   _U2P3L 003DD8  
                                 u10980 642A                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 003D  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 9D04                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 730A  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 8EC2                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 9BA6                            _DMA1CON1bits 003BFD  
                                 _flags 0025                __size_of_calc_model_data 02DA  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 76AE              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 923A                                   _fputs 8596  
                       __end_of_isdigit 9586                         __end_of_ivln2_h FE1D  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand 945E  
                                 _width 0021                                   _putch 9B70  
                       __end_of_islower 9526                         __end_of_isspace 8F66  
              _INT1_SetInterruptHandler 981E                         __end_of_isupper 9556  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 97A6             _UART1_SetRxInterruptHandler 977E  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 7D26  
                       __end_of_tolower 8A08                         __end_of_strncmp 6A0C  
                       __end_of_toupper 8984               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 9910                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 916A                   __end_of_ringBufS_init 96DE  
                       __initialization 7B0E                       _UART2_rx_vect_isr 9938  
                          __end_of_cp_h FE25                            __end_of_cp_l FE21  
                          __end_of_atoi 5FEE                            __end_of_ctoa 8900  
                          __end_of_main 2638                            __end_of_dtoa 4B50  
                          __end_of_nanf 8CF2                            __end_of_stoa 5AFA  
                          __end_of_xtoa 4F0A                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize 9BD6  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 92FC  
              _TMR5_SetInterruptHandler 97CE                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
                     _port_data_dma_ptr 9C94                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 963C  
                       _PWM8_Initialize 9BEC                        _UART1_Initialize 9124  
                     _UART2_tx_vect_isr 9910                      _UART2_Transmit_ISR 9610  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 8C2C  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 923A  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 8EB4                                  _RB6PPS 003A0E  
                                i1l1205 7272                    _start_switch_handler 9A7E  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 91F6                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 9C5C  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u906_44 8A6C                                  u827_20 98C6  
                                u850_28 759E                                  u906_45 8A66  
                                u827_26 98C8                                  u853_20 75BE  
                                u853_21 75B8                                  u857_24 768A  
                                u857_25 7686                                  u881_48 9A48  
                                u873_48 9A24                                  u875_28 99B8  
                  __size_of_hid_display 0102                                  u884_28 99DC  
                      __end_of___xxtofl 6644   __end_of_ADCC_DischargeSampleCapacitor 9CCA  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 9CC2  
              __end_of_send_lcd_cmd_dma 8F14                         _TMR3_WriteTimer 933C  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr 9960  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 9C8A  
                      _UART2_Initialize 8D54                                  _WaitMs 93F2  
                       _conv_raw_result 4224                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 7044  
                                ___fleq 80C0                       _ADCC_ThresholdISR 8B5C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 86C4  
                                _efgtoa 0000                                  _floorf 4F0A  
                    ?_ADCC_ThresholdISR 0038                                  _memset 5276  
                  __size_of_help_button 0038                                  clear_0 7BA2  
                                clear_1 7BB6                                  clear_2 7BC8  
                                clear_3 7BD4                                  clear_4 7BE0  
                                clear_5 7BEC                                  clear_6 7BF8  
                                clear_7 7C04               __end_of_port_data_dma_ptr 9C9E  
                                _printf 8CF2                      _eaDogM_WriteString 844E  
                                _strcpy 7FEC                               ?_ADCC_ISR 0038  
                                _strlen 84F4                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize 8AF0  
                        _PMD_Initialize 9C18               __end_of_UART2_tx_vect_isr 9938  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan 8C90  
                          __mediumconst FCB0                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 8E0C                        __end_of_vfprintf 83A4  
                            _StartTimer 927C           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 91B0                       _SYSTEM_Initialize 9006  
                            __accesstop 0060                 __end_of__initialization 7C16  
                             ?_INT0_ISR 0038                               ?_INT1_ISR 0038  
                  __end_of_display_help 9CDA                    __end_of_display_info 9CD2  
             __end_of_CLKREF_Initialize 9C94                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 92FC  
                 _set_temp_display_help 9C3E                        _clear_hid_pflags 9984  
                 __end_of_TMR3_CallBack 9A14               __end_of_ADCC_ThresholdISR 8BC6  
                    __size_of_calc_bsoc 068C                  __end_of_ringBufS_flush 8756  
                        __pcstackCOMRAM 0038                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 9586  
                          __pidataBANK1 7F12                            __pidataBANK2 8184  
           __size_of_send_port_data_dma 0052                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 77D2  
                         __end_of_fputs 862E                           __end_of_srand 9492  
                 __end_of_TMR5_CallBack 99F0                           __end_of_putch 9B8A  
               __end_of_PWM8_Initialize 9C02                 __end_of_TMR6_Initialize 9666  
                     _adc_int_t_handler 8A08                  __end_of_PMD_Initialize 9C2C  
                            __end_of_bp FE19                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack 9A5C             __size_of_EXT_INT_Initialize 0034  
                         _DMA1_DMAA_ISR 9CAC                   TMR3_ISR@CountCallBack 00C9  
                        _clear_adc_scan 9CEA                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00BE  
             __end_of_SYSTEM_Initialize 9050                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 937C  
                            __pbssBANK0 0060                              __pbssBANK1 01DA  
                            __pbssBANK2 02D5                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 622E                 __end_of_conv_raw_result 46D0  
                 _INT0_InterruptHandler 00C4                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone 972E  
                      _DMA1_DMADCNT_ISR 9CA0                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                           _init_port_dma 94C6  
                 __end_of_wait_lcd_done 9B70        __end_of_TMR3_SetInterruptHandler 981E  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 97CE  
                            ??_TMR3_ISR 02BC                 __end_of_ADCC_Initialize 8B5A  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 8A86  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 9896  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 986E  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 9A9E  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 9CF0                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR 9C7C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 u1083_20 3B28  
                               u1090_28 9A00                                 _U1ERRIR 003DF9  
                               u1085_20 3BD0                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3CAA                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 96DE                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 933C                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 9BA6                                 __Lparam 0000  
              __end_of_UART1_Initialize 916A                       __end_of_hid_input 8878  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5AFA  
                               ___fladd 2E62                                 ___aomod 5FEE  
                               ___fldiv 3CAA                                 ___awdiv 730A  
                               ___flneg 9050                                 ___awmod 77D2  
                               ___flmul 2638                                 ___flsub 90DE  
                               ___fltol 6D62               __end_of_UART1_Receive_ISR 9ABE  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7F12                                 __pcinit 7B0E  
              __end_of_mode_lamp_bright 9C6A                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 9C4E  
                               __ramtop 2000                                 __ptext0 1D82  
                               __ptext1 9960                                 __ptext2 9A7E  
                               __ptext3 8C2C                                 __ptext4 9C2C  
                               __ptext5 9CC2                                 __ptext6 945E  
                               __ptext7 94C6                                 __ptext8 7E28  
                               __ptext9 9666                       _UART2_Receive_ISR 9B36  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 9C02                            __size_of_abs 0046  
                          __size_of_pad 0114                                 us565999 5D64  
                     __end_of_init_bsoc 7044                                 _isalpha 91F6  
                               _isdigit 9556                                 us576999 621C  
                               _ivln2_h FE19                                 us950999 46EA  
                             _T3CONbits 003FA6                                 _mode_sw 002E  
                     __end_of_lp_filter 6BCC                                 _islower 94F6  
                               _isspace 8F14                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8DB2  
                               _isupper 9526              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 7C1C                                 _tolower 8984  
                 __size_of_display_help 0008                                 _utctime 009D  
                 __size_of_display_info 0008                                 _strncmp 6844  
                               _toupper 8900                    end_of_initialization 7C16  
             __size_of_convert_adc_data 00B8                      _check_enter_button 92BC  
                             i1u1115_20 7268     __end_of_UART2_SetRxInterruptHandler 977E  
           _UART2_SetRxInterruptHandler 9756                               i2u1100_48 98FC  
                             i2u1102_48 9924                       __end_of_set_vterm 9B18  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd 9CFC               __end_of_UART2_Receive_ISR 9B54  
                        wdtdelay@dcount 00A1                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 003E                   _INT1_InterruptHandler 00C1  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc 9D02  
              _TMR3_SetInterruptHandler 97F6                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 97A6                            _display_help 9CD2  
                 _TMR5_InterruptHandler 00AC                            _display_info 9CCA  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 99A8  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler 98BE  
           _ADCC_SetADIInterruptHandler 9896                              _update_lcd 79FE  
                       _calc_model_data 5562                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 9960  
                       _DMA1_Initialize 8A86                              _start_bsoc 9A5C  
                       _SPI1_Initialize 9BD6                   __end_of_get_vterm_ptr 95E4  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 9428            __end_of_INTERRUPT_Initialize 8C2C  
                            _vterm_dump 7458                          __end_of___flge 71A6  
                        __end_of___fleq 8184    __end_of_INT0_DefaultInterruptHandler 9D10  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 9D0E  
            __size_of_UART1_Receive_ISR 0020                         _DMA2_Initialize 8E0C  
                         __pidataBIGRAM 6644                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 5276             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0095                          __end_of_memset 5562  
                        __end_of_printf 8D54                __end_of_DMA1_DMADCNT_ISR 9CAA  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 9A38  
                        __end_of_strcpy 80C0                          __end_of_strlen 8596  
                   start_initialization 7B0E    __end_of_TMR5_DefaultInterruptHandler 98E6  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 98BE  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 90DE  
                 __end_of_INT1_CallBack 99CC               __size_of_set_display_info 001E  
                           __end_of_pad 79FE                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 96B6                          _switch_handler 7586  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01F2                   __end_of___fpclassifyf 6D62  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR 9C8A  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 9CB8  
                   __end_of_hid_display 7E28              __end_of_send_port_data_dma 8FB8  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 9706  
                         _ringBufS_init 96B6                             __pdataBANK0 00CB  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 94C6                 __end_of_calc_model_data 583C  
                   __end_of_help_button 93F2         __end_of_eaDogM_WriteStringAtPos 945E  
                   __end_of_BVSOC_TABLE FD81                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize 8AF0                             __pbssCOMRAM 0021  
      __end_of_INT0_SetInterruptHandler 986E                           __pcstackBANK2 02BC  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 76AE                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 9BEC                _UART1_RxInterruptHandler 00B8  
              _UART2_TxInterruptHandler 00BB                               __end_of_T FE11  
                      _convert_adc_data 8240                               _calc_bsoc 361E  
             __size_of_ringBufS_put_dma 00AA                            _init_display 7E28  
                __end_of_DMA1_DMAOR_ISR 9CC2                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 8E66                  _PIN_MANAGER_Initialize 8756  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 9CF6  
                         __pmediumconst FCB0                               __ptext100 9756  
                             __ptext101 9124                               __ptext110 9BD6  
                             __ptext102 977E                               __ptext111 9BEC  
                             __ptext103 963C                               __ptext120 8E0C  
                             __ptext112 9C18                               __ptext104 97A6  
                             __ptext121 8A86                               __ptext113 8756  
                             __ptext105 916A                               __ptext130 8E68  
                             __ptext122 9C8A                               __ptext114 9C02  
                             __ptext106 97CE                               __ptext131 92FC  
                             __ptext123 8AF0                               __ptext115 8BC6  
                             __ptext107 91B0                               __ptext140 9C94  
                             __ptext132 99CC                               __ptext124 986E  
                             __ptext116 9CE2                               __ptext108 97F6  
                             __ptext141 9C6C                               __ptext133 98BE  
                             __ptext125 9896                               __ptext117 9492  
                             __ptext109 9BBE                               __ptext150 98E8  
                             __ptext142 9A14                               __ptext134 71A8  
                             __ptext126 937C                               __ptext118 981E  
                             __ptext151 9A9E                               __ptext143 9D0E  
                             __ptext135 933C                               __ptext127 99A8  
                             __ptext119 9846                               __ptext160 9CA0  
                             __ptext152 9910                               __ptext144 9D04  
                             __ptext136 99F0                               __ptext128 9D0A  
                             __ptext161 9CAC                               __ptext153 9610  
                             __ptext145 95E4                               __ptext137 9D0C  
                             __ptext129 7586                               __ptext162 9CB8  
                             __ptext154 9938                               __ptext146 8A08  
                             __ptext138 361E                               __ptext163 0000  
                             __ptext155 9B36                               __ptext147 9D10  
                             __ptext139 8F66                               __ptext156 9B8C  
                             __ptext148 9D12                               __ptext157 9A38  
                             __ptext149 8B5C                               __ptext158 8FB8  
                             __ptext159 9C7C                               _hid_input 87E8  
                    __end_of_StartTimer 92BC                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR 95E4  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 6ED4                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6A0C  
                           _hid_display 7D26                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 8BC6  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0038                                _INT0_ISR 9C6C  
                              _INT1_ISR 937C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01DA                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack 99F0                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              i2u911_48 8B92                                i2u911_49 8BA6  
                              _PIR9bits 0039A9                                i2u917_48 994C  
                              i2u909_48 95FC                __size_of_TMR5_Initialize 0046  
                             _set_vterm 9AFA                     __size_of_update_lcd 0110  
                           _help_button 93BA                                _TMR3_ISR 71A8  
                           _BVSOC_TABLE FCB1                                _TMR5_ISR 8E68  
                              _TMR6_ISR 9B8C                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack 99CC                              _ADCON0bits 003EF8  
                    __end_of_check_help 6440                               _start_lcd 9CF6  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 9A38                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 9CFC  
                      _set_display_info 9B18                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 7B22                               copy_data1 7B48  
                             copy_data2 7B6A                               copy_data3 7B8C  
              _INT0_SetInterruptHandler 9846                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler 9756             _UART2_SetTxInterruptHandler 972E  
                          _uart1RxCount 0035                            _uart2RxCount 002F  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 9B54                            _send_lcd_cmd 968E  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 9D12  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 9706  
                 __end_of_DMA1_DMAA_ISR 9CB6                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 6440                       ?_DMA1_DMADCNT_ISR 0038  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 9C5C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003E                                __ptext10 968E  
                              __ptext11 9ABE                                __ptext20 4224  
                              __ptext12 96B6                                __ptext21 8C90  
                              __ptext13 6ED4                                __ptext30 93F2  
                              __ptext22 9ADC                                __ptext14 862E  
                              __ptext31 79FE                                __ptext23 6440  
                              __ptext15 7D26                                __ptext40 5276  
                              __ptext32 9428                                __ptext24 9984  
                              __ptext16 87E8                                __ptext41 8CF2  
                              __ptext33 8EC2                                __ptext25 9CEA  
                              __ptext17 96DE                                __ptext50 0000  
                              __ptext42 82F8                                __ptext34 9B54  
                              __ptext26 622E                                __ptext18 9C4E  
                              __ptext51 8984                                __ptext43 1244  
                              __ptext35 8DB2                                __ptext27 7458  
                              __ptext19 8240                                __ptext60 3CAA  
                              __ptext52 9526                                __ptext44 4B50  
                              __ptext36 844E                                __ptext28 7C1C  
                              __ptext61 77D2                                __ptext53 7FEC  
                              __ptext45 8900                                __ptext37 9CF0  
                              __ptext29 95B6                                __ptext70 8596  
                              __ptext62 730A                                __ptext54 4F0A  
                              __ptext46 94F6                                __ptext38 9CF6  
                              __ptext71 76AE                                __ptext63 46D0  
                              __ptext55 6BCC                                __ptext47 91F6  
                              __ptext39 86C4                                __ptext80 9BA6  
                              __ptext72 9B70                                __ptext64 9098  
                              __ptext56 6D62                                __ptext48 6844  
                              __ptext81 9C5C                                __ptext73 83A4  
                              __ptext65 5FEE                                __ptext57 9050  
                              __ptext49 583C                                __ptext90 5562  
                              __ptext82 923A                                __ptext74 5D7A  
                              __ptext66 5AFA                                __ptext58 7044  
                              __ptext91 9CFC                                __ptext83 93BA  
                              __ptext75 8F14                                __ptext67 8878  
                              __ptext59 80C0                                __ptext92 9A5C  
                              __ptext84 9706                                __ptext76 9556  
                              __ptext68 78EA                                __ptext93 6A0C  
                              __ptext85 927C                                __ptext77 9AFA  
                              __ptext69 84F4                                __ptext94 90DE  
                              __ptext86 9CCA                                __ptext78 9C3E  
                              __ptext95 2E62                                __ptext87 9CD2  
                              __ptext79 9B18                                __ptext96 2638  
                              __ptext88 92BC                                __ptext97 9006  
                              __ptext89 9CDA                                __ptext98 8D54  
                              __ptext99 972E                        __size_of_isupper 0030  
                              us1032999 4BD0                                us1019999 584E  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 83A4                    __end_of_Volts_to_SOC 86C4  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08B6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0038  
                 __end_of_init_port_dma 94F6                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00B5  
                             stoa@F1166 01D3                      ??_DMA1_DMASCNT_ISR 003E  
          __end_of_ADCC_StartConversion 9C3E                                _spi_link 0089  
                              _wdtdelay 8DB2              __end_of_UART2_Transmit_ISR 963C  
                              _vfprintf 82F8                __end_of_convert_adc_data 82F8  
            __end_of_PWM8_LoadDutyValue 927C    __end_of_TMR3_DefaultInterruptHandler 9D0E  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler 9D0C  
  __end_of_INT1_DefaultInterruptHandler 9D0C   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 9D0A                      _send_port_data_dma 8F66  
                         ??_Default_ISR 0038                             _uart1RxHead 0037  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0031  
                           _uart1RxTail 0036                          _get_raw_result 9ADC  
                           _uart2TxHead 0034                             _uart2RxTail 0030  
                           _uart2TxTail 0033                            _wait_lcd_set 9CF0  
                      Volts_to_SOC@slot 002D                      _EXT_INT_Initialize 9492  
  __end_of_TMR6_DefaultInterruptHandler 9006   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 8FB8    __end_of_ADCC_DefaultInterruptHandler 9D12  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 9D10  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 9666          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 9C4E                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 84F4                   __end_of_mode_lamp_dim 9BBE  
               __end_of_adc_int_handler 9D14                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 7B0E  
                _uart2TxBufferRemaining 0032                      __end_of_static_soc 9984  
                    __end_of_start_bsoc 9A7E                          _FVR_Initialize 9CE2  
                __end_of_get_raw_result 9AFA                        _send_lcd_cmd_dma 8EC2  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0029  
      __end_of_INT1_SetInterruptHandler 9846               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 003E               __end_of_send_lcd_cmd_long 968E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 9D0A  
        __end_of_PIN_MANAGER_Initialize 87E8               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 7586                 _eaDogM_WriteStringAtPos 9428  
                         _get_vterm_ptr 95B6                          _check_adc_scan 9CDA  
             __size_of_UART2_Initialize 005E  
