

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 04:12:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=4,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=4,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=4,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   228                           	psect	text204,global,reloc=4,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=4,class=CODE,delta=1
   232                           	psect	text208,global,reloc=4,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=4,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text226,global,reloc=4,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   255  0000                     
   256                           ; Version 2.10
   257                           ; Generated 31/07/2019 GMT
   258                           ; 
   259                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   260                           ; All rights reserved.
   261                           ; 
   262                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   263                           ; 
   264                           ; Redistribution and use in source and binary forms, with or without modification, are
   265                           ; permitted provided that the following conditions are met:
   266                           ; 
   267                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   268                           ;        conditions and the following disclaimer.
   269                           ; 
   270                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   271                           ;        of conditions and the following disclaimer in the documentation and/or other
   272                           ;        materials provided with the distribution.
   273                           ; 
   274                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   275                           ;        software without specific prior written permission.
   276                           ; 
   277                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   278                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   279                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   280                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   281                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   282                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   283                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   284                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   285                           ; 
   286                           ; 
   287                           ; Code-generator required, PIC18F57K42 Definitions
   288                           ; 
   289                           ; SFR Addresses
   290  0000                     
   291 ;;_main$4035	offset	0
   292 ;;_main$4031	offset	2
   293 ;;_esr_temp	offset	4
   294 ;;_i_esr	offset	8
   295 ;;_shape	offset	10
   296 ;;_inp_index	offset	11
   297 ;;_k	offset	12
   298 ;;_j	offset	13
   299 ;;_i	offset	14
   300 ;;_mode	offset	15
   301 ;;_i_ror	offset	16
   302 ;;_mode	offset=-1 (param)
   303 ;;_hist	offset=-3 (param)
   304 ;;_s	offset=-2 (param)
   305 ;;_t	offset=-8 (param)
   306 ;;_voltage	offset=-4 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_set	offset=-1 (param)
   310 ;;_x	offset	0
   311 ;;_r_cal_ptr	offset	2
   312 ;;_y	offset	4
   313 ;;_crcVal_save	offset	6
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_esr_rescale	offset	0
   316 ;;_data	offset=-1 (param)
   317 ;;_cmd	offset=-1 (param)
   318 ;;_cmd	offset=-1 (param)
   319 ;;_data	offset=-1 (param)
   320 ;;__this	offset=-2 (param)
   321 ;;_soc	offset	0
   322 ;;_slot	offset	2
   323 ;;_cvoltage	offset=-4 (param)
   324 ;;_h	offset=-2 (param)
   325 ;;_h	offset=-2 (param)
   326 ;;_fsm	offset=-1 (param)
   327 ;;_mode	offset=-1 (param)
   328 ;;_mode	offset=-1 (param)
   329 ;;_cmd	offset=-1 (param)
   330 ;;_t	offset=-8 (param)
   331 ;;_t	offset=-1 (param)
   332 ;;_t	offset=-1 (param)
   333 ;;_tm	offset=-3 (param)
   334 ;;_y	offset	0
   335 ;;_t1	offset	8
   336 ;;_t0	offset	16
   337 ;;_t	offset=-8 (param)
   338 ;;_local	offset=-10 (param)
   339 ;;_isdst	offset=-12 (param)
   340 ;;_offset	offset=-14 (param)
   341 ;;_oppoff	offset=-16 (param)
   342 ;;_zonename	offset=-18 (param)
   343 ;;_t	offset=-8 (param)
   344 ;;_local	offset=-10 (param)
   345 ;;_alt	offset=-12 (param)
   346 ;;_z	offset=-2 (param)
   347 ;;_days	offset	0
   348 ;;_wday	offset	2
   349 ;;_t	offset	4
   350 ;;_is_leap	offset	12
   351 ;;_n	offset	14
   352 ;;_x	offset	16
   353 ;;_m	offset	18
   354 ;;_d	offset	20
   355 ;;_rule	offset=-6 (param)
   356 ;;_year	offset=-8 (param)
   357 ;;_m	offset=-2 (param)
   358 ;;_is_leap	offset=-4 (param)
   359 ;;_y	offset	0
   360 ;;_leaps	offset	2
   361 ;;_rem	offset	4
   362 ;;F5	offset	6
   363 ;;_centuries	offset	8
   364 ;;_leaps	offset	10
   365 ;;_cycles	offset	12
   366 ;;_year	offset=-8 (param)
   367 ;;_is_leap	offset=-10 (param)
   368 ;;_t	offset	0
   369 ;;_month	offset=-2 (param)
   370 ;;_is_leap	offset=-4 (param)
   371 ;;_s	offset	0
   372 ;;_r	offset	0
   373 ;;_p	offset=-2 (param)
   374 ;;_rule	offset=-4 (param)
   375 ;;_off	offset	0
   376 ;;_neg	offset	2
   377 ;;_p	offset=-2 (param)
   378 ;;_x	offset	0
   379 ;;_p	offset=-2 (param)
   380 ;;_i	offset	0
   381 ;;_d	offset=-2 (param)
   382 ;;_p	offset=-4 (param)
   383 ;;___secs_to_tm$7621	offset	0
   384 ;;_years	offset	1
   385 ;;_days	offset	9
   386 ;;_secs	offset	17
   387 ;;_remdays	offset	25
   388 ;;_q_cycles	offset	29
   389 ;;_c_cycles	offset	33
   390 ;;_remyears	offset	37
   391 ;;_remsecs	offset	41
   392 ;;_qc_cycles	offset	45
   393 ;;_months	offset	49
   394 ;;_leap	offset	51
   395 ;;_yday	offset	53
   396 ;;_wday	offset	55
   397 ;;_t	offset=-8 (param)
   398 ;;_tm	offset=-10 (param)
   399 ;;_product	offset	0
   400 ;;_multiplier	offset=-8 (param)
   401 ;;_multiplicand	offset=-16 (param)
   402 ;;_product	offset	0
   403 ;;_multiplier	offset=-4 (param)
   404 ;;_multiplicand	offset=-8 (param)
   405 ;;_sign	offset	0
   406 ;;_counter	offset	1
   407 ;;_dividend	offset=-4 (param)
   408 ;;_divisor	offset=-8 (param)
   409 ;;_quotient	offset	0
   410 ;;_sign	offset	4
   411 ;;_counter	offset	5
   412 ;;_dividend	offset=-4 (param)
   413 ;;_divisor	offset=-8 (param)
   414 ;;_cp	offset	0
   415 ;;_s	offset	2
   416 ;;_tim	offset=-2 (param)
   417 ;;_cp	offset=-2 (param)
   418 ;;_i	offset=-3 (param)
   419 ;;_cl	offset=-4 (param)
   420 ;;_ct	offset=-5 (param)
   421 ;;_rem	offset	0
   422 ;;_counter	offset	1
   423 ;;_dividend	offset=-1 (param)
   424 ;;_divisor	offset=-2 (param)
   425 ;;_cp	offset	0
   426 ;;_cb	offset	4
   427 ;;_x	offset	8
   428 ;;_x	offset	0
   429 ;;_r_cal_ptr	offset	2
   430 ;;_y	offset	4
   431 ;;_crcVal	offset	6
   432 ;;_GIEBitValue	offset	0
   433 ;;_bAdd	offset=-2 (param)
   434 ;;_bData	offset=-3 (param)
   435 ;;_result	offset	0
   436 ;;_mask	offset	2
   437 ;;_reverse	offset=-1 (param)
   438 ;;_xorValue	offset=-3 (param)
   439 ;;_mask	offset	0
   440 ;;_reverse	offset	2
   441 ;;_crc	offset=-2 (param)
   442 ;;_data	offset=-1 (param)
   443 ;;_channel	offset=-1 (param)
   444 ;;_c	offset	0
   445 ;;_shape	offset=-1 (param)
   446 ;;_reset	offset=-2 (param)
   447 ;;_i	offset=-1 (param)
   448 ;;_mode	offset=-1 (param)
   449 ;;_cb	offset=-3 (param)
   450 ;;_cp	offset=-5 (param)
   451 ;;_value	offset=-2 (param)
   452 ;;_window	offset=-4 (param)
   453 ;;_standard	offset=-6 (param)
   454 ;;_i	offset	0
   455 ;;_h	offset=-2 (param)
   456 ;;_flipper	offset=-1 (param)
   457 ;;_f	offset	0
   458 ;;_ap	offset	6
   459 ;;_s	offset=-3 (param)
   460 ;;_fmt	offset=-5 (param)
   461 ;;_line	offset=-1 (param)
   462 ;;_vterm	offset=-2 (param)
   463 ;;_numMilliseconds	offset=-2 (param)
   464 ;;_vterm	offset=-1 (param)
   465 ;;_row	offset	0
   466 ;;_r	offset=-1 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_strPtr	offset=-4 (param)
   469 ;;_strPtr	offset=-1 (param)
   470 ;;_delay	offset=-4 (param)
   471 ;;_strPtr	offset=-1 (param)
   472 ;;_strPtr	offset=-2 (param)
   473 ;;__this	offset=-2 (param)
   474 ;;_clearBuffer	offset=-3 (param)
   475 ;;_s	offset	0
   476 ;;_k	offset	2
   477 ;;_dest	offset=-2 (param)
   478 ;;_c	offset=-4 (param)
   479 ;;_n	offset=-6 (param)
   480 ;;_ap	offset	0
   481 ;;_fmt	offset=-3 (param)
   482 ;;_cfmt	offset	0
   483 ;;_fp	offset=-2 (param)
   484 ;;_fmt	offset=-4 (param)
   485 ;;_ap	offset=-6 (param)
   486 ;;_vfpfcnvrt$6662	offset	0
   487 ;;_vfpfcnvrt$6673	offset	2
   488 ;;_vfpfcnvrt$6661	offset	4
   489 ;;_llu	offset	6
   490 ;;_ll	offset	14
   491 ;;_f	offset	22
   492 ;;_ct	offset	26
   493 ;;_cp	offset	29
   494 ;;_c	offset	31
   495 ;;_fp	offset=-2 (param)
   496 ;;_fmt	offset=-4 (param)
   497 ;;_ap	offset=-6 (param)
   498 ;;_xtoa$6647	offset	0
   499 ;;_xtoa$6646	offset	2
   500 ;;_n	offset	4
   501 ;;_c	offset	12
   502 ;;_i	offset	14
   503 ;;_w	offset	16
   504 ;;_p	offset	18
   505 ;;_fp	offset=-2 (param)
   506 ;;_d	offset=-10 (param)
   507 ;;_x	offset=-11 (param)
   508 ;;_toupper$7588	offset	0
   509 ;;_c	offset=-2 (param)
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_n	offset	0
   513 ;;_i	offset	8
   514 ;;_w	offset	10
   515 ;;_p	offset	12
   516 ;;_fp	offset=-2 (param)
   517 ;;_d	offset=-10 (param)
   518 ;;_counter	offset	0
   519 ;;_dividend	offset=-8 (param)
   520 ;;_divisor	offset=-16 (param)
   521 ;;_quotient	offset	0
   522 ;;_counter	offset	8
   523 ;;_dividend	offset=-8 (param)
   524 ;;_divisor	offset=-16 (param)
   525 ;;_r	offset	0
   526 ;;_l	offset	2
   527 ;;__l	offset=-2 (param)
   528 ;;__r	offset=-4 (param)
   529 ;;_n	offset=-6 (param)
   530 ;;_nuls	offset	0
   531 ;;_l	offset	7
   532 ;;_p	offset	9
   533 ;;_cp	offset	11
   534 ;;_w	offset	13
   535 ;;_i	offset	15
   536 ;;_fp	offset=-2 (param)
   537 ;;_s	offset=-4 (param)
   538 ;;_efgtoa$6619	offset	0
   539 ;;_efgtoa$6618	offset	2
   540 ;;_efgtoa$6617	offset	4
   541 ;;_efgtoa$6613	offset	6
   542 ;;_efgtoa$6609	offset	8
   543 ;;_efgtoa$6608	offset	10
   544 ;;_u	offset	12
   545 ;;_g	offset	16
   546 ;;_l	offset	20
   547 ;;_h	offset	24
   548 ;;_ou	offset	28
   549 ;;_n	offset	32
   550 ;;_e	offset	34
   551 ;;_i	offset	36
   552 ;;_w	offset	38
   553 ;;_p	offset	40
   554 ;;_sign	offset	42
   555 ;;_d	offset	44
   556 ;;_ne	offset	46
   557 ;;_m	offset	48
   558 ;;_pp	offset	50
   559 ;;_t	offset	52
   560 ;;_mode	offset	54
   561 ;;_nmode	offset	55
   562 ;;_fp	offset=-2 (param)
   563 ;;_f	offset=-6 (param)
   564 ;;_c	offset=-7 (param)
   565 ;;_tolower$7573	offset	0
   566 ;;_c	offset=-2 (param)
   567 ;;_c	offset=-2 (param)
   568 ;;_d	offset	0
   569 ;;_s	offset	2
   570 ;;_dest	offset=-2 (param)
   571 ;;_src	offset=-4 (param)
   572 ;;_u	offset	0
   573 ;;_m	offset	4
   574 ;;_e	offset	8
   575 ;;_x	offset=-4 (param)
   576 ;;_u	offset	0
   577 ;;_e	offset	4
   578 ;;_x	offset=-4 (param)
   579 ;;_exp1	offset	0
   580 ;;_sign1	offset	1
   581 ;;_f1	offset=-4 (param)
   582 ;;_f1	offset=-4 (param)
   583 ;;_ff1	offset=-4 (param)
   584 ;;_ff2	offset=-8 (param)
   585 ;;_sign	offset	0
   586 ;;_counter	offset	1
   587 ;;_dividend	offset=-2 (param)
   588 ;;_divisor	offset=-4 (param)
   589 ;;_quotient	offset	0
   590 ;;_sign	offset	2
   591 ;;_counter	offset	3
   592 ;;_dividend	offset=-2 (param)
   593 ;;_divisor	offset=-4 (param)
   594 ;;_dtoa$6585	offset	0
   595 ;;_n	offset	2
   596 ;;_i	offset	10
   597 ;;_s	offset	12
   598 ;;_w	offset	14
   599 ;;_p	offset	16
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_a	offset=-2 (param)
   603 ;;_sign	offset	0
   604 ;;_counter	offset	1
   605 ;;_dividend	offset=-8 (param)
   606 ;;_divisor	offset=-16 (param)
   607 ;;_quotient	offset	0
   608 ;;_sign	offset	8
   609 ;;_counter	offset	9
   610 ;;_dividend	offset=-8 (param)
   611 ;;_divisor	offset=-16 (param)
   612 ;;_w	offset	0
   613 ;;_fp	offset=-2 (param)
   614 ;;_c	offset=-3 (param)
   615 ;;_w	offset	0
   616 ;;_i	offset	2
   617 ;;_fp	offset=-2 (param)
   618 ;;_buf	offset=-4 (param)
   619 ;;_p	offset=-6 (param)
   620 ;;_a	offset	0
   621 ;;_s	offset=-2 (param)
   622 ;;_i	offset	0
   623 ;;_c	offset	2
   624 ;;_s	offset=-2 (param)
   625 ;;_fp	offset=-4 (param)
   626 ;;_c	offset=-2 (param)
   627 ;;_fp	offset=-4 (param)
   628 ;;_c	offset=-1 (param)
   629 ;;__this	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_atoi$7205	offset	0
   632 ;;_atoi$7203	offset	2
   633 ;;_atoi$7204	offset	4
   634 ;;_n	offset	5
   635 ;;_neg	offset	7
   636 ;;_s	offset=-2 (param)
   637 ;;_isspace$7254	offset	0
   638 ;;_c	offset=-2 (param)
   639 ;;_c	offset=-2 (param)
   640 ;;_vterm	offset=-1 (param)
   641 ;;_new_response_info	offset=-1 (param)
   642 ;;_new_response_info	offset=-1 (param)
   643 ;;_level	offset=-2 (param)
   644 ;;_dutyValue	offset=-2 (param)
   645 ;;_timer	offset=-1 (param)
   646 ;;_timer	offset=-1 (param)
   647 ;;_count	offset=-3 (param)
   648 ;;_h	offset=-2 (param)
   649 ;;_u	offset	0
   650 ;;_x	offset=-4 (param)
   651 ;;_chan	offset=-1 (param)
   652 ;;_to_what	offset=-2 (param)
   653 ;;_u	offset	0
   654 ;;_s	offset=-2 (param)
   655 ;;_index	offset=-1 (param)
   656 ;;_arg	offset	0
   657 ;;_exp	offset	4
   658 ;;_sign	offset=-1 (param)
   659 ;;_val	offset=-5 (param)
   660 ;;_grs	offset	0
   661 ;;_rem	offset	4
   662 ;;_new_exp	offset	8
   663 ;;_aexp	offset	10
   664 ;;_bexp	offset	11
   665 ;;_sign	offset	12
   666 ;;_b	offset=-4 (param)
   667 ;;_a	offset=-8 (param)
   668 ;;_ff1	offset=-4 (param)
   669 ;;_ff2	offset=-8 (param)
   670 ;;_lp_speed	offset	0
   671 ;;_new	offset=-4 (param)
   672 ;;_bn	offset=-5 (param)
   673 ;;_slow	offset=-6 (param)
   674 ;;_b	offset=-4 (param)
   675 ;;_a	offset=-8 (param)
   676 ;;_grs	offset	0
   677 ;;_bexp	offset	1
   678 ;;_aexp	offset	2
   679 ;;_signs	offset	3
   680 ;;_b	offset=-4 (param)
   681 ;;_a	offset=-8 (param)
   682 ;;_prod	offset	0
   683 ;;_grs	offset	4
   684 ;;_temp	offset	8
   685 ;;_bexp	offset	10
   686 ;;_aexp	offset	11
   687 ;;_sign	offset	12
   688 ;;_b	offset=-4 (param)
   689 ;;_a	offset=-8 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_state	offset	0
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_seed	offset	0
   700 ;;_poly	offset	2
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_i	offset	0
   704 ;;_sw_value	offset	1
   705 ;;_timerVal	offset=-2 (param)
   706 ;;_light	offset	0
   707 ;;_t	offset=-8 (param)
   708 ;;_mode	offset=-1 (param)
   709 ;;_chan	offset=-1 (param)
   710 ;;_to_what	offset=-2 (param)
   711 ;;_u	offset	0
   712 ;;_s	offset=-2 (param)
   713 ;;_index	offset=-1 (param)
   714 ;;_arg	offset	0
   715 ;;_exp	offset	4
   716 ;;_sign	offset=-1 (param)
   717 ;;_val	offset=-5 (param)
   718 ;;_b	offset=-4 (param)
   719 ;;_a	offset=-8 (param)
   720 ;;_grs	offset	0
   721 ;;_bexp	offset	1
   722 ;;_aexp	offset	2
   723 ;;_signs	offset	3
   724 ;;_b	offset=-4 (param)
   725 ;;_a	offset=-8 (param)
   726 ;;_prod	offset	0
   727 ;;_grs	offset	4
   728 ;;_temp	offset	8
   729 ;;_bexp	offset	10
   730 ;;_aexp	offset	11
   731 ;;_sign	offset	12
   732 ;;_b	offset=-4 (param)
   733 ;;_a	offset=-8 (param)
   734 ;;_grs	offset	0
   735 ;;_rem	offset	4
   736 ;;_new_exp	offset	8
   737 ;;_aexp	offset	10
   738 ;;_bexp	offset	11
   739 ;;_sign	offset	12
   740 ;;_b	offset=-4 (param)
   741 ;;_a	offset=-8 (param)
   742 ;;_ff1	offset=-4 (param)
   743 ;;_ff2	offset=-8 (param)
   744 ;;_timerVal	offset=-2 (param)
   745 ;;_adj	offset	0
   746 ;;_log_ptr	offset	4
   747 ;;_f	offset	0
   748 ;;_ap	offset	6
   749 ;;_s	offset=-3 (param)
   750 ;;_fmt	offset=-5 (param)
   751 ;;_cfmt	offset	0
   752 ;;_fp	offset=-2 (param)
   753 ;;_fmt	offset=-4 (param)
   754 ;;_ap	offset=-6 (param)
   755 ;;_vfpfcnvrt$6662	offset	0
   756 ;;_vfpfcnvrt$6673	offset	2
   757 ;;_vfpfcnvrt$6661	offset	4
   758 ;;_llu	offset	6
   759 ;;_ll	offset	14
   760 ;;_f	offset	22
   761 ;;_ct	offset	26
   762 ;;_cp	offset	29
   763 ;;_c	offset	31
   764 ;;_fp	offset=-2 (param)
   765 ;;_fmt	offset=-4 (param)
   766 ;;_ap	offset=-6 (param)
   767 ;;_xtoa$6647	offset	0
   768 ;;_xtoa$6646	offset	2
   769 ;;_n	offset	4
   770 ;;_c	offset	12
   771 ;;_i	offset	14
   772 ;;_w	offset	16
   773 ;;_p	offset	18
   774 ;;_fp	offset=-2 (param)
   775 ;;_d	offset=-10 (param)
   776 ;;_x	offset=-11 (param)
   777 ;;_toupper$7588	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_c	offset=-2 (param)
   781 ;;_n	offset	0
   782 ;;_i	offset	8
   783 ;;_w	offset	10
   784 ;;_p	offset	12
   785 ;;_fp	offset=-2 (param)
   786 ;;_d	offset=-10 (param)
   787 ;;_counter	offset	0
   788 ;;_dividend	offset=-8 (param)
   789 ;;_divisor	offset=-16 (param)
   790 ;;_quotient	offset	0
   791 ;;_counter	offset	8
   792 ;;_dividend	offset=-8 (param)
   793 ;;_divisor	offset=-16 (param)
   794 ;;_r	offset	0
   795 ;;_l	offset	2
   796 ;;__l	offset=-2 (param)
   797 ;;__r	offset=-4 (param)
   798 ;;_n	offset=-6 (param)
   799 ;;_nuls	offset	0
   800 ;;_l	offset	7
   801 ;;_p	offset	9
   802 ;;_cp	offset	11
   803 ;;_w	offset	13
   804 ;;_i	offset	15
   805 ;;_fp	offset=-2 (param)
   806 ;;_s	offset=-4 (param)
   807 ;;_efgtoa$6619	offset	0
   808 ;;_efgtoa$6618	offset	2
   809 ;;_efgtoa$6617	offset	4
   810 ;;_efgtoa$6613	offset	6
   811 ;;_efgtoa$6609	offset	8
   812 ;;_efgtoa$6608	offset	10
   813 ;;_u	offset	12
   814 ;;_g	offset	16
   815 ;;_l	offset	20
   816 ;;_h	offset	24
   817 ;;_ou	offset	28
   818 ;;_n	offset	32
   819 ;;_e	offset	34
   820 ;;_i	offset	36
   821 ;;_w	offset	38
   822 ;;_p	offset	40
   823 ;;_sign	offset	42
   824 ;;_d	offset	44
   825 ;;_ne	offset	46
   826 ;;_m	offset	48
   827 ;;_pp	offset	50
   828 ;;_t	offset	52
   829 ;;_mode	offset	54
   830 ;;_nmode	offset	55
   831 ;;_fp	offset=-2 (param)
   832 ;;_f	offset=-6 (param)
   833 ;;_c	offset=-7 (param)
   834 ;;_tolower$7573	offset	0
   835 ;;_c	offset=-2 (param)
   836 ;;_c	offset=-2 (param)
   837 ;;_d	offset	0
   838 ;;_s	offset	2
   839 ;;_dest	offset=-2 (param)
   840 ;;_src	offset=-4 (param)
   841 ;;_u	offset	0
   842 ;;_m	offset	4
   843 ;;_e	offset	8
   844 ;;_x	offset=-4 (param)
   845 ;;_u	offset	0
   846 ;;_e	offset	4
   847 ;;_x	offset=-4 (param)
   848 ;;_exp1	offset	0
   849 ;;_sign1	offset	1
   850 ;;_f1	offset=-4 (param)
   851 ;;_f1	offset=-4 (param)
   852 ;;_ff1	offset=-4 (param)
   853 ;;_ff2	offset=-8 (param)
   854 ;;_sign	offset	0
   855 ;;_counter	offset	1
   856 ;;_dividend	offset=-2 (param)
   857 ;;_divisor	offset=-4 (param)
   858 ;;_quotient	offset	0
   859 ;;_sign	offset	2
   860 ;;_counter	offset	3
   861 ;;_dividend	offset=-2 (param)
   862 ;;_divisor	offset=-4 (param)
   863 ;;_dtoa$6585	offset	0
   864 ;;_n	offset	2
   865 ;;_i	offset	10
   866 ;;_s	offset	12
   867 ;;_w	offset	14
   868 ;;_p	offset	16
   869 ;;_fp	offset=-2 (param)
   870 ;;_d	offset=-10 (param)
   871 ;;_a	offset=-2 (param)
   872 ;;_sign	offset	0
   873 ;;_counter	offset	1
   874 ;;_dividend	offset=-8 (param)
   875 ;;_divisor	offset=-16 (param)
   876 ;;_quotient	offset	0
   877 ;;_sign	offset	8
   878 ;;_counter	offset	9
   879 ;;_dividend	offset=-8 (param)
   880 ;;_divisor	offset=-16 (param)
   881 ;;_w	offset	0
   882 ;;_fp	offset=-2 (param)
   883 ;;_c	offset=-3 (param)
   884 ;;_w	offset	0
   885 ;;_i	offset	2
   886 ;;_fp	offset=-2 (param)
   887 ;;_buf	offset=-4 (param)
   888 ;;_p	offset=-6 (param)
   889 ;;_a	offset	0
   890 ;;_s	offset=-2 (param)
   891 ;;_i	offset	0
   892 ;;_c	offset	2
   893 ;;_s	offset=-2 (param)
   894 ;;_fp	offset=-4 (param)
   895 ;;_c	offset=-2 (param)
   896 ;;_fp	offset=-4 (param)
   897 ;;_c	offset=-1 (param)
   898 ;;__this	offset=-2 (param)
   899 ;;_c	offset=-3 (param)
   900 ;;_atoi$7205	offset	0
   901 ;;_atoi$7203	offset	2
   902 ;;_atoi$7204	offset	4
   903 ;;_n	offset	5
   904 ;;_neg	offset	7
   905 ;;_s	offset=-2 (param)
   906 ;;_isspace$7254	offset	0
   907 ;;_c	offset=-2 (param)
   908 ;;_c	offset=-2 (param)
   909 ;;_dsize	offset=-2 (param)
   910 ;;_u	offset	0
   911 ;;_x	offset=-4 (param)
   912 ;;_f1p	offset=-2 (param)
   913 ;;_f2	offset=-6 (param)
   914 ;;_timer	offset=-1 (param)
   915 ;;_count	offset=-3 (param)
   916 ;;_channel	offset=-1 (param)
   917 ;;_i	offset	0
   918                           
   919                           	psect	idataBIGRAM
   920  01A270                     __pidataBIGRAM:
   921                           	opt callstack 0
   922                           
   923                           ;initializer for _port_data
   924  01A270  FF                 	db	255
   925  01A271  00                 	db	0
   926  01A272  FF                 	db	255
   927  01A273  00                 	db	0
   928  01A274  FF                 	db	255
   929  01A275  00                 	db	0
   930  01A276  FF                 	db	255
   931  01A277  00                 	db	0
   932  01A278  FF                 	db	255
   933  01A279  00                 	db	0
   934  01A27A  FF                 	db	255
   935  01A27B  00                 	db	0
   936  01A27C  FF                 	db	255
   937  01A27D  00                 	db	0
   938  01A27E  FF                 	db	255
   939  01A27F  00                 	db	0
   940  01A280  00                 	db	0
   941  01A281  00                 	db	0
   942  01A282  00                 	db	0
   943  01A283  00                 	db	0
   944  01A284  00                 	db	0
   945  01A285  00                 	db	0
   946  01A286  00                 	db	0
   947  01A287  00                 	db	0
   948  01A288  00                 	db	0
   949  01A289  00                 	db	0
   950  01A28A  00                 	db	0
   951  01A28B  00                 	db	0
   952  01A28C  00                 	db	0
   953  01A28D  00                 	db	0
   954  01A28E  00                 	db	0
   955  01A28F  00                 	db	0
   956  01A290  00                 	db	0
   957  01A291  00                 	db	0
   958  01A292  00                 	db	0
   959  01A293  00                 	db	0
   960  01A294  00                 	db	0
   961  01A295  00                 	db	0
   962  01A296  00                 	db	0
   963  01A297  00                 	db	0
   964  01A298  00                 	db	0
   965  01A299  00                 	db	0
   966  01A29A  00                 	db	0
   967  01A29B  00                 	db	0
   968  01A29C  00                 	db	0
   969  01A29D  00                 	db	0
   970  01A29E  00                 	db	0
   971  01A29F  00                 	db	0
   972  01A2A0  00                 	db	0
   973  01A2A1  00                 	db	0
   974  01A2A2  00                 	db	0
   975  01A2A3  00                 	db	0
   976  01A2A4  00                 	db	0
   977  01A2A5  00                 	db	0
   978  01A2A6  00                 	db	0
   979  01A2A7  00                 	db	0
   980  01A2A8  00                 	db	0
   981  01A2A9  00                 	db	0
   982  01A2AA  00                 	db	0
   983  01A2AB  00                 	db	0
   984  01A2AC  00                 	db	0
   985  01A2AD  00                 	db	0
   986  01A2AE  00                 	db	0
   987  01A2AF  00                 	db	0
   988  01A2B0  00                 	db	0
   989  01A2B1  00                 	db	0
   990  01A2B2  00                 	db	0
   991  01A2B3  00                 	db	0
   992  01A2B4  00                 	db	0
   993  01A2B5  00                 	db	0
   994  01A2B6  00                 	db	0
   995  01A2B7  00                 	db	0
   996  01A2B8  00                 	db	0
   997  01A2B9  00                 	db	0
   998  01A2BA  00                 	db	0
   999  01A2BB  00                 	db	0
  1000  01A2BC  00                 	db	0
  1001  01A2BD  00                 	db	0
  1002  01A2BE  00                 	db	0
  1003  01A2BF  00                 	db	0
  1004  01A2C0  00                 	db	0
  1005  01A2C1  00                 	db	0
  1006  01A2C2  00                 	db	0
  1007  01A2C3  00                 	db	0
  1008  01A2C4  00                 	db	0
  1009  01A2C5  00                 	db	0
  1010  01A2C6  00                 	db	0
  1011  01A2C7  00                 	db	0
  1012  01A2C8  00                 	db	0
  1013  01A2C9  00                 	db	0
  1014  01A2CA  00                 	db	0
  1015  01A2CB  00                 	db	0
  1016  01A2CC  00                 	db	0
  1017  01A2CD  00                 	db	0
  1018  01A2CE  00                 	db	0
  1019  01A2CF  00                 	db	0
  1020  01A2D0  00                 	db	0
  1021  01A2D1  00                 	db	0
  1022  01A2D2  00                 	db	0
  1023  01A2D3  00                 	db	0
  1024  01A2D4  00                 	db	0
  1025  01A2D5  00                 	db	0
  1026  01A2D6  00                 	db	0
  1027  01A2D7  00                 	db	0
  1028  01A2D8  00                 	db	0
  1029  01A2D9  00                 	db	0
  1030  01A2DA  00                 	db	0
  1031  01A2DB  00                 	db	0
  1032  01A2DC  00                 	db	0
  1033  01A2DD  00                 	db	0
  1034  01A2DE  00                 	db	0
  1035  01A2DF  00                 	db	0
  1036  01A2E0  00                 	db	0
  1037  01A2E1  00                 	db	0
  1038  01A2E2  00                 	db	0
  1039  01A2E3  00                 	db	0
  1040  01A2E4  00                 	db	0
  1041  01A2E5  00                 	db	0
  1042  01A2E6  00                 	db	0
  1043  01A2E7  00                 	db	0
  1044  01A2E8  00                 	db	0
  1045  01A2E9  00                 	db	0
  1046  01A2EA  00                 	db	0
  1047  01A2EB  00                 	db	0
  1048  01A2EC  00                 	db	0
  1049  01A2ED  00                 	db	0
  1050  01A2EE  00                 	db	0
  1051  01A2EF  00                 	db	0
  1052  01A2F0  00                 	db	0
  1053  01A2F1  00                 	db	0
  1054  01A2F2  00                 	db	0
  1055  01A2F3  00                 	db	0
  1056  01A2F4  00                 	db	0
  1057  01A2F5  00                 	db	0
  1058  01A2F6  00                 	db	0
  1059  01A2F7  00                 	db	0
  1060  01A2F8  00                 	db	0
  1061  01A2F9  00                 	db	0
  1062  01A2FA  00                 	db	0
  1063  01A2FB  00                 	db	0
  1064  01A2FC  00                 	db	0
  1065  01A2FD  00                 	db	0
  1066  01A2FE  00                 	db	0
  1067  01A2FF  00                 	db	0
  1068  01A300  00                 	db	0
  1069  01A301  00                 	db	0
  1070  01A302  00                 	db	0
  1071  01A303  00                 	db	0
  1072  01A304  00                 	db	0
  1073  01A305  00                 	db	0
  1074  01A306  00                 	db	0
  1075  01A307  00                 	db	0
  1076  01A308  00                 	db	0
  1077  01A309  00                 	db	0
  1078  01A30A  00                 	db	0
  1079  01A30B  00                 	db	0
  1080  01A30C  00                 	db	0
  1081  01A30D  00                 	db	0
  1082  01A30E  00                 	db	0
  1083  01A30F  00                 	db	0
  1084  01A310  00                 	db	0
  1085  01A311  00                 	db	0
  1086  01A312  00                 	db	0
  1087  01A313  00                 	db	0
  1088  01A314  00                 	db	0
  1089  01A315  00                 	db	0
  1090  01A316  00                 	db	0
  1091  01A317  00                 	db	0
  1092  01A318  00                 	db	0
  1093  01A319  00                 	db	0
  1094  01A31A  00                 	db	0
  1095  01A31B  00                 	db	0
  1096  01A31C  00                 	db	0
  1097  01A31D  00                 	db	0
  1098  01A31E  00                 	db	0
  1099  01A31F  00                 	db	0
  1100  01A320  00                 	db	0
  1101  01A321  00                 	db	0
  1102  01A322  00                 	db	0
  1103  01A323  00                 	db	0
  1104  01A324  00                 	db	0
  1105  01A325  00                 	db	0
  1106  01A326  00                 	db	0
  1107  01A327  00                 	db	0
  1108  01A328  00                 	db	0
  1109  01A329  00                 	db	0
  1110  01A32A  00                 	db	0
  1111  01A32B  00                 	db	0
  1112  01A32C  00                 	db	0
  1113  01A32D  00                 	db	0
  1114  01A32E  00                 	db	0
  1115  01A32F  00                 	db	0
  1116  01A330  00                 	db	0
  1117  01A331  00                 	db	0
  1118  01A332  00                 	db	0
  1119  01A333  00                 	db	0
  1120  01A334  00                 	db	0
  1121  01A335  00                 	db	0
  1122  01A336  00                 	db	0
  1123  01A337  00                 	db	0
  1124  01A338  00                 	db	0
  1125  01A339  00                 	db	0
  1126  01A33A  00                 	db	0
  1127  01A33B  00                 	db	0
  1128  01A33C  00                 	db	0
  1129  01A33D  00                 	db	0
  1130  01A33E  00                 	db	0
  1131  01A33F  00                 	db	0
  1132  01A340  00                 	db	0
  1133  01A341  00                 	db	0
  1134  01A342  00                 	db	0
  1135  01A343  00                 	db	0
  1136  01A344  00                 	db	0
  1137  01A345  00                 	db	0
  1138  01A346  00                 	db	0
  1139  01A347  00                 	db	0
  1140  01A348  00                 	db	0
  1141  01A349  00                 	db	0
  1142  01A34A  00                 	db	0
  1143  01A34B  00                 	db	0
  1144  01A34C  00                 	db	0
  1145  01A34D  00                 	db	0
  1146  01A34E  00                 	db	0
  1147  01A34F  00                 	db	0
  1148  01A350  00                 	db	0
  1149  01A351  00                 	db	0
  1150  01A352  00                 	db	0
  1151  01A353  00                 	db	0
  1152  01A354  00                 	db	0
  1153  01A355  00                 	db	0
  1154  01A356  00                 	db	0
  1155  01A357  00                 	db	0
  1156  01A358  00                 	db	0
  1157  01A359  00                 	db	0
  1158  01A35A  00                 	db	0
  1159  01A35B  00                 	db	0
  1160  01A35C  00                 	db	0
  1161  01A35D  00                 	db	0
  1162  01A35E  00                 	db	0
  1163  01A35F  00                 	db	0
  1164  01A360  00                 	db	0
  1165  01A361  00                 	db	0
  1166  01A362  00                 	db	0
  1167  01A363  00                 	db	0
  1168  01A364  00                 	db	0
  1169  01A365  00                 	db	0
  1170  01A366  00                 	db	0
  1171  01A367  00                 	db	0
  1172  01A368  00                 	db	0
  1173  01A369  00                 	db	0
  1174  01A36A  00                 	db	0
  1175  01A36B  00                 	db	0
  1176  01A36C  00                 	db	0
  1177  01A36D  00                 	db	0
  1178  01A36E  00                 	db	0
  1179  01A36F  00                 	db	0
  1180  01A370  00                 	db	0
  1181  01A371  00                 	db	0
  1182  01A372  00                 	db	0
  1183  01A373  00                 	db	0
  1184  01A374  00                 	db	0
  1185  01A375  00                 	db	0
  1186  01A376  00                 	db	0
  1187  01A377  00                 	db	0
  1188  01A378  00                 	db	0
  1189  01A379  00                 	db	0
  1190  01A37A  00                 	db	0
  1191  01A37B  00                 	db	0
  1192  01A37C  00                 	db	0
  1193  01A37D  00                 	db	0
  1194  01A37E  00                 	db	0
  1195  01A37F  00                 	db	0
  1196  01A380  00                 	db	0
  1197  01A381  00                 	db	0
  1198  01A382  00                 	db	0
  1199  01A383  00                 	db	0
  1200  01A384  00                 	db	0
  1201  01A385  00                 	db	0
  1202  01A386  00                 	db	0
  1203  01A387  00                 	db	0
  1204  01A388  00                 	db	0
  1205  01A389  00                 	db	0
  1206  01A38A  00                 	db	0
  1207  01A38B  00                 	db	0
  1208  01A38C  00                 	db	0
  1209  01A38D  00                 	db	0
  1210  01A38E  00                 	db	0
  1211  01A38F  00                 	db	0
  1212  01A390  00                 	db	0
  1213  01A391  00                 	db	0
  1214  01A392  00                 	db	0
  1215  01A393  00                 	db	0
  1216  01A394  00                 	db	0
  1217  01A395  00                 	db	0
  1218  01A396  00                 	db	0
  1219  01A397  00                 	db	0
  1220  01A398  00                 	db	0
  1221  01A399  00                 	db	0
  1222  01A39A  00                 	db	0
  1223  01A39B  00                 	db	0
  1224  01A39C  00                 	db	0
  1225  01A39D  00                 	db	0
  1226  01A39E  00                 	db	0
  1227  01A39F  00                 	db	0
  1228  01A3A0  00                 	db	0
  1229  01A3A1  00                 	db	0
  1230  01A3A2  00                 	db	0
  1231  01A3A3  00                 	db	0
  1232  01A3A4  00                 	db	0
  1233  01A3A5  00                 	db	0
  1234  01A3A6  00                 	db	0
  1235  01A3A7  00                 	db	0
  1236  01A3A8  00                 	db	0
  1237  01A3A9  00                 	db	0
  1238  01A3AA  00                 	db	0
  1239  01A3AB  00                 	db	0
  1240  01A3AC  00                 	db	0
  1241  01A3AD  00                 	db	0
  1242  01A3AE  00                 	db	0
  1243  01A3AF  00                 	db	0
  1244  01A3B0  00                 	db	0
  1245  01A3B1  00                 	db	0
  1246  01A3B2  00                 	db	0
  1247  01A3B3  00                 	db	0
  1248  01A3B4  00                 	db	0
  1249  01A3B5  00                 	db	0
  1250  01A3B6  00                 	db	0
  1251  01A3B7  00                 	db	0
  1252  01A3B8  00                 	db	0
  1253  01A3B9  00                 	db	0
  1254  01A3BA  00                 	db	0
  1255  01A3BB  00                 	db	0
  1256  01A3BC  00                 	db	0
  1257  01A3BD  00                 	db	0
  1258  01A3BE  00                 	db	0
  1259  01A3BF  00                 	db	0
  1260  01A3C0  00                 	db	0
  1261  01A3C1  00                 	db	0
  1262  01A3C2  00                 	db	0
  1263  01A3C3  00                 	db	0
  1264  01A3C4  00                 	db	0
  1265  01A3C5  00                 	db	0
  1266  01A3C6  00                 	db	0
  1267  01A3C7  00                 	db	0
  1268  01A3C8  00                 	db	0
  1269  01A3C9  00                 	db	0
  1270  01A3CA  00                 	db	0
  1271  01A3CB  00                 	db	0
  1272  01A3CC  00                 	db	0
  1273  01A3CD  00                 	db	0
  1274  01A3CE  00                 	db	0
  1275  01A3CF  00                 	db	0
  1276  01A3D0  00                 	db	0
  1277  01A3D1  00                 	db	0
  1278  01A3D2  00                 	db	0
  1279  01A3D3  00                 	db	0
  1280  01A3D4  00                 	db	0
  1281  01A3D5  00                 	db	0
  1282  01A3D6  00                 	db	0
  1283  01A3D7  00                 	db	0
  1284  01A3D8  00                 	db	0
  1285  01A3D9  00                 	db	0
  1286  01A3DA  00                 	db	0
  1287  01A3DB  00                 	db	0
  1288  01A3DC  00                 	db	0
  1289  01A3DD  00                 	db	0
  1290  01A3DE  00                 	db	0
  1291  01A3DF  00                 	db	0
  1292  01A3E0  00                 	db	0
  1293  01A3E1  00                 	db	0
  1294  01A3E2  00                 	db	0
  1295  01A3E3  00                 	db	0
  1296  01A3E4  00                 	db	0
  1297  01A3E5  00                 	db	0
  1298  01A3E6  00                 	db	0
  1299  01A3E7  00                 	db	0
  1300  01A3E8  00                 	db	0
  1301  01A3E9  00                 	db	0
  1302  01A3EA  00                 	db	0
  1303  01A3EB  00                 	db	0
  1304  01A3EC  00                 	db	0
  1305  01A3ED  00                 	db	0
  1306  01A3EE  00                 	db	0
  1307  01A3EF  00                 	db	0
  1308  01A3F0  00                 	db	0
  1309  01A3F1  00                 	db	0
  1310  01A3F2  00                 	db	0
  1311  01A3F3  00                 	db	0
  1312  01A3F4  00                 	db	0
  1313  01A3F5  00                 	db	0
  1314  01A3F6  00                 	db	0
  1315  01A3F7  00                 	db	0
  1316  01A3F8  00                 	db	0
  1317  01A3F9  00                 	db	0
  1318  01A3FA  00                 	db	0
  1319  01A3FB  00                 	db	0
  1320  01A3FC  00                 	db	0
  1321  01A3FD  00                 	db	0
  1322  01A3FE  00                 	db	0
  1323  01A3FF  00                 	db	0
  1324  01A400  00                 	db	0
  1325  01A401  00                 	db	0
  1326  01A402  00                 	db	0
  1327  01A403  00                 	db	0
  1328  01A404  00                 	db	0
  1329  01A405  00                 	db	0
  1330  01A406  00                 	db	0
  1331  01A407  00                 	db	0
  1332  01A408  00                 	db	0
  1333  01A409  00                 	db	0
  1334  01A40A  00                 	db	0
  1335  01A40B  00                 	db	0
  1336  01A40C  00                 	db	0
  1337  01A40D  00                 	db	0
  1338  01A40E  00                 	db	0
  1339  01A40F  00                 	db	0
  1340  01A410  00                 	db	0
  1341  01A411  00                 	db	0
  1342  01A412  00                 	db	0
  1343  01A413  00                 	db	0
  1344  01A414  00                 	db	0
  1345  01A415  00                 	db	0
  1346  01A416  00                 	db	0
  1347  01A417  00                 	db	0
  1348  01A418  00                 	db	0
  1349  01A419  00                 	db	0
  1350  01A41A  00                 	db	0
  1351  01A41B  00                 	db	0
  1352  01A41C  00                 	db	0
  1353  01A41D  00                 	db	0
  1354  01A41E  00                 	db	0
  1355  01A41F  00                 	db	0
  1356  01A420  00                 	db	0
  1357  01A421  00                 	db	0
  1358  01A422  00                 	db	0
  1359  01A423  00                 	db	0
  1360  01A424  00                 	db	0
  1361  01A425  00                 	db	0
  1362  01A426  00                 	db	0
  1363  01A427  00                 	db	0
  1364  01A428  00                 	db	0
  1365  01A429  00                 	db	0
  1366  01A42A  00                 	db	0
  1367  01A42B  00                 	db	0
  1368  01A42C  00                 	db	0
  1369  01A42D  00                 	db	0
  1370  01A42E  00                 	db	0
  1371  01A42F  00                 	db	0
  1372  01A430  00                 	db	0
  1373  01A431  00                 	db	0
  1374  01A432  00                 	db	0
  1375  01A433  00                 	db	0
  1376  01A434  00                 	db	0
  1377  01A435  00                 	db	0
  1378  01A436  00                 	db	0
  1379  01A437  00                 	db	0
  1380  01A438  00                 	db	0
  1381  01A439  00                 	db	0
  1382  01A43A  00                 	db	0
  1383  01A43B  00                 	db	0
  1384  01A43C  00                 	db	0
  1385  01A43D  00                 	db	0
  1386  01A43E  00                 	db	0
  1387  01A43F  00                 	db	0
  1388  01A440  00                 	db	0
  1389  01A441  00                 	db	0
  1390  01A442  00                 	db	0
  1391  01A443  00                 	db	0
  1392  01A444  00                 	db	0
  1393  01A445  00                 	db	0
  1394  01A446  00                 	db	0
  1395  01A447  00                 	db	0
  1396  01A448  00                 	db	0
  1397  01A449  00                 	db	0
  1398  01A44A  00                 	db	0
  1399  01A44B  00                 	db	0
  1400  01A44C  00                 	db	0
  1401  01A44D  00                 	db	0
  1402  01A44E  00                 	db	0
  1403  01A44F  00                 	db	0
  1404  01A450  00                 	db	0
  1405  01A451  00                 	db	0
  1406  01A452  00                 	db	0
  1407  01A453  00                 	db	0
  1408  01A454  00                 	db	0
  1409  01A455  00                 	db	0
  1410  01A456  00                 	db	0
  1411  01A457  00                 	db	0
  1412  01A458  00                 	db	0
  1413  01A459  00                 	db	0
  1414  01A45A  00                 	db	0
  1415  01A45B  00                 	db	0
  1416  01A45C  00                 	db	0
  1417  01A45D  00                 	db	0
  1418  01A45E  00                 	db	0
  1419  01A45F  00                 	db	0
  1420  01A460  00                 	db	0
  1421  01A461  00                 	db	0
  1422  01A462  00                 	db	0
  1423  01A463  00                 	db	0
  1424  01A464  00                 	db	0
  1425  01A465  00                 	db	0
  1426  01A466  00                 	db	0
  1427  01A467  00                 	db	0
  1428  01A468  00                 	db	0
  1429  01A469  00                 	db	0
  1430  01A46A  00                 	db	0
  1431  01A46B  00                 	db	0
  1432  01A46C  00                 	db	0
  1433  01A46D  00                 	db	0
  1434  01A46E  00                 	db	0
  1435  01A46F  00                 	db	0
  1436                           
  1437                           ;initializer for _C
  1438  01A470  0000               	dw	0
  1439  01A472  0000               	dw	0
  1440  01A474  0000               	dw	0
  1441  01A476  0000               	dw	0
  1442  01A478  0000               	dw	0
  1443  01A47A  0000               	dw	0
  1444  01A47C  0000               	dw	0
  1445  01A47E  0000               	dw	0
  1446  01A480  0000               	dw	0
  1447  01A482  0000               	dw	0
  1448  01A484  0000               	dw	0
  1449  01A486  0000               	dw	0
  1450  01A488  0000               	dw	0
  1451  01A48A  0000               	dw	0
  1452  01A48C  0000               	dw	0
  1453  01A48E  0000               	dw	0
  1454  01A490  0000               	dw	0
  1455  01A492  0000               	dw	0
  1456  01A494  0000               	dw	0
  1457  01A496  0000               	dw	0
  1458  01A498  0000               	dw	0
  1459  01A49A  0000               	dw	0
  1460  01A49C  0000               	dw	0
  1461  01A49E  0000               	dw	0
  1462  01A4A0  0000               	dw	0
  1463  01A4A2  0000               	dw	0
  1464  01A4A4  0000               	dw	0
  1465  01A4A6  0000               	dw	0
  1466  01A4A8  0000               	dw	0
  1467  01A4AA  0000               	dw	0
  1468  01A4AC  0000               	dw	0
  1469  01A4AE  0000               	dw	0
  1470  01A4B0  0000               	dw	0
  1471  01A4B2  0000               	dw	0
  1472  01A4B4  0000               	dw	0
  1473  01A4B6  0000               	dw	0
  1474  01A4B8  0000               	dw	0
  1475  01A4BA  0000               	dw	0
  1476  01A4BC  0000               	dw	0
  1477  01A4BE  0000               	dw	0
  1478  01A4C0  0000               	dw	0
  1479  01A4C2  0000               	dw	0
  1480  01A4C4  0000               	dw	0
  1481  01A4C6  0000               	dw	0
  1482  01A4C8  0000               	dw	0
  1483  01A4CA  0000               	dw	0
  1484  01A4CC  0000               	dw	0
  1485  01A4CE  0000               	dw	0
  1486  01A4D0  0000               	dw	0
  1487  01A4D2  0000               	dw	0
  1488  01A4D4  0000               	dw	0
  1489  01A4D6  0000               	dw	0
  1490  01A4D8  0000               	dw	0
  1491  01A4DA  0000               	dw	0
  1492  01A4DC  0000               	dw	0
  1493  01A4DE  0000               	dw	0
  1494  01A4E0  0000               	dw	0
  1495  01A4E2  0000               	dw	0
  1496  01A4E4  0000               	dw	0
  1497  01A4E6  0000               	dw	0
  1498  01A4E8  0000               	dw	0
  1499  01A4EA  0000               	dw	0
  1500  01A4EC  0000               	dw	0
  1501  01A4EE  0000               	dw	0
  1502  01A4F0  0000               	dw	0
  1503  01A4F2  0000               	dw	0
  1504  01A4F4  0000               	dw	0
  1505  01A4F6  0000               	dw	0
  1506  01A4F8  0000               	dw	0
  1507  01A4FA  0000               	dw	0
  1508  01A4FC  0000               	dw	0
  1509  01A4FE  42FA               	dw	17146
  1510  01A500  0000               	dw	0
  1511  01A502  0000               	dw	0
  1512  01A504  0000               	dw	0
  1513  01A506  0000               	dw	0
  1514  01A508  0000               	dw	0
  1515  01A50A  0000               	dw	0
  1516  01A50C  0000               	dw	0
  1517  01A50E  0000               	dw	0
  1518  01A510  0000               	dw	0
  1519  01A512  0000               	dw	0
  1520  01A514  0000               	dw	0
  1521  01A516  0000               	dw	0
  1522  01A518  0000               	dw	0
  1523  01A51A  0000               	dw	0
  1524  01A51C  0000               	dw	0
  1525  01A51E  0000               	dw	0
  1526  01A520  0000               	dw	0
  1527  01A522  0000               	dw	0
  1528  01A524  0000               	dw	0
  1529  01A526  0000               	dw	0
  1530  01A528  00                 	db	0
  1531  01A529  01                 	db	1
  1532  01A52A  0000               	dw	0
  1533  01A52C  0000               	dw	0
  1534  01A52E  0000               	dw	0
  1535  01A530  0000               	dw	0
  1536  01A532  0000               	dw	0
  1537  01A534  3F80               	dw	16256
  1538  01A536  0000               	dw	0
  1539  01A538  3F80               	dw	16256
  1540  01A53A  0000               	dw	0
  1541  01A53C  0000               	dw	0
  1542  01A53E  0000               	dw	0
  1543  01A540  0000               	dw	0
  1544  01A542  0000               	dw	0
  1545  01A544  0000               	dw	0
  1546  01A546  0000               	dw	0
  1547  01A548  0000               	dw	0
  1548  01A54A  0000               	dw	0
  1549  01A54C  0000               	dw	0
  1550  01A54E  00                 	db	0
  1551  01A54F  00                 	db	0
  1552  01A550  00                 	db	0
  1553  01A551  00                 	db	0
  1554  01A552  00                 	db	0
  1555  01A553  00                 	db	0
  1556  01A554  00                 	db	0
  1557  01A555  00                 	db	0
  1558  01A556  00                 	db	0
  1559  01A557  00                 	db	0
  1560  01A558  00                 	db	0
  1561  01A559  00                 	db	0
  1562  01A55A  00                 	db	0
  1563  01A55B  00                 	db	0
  1564  01A55C  00                 	db	0
  1565  01A55D  00                 	db	0
  1566  01A55E  00                 	db	0
  1567  01A55F  00                 	db	0
  1568  01A560  00                 	db	0
  1569  01A561  00                 	db	0
  1570  01A562  00                 	db	0
  1571  01A563  00                 	db	0
  1572  01A564  00                 	db	0
  1573  01A565  00                 	db	0
  1574  01A566  00                 	db	0
  1575  01A567  00                 	db	0
  1576  01A568  00                 	db	0
  1577  01A569  00                 	db	0
  1578  01A56A  00                 	db	0
  1579  01A56B  00                 	db	0
  1580  01A56C  00                 	db	0
  1581  01A56D  00                 	db	0
  1582  01A56E  00                 	db	0
  1583  01A56F  00                 	db	0
  1584  01A570  00                 	db	0
  1585  01A571  00                 	db	0
  1586  01A572  00                 	db	0
  1587  01A573  00                 	db	0
  1588  01A574  00                 	db	0
  1589  01A575  00                 	db	0
  1590  01A576  00                 	db	0
  1591  01A577  00                 	db	0
  1592  01A578  00                 	db	0
  1593  01A579  00                 	db	0
  1594  01A57A  00                 	db	0
  1595  01A57B  00                 	db	0
  1596  01A57C  00                 	db	0
  1597  01A57D  00                 	db	0
  1598  01A57E  00                 	db	0
  1599  01A57F  00                 	db	0
  1600  01A580  00                 	db	0
  1601  01A581  00                 	db	0
  1602  01A582  00                 	db	0
  1603  01A583  00                 	db	0
  1604  01A584  00                 	db	0
  1605  01A585  00                 	db	0
  1606  01A586  00                 	db	0
  1607  01A587  00                 	db	0
  1608  01A588  00                 	db	0
  1609  01A589  00                 	db	0
  1610  01A58A  0000               	dw	0
  1611  01A58C  0000               	dw	0
  1612  01A58E  0000               	dw	0
  1613  01A590  0000               	dw	0
  1614  01A592  0000               	dw	0
  1615  01A594  0000               	dw	0
  1616  01A596  0000               	dw	0
  1617  01A598  0000               	dw	0
  1618  01A59A  0000               	dw	0
  1619  01A59C  0000               	dw	0
  1620  01A59E  01                 	db	1
  1621  01A59F  00                 	db	0
  1622  01A5A0  0000               	dw	0
  1623  01A5A2  0000               	dw	0
  1624  01A5A4  0000               	dw	0
  1625  01A5A6  0000               	dw	0
  1626  01A5A8  0000               	dw	0
  1627  01A5AA  0000               	dw	0
  1628  01A5AC  0000               	dw	0
  1629  01A5AE  0000               	dw	0
  1630                           
  1631                           	psect	idataBANK1
  1632  0007D6                     __pidataBANK1:
  1633                           	opt callstack 0
  1634                           
  1635                           ;initializer for _R
  1636  0007D6  0000               	dw	0
  1637  0007D8  0000               	dw	0
  1638  0007DA  0000               	dw	0
  1639  0007DC  0000               	dw	0
  1640  0007DE  0000               	dw	0
  1641  0007E0  0000               	dw	0
  1642  0007E2  0000               	dw	0
  1643  0007E4  0000               	dw	0
  1644  0007E6  0000               	dw	0
  1645  0007E8  0000               	dw	0
  1646  0007EA  0000               	dw	0
  1647  0007EC  0000               	dw	0
  1648  0007EE  0000               	dw	0
  1649  0007F0  0000               	dw	0
  1650  0007F2  0000               	dw	0
  1651  0007F4  0000               	dw	0
  1652  0007F6  0000               	dw	0
  1653  0007F8  0000               	dw	0
  1654  0007FA  0000               	dw	0
  1655  0007FC  0F62               	dw	3938
  1656  0007FE  0FA4               	dw	4004
  1657  000800  89A0               	dw	35232
  1658  000802  3DB0               	dw	15792
  1659  000804  DEA4               	dw	56996
  1660  000806  3D13               	dw	15635
  1661  000808  00                 	db	0
  1662  000809  0000               	dw	0
  1663  00080B  00                 	db	0
  1664  00080C  00                 	db	0
  1665  00080D  0000               	dw	0
  1666  00080F  0000               	dw	0
  1667  000811  0000               	dw	0
  1668  000813  0000               	dw	0
  1669  000815  0000               	dw	0
  1670  000817  0000               	dw	0
  1671  000819  0000               	dw	0
  1672  00081B  0000               	dw	0
  1673  00081D  0000               	dw	0
  1674  00081F  0000               	dw	0
  1675  000821  0000               	dw	0
  1676  000823  0000               	dw	0
  1677  000825  0000               	dw	0
  1678  000827  0000               	dw	0
  1679  000829  0000               	dw	0
  1680  00082B  0000               	dw	0
  1681  00082D  0000               	dw	0
  1682  00082F  0000               	dw	0
  1683  000831  0000               	dw	0
  1684  000833  0000               	dw	0
  1685  000835  0000               	dw	0
  1686  000837  0000               	dw	0
  1687  000839  0000               	dw	0
  1688  00083B  0000               	dw	0
  1689  00083D  0000               	dw	0
  1690  00083F  0000               	dw	0
  1691  000841  0000               	dw	0
  1692  000843  0000               	dw	0
  1693  000845  0000               	dw	0
  1694  000847  0000               	dw	0
  1695  000849  0000               	dw	0
  1696  00084B  0000               	dw	0
  1697  00084D  0000               	dw	0
  1698  00084F  0000               	dw	0
  1699  000851  0000               	dw	0
  1700  000853  0000               	dw	0
  1701  000855  0000               	dw	0
  1702  000857  0000               	dw	0
  1703  000859  0000               	dw	0
  1704  00085B  0000               	dw	0
  1705  00085D  0000               	dw	0
  1706  00085F  0000               	dw	0
  1707  000861  0000               	dw	0
  1708  000863  0000               	dw	0
  1709  000865  0000               	dw	0
  1710  000867  0000               	dw	0
  1711  000869  0000               	dw	0
  1712  00086B  0000               	dw	0
  1713  00086D  00                 	db	0
  1714  00086E  1957               	dw	6487
  1715  000870  42                 	db	66
  1716                           
  1717                           ;initializer for _H
  1718  000871  00                 	db	0
  1719  000872  00                 	db	0
  1720  000873  01                 	db	1
  1721  000874  00                 	db	0
  1722  000875  01                 	db	1
  1723  000876  00                 	db	0
  1724  000877  01                 	db	1
  1725  000878  00                 	db	0
  1726  000879  00                 	db	0
  1727                           
  1728                           	psect	idataBANK2
  1729  000248                     __pidataBANK2:
  1730                           	opt callstack 0
  1731                           
  1732                           ;initializer for stoa@F1166
  1733  000248  28                 	db	40
  1734  000249  6E                 	db	110
  1735  00024A  75                 	db	117
  1736  00024B  6C                 	db	108
  1737  00024C  6C                 	db	108
  1738  00024D  29                 	db	41
  1739  00024E  00                 	db	0
  1740                           
  1741                           ;initializer for _V
  1742  00024F  00                 	db	0
  1743  000250  00                 	db	0
  1744  000251  00                 	db	0
  1745  000252  00                 	db	0
  1746  000253  00                 	db	0
  1747  000254  00                 	db	0
  1748  000255  00                 	db	0
  1749  000256  00                 	db	0
  1750  000257  00                 	db	0
  1751  000258  00                 	db	0
  1752  000259  00                 	db	0
  1753  00025A  00                 	db	0
  1754  00025B  00                 	db	0
  1755  00025C  00                 	db	0
  1756  00025D  00                 	db	0
  1757  00025E  00                 	db	0
  1758  00025F  00                 	db	0
  1759  000260  00                 	db	0
  1760  000261  00                 	db	0
  1761  000262  00                 	db	0
  1762  000263  00                 	db	0
  1763  000264  00                 	db	0
  1764  000265  00                 	db	0
  1765  000266  00                 	db	0
  1766  000267  00                 	db	0
  1767  000268  00                 	db	0
  1768  000269  00                 	db	0
  1769  00026A  00                 	db	0
  1770  00026B  00                 	db	0
  1771  00026C  00                 	db	0
  1772  00026D  00                 	db	0
  1773  00026E  00                 	db	0
  1774  00026F  00                 	db	0
  1775  000270  00                 	db	0
  1776  000271  00                 	db	0
  1777  000272  00                 	db	0
  1778  000273  00                 	db	0
  1779  000274  00                 	db	0
  1780  000275  00                 	db	0
  1781  000276  00                 	db	0
  1782  000277  00                 	db	0
  1783  000278  00                 	db	0
  1784  000279  00                 	db	0
  1785  00027A  00                 	db	0
  1786  00027B  00                 	db	0
  1787  00027C  00                 	db	0
  1788  00027D  00                 	db	0
  1789  00027E  00                 	db	0
  1790  00027F  00                 	db	0
  1791  000280  00                 	db	0
  1792  000281  00                 	db	0
  1793  000282  00                 	db	0
  1794  000283  00                 	db	0
  1795  000284  00                 	db	0
  1796  000285  00                 	db	0
  1797  000286  00                 	db	0
  1798  000287  00                 	db	0
  1799  000288  00                 	db	0
  1800  000289  00                 	db	0
  1801  00028A  00                 	db	0
  1802  00028B  00                 	db	0
  1803  00028C  00                 	db	0
  1804  00028D  00                 	db	0
  1805  00028E  00                 	db	0
  1806  00028F  00                 	db	0
  1807  000290  00                 	db	0
  1808  000291  00                 	db	0
  1809  000292  00                 	db	0
  1810  000293  00                 	db	0
  1811  000294  00                 	db	0
  1812  000295  00                 	db	0
  1813  000296  00                 	db	0
  1814  000297  00                 	db	0
  1815  000298  00                 	db	0
  1816  000299  00                 	db	0
  1817  00029A  00                 	db	0
  1818  00029B  00                 	db	0
  1819  00029C  00                 	db	0
  1820  00029D  00                 	db	0
  1821  00029E  00                 	db	0
  1822  00029F  00                 	db	0
  1823  0002A0  00                 	db	0
  1824  0002A1  00                 	db	0
  1825  0002A2  00                 	db	0
  1826  0002A3  00                 	db	0
  1827  0002A4  00                 	db	0
  1828  0002A5  00                 	db	0
  1829  0002A6  00                 	db	0
  1830  0002A7  00                 	db	0
  1831  0002A8  00                 	db	0
  1832  0002A9  00                 	db	0
  1833  0002AA  00                 	db	0
  1834  0002AB  00                 	db	0
  1835  0002AC  00                 	db	0
  1836  0002AD  00                 	db	0
  1837  0002AE  00                 	db	0
  1838  0002AF  00                 	db	0
  1839  0002B0  00                 	db	0
  1840  0002B1  00                 	db	0
  1841  0002B2  00                 	db	0
  1842  0002B3  00                 	db	0
  1843  0002B4  00                 	db	0
  1844  0002B5  00                 	db	0
  1845  0002B6  00                 	db	0
  1846  0002B7  00                 	db	0
  1847  0002B8  00                 	db	0
  1848  0002B9  00                 	db	0
  1849  0002BA  00                 	db	0
  1850  0002BB  00                 	db	0
  1851  0002BC  00                 	db	0
  1852  0002BD  00                 	db	0
  1853  0002BE  00                 	db	0
  1854  0002BF  00                 	db	0
  1855  0002C0  00                 	db	0
  1856  0002C1  00                 	db	0
  1857  0002C2  00                 	db	0
  1858  0002C3  00                 	db	0
  1859  0002C4  00                 	db	0
  1860  0002C5  00                 	db	0
  1861  0002C6  00                 	db	0
  1862  0002C7  00                 	db	0
  1863  0002C8  00                 	db	0
  1864  0002C9  00                 	db	0
  1865  0002CA  00                 	db	0
  1866  0002CB  00                 	db	0
  1867  0002CC  00                 	db	0
  1868  0002CD  00                 	db	0
  1869  0002CE  00                 	db	0
  1870  0002CF  00                 	db	0
  1871  0002D0  019A               	dw	410
  1872  0002D2  5E48               	dw	24136
  1873  0002D4  00                 	db	0
  1874  0002D5  00                 	db	0
  1875  0002D6  00                 	db	0
  1876  0002D7  00                 	db	0
  1877  0002D8  00                 	db	0
  1878  0002D9  00                 	db	0
  1879  0002DA  00                 	db	0
  1880  0002DB  0000               	dw	0
  1881  0002DD  0000               	dw	0
  1882  0002DF  0000               	dw	0
  1883  0002E1  0000               	dw	0
  1884  0002E3  0000               	dw	0
  1885  0002E5  0000               	dw	0
  1886  0002E7  00                 	db	0
  1887  0002E8  00                 	db	0
  1888  0002E9  00                 	db	0
  1889  0002EA  00                 	db	0
  1890  0002EB  00                 	db	0
  1891  0002EC  00                 	db	0
  1892  0002ED  00                 	db	0
  1893  0002EE  00                 	db	0
  1894  0002EF  00                 	db	0
  1895  0002F0  00                 	db	0
  1896  0002F1  00                 	db	0
  1897  0002F2  0000               	dw	0
  1898  0002F4  0000               	dw	0
  1899  0002F6  2D                 	db	45
  1900  0002F7  00                 	db	0
  1901  0002F8  00                 	db	0
  1902  0002F9  00                 	db	0
  1903  0002FA  00                 	db	0
  1904  0002FB  00                 	db	0
  1905  0002FC  0000               	dw	0
  1906  0002FE  0000               	dw	0
  1907  000300  0000               	dw	0
  1908  000302  0000               	dw	0
  1909                           
  1910                           	psect	mediumconst
  1911  00F7D6                     __pmediumconst:
  1912                           	opt callstack 0
  1913  00F7D6  00                 	db	0
  1914  00F7D7                     _BVSOC_TABLE:
  1915                           	opt callstack 0
  1916  00F7D7  59D8               	dw	23000
  1917  00F7D9  0000               	dw	0
  1918  00F7DB  0005               	dw	5
  1919  00F7DD  0000               	dw	0
  1920  00F7DF  5B68               	dw	23400
  1921  00F7E1  0000               	dw	0
  1922  00F7E3  000A               	dw	10
  1923  00F7E5  0000               	dw	0
  1924  00F7E7  5C30               	dw	23600
  1925  00F7E9  0000               	dw	0
  1926  00F7EB  0014               	dw	20
  1927  00F7ED  0000               	dw	0
  1928  00F7EF  5E38               	dw	24120
  1929  00F7F1  0000               	dw	0
  1930  00F7F3  0019               	dw	25
  1931  00F7F5  0000               	dw	0
  1932  00F7F7  5E88               	dw	24200
  1933  00F7F9  0000               	dw	0
  1934  00F7FB  001E               	dw	30
  1935  00F7FD  0000               	dw	0
  1936  00F7FF  5F78               	dw	24440
  1937  00F801  0000               	dw	0
  1938  00F803  0028               	dw	40
  1939  00F805  0000               	dw	0
  1940  00F807  5FDC               	dw	24540
  1941  00F809  0000               	dw	0
  1942  00F80B  002D               	dw	45
  1943  00F80D  0000               	dw	0
  1944  00F80F  6018               	dw	24600
  1945  00F811  0000               	dw	0
  1946  00F813  0032               	dw	50
  1947  00F815  0000               	dw	0
  1948  00F817  6046               	dw	24646
  1949  00F819  0000               	dw	0
  1950  00F81B  0035               	dw	53
  1951  00F81D  0000               	dw	0
  1952  00F81F  607C               	dw	24700
  1953  00F821  0000               	dw	0
  1954  00F823  0037               	dw	55
  1955  00F825  0000               	dw	0
  1956  00F827  60AE               	dw	24750
  1957  00F829  0000               	dw	0
  1958  00F82B  0039               	dw	57
  1959  00F82D  0000               	dw	0
  1960  00F82F  60E0               	dw	24800
  1961  00F831  0000               	dw	0
  1962  00F833  003C               	dw	60
  1963  00F835  0000               	dw	0
  1964  00F837  6112               	dw	24850
  1965  00F839  0000               	dw	0
  1966  00F83B  003F               	dw	63
  1967  00F83D  0000               	dw	0
  1968  00F83F  615D               	dw	24925
  1969  00F841  0000               	dw	0
  1970  00F843  0043               	dw	67
  1971  00F845  0000               	dw	0
  1972  00F847  61A8               	dw	25000
  1973  00F849  0000               	dw	0
  1974  00F84B  0046               	dw	70
  1975  00F84D  0000               	dw	0
  1976  00F84F  61BC               	dw	25020
  1977  00F851  0000               	dw	0
  1978  00F853  0048               	dw	72
  1979  00F855  0000               	dw	0
  1980  00F857  61D0               	dw	25040
  1981  00F859  0000               	dw	0
  1982  00F85B  004B               	dw	75
  1983  00F85D  0000               	dw	0
  1984  00F85F  61DA               	dw	25050
  1985  00F861  0000               	dw	0
  1986  00F863  0050               	dw	80
  1987  00F865  0000               	dw	0
  1988  00F867  61E4               	dw	25060
  1989  00F869  0000               	dw	0
  1990  00F86B  0055               	dw	85
  1991  00F86D  0000               	dw	0
  1992  00F86F  61F8               	dw	25080
  1993  00F871  0000               	dw	0
  1994  00F873  005A               	dw	90
  1995  00F875  0000               	dw	0
  1996  00F877  6208               	dw	25096
  1997  00F879  0000               	dw	0
  1998  00F87B  005C               	dw	92
  1999  00F87D  0000               	dw	0
  2000  00F87F  6222               	dw	25122
  2001  00F881  0000               	dw	0
  2002  00F883  005D               	dw	93
  2003  00F885  0000               	dw	0
  2004  00F887  6234               	dw	25140
  2005  00F889  0000               	dw	0
  2006  00F88B  005F               	dw	95
  2007  00F88D  0000               	dw	0
  2008  00F88F  6248               	dw	25160
  2009  00F891  0000               	dw	0
  2010  00F893  0061               	dw	97
  2011  00F895  0000               	dw	0
  2012  00F897  625C               	dw	25180
  2013  00F899  0000               	dw	0
  2014  00F89B  0064               	dw	100
  2015  00F89D  0000               	dw	0
  2016  00F89F  6784               	dw	26500
  2017  00F8A1  0000               	dw	0
  2018  00F8A3  0062               	dw	98
  2019  00F8A5  0000               	dw	0
  2020  00F8A7                     __end_of_BVSOC_TABLE:
  2021                           	opt callstack 0
  2022  00F8A7                     ___month_to_secs@secs_through_month:
  2023                           	opt callstack 0
  2024  00F8A7  0000               	dw	0
  2025  00F8A9  0000               	dw	0
  2026  00F8AB  DE80               	dw	56960
  2027  00F8AD  0028               	dw	40
  2028  00F8AF  C880               	dw	51328
  2029  00F8B1  004D               	dw	77
  2030  00F8B3  A700               	dw	42752
  2031  00F8B5  0076               	dw	118
  2032  00F8B7  3400               	dw	13312
  2033  00F8B9  009E               	dw	158
  2034  00F8BB  1280               	dw	4736
  2035  00F8BD  00C7               	dw	199
  2036  00F8BF  9F80               	dw	40832
  2037  00F8C1  00EE               	dw	238
  2038  00F8C3  7E00               	dw	32256
  2039  00F8C5  0117               	dw	279
  2040  00F8C7  5C80               	dw	23680
  2041  00F8C9  0140               	dw	320
  2042  00F8CB  E980               	dw	59776
  2043  00F8CD  0167               	dw	359
  2044  00F8CF  C800               	dw	51200
  2045  00F8D1  0190               	dw	400
  2046  00F8D3  5500               	dw	21760
  2047  00F8D5  01B8               	dw	440
  2048  00F8D7                     __end_of___month_to_secs@secs_through_month:
  2049                           	opt callstack 0
  2050  00F8D7                     ___secs_to_tm@days_in_month:
  2051                           	opt callstack 0
  2052  00F8D7  1F                 	db	31
  2053  00F8D8  1E                 	db	30
  2054  00F8D9  1F                 	db	31
  2055  00F8DA  1E                 	db	30
  2056  00F8DB  1F                 	db	31
  2057  00F8DC  1F                 	db	31
  2058  00F8DD  1E                 	db	30
  2059  00F8DE  1F                 	db	31
  2060  00F8DF  1E                 	db	30
  2061  00F8E0  1F                 	db	31
  2062  00F8E1  1F                 	db	31
  2063  00F8E2  1D                 	db	29
  2064  00F8E3                     __end_of___secs_to_tm@days_in_month:
  2065                           	opt callstack 0
  2066  00F8E3                     _T:
  2067                           	opt callstack 0
  2068  00F8E3  63                 	db	99
  2069  00F8E4  6F                 	db	111
  2070  00F8E5  6D                 	db	109
  2071  00F8E6  6D                 	db	109
  2072  00F8E7  61                 	db	97
  2073  00F8E8  6E                 	db	110
  2074  00F8E9  64                 	db	100
  2075  00F8EA  73                 	db	115
  2076  00F8EB  20                 	db	32
  2077  00F8EC  31                 	db	49
  2078  00F8ED  00                 	db	0
  2079  00F8EE  00                 	db	0
  2080  00F8EF  00                 	db	0
  2081  00F8F0  00                 	db	0
  2082  00F8F1  00                 	db	0
  2083  00F8F2  00                 	db	0
  2084  00F8F3  00                 	db	0
  2085  00F8F4  00                 	db	0
  2086  00F8F5  00                 	db	0
  2087  00F8F6  00                 	db	0
  2088  00F8F7  00                 	db	0
  2089  00F8F8  00                 	db	0
  2090  00F8F9  64                 	db	100
  2091  00F8FA  69                 	db	105
  2092  00F8FB  73                 	db	115
  2093  00F8FC  70                 	db	112
  2094  00F8FD  6C                 	db	108
  2095  00F8FE  61                 	db	97
  2096  00F8FF  79                 	db	121
  2097  00F900  73                 	db	115
  2098  00F901  20                 	db	32
  2099  00F902  31                 	db	49
  2100  00F903  00                 	db	0
  2101  00F904  00                 	db	0
  2102  00F905  00                 	db	0
  2103  00F906  00                 	db	0
  2104  00F907  00                 	db	0
  2105  00F908  00                 	db	0
  2106  00F909  00                 	db	0
  2107  00F90A  00                 	db	0
  2108  00F90B  00                 	db	0
  2109  00F90C  00                 	db	0
  2110  00F90D  00                 	db	0
  2111  00F90E  00                 	db	0
  2112  00F90F  63                 	db	99
  2113  00F910  6F                 	db	111
  2114  00F911  6D                 	db	109
  2115  00F912  6D                 	db	109
  2116  00F913  61                 	db	97
  2117  00F914  6E                 	db	110
  2118  00F915  64                 	db	100
  2119  00F916  73                 	db	115
  2120  00F917  20                 	db	32
  2121  00F918  32                 	db	50
  2122  00F919  00                 	db	0
  2123  00F91A  00                 	db	0
  2124  00F91B  00                 	db	0
  2125  00F91C  00                 	db	0
  2126  00F91D  00                 	db	0
  2127  00F91E  00                 	db	0
  2128  00F91F  00                 	db	0
  2129  00F920  00                 	db	0
  2130  00F921  00                 	db	0
  2131  00F922  00                 	db	0
  2132  00F923  00                 	db	0
  2133  00F924  00                 	db	0
  2134  00F925  64                 	db	100
  2135  00F926  69                 	db	105
  2136  00F927  73                 	db	115
  2137  00F928  70                 	db	112
  2138  00F929  6C                 	db	108
  2139  00F92A  61                 	db	97
  2140  00F92B  79                 	db	121
  2141  00F92C  73                 	db	115
  2142  00F92D  20                 	db	32
  2143  00F92E  32                 	db	50
  2144  00F92F  00                 	db	0
  2145  00F930  00                 	db	0
  2146  00F931  00                 	db	0
  2147  00F932  00                 	db	0
  2148  00F933  00                 	db	0
  2149  00F934  00                 	db	0
  2150  00F935  00                 	db	0
  2151  00F936  00                 	db	0
  2152  00F937  00                 	db	0
  2153  00F938  00                 	db	0
  2154  00F939  00                 	db	0
  2155  00F93A  00                 	db	0
  2156  00F93B  63                 	db	99
  2157  00F93C  6F                 	db	111
  2158  00F93D  6D                 	db	109
  2159  00F93E  6D                 	db	109
  2160  00F93F  61                 	db	97
  2161  00F940  6E                 	db	110
  2162  00F941  64                 	db	100
  2163  00F942  73                 	db	115
  2164  00F943  20                 	db	32
  2165  00F944  33                 	db	51
  2166  00F945  00                 	db	0
  2167  00F946  00                 	db	0
  2168  00F947  00                 	db	0
  2169  00F948  00                 	db	0
  2170  00F949  00                 	db	0
  2171  00F94A  00                 	db	0
  2172  00F94B  00                 	db	0
  2173  00F94C  00                 	db	0
  2174  00F94D  00                 	db	0
  2175  00F94E  00                 	db	0
  2176  00F94F  00                 	db	0
  2177  00F950  00                 	db	0
  2178  00F951  64                 	db	100
  2179  00F952  69                 	db	105
  2180  00F953  73                 	db	115
  2181  00F954  70                 	db	112
  2182  00F955  6C                 	db	108
  2183  00F956  61                 	db	97
  2184  00F957  79                 	db	121
  2185  00F958  73                 	db	115
  2186  00F959  20                 	db	32
  2187  00F95A  33                 	db	51
  2188  00F95B  00                 	db	0
  2189  00F95C  00                 	db	0
  2190  00F95D  00                 	db	0
  2191  00F95E  00                 	db	0
  2192  00F95F  00                 	db	0
  2193  00F960  00                 	db	0
  2194  00F961  00                 	db	0
  2195  00F962  00                 	db	0
  2196  00F963  00                 	db	0
  2197  00F964  00                 	db	0
  2198  00F965  00                 	db	0
  2199  00F966  00                 	db	0
  2200  00F967  63                 	db	99
  2201  00F968  6F                 	db	111
  2202  00F969  6D                 	db	109
  2203  00F96A  6D                 	db	109
  2204  00F96B  61                 	db	97
  2205  00F96C  6E                 	db	110
  2206  00F96D  64                 	db	100
  2207  00F96E  73                 	db	115
  2208  00F96F  20                 	db	32
  2209  00F970  34                 	db	52
  2210  00F971  00                 	db	0
  2211  00F972  00                 	db	0
  2212  00F973  00                 	db	0
  2213  00F974  00                 	db	0
  2214  00F975  00                 	db	0
  2215  00F976  00                 	db	0
  2216  00F977  00                 	db	0
  2217  00F978  00                 	db	0
  2218  00F979  00                 	db	0
  2219  00F97A  00                 	db	0
  2220  00F97B  00                 	db	0
  2221  00F97C  00                 	db	0
  2222  00F97D  64                 	db	100
  2223  00F97E  69                 	db	105
  2224  00F97F  73                 	db	115
  2225  00F980  70                 	db	112
  2226  00F981  6C                 	db	108
  2227  00F982  61                 	db	97
  2228  00F983  79                 	db	121
  2229  00F984  73                 	db	115
  2230  00F985  20                 	db	32
  2231  00F986  34                 	db	52
  2232  00F987  00                 	db	0
  2233  00F988  00                 	db	0
  2234  00F989  00                 	db	0
  2235  00F98A  00                 	db	0
  2236  00F98B  00                 	db	0
  2237  00F98C  00                 	db	0
  2238  00F98D  00                 	db	0
  2239  00F98E  00                 	db	0
  2240  00F98F  00                 	db	0
  2241  00F990  00                 	db	0
  2242  00F991  00                 	db	0
  2243  00F992  00                 	db	0
  2244  00F993                     __end_of_T:
  2245                           	opt callstack 0
  2246  00F993                     _spin:
  2247                           	opt callstack 0
  2248  00F993  7C                 	db	124
  2249  00F994  7C                 	db	124
  2250  00F995  2F                 	db	47
  2251  00F996  2F                 	db	47
  2252  00F997  2D                 	db	45
  2253  00F998  2D                 	db	45
  2254  00F999  00                 	db	0
  2255  00F99A  00                 	db	0
  2256  00F99B  00                 	db	0
  2257  00F99C  00                 	db	0
  2258  00F99D  00                 	db	0
  2259  00F99E  00                 	db	0
  2260  00F99F  00                 	db	0
  2261  00F9A0  00                 	db	0
  2262  00F9A1  00                 	db	0
  2263  00F9A2  00                 	db	0
  2264  00F9A3  00                 	db	0
  2265  00F9A4  00                 	db	0
  2266  00F9A5  00                 	db	0
  2267  00F9A6  00                 	db	0
  2268  00F9A7  7C                 	db	124
  2269  00F9A8  7C                 	db	124
  2270  00F9A9  2F                 	db	47
  2271  00F9AA  2F                 	db	47
  2272  00F9AB  2D                 	db	45
  2273  00F9AC  2D                 	db	45
  2274  00F9AD  5C                 	db	92
  2275  00F9AE  5C                 	db	92
  2276  00F9AF  00                 	db	0
  2277  00F9B0  00                 	db	0
  2278  00F9B1  00                 	db	0
  2279  00F9B2  00                 	db	0
  2280  00F9B3  00                 	db	0
  2281  00F9B4  00                 	db	0
  2282  00F9B5  00                 	db	0
  2283  00F9B6  00                 	db	0
  2284  00F9B7  00                 	db	0
  2285  00F9B8  00                 	db	0
  2286  00F9B9  00                 	db	0
  2287  00F9BA  00                 	db	0
  2288  00F9BB  4F                 	db	79
  2289  00F9BC  4F                 	db	79
  2290  00F9BD  4F                 	db	79
  2291  00F9BE  4F                 	db	79
  2292  00F9BF  4F                 	db	79
  2293  00F9C0  4F                 	db	79
  2294  00F9C1  2D                 	db	45
  2295  00F9C2  2D                 	db	45
  2296  00F9C3  5F                 	db	95
  2297  00F9C4  5F                 	db	95
  2298  00F9C5  2D                 	db	45
  2299  00F9C6  00                 	db	0
  2300  00F9C7  00                 	db	0
  2301  00F9C8  00                 	db	0
  2302  00F9C9  00                 	db	0
  2303  00F9CA  00                 	db	0
  2304  00F9CB  00                 	db	0
  2305  00F9CC  00                 	db	0
  2306  00F9CD  00                 	db	0
  2307  00F9CE  00                 	db	0
  2308  00F9CF  76                 	db	118
  2309  00F9D0  76                 	db	118
  2310  00F9D1  3C                 	db	60
  2311  00F9D2  3C                 	db	60
  2312  00F9D3  5E                 	db	94
  2313  00F9D4  5E                 	db	94
  2314  00F9D5  3E                 	db	62
  2315  00F9D6  3E                 	db	62
  2316  00F9D7  00                 	db	0
  2317  00F9D8  00                 	db	0
  2318  00F9D9  00                 	db	0
  2319  00F9DA  00                 	db	0
  2320  00F9DB  00                 	db	0
  2321  00F9DC  00                 	db	0
  2322  00F9DD  00                 	db	0
  2323  00F9DE  00                 	db	0
  2324  00F9DF  00                 	db	0
  2325  00F9E0  00                 	db	0
  2326  00F9E1  00                 	db	0
  2327  00F9E2  00                 	db	0
  2328  00F9E3  2E                 	db	46
  2329  00F9E4  2E                 	db	46
  2330  00F9E5  2A                 	db	42
  2331  00F9E6  2A                 	db	42
  2332  00F9E7  78                 	db	120
  2333  00F9E8  23                 	db	35
  2334  00F9E9  78                 	db	120
  2335  00F9EA  23                 	db	35
  2336  00F9EB  58                 	db	88
  2337  00F9EC  58                 	db	88
  2338  00F9ED  7C                 	db	124
  2339  00F9EE  7C                 	db	124
  2340  00F9EF  2D                 	db	45
  2341  00F9F0  2D                 	db	45
  2342  00F9F1  00                 	db	0
  2343  00F9F2  00                 	db	0
  2344  00F9F3  00                 	db	0
  2345  00F9F4  00                 	db	0
  2346  00F9F5  00                 	db	0
  2347  00F9F6  00                 	db	0
  2348  00F9F7  2E                 	db	46
  2349  00F9F8  2E                 	db	46
  2350  00F9F9  6F                 	db	111
  2351  00F9FA  6F                 	db	111
  2352  00F9FB  4F                 	db	79
  2353  00F9FC  4F                 	db	79
  2354  00F9FD  6F                 	db	111
  2355  00F9FE  6F                 	db	111
  2356  00F9FF  00                 	db	0
  2357  00FA00  00                 	db	0
  2358  00FA01  00                 	db	0
  2359  00FA02  00                 	db	0
  2360  00FA03  00                 	db	0
  2361  00FA04  00                 	db	0
  2362  00FA05  00                 	db	0
  2363  00FA06  00                 	db	0
  2364  00FA07  00                 	db	0
  2365  00FA08  00                 	db	0
  2366  00FA09  00                 	db	0
  2367  00FA0A  00                 	db	0
  2368  00FA0B                     __end_of_spin:
  2369                           	opt callstack 0
  2370  00FA0B  0000               	dw	0
  2371  00FA0D  3F80               	dw	16256
  2372  00FA0F  0000               	dw	0
  2373  00FA11  3FC0               	dw	16320
  2374  00FA13                     __end_of_bp:
  2375                           	opt callstack 0
  2376  00FA13                     ___gmt:
  2377                           	opt callstack 0
  2378  00FA13  47                 	db	71
  2379  00FA14  4D                 	db	77
  2380  00FA15  54                 	db	84
  2381  00FA16  00                 	db	0
  2382  00FA17                     __end_of___gmt:
  2383                           	opt callstack 0
  2384  00FA17  AA00               	dw	43520
  2385  00FA19  3FB8               	dw	16312
  2386  00FA1B                     __end_of_ivln2_h:
  2387                           	opt callstack 0
  2388  00FA1B  23C6               	dw	9158
  2389  00FA1D  B8F6               	dw	47350
  2390  00FA1F                     __end_of_cp_l:
  2391                           	opt callstack 0
  2392  00FA1F  4000               	dw	16384
  2393  00FA21  3F76               	dw	16246
  2394  00FA23                     __end_of_cp_h:
  2395                           	opt callstack 0
  2396  0000                     _IVTADL	set	14493
  2397  0000                     _IVTADH	set	14494
  2398  0000                     _IVTADU	set	14495
  2399  0000                     _CRCDATH	set	14689
  2400  0000                     _CRCDATL	set	14688
  2401  0000                     _CRCCON0bits	set	14696
  2402  0000                     _CRCCON1bits	set	14697
  2403  0000                     _CRCXORL	set	14694
  2404  0000                     _CRCXORH	set	14695
  2405  0000                     _SCANTRIG	set	14717
  2406  0000                     _SCANHADRL	set	14713
  2407  0000                     _SCANHADRH	set	14714
  2408  0000                     _SCANHADRU	set	14715
  2409  0000                     _SCANLADRL	set	14710
  2410  0000                     _SCANLADRH	set	14711
  2411  0000                     _SCANLADRU	set	14712
  2412  0000                     _SCANCON0	set	14716
  2413  0000                     _CRCACCH	set	14691
  2414  0000                     _CRCACCL	set	14690
  2415  0000                     _CRCCON1	set	14697
  2416  0000                     _CRCCON0	set	14696
  2417  0000                     _PIR6bits	set	14758
  2418  0000                     _PIR4bits	set	14756
  2419  0000                     _PIE8bits	set	14744
  2420  0000                     _PIR8bits	set	14760
  2421  0000                     _PIR0bits	set	14752
  2422  0000                     _NVMCON2	set	14822
  2423  0000                     _NVMDAT	set	14819
  2424  0000                     _NVMADRL	set	14816
  2425  0000                     _NVMADRH	set	14817
  2426  0000                     _NVMCON1bits	set	14821
  2427  0000                     _SCANPR	set	14839
  2428  0000                     _DMA2PR	set	14836
  2429  0000                     _DMA1PR	set	14835
  2430  0000                     _MAINPR	set	14834
  2431  0000                     _ISRPR	set	14833
  2432  0000                     _PIE2bits	set	14738
  2433  0000                     _PIR2bits	set	14754
  2434  0000                     _PIE9bits	set	14745
  2435  0000                     _PIR9bits	set	14761
  2436  0000                     _PIE6bits	set	14742
  2437  0000                     _PIE3bits	set	14739
  2438  0000                     _PMD7	set	14791
  2439  0000                     _PMD6	set	14790
  2440  0000                     _PMD5	set	14789
  2441  0000                     _PMD4	set	14788
  2442  0000                     _PMD3	set	14787
  2443  0000                     _PMD2	set	14786
  2444  0000                     _PMD1	set	14785
  2445  0000                     _PMD0	set	14784
  2446  0000                     _OSCTUNE	set	14814
  2447  0000                     _OSCFRQ	set	14815
  2448  0000                     _OSCEN	set	14813
  2449  0000                     _OSCCON3	set	14811
  2450  0000                     _OSCCON1	set	14809
  2451  0000                     _IPR8bits	set	14728
  2452  0000                     _IPR9bits	set	14729
  2453  0000                     _IPR5bits	set	14725
  2454  0000                     _IPR1bits	set	14721
  2455  0000                     _IPR3bits	set	14723
  2456  0000                     _IPR6bits	set	14726
  2457  0000                     _IPR2bits	set	14722
  2458  0000                     _PIE5bits	set	14741
  2459  0000                     _PIE1bits	set	14737
  2460  0000                     _PIR5bits	set	14757
  2461  0000                     _PIR1bits	set	14753
  2462  0000                     _PLLR	set	118496
  2463  0000                     _SPI1SDIPPS	set	15071
  2464  0000                     _U1RXPPS	set	15077
  2465  0000                     _RC6PPS	set	14870
  2466  0000                     _RC5PPS	set	14869
  2467  0000                     _INT1PPS	set	15041
  2468  0000                     _RD1PPS	set	14873
  2469  0000                     _INT0PPS	set	15040
  2470  0000                     _RC3PPS	set	14867
  2471  0000                     _RB6PPS	set	14862
  2472  0000                     _SPI1SCKPPS	set	15070
  2473  0000                     _U2RXPPS	set	15080
  2474  0000                     _SLRCONF	set	14995
  2475  0000                     _SLRCONE	set	14979
  2476  0000                     _SLRCOND	set	14963
  2477  0000                     _SLRCONC	set	14947
  2478  0000                     _SLRCONB	set	14931
  2479  0000                     _SLRCONA	set	14915
  2480  0000                     _ODCOND	set	14962
  2481  0000                     _ODCONC	set	14946
  2482  0000                     _ODCONB	set	14930
  2483  0000                     _ODCONA	set	14914
  2484  0000                     _ODCONF	set	14994
  2485  0000                     _ODCONE	set	14978
  2486  0000                     _WPUC	set	14945
  2487  0000                     _WPUA	set	14913
  2488  0000                     _WPUB	set	14929
  2489  0000                     _WPUE	set	14977
  2490  0000                     _WPUF	set	14993
  2491  0000                     _WPUD	set	14961
  2492  0000                     _ANSELA	set	14912
  2493  0000                     _ANSELF	set	14992
  2494  0000                     _ANSELE	set	14976
  2495  0000                     _ANSELB	set	14928
  2496  0000                     _ANSELC	set	14944
  2497  0000                     _ANSELD	set	14960
  2498  0000                     _DMA2SSA	set	15321
  2499  0000                     _DMA1SSA	set	15353
  2500  0000                     _DMA2DSZ	set	15310
  2501  0000                     _DMA2SSZ	set	15319
  2502  0000                     _DMA2DSA	set	15312
  2503  0000                     _DMA1DSZ	set	15342
  2504  0000                     _DMA1SSZ	set	15351
  2505  0000                     _DMA1DSA	set	15344
  2506  0000                     _DMA2CON0bits	set	15324
  2507  0000                     _DMA2CON1bits	set	15325
  2508  0000                     _DMA1CON0bits	set	15356
  2509  0000                     _DMA1CON1bits	set	15357
  2510  0000                     _DMA2CON0	set	15324
  2511  0000                     _DMA2AIRQ	set	15326
  2512  0000                     _DMA2SIRQ	set	15327
  2513  0000                     _DMA2CON1	set	15325
  2514  0000                     _DMA1CON0	set	15356
  2515  0000                     _DMA1AIRQ	set	15358
  2516  0000                     _DMA1SIRQ	set	15359
  2517  0000                     _DMA1CON1	set	15357
  2518  0000                     _CLKRCON	set	15589
  2519  0000                     _CLKRCLK	set	15590
  2520  0000                     _SPI1CON1bits	set	15637
  2521  0000                     _SPI1STATUSbits	set	15639
  2522  0000                     _SPI1INTFbits	set	15642
  2523  0000                     _SPI1CON0bits	set	15636
  2524  0000                     _SPI1RXB	set	15632
  2525  0000                     _SPI1TXB	set	15633
  2526  0000                     _SPI1TCNTL	set	15634
  2527  0000                     _SPI1CON0	set	15636
  2528  0000                     _SPI1CLK	set	15644
  2529  0000                     _SPI1BAUD	set	15641
  2530  0000                     _SPI1CON2	set	15638
  2531  0000                     _SPI1CON1	set	15637
  2532  0000                     _U2RXB	set	15824
  2533  0000                     _U2TXB	set	15826
  2534  0000                     _U2ERRIE	set	15842
  2535  0000                     _U2ERRIR	set	15841
  2536  0000                     _U2UIR	set	15840
  2537  0000                     _U2FIFO	set	15839
  2538  0000                     _U2BRGH	set	15838
  2539  0000                     _U2BRGL	set	15837
  2540  0000                     _U2CON2	set	15836
  2541  0000                     _U2CON1	set	15835
  2542  0000                     _U2CON0	set	15834
  2543  0000                     _U2P3L	set	15832
  2544  0000                     _U2P2L	set	15830
  2545  0000                     _U2P1L	set	15828
  2546  0000                     _U1RXB	set	15848
  2547  0000                     _U1ERRIE	set	15866
  2548  0000                     _U1ERRIR	set	15865
  2549  0000                     _U1UIR	set	15864
  2550  0000                     _U1FIFO	set	15863
  2551  0000                     _U1BRGH	set	15862
  2552  0000                     _U1BRGL	set	15861
  2553  0000                     _U1CON2	set	15860
  2554  0000                     _U1CON1	set	15859
  2555  0000                     _U1CON0	set	15858
  2556  0000                     _U1P3H	set	15857
  2557  0000                     _U1P3L	set	15856
  2558  0000                     _U1P2H	set	15855
  2559  0000                     _U1P2L	set	15854
  2560  0000                     _U1P1H	set	15853
  2561  0000                     _U1P1L	set	15852
  2562  0000                     _FVRCON	set	16065
  2563  0000                     _ADFLTRL	set	16102
  2564  0000                     _ADFLTRH	set	16103
  2565  0000                     _ADCON0bits	set	16120
  2566  0000                     _ADCON0	set	16120
  2567  0000                     _ADCLK	set	16127
  2568  0000                     _ADACT	set	16126
  2569  0000                     _ADREF	set	16125
  2570  0000                     _ADSTAT	set	16124
  2571  0000                     _ADCON3	set	16123
  2572  0000                     _ADCON2	set	16122
  2573  0000                     _ADCON1	set	16121
  2574  0000                     _ADPREH	set	16119
  2575  0000                     _ADPREL	set	16118
  2576  0000                     _ADCAP	set	16117
  2577  0000                     _ADACQH	set	16116
  2578  0000                     _ADACQL	set	16115
  2579  0000                     _ADPCH	set	16113
  2580  0000                     _ADRPT	set	16108
  2581  0000                     _ADACCU	set	16106
  2582  0000                     _ADSTPTH	set	16101
  2583  0000                     _ADSTPTL	set	16100
  2584  0000                     _ADUTHH	set	16097
  2585  0000                     _ADUTHL	set	16096
  2586  0000                     _ADLTHH	set	16095
  2587  0000                     _ADLTHL	set	16094
  2588  0000                     _CCPTMRS1bits	set	16223
  2589  0000                     _PORTDbits	set	16333
  2590  0000                     _PORTFbits	set	16335
  2591  0000                     _LATFbits	set	16319
  2592  0000                     _LATCbits	set	16316
  2593  0000                     _LATDbits	set	16317
  2594  0000                     _PORTBbits	set	16331
  2595  0000                     _T3CONbits	set	16294
  2596  0000                     _T3CON	set	16294
  2597  0000                     _TMR3L	set	16292
  2598  0000                     _TMR3H	set	16293
  2599  0000                     _T3CLK	set	16297
  2600  0000                     _T3GATE	set	16296
  2601  0000                     _T3GCON	set	16295
  2602  0000                     _T2CON	set	16300
  2603  0000                     _T2TMR	set	16298
  2604  0000                     _T2PR	set	16299
  2605  0000                     _T2RST	set	16303
  2606  0000                     _T2HLT	set	16301
  2607  0000                     _T2CLKCON	set	16302
  2608  0000                     _PWM8DCL	set	16224
  2609  0000                     _PWM8DCH	set	16225
  2610  0000                     _PWM8CON	set	16226
  2611  0000                     _LATEbits	set	16318
  2612  0000                     _T5CONbits	set	16282
  2613  0000                     _T5CON	set	16282
  2614  0000                     _TMR5L	set	16280
  2615  0000                     _TMR5H	set	16281
  2616  0000                     _T5CLK	set	16285
  2617  0000                     _T5GATE	set	16284
  2618  0000                     _T5GCON	set	16283
  2619  0000                     _T6CON	set	16276
  2620  0000                     _T6TMR	set	16274
  2621  0000                     _T6PR	set	16275
  2622  0000                     _T6RST	set	16279
  2623  0000                     _T6HLT	set	16277
  2624  0000                     _T6CLKCON	set	16278
  2625  0000                     _TRISD	set	16325
  2626  0000                     _TRISC	set	16324
  2627  0000                     _TRISB	set	16323
  2628  0000                     _TRISA	set	16322
  2629  0000                     _TRISF	set	16327
  2630  0000                     _TRISE	set	16326
  2631  0000                     _LATC	set	16316
  2632  0000                     _LATB	set	16315
  2633  0000                     _LATF	set	16319
  2634  0000                     _LATA	set	16314
  2635  0000                     _LATD	set	16317
  2636  0000                     _LATE	set	16318
  2637  0000                     _IVTLOCKbits	set	16340
  2638  0000                     _IVTLOCK	set	16340
  2639  0000                     _INTCON0bits	set	16338
  2640  0000                     _GIE	set	130711
  2641  00FA23                     STR_90:
  2642                           
  2643                           ; BSR set to: 57
  2644  00FA23  20                 	db	32
  2645  00FA24  25                 	db	37
  2646  00FA25  63                 	db	99	;'c'
  2647  00FA26  20                 	db	32
  2648  00FA27  2C                 	db	44
  2649  00FA28  25                 	db	37
  2650  00FA29  6C                 	db	108	;'l'
  2651  00FA2A  75                 	db	117	;'u'
  2652  00FA2B  2C                 	db	44
  2653  00FA2C  25                 	db	37
  2654  00FA2D  34                 	db	52	;'4'
  2655  00FA2E  2E                 	db	46
  2656  00FA2F  34                 	db	52	;'4'
  2657  00FA30  66                 	db	102	;'f'
  2658  00FA31  2C                 	db	44
  2659  00FA32  25                 	db	37
  2660  00FA33  34                 	db	52	;'4'
  2661  00FA34  2E                 	db	46
  2662  00FA35  34                 	db	52	;'4'
  2663  00FA36  66                 	db	102	;'f'
  2664  00FA37  2C                 	db	44
  2665  00FA38  25                 	db	37
  2666  00FA39  34                 	db	52	;'4'
  2667  00FA3A  2E                 	db	46
  2668  00FA3B  34                 	db	52	;'4'
  2669  00FA3C  66                 	db	102	;'f'
  2670  00FA3D  2C                 	db	44
  2671  00FA3E  25                 	db	37
  2672  00FA3F  34                 	db	52	;'4'
  2673  00FA40  2E                 	db	46
  2674  00FA41  34                 	db	52	;'4'
  2675  00FA42  66                 	db	102	;'f'
  2676  00FA43  2C                 	db	44
  2677  00FA44  25                 	db	37
  2678  00FA45  34                 	db	52	;'4'
  2679  00FA46  2E                 	db	46
  2680  00FA47  34                 	db	52	;'4'
  2681  00FA48  66                 	db	102	;'f'
  2682  00FA49  2C                 	db	44
  2683  00FA4A  25                 	db	37
  2684  00FA4B  34                 	db	52	;'4'
  2685  00FA4C  2E                 	db	46
  2686  00FA4D  33                 	db	51	;'3'
  2687  00FA4E  66                 	db	102	;'f'
  2688  00FA4F  2C                 	db	44
  2689  00FA50  25                 	db	37
  2690  00FA51  34                 	db	52	;'4'
  2691  00FA52  2E                 	db	46
  2692  00FA53  33                 	db	51	;'3'
  2693  00FA54  66                 	db	102	;'f'
  2694  00FA55  2C                 	db	44
  2695  00FA56  25                 	db	37
  2696  00FA57  34                 	db	52	;'4'
  2697  00FA58  2E                 	db	46
  2698  00FA59  33                 	db	51	;'3'
  2699  00FA5A  66                 	db	102	;'f'
  2700  00FA5B  2C                 	db	44
  2701  00FA5C  25                 	db	37
  2702  00FA5D  34                 	db	52	;'4'
  2703  00FA5E  2E                 	db	46
  2704  00FA5F  33                 	db	51	;'3'
  2705  00FA60  66                 	db	102	;'f'
  2706  00FA61  2C                 	db	44
  2707  00FA62  25                 	db	37
  2708  00FA63  34                 	db	52	;'4'
  2709  00FA64  2E                 	db	46
  2710  00FA65  33                 	db	51	;'3'
  2711  00FA66  66                 	db	102	;'f'
  2712  00FA67  2C                 	db	44
  2713  00FA68  25                 	db	37
  2714  00FA69  34                 	db	52	;'4'
  2715  00FA6A  2E                 	db	46
  2716  00FA6B  33                 	db	51	;'3'
  2717  00FA6C  66                 	db	102	;'f'
  2718  00FA6D  2C                 	db	44
  2719  00FA6E  25                 	db	37
  2720  00FA6F  64                 	db	100	;'d'
  2721  00FA70  2C                 	db	44
  2722  00FA71  25                 	db	37
  2723  00FA72  64                 	db	100	;'d'
  2724  00FA73  2C                 	db	44
  2725  00FA74  25                 	db	37
  2726  00FA75  32                 	db	50	;'2'
  2727  00FA76  2E                 	db	46
  2728  00FA77  36                 	db	54	;'6'
  2729  00FA78  66                 	db	102	;'f'
  2730  00FA79  2C                 	db	44
  2731  00FA7A  25                 	db	37
  2732  00FA7B  34                 	db	52	;'4'
  2733  00FA7C  2E                 	db	46
  2734  00FA7D  33                 	db	51	;'3'
  2735  00FA7E  66                 	db	102	;'f'
  2736  00FA7F  2C                 	db	44
  2737  00FA80  25                 	db	37
  2738  00FA81  64                 	db	100	;'d'
  2739  00FA82  2C                 	db	44
  2740  00FA83  25                 	db	37
  2741  00FA84  64                 	db	100	;'d'
  2742  00FA85  2C                 	db	44
  2743  00FA86  25                 	db	37
  2744  00FA87  6C                 	db	108	;'l'
  2745  00FA88  75                 	db	117	;'u'
  2746  00FA89  2C                 	db	44
  2747  00FA8A  25                 	db	37
  2748  00FA8B  6C                 	db	108	;'l'
  2749  00FA8C  75                 	db	117	;'u'
  2750  00FA8D  2C                 	db	44
  2751  00FA8E  25                 	db	37
  2752  00FA8F  34                 	db	52	;'4'
  2753  00FA90  2E                 	db	46
  2754  00FA91  33                 	db	51	;'3'
  2755  00FA92  66                 	db	102	;'f'
  2756  00FA93  2C                 	db	44
  2757  00FA94  25                 	db	37
  2758  00FA95  34                 	db	52	;'4'
  2759  00FA96  2E                 	db	46
  2760  00FA97  33                 	db	51	;'3'
  2761  00FA98  66                 	db	102	;'f'
  2762  00FA99  2C                 	db	44
  2763  00FA9A  25                 	db	37
  2764  00FA9B  34                 	db	52	;'4'
  2765  00FA9C  2E                 	db	46
  2766  00FA9D  33                 	db	51	;'3'
  2767  00FA9E  66                 	db	102	;'f'
  2768  00FA9F  0D                 	db	13
  2769  00FAA0  0A                 	db	10
  2770  00FAA1  00                 	db	0
  2771  00FAA2                     STR_128:
  2772                           
  2773                           ; BSR set to: 57
  2774  00FAA2  4A                 	db	74	;'J'
  2775  00FAA3  61                 	db	97	;'a'
  2776  00FAA4  6E                 	db	110	;'n'
  2777  00FAA5  46                 	db	70	;'F'
  2778  00FAA6  65                 	db	101	;'e'
  2779  00FAA7  62                 	db	98	;'b'
  2780  00FAA8  4D                 	db	77	;'M'
  2781  00FAA9  61                 	db	97	;'a'
  2782  00FAAA  72                 	db	114	;'r'
  2783  00FAAB  41                 	db	65	;'A'
  2784  00FAAC  70                 	db	112	;'p'
  2785  00FAAD  72                 	db	114	;'r'
  2786  00FAAE  4D                 	db	77	;'M'
  2787  00FAAF  61                 	db	97	;'a'
  2788  00FAB0  79                 	db	121	;'y'
  2789  00FAB1  4A                 	db	74	;'J'
  2790  00FAB2  75                 	db	117	;'u'
  2791  00FAB3  6E                 	db	110	;'n'
  2792  00FAB4  4A                 	db	74	;'J'
  2793  00FAB5  75                 	db	117	;'u'
  2794  00FAB6  6C                 	db	108	;'l'
  2795  00FAB7  41                 	db	65	;'A'
  2796  00FAB8  75                 	db	117	;'u'
  2797  00FAB9  67                 	db	103	;'g'
  2798  00FABA  53                 	db	83	;'S'
  2799  00FABB  65                 	db	101	;'e'
  2800  00FABC  70                 	db	112	;'p'
  2801  00FABD  4F                 	db	79	;'O'
  2802  00FABE  63                 	db	99	;'c'
  2803  00FABF  74                 	db	116	;'t'
  2804  00FAC0  4E                 	db	78	;'N'
  2805  00FAC1  6F                 	db	111	;'o'
  2806  00FAC2  76                 	db	118	;'v'
  2807  00FAC3  44                 	db	68	;'D'
  2808  00FAC4  65                 	db	101	;'e'
  2809  00FAC5  63                 	db	99	;'c'
  2810  00FAC6  00                 	db	0
  2811  00FAC7                     STR_45:
  2812                           
  2813                           ; BSR set to: 57
  2814  00FAC7  53                 	db	83	;'S'
  2815  00FAC8  25                 	db	37
  2816  00FAC9  63                 	db	99	;'c'
  2817  00FACA  43                 	db	67	;'C'
  2818  00FACB  20                 	db	32
  2819  00FACC  25                 	db	37
  2820  00FACD  64                 	db	100	;'d'
  2821  00FACE  20                 	db	32
  2822  00FACF  52                 	db	82	;'R'
  2823  00FAD0  55                 	db	85	;'U'
  2824  00FAD1  4E                 	db	78	;'N'
  2825  00FAD2  20                 	db	32
  2826  00FAD3  25                 	db	37
  2827  00FAD4  64                 	db	100	;'d'
  2828  00FAD5  20                 	db	32
  2829  00FAD6  56                 	db	86	;'V'
  2830  00FAD7  25                 	db	37
  2831  00FAD8  32                 	db	50	;'2'
  2832  00FAD9  2E                 	db	46
  2833  00FADA  32                 	db	50	;'2'
  2834  00FADB  66                 	db	102	;'f'
  2835  00FADC  20                 	db	32
  2836  00FADD  20                 	db	32
  2837  00FADE  20                 	db	32
  2838  00FADF  20                 	db	32
  2839  00FAE0  20                 	db	32
  2840  00FAE1  20                 	db	32
  2841  00FAE2  20                 	db	32
  2842  00FAE3  00                 	db	0
  2843  00FAE4                     STR_65:
  2844                           
  2845                           ; BSR set to: 57
  2846  00FAE4  25                 	db	37
  2847  00FAE5  64                 	db	100	;'d'
  2848  00FAE6  20                 	db	32
  2849  00FAE7  25                 	db	37
  2850  00FAE8  64                 	db	100	;'d'
  2851  00FAE9  20                 	db	32
  2852  00FAEA  25                 	db	37
  2853  00FAEB  64                 	db	100	;'d'
  2854  00FAEC  20                 	db	32
  2855  00FAED  25                 	db	37
  2856  00FAEE  64                 	db	100	;'d'
  2857  00FAEF  20                 	db	32
  2858  00FAF0  20                 	db	32
  2859  00FAF1  20                 	db	32
  2860  00FAF2  20                 	db	32
  2861  00FAF3  20                 	db	32
  2862  00FAF4  20                 	db	32
  2863  00FAF5  20                 	db	32
  2864  00FAF6  20                 	db	32
  2865  00FAF7  20                 	db	32
  2866  00FAF8  20                 	db	32
  2867  00FAF9  20                 	db	32
  2868  00FAFA  20                 	db	32
  2869  00FAFB  20                 	db	32
  2870  00FAFC  20                 	db	32
  2871  00FAFD  20                 	db	32
  2872  00FAFE  20                 	db	32
  2873  00FAFF  00                 	db	0
  2874  00FB00                     
  2875                           ; BSR set to: 57
  2876  00FB00  20                 	db	32
  2877  00FB01  4D                 	db	77	;'M'
  2878  00FB02  65                 	db	101	;'e'
  2879  00FB03  73                 	db	115	;'s'
  2880  00FB04  67                 	db	103	;'g'
  2881  00FB05  20                 	db	32
  2882  00FB06  25                 	db	37
  2883  00FB07  64                 	db	100	;'d'
  2884  00FB08  20                 	db	32
  2885  00FB09  53                 	db	83	;'S'
  2886  00FB0A  74                 	db	116	;'t'
  2887  00FB0B  61                 	db	97	;'a'
  2888  00FB0C  63                 	db	99	;'c'
  2889  00FB0D  6B                 	db	107	;'k'
  2890  00FB0E  20                 	db	32
  2891  00FB0F  25                 	db	37
  2892  00FB10  64                 	db	100	;'d'
  2893  00FB11  20                 	db	32
  2894  00FB12  20                 	db	32
  2895  00FB13  20                 	db	32
  2896  00FB14  20                 	db	32
  2897  00FB15  20                 	db	32
  2898  00FB16  20                 	db	32
  2899  00FB17  20                 	db	32
  2900  00FB18  20                 	db	32
  2901  00FB19  00                 	db	0
  2902  00FB1A                     STR_22:
  2903                           
  2904                           ; BSR set to: 57
  2905  00FB1A  52                 	db	82	;'R'
  2906  00FB1B  31                 	db	49	;'1'
  2907  00FB1C  20                 	db	32
  2908  00FB1D  25                 	db	37
  2909  00FB1E  32                 	db	50	;'2'
  2910  00FB1F  2E                 	db	46
  2911  00FB20  33                 	db	51	;'3'
  2912  00FB21  66                 	db	102	;'f'
  2913  00FB22  20                 	db	32
  2914  00FB23  25                 	db	37
  2915  00FB24  33                 	db	51	;'3'
  2916  00FB25  2E                 	db	46
  2917  00FB26  34                 	db	52	;'4'
  2918  00FB27  66                 	db	102	;'f'
  2919  00FB28  20                 	db	32
  2920  00FB29  20                 	db	32
  2921  00FB2A  20                 	db	32
  2922  00FB2B  20                 	db	32
  2923  00FB2C  20                 	db	32
  2924  00FB2D  20                 	db	32
  2925  00FB2E  20                 	db	32
  2926  00FB2F  20                 	db	32
  2927  00FB30  20                 	db	32
  2928  00FB31  20                 	db	32
  2929  00FB32  20                 	db	32
  2930  00FB33  00                 	db	0
  2931  00FB34                     STR_23:
  2932                           
  2933                           ; BSR set to: 57
  2934  00FB34  52                 	db	82	;'R'
  2935  00FB35  32                 	db	50	;'2'
  2936  00FB36  20                 	db	32
  2937  00FB37  25                 	db	37
  2938  00FB38  32                 	db	50	;'2'
  2939  00FB39  2E                 	db	46
  2940  00FB3A  33                 	db	51	;'3'
  2941  00FB3B  66                 	db	102	;'f'
  2942  00FB3C  20                 	db	32
  2943  00FB3D  25                 	db	37
  2944  00FB3E  33                 	db	51	;'3'
  2945  00FB3F  2E                 	db	46
  2946  00FB40  34                 	db	52	;'4'
  2947  00FB41  66                 	db	102	;'f'
  2948  00FB42  20                 	db	32
  2949  00FB43  20                 	db	32
  2950  00FB44  20                 	db	32
  2951  00FB45  20                 	db	32
  2952  00FB46  20                 	db	32
  2953  00FB47  20                 	db	32
  2954  00FB48  20                 	db	32
  2955  00FB49  20                 	db	32
  2956  00FB4A  20                 	db	32
  2957  00FB4B  20                 	db	32
  2958  00FB4C  20                 	db	32
  2959  00FB4D  00                 	db	0
  2960  00FB4E                     STR_13:
  2961                           
  2962                           ; BSR set to: 57
  2963  00FB4E  53                 	db	83	;'S'
  2964  00FB4F  20                 	db	32
  2965  00FB50  53                 	db	83	;'S'
  2966  00FB51  25                 	db	37
  2967  00FB52  63                 	db	99	;'c'
  2968  00FB53  43                 	db	67	;'C'
  2969  00FB54  20                 	db	32
  2970  00FB55  25                 	db	37
  2971  00FB56  64                 	db	100	;'d'
  2972  00FB57  20                 	db	32
  2973  00FB58  25                 	db	37
  2974  00FB59  32                 	db	50	;'2'
  2975  00FB5A  2E                 	db	46
  2976  00FB5B  34                 	db	52	;'4'
  2977  00FB5C  66                 	db	102	;'f'
  2978  00FB5D  20                 	db	32
  2979  00FB5E  20                 	db	32
  2980  00FB5F  20                 	db	32
  2981  00FB60  20                 	db	32
  2982  00FB61  20                 	db	32
  2983  00FB62  20                 	db	32
  2984  00FB63  20                 	db	32
  2985  00FB64  20                 	db	32
  2986  00FB65  20                 	db	32
  2987  00FB66  20                 	db	32
  2988  00FB67  00                 	db	0
  2989  00FB68                     STR_46:
  2990                           
  2991                           ; BSR set to: 57
  2992  00FB68  45                 	db	69	;'E'
  2993  00FB69  53                 	db	83	;'S'
  2994  00FB6A  52                 	db	82	;'R'
  2995  00FB6B  20                 	db	32
  2996  00FB6C  20                 	db	32
  2997  00FB6D  25                 	db	37
  2998  00FB6E  32                 	db	50	;'2'
  2999  00FB6F  2E                 	db	46
  3000  00FB70  36                 	db	54	;'6'
  3001  00FB71  66                 	db	102	;'f'
  3002  00FB72  20                 	db	32
  3003  00FB73  20                 	db	32
  3004  00FB74  20                 	db	32
  3005  00FB75  20                 	db	32
  3006  00FB76  20                 	db	32
  3007  00FB77  20                 	db	32
  3008  00FB78  20                 	db	32
  3009  00FB79  20                 	db	32
  3010  00FB7A  20                 	db	32
  3011  00FB7B  20                 	db	32
  3012  00FB7C  20                 	db	32
  3013  00FB7D  20                 	db	32
  3014  00FB7E  00                 	db	0
  3015  00FB7F                     STR_43:
  3016                           
  3017                           ; BSR set to: 57
  3018  00FB7F  42                 	db	66	;'B'
  3019  00FB80  41                 	db	65	;'A'
  3020  00FB81  54                 	db	84	;'T'
  3021  00FB82  54                 	db	84	;'T'
  3022  00FB83  20                 	db	32
  3023  00FB84  50                 	db	80	;'P'
  3024  00FB85  57                 	db	87	;'W'
  3025  00FB86  52                 	db	82	;'R'
  3026  00FB87  20                 	db	32
  3027  00FB88  25                 	db	37
  3028  00FB89  33                 	db	51	;'3'
  3029  00FB8A  2E                 	db	46
  3030  00FB8B  32                 	db	50	;'2'
  3031  00FB8C  66                 	db	102	;'f'
  3032  00FB8D  20                 	db	32
  3033  00FB8E  20                 	db	32
  3034  00FB8F  20                 	db	32
  3035  00FB90  20                 	db	32
  3036  00FB91  20                 	db	32
  3037  00FB92  20                 	db	32
  3038  00FB93  20                 	db	32
  3039  00FB94  20                 	db	32
  3040  00FB95  00                 	db	0
  3041  00FB96                     STR_47:
  3042                           
  3043                           ; BSR set to: 57
  3044  00FB96  52                 	db	82	;'R'
  3045  00FB97  31                 	db	49	;'1'
  3046  00FB98  20                 	db	32
  3047  00FB99  25                 	db	37
  3048  00FB9A  32                 	db	50	;'2'
  3049  00FB9B  2E                 	db	46
  3050  00FB9C  33                 	db	51	;'3'
  3051  00FB9D  66                 	db	102	;'f'
  3052  00FB9E  20                 	db	32
  3053  00FB9F  25                 	db	37
  3054  00FBA0  33                 	db	51	;'3'
  3055  00FBA1  2E                 	db	46
  3056  00FBA2  34                 	db	52	;'4'
  3057  00FBA3  66                 	db	102	;'f'
  3058  00FBA4  20                 	db	32
  3059  00FBA5  20                 	db	32
  3060  00FBA6  20                 	db	32
  3061  00FBA7  20                 	db	32
  3062  00FBA8  20                 	db	32
  3063  00FBA9  20                 	db	32
  3064  00FBAA  20                 	db	32
  3065  00FBAB  20                 	db	32
  3066  00FBAC  00                 	db	0
  3067  00FBAD                     STR_48:
  3068                           
  3069                           ; BSR set to: 57
  3070  00FBAD  52                 	db	82	;'R'
  3071  00FBAE  32                 	db	50	;'2'
  3072  00FBAF  20                 	db	32
  3073  00FBB0  25                 	db	37
  3074  00FBB1  32                 	db	50	;'2'
  3075  00FBB2  2E                 	db	46
  3076  00FBB3  33                 	db	51	;'3'
  3077  00FBB4  66                 	db	102	;'f'
  3078  00FBB5  20                 	db	32
  3079  00FBB6  25                 	db	37
  3080  00FBB7  33                 	db	51	;'3'
  3081  00FBB8  2E                 	db	46
  3082  00FBB9  34                 	db	52	;'4'
  3083  00FBBA  66                 	db	102	;'f'
  3084  00FBBB  20                 	db	32
  3085  00FBBC  20                 	db	32
  3086  00FBBD  20                 	db	32
  3087  00FBBE  20                 	db	32
  3088  00FBBF  20                 	db	32
  3089  00FBC0  20                 	db	32
  3090  00FBC1  20                 	db	32
  3091  00FBC2  20                 	db	32
  3092  00FBC3  00                 	db	0
  3093  00FBC4                     STR_44:
  3094                           
  3095                           ; BSR set to: 57
  3096  00FBC4  42                 	db	66	;'B'
  3097  00FBC5  41                 	db	65	;'A'
  3098  00FBC6  48                 	db	72	;'H'
  3099  00FBC7  20                 	db	32
  3100  00FBC8  25                 	db	37
  3101  00FBC9  33                 	db	51	;'3'
  3102  00FBCA  2E                 	db	46
  3103  00FBCB  32                 	db	50	;'2'
  3104  00FBCC  66                 	db	102	;'f'
  3105  00FBCD  20                 	db	32
  3106  00FBCE  50                 	db	80	;'P'
  3107  00FBCF  25                 	db	37
  3108  00FBD0  33                 	db	51	;'3'
  3109  00FBD1  2E                 	db	46
  3110  00FBD2  32                 	db	50	;'2'
  3111  00FBD3  66                 	db	102	;'f'
  3112  00FBD4  20                 	db	32
  3113  00FBD5  20                 	db	32
  3114  00FBD6  20                 	db	32
  3115  00FBD7  20                 	db	32
  3116  00FBD8  20                 	db	32
  3117  00FBD9  20                 	db	32
  3118  00FBDA  00                 	db	0
  3119  00FBDB                     STR_127:
  3120                           
  3121                           ; BSR set to: 57
  3122  00FBDB  53                 	db	83	;'S'
  3123  00FBDC  75                 	db	117	;'u'
  3124  00FBDD  6E                 	db	110	;'n'
  3125  00FBDE  4D                 	db	77	;'M'
  3126  00FBDF  6F                 	db	111	;'o'
  3127  00FBE0  6E                 	db	110	;'n'
  3128  00FBE1  54                 	db	84	;'T'
  3129  00FBE2  75                 	db	117	;'u'
  3130  00FBE3  65                 	db	101	;'e'
  3131  00FBE4  57                 	db	87	;'W'
  3132  00FBE5  65                 	db	101	;'e'
  3133  00FBE6  64                 	db	100	;'d'
  3134  00FBE7  54                 	db	84	;'T'
  3135  00FBE8  68                 	db	104	;'h'
  3136  00FBE9  75                 	db	117	;'u'
  3137  00FBEA  46                 	db	70	;'F'
  3138  00FBEB  72                 	db	114	;'r'
  3139  00FBEC  69                 	db	105	;'i'
  3140  00FBED  53                 	db	83	;'S'
  3141  00FBEE  61                 	db	97	;'a'
  3142  00FBEF  74                 	db	116	;'t'
  3143  00FBF0  00                 	db	0
  3144  00FBF1                     STR_16:
  3145                           
  3146                           ; BSR set to: 57
  3147  00FBF1  20                 	db	32
  3148  00FBF2  20                 	db	32
  3149  00FBF3  20                 	db	32
  3150  00FBF4  20                 	db	32
  3151  00FBF5  20                 	db	32
  3152  00FBF6  20                 	db	32
  3153  00FBF7  20                 	db	32
  3154  00FBF8  20                 	db	32
  3155  00FBF9  20                 	db	32
  3156  00FBFA  20                 	db	32
  3157  00FBFB  20                 	db	32
  3158  00FBFC  20                 	db	32
  3159  00FBFD  20                 	db	32
  3160  00FBFE  20                 	db	32
  3161  00FBFF  20                 	db	32
  3162  00FC00  20                 	db	32
  3163  00FC01  20                 	db	32
  3164  00FC02  20                 	db	32
  3165  00FC03  20                 	db	32
  3166  00FC04  20                 	db	32
  3167  00FC05  20                 	db	32
  3168  00FC06  00                 	db	0
  3169  00FC07                     STR_21:
  3170                           
  3171                           ; BSR set to: 57
  3172  00FC07  45                 	db	69	;'E'
  3173  00FC08  53                 	db	83	;'S'
  3174  00FC09  52                 	db	82	;'R'
  3175  00FC0A  20                 	db	32
  3176  00FC0B  20                 	db	32
  3177  00FC0C  25                 	db	37
  3178  00FC0D  32                 	db	50	;'2'
  3179  00FC0E  2E                 	db	46
  3180  00FC0F  36                 	db	54	;'6'
  3181  00FC10  66                 	db	102	;'f'
  3182  00FC11  20                 	db	32
  3183  00FC12  20                 	db	32
  3184  00FC13  20                 	db	32
  3185  00FC14  20                 	db	32
  3186  00FC15  20                 	db	32
  3187  00FC16  20                 	db	32
  3188  00FC17  20                 	db	32
  3189  00FC18  20                 	db	32
  3190  00FC19  20                 	db	32
  3191  00FC1A  20                 	db	32
  3192  00FC1B  20                 	db	32
  3193  00FC1C  00                 	db	0
  3194  00FC1D                     STR_14:
  3195                           
  3196                           ; BSR set to: 57
  3197  00FC1D  53                 	db	83	;'S'
  3198  00FC1E  74                 	db	116	;'t'
  3199  00FC1F  61                 	db	97	;'a'
  3200  00FC20  74                 	db	116	;'t'
  3201  00FC21  69                 	db	105	;'i'
  3202  00FC22  63                 	db	99	;'c'
  3203  00FC23  20                 	db	32
  3204  00FC24  53                 	db	83	;'S'
  3205  00FC25  4F                 	db	79	;'O'
  3206  00FC26  43                 	db	67	;'C'
  3207  00FC27  20                 	db	32
  3208  00FC28  25                 	db	37
  3209  00FC29  64                 	db	100	;'d'
  3210  00FC2A  20                 	db	32
  3211  00FC2B  20                 	db	32
  3212  00FC2C  20                 	db	32
  3213  00FC2D  20                 	db	32
  3214  00FC2E  20                 	db	32
  3215  00FC2F  20                 	db	32
  3216  00FC30  20                 	db	32
  3217  00FC31  20                 	db	32
  3218  00FC32  00                 	db	0
  3219  00FC33                     STR_40:
  3220                           
  3221                           ; BSR set to: 57
  3222  00FC33  42                 	db	66	;'B'
  3223  00FC34  41                 	db	65	;'A'
  3224  00FC35  54                 	db	84	;'T'
  3225  00FC36  20                 	db	32
  3226  00FC37  49                 	db	73	;'I'
  3227  00FC38  57                 	db	87	;'W'
  3228  00FC39  48                 	db	72	;'H'
  3229  00FC3A  20                 	db	32
  3230  00FC3B  25                 	db	37
  3231  00FC3C  34                 	db	52	;'4'
  3232  00FC3D  2E                 	db	46
  3233  00FC3E  31                 	db	49	;'1'
  3234  00FC3F  66                 	db	102	;'f'
  3235  00FC40  20                 	db	32
  3236  00FC41  20                 	db	32
  3237  00FC42  20                 	db	32
  3238  00FC43  20                 	db	32
  3239  00FC44  20                 	db	32
  3240  00FC45  20                 	db	32
  3241  00FC46  20                 	db	32
  3242  00FC47  20                 	db	32
  3243  00FC48  00                 	db	0
  3244  00FC49                     STR_41:
  3245                           
  3246                           ; BSR set to: 57
  3247  00FC49  42                 	db	66	;'B'
  3248  00FC4A  41                 	db	65	;'A'
  3249  00FC4B  54                 	db	84	;'T'
  3250  00FC4C  20                 	db	32
  3251  00FC4D  4F                 	db	79	;'O'
  3252  00FC4E  57                 	db	87	;'W'
  3253  00FC4F  48                 	db	72	;'H'
  3254  00FC50  20                 	db	32
  3255  00FC51  25                 	db	37
  3256  00FC52  34                 	db	52	;'4'
  3257  00FC53  2E                 	db	46
  3258  00FC54  31                 	db	49	;'1'
  3259  00FC55  66                 	db	102	;'f'
  3260  00FC56  20                 	db	32
  3261  00FC57  20                 	db	32
  3262  00FC58  20                 	db	32
  3263  00FC59  20                 	db	32
  3264  00FC5A  20                 	db	32
  3265  00FC5B  20                 	db	32
  3266  00FC5C  20                 	db	32
  3267  00FC5D  20                 	db	32
  3268  00FC5E  00                 	db	0
  3269  00FC5F                     STR_42:
  3270                           
  3271                           ; BSR set to: 57
  3272  00FC5F  42                 	db	66	;'B'
  3273  00FC60  41                 	db	65	;'A'
  3274  00FC61  54                 	db	84	;'T'
  3275  00FC62  20                 	db	32
  3276  00FC63  54                 	db	84	;'T'
  3277  00FC64  57                 	db	87	;'W'
  3278  00FC65  48                 	db	72	;'H'
  3279  00FC66  20                 	db	32
  3280  00FC67  25                 	db	37
  3281  00FC68  34                 	db	52	;'4'
  3282  00FC69  2E                 	db	46
  3283  00FC6A  31                 	db	49	;'1'
  3284  00FC6B  66                 	db	102	;'f'
  3285  00FC6C  20                 	db	32
  3286  00FC6D  20                 	db	32
  3287  00FC6E  20                 	db	32
  3288  00FC6F  20                 	db	32
  3289  00FC70  20                 	db	32
  3290  00FC71  20                 	db	32
  3291  00FC72  20                 	db	32
  3292  00FC73  20                 	db	32
  3293  00FC74  00                 	db	0
  3294  00FC75                     STR_36:
  3295                           
  3296                           ; BSR set to: 57
  3297  00FC75  49                 	db	73	;'I'
  3298  00FC76  4E                 	db	78	;'N'
  3299  00FC77  56                 	db	86	;'V'
  3300  00FC78  20                 	db	32
  3301  00FC79  20                 	db	32
  3302  00FC7A  57                 	db	87	;'W'
  3303  00FC7B  48                 	db	72	;'H'
  3304  00FC7C  20                 	db	32
  3305  00FC7D  25                 	db	37
  3306  00FC7E  33                 	db	51	;'3'
  3307  00FC7F  2E                 	db	46
  3308  00FC80  32                 	db	50	;'2'
  3309  00FC81  66                 	db	102	;'f'
  3310  00FC82  20                 	db	32
  3311  00FC83  20                 	db	32
  3312  00FC84  20                 	db	32
  3313  00FC85  20                 	db	32
  3314  00FC86  20                 	db	32
  3315  00FC87  20                 	db	32
  3316  00FC88  20                 	db	32
  3317  00FC89  20                 	db	32
  3318  00FC8A  00                 	db	0
  3319  00FC8B                     STR_35:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FC8B  4C                 	db	76	;'L'
  3323  00FC8C  4F                 	db	79	;'O'
  3324  00FC8D  41                 	db	65	;'A'
  3325  00FC8E  44                 	db	68	;'D'
  3326  00FC8F  20                 	db	32
  3327  00FC90  57                 	db	87	;'W'
  3328  00FC91  48                 	db	72	;'H'
  3329  00FC92  20                 	db	32
  3330  00FC93  25                 	db	37
  3331  00FC94  33                 	db	51	;'3'
  3332  00FC95  2E                 	db	46
  3333  00FC96  32                 	db	50	;'2'
  3334  00FC97  66                 	db	102	;'f'
  3335  00FC98  20                 	db	32
  3336  00FC99  20                 	db	32
  3337  00FC9A  20                 	db	32
  3338  00FC9B  20                 	db	32
  3339  00FC9C  20                 	db	32
  3340  00FC9D  20                 	db	32
  3341  00FC9E  20                 	db	32
  3342  00FC9F  20                 	db	32
  3343  00FCA0  00                 	db	0
  3344  00FCA1                     STR_34:
  3345                           
  3346                           ; BSR set to: 57
  3347  00FCA1  50                 	db	80	;'P'
  3348  00FCA2  56                 	db	86	;'V'
  3349  00FCA3  20                 	db	32
  3350  00FCA4  25                 	db	37
  3351  00FCA5  63                 	db	99	;'c'
  3352  00FCA6  20                 	db	32
  3353  00FCA7  57                 	db	87	;'W'
  3354  00FCA8  48                 	db	72	;'H'
  3355  00FCA9  20                 	db	32
  3356  00FCAA  25                 	db	37
  3357  00FCAB  33                 	db	51	;'3'
  3358  00FCAC  2E                 	db	46
  3359  00FCAD  32                 	db	50	;'2'
  3360  00FCAE  66                 	db	102	;'f'
  3361  00FCAF  20                 	db	32
  3362  00FCB0  20                 	db	32
  3363  00FCB1  20                 	db	32
  3364  00FCB2  20                 	db	32
  3365  00FCB3  20                 	db	32
  3366  00FCB4  20                 	db	32
  3367  00FCB5  20                 	db	32
  3368  00FCB6  00                 	db	0
  3369  00FCB7                     STR_33:
  3370                           
  3371                           ; BSR set to: 57
  3372  00FCB7  49                 	db	73	;'I'
  3373  00FCB8  4E                 	db	78	;'N'
  3374  00FCB9  56                 	db	86	;'V'
  3375  00FCBA  20                 	db	32
  3376  00FCBB  20                 	db	32
  3377  00FCBC  50                 	db	80	;'P'
  3378  00FCBD  57                 	db	87	;'W'
  3379  00FCBE  52                 	db	82	;'R'
  3380  00FCBF  20                 	db	32
  3381  00FCC0  25                 	db	37
  3382  00FCC1  33                 	db	51	;'3'
  3383  00FCC2  2E                 	db	46
  3384  00FCC3  32                 	db	50	;'2'
  3385  00FCC4  66                 	db	102	;'f'
  3386  00FCC5  20                 	db	32
  3387  00FCC6  20                 	db	32
  3388  00FCC7  20                 	db	32
  3389  00FCC8  20                 	db	32
  3390  00FCC9  20                 	db	32
  3391  00FCCA  20                 	db	32
  3392  00FCCB  20                 	db	32
  3393  00FCCC  00                 	db	0
  3394  00FCCD                     STR_32:
  3395                           
  3396                           ; BSR set to: 57
  3397  00FCCD  4C                 	db	76	;'L'
  3398  00FCCE  4F                 	db	79	;'O'
  3399  00FCCF  41                 	db	65	;'A'
  3400  00FCD0  44                 	db	68	;'D'
  3401  00FCD1  20                 	db	32
  3402  00FCD2  50                 	db	80	;'P'
  3403  00FCD3  57                 	db	87	;'W'
  3404  00FCD4  52                 	db	82	;'R'
  3405  00FCD5  20                 	db	32
  3406  00FCD6  25                 	db	37
  3407  00FCD7  33                 	db	51	;'3'
  3408  00FCD8  2E                 	db	46
  3409  00FCD9  32                 	db	50	;'2'
  3410  00FCDA  66                 	db	102	;'f'
  3411  00FCDB  20                 	db	32
  3412  00FCDC  20                 	db	32
  3413  00FCDD  20                 	db	32
  3414  00FCDE  20                 	db	32
  3415  00FCDF  20                 	db	32
  3416  00FCE0  20                 	db	32
  3417  00FCE1  20                 	db	32
  3418  00FCE2  00                 	db	0
  3419  00FCE3                     STR_31:
  3420                           
  3421                           ; BSR set to: 57
  3422  00FCE3  50                 	db	80	;'P'
  3423  00FCE4  56                 	db	86	;'V'
  3424  00FCE5  20                 	db	32
  3425  00FCE6  25                 	db	37
  3426  00FCE7  63                 	db	99	;'c'
  3427  00FCE8  20                 	db	32
  3428  00FCE9  50                 	db	80	;'P'
  3429  00FCEA  57                 	db	87	;'W'
  3430  00FCEB  52                 	db	82	;'R'
  3431  00FCEC  20                 	db	32
  3432  00FCED  25                 	db	37
  3433  00FCEE  33                 	db	51	;'3'
  3434  00FCEF  2E                 	db	46
  3435  00FCF0  32                 	db	50	;'2'
  3436  00FCF1  66                 	db	102	;'f'
  3437  00FCF2  20                 	db	32
  3438  00FCF3  20                 	db	32
  3439  00FCF4  20                 	db	32
  3440  00FCF5  20                 	db	32
  3441  00FCF6  20                 	db	32
  3442  00FCF7  20                 	db	32
  3443  00FCF8  00                 	db	0
  3444  00FCF9                     STR_15:
  3445                           
  3446                           ; BSR set to: 57
  3447  00FCF9  42                 	db	66	;'B'
  3448  00FCFA  61                 	db	97	;'a'
  3449  00FCFB  74                 	db	116	;'t'
  3450  00FCFC  74                 	db	116	;'t'
  3451  00FCFD  65                 	db	101	;'e'
  3452  00FCFE  72                 	db	114	;'r'
  3453  00FCFF  79                 	db	121	;'y'
  3454  00FD00  20                 	db	32
  3455  00FD01  41                 	db	65	;'A'
  3456  00FD02  68                 	db	104	;'h'
  3457  00FD03  20                 	db	32
  3458  00FD04  25                 	db	37
  3459  00FD05  33                 	db	51	;'3'
  3460  00FD06  2E                 	db	46
  3461  00FD07  32                 	db	50	;'2'
  3462  00FD08  66                 	db	102	;'f'
  3463  00FD09  20                 	db	32
  3464  00FD0A  20                 	db	32
  3465  00FD0B  20                 	db	32
  3466  00FD0C  20                 	db	32
  3467  00FD0D  20                 	db	32
  3468  00FD0E  00                 	db	0
  3469  00FD0F                     STR_38:
  3470                           
  3471                           ; BSR set to: 57
  3472  00FD0F  42                 	db	66	;'B'
  3473  00FD10  56                 	db	86	;'V'
  3474  00FD11  20                 	db	32
  3475  00FD12  25                 	db	37
  3476  00FD13  32                 	db	50	;'2'
  3477  00FD14  2E                 	db	46
  3478  00FD15  32                 	db	50	;'2'
  3479  00FD16  66                 	db	102	;'f'
  3480  00FD17  20                 	db	32
  3481  00FD18  42                 	db	66	;'B'
  3482  00FD19  41                 	db	65	;'A'
  3483  00FD1A  20                 	db	32
  3484  00FD1B  25                 	db	37
  3485  00FD1C  32                 	db	50	;'2'
  3486  00FD1D  2E                 	db	46
  3487  00FD1E  32                 	db	50	;'2'
  3488  00FD1F  66                 	db	102	;'f'
  3489  00FD20  20                 	db	32
  3490  00FD21  20                 	db	32
  3491  00FD22  20                 	db	32
  3492  00FD23  20                 	db	32
  3493  00FD24  00                 	db	0
  3494  00FD25                     STR_39:
  3495                           
  3496                           ; BSR set to: 57
  3497  00FD25  43                 	db	67	;'C'
  3498  00FD26  56                 	db	86	;'V'
  3499  00FD27  20                 	db	32
  3500  00FD28  25                 	db	37
  3501  00FD29  32                 	db	50	;'2'
  3502  00FD2A  2E                 	db	46
  3503  00FD2B  32                 	db	50	;'2'
  3504  00FD2C  66                 	db	102	;'f'
  3505  00FD2D  20                 	db	32
  3506  00FD2E  4C                 	db	76	;'L'
  3507  00FD2F  41                 	db	65	;'A'
  3508  00FD30  20                 	db	32
  3509  00FD31  25                 	db	37
  3510  00FD32  32                 	db	50	;'2'
  3511  00FD33  2E                 	db	46
  3512  00FD34  32                 	db	50	;'2'
  3513  00FD35  66                 	db	102	;'f'
  3514  00FD36  20                 	db	32
  3515  00FD37  20                 	db	32
  3516  00FD38  20                 	db	32
  3517  00FD39  20                 	db	32
  3518  00FD3A  00                 	db	0
  3519  00FD3B                     STR_37:
  3520                           
  3521                           ; BSR set to: 57
  3522  00FD3B  50                 	db	80	;'P'
  3523  00FD3C  56                 	db	86	;'V'
  3524  00FD3D  20                 	db	32
  3525  00FD3E  25                 	db	37
  3526  00FD3F  32                 	db	50	;'2'
  3527  00FD40  2E                 	db	46
  3528  00FD41  32                 	db	50	;'2'
  3529  00FD42  66                 	db	102	;'f'
  3530  00FD43  20                 	db	32
  3531  00FD44  50                 	db	80	;'P'
  3532  00FD45  41                 	db	65	;'A'
  3533  00FD46  20                 	db	32
  3534  00FD47  25                 	db	37
  3535  00FD48  32                 	db	50	;'2'
  3536  00FD49  2E                 	db	46
  3537  00FD4A  32                 	db	50	;'2'
  3538  00FD4B  66                 	db	102	;'f'
  3539  00FD4C  20                 	db	32
  3540  00FD4D  20                 	db	32
  3541  00FD4E  20                 	db	32
  3542  00FD4F  20                 	db	32
  3543  00FD50  00                 	db	0
  3544  00FD51                     STR_49:
  3545                           
  3546                           ; BSR set to: 57
  3547  00FD51  25                 	db	37
  3548  00FD52  64                 	db	100	;'d'
  3549  00FD53  20                 	db	32
  3550  00FD54  25                 	db	37
  3551  00FD55  32                 	db	50	;'2'
  3552  00FD56  2E                 	db	46
  3553  00FD57  34                 	db	52	;'4'
  3554  00FD58  66                 	db	102	;'f'
  3555  00FD59  2C                 	db	44
  3556  00FD5A  20                 	db	32
  3557  00FD5B  25                 	db	37
  3558  00FD5C  64                 	db	100	;'d'
  3559  00FD5D  20                 	db	32
  3560  00FD5E  20                 	db	32
  3561  00FD5F  54                 	db	84	;'T'
  3562  00FD60  52                 	db	82	;'R'
  3563  00FD61  49                 	db	73	;'I'
  3564  00FD62  4D                 	db	77	;'M'
  3565  00FD63  20                 	db	32
  3566  00FD64  20                 	db	32
  3567  00FD65  20                 	db	32
  3568  00FD66  00                 	db	0
  3569  00FD67                     
  3570                           ; BSR set to: 57
  3571  00FD67  48                 	db	72	;'H'
  3572  00FD68  45                 	db	69	;'E'
  3573  00FD69  4C                 	db	76	;'L'
  3574  00FD6A  50                 	db	80	;'P'
  3575  00FD6B  20                 	db	32
  3576  00FD6C  25                 	db	37
  3577  00FD6D  73                 	db	115	;'s'
  3578  00FD6E  20                 	db	32
  3579  00FD6F  20                 	db	32
  3580  00FD70  20                 	db	32
  3581  00FD71  20                 	db	32
  3582  00FD72  20                 	db	32
  3583  00FD73  20                 	db	32
  3584  00FD74  20                 	db	32
  3585  00FD75  20                 	db	32
  3586  00FD76  20                 	db	32
  3587  00FD77  20                 	db	32
  3588  00FD78  20                 	db	32
  3589  00FD79  20                 	db	32
  3590  00FD7A  20                 	db	32
  3591  00FD7B  00                 	db	0
  3592  00FD7C                     
  3593                           ; BSR set to: 57
  3594  00FD7C  44                 	db	68	;'D'
  3595  00FD7D  49                 	db	73	;'I'
  3596  00FD7E  53                 	db	83	;'S'
  3597  00FD7F  50                 	db	80	;'P'
  3598  00FD80  4C                 	db	76	;'L'
  3599  00FD81  41                 	db	65	;'A'
  3600  00FD82  59                 	db	89	;'Y'
  3601  00FD83  20                 	db	32
  3602  00FD84  25                 	db	37
  3603  00FD85  73                 	db	115	;'s'
  3604  00FD86  20                 	db	32
  3605  00FD87  20                 	db	32
  3606  00FD88  20                 	db	32
  3607  00FD89  20                 	db	32
  3608  00FD8A  20                 	db	32
  3609  00FD8B  20                 	db	32
  3610  00FD8C  20                 	db	32
  3611  00FD8D  20                 	db	32
  3612  00FD8E  20                 	db	32
  3613  00FD8F  20                 	db	32
  3614  00FD90  00                 	db	0
  3615  00FD91                     STR_57:
  3616                           
  3617                           ; BSR set to: 57
  3618  00FD91  20                 	db	32
  3619  00FD92  25                 	db	37
  3620  00FD93  64                 	db	100	;'d'
  3621  00FD94  20                 	db	32
  3622  00FD95  25                 	db	37
  3623  00FD96  64                 	db	100	;'d'
  3624  00FD97  20                 	db	32
  3625  00FD98  20                 	db	32
  3626  00FD99  20                 	db	32
  3627  00FD9A  20                 	db	32
  3628  00FD9B  20                 	db	32
  3629  00FD9C  20                 	db	32
  3630  00FD9D  20                 	db	32
  3631  00FD9E  20                 	db	32
  3632  00FD9F  20                 	db	32
  3633  00FDA0  20                 	db	32
  3634  00FDA1  20                 	db	32
  3635  00FDA2  20                 	db	32
  3636  00FDA3  20                 	db	32
  3637  00FDA4  20                 	db	32
  3638  00FDA5  00                 	db	0
  3639  00FDA6                     STR_60:
  3640                           
  3641                           ; BSR set to: 57
  3642  00FDA6  20                 	db	32
  3643  00FDA7  25                 	db	37
  3644  00FDA8  6C                 	db	108	;'l'
  3645  00FDA9  64                 	db	100	;'d'
  3646  00FDAA  20                 	db	32
  3647  00FDAB  25                 	db	37
  3648  00FDAC  6C                 	db	108	;'l'
  3649  00FDAD  64                 	db	100	;'d'
  3650  00FDAE  20                 	db	32
  3651  00FDAF  20                 	db	32
  3652  00FDB0  20                 	db	32
  3653  00FDB1  20                 	db	32
  3654  00FDB2  20                 	db	32
  3655  00FDB3  20                 	db	32
  3656  00FDB4  20                 	db	32
  3657  00FDB5  20                 	db	32
  3658  00FDB6  20                 	db	32
  3659  00FDB7  20                 	db	32
  3660  00FDB8  20                 	db	32
  3661  00FDB9  20                 	db	32
  3662  00FDBA  00                 	db	0
  3663  00FDBB                     STR_12:
  3664                           
  3665                           ; BSR set to: 57
  3666  00FDBB  42                 	db	66	;'B'
  3667  00FDBC  56                 	db	86	;'V'
  3668  00FDBD  20                 	db	32
  3669  00FDBE  25                 	db	37
  3670  00FDBF  32                 	db	50	;'2'
  3671  00FDC0  2E                 	db	46
  3672  00FDC1  34                 	db	52	;'4'
  3673  00FDC2  66                 	db	102	;'f'
  3674  00FDC3  20                 	db	32
  3675  00FDC4  20                 	db	32
  3676  00FDC5  20                 	db	32
  3677  00FDC6  20                 	db	32
  3678  00FDC7  20                 	db	32
  3679  00FDC8  20                 	db	32
  3680  00FDC9  20                 	db	32
  3681  00FDCA  20                 	db	32
  3682  00FDCB  20                 	db	32
  3683  00FDCC  20                 	db	32
  3684  00FDCD  20                 	db	32
  3685  00FDCE  20                 	db	32
  3686  00FDCF  00                 	db	0
  3687  00FDD0                     STR_4:
  3688                           
  3689                           ; BSR set to: 57
  3690  00FDD0  20                 	db	32
  3691  00FDD1  4E                 	db	78	;'N'
  3692  00FDD2  53                 	db	83	;'S'
  3693  00FDD3  41                 	db	65	;'A'
  3694  00FDD4  53                 	db	83	;'S'
  3695  00FDD5  50                 	db	80	;'P'
  3696  00FDD6  4F                 	db	79	;'O'
  3697  00FDD7  4F                 	db	79	;'O'
  3698  00FDD8  4B                 	db	75	;'K'
  3699  00FDD9  20                 	db	32
  3700  00FDDA  20                 	db	32
  3701  00FDDB  20                 	db	32
  3702  00FDDC  20                 	db	32
  3703  00FDDD  20                 	db	32
  3704  00FDDE  20                 	db	32
  3705  00FDDF  20                 	db	32
  3706  00FDE0  20                 	db	32
  3707  00FDE1  20                 	db	32
  3708  00FDE2  20                 	db	32
  3709  00FDE3  20                 	db	32
  3710  00FDE4  00                 	db	0
  3711  00FDE5                     STR_26:
  3712                           
  3713                           ; BSR set to: 57
  3714  00FDE5  54                 	db	84	;'T'
  3715  00FDE6  6F                 	db	111	;'o'
  3716  00FDE7  20                 	db	32
  3717  00FDE8  45                 	db	69	;'E'
  3718  00FDE9  45                 	db	69	;'E'
  3719  00FDEA  50                 	db	80	;'P'
  3720  00FDEB  52                 	db	82	;'R'
  3721  00FDEC  4F                 	db	79	;'O'
  3722  00FDED  4D                 	db	77	;'M'
  3723  00FDEE  20                 	db	32
  3724  00FDEF  20                 	db	32
  3725  00FDF0  20                 	db	32
  3726  00FDF1  20                 	db	32
  3727  00FDF2  20                 	db	32
  3728  00FDF3  20                 	db	32
  3729  00FDF4  20                 	db	32
  3730  00FDF5  20                 	db	32
  3731  00FDF6  20                 	db	32
  3732  00FDF7  20                 	db	32
  3733  00FDF8  20                 	db	32
  3734  00FDF9  00                 	db	0
  3735  00FDFA                     STR_17:
  3736                           
  3737                           ; BSR set to: 57
  3738  00FDFA  42                 	db	66	;'B'
  3739  00FDFB  61                 	db	97	;'a'
  3740  00FDFC  74                 	db	116	;'t'
  3741  00FDFD  74                 	db	116	;'t'
  3742  00FDFE  65                 	db	101	;'e'
  3743  00FDFF  72                 	db	114	;'r'
  3744  00FE00  79                 	db	121	;'y'
  3745  00FE01  20                 	db	32
  3746  00FE02  45                 	db	69	;'E'
  3747  00FE03  53                 	db	83	;'S'
  3748  00FE04  52                 	db	82	;'R'
  3749  00FE05  20                 	db	32
  3750  00FE06  20                 	db	32
  3751  00FE07  20                 	db	32
  3752  00FE08  20                 	db	32
  3753  00FE09  20                 	db	32
  3754  00FE0A  20                 	db	32
  3755  00FE0B  20                 	db	32
  3756  00FE0C  20                 	db	32
  3757  00FE0D  20                 	db	32
  3758  00FE0E  00                 	db	0
  3759  00FE0F                     STR_18:
  3760                           
  3761                           ; BSR set to: 57
  3762  00FE0F  43                 	db	67	;'C'
  3763  00FE10  61                 	db	97	;'a'
  3764  00FE11  6C                 	db	108	;'l'
  3765  00FE12  63                 	db	99	;'c'
  3766  00FE13  75                 	db	117	;'u'
  3767  00FE14  6C                 	db	108	;'l'
  3768  00FE15  61                 	db	97	;'a'
  3769  00FE16  74                 	db	116	;'t'
  3770  00FE17  69                 	db	105	;'i'
  3771  00FE18  6F                 	db	111	;'o'
  3772  00FE19  6E                 	db	110	;'n'
  3773  00FE1A  20                 	db	32
  3774  00FE1B  20                 	db	32
  3775  00FE1C  20                 	db	32
  3776  00FE1D  20                 	db	32
  3777  00FE1E  20                 	db	32
  3778  00FE1F  20                 	db	32
  3779  00FE20  20                 	db	32
  3780  00FE21  20                 	db	32
  3781  00FE22  20                 	db	32
  3782  00FE23  00                 	db	0
  3783  00FE24                     STR_54:
  3784                           
  3785                           ; BSR set to: 57
  3786  00FE24  43                 	db	67	;'C'
  3787  00FE25  61                 	db	97	;'a'
  3788  00FE26  6C                 	db	108	;'l'
  3789  00FE27  69                 	db	105	;'i'
  3790  00FE28  62                 	db	98	;'b'
  3791  00FE29  72                 	db	114	;'r'
  3792  00FE2A  61                 	db	97	;'a'
  3793  00FE2B  74                 	db	116	;'t'
  3794  00FE2C  69                 	db	105	;'i'
  3795  00FE2D  6F                 	db	111	;'o'
  3796  00FE2E  6E                 	db	110	;'n'
  3797  00FE2F  20                 	db	32
  3798  00FE30  20                 	db	32
  3799  00FE31  20                 	db	32
  3800  00FE32  20                 	db	32
  3801  00FE33  20                 	db	32
  3802  00FE34  20                 	db	32
  3803  00FE35  20                 	db	32
  3804  00FE36  20                 	db	32
  3805  00FE37  20                 	db	32
  3806  00FE38  00                 	db	0
  3807  00FE39                     STR_53:
  3808                           
  3809                           ; BSR set to: 57
  3810  00FE39  53                 	db	83	;'S'
  3811  00FE3A  65                 	db	101	;'e'
  3812  00FE3B  6E                 	db	110	;'n'
  3813  00FE3C  73                 	db	115	;'s'
  3814  00FE3D  6F                 	db	111	;'o'
  3815  00FE3E  72                 	db	114	;'r'
  3816  00FE3F  20                 	db	32
  3817  00FE40  5A                 	db	90	;'Z'
  3818  00FE41  65                 	db	101	;'e'
  3819  00FE42  72                 	db	114	;'r'
  3820  00FE43  6F                 	db	111	;'o'
  3821  00FE44  20                 	db	32
  3822  00FE45  20                 	db	32
  3823  00FE46  20                 	db	32
  3824  00FE47  20                 	db	32
  3825  00FE48  20                 	db	32
  3826  00FE49  20                 	db	32
  3827  00FE4A  20                 	db	32
  3828  00FE4B  20                 	db	32
  3829  00FE4C  20                 	db	32
  3830  00FE4D  00                 	db	0
  3831  00FE4E                     STR_2:
  3832                           
  3833                           ; BSR set to: 57
  3834  00FE4E  20                 	db	32
  3835  00FE4F  56                 	db	86	;'V'
  3836  00FE50  65                 	db	101	;'e'
  3837  00FE51  72                 	db	114	;'r'
  3838  00FE52  73                 	db	115	;'s'
  3839  00FE53  69                 	db	105	;'i'
  3840  00FE54  6F                 	db	111	;'o'
  3841  00FE55  6E                 	db	110	;'n'
  3842  00FE56  20                 	db	32
  3843  00FE57  25                 	db	37
  3844  00FE58  73                 	db	115	;'s'
  3845  00FE59  20                 	db	32
  3846  00FE5A  20                 	db	32
  3847  00FE5B  20                 	db	32
  3848  00FE5C  20                 	db	32
  3849  00FE5D  20                 	db	32
  3850  00FE5E  20                 	db	32
  3851  00FE5F  20                 	db	32
  3852  00FE60  20                 	db	32
  3853  00FE61  20                 	db	32
  3854  00FE62  00                 	db	0
  3855  00FE63                     STR_61:
  3856                           
  3857                           ; BSR set to: 57
  3858  00FE63  5A                 	db	90	;'Z'
  3859  00FE64  65                 	db	101	;'e'
  3860  00FE65  72                 	db	114	;'r'
  3861  00FE66  6F                 	db	111	;'o'
  3862  00FE67  20                 	db	32
  3863  00FE68  43                 	db	67	;'C'
  3864  00FE69  61                 	db	97	;'a'
  3865  00FE6A  6C                 	db	108	;'l'
  3866  00FE6B  20                 	db	32
  3867  00FE6C  53                 	db	83	;'S'
  3868  00FE6D  65                 	db	101	;'e'
  3869  00FE6E  74                 	db	116	;'t'
  3870  00FE6F  20                 	db	32
  3871  00FE70  20                 	db	32
  3872  00FE71  20                 	db	32
  3873  00FE72  20                 	db	32
  3874  00FE73  20                 	db	32
  3875  00FE74  20                 	db	32
  3876  00FE75  20                 	db	32
  3877  00FE76  20                 	db	32
  3878  00FE77  00                 	db	0
  3879  00FE78                     STR_1:
  3880                           
  3881                           ; BSR set to: 57
  3882  00FE78  20                 	db	32
  3883  00FE79  4D                 	db	77	;'M'
  3884  00FE7A  42                 	db	66	;'B'
  3885  00FE7B  4D                 	db	77	;'M'
  3886  00FE7C  43                 	db	67	;'C'
  3887  00FE7D  20                 	db	32
  3888  00FE7E  53                 	db	83	;'S'
  3889  00FE7F  4F                 	db	79	;'O'
  3890  00FE80  4C                 	db	76	;'L'
  3891  00FE81  41                 	db	65	;'A'
  3892  00FE82  52                 	db	82	;'R'
  3893  00FE83  4D                 	db	77	;'M'
  3894  00FE84  4F                 	db	79	;'O'
  3895  00FE85  4E                 	db	78	;'N'
  3896  00FE86  20                 	db	32
  3897  00FE87  20                 	db	32
  3898  00FE88  20                 	db	32
  3899  00FE89  20                 	db	32
  3900  00FE8A  20                 	db	32
  3901  00FE8B  20                 	db	32
  3902  00FE8C  00                 	db	0
  3903  00FE8D                     STR_52:
  3904                           
  3905                           ; BSR set to: 57
  3906  00FE8D  42                 	db	66	;'B'
  3907  00FE8E  61                 	db	97	;'a'
  3908  00FE8F  74                 	db	116	;'t'
  3909  00FE90  74                 	db	116	;'t'
  3910  00FE91  65                 	db	101	;'e'
  3911  00FE92  72                 	db	114	;'r'
  3912  00FE93  79                 	db	121	;'y'
  3913  00FE94  20                 	db	32
  3914  00FE95  61                 	db	97	;'a'
  3915  00FE96  6E                 	db	110	;'n'
  3916  00FE97  64                 	db	100	;'d'
  3917  00FE98  20                 	db	32
  3918  00FE99  50                 	db	80	;'P'
  3919  00FE9A  56                 	db	86	;'V'
  3920  00FE9B  20                 	db	32
  3921  00FE9C  20                 	db	32
  3922  00FE9D  20                 	db	32
  3923  00FE9E  20                 	db	32
  3924  00FE9F  20                 	db	32
  3925  00FEA0  20                 	db	32
  3926  00FEA1  00                 	db	0
  3927  00FEA2                     STR_20:
  3928                           
  3929                           ; BSR set to: 57
  3930  00FEA2  43                 	db	67	;'C'
  3931  00FEA3  68                 	db	104	;'h'
  3932  00FEA4  65                 	db	101	;'e'
  3933  00FEA5  63                 	db	99	;'c'
  3934  00FEA6  6B                 	db	107	;'k'
  3935  00FEA7  69                 	db	105	;'i'
  3936  00FEA8  6E                 	db	110	;'n'
  3937  00FEA9  67                 	db	103	;'g'
  3938  00FEAA  20                 	db	32
  3939  00FEAB  25                 	db	37
  3940  00FEAC  63                 	db	99	;'c'
  3941  00FEAD  20                 	db	32
  3942  00FEAE  25                 	db	37
  3943  00FEAF  63                 	db	99	;'c'
  3944  00FEB0  20                 	db	32
  3945  00FEB1  20                 	db	32
  3946  00FEB2  20                 	db	32
  3947  00FEB3  20                 	db	32
  3948  00FEB4  20                 	db	32
  3949  00FEB5  20                 	db	32
  3950  00FEB6  00                 	db	0
  3951  00FEB7                     STR_27:
  3952                           
  3953                           ; BSR set to: 57
  3954  00FEB7  20                 	db	32
  3955  00FEB8  54                 	db	84	;'T'
  3956  00FEB9  69                 	db	105	;'i'
  3957  00FEBA  6D                 	db	109	;'m'
  3958  00FEBB  65                 	db	101	;'e'
  3959  00FEBC  20                 	db	32
  3960  00FEBD  25                 	db	37
  3961  00FEBE  6C                 	db	108	;'l'
  3962  00FEBF  75                 	db	117	;'u'
  3963  00FEC0  2C                 	db	44
  3964  00FEC1  20                 	db	32
  3965  00FEC2  25                 	db	37
  3966  00FEC3  6C                 	db	108	;'l'
  3967  00FEC4  75                 	db	117	;'u'
  3968  00FEC5  20                 	db	32
  3969  00FEC6  20                 	db	32
  3970  00FEC7  20                 	db	32
  3971  00FEC8  20                 	db	32
  3972  00FEC9  20                 	db	32
  3973  00FECA  20                 	db	32
  3974  00FECB  00                 	db	0
  3975  00FECC                     STR_56:
  3976                           
  3977                           ; BSR set to: 57
  3978  00FECC  53                 	db	83	;'S'
  3979  00FECD  65                 	db	101	;'e'
  3980  00FECE  6E                 	db	110	;'n'
  3981  00FECF  73                 	db	115	;'s'
  3982  00FED0  6F                 	db	111	;'o'
  3983  00FED1  72                 	db	114	;'r'
  3984  00FED2  20                 	db	32
  3985  00FED3  52                 	db	82	;'R'
  3986  00FED4  65                 	db	101	;'e'
  3987  00FED5  61                 	db	97	;'a'
  3988  00FED6  64                 	db	100	;'d'
  3989  00FED7  69                 	db	105	;'i'
  3990  00FED8  6E                 	db	110	;'n'
  3991  00FED9  67                 	db	103	;'g'
  3992  00FEDA  73                 	db	115	;'s'
  3993  00FEDB  20                 	db	32
  3994  00FEDC  20                 	db	32
  3995  00FEDD  20                 	db	32
  3996  00FEDE  20                 	db	32
  3997  00FEDF  20                 	db	32
  3998  00FEE0  00                 	db	0
  3999  00FEE1                     STR_10:
  4000                           
  4001                           ; BSR set to: 57
  4002  00FEE1  52                 	db	82	;'R'
  4003  00FEE2  65                 	db	101	;'e'
  4004  00FEE3  61                 	db	97	;'a'
  4005  00FEE4  64                 	db	100	;'d'
  4006  00FEE5  20                 	db	32
  4007  00FEE6  45                 	db	69	;'E'
  4008  00FEE7  45                 	db	69	;'E'
  4009  00FEE8  50                 	db	80	;'P'
  4010  00FEE9  52                 	db	82	;'R'
  4011  00FEEA  4F                 	db	79	;'O'
  4012  00FEEB  4D                 	db	77	;'M'
  4013  00FEEC  20                 	db	32
  4014  00FEED  44                 	db	68	;'D'
  4015  00FEEE  41                 	db	65	;'A'
  4016  00FEEF  54                 	db	84	;'T'
  4017  00FEF0  41                 	db	65	;'A'
  4018  00FEF1  20                 	db	32
  4019  00FEF2  20                 	db	32
  4020  00FEF3  20                 	db	32
  4021  00FEF4  20                 	db	32
  4022  00FEF5  00                 	db	0
  4023  00FEF6                     STR_19:
  4024                           
  4025                           ; BSR set to: 57
  4026  00FEF6  43                 	db	67	;'C'
  4027  00FEF7  68                 	db	104	;'h'
  4028  00FEF8  65                 	db	101	;'e'
  4029  00FEF9  63                 	db	99	;'c'
  4030  00FEFA  6B                 	db	107	;'k'
  4031  00FEFB  20                 	db	32
  4032  00FEFC  33                 	db	51	;'3'
  4033  00FEFD  30                 	db	48	;'0'
  4034  00FEFE  20                 	db	32
  4035  00FEFF  73                 	db	115	;'s'
  4036  00FF00  65                 	db	101	;'e'
  4037  00FF01  63                 	db	99	;'c'
  4038  00FF02  6F                 	db	111	;'o'
  4039  00FF03  6E                 	db	110	;'n'
  4040  00FF04  64                 	db	100	;'d'
  4041  00FF05  73                 	db	115	;'s'
  4042  00FF06  20                 	db	32
  4043  00FF07  20                 	db	32
  4044  00FF08  20                 	db	32
  4045  00FF09  20                 	db	32
  4046  00FF0A  00                 	db	0
  4047  00FF0B                     STR_64:
  4048                           
  4049                           ; BSR set to: 57
  4050  00FF0B  5A                 	db	90	;'Z'
  4051  00FF0C  65                 	db	101	;'e'
  4052  00FF0D  72                 	db	114	;'r'
  4053  00FF0E  6F                 	db	111	;'o'
  4054  00FF0F  20                 	db	32
  4055  00FF10  4F                 	db	79	;'O'
  4056  00FF11  75                 	db	117	;'u'
  4057  00FF12  74                 	db	116	;'t'
  4058  00FF13  20                 	db	32
  4059  00FF14  4F                 	db	79	;'O'
  4060  00FF15  66                 	db	102	;'f'
  4061  00FF16  20                 	db	32
  4062  00FF17  52                 	db	82	;'R'
  4063  00FF18  61                 	db	97	;'a'
  4064  00FF19  6E                 	db	110	;'n'
  4065  00FF1A  67                 	db	103	;'g'
  4066  00FF1B  65                 	db	101	;'e'
  4067  00FF1C  20                 	db	32
  4068  00FF1D  20                 	db	32
  4069  00FF1E  20                 	db	32
  4070  00FF1F  00                 	db	0
  4071  00FF20                     STR_58:
  4072                           
  4073                           ; BSR set to: 57
  4074  00FF20  53                 	db	83	;'S'
  4075  00FF21  74                 	db	116	;'t'
  4076  00FF22  61                 	db	97	;'a'
  4077  00FF23  62                 	db	98	;'b'
  4078  00FF24  69                 	db	105	;'i'
  4079  00FF25  6C                 	db	108	;'l'
  4080  00FF26  69                 	db	105	;'i'
  4081  00FF27  74                 	db	116	;'t'
  4082  00FF28  79                 	db	121	;'y'
  4083  00FF29  20                 	db	32
  4084  00FF2A  63                 	db	99	;'c'
  4085  00FF2B  6C                 	db	108	;'l'
  4086  00FF2C  6F                 	db	111	;'o'
  4087  00FF2D  63                 	db	99	;'c'
  4088  00FF2E  6B                 	db	107	;'k'
  4089  00FF2F  20                 	db	32
  4090  00FF30  25                 	db	37
  4091  00FF31  64                 	db	100	;'d'
  4092  00FF32  20                 	db	32
  4093  00FF33  20                 	db	32
  4094  00FF34  00                 	db	0
  4095  00FF35                     STR_11:
  4096                           
  4097                           ; BSR set to: 57
  4098  00FF35  49                 	db	73	;'I'
  4099  00FF36  6E                 	db	110	;'n'
  4100  00FF37  76                 	db	118	;'v'
  4101  00FF38  61                 	db	97	;'a'
  4102  00FF39  6C                 	db	108	;'l'
  4103  00FF3A  69                 	db	105	;'i'
  4104  00FF3B  64                 	db	100	;'d'
  4105  00FF3C  20                 	db	32
  4106  00FF3D  45                 	db	69	;'E'
  4107  00FF3E  45                 	db	69	;'E'
  4108  00FF3F  50                 	db	80	;'P'
  4109  00FF40  52                 	db	82	;'R'
  4110  00FF41  4F                 	db	79	;'O'
  4111  00FF42  4D                 	db	77	;'M'
  4112  00FF43  20                 	db	32
  4113  00FF44  44                 	db	68	;'D'
  4114  00FF45  41                 	db	65	;'A'
  4115  00FF46  54                 	db	84	;'T'
  4116  00FF47  41                 	db	65	;'A'
  4117  00FF48  20                 	db	32
  4118  00FF49  00                 	db	0
  4119  00FF4A                     STR_25:
  4120                           
  4121                           ; BSR set to: 57
  4122  00FF4A  48                 	db	72	;'H'
  4123  00FF4B  69                 	db	105	;'i'
  4124  00FF4C  73                 	db	115	;'s'
  4125  00FF4D  74                 	db	116	;'t'
  4126  00FF4E  6F                 	db	111	;'o'
  4127  00FF4F  72                 	db	114	;'r'
  4128  00FF50  79                 	db	121	;'y'
  4129  00FF51  20                 	db	32
  4130  00FF52  44                 	db	68	;'D'
  4131  00FF53  61                 	db	97	;'a'
  4132  00FF54  74                 	db	116	;'t'
  4133  00FF55  61                 	db	97	;'a'
  4134  00FF56  20                 	db	32
  4135  00FF57  20                 	db	32
  4136  00FF58  53                 	db	83	;'S'
  4137  00FF59  61                 	db	97	;'a'
  4138  00FF5A  76                 	db	118	;'v'
  4139  00FF5B  65                 	db	101	;'e'
  4140  00FF5C  64                 	db	100	;'d'
  4141  00FF5D  20                 	db	32
  4142  00FF5E  00                 	db	0
  4143  00FF5F                     STR_55:
  4144                           
  4145                           ; BSR set to: 57
  4146  00FF5F  52                 	db	82	;'R'
  4147  00FF60  65                 	db	101	;'e'
  4148  00FF61  6C                 	db	108	;'l'
  4149  00FF62  65                 	db	101	;'e'
  4150  00FF63  61                 	db	97	;'a'
  4151  00FF64  73                 	db	115	;'s'
  4152  00FF65  65                 	db	101	;'e'
  4153  00FF66  20                 	db	32
  4154  00FF67  62                 	db	98	;'b'
  4155  00FF68  75                 	db	117	;'u'
  4156  00FF69  74                 	db	116	;'t'
  4157  00FF6A  74                 	db	116	;'t'
  4158  00FF6B  6F                 	db	111	;'o'
  4159  00FF6C  6E                 	db	110	;'n'
  4160  00FF6D  20                 	db	32
  4161  00FF6E  25                 	db	37
  4162  00FF6F  63                 	db	99	;'c'
  4163  00FF70  20                 	db	32
  4164  00FF71  20                 	db	32
  4165  00FF72  00                 	db	0
  4166  00FF73                     STR_72:
  4167                           
  4168                           ; BSR set to: 57
  4169  00FF73  48                 	db	72	;'H'
  4170  00FF74  45                 	db	69	;'E'
  4171  00FF75  4C                 	db	76	;'L'
  4172  00FF76  50                 	db	80	;'P'
  4173  00FF77  20                 	db	32
  4174  00FF78  25                 	db	37
  4175  00FF79  73                 	db	115	;'s'
  4176  00FF7A  20                 	db	32
  4177  00FF7B  20                 	db	32
  4178  00FF7C  20                 	db	32
  4179  00FF7D  20                 	db	32
  4180  00FF7E  20                 	db	32
  4181  00FF7F  20                 	db	32
  4182  00FF80  20                 	db	32
  4183  00FF81  20                 	db	32
  4184  00FF82  20                 	db	32
  4185  00FF83  20                 	db	32
  4186  00FF84  20                 	db	32
  4187  00FF85  00                 	db	0
  4188  00FF86                     
  4189                           ; BSR set to: 57
  4190  00FF86  25                 	db	37
  4191  00FF87  64                 	db	100	;'d'
  4192  00FF88  20                 	db	32
  4193  00FF89  25                 	db	37
  4194  00FF8A  32                 	db	50	;'2'
  4195  00FF8B  2E                 	db	46
  4196  00FF8C  34                 	db	52	;'4'
  4197  00FF8D  66                 	db	102	;'f'
  4198  00FF8E  2C                 	db	44
  4199  00FF8F  20                 	db	32
  4200  00FF90  25                 	db	37
  4201  00FF91  64                 	db	100	;'d'
  4202  00FF92  20                 	db	32
  4203  00FF93  20                 	db	32
  4204  00FF94  20                 	db	32
  4205  00FF95  23                 	db	35
  4206  00FF96  00                 	db	0
  4207  00FF97                     STR_28:
  4208                           
  4209                           ; BSR set to: 57
  4210  00FF97  25                 	db	37
  4211  00FF98  64                 	db	100	;'d'
  4212  00FF99  20                 	db	32
  4213  00FF9A  25                 	db	37
  4214  00FF9B  32                 	db	50	;'2'
  4215  00FF9C  2E                 	db	46
  4216  00FF9D  34                 	db	52	;'4'
  4217  00FF9E  66                 	db	102	;'f'
  4218  00FF9F  20                 	db	32
  4219  00FFA0  20                 	db	32
  4220  00FFA1  20                 	db	32
  4221  00FFA2  25                 	db	37
  4222  00FFA3  64                 	db	100	;'d'
  4223  00FFA4  20                 	db	32
  4224  00FFA5  20                 	db	32
  4225  00FFA6  00                 	db	0
  4226  00FFA7                     STR_76:
  4227                           
  4228                           ; BSR set to: 57
  4229  00FFA7  76                 	db	118	;'v'
  4230  00FFA8  74                 	db	116	;'t'
  4231  00FFA9  65                 	db	101	;'e'
  4232  00FFAA  72                 	db	114	;'r'
  4233  00FFAB  6D                 	db	109	;'m'
  4234  00FFAC  20                 	db	32
  4235  00FFAD  25                 	db	37
  4236  00FFAE  78                 	db	120	;'x'
  4237  00FFAF  3A                 	db	58	;':'
  4238  00FFB0  25                 	db	37
  4239  00FFB1  78                 	db	120	;'x'
  4240  00FFB2  20                 	db	32
  4241  00FFB3  20                 	db	32
  4242  00FFB4  20                 	db	32
  4243  00FFB5  00                 	db	0
  4244  00FFB6                     STR_70:
  4245                           
  4246                           ; BSR set to: 57
  4247  00FFB6  46                 	db	70	;'F'
  4248  00FFB7  65                 	db	101	;'e'
  4249  00FFB8  62                 	db	98	;'b'
  4250  00FFB9  20                 	db	32
  4251  00FFBA  31                 	db	49	;'1'
  4252  00FFBB  36                 	db	54	;'6'
  4253  00FFBC  20                 	db	32
  4254  00FFBD  32                 	db	50	;'2'
  4255  00FFBE  30                 	db	48	;'0'
  4256  00FFBF  32                 	db	50	;'2'
  4257  00FFC0  30                 	db	48	;'0'
  4258  00FFC1  00                 	db	0
  4259  00FFC2                     STR_74:
  4260                           
  4261                           ; BSR set to: 57
  4262  00FFC2  25                 	db	37
  4263  00FFC3  73                 	db	115	;'s'
  4264  00FFC4  20                 	db	32
  4265  00FFC5  20                 	db	32
  4266  00FFC6  20                 	db	32
  4267  00FFC7  20                 	db	32
  4268  00FFC8  20                 	db	32
  4269  00FFC9  20                 	db	32
  4270  00FFCA  20                 	db	32
  4271  00FFCB  00                 	db	0
  4272  00FFCC                     STR_71:
  4273                           
  4274                           ; BSR set to: 57
  4275  00FFCC  32                 	db	50	;'2'
  4276  00FFCD  30                 	db	48	;'0'
  4277  00FFCE  3A                 	db	58	;':'
  4278  00FFCF  31                 	db	49	;'1'
  4279  00FFD0  32                 	db	50	;'2'
  4280  00FFD1  3A                 	db	58	;':'
  4281  00FFD2  32                 	db	50	;'2'
  4282  00FFD3  38                 	db	56	;'8'
  4283  00FFD4  00                 	db	0
  4284  00FFD5                     STR_3:
  4285                           
  4286                           ; BSR set to: 57
  4287  00FFD5  31                 	db	49	;'1'
  4288  00FFD6  2E                 	db	46
  4289  00FFD7  32                 	db	50	;'2'
  4290  00FFD8  35                 	db	53	;'5'
  4291  00FFD9  00                 	db	0
  4292  00FFDA                     STR_91:
  4293                           
  4294                           ; BSR set to: 57
  4295  00FFDA  49                 	db	73	;'I'
  4296  00FFDB  4E                 	db	78	;'N'
  4297  00FFDC  46                 	db	70	;'F'
  4298  00FFDD  00                 	db	0
  4299  00FFDE                     STR_95:
  4300                           
  4301                           ; BSR set to: 57
  4302  00FFDE  4E                 	db	78	;'N'
  4303  00FFDF  41                 	db	65	;'A'
  4304  00FFE0  4E                 	db	78	;'N'
  4305  00FFE1  00                 	db	0
  4306  00FFE2                     STR_92:
  4307                           
  4308                           ; BSR set to: 57
  4309  00FFE2  69                 	db	105	;'i'
  4310  00FFE3  6E                 	db	110	;'n'
  4311  00FFE4  66                 	db	102	;'f'
  4312  00FFE5  00                 	db	0
  4313  00FFE6                     STR_96:
  4314                           
  4315                           ; BSR set to: 57
  4316  00FFE6  6E                 	db	110	;'n'
  4317  00FFE7  61                 	db	97	;'a'
  4318  00FFE8  6E                 	db	110	;'n'
  4319  00FFE9  00                 	db	0
  4320  00FFEA                     STR_122:
  4321                           
  4322                           ; BSR set to: 57
  4323  00FFEA  6C                 	db	108	;'l'
  4324  00FFEB  58                 	db	88	;'X'
  4325  00FFEC  00                 	db	0
  4326  00FFED                     STR_99:
  4327                           
  4328                           ; BSR set to: 57
  4329  00FFED  6C                 	db	108	;'l'
  4330  00FFEE  64                 	db	100	;'d'
  4331  00FFEF  00                 	db	0
  4332  00FFF0                     STR_108:
  4333                           
  4334                           ; BSR set to: 57
  4335  00FFF0  6C                 	db	108	;'l'
  4336  00FFF1  66                 	db	102	;'f'
  4337  00FFF2  00                 	db	0
  4338  00FFF3                     STR_103:
  4339                           
  4340                           ; BSR set to: 57
  4341  00FFF3  6C                 	db	108	;'l'
  4342  00FFF4  69                 	db	105	;'i'
  4343  00FFF5  00                 	db	0
  4344  00FFF6                     STR_113:
  4345                           
  4346                           ; BSR set to: 57
  4347  00FFF6  6C                 	db	108	;'l'
  4348  00FFF7  75                 	db	117	;'u'
  4349  00FFF8  00                 	db	0
  4350  00FFF9                     STR_118:
  4351                           
  4352                           ; BSR set to: 57
  4353  00FFF9  6C                 	db	108	;'l'
  4354  00FFFA  78                 	db	120	;'x'
  4355  00FFFB  00                 	db	0
  4356  00FFFC                     STR_69:
  4357                           
  4358                           ; BSR set to: 57
  4359  00FFFC  25                 	db	37
  4360  00FFFD  73                 	db	115	;'s'
  4361  00FFFE  00                 	db	0
  4362  0000                     
  4363                           ; #config settings
  4364  00FFFF  00                 	db	0	; dummy byte at the end
  4365  0000                     
  4366                           	psect	cinit
  4367  01F87C                     __pcinit:
  4368                           	opt callstack 0
  4369  01F87C                     start_initialization:
  4370                           	opt callstack 0
  4371  01F87C                     __initialization:
  4372                           	opt callstack 0
  4373                           
  4374                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4375                           ; load TBLPTR registers with __pidataBIGRAM
  4376  01F87C  0E70               	movlw	low __pidataBIGRAM
  4377  01F87E  6EF6               	movwf	tblptrl,c
  4378  01F880  0EA2               	movlw	high __pidataBIGRAM
  4379  01F882  6EF7               	movwf	tblptrh,c
  4380  01F884  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4381  01F886  6EF8               	movwf	tblptru,c
  4382  01F888  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4383  01F88C  EE20 F340          	lfsr	2,832
  4384  01F890                     copy_data0:
  4385  01F890  0009               	tblrd		*+
  4386  01F892  006F FFD7 FFEE     	movff	tablat,postinc0
  4387  01F898  50DD               	movf	postdec2,w,c
  4388  01F89A  50D9               	movf	fsr2l,w,c
  4389  01F89C  E1F9               	bnz	copy_data0
  4390  01F89E  50DA               	movf	fsr2h,w,c
  4391  01F8A0  E1F7               	bnz	copy_data0
  4392                           
  4393                           ; Initialize objects allocated to BANK2 (188 bytes)
  4394                           ; load TBLPTR registers with __pidataBANK2
  4395  01F8A2  0E48               	movlw	low __pidataBANK2
  4396  01F8A4  6EF6               	movwf	tblptrl,c
  4397  01F8A6  0E02               	movlw	high __pidataBANK2
  4398  01F8A8  6EF7               	movwf	tblptrh,c
  4399  01F8AA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4400  01F8AC  6EF8               	movwf	tblptru,c
  4401  01F8AE  EE00  F200         	lfsr	0,__pdataBANK2
  4402  01F8B2  EE20 F0BC          	lfsr	2,188
  4403  01F8B6                     copy_data1:
  4404  01F8B6  0009               	tblrd		*+
  4405  01F8B8  006F FFD7 FFEE     	movff	tablat,postinc0
  4406  01F8BE  50DD               	movf	postdec2,w,c
  4407  01F8C0  50D9               	movf	fsr2l,w,c
  4408  01F8C2  E1F9               	bnz	copy_data1
  4409                           
  4410                           ; Initialize objects allocated to BANK1 (164 bytes)
  4411                           ; load TBLPTR registers with __pidataBANK1
  4412  01F8C4  0ED6               	movlw	low __pidataBANK1
  4413  01F8C6  6EF6               	movwf	tblptrl,c
  4414  01F8C8  0E07               	movlw	high __pidataBANK1
  4415  01F8CA  6EF7               	movwf	tblptrh,c
  4416  01F8CC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4417  01F8CE  6EF8               	movwf	tblptru,c
  4418  01F8D0  EE00  F100         	lfsr	0,__pdataBANK1
  4419  01F8D4  EE20 F0A4          	lfsr	2,164
  4420  01F8D8                     copy_data2:
  4421  01F8D8  0009               	tblrd		*+
  4422  01F8DA  006F FFD7 FFEE     	movff	tablat,postinc0
  4423  01F8E0  50DD               	movf	postdec2,w,c
  4424  01F8E2  50D9               	movf	fsr2l,w,c
  4425  01F8E4  E1F9               	bnz	copy_data2
  4426                           
  4427                           ; Clear objects allocated to BIGRAM (642 bytes)
  4428  01F8E6  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4429  01F8EA  EE20 F282          	lfsr	2,642
  4430  01F8EE                     clear_0:
  4431  01F8EE  6AEE               	clrf	postinc0,c
  4432  01F8F0  50DD               	movf	postdec2,w,c
  4433  01F8F2  50D9               	movf	fsr2l,w,c
  4434  01F8F4  E1FC               	bnz	clear_0
  4435  01F8F6  50DA               	movf	fsr2h,w,c
  4436  01F8F8  E1FA               	bnz	clear_0
  4437                           
  4438                           ; Clear objects allocated to BANK6 (255 bytes)
  4439  01F8FA  EE01  F200         	lfsr	0,__pbssBANK6
  4440  01F8FE  EE20 F0FF          	lfsr	2,255
  4441  01F902                     clear_1:
  4442  01F902  6AEE               	clrf	postinc0,c
  4443  01F904  50DD               	movf	postdec2,w,c
  4444  01F906  50D9               	movf	fsr2l,w,c
  4445  01F908  E1FC               	bnz	clear_1
  4446  01F90A  50DA               	movf	fsr2h,w,c
  4447  01F90C  E1FA               	bnz	clear_1
  4448                           
  4449                           ; Clear objects allocated to BANK5 (134 bytes)
  4450  01F90E  EE01  F100         	lfsr	0,__pbssBANK5
  4451  01F912  0E86               	movlw	134
  4452  01F914                     clear_2:
  4453  01F914  6AEE               	clrf	postinc0,c
  4454  01F916  06E8               	decf	wreg,f,c
  4455  01F918  E1FD               	bnz	clear_2
  4456                           
  4457                           ; Clear objects allocated to BANK4 (219 bytes)
  4458  01F91A  EE01  F000         	lfsr	0,__pbssBANK4
  4459  01F91E  0EDB               	movlw	219
  4460  01F920                     clear_3:
  4461  01F920  6AEE               	clrf	postinc0,c
  4462  01F922  06E8               	decf	wreg,f,c
  4463  01F924  E1FD               	bnz	clear_3
  4464                           
  4465                           ; Clear objects allocated to BANK3 (247 bytes)
  4466  01F926  EE00  F300         	lfsr	0,__pbssBANK3
  4467  01F92A  0EF7               	movlw	247
  4468  01F92C                     clear_4:
  4469  01F92C  6AEE               	clrf	postinc0,c
  4470  01F92E  06E8               	decf	wreg,f,c
  4471  01F930  E1FD               	bnz	clear_4
  4472                           
  4473                           ; Clear objects allocated to BANK2 (42 bytes)
  4474  01F932  EE00  F2BC         	lfsr	0,__pbssBANK2
  4475  01F936  0E2A               	movlw	42
  4476  01F938                     clear_5:
  4477  01F938  6AEE               	clrf	postinc0,c
  4478  01F93A  06E8               	decf	wreg,f,c
  4479  01F93C  E1FD               	bnz	clear_5
  4480                           
  4481                           ; Clear objects allocated to BANK1 (89 bytes)
  4482  01F93E  EE00  F1A4         	lfsr	0,__pbssBANK1
  4483  01F942  0E59               	movlw	89
  4484  01F944                     clear_6:
  4485  01F944  6AEE               	clrf	postinc0,c
  4486  01F946  06E8               	decf	wreg,f,c
  4487  01F948  E1FD               	bnz	clear_6
  4488                           
  4489                           ; Clear objects allocated to BANK0 (133 bytes)
  4490  01F94A  EE00  F060         	lfsr	0,__pbssBANK0
  4491  01F94E  0E85               	movlw	133
  4492  01F950                     clear_7:
  4493  01F950  6AEE               	clrf	postinc0,c
  4494  01F952  06E8               	decf	wreg,f,c
  4495  01F954  E1FD               	bnz	clear_7
  4496                           
  4497                           ; Clear objects allocated to COMRAM (14 bytes)
  4498  01F956  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4499  01F95A  0E0E               	movlw	14
  4500  01F95C                     clear_8:
  4501  01F95C  6AEE               	clrf	postinc0,c
  4502  01F95E  06E8               	decf	wreg,f,c
  4503  01F960  E1FD               	bnz	clear_8
  4504                           
  4505                           ;
  4506                           ; Setup IVTBASE
  4507                           ;
  4508  01F962  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4509  01F964  6ED5               	movwf	213,c
  4510  01F966  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4511  01F968  6ED6               	movwf	214,c
  4512  01F96A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4513  01F96C  6ED7               	movwf	215,c
  4514  01F96E                     end_of_initialization:
  4515                           	opt callstack 0
  4516  01F96E                     __end_of__initialization:
  4517                           	opt callstack 0
  4518  01F96E  0100               	movlb	0
  4519  01F970  EF00  F080         	goto	_main	;jump to C main() function
  4520                           
  4521                           	psect	bssCOMRAM
  4522  00004A                     __pbssCOMRAM:
  4523                           	opt callstack 0
  4524  00004A                     _width:
  4525                           	opt callstack 0
  4526  00004A                     	ds	2
  4527  00004C                     _prec:
  4528                           	opt callstack 0
  4529  00004C                     	ds	2
  4530  00004E                     _flags:
  4531                           	opt callstack 0
  4532  00004E                     	ds	2
  4533  000050                     calc_bsoc@log_update_wait:
  4534                           	opt callstack 0
  4535  000050                     	ds	1
  4536  000051                     check_day_time@day_delay:
  4537                           	opt callstack 0
  4538  000051                     	ds	1
  4539  000052                     dac_spi_control@init:
  4540                           	opt callstack 0
  4541  000052                     	ds	1
  4542  000053                     display_history@bwait:
  4543                           	opt callstack 0
  4544  000053                     	ds	1
  4545  000054                     _uart2RxHead:
  4546                           	opt callstack 0
  4547  000054                     	ds	1
  4548  000055                     _uart2TxBufferRemaining:
  4549                           	opt callstack 0
  4550  000055                     	ds	1
  4551  000056                     _uart2TxTail:
  4552                           	opt callstack 0
  4553  000056                     	ds	1
  4554  000057                     _uart1RxHead:
  4555                           	opt callstack 0
  4556  000057                     	ds	1
  4557                           
  4558                           	psect	bssBANK0
  4559  000060                     __pbssBANK0:
  4560                           	opt callstack 0
  4561  000060                     _spi_link:
  4562                           	opt callstack 0
  4563  000060                     	ds	12
  4564  00006C                     ___tzname:
  4565                           	opt callstack 0
  4566  00006C                     	ds	4
  4567  000070                     ___timezone:
  4568                           	opt callstack 0
  4569  000070                     	ds	4
  4570  000074                     floorf@F524:
  4571                           	opt callstack 0
  4572  000074                     	ds	4
  4573  000078                     fabsf@F463:
  4574                           	opt callstack 0
  4575  000078                     	ds	4
  4576  00007C                     ___fpclassifyf@F463:
  4577                           	opt callstack 0
  4578  00007C                     	ds	4
  4579  000080                     calc_ror_data@bcror:
  4580                           	opt callstack 0
  4581  000080                     	ds	4
  4582  000084                     calc_ror_data@bvror:
  4583                           	opt callstack 0
  4584  000084                     	ds	4
  4585  000088                     calc_model_data@bcror:
  4586                           	opt callstack 0
  4587  000088                     	ds	4
  4588  00008C                     calc_model_data@bvror:
  4589                           	opt callstack 0
  4590  00008C                     	ds	4
  4591  000090                     wdtdelay@dcount:
  4592                           	opt callstack 0
  4593  000090                     	ds	4
  4594  000094                     _P:
  4595                           	opt callstack 0
  4596  000094                     	ds	4
  4597  000098                     _TMR3_InterruptHandler:
  4598                           	opt callstack 0
  4599  000098                     	ds	3
  4600  00009B                     _TMR5_InterruptHandler:
  4601                           	opt callstack 0
  4602  00009B                     	ds	3
  4603  00009E                     _TMR6_InterruptHandler:
  4604                           	opt callstack 0
  4605  00009E                     	ds	3
  4606  0000A1                     _ADCC_ADTI_InterruptHandler:
  4607                           	opt callstack 0
  4608  0000A1                     	ds	3
  4609  0000A4                     _ADCC_ADI_InterruptHandler:
  4610                           	opt callstack 0
  4611  0000A4                     	ds	3
  4612  0000A7                     _UART1_RxInterruptHandler:
  4613                           	opt callstack 0
  4614  0000A7                     	ds	3
  4615  0000AA                     _UART2_TxInterruptHandler:
  4616                           	opt callstack 0
  4617  0000AA                     	ds	3
  4618  0000AD                     _UART2_RxInterruptHandler:
  4619                           	opt callstack 0
  4620  0000AD                     	ds	3
  4621  0000B0                     _INT1_InterruptHandler:
  4622                           	opt callstack 0
  4623  0000B0                     	ds	3
  4624  0000B3                     _INT0_InterruptHandler:
  4625                           	opt callstack 0
  4626  0000B3                     	ds	3
  4627  0000B6                     _dst_off:
  4628                           	opt callstack 0
  4629  0000B6                     	ds	2
  4630  0000B8                     ___daylight:
  4631                           	opt callstack 0
  4632  0000B8                     	ds	2
  4633  0000BA                     _nout:
  4634                           	opt callstack 0
  4635  0000BA                     	ds	2
  4636  0000BC                     _t_mbmc:
  4637                           	opt callstack 0
  4638  0000BC                     	ds	2
  4639  0000BE                     TMR3_ISR@CountCallBack:
  4640                           	opt callstack 0
  4641  0000BE                     	ds	2
  4642  0000C0                     _timer3ReloadVal:
  4643                           	opt callstack 0
  4644  0000C0                     	ds	2
  4645  0000C2                     TMR5_ISR@CountCallBack:
  4646                           	opt callstack 0
  4647  0000C2                     	ds	2
  4648  0000C4                     _timer5ReloadVal:
  4649                           	opt callstack 0
  4650  0000C4                     	ds	2
  4651  0000C6                     esr_check@esr_state:
  4652                           	opt callstack 0
  4653  0000C6                     	ds	1
  4654  0000C7                     dac_spi_control@SB:
  4655                           	opt callstack 0
  4656  0000C7                     	ds	1
  4657  0000C8                     dac_spi_control@SC:
  4658                           	opt callstack 0
  4659  0000C8                     	ds	1
  4660  0000C9                     dac_spi_control@S2:
  4661                           	opt callstack 0
  4662  0000C9                     	ds	1
  4663  0000CA                     dac_spi_control@S1:
  4664                           	opt callstack 0
  4665  0000CA                     	ds	1
  4666  0000CB                     dac_spi_control@S0:
  4667                           	opt callstack 0
  4668  0000CB                     	ds	1
  4669  0000CC                     _mode_sw:
  4670                           	opt callstack 0
  4671  0000CC                     	ds	1
  4672  0000CD                     _uart2RxCount:
  4673                           	opt callstack 0
  4674  0000CD                     	ds	1
  4675  0000CE                     _uart2RxTail:
  4676                           	opt callstack 0
  4677  0000CE                     	ds	1
  4678  0000CF                     _uart2TxHead:
  4679                           	opt callstack 0
  4680  0000CF                     	ds	1
  4681  0000D0                     _uart1RxCount:
  4682                           	opt callstack 0
  4683  0000D0                     	ds	1
  4684  0000D1                     _uart1RxTail:
  4685                           	opt callstack 0
  4686  0000D1                     	ds	1
  4687  0000D2                     time@current_time:
  4688                           	opt callstack 0
  4689  0000D2                     	ds	8
  4690  0000DA                     _pclock:
  4691                           	opt callstack 0
  4692  0000DA                     	ds	8
  4693  0000E2                     _crcObj:
  4694                           	opt callstack 0
  4695  0000E2                     	ds	3
  4696                           
  4697                           	psect	bssBANK1
  4698  0001A4                     __pbssBANK1:
  4699                           	opt callstack 0
  4700  0001A4                     _S:
  4701                           	opt callstack 0
  4702  0001A4                     	ds	41
  4703  0001CD                     spinners@s:
  4704                           	opt callstack 0
  4705  0001CD                     	ds	6
  4706  0001D3                     _lock:
  4707                           	opt callstack 0
  4708  0001D3                     	ds	4
  4709  0001D7                     _utctime:
  4710                           	opt callstack 0
  4711  0001D7                     	ds	4
  4712  0001DB                     _r1:
  4713                           	opt callstack 0
  4714  0001DB                     	ds	10
  4715  0001E5                     _r0:
  4716                           	opt callstack 0
  4717  0001E5                     	ds	10
  4718  0001EF                     _dst_name:
  4719                           	opt callstack 0
  4720  0001EF                     	ds	7
  4721  0001F6                     _std_name:
  4722                           	opt callstack 0
  4723  0001F6                     	ds	7
  4724                           
  4725                           	psect	dataBANK1
  4726  000100                     __pdataBANK1:
  4727                           	opt callstack 0
  4728  000100                     _R:
  4729                           	opt callstack 0
  4730  000100                     	ds	155
  4731  00019B                     _H:
  4732                           	opt callstack 0
  4733  00019B                     	ds	9
  4734                           
  4735                           	psect	bssBANK2
  4736  0002BC                     __pbssBANK2:
  4737                           	opt callstack 0
  4738  0002BC                     _tickCount:
  4739                           	opt callstack 0
  4740  0002BC                     	ds	26
  4741  0002D6                     _uart1RxBuffer:
  4742                           	opt callstack 0
  4743  0002D6                     	ds	8
  4744  0002DE                     _seed:
  4745                           	opt callstack 0
  4746  0002DE                     	ds	8
  4747                           
  4748                           	psect	dataBANK2
  4749  000200                     __pdataBANK2:
  4750                           	opt callstack 0
  4751  000200                     stoa@F1166:
  4752                           	opt callstack 0
  4753  000200                     	ds	7
  4754  000207                     _V:
  4755                           	opt callstack 0
  4756  000207                     	ds	181
  4757                           
  4758                           	psect	bssBANK3
  4759  000300                     __pbssBANK3:
  4760                           	opt callstack 0
  4761  000300                     lp_filter@smooth:
  4762                           	opt callstack 0
  4763  000300                     	ds	84
  4764  000354                     _dbuf:
  4765                           	opt callstack 0
  4766  000354                     	ds	80
  4767  0003A4                     	ds	32
  4768  0003C4                     asctime@buf:
  4769                           	opt callstack 0
  4770  0003C4                     	ds	27
  4771  0003DF                     localtime@tm:
  4772                           	opt callstack 0
  4773  0003DF                     	ds	24
  4774                           
  4775                           	psect	bssBANK4
  4776  000400                     __pbssBANK4:
  4777                           	opt callstack 0
  4778  000400                     _uart2TxBuffer:
  4779                           	opt callstack 0
  4780  000400                     	ds	64
  4781  000440                     _r_cal:
  4782                           	opt callstack 0
  4783  000440                     	ds	155
  4784                           
  4785                           	psect	bssBANK5
  4786  000500                     __pbssBANK5:
  4787                           	opt callstack 0
  4788  000500                     _ring_buf2:
  4789                           	opt callstack 0
  4790  000500                     	ds	67
  4791  000543                     _ring_buf1:
  4792                           	opt callstack 0
  4793  000543                     	ds	67
  4794                           
  4795                           	psect	bssBANK6
  4796  000600                     __pbssBANK6:
  4797                           	opt callstack 0
  4798  000600                     _uart2RxBuffer:
  4799                           	opt callstack 0
  4800  000600                     	ds	255
  4801                           
  4802                           	psect	bssBIGRAM
  4803  000A3F                     __pbssBIGRAM:
  4804                           	opt callstack 0
  4805  000A3F                     _D:
  4806                           	opt callstack 0
  4807  000A3F                     	ds	642
  4808                           
  4809                           	psect	dataBIGRAM
  4810  0006FF                     __pdataBIGRAM:
  4811                           	opt callstack 0
  4812  0006FF                     _port_data:
  4813                           	opt callstack 0
  4814  0006FF                     	ds	512
  4815  0008FF                     _C:
  4816                           	opt callstack 0
  4817  0008FF                     	ds	320
  4818                           
  4819                           	psect	cstackBANK0
  4820  0000E5                     __pcstackBANK0:
  4821                           	opt callstack 0
  4822  0000E5                     ??_TMR3_ISR:
  4823                           
  4824                           ; 1 bytes @ 0x0
  4825  0000E5                     	ds	25
  4826                           
  4827                           	psect	cstackCOMRAM
  4828  000001                     __pcstackCOMRAM:
  4829                           	opt callstack 0
  4830  000001                     ??_ADCC_ThresholdISR:
  4831  000001                     
  4832                           ; 1 bytes @ 0x0
  4833  000001                     	ds	5
  4834  000006                     ??_TMR6_ISR:
  4835                           
  4836                           ; 1 bytes @ 0x5
  4837  000006                     	ds	1
  4838  000007                     ??_INT1_ISR:
  4839  000007                     
  4840                           ; 1 bytes @ 0x6
  4841  000007                     	ds	4
  4842  00000B                     ??_TMR5_ISR:
  4843                           
  4844                           ; 1 bytes @ 0xA
  4845  00000B                     	ds	31
  4846                           
  4847 ;;
  4848 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4849 ;;
  4850 ;; *************** function _main *****************
  4851 ;; Defined at:
  4852 ;;		line 198 in file "main.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  esr_temp        4  [STACK] float 
  4857 ;;  i_esr           2  [STACK] unsigned short 
  4858 ;;  shape           1  [STACK] unsigned char 
  4859 ;;  inp_index       1  [STACK] unsigned char 
  4860 ;;  k               1  [STACK] unsigned char 
  4861 ;;  j               1  [STACK] unsigned char 
  4862 ;;  i               1  [STACK] unsigned char 
  4863 ;;  mode            1  [STACK] enum E17179
  4864 ;;  i_ror           1  [STACK] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1  [STACK] void 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels required when called:   28
  4880 ;; This function calls:
  4881 ;;		_SYSTEM_Initialize
  4882 ;;		_StartTimer
  4883 ;;		_TimerDone
  4884 ;;		_WaitMs
  4885 ;;		___fladd
  4886 ;;		___flge
  4887 ;;		___fltol
  4888 ;;		_asctime
  4889 ;;		_calc_model_data
  4890 ;;		_calc_ror_data
  4891 ;;		_check_adc_scan
  4892 ;;		_check_enter_button
  4893 ;;		_check_help
  4894 ;;		_clear_adc_scan
  4895 ;;		_clear_hid_pflags
  4896 ;;		_conv_raw_result
  4897 ;;		_convert_adc_data
  4898 ;;		_current_sensor_cal
  4899 ;;		_display_history
  4900 ;;		_eaDogM_WriteCommand
  4901 ;;		_esr_check
  4902 ;;		_fabsf
  4903 ;;		_get_raw_result
  4904 ;;		_get_switch
  4905 ;;		_get_vterm_ptr
  4906 ;;		_hid_display
  4907 ;;		_init_bsoc
  4908 ;;		_init_display
  4909 ;;		_init_port_dma
  4910 ;;		_load_hist_data
  4911 ;;		_localtime
  4912 ;;		_lp_filter
  4913 ;;		_mode_lamp_dim
  4914 ;;		_read_cal_data
  4915 ;;		_set_dac
  4916 ;;		_set_dac_a
  4917 ;;		_set_dac_b
  4918 ;;		_set_display_info
  4919 ;;		_set_hist_flag
  4920 ;;		_set_load_relay_one
  4921 ;;		_set_load_relay_two
  4922 ;;		_set_time
  4923 ;;		_set_vterm
  4924 ;;		_spinners
  4925 ;;		_sprintf
  4926 ;;		_srand
  4927 ;;		_start_adc_scan
  4928 ;;		_start_switch_handler
  4929 ;;		_static_soc
  4930 ;;		_time
  4931 ;;		_update_cal_data
  4932 ;;		_update_hist_data
  4933 ;;		_update_lcd
  4934 ;;		_wait_lcd_done
  4935 ;;		_write_cal_data
  4936 ;; This function is called by:
  4937 ;;		Startup code after reset
  4938 ;; This function uses a reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text0
  4942  010000                     __ptext0:
  4943                           	opt callstack 0
  4944  010000                     _main:
  4945                           	opt callstack 0
  4946                           
  4947                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4948  010000  0E11               	movlw	17
  4949  010002  26E1               	addwf	fsr1l,f,c
  4950  010004  0E00               	movlw	0
  4951  010006  22E2               	addwfc	fsr1h,f,c
  4952                           
  4953                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4954                           ;stkvar	_inp_index @ sp[(-17)+11]
  4955                           
  4956                           ;incstack = 0
  4957  010008  0EFA               	movlw	-6
  4958  01000A  6AE3               	clrf	plusw1,c
  4959                           
  4960                           ;stkvar	_i @ sp[(-17)+14]
  4961  01000C  0EFD               	movlw	-3
  4962  01000E  6AE3               	clrf	plusw1,c
  4963                           
  4964                           ;stkvar	_j @ sp[(-17)+13]
  4965  010010  0EFC               	movlw	-4
  4966  010012  6AE3               	clrf	plusw1,c
  4967  010014  2AE3               	incf	plusw1,f,c
  4968                           
  4969                           ;stkvar	_k @ sp[(-17)+12]
  4970  010016  0EFB               	movlw	-5
  4971  010018  6AE3               	clrf	plusw1,c
  4972  01001A  82E3               	bsf	plusw1,1,c
  4973                           
  4974                           ;main.c: 204:  SYSTEM_Initialize();
  4975  01001C  EC30  F00C         	call	_SYSTEM_Initialize	;wreg free
  4976                           
  4977                           ; BSR set to: 60
  4978                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  4979  010020  8ED2               	bsf	210,7,c	;volatile
  4980                           
  4981                           ; BSR set to: 60
  4982                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  4983  010022  8CD2               	bsf	210,6,c	;volatile
  4984                           
  4985                           ; BSR set to: 60
  4986                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  4987  010024  0102               	movlb	2	; () banked
  4988  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4989                           
  4990                           ; BSR set to: 2
  4991                           ;main.c: 217:  WaitMs(300);
  4992  010028  0E2C               	movlw	44
  4993  01002A  6EE6               	movwf	postinc1,c
  4994  01002C  0E01               	movlw	1
  4995  01002E  6EE6               	movwf	postinc1,c
  4996  010030  EC07  F00F         	call	_WaitMs	;wreg free
  4997                           
  4998                           ;main.c: 218:  if (PORTBbits.RB0) {
  4999  010034  A0CB               	btfss	203,0,c	;volatile
  5000  010036  D004               	goto	l17366
  5001                           
  5002                           ;main.c: 219:   mode = UI_STATE_HOST;
  5003                           ;stkvar	_mode @ sp[(-17)+15]
  5004  010038  0EFE               	movlw	-2
  5005  01003A  6AE3               	clrf	plusw1,c
  5006  01003C  2AE3               	incf	plusw1,f,c
  5007                           
  5008                           ;main.c: 220:  } else {
  5009  01003E  D004               	goto	l17368
  5010  010040                     l17366:
  5011                           
  5012                           ;main.c: 221:   mode = UI_STATE_LOG;
  5013                           ;stkvar	_mode @ sp[(-17)+15]
  5014  010040  0EFE               	movlw	-2
  5015  010042  6AE3               	clrf	plusw1,c
  5016  010044  80E3               	bsf	plusw1,0,c
  5017  010046  82E3               	bsf	plusw1,1,c	;indir
  5018  010048                     l17368:
  5019                           
  5020                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  5021                           ;stkvar	_mode @ sp[(-17)+15]
  5022  010048  0EFE               	movlw	-2
  5023  01004A  04E3               	decf	plusw1,w,c
  5024  01004C  A4D8               	btfss	status,2,c
  5025  01004E  D007               	goto	l1455
  5026                           
  5027                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  5028  010050  80BD               	bsf	189,0,c	;volatile
  5029                           
  5030                           ;main.c: 226:   V.mode_pwm = 70;
  5031  010052  0E00               	movlw	0
  5032  010054  0102               	movlb	2	; () banked
  5033  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5034  010058  0E46               	movlw	70
  5035  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5036                           
  5037                           ;main.c: 227:  } else {
  5038  01005C  D004               	goto	l17372
  5039  01005E                     l1455:
  5040  01005E  90BD               	bcf	189,0,c	;volatile
  5041                           
  5042                           ;main.c: 229:   V.mode_pwm = 0;
  5043  010060  0102               	movlb	2	; () banked
  5044  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5045  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5046  010066                     l17372:
  5047                           
  5048                           ; BSR set to: 2
  5049                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  5050  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5051  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5052  010072  ECAF  F012         	call	_mode_lamp_dim	;wreg free
  5053  010076  D3EB               	goto	l17528
  5054  010078                     l17374:
  5055                           
  5056                           ; BSR set to: 2
  5057                           ;main.c: 239:    init_port_dma();
  5058  010078  ECA3  F00F         	call	_init_port_dma	;wreg free
  5059                           
  5060                           ; BSR set to: 59
  5061                           ;main.c: 241:    init_display();
  5062  01007C  EC9F  F0FE         	call	_init_display	;wreg free
  5063                           
  5064                           ; BSR set to: 61
  5065                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5066  010080  0E0C               	movlw	12
  5067  010082  6EE6               	movwf	postinc1,c
  5068  010084  EC37  F013         	call	_eaDogM_WriteCommand	;wreg free
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;main.c: 243:    set_dac();
  5072  010088  EC3B  F002         	call	_set_dac	;wreg free
  5073                           
  5074                           ;main.c: 247:    set_load_relay_one(1);
  5075  01008C  0E01               	movlw	1
  5076  01008E  6EE6               	movwf	postinc1,c
  5077  010090  EC17  F013         	call	_set_load_relay_one	;wreg free
  5078                           
  5079                           ;main.c: 248:    set_load_relay_two(1);
  5080  010094  0E01               	movlw	1
  5081  010096  6EE6               	movwf	postinc1,c
  5082  010098  EC0F  F013         	call	_set_load_relay_two	;wreg free
  5083                           
  5084                           ;main.c: 250:    V.ui_state = mode;
  5085                           ;stkvar	_mode @ sp[(-17)+15]
  5086  01009C  0EFE               	movlw	-2
  5087  01009E  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5088                           
  5089                           ;main.c: 251:    srand(1957);
  5090  0100A4  0EA5               	movlw	165
  5091  0100A6  6EE6               	movwf	postinc1,c
  5092  0100A8  0E07               	movlw	7
  5093  0100AA  6EE6               	movwf	postinc1,c
  5094  0100AC  EC22  F00F         	call	_srand	;wreg free
  5095                           
  5096                           ; BSR set to: 2
  5097                           ;main.c: 252:    set_vterm(0);
  5098  0100B0  0E00               	movlw	0
  5099  0100B2  6EE6               	movwf	postinc1,c
  5100  0100B4  EC76  F012         	call	_set_vterm	;wreg free
  5101                           
  5102                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5103  0100B8  0E78               	movlw	low STR_1
  5104  0100BA  6EE6               	movwf	postinc1,c
  5105  0100BC  0EFE               	movlw	high STR_1
  5106  0100BE  6EE6               	movwf	postinc1,c
  5107  0100C0  0E00               	movlw	0
  5108  0100C2  6EE6               	movwf	postinc1,c
  5109  0100C4  0E00               	movlw	0
  5110  0100C6  6EE6               	movwf	postinc1,c
  5111  0100C8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5112  0100CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5113  0100D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5114  0100D8  0E04               	movlw	4
  5115  0100DA  6EE6               	movwf	postinc1,c
  5116  0100DC  ECB9  F0FB         	call	_sprintf	;wreg free
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.25");
  5120  0100E0  0ED5               	movlw	low STR_3
  5121  0100E2  6EE6               	movwf	postinc1,c
  5122  0100E4  0EFF               	movlw	high STR_3
  5123  0100E6  6EE6               	movwf	postinc1,c
  5124  0100E8  0E4E               	movlw	low STR_2
  5125  0100EA  6EE6               	movwf	postinc1,c
  5126  0100EC  0EFE               	movlw	high STR_2
  5127  0100EE  6EE6               	movwf	postinc1,c
  5128  0100F0  0E00               	movlw	0
  5129  0100F2  6EE6               	movwf	postinc1,c
  5130  0100F4  0E01               	movlw	1
  5131  0100F6  6EE6               	movwf	postinc1,c
  5132  0100F8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5133  0100FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5134  010102  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5135  010108  0E06               	movlw	6
  5136  01010A  6EE6               	movwf	postinc1,c
  5137  01010C  ECB9  F0FB         	call	_sprintf	;wreg free
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5141  010110  0ED0               	movlw	low STR_4
  5142  010112  6EE6               	movwf	postinc1,c
  5143  010114  0EFD               	movlw	high STR_4
  5144  010116  6EE6               	movwf	postinc1,c
  5145  010118  0E00               	movlw	0
  5146  01011A  6EE6               	movwf	postinc1,c
  5147  01011C  0E02               	movlw	2
  5148  01011E  6EE6               	movwf	postinc1,c
  5149  010120  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5150  010124  0060  F0AB  FFE6   	movff	btemp,postinc1
  5151  01012A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5152  010130  0E04               	movlw	4
  5153  010132  6EE6               	movwf	postinc1,c
  5154  010134  ECB9  F0FB         	call	_sprintf	;wreg free
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;main.c: 256:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5158  010138  0EF2               	movlw	low (STR_16+1)
  5159  01013A  6EE6               	movwf	postinc1,c
  5160  01013C  0EFB               	movlw	high (STR_16+1)
  5161  01013E  6EE6               	movwf	postinc1,c
  5162  010140  0E00               	movlw	0
  5163  010142  6EE6               	movwf	postinc1,c
  5164  010144  0E03               	movlw	3
  5165  010146  6EE6               	movwf	postinc1,c
  5166  010148  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5167  01014C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5168  010152  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5169  010158  0E04               	movlw	4
  5170  01015A  6EE6               	movwf	postinc1,c
  5171  01015C  ECB9  F0FB         	call	_sprintf	;wreg free
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;main.c: 257:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5175  010160  0EF2               	movlw	low (STR_16+1)
  5176  010162  6EE6               	movwf	postinc1,c
  5177  010164  0EFB               	movlw	high (STR_16+1)
  5178  010166  6EE6               	movwf	postinc1,c
  5179  010168  0E02               	movlw	2
  5180  01016A  6EE6               	movwf	postinc1,c
  5181  01016C  0E00               	movlw	0
  5182  01016E  6EE6               	movwf	postinc1,c
  5183  010170  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5184  010174  0060  F0AB  FFE6   	movff	btemp,postinc1
  5185  01017A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5186  010180  0E04               	movlw	4
  5187  010182  6EE6               	movwf	postinc1,c
  5188  010184  ECB9  F0FB         	call	_sprintf	;wreg free
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;main.c: 258:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5192  010188  0EF2               	movlw	low (STR_16+1)
  5193  01018A  6EE6               	movwf	postinc1,c
  5194  01018C  0EFB               	movlw	high (STR_16+1)
  5195  01018E  6EE6               	movwf	postinc1,c
  5196  010190  0E02               	movlw	2
  5197  010192  6EE6               	movwf	postinc1,c
  5198  010194  0E01               	movlw	1
  5199  010196  6EE6               	movwf	postinc1,c
  5200  010198  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5201  01019C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5202  0101A2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5203  0101A8  0E04               	movlw	4
  5204  0101AA  6EE6               	movwf	postinc1,c
  5205  0101AC  ECB9  F0FB         	call	_sprintf	;wreg free
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;main.c: 259:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5209  0101B0  0EF2               	movlw	low (STR_16+1)
  5210  0101B2  6EE6               	movwf	postinc1,c
  5211  0101B4  0EFB               	movlw	high (STR_16+1)
  5212  0101B6  6EE6               	movwf	postinc1,c
  5213  0101B8  0E02               	movlw	2
  5214  0101BA  6EE6               	movwf	postinc1,c
  5215  0101BC  0E02               	movlw	2
  5216  0101BE  6EE6               	movwf	postinc1,c
  5217  0101C0  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5218  0101C4  0060  F0AB  FFE6   	movff	btemp,postinc1
  5219  0101CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5220  0101D0  0E04               	movlw	4
  5221  0101D2  6EE6               	movwf	postinc1,c
  5222  0101D4  ECB9  F0FB         	call	_sprintf	;wreg free
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;main.c: 260:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5226  0101D8  0EF2               	movlw	low (STR_16+1)
  5227  0101DA  6EE6               	movwf	postinc1,c
  5228  0101DC  0EFB               	movlw	high (STR_16+1)
  5229  0101DE  6EE6               	movwf	postinc1,c
  5230  0101E0  0E02               	movlw	2
  5231  0101E2  6EE6               	movwf	postinc1,c
  5232  0101E4  0E03               	movlw	3
  5233  0101E6  6EE6               	movwf	postinc1,c
  5234  0101E8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5235  0101EC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5236  0101F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5237  0101F8  0E04               	movlw	4
  5238  0101FA  6EE6               	movwf	postinc1,c
  5239  0101FC  ECB9  F0FB         	call	_sprintf	;wreg free
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;main.c: 261:    update_lcd(0);
  5243  010200  0E00               	movlw	0
  5244  010202  6EE6               	movwf	postinc1,c
  5245  010204  EC6B  F0F4         	call	_update_lcd	;wreg free
  5246                           
  5247                           ;main.c: 262:    WaitMs(1000);
  5248  010208  0EE8               	movlw	232
  5249  01020A  6EE6               	movwf	postinc1,c
  5250  01020C  0E03               	movlw	3
  5251  01020E  6EE6               	movwf	postinc1,c
  5252  010210  EC07  F00F         	call	_WaitMs	;wreg free
  5253                           
  5254                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  5255  010214  0EFA               	movlw	250
  5256  010216  6EE6               	movwf	postinc1,c
  5257  010218  0E00               	movlw	0
  5258  01021A  6EE6               	movwf	postinc1,c
  5259  01021C  0E0A               	movlw	10
  5260  01021E  6EE6               	movwf	postinc1,c
  5261  010220  ECFA  F00D         	call	_StartTimer	;wreg free
  5262                           
  5263                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  5264  010224  0EC8               	movlw	200
  5265  010226  6EE6               	movwf	postinc1,c
  5266  010228  0E00               	movlw	0
  5267  01022A  6EE6               	movwf	postinc1,c
  5268  01022C  0E01               	movlw	1
  5269  01022E  6EE6               	movwf	postinc1,c
  5270  010230  ECFA  F00D         	call	_StartTimer	;wreg free
  5271                           
  5272                           ;main.c: 265:    StartTimer(TMR_INFO, 3000);
  5273  010234  0EB8               	movlw	184
  5274  010236  6EE6               	movwf	postinc1,c
  5275  010238  0E0B               	movlw	11
  5276  01023A  6EE6               	movwf	postinc1,c
  5277  01023C  0E07               	movlw	7
  5278  01023E  6EE6               	movwf	postinc1,c
  5279  010240  ECFA  F00D         	call	_StartTimer	;wreg free
  5280                           
  5281                           ;main.c: 266:    StartTimer(TMR_FLIPPER, 1500);
  5282  010244  0EDC               	movlw	220
  5283  010246  6EE6               	movwf	postinc1,c
  5284  010248  0E05               	movlw	5
  5285  01024A  6EE6               	movwf	postinc1,c
  5286  01024C  0E0B               	movlw	11
  5287  01024E  6EE6               	movwf	postinc1,c
  5288  010250  ECFA  F00D         	call	_StartTimer	;wreg free
  5289                           
  5290                           ;main.c: 267:    StartTimer(TMR_HELPDIS, 3000);
  5291  010254  0EB8               	movlw	184
  5292  010256  6EE6               	movwf	postinc1,c
  5293  010258  0E0B               	movlw	11
  5294  01025A  6EE6               	movwf	postinc1,c
  5295  01025C  0E09               	movlw	9
  5296  01025E  6EE6               	movwf	postinc1,c
  5297  010260  ECFA  F00D         	call	_StartTimer	;wreg free
  5298                           
  5299                           ;main.c: 269:    start_adc_scan();
  5300  010264  EC39  F00A         	call	_start_adc_scan	;wreg free
  5301                           
  5302                           ;main.c: 270:    start_switch_handler();
  5303  010268  EC38  F012         	call	_start_switch_handler	;wreg free
  5304                           
  5305                           ; BSR set to: 57
  5306                           ;main.c: 271:    WaitMs(1000);
  5307  01026C  0EE8               	movlw	232
  5308  01026E  6EE6               	movwf	postinc1,c
  5309  010270  0E03               	movlw	3
  5310  010272  6EE6               	movwf	postinc1,c
  5311  010274  EC07  F00F         	call	_WaitMs	;wreg free
  5312                           
  5313                           ;main.c: 276:    if (read_cal_data()) {
  5314  010278  EC71  F0EA         	call	_read_cal_data	;wreg free
  5315  01027C  502A               	movf	btemp^0,w,c
  5316  01027E  B4D8               	btfsc	status,2,c
  5317  010280  D03E               	goto	l17438
  5318                           
  5319                           ;main.c: 277:     update_cal_data();
  5320  010282  ECB3  F00B         	call	_update_cal_data	;wreg free
  5321                           
  5322                           ; BSR set to: 1
  5323                           ;main.c: 278:     if (update_hist_data(1, &C.hist[0]))
  5324  010286  0EB8               	movlw	low (_C+185)
  5325  010288  6EE6               	movwf	postinc1,c
  5326  01028A  0E09               	movlw	high (_C+185)
  5327  01028C  6EE6               	movwf	postinc1,c
  5328  01028E  0E01               	movlw	1
  5329  010290  6EE6               	movwf	postinc1,c
  5330  010292  ECDD  F007         	call	_update_hist_data	;wreg free
  5331  010296  502A               	movf	btemp^0,w,c
  5332  010298  B4D8               	btfsc	status,2,c
  5333  01029A  D01C               	goto	l17436
  5334                           
  5335                           ;main.c: 279:      set_time(C.hist[0].pclock);
  5336  01029C  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5337  0102A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5338  0102A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5339  0102AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5340  0102B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5341  0102B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5342  0102BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5343  0102C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5344  0102CA  006F FF7B FFE6     	movff	postinc2,postinc1
  5345  0102D0  ECEC  F00E         	call	_set_time	;wreg free
  5346  0102D4                     l17436:
  5347                           
  5348                           ;main.c: 281:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5349  0102D4  0EE1               	movlw	low STR_10
  5350  0102D6  6EE6               	movwf	postinc1,c
  5351  0102D8  0EFE               	movlw	high STR_10
  5352  0102DA  6EE6               	movwf	postinc1,c
  5353  0102DC  0E00               	movlw	0
  5354  0102DE  6EE6               	movwf	postinc1,c
  5355  0102E0  0E02               	movlw	2
  5356  0102E2  6EE6               	movwf	postinc1,c
  5357  0102E4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5358  0102E8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5359  0102EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5360  0102F4  0E04               	movlw	4
  5361  0102F6  6EE6               	movwf	postinc1,c
  5362  0102F8  ECB9  F0FB         	call	_sprintf	;wreg free
  5363                           
  5364                           ;main.c: 282:    } else {
  5365  0102FC  D014               	goto	l1462
  5366  0102FE                     l17438:
  5367                           
  5368                           ;main.c: 283:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5369  0102FE  0E35               	movlw	low STR_11
  5370  010300  6EE6               	movwf	postinc1,c
  5371  010302  0EFF               	movlw	high STR_11
  5372  010304  6EE6               	movwf	postinc1,c
  5373  010306  0E00               	movlw	0
  5374  010308  6EE6               	movwf	postinc1,c
  5375  01030A  0E02               	movlw	2
  5376  01030C  6EE6               	movwf	postinc1,c
  5377  01030E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5378  010312  0060  F0AB  FFE6   	movff	btemp,postinc1
  5379  010318  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5380  01031E  0E04               	movlw	4
  5381  010320  6EE6               	movwf	postinc1,c
  5382  010322  ECB9  F0FB         	call	_sprintf	;wreg free
  5383  010326                     l1462:
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;main.c: 285:    update_lcd(0);
  5387  010326  0E00               	movlw	0
  5388  010328  6EE6               	movwf	postinc1,c
  5389  01032A  EC6B  F0F4         	call	_update_lcd	;wreg free
  5390                           
  5391                           ;main.c: 286:    WaitMs(2000);
  5392  01032E  0ED0               	movlw	208
  5393  010330  6EE6               	movwf	postinc1,c
  5394  010332  0E07               	movlw	7
  5395  010334  6EE6               	movwf	postinc1,c
  5396  010336  EC07  F00F         	call	_WaitMs	;wreg free
  5397                           
  5398                           ;main.c: 288:    i_ror = 1;
  5399                           ;stkvar	_i_ror @ sp[(-17)+16]
  5400  01033A  0EFF               	movlw	-1
  5401  01033C  6AE3               	clrf	plusw1,c
  5402  01033E  2AE3               	incf	plusw1,f,c
  5403  010340                     l17444:
  5404                           
  5405                           ;main.c: 290:     calc_ror_data();
  5406  010340  EC61  F0EF         	call	_calc_ror_data	;wreg free
  5407                           
  5408                           ;main.c: 291:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  5409  010344  0E00               	movlw	0
  5410  010346  6EE6               	movwf	postinc1,c
  5411  010348  0E04               	movlw	4
  5412  01034A  6EE6               	movwf	postinc1,c
  5413  01034C  ECE6  F0C2         	call	_conv_raw_result	;wreg free
  5414  010350  0060  F0AB  FFE6   	movff	btemp,postinc1
  5415  010356  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5416  01035C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5417  010362  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5418  010368  0EBB               	movlw	low STR_12
  5419  01036A  6EE6               	movwf	postinc1,c
  5420  01036C  0EFD               	movlw	high STR_12
  5421  01036E  6EE6               	movwf	postinc1,c
  5422  010370  0E00               	movlw	0
  5423  010372  6EE6               	movwf	postinc1,c
  5424  010374  0E01               	movlw	1
  5425  010376  6EE6               	movwf	postinc1,c
  5426  010378  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5427  01037C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5428  010382  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5429  010388  0E08               	movlw	8
  5430  01038A  6EE6               	movwf	postinc1,c
  5431  01038C  ECB9  F0FB         	call	_sprintf	;wreg free
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;main.c: 292:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5435  010390  EE22  F16B         	lfsr	2,_C+108	;volatile
  5436  010394  006F FF7B FFE6     	movff	postinc2,postinc1
  5437  01039A  006F FF7B FFE6     	movff	postinc2,postinc1
  5438  0103A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5439  0103A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5440                           
  5441                           ;stkvar	_i_ror @ sp[(-21)+16]
  5442  0103AC  0EFB               	movlw	-5
  5443  0103AE  50E3               	movf	plusw1,w,c
  5444  0103B0  6EE6               	movwf	postinc1,c
  5445  0103B2  0E00               	movlw	0
  5446  0103B4  6EE6               	movwf	postinc1,c
  5447  0103B6  0E00               	movlw	0
  5448  0103B8  6EE6               	movwf	postinc1,c
  5449  0103BA  0E05               	movlw	5
  5450  0103BC  6EE6               	movwf	postinc1,c
  5451  0103BE  EC35  F0FD         	call	_spinners	;wreg free
  5452  0103C2  502A               	movf	btemp^0,w,c
  5453  0103C4  6EE6               	movwf	postinc1,c
  5454  0103C6  0E00               	movlw	0
  5455  0103C8  6EE6               	movwf	postinc1,c
  5456  0103CA  0E4E               	movlw	low STR_13
  5457  0103CC  6EE6               	movwf	postinc1,c
  5458  0103CE  0EFB               	movlw	high STR_13
  5459  0103D0  6EE6               	movwf	postinc1,c
  5460  0103D2  0E00               	movlw	0
  5461  0103D4  6EE6               	movwf	postinc1,c
  5462  0103D6  0E02               	movlw	2
  5463  0103D8  6EE6               	movwf	postinc1,c
  5464  0103DA  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5465  0103DE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5466  0103E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5467  0103EA  0E0C               	movlw	12
  5468  0103EC  6EE6               	movwf	postinc1,c
  5469  0103EE  ECB9  F0FB         	call	_sprintf	;wreg free
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;main.c: 293:     update_lcd(0);
  5473  0103F2  0E00               	movlw	0
  5474  0103F4  6EE6               	movwf	postinc1,c
  5475  0103F6  EC6B  F0F4         	call	_update_lcd	;wreg free
  5476                           
  5477                           ;main.c: 294:     clear_adc_scan();
  5478  0103FA  EC91  F013         	call	_clear_adc_scan	;wreg free
  5479                           
  5480                           ; BSR set to: 1
  5481                           ;main.c: 295:     start_adc_scan();
  5482  0103FE  EC39  F00A         	call	_start_adc_scan	;wreg free
  5483                           
  5484                           ;main.c: 296:     WaitMs(2000);
  5485  010402  0ED0               	movlw	208
  5486  010404  6EE6               	movwf	postinc1,c
  5487  010406  0E07               	movlw	7
  5488  010408  6EE6               	movwf	postinc1,c
  5489  01040A  EC07  F00F         	call	_WaitMs	;wreg free
  5490                           
  5491                           ;main.c: 299:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5492                           ;stkvar	_i_ror @ sp[(-17)+16]
  5493  01040E  0EFF               	movlw	-1
  5494  010410  006F FF8C  F035    	movff	plusw1,btemp+11
  5495  010416  2A35               	incf	(btemp+11)^0,f,c
  5496  010418  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5497  01041E  0635               	decf	(btemp+11)^0,f,c
  5498  010420  0E1E               	movlw	30
  5499  010422  6035               	cpfslt	(btemp+11)^0,c
  5500  010424  D01A               	goto	u17000
  5501  010426  EE22  F16B         	lfsr	2,_C+108	;volatile
  5502  01042A  006F FF7B FFE6     	movff	postinc2,postinc1
  5503  010430  006F FF7B FFE6     	movff	postinc2,postinc1
  5504  010436  006F FF7B FFE6     	movff	postinc2,postinc1
  5505  01043C  006F FF7B FFE6     	movff	postinc2,postinc1
  5506  010442  0E42               	movlw	66
  5507  010444  6EE6               	movwf	postinc1,c
  5508  010446  0E60               	movlw	96
  5509  010448  6EE6               	movwf	postinc1,c
  5510  01044A  0E65               	movlw	101
  5511  01044C  6EE6               	movwf	postinc1,c
  5512  01044E  0E3C               	movlw	60
  5513  010450  6EE6               	movwf	postinc1,c
  5514  010452  EC09  F0F3         	call	___flge	;wreg free
  5515  010456  A02A               	btfss	btemp& (0+255),0,c
  5516  010458  D773               	goto	l17444
  5517  01045A                     u17000:
  5518                           
  5519                           ;main.c: 301:    static_soc();
  5520  01045A  EC2C  F00B         	call	_static_soc	;wreg free
  5521                           
  5522                           ;main.c: 302:    init_bsoc();
  5523  01045E  ECCB  F0E1         	call	_init_bsoc	;wreg free
  5524                           
  5525                           ;main.c: 303:    set_load_relay_one(0);
  5526  010462  0E00               	movlw	0
  5527  010464  6EE6               	movwf	postinc1,c
  5528  010466  EC17  F013         	call	_set_load_relay_one	;wreg free
  5529                           
  5530                           ;main.c: 304:    set_load_relay_two(0);
  5531  01046A  0E00               	movlw	0
  5532  01046C  6EE6               	movwf	postinc1,c
  5533  01046E  EC0F  F013         	call	_set_load_relay_two	;wreg free
  5534                           
  5535                           ;main.c: 305:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5536  010472  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5537  010476  006F FF78  F034    	movff	postinc2,btemp+10
  5538  01047C  006F FF74  F035    	movff	postdec2,btemp+11
  5539  010482  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5540  010488  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5541  01048E  0E1D               	movlw	low STR_14
  5542  010490  6EE6               	movwf	postinc1,c
  5543  010492  0EFC               	movlw	high STR_14
  5544  010494  6EE6               	movwf	postinc1,c
  5545  010496  0E00               	movlw	0
  5546  010498  6EE6               	movwf	postinc1,c
  5547  01049A  0E00               	movlw	0
  5548  01049C  6EE6               	movwf	postinc1,c
  5549  01049E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5550  0104A2  0060  F0AB  FFE6   	movff	btemp,postinc1
  5551  0104A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5552  0104AE  0E06               	movlw	6
  5553  0104B0  6EE6               	movwf	postinc1,c
  5554  0104B2  ECB9  F0FB         	call	_sprintf	;wreg free
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;main.c: 306:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5558  0104B6  EE22  F18F         	lfsr	2,_C+144	;volatile
  5559  0104BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5560  0104C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5561  0104C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5562  0104CC  006F FF7B FFE6     	movff	postinc2,postinc1
  5563  0104D2  0EF9               	movlw	low STR_15
  5564  0104D4  6EE6               	movwf	postinc1,c
  5565  0104D6  0EFC               	movlw	high STR_15
  5566  0104D8  6EE6               	movwf	postinc1,c
  5567  0104DA  0E00               	movlw	0
  5568  0104DC  6EE6               	movwf	postinc1,c
  5569  0104DE  0E01               	movlw	1
  5570  0104E0  6EE6               	movwf	postinc1,c
  5571  0104E2  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5572  0104E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5573  0104EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5574  0104F2  0E08               	movlw	8
  5575  0104F4  6EE6               	movwf	postinc1,c
  5576  0104F6  ECB9  F0FB         	call	_sprintf	;wreg free
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;main.c: 307:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5580  0104FA  0EF1               	movlw	low STR_16
  5581  0104FC  6EE6               	movwf	postinc1,c
  5582  0104FE  0EFB               	movlw	high STR_16
  5583  010500  6EE6               	movwf	postinc1,c
  5584  010502  0E00               	movlw	0
  5585  010504  6EE6               	movwf	postinc1,c
  5586  010506  0E02               	movlw	2
  5587  010508  6EE6               	movwf	postinc1,c
  5588  01050A  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5589  01050E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5590  010514  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5591  01051A  0E04               	movlw	4
  5592  01051C  6EE6               	movwf	postinc1,c
  5593  01051E  ECB9  F0FB         	call	_sprintf	;wreg free
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;main.c: 308:    update_lcd(0);
  5597  010522  0E00               	movlw	0
  5598  010524  6EE6               	movwf	postinc1,c
  5599  010526  EC6B  F0F4         	call	_update_lcd	;wreg free
  5600                           
  5601                           ;main.c: 309:    WaitMs(2000);
  5602  01052A  0ED0               	movlw	208
  5603  01052C  6EE6               	movwf	postinc1,c
  5604  01052E  0E07               	movlw	7
  5605  010530  6EE6               	movwf	postinc1,c
  5606  010532  EC07  F00F         	call	_WaitMs	;wreg free
  5607                           
  5608                           ;main.c: 310:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5609  010536  0EFA               	movlw	low STR_17
  5610  010538  6EE6               	movwf	postinc1,c
  5611  01053A  0EFD               	movlw	high STR_17
  5612  01053C  6EE6               	movwf	postinc1,c
  5613  01053E  0E00               	movlw	0
  5614  010540  6EE6               	movwf	postinc1,c
  5615  010542  0E00               	movlw	0
  5616  010544  6EE6               	movwf	postinc1,c
  5617  010546  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5618  01054A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5619  010550  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5620  010556  0E04               	movlw	4
  5621  010558  6EE6               	movwf	postinc1,c
  5622  01055A  ECB9  F0FB         	call	_sprintf	;wreg free
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;main.c: 311:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5626  01055E  0E0F               	movlw	low STR_18
  5627  010560  6EE6               	movwf	postinc1,c
  5628  010562  0EFE               	movlw	high STR_18
  5629  010564  6EE6               	movwf	postinc1,c
  5630  010566  0E00               	movlw	0
  5631  010568  6EE6               	movwf	postinc1,c
  5632  01056A  0E01               	movlw	1
  5633  01056C  6EE6               	movwf	postinc1,c
  5634  01056E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5635  010572  0060  F0AB  FFE6   	movff	btemp,postinc1
  5636  010578  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5637  01057E  0E04               	movlw	4
  5638  010580  6EE6               	movwf	postinc1,c
  5639  010582  ECB9  F0FB         	call	_sprintf	;wreg free
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;main.c: 312:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5643  010586  0EF6               	movlw	low STR_19
  5644  010588  6EE6               	movwf	postinc1,c
  5645  01058A  0EFE               	movlw	high STR_19
  5646  01058C  6EE6               	movwf	postinc1,c
  5647  01058E  0E00               	movlw	0
  5648  010590  6EE6               	movwf	postinc1,c
  5649  010592  0E02               	movlw	2
  5650  010594  6EE6               	movwf	postinc1,c
  5651  010596  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5652  01059A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5653  0105A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5654  0105A6  0E04               	movlw	4
  5655  0105A8  6EE6               	movwf	postinc1,c
  5656  0105AA  ECB9  F0FB         	call	_sprintf	;wreg free
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;main.c: 313:    update_lcd(0);
  5660  0105AE  0E00               	movlw	0
  5661  0105B0  6EE6               	movwf	postinc1,c
  5662  0105B2  EC6B  F0F4         	call	_update_lcd	;wreg free
  5663                           
  5664                           ;main.c: 314:    uint16_t i_esr = 1;
  5665  0105B6  0E01               	movlw	1
  5666  0105B8  6E34               	movwf	(btemp+10)^0,c
  5667  0105BA  0E00               	movlw	0
  5668  0105BC  6E35               	movwf	(btemp+11)^0,c
  5669                           
  5670                           ;stkvar	_i_esr @ sp[(-17)+8]
  5671  0105BE  0EF7               	movlw	-9
  5672  0105C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5673  0105C6  0EF8               	movlw	-8
  5674  0105C8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5675                           
  5676                           ;main.c: 316:    float esr_temp;;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5677  0105CE  D06D               	goto	l17504
  5678  0105D0                     l17492:
  5679                           
  5680                           ;main.c: 318:     WaitMs(110);
  5681  0105D0  0E6E               	movlw	110
  5682  0105D2  6EE6               	movwf	postinc1,c
  5683  0105D4  0E00               	movlw	0
  5684  0105D6  6EE6               	movwf	postinc1,c
  5685  0105D8  EC07  F00F         	call	_WaitMs	;wreg free
  5686                           
  5687                           ;main.c: 319:     shape = (uint8_t) fabsf(esr_temp);
  5688                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5689  0105DC  0EF3               	movlw	-13
  5690  0105DE  006F FF8F FFE6     	movff	plusw1,postinc1
  5691  0105E4  006F FF8F FFE6     	movff	plusw1,postinc1
  5692  0105EA  006F FF8F FFE6     	movff	plusw1,postinc1
  5693  0105F0  006F FF8F FFE6     	movff	plusw1,postinc1
  5694  0105F6  EC96  F002         	call	_fabsf	;wreg free
  5695  0105FA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5696  010600  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5697  010606  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5698  01060C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5699  010612  EC9D  F0F1         	call	___fltol	;wreg free
  5700  010616  0060  F0A8  F035   	movff	btemp,btemp+11
  5701                           
  5702                           ;stkvar	_shape @ sp[(-17)+10]
  5703  01061C  0EF9               	movlw	-7
  5704  01061E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5705                           
  5706                           ;main.c: 320:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5707  010624  0E00               	movlw	0
  5708  010626  6EE6               	movwf	postinc1,c
  5709                           
  5710                           ;stkvar	_shape @ sp[(-18)+10]
  5711  010628  0EF8               	movlw	-8
  5712  01062A  50E3               	movf	plusw1,w,c
  5713  01062C  6EE6               	movwf	postinc1,c
  5714  01062E  EC35  F0FD         	call	_spinners	;wreg free
  5715  010632  502A               	movf	btemp^0,w,c
  5716  010634  6EE6               	movwf	postinc1,c
  5717  010636  0E00               	movlw	0
  5718  010638  6EE6               	movwf	postinc1,c
  5719  01063A  0E00               	movlw	0
  5720  01063C  6EE6               	movwf	postinc1,c
  5721  01063E  0E00               	movlw	0
  5722  010640  6EE6               	movwf	postinc1,c
  5723  010642  EC35  F0FD         	call	_spinners	;wreg free
  5724  010646  502A               	movf	btemp^0,w,c
  5725  010648  6EE6               	movwf	postinc1,c
  5726  01064A  0E00               	movlw	0
  5727  01064C  6EE6               	movwf	postinc1,c
  5728  01064E  0EA2               	movlw	low STR_20
  5729  010650  6EE6               	movwf	postinc1,c
  5730  010652  0EFE               	movlw	high STR_20
  5731  010654  6EE6               	movwf	postinc1,c
  5732  010656  0E00               	movlw	0
  5733  010658  6EE6               	movwf	postinc1,c
  5734  01065A  0E02               	movlw	2
  5735  01065C  6EE6               	movwf	postinc1,c
  5736  01065E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5737  010662  0060  F0AB  FFE6   	movff	btemp,postinc1
  5738  010668  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5739  01066E  0E08               	movlw	8
  5740  010670  6EE6               	movwf	postinc1,c
  5741  010672  ECB9  F0FB         	call	_sprintf	;wreg free
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;main.c: 321:     update_lcd(0);
  5745  010676  0E00               	movlw	0
  5746  010678  6EE6               	movwf	postinc1,c
  5747  01067A  EC6B  F0F4         	call	_update_lcd	;wreg free
  5748                           
  5749                           ;main.c: 323:     if (i_esr++ > 512)
  5750                           ;stkvar	_i_esr @ sp[(-17)+8]
  5751  01067E  50E1               	movf	fsr1l,w,c
  5752  010680  0FF7               	addlw	-9
  5753  010682  6ED9               	movwf	fsr2l,c
  5754  010684  50E2               	movf	fsr1h,w,c
  5755  010686  6EDA               	movwf	fsr2h,c
  5756  010688  0EFF               	movlw	255
  5757  01068A  22DA               	addwfc	fsr2h,f,c
  5758  01068C  006F FF7C  F034    	movff	indf2,btemp+10
  5759  010692  0E01               	movlw	1
  5760  010694  26DE               	addwf	postinc2,f,c
  5761  010696  006F FF7C  F035    	movff	indf2,btemp+11
  5762  01069C  0E00               	movlw	0
  5763  01069E  22DD               	addwfc	postdec2,f,c
  5764  0106A0  0434               	decf	(btemp+10)^0,w,c
  5765  0106A2  0E02               	movlw	2
  5766  0106A4  5835               	subwfb	(btemp+11)^0,w,c
  5767  0106A6  B0D8               	btfsc	status,0,c
  5768  0106A8  D017               	goto	u17020
  5769  0106AA                     l17504:
  5770                           
  5771                           ;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0) {
  5772  0106AA  0E00               	movlw	0
  5773  0106AC  6EE6               	movwf	postinc1,c
  5774  0106AE  ECD9  F0D8         	call	_esr_check	;wreg free
  5775                           
  5776                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5777  0106B2  0EF3               	movlw	-13
  5778  0106B4  0060  F0AB  FFE3   	movff	btemp,plusw1
  5779  0106BA  0EF4               	movlw	-12
  5780  0106BC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  5781  0106C2  0EF5               	movlw	-11
  5782  0106C4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  5783  0106CA  0EF6               	movlw	-10
  5784  0106CC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  5785  0106D2  0EF6               	movlw	-10
  5786  0106D4  BEE3               	btfsc	plusw1,7,c
  5787  0106D6  D77C               	goto	l17492
  5788  0106D8                     u17020:
  5789                           
  5790                           ;main.c: 326:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5791  0106D8  EE22  F187         	lfsr	2,_C+136	;volatile
  5792  0106DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5793  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5794  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5795  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5796  0106F4  0E07               	movlw	low STR_21
  5797  0106F6  6EE6               	movwf	postinc1,c
  5798  0106F8  0EFC               	movlw	high STR_21
  5799  0106FA  6EE6               	movwf	postinc1,c
  5800  0106FC  0E00               	movlw	0
  5801  0106FE  6EE6               	movwf	postinc1,c
  5802  010700  0E00               	movlw	0
  5803  010702  6EE6               	movwf	postinc1,c
  5804  010704  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5805  010708  0060  F0AB  FFE6   	movff	btemp,postinc1
  5806  01070E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5807  010714  0E08               	movlw	8
  5808  010716  6EE6               	movwf	postinc1,c
  5809  010718  ECB9  F0FB         	call	_sprintf	;wreg free
  5810                           
  5811                           ;main.c: 327:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5812  01071C  EE22  F219         	lfsr	2,_C+282	;volatile
  5813  010720  006F FF7B FFE6     	movff	postinc2,postinc1
  5814  010726  006F FF7B FFE6     	movff	postinc2,postinc1
  5815  01072C  006F FF7B FFE6     	movff	postinc2,postinc1
  5816  010732  006F FF7B FFE6     	movff	postinc2,postinc1
  5817  010738  EE22  F225         	lfsr	2,_C+294	;volatile
  5818  01073C  006F FF7B FFE6     	movff	postinc2,postinc1
  5819  010742  006F FF7B FFE6     	movff	postinc2,postinc1
  5820  010748  006F FF7B FFE6     	movff	postinc2,postinc1
  5821  01074E  006F FF7B FFE6     	movff	postinc2,postinc1
  5822  010754  0E1A               	movlw	low STR_22
  5823  010756  6EE6               	movwf	postinc1,c
  5824  010758  0EFB               	movlw	high STR_22
  5825  01075A  6EE6               	movwf	postinc1,c
  5826  01075C  0E00               	movlw	0
  5827  01075E  6EE6               	movwf	postinc1,c
  5828  010760  0E01               	movlw	1
  5829  010762  6EE6               	movwf	postinc1,c
  5830  010764  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5831  010768  0060  F0AB  FFE6   	movff	btemp,postinc1
  5832  01076E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5833  010774  0E0C               	movlw	12
  5834  010776  6EE6               	movwf	postinc1,c
  5835  010778  ECB9  F0FB         	call	_sprintf	;wreg free
  5836                           
  5837                           ;main.c: 328:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5838  01077C  EE22  F21D         	lfsr	2,_C+286	;volatile
  5839  010780  006F FF7B FFE6     	movff	postinc2,postinc1
  5840  010786  006F FF7B FFE6     	movff	postinc2,postinc1
  5841  01078C  006F FF7B FFE6     	movff	postinc2,postinc1
  5842  010792  006F FF7B FFE6     	movff	postinc2,postinc1
  5843  010798  EE22  F229         	lfsr	2,_C+298	;volatile
  5844  01079C  006F FF7B FFE6     	movff	postinc2,postinc1
  5845  0107A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5846  0107A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5847  0107AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5848  0107B4  0E34               	movlw	low STR_23
  5849  0107B6  6EE6               	movwf	postinc1,c
  5850  0107B8  0EFB               	movlw	high STR_23
  5851  0107BA  6EE6               	movwf	postinc1,c
  5852  0107BC  0E00               	movlw	0
  5853  0107BE  6EE6               	movwf	postinc1,c
  5854  0107C0  0E02               	movlw	2
  5855  0107C2  6EE6               	movwf	postinc1,c
  5856  0107C4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  5857  0107C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5858  0107CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5859  0107D4  0E0C               	movlw	12
  5860  0107D6  6EE6               	movwf	postinc1,c
  5861  0107D8  ECB9  F0FB         	call	_sprintf	;wreg free
  5862                           
  5863                           ;main.c: 329:    update_lcd(0);
  5864  0107DC  0E00               	movlw	0
  5865  0107DE  6EE6               	movwf	postinc1,c
  5866  0107E0  EC6B  F0F4         	call	_update_lcd	;wreg free
  5867                           
  5868                           ;main.c: 330:    WaitMs(4000);
  5869  0107E4  0EA0               	movlw	160
  5870  0107E6  6EE6               	movwf	postinc1,c
  5871  0107E8  0E0F               	movlw	15
  5872  0107EA  6EE6               	movwf	postinc1,c
  5873  0107EC  EC07  F00F         	call	_WaitMs	;wreg free
  5874                           
  5875                           ;main.c: 331:    V.sensor_set = get_switch(SCALIB);
  5876  0107F0  0E04               	movlw	4
  5877  0107F2  6EE6               	movwf	postinc1,c
  5878  0107F4  EC03  F010         	call	_get_switch	;wreg free
  5879  0107F8  502A               	movf	btemp^0,w,c
  5880  0107FA  B4D8               	btfsc	status,2,c
  5881  0107FC  D002               	goto	u17030
  5882  0107FE  0E01               	movlw	1
  5883  010800  D001               	goto	u17040
  5884  010802                     u17030:
  5885  010802  0E00               	movlw	0
  5886  010804                     u17040:
  5887  010804  0102               	movlb	2	; () banked
  5888  010806  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  5889                           
  5890                           ; BSR set to: 2
  5891                           ;main.c: 332:    WaitMs(1000);
  5892  010808  0EE8               	movlw	232
  5893  01080A  6EE6               	movwf	postinc1,c
  5894  01080C  0E03               	movlw	3
  5895  01080E  6EE6               	movwf	postinc1,c
  5896  010810  EC07  F00F         	call	_WaitMs	;wreg free
  5897                           
  5898                           ;main.c: 333:    if (V.sensor_set && get_switch(SCALIB)) {
  5899  010814  0102               	movlb	2	; () banked
  5900  010816  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5901  010818  B4D8               	btfsc	status,2,c
  5902  01081A  D00F               	goto	l17522
  5903                           
  5904                           ; BSR set to: 2
  5905  01081C  0E04               	movlw	4
  5906  01081E  6EE6               	movwf	postinc1,c
  5907  010820  EC03  F010         	call	_get_switch	;wreg free
  5908  010824  502A               	movf	btemp^0,w,c
  5909  010826  B4D8               	btfsc	status,2,c
  5910  010828  D008               	goto	l17522
  5911                           
  5912                           ;main.c: 334:     current_sensor_cal();
  5913  01082A  EC84  F0C7         	call	_current_sensor_cal	;wreg free
  5914                           
  5915                           ;main.c: 335:     WaitMs(4000);
  5916  01082E  0EA0               	movlw	160
  5917  010830  6EE6               	movwf	postinc1,c
  5918  010832  0E0F               	movlw	15
  5919  010834  6EE6               	movwf	postinc1,c
  5920  010836  EC07  F00F         	call	_WaitMs	;wreg free
  5921  01083A                     l17522:
  5922                           
  5923                           ;main.c: 337:    V.sensor_set = 0;
  5924  01083A  0102               	movlb	2	; () banked
  5925  01083C  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  5926                           
  5927                           ; BSR set to: 2
  5928                           ;main.c: 338:    V.system_stable = 1;
  5929  01083E  0E01               	movlw	1
  5930  010840  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5931                           
  5932                           ;main.c: 339:    break;
  5933  010842  D01C               	goto	l17530
  5934  010844                     l1475:
  5935                           
  5936                           ; BSR set to: 2
  5937                           ;main.c: 345:    P.SYSTEM_STABLE = 1;
  5938  010844  0100               	movlb	0	; () banked
  5939  010846  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  5940                           
  5941                           ;main.c: 346:    break;
  5942  010848  D019               	goto	l17530
  5943  01084A                     l1477:
  5944                           
  5945                           ; BSR set to: 2
  5946                           ;main.c: 349:    V.ui_state = UI_STATE_INIT;
  5947  01084A  6B07               	clrf	_V& (0+255),b	;volatile
  5948                           
  5949                           ;main.c: 350:    break;
  5950  01084C  D017               	goto	l17530
  5951  01084E                     l17528:
  5952  01084E  0102               	movlb	2	; () banked
  5953  010850  5107               	movf	_V& (0+255),w,b	;volatile
  5954  010852  6E34               	movwf	(btemp+10)^0,c
  5955  010854  6A35               	clrf	(btemp+11)^0,c
  5956                           
  5957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 1, Range of values is 0 to 0
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte            4     3 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  010856  5035               	movf	(btemp+11)^0,w,c
  5965  010858  0A00               	xorlw	0	; case 0
  5966  01085A  A4D8               	btfss	status,2,c
  5967  01085C  D7F6               	goto	l1477
  5968                           
  5969                           ; BSR set to: 2
  5970                           ; Switch size 1, requested type "simple"
  5971                           ; Number of cases is 5, Range of values is 0 to 5
  5972                           ; switch strategies available:
  5973                           ; Name         Instructions Cycles
  5974                           ; simple_byte           16     9 (average)
  5975                           ;	Chosen strategy is simple_byte
  5976  01085E  5034               	movf	(btemp+10)^0,w,c
  5977  010860  0A00               	xorlw	0	; case 0
  5978  010862  B4D8               	btfsc	status,2,c
  5979  010864  D409               	goto	l17374
  5980  010866  0A01               	xorlw	1	; case 1
  5981  010868  B4D8               	btfsc	status,2,c
  5982  01086A  D008               	goto	l17530
  5983  01086C  0A02               	xorlw	2	; case 3
  5984  01086E  B4D8               	btfsc	status,2,c
  5985  010870  D005               	goto	l17530
  5986  010872  0A07               	xorlw	7	; case 4
  5987  010874  B4D8               	btfsc	status,2,c
  5988  010876  D7E6               	goto	l1475
  5989  010878  0A01               	xorlw	1	; case 5
  5990  01087A  D7E7               	goto	l1477
  5991  01087C                     l17530:
  5992                           
  5993                           ;main.c: 353:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5994  01087C  0E01               	movlw	1
  5995  01087E  6EE6               	movwf	postinc1,c
  5996  010880  EC6F  F010         	call	_TimerDone	;wreg free
  5997  010884  502A               	movf	btemp^0,w,c
  5998  010886  B4D8               	btfsc	status,2,c
  5999  010888  D013               	goto	l17542
  6000  01088A  EC77  F013         	call	_check_adc_scan	;wreg free
  6001  01088E  502A               	movf	btemp^0,w,c
  6002  010890  B4D8               	btfsc	status,2,c
  6003  010892  D00E               	goto	l17542
  6004                           
  6005                           ;main.c: 357:    convert_adc_data();
  6006  010894  ECDF  F001         	call	_convert_adc_data	;wreg free
  6007                           
  6008                           ;main.c: 361:    clear_adc_scan();
  6009  010898  EC91  F013         	call	_clear_adc_scan	;wreg free
  6010                           
  6011                           ; BSR set to: 1
  6012                           ;main.c: 362:    start_adc_scan();
  6013  01089C  EC39  F00A         	call	_start_adc_scan	;wreg free
  6014                           
  6015                           ;main.c: 363:    StartTimer(TMR_ADC, 200);
  6016  0108A0  0EC8               	movlw	200
  6017  0108A2  6EE6               	movwf	postinc1,c
  6018  0108A4  0E00               	movlw	0
  6019  0108A6  6EE6               	movwf	postinc1,c
  6020  0108A8  0E01               	movlw	1
  6021  0108AA  6EE6               	movwf	postinc1,c
  6022  0108AC  ECFA  F00D         	call	_StartTimer	;wreg free
  6023  0108B0                     l17542:
  6024                           
  6025                           ;main.c: 366:   if (TimerDone(TMR_DISPLAY)) {
  6026  0108B0  0E0A               	movlw	10
  6027  0108B2  6EE6               	movwf	postinc1,c
  6028  0108B4  EC6F  F010         	call	_TimerDone	;wreg free
  6029  0108B8  502A               	movf	btemp^0,w,c
  6030  0108BA  B4D8               	btfsc	status,2,c
  6031  0108BC  EF20  F08A         	goto	l17652
  6032                           
  6033                           ;main.c: 367:    if (TimerDone(TMR_HELPDIS)) {
  6034  0108C0  0E09               	movlw	9
  6035  0108C2  6EE6               	movwf	postinc1,c
  6036  0108C4  EC6F  F010         	call	_TimerDone	;wreg free
  6037  0108C8  502A               	movf	btemp^0,w,c
  6038  0108CA  B4D8               	btfsc	status,2,c
  6039  0108CC  D004               	goto	l17548
  6040                           
  6041                           ;main.c: 368:     set_display_info(DIS_STR);
  6042  0108CE  0E00               	movlw	0
  6043  0108D0  6EE6               	movwf	postinc1,c
  6044  0108D2  EC85  F012         	call	_set_display_info	;wreg free
  6045  0108D6                     l17548:
  6046                           
  6047                           ;main.c: 370:    pclock = time(((void*)0));
  6048  0108D6  0E00               	movlw	0
  6049  0108D8  6EE6               	movwf	postinc1,c
  6050  0108DA  0E00               	movlw	0
  6051  0108DC  6EE6               	movwf	postinc1,c
  6052  0108DE  ECFD  F00A         	call	_time	;wreg free
  6053  0108E2  52E5               	movf	postdec1,f,c
  6054  0108E4  006F FF9C  F041    	movff	indf1,btemp+23
  6055  0108EA  52E5               	movf	postdec1,f,c
  6056  0108EC  006F FF9C  F040    	movff	indf1,btemp+22
  6057  0108F2  52E5               	movf	postdec1,f,c
  6058  0108F4  006F FF9C  F03F    	movff	indf1,btemp+21
  6059  0108FA  52E5               	movf	postdec1,f,c
  6060  0108FC  006F FF9C  F03E    	movff	indf1,btemp+20
  6061  010902  52E5               	movf	postdec1,f,c
  6062  010904  006F FF9C  F03D    	movff	indf1,btemp+19
  6063  01090A  52E5               	movf	postdec1,f,c
  6064  01090C  006F FF9C  F03C    	movff	indf1,btemp+18
  6065  010912  52E5               	movf	postdec1,f,c
  6066  010914  006F FF9C  F03B    	movff	indf1,btemp+17
  6067  01091A  52E5               	movf	postdec1,f,c
  6068  01091C  006F FF9C  F03A    	movff	indf1,btemp+16
  6069  010922  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6070  010928  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6071  01092E  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6072  010934  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6073  01093A  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6074  010940  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6075  010946  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6076  01094C  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6077                           
  6078                           ; BSR set to: 57
  6079                           ;main.c: 371:    t_mbmc = localtime(&pclock);
  6080  010952  0EDA               	movlw	_pclock& (0+255)
  6081  010954  6EE6               	movwf	postinc1,c
  6082  010956  ECC7  F012         	call	_localtime	;wreg free
  6083  01095A  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6084  010960  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6085                           
  6086                           ;main.c: 372:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6087  010966  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6088  01096C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6089  010972  EC5B  F0C0         	call	_asctime	;wreg free
  6090  010976  0060  F0AB  FFE6   	movff	btemp,postinc1
  6091  01097C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6092  010982  0E78               	movlw	low (STR_72+5)
  6093  010984  6EE6               	movwf	postinc1,c
  6094  010986  0EFF               	movlw	high (STR_72+5)
  6095  010988  6EE6               	movwf	postinc1,c
  6096  01098A  0E00               	movlw	0
  6097  01098C  6EE6               	movwf	postinc1,c
  6098  01098E  0E03               	movlw	3
  6099  010990  6EE6               	movwf	postinc1,c
  6100  010992  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6101  010996  0060  F0AB  FFE6   	movff	btemp,postinc1
  6102  01099C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6103  0109A2  0E06               	movlw	6
  6104  0109A4  6EE6               	movwf	postinc1,c
  6105  0109A6  ECB9  F0FB         	call	_sprintf	;wreg free
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;main.c: 373:    calc_model_data();
  6109  0109AA  ECBE  F0C9         	call	_calc_model_data	;wreg free
  6110                           
  6111                           ; BSR set to: 57
  6112                           ;main.c: 374:    if (C.dupdate) {
  6113  0109AE  EE22  F22E         	lfsr	2,_C+303	;volatile
  6114  0109B2  50DF               	movf	indf2,w,c
  6115  0109B4  B4D8               	btfsc	status,2,c
  6116  0109B6  D0A4               	goto	l17578
  6117                           
  6118                           ; BSR set to: 57
  6119                           ;main.c: 375:     C.dupdate = 0;
  6120  0109B8  0E00               	movlw	0
  6121  0109BA  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6122                           
  6123                           ;main.c: 376:     set_hist_flag();
  6124  0109C0  EC8B  F013         	call	_set_hist_flag	;wreg free
  6125                           
  6126                           ; BSR set to: 1
  6127                           ;main.c: 377:     load_hist_data();
  6128  0109C4  EC9E  F0E0         	call	_load_hist_data	;wreg free
  6129                           
  6130                           ; BSR set to: 57
  6131                           ;main.c: 378:     update_hist_data(0, &C.hist[0]);
  6132  0109C8  0EB8               	movlw	low (_C+185)
  6133  0109CA  6EE6               	movwf	postinc1,c
  6134  0109CC  0E09               	movlw	high (_C+185)
  6135  0109CE  6EE6               	movwf	postinc1,c
  6136  0109D0  0E00               	movlw	0
  6137  0109D2  6EE6               	movwf	postinc1,c
  6138  0109D4  ECDD  F007         	call	_update_hist_data	;wreg free
  6139                           
  6140                           ;main.c: 379:     write_cal_data();
  6141  0109D8  ECC8  F0F5         	call	_write_cal_data	;wreg free
  6142                           
  6143                           ;main.c: 380:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved ");
  6144  0109DC  0E4A               	movlw	low STR_25
  6145  0109DE  6EE6               	movwf	postinc1,c
  6146  0109E0  0EFF               	movlw	high STR_25
  6147  0109E2  6EE6               	movwf	postinc1,c
  6148  0109E4  0E00               	movlw	0
  6149  0109E6  6EE6               	movwf	postinc1,c
  6150  0109E8  0E00               	movlw	0
  6151  0109EA  6EE6               	movwf	postinc1,c
  6152  0109EC  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6153  0109F0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6154  0109F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6155  0109FC  0E04               	movlw	4
  6156  0109FE  6EE6               	movwf	postinc1,c
  6157  010A00  ECB9  F0FB         	call	_sprintf	;wreg free
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;main.c: 381:     sprintf(get_vterm_ptr(1, 0), "To EEPROM           ");
  6161  010A04  0EE5               	movlw	low STR_26
  6162  010A06  6EE6               	movwf	postinc1,c
  6163  010A08  0EFD               	movlw	high STR_26
  6164  010A0A  6EE6               	movwf	postinc1,c
  6165  010A0C  0E00               	movlw	0
  6166  010A0E  6EE6               	movwf	postinc1,c
  6167  010A10  0E01               	movlw	1
  6168  010A12  6EE6               	movwf	postinc1,c
  6169  010A14  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6170  010A18  0060  F0AB  FFE6   	movff	btemp,postinc1
  6171  010A1E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6172  010A24  0E04               	movlw	4
  6173  010A26  6EE6               	movwf	postinc1,c
  6174  010A28  ECB9  F0FB         	call	_sprintf	;wreg free
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;main.c: 382:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu      ", time(((void*)0)),
      +                           C.hist[0].updates);
  6178  010A2C  EE22  F1D9         	lfsr	2,_C+218	;volatile
  6179  010A30  006F FF7B FFE6     	movff	postinc2,postinc1
  6180  010A36  006F FF7B FFE6     	movff	postinc2,postinc1
  6181  010A3C  006F FF7B FFE6     	movff	postinc2,postinc1
  6182  010A42  006F FF7B FFE6     	movff	postinc2,postinc1
  6183  010A48  0E00               	movlw	0
  6184  010A4A  6EE6               	movwf	postinc1,c
  6185  010A4C  0E00               	movlw	0
  6186  010A4E  6EE6               	movwf	postinc1,c
  6187  010A50  ECFD  F00A         	call	_time	;wreg free
  6188  010A54  52E5               	movf	postdec1,f,c
  6189  010A56  006F FF9C  F041    	movff	indf1,btemp+23
  6190  010A5C  52E5               	movf	postdec1,f,c
  6191  010A5E  006F FF9C  F040    	movff	indf1,btemp+22
  6192  010A64  52E5               	movf	postdec1,f,c
  6193  010A66  006F FF9C  F03F    	movff	indf1,btemp+21
  6194  010A6C  52E5               	movf	postdec1,f,c
  6195  010A6E  006F FF9C  F03E    	movff	indf1,btemp+20
  6196  010A74  52E5               	movf	postdec1,f,c
  6197  010A76  006F FF9C  F03D    	movff	indf1,btemp+19
  6198  010A7C  52E5               	movf	postdec1,f,c
  6199  010A7E  006F FF9C  F03C    	movff	indf1,btemp+18
  6200  010A84  52E5               	movf	postdec1,f,c
  6201  010A86  006F FF9C  F03B    	movff	indf1,btemp+17
  6202  010A8C  52E5               	movf	postdec1,f,c
  6203  010A8E  006F FF9C  F03A    	movff	indf1,btemp+16
  6204  010A94  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6205  010A9A  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6206  010AA0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6207  010AA6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6208  010AAC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6209  010AB2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6210  010AB8  0060  F103  FFE6   	movff	btemp+22,postinc1
  6211  010ABE  0060  F107  FFE6   	movff	btemp+23,postinc1
  6212  010AC4  0EB7               	movlw	low STR_27
  6213  010AC6  6EE6               	movwf	postinc1,c
  6214  010AC8  0EFE               	movlw	high STR_27
  6215  010ACA  6EE6               	movwf	postinc1,c
  6216  010ACC  0E00               	movlw	0
  6217  010ACE  6EE6               	movwf	postinc1,c
  6218  010AD0  0E02               	movlw	2
  6219  010AD2  6EE6               	movwf	postinc1,c
  6220  010AD4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6221  010AD8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6222  010ADE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6223  010AE4  0E10               	movlw	16
  6224  010AE6  6EE6               	movwf	postinc1,c
  6225  010AE8  ECB9  F0FB         	call	_sprintf	;wreg free
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;main.c: 383:     update_lcd(0);
  6229  010AEC  0E00               	movlw	0
  6230  010AEE  6EE6               	movwf	postinc1,c
  6231  010AF0  EC6B  F0F4         	call	_update_lcd	;wreg free
  6232                           
  6233                           ;main.c: 384:     WaitMs(2000);
  6234  010AF4  0ED0               	movlw	208
  6235  010AF6  6EE6               	movwf	postinc1,c
  6236  010AF8  0E07               	movlw	7
  6237  010AFA  6EE6               	movwf	postinc1,c
  6238  010AFC  EC07  F00F         	call	_WaitMs	;wreg free
  6239  010B00                     l17578:
  6240                           
  6241                           ;main.c: 392:     hid_display(&H);
  6242  010B00  0E9B               	movlw	low _H
  6243  010B02  6EE6               	movwf	postinc1,c
  6244  010B04  0E01               	movlw	high _H
  6245  010B06  6EE6               	movwf	postinc1,c
  6246  010B08  EC58  F0E7         	call	_hid_display	;wreg free
  6247                           
  6248                           ;main.c: 393:     switch (H.hid_display) {
  6249  010B0C  EFB1  F089         	goto	l17622
  6250  010B10                     l1485:
  6251                           
  6252                           ; BSR set to: 1
  6253                           ;main.c: 395:      V.calib = 0;
  6254  010B10  0102               	movlb	2	; () banked
  6255  010B12  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6256                           
  6257                           ; BSR set to: 2
  6258                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  6259  010B14  EE22  F22D         	lfsr	2,_C+302	;volatile
  6260  010B18  50DF               	movf	indf2,w,c
  6261  010B1A  A4D8               	btfss	status,2,c
  6262  010B1C  D002               	goto	l17584
  6263                           
  6264                           ; BSR set to: 2
  6265  010B1E  0E20               	movlw	32
  6266  010B20  D001               	goto	L1
  6267  010B22                     l17584:
  6268                           
  6269                           ; BSR set to: 2
  6270  010B22  0E44               	movlw	68
  6271  010B24                     L1:
  6272  010B24  6E34               	movwf	(btemp+10)^0,c
  6273  010B26  0E00               	movlw	0
  6274  010B28  6E35               	movwf	(btemp+11)^0,c
  6275                           
  6276                           ;stkvar	_main$4031 @ sp[(-17)+2]
  6277  010B2A  0EF1               	movlw	-15
  6278  010B2C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6279  010B32  0EF2               	movlw	-14
  6280  010B34  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6281                           
  6282                           ; BSR set to: 2
  6283  010B3A  EE22  F17B         	lfsr	2,_C+124	;volatile
  6284  010B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6285  010B44  006F FF7B FFE6     	movff	postinc2,postinc1
  6286  010B4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6287  010B50  006F FF7B FFE6     	movff	postinc2,postinc1
  6288                           
  6289                           ;stkvar	_main$4031 @ sp[(-21)+2]
  6290  010B56  0EED               	movlw	-19
  6291  010B58  006F FF8F FFE6     	movff	plusw1,postinc1
  6292  010B5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6293  010B64  0EE3               	movlw	low STR_31
  6294  010B66  6EE6               	movwf	postinc1,c
  6295  010B68  0EFC               	movlw	high STR_31
  6296  010B6A  6EE6               	movwf	postinc1,c
  6297  010B6C  0E00               	movlw	0
  6298  010B6E  6EE6               	movwf	postinc1,c
  6299  010B70  0E00               	movlw	0
  6300  010B72  6EE6               	movwf	postinc1,c
  6301  010B74  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6302  010B78  0060  F0AB  FFE6   	movff	btemp,postinc1
  6303  010B7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6304  010B84  0E0A               	movlw	10
  6305  010B86  6EE6               	movwf	postinc1,c
  6306  010B88  ECB9  F0FB         	call	_sprintf	;wreg free
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  6310  010B8C  EE22  F173         	lfsr	2,_C+116	;volatile
  6311  010B90  006F FF7B FFE6     	movff	postinc2,postinc1
  6312  010B96  006F FF7B FFE6     	movff	postinc2,postinc1
  6313  010B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6314  010BA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6315  010BA8  0ECD               	movlw	low STR_32
  6316  010BAA  6EE6               	movwf	postinc1,c
  6317  010BAC  0EFC               	movlw	high STR_32
  6318  010BAE  6EE6               	movwf	postinc1,c
  6319  010BB0  0E00               	movlw	0
  6320  010BB2  6EE6               	movwf	postinc1,c
  6321  010BB4  0E01               	movlw	1
  6322  010BB6  6EE6               	movwf	postinc1,c
  6323  010BB8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6324  010BBC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6325  010BC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6326  010BC8  0E08               	movlw	8
  6327  010BCA  6EE6               	movwf	postinc1,c
  6328  010BCC  ECB9  F0FB         	call	_sprintf	;wreg free
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  6332  010BD0  EE22  F177         	lfsr	2,_C+120	;volatile
  6333  010BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6334  010BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6335  010BE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6336  010BE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6337  010BEC  0EB7               	movlw	low STR_33
  6338  010BEE  6EE6               	movwf	postinc1,c
  6339  010BF0  0EFC               	movlw	high STR_33
  6340  010BF2  6EE6               	movwf	postinc1,c
  6341  010BF4  0E00               	movlw	0
  6342  010BF6  6EE6               	movwf	postinc1,c
  6343  010BF8  0E02               	movlw	2
  6344  010BFA  6EE6               	movwf	postinc1,c
  6345  010BFC  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6346  010C00  0060  F0AB  FFE6   	movff	btemp,postinc1
  6347  010C06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6348  010C0C  0E08               	movlw	8
  6349  010C0E  6EE6               	movwf	postinc1,c
  6350  010C10  ECB9  F0FB         	call	_sprintf	;wreg free
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;main.c: 400:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  6354  010C14  EE22  F22D         	lfsr	2,_C+302	;volatile
  6355  010C18  50DF               	movf	indf2,w,c
  6356  010C1A  A4D8               	btfss	status,2,c
  6357  010C1C  D002               	goto	l17596
  6358                           
  6359                           ; BSR set to: 0
  6360  010C1E  0E20               	movlw	32
  6361  010C20  D001               	goto	L2
  6362  010C22                     l17596:
  6363                           
  6364                           ; BSR set to: 0
  6365  010C22  0E44               	movlw	68
  6366  010C24                     L2:
  6367  010C24  6E34               	movwf	(btemp+10)^0,c
  6368  010C26  0E00               	movlw	0
  6369  010C28  6E35               	movwf	(btemp+11)^0,c
  6370                           
  6371                           ;stkvar	_main$4035 @ sp[(-17)+0]
  6372  010C2A  0EEF               	movlw	-17
  6373  010C2C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6374  010C32  0EF0               	movlw	-16
  6375  010C34  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6376                           
  6377                           ; BSR set to: 0
  6378  010C3A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6379  010C3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6380  010C44  006F FF7B FFE6     	movff	postinc2,postinc1
  6381  010C4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6382  010C50  006F FF7B FFE6     	movff	postinc2,postinc1
  6383                           
  6384                           ;stkvar	_main$4035 @ sp[(-21)+0]
  6385  010C56  0EEB               	movlw	-21
  6386  010C58  006F FF8F FFE6     	movff	plusw1,postinc1
  6387  010C5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6388  010C64  0EA1               	movlw	low STR_34
  6389  010C66  6EE6               	movwf	postinc1,c
  6390  010C68  0EFC               	movlw	high STR_34
  6391  010C6A  6EE6               	movwf	postinc1,c
  6392  010C6C  0E01               	movlw	1
  6393  010C6E  6EE6               	movwf	postinc1,c
  6394  010C70  0E00               	movlw	0
  6395  010C72  6EE6               	movwf	postinc1,c
  6396  010C74  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6397  010C78  0060  F0AB  FFE6   	movff	btemp,postinc1
  6398  010C7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6399  010C84  0E0A               	movlw	10
  6400  010C86  6EE6               	movwf	postinc1,c
  6401  010C88  ECB9  F0FB         	call	_sprintf	;wreg free
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;main.c: 401:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  6405  010C8C  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6406  010C90  006F FF7B FFE6     	movff	postinc2,postinc1
  6407  010C96  006F FF7B FFE6     	movff	postinc2,postinc1
  6408  010C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6409  010CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6410  010CA8  0E8B               	movlw	low STR_35
  6411  010CAA  6EE6               	movwf	postinc1,c
  6412  010CAC  0EFC               	movlw	high STR_35
  6413  010CAE  6EE6               	movwf	postinc1,c
  6414  010CB0  0E01               	movlw	1
  6415  010CB2  6EE6               	movwf	postinc1,c
  6416  010CB4  0E01               	movlw	1
  6417  010CB6  6EE6               	movwf	postinc1,c
  6418  010CB8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6419  010CBC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6420  010CC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6421  010CC8  0E08               	movlw	8
  6422  010CCA  6EE6               	movwf	postinc1,c
  6423  010CCC  ECB9  F0FB         	call	_sprintf	;wreg free
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;main.c: 402:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  6427  010CD0  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6428  010CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6429  010CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6430  010CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6431  010CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6432  010CEC  0E75               	movlw	low STR_36
  6433  010CEE  6EE6               	movwf	postinc1,c
  6434  010CF0  0EFC               	movlw	high STR_36
  6435  010CF2  6EE6               	movwf	postinc1,c
  6436  010CF4  0E01               	movlw	1
  6437  010CF6  6EE6               	movwf	postinc1,c
  6438  010CF8  0E02               	movlw	2
  6439  010CFA  6EE6               	movwf	postinc1,c
  6440  010CFC  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6441  010D00  0060  F0AB  FFE6   	movff	btemp,postinc1
  6442  010D06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6443  010D0C  0E08               	movlw	8
  6444  010D0E  6EE6               	movwf	postinc1,c
  6445  010D10  ECB9  F0FB         	call	_sprintf	;wreg free
  6446                           
  6447                           ;main.c: 403:      break;
  6448  010D14  D33C               	goto	l17624
  6449  010D16                     l1495:
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;main.c: 405:      V.calib = 0;
  6453  010D16  0102               	movlb	2	; () banked
  6454  010D18  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6455                           
  6456                           ; BSR set to: 2
  6457                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  6458  010D1A  EE22  F103         	lfsr	2,_C+4	;volatile
  6459  010D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  6460  010D24  006F FF7B FFE6     	movff	postinc2,postinc1
  6461  010D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6462  010D30  006F FF7B FFE6     	movff	postinc2,postinc1
  6463  010D36  EE22  F113         	lfsr	2,_C+20	;volatile
  6464  010D3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6465  010D40  006F FF7B FFE6     	movff	postinc2,postinc1
  6466  010D46  006F FF7B FFE6     	movff	postinc2,postinc1
  6467  010D4C  006F FF7B FFE6     	movff	postinc2,postinc1
  6468  010D52  0E3B               	movlw	low STR_37
  6469  010D54  6EE6               	movwf	postinc1,c
  6470  010D56  0EFD               	movlw	high STR_37
  6471  010D58  6EE6               	movwf	postinc1,c
  6472  010D5A  0E00               	movlw	0
  6473  010D5C  6EE6               	movwf	postinc1,c
  6474  010D5E  0E00               	movlw	0
  6475  010D60  6EE6               	movwf	postinc1,c
  6476  010D62  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6477  010D66  0060  F0AB  FFE6   	movff	btemp,postinc1
  6478  010D6C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6479  010D72  0E0C               	movlw	12
  6480  010D74  6EE6               	movwf	postinc1,c
  6481  010D76  ECB9  F0FB         	call	_sprintf	;wreg free
  6482                           
  6483                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  6484  010D7A  EE22  F0FF         	lfsr	2,_C
  6485  010D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6486  010D84  006F FF7B FFE6     	movff	postinc2,postinc1
  6487  010D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6488  010D90  006F FF7B FFE6     	movff	postinc2,postinc1
  6489  010D96  EE22  F10F         	lfsr	2,_C+16	;volatile
  6490  010D9A  006F FF7B FFE6     	movff	postinc2,postinc1
  6491  010DA0  006F FF7B FFE6     	movff	postinc2,postinc1
  6492  010DA6  006F FF7B FFE6     	movff	postinc2,postinc1
  6493  010DAC  006F FF7B FFE6     	movff	postinc2,postinc1
  6494  010DB2  0E0F               	movlw	low STR_38
  6495  010DB4  6EE6               	movwf	postinc1,c
  6496  010DB6  0EFD               	movlw	high STR_38
  6497  010DB8  6EE6               	movwf	postinc1,c
  6498  010DBA  0E00               	movlw	0
  6499  010DBC  6EE6               	movwf	postinc1,c
  6500  010DBE  0E01               	movlw	1
  6501  010DC0  6EE6               	movwf	postinc1,c
  6502  010DC2  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6503  010DC6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6504  010DCC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6505  010DD2  0E0C               	movlw	12
  6506  010DD4  6EE6               	movwf	postinc1,c
  6507  010DD6  ECB9  F0FB         	call	_sprintf	;wreg free
  6508                           
  6509                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  6510  010DDA  EE22  F13F         	lfsr	2,_C+64	;volatile
  6511  010DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  6512  010DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  6513  010DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  6514  010DF0  006F FF7B FFE6     	movff	postinc2,postinc1
  6515  010DF6  EE22  F107         	lfsr	2,_C+8	;volatile
  6516  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6517  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  6518  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  6519  010E0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6520  010E12  0E25               	movlw	low STR_39
  6521  010E14  6EE6               	movwf	postinc1,c
  6522  010E16  0EFD               	movlw	high STR_39
  6523  010E18  6EE6               	movwf	postinc1,c
  6524  010E1A  0E00               	movlw	0
  6525  010E1C  6EE6               	movwf	postinc1,c
  6526  010E1E  0E02               	movlw	2
  6527  010E20  6EE6               	movwf	postinc1,c
  6528  010E22  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6529  010E26  0060  F0AB  FFE6   	movff	btemp,postinc1
  6530  010E2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6531  010E32  0E0C               	movlw	12
  6532  010E34  6EE6               	movwf	postinc1,c
  6533  010E36  ECB9  F0FB         	call	_sprintf	;wreg free
  6534                           
  6535                           ;main.c: 410:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  6536  010E3A  EE22  F19F         	lfsr	2,_C+160	;volatile
  6537  010E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6538  010E44  006F FF7B FFE6     	movff	postinc2,postinc1
  6539  010E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6540  010E50  006F FF7B FFE6     	movff	postinc2,postinc1
  6541  010E56  0E33               	movlw	low STR_40
  6542  010E58  6EE6               	movwf	postinc1,c
  6543  010E5A  0EFC               	movlw	high STR_40
  6544  010E5C  6EE6               	movwf	postinc1,c
  6545  010E5E  0E01               	movlw	1
  6546  010E60  6EE6               	movwf	postinc1,c
  6547  010E62  0E00               	movlw	0
  6548  010E64  6EE6               	movwf	postinc1,c
  6549  010E66  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6550  010E6A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6551  010E70  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6552  010E76  0E08               	movlw	8
  6553  010E78  6EE6               	movwf	postinc1,c
  6554  010E7A  ECB9  F0FB         	call	_sprintf	;wreg free
  6555                           
  6556                           ;main.c: 411:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  6557  010E7E  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6558  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6559  010E88  006F FF7B FFE6     	movff	postinc2,postinc1
  6560  010E8E  006F FF7B FFE6     	movff	postinc2,postinc1
  6561  010E94  006F FF7B FFE6     	movff	postinc2,postinc1
  6562  010E9A  0E49               	movlw	low STR_41
  6563  010E9C  6EE6               	movwf	postinc1,c
  6564  010E9E  0EFC               	movlw	high STR_41
  6565  010EA0  6EE6               	movwf	postinc1,c
  6566  010EA2  0E01               	movlw	1
  6567  010EA4  6EE6               	movwf	postinc1,c
  6568  010EA6  0E01               	movlw	1
  6569  010EA8  6EE6               	movwf	postinc1,c
  6570  010EAA  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6571  010EAE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6572  010EB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6573  010EBA  0E08               	movlw	8
  6574  010EBC  6EE6               	movwf	postinc1,c
  6575  010EBE  ECB9  F0FB         	call	_sprintf	;wreg free
  6576                           
  6577                           ;main.c: 412:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  6578  010EC2  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6579  010EC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6580  010ECC  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010ED2  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010ED8  006F FF7B FFE6     	movff	postinc2,postinc1
  6583  010EDE  EE22  F19F         	lfsr	2,_C+160	;volatile
  6584  010EE2  006F FF7B FFE6     	movff	postinc2,postinc1
  6585  010EE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6586  010EEE  006F FF7B FFE6     	movff	postinc2,postinc1
  6587  010EF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6588  010EFA  EC62  F0B6         	call	___fladd	;wreg free
  6589  010EFE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6590  010F04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6591  010F0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6592  010F10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6593  010F16  0E5F               	movlw	low STR_42
  6594  010F18  6EE6               	movwf	postinc1,c
  6595  010F1A  0EFC               	movlw	high STR_42
  6596  010F1C  6EE6               	movwf	postinc1,c
  6597  010F1E  0E01               	movlw	1
  6598  010F20  6EE6               	movwf	postinc1,c
  6599  010F22  0E02               	movlw	2
  6600  010F24  6EE6               	movwf	postinc1,c
  6601  010F26  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6602  010F2A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6603  010F30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6604  010F36  0E08               	movlw	8
  6605  010F38  6EE6               	movwf	postinc1,c
  6606  010F3A  ECB9  F0FB         	call	_sprintf	;wreg free
  6607                           
  6608                           ;main.c: 413:      break;
  6609  010F3E  D227               	goto	l17624
  6610  010F40                     l1496:
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;main.c: 415:      V.calib = 0;
  6614  010F40  0102               	movlb	2	; () banked
  6615  010F42  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6616                           
  6617                           ; BSR set to: 2
  6618                           ;main.c: 416:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  6619  010F44  EE22  F17F         	lfsr	2,_C+128	;volatile
  6620  010F48  006F FF7B FFE6     	movff	postinc2,postinc1
  6621  010F4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6622  010F54  006F FF7B FFE6     	movff	postinc2,postinc1
  6623  010F5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6624  010F60  0E7F               	movlw	low STR_43
  6625  010F62  6EE6               	movwf	postinc1,c
  6626  010F64  0EFB               	movlw	high STR_43
  6627  010F66  6EE6               	movwf	postinc1,c
  6628  010F68  0E00               	movlw	0
  6629  010F6A  6EE6               	movwf	postinc1,c
  6630  010F6C  0E00               	movlw	0
  6631  010F6E  6EE6               	movwf	postinc1,c
  6632  010F70  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6633  010F74  0060  F0AB  FFE6   	movff	btemp,postinc1
  6634  010F7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6635  010F80  0E08               	movlw	8
  6636  010F82  6EE6               	movwf	postinc1,c
  6637  010F84  ECB9  F0FB         	call	_sprintf	;wreg free
  6638                           
  6639                           ;main.c: 417:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6640  010F88  EE22  F193         	lfsr	2,_C+148	;volatile
  6641  010F8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6642  010F92  006F FF7B FFE6     	movff	postinc2,postinc1
  6643  010F98  006F FF7B FFE6     	movff	postinc2,postinc1
  6644  010F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6645  010FA4  EE22  F18F         	lfsr	2,_C+144	;volatile
  6646  010FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6647  010FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6648  010FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6649  010FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6650  010FC0  0EC4               	movlw	low STR_44
  6651  010FC2  6EE6               	movwf	postinc1,c
  6652  010FC4  0EFB               	movlw	high STR_44
  6653  010FC6  6EE6               	movwf	postinc1,c
  6654  010FC8  0E00               	movlw	0
  6655  010FCA  6EE6               	movwf	postinc1,c
  6656  010FCC  0E01               	movlw	1
  6657  010FCE  6EE6               	movwf	postinc1,c
  6658  010FD0  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6659  010FD4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6660  010FDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6661  010FE0  0E0C               	movlw	12
  6662  010FE2  6EE6               	movwf	postinc1,c
  6663  010FE4  ECB9  F0FB         	call	_sprintf	;wreg free
  6664                           
  6665                           ;main.c: 418:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6666  010FE8  EE22  F10F         	lfsr	2,_C+16	;volatile
  6667  010FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  6668  010FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  6669  010FF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6670  010FFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6671  011004  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6672  011008  006F FF78  F034    	movff	postinc2,btemp+10
  6673  01100E  006F FF74  F035    	movff	postdec2,btemp+11
  6674  011014  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6675  01101A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6676  011020  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6677  011024  006F FF78  F034    	movff	postinc2,btemp+10
  6678  01102A  006F FF74  F035    	movff	postdec2,btemp+11
  6679  011030  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6680  011036  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6681  01103C  0E00               	movlw	0
  6682  01103E  6EE6               	movwf	postinc1,c
  6683  011040  0E05               	movlw	5
  6684  011042  6EE6               	movwf	postinc1,c
  6685  011044  EC35  F0FD         	call	_spinners	;wreg free
  6686  011048  502A               	movf	btemp^0,w,c
  6687  01104A  6EE6               	movwf	postinc1,c
  6688  01104C  0E00               	movlw	0
  6689  01104E  6EE6               	movwf	postinc1,c
  6690  011050  0EC7               	movlw	low STR_45
  6691  011052  6EE6               	movwf	postinc1,c
  6692  011054  0EFA               	movlw	high STR_45
  6693  011056  6EE6               	movwf	postinc1,c
  6694  011058  0E00               	movlw	0
  6695  01105A  6EE6               	movwf	postinc1,c
  6696  01105C  0E02               	movlw	2
  6697  01105E  6EE6               	movwf	postinc1,c
  6698  011060  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6699  011064  0060  F0AB  FFE6   	movff	btemp,postinc1
  6700  01106A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6701  011070  0E0E               	movlw	14
  6702  011072  6EE6               	movwf	postinc1,c
  6703  011074  ECB9  F0FB         	call	_sprintf	;wreg free
  6704                           
  6705                           ;main.c: 420:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6706  011078  EE22  F187         	lfsr	2,_C+136	;volatile
  6707  01107C  006F FF7B FFE6     	movff	postinc2,postinc1
  6708  011082  006F FF7B FFE6     	movff	postinc2,postinc1
  6709  011088  006F FF7B FFE6     	movff	postinc2,postinc1
  6710  01108E  006F FF7B FFE6     	movff	postinc2,postinc1
  6711  011094  0E68               	movlw	low STR_46
  6712  011096  6EE6               	movwf	postinc1,c
  6713  011098  0EFB               	movlw	high STR_46
  6714  01109A  6EE6               	movwf	postinc1,c
  6715  01109C  0E01               	movlw	1
  6716  01109E  6EE6               	movwf	postinc1,c
  6717  0110A0  0E00               	movlw	0
  6718  0110A2  6EE6               	movwf	postinc1,c
  6719  0110A4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6720  0110A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6721  0110AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6722  0110B4  0E08               	movlw	8
  6723  0110B6  6EE6               	movwf	postinc1,c
  6724  0110B8  ECB9  F0FB         	call	_sprintf	;wreg free
  6725                           
  6726                           ;main.c: 421:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6727  0110BC  EE22  F219         	lfsr	2,_C+282	;volatile
  6728  0110C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6729  0110C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6730  0110CC  006F FF7B FFE6     	movff	postinc2,postinc1
  6731  0110D2  006F FF7B FFE6     	movff	postinc2,postinc1
  6732  0110D8  EE22  F225         	lfsr	2,_C+294	;volatile
  6733  0110DC  006F FF7B FFE6     	movff	postinc2,postinc1
  6734  0110E2  006F FF7B FFE6     	movff	postinc2,postinc1
  6735  0110E8  006F FF7B FFE6     	movff	postinc2,postinc1
  6736  0110EE  006F FF7B FFE6     	movff	postinc2,postinc1
  6737  0110F4  0E96               	movlw	low STR_47
  6738  0110F6  6EE6               	movwf	postinc1,c
  6739  0110F8  0EFB               	movlw	high STR_47
  6740  0110FA  6EE6               	movwf	postinc1,c
  6741  0110FC  0E01               	movlw	1
  6742  0110FE  6EE6               	movwf	postinc1,c
  6743  011100  0E01               	movlw	1
  6744  011102  6EE6               	movwf	postinc1,c
  6745  011104  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6746  011108  0060  F0AB  FFE6   	movff	btemp,postinc1
  6747  01110E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6748  011114  0E0C               	movlw	12
  6749  011116  6EE6               	movwf	postinc1,c
  6750  011118  ECB9  F0FB         	call	_sprintf	;wreg free
  6751                           
  6752                           ;main.c: 422:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6753  01111C  EE22  F21D         	lfsr	2,_C+286	;volatile
  6754  011120  006F FF7B FFE6     	movff	postinc2,postinc1
  6755  011126  006F FF7B FFE6     	movff	postinc2,postinc1
  6756  01112C  006F FF7B FFE6     	movff	postinc2,postinc1
  6757  011132  006F FF7B FFE6     	movff	postinc2,postinc1
  6758  011138  EE22  F229         	lfsr	2,_C+298	;volatile
  6759  01113C  006F FF7B FFE6     	movff	postinc2,postinc1
  6760  011142  006F FF7B FFE6     	movff	postinc2,postinc1
  6761  011148  006F FF7B FFE6     	movff	postinc2,postinc1
  6762  01114E  006F FF7B FFE6     	movff	postinc2,postinc1
  6763  011154  0EAD               	movlw	low STR_48
  6764  011156  6EE6               	movwf	postinc1,c
  6765  011158  0EFB               	movlw	high STR_48
  6766  01115A  6EE6               	movwf	postinc1,c
  6767  01115C  0E01               	movlw	1
  6768  01115E  6EE6               	movwf	postinc1,c
  6769  011160  0E02               	movlw	2
  6770  011162  6EE6               	movwf	postinc1,c
  6771  011164  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6772  011168  0060  F0AB  FFE6   	movff	btemp,postinc1
  6773  01116E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6774  011174  0E0C               	movlw	12
  6775  011176  6EE6               	movwf	postinc1,c
  6776  011178  ECB9  F0FB         	call	_sprintf	;wreg free
  6777                           
  6778                           ;main.c: 423:      break;
  6779  01117C  D108               	goto	l17624
  6780  01117E                     l17608:
  6781                           
  6782                           ; BSR set to: 1
  6783                           ;main.c: 425:      if (!V.calib) {
  6784  01117E  0102               	movlb	2	; () banked
  6785  011180  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  6786  011182  A4D8               	btfss	status,2,c
  6787  011184  D02D               	goto	l17612
  6788                           
  6789                           ; BSR set to: 2
  6790                           ;main.c: 426:       lp_filter(0.0, i, -1);
  6791  011186  0EFF               	movlw	255
  6792  011188  6EE6               	movwf	postinc1,c
  6793                           
  6794                           ;stkvar	_i @ sp[(-18)+14]
  6795  01118A  0EFC               	movlw	-4
  6796  01118C  50E3               	movf	plusw1,w,c
  6797  01118E  6EE6               	movwf	postinc1,c
  6798  011190  0E00               	movlw	0
  6799  011192  6EE6               	movwf	postinc1,c
  6800  011194  0E00               	movlw	0
  6801  011196  6EE6               	movwf	postinc1,c
  6802  011198  0E00               	movlw	0
  6803  01119A  6EE6               	movwf	postinc1,c
  6804  01119C  0E00               	movlw	0
  6805  01119E  6EE6               	movwf	postinc1,c
  6806  0111A0  EC56  F0EB         	call	_lp_filter	;wreg free
  6807                           
  6808                           ;main.c: 427:       lp_filter(0.0, j, -1);
  6809  0111A4  0EFF               	movlw	255
  6810  0111A6  6EE6               	movwf	postinc1,c
  6811                           
  6812                           ;stkvar	_j @ sp[(-18)+13]
  6813  0111A8  0EFB               	movlw	-5
  6814  0111AA  50E3               	movf	plusw1,w,c
  6815  0111AC  6EE6               	movwf	postinc1,c
  6816  0111AE  0E00               	movlw	0
  6817  0111B0  6EE6               	movwf	postinc1,c
  6818  0111B2  0E00               	movlw	0
  6819  0111B4  6EE6               	movwf	postinc1,c
  6820  0111B6  0E00               	movlw	0
  6821  0111B8  6EE6               	movwf	postinc1,c
  6822  0111BA  0E00               	movlw	0
  6823  0111BC  6EE6               	movwf	postinc1,c
  6824  0111BE  EC56  F0EB         	call	_lp_filter	;wreg free
  6825                           
  6826                           ;main.c: 428:       lp_filter(0.0, k, -1);
  6827  0111C2  0EFF               	movlw	255
  6828  0111C4  6EE6               	movwf	postinc1,c
  6829                           
  6830                           ;stkvar	_k @ sp[(-18)+12]
  6831  0111C6  0EFA               	movlw	-6
  6832  0111C8  50E3               	movf	plusw1,w,c
  6833  0111CA  6EE6               	movwf	postinc1,c
  6834  0111CC  0E00               	movlw	0
  6835  0111CE  6EE6               	movwf	postinc1,c
  6836  0111D0  0E00               	movlw	0
  6837  0111D2  6EE6               	movwf	postinc1,c
  6838  0111D4  0E00               	movlw	0
  6839  0111D6  6EE6               	movwf	postinc1,c
  6840  0111D8  0E00               	movlw	0
  6841  0111DA  6EE6               	movwf	postinc1,c
  6842  0111DC  EC56  F0EB         	call	_lp_filter	;wreg free
  6843  0111E0                     l17612:
  6844                           
  6845                           ;main.c: 430:      V.calib = 1;
  6846  0111E0  0E01               	movlw	1
  6847  0111E2  0102               	movlb	2	; () banked
  6848  0111E4  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  6849                           
  6850                           ; BSR set to: 2
  6851                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6852                           ;stkvar	_inp_index @ sp[(-17)+11]
  6853  0111E6  0EFA               	movlw	-6
  6854  0111E8  50E3               	movf	plusw1,w,c
  6855  0111EA  6EE6               	movwf	postinc1,c
  6856  0111EC  0E00               	movlw	0
  6857  0111EE  6EE6               	movwf	postinc1,c
  6858                           
  6859                           ;stkvar	_i @ sp[(-19)+14]
  6860  0111F0  0EFB               	movlw	-5
  6861  0111F2  50E3               	movf	plusw1,w,c
  6862  0111F4  0D04               	mullw	4
  6863  0111F6  0EFF               	movlw	low _C
  6864  0111F8  24F3               	addwf	243,w,c
  6865  0111FA  6ED9               	movwf	fsr2l,c
  6866  0111FC  0E08               	movlw	high _C
  6867  0111FE  20F4               	addwfc	prodh,w,c
  6868  011200  6EDA               	movwf	fsr2h,c
  6869  011202  006F FF7B FFE6     	movff	postinc2,postinc1
  6870  011208  006F FF7B FFE6     	movff	postinc2,postinc1
  6871  01120E  006F FF7B FFE6     	movff	postinc2,postinc1
  6872  011214  006F FF7B FFE6     	movff	postinc2,postinc1
  6873                           
  6874                           ;stkvar	_i @ sp[(-23)+14]
  6875  01121A  0EF7               	movlw	-9
  6876  01121C  50E3               	movf	plusw1,w,c
  6877  01121E  6EE6               	movwf	postinc1,c
  6878  011220  EC05  F012         	call	_get_raw_result	;wreg free
  6879  011224  0060  F0AB  FFE6   	movff	btemp,postinc1
  6880  01122A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6881  011230  0E51               	movlw	low STR_49
  6882  011232  6EE6               	movwf	postinc1,c
  6883  011234  0EFD               	movlw	high STR_49
  6884  011236  6EE6               	movwf	postinc1,c
  6885  011238  0E00               	movlw	0
  6886  01123A  6EE6               	movwf	postinc1,c
  6887  01123C  0E00               	movlw	0
  6888  01123E  6EE6               	movwf	postinc1,c
  6889  011240  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6890  011244  0060  F0AB  FFE6   	movff	btemp,postinc1
  6891  01124A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6892  011250  0E0C               	movlw	12
  6893  011252  6EE6               	movwf	postinc1,c
  6894  011254  ECB9  F0FB         	call	_sprintf	;wreg free
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6898                           ;stkvar	_inp_index @ sp[(-17)+11]
  6899  011258  0EFA               	movlw	-6
  6900  01125A  50E3               	movf	plusw1,w,c
  6901  01125C  6E34               	movwf	(btemp+10)^0,c
  6902  01125E  6A35               	clrf	(btemp+11)^0,c
  6903  011260  0E01               	movlw	1
  6904  011262  2634               	addwf	(btemp+10)^0,f,c
  6905  011264  0E00               	movlw	0
  6906  011266  2235               	addwfc	(btemp+11)^0,f,c
  6907  011268  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6908  01126E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6909                           
  6910                           ;stkvar	_j @ sp[(-19)+13]
  6911  011274  0EFA               	movlw	-6
  6912  011276  50E3               	movf	plusw1,w,c
  6913  011278  0D04               	mullw	4
  6914  01127A  0EFF               	movlw	low _C
  6915  01127C  24F3               	addwf	243,w,c
  6916  01127E  6ED9               	movwf	fsr2l,c
  6917  011280  0E08               	movlw	high _C
  6918  011282  20F4               	addwfc	prodh,w,c
  6919  011284  6EDA               	movwf	fsr2h,c
  6920  011286  006F FF7B FFE6     	movff	postinc2,postinc1
  6921  01128C  006F FF7B FFE6     	movff	postinc2,postinc1
  6922  011292  006F FF7B FFE6     	movff	postinc2,postinc1
  6923  011298  006F FF7B FFE6     	movff	postinc2,postinc1
  6924                           
  6925                           ;stkvar	_j @ sp[(-23)+13]
  6926  01129E  0EF6               	movlw	-10
  6927  0112A0  50E3               	movf	plusw1,w,c
  6928  0112A2  6EE6               	movwf	postinc1,c
  6929  0112A4  EC05  F012         	call	_get_raw_result	;wreg free
  6930  0112A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6931  0112AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6932  0112B4  0E51               	movlw	low STR_49
  6933  0112B6  6EE6               	movwf	postinc1,c
  6934  0112B8  0EFD               	movlw	high STR_49
  6935  0112BA  6EE6               	movwf	postinc1,c
  6936  0112BC  0E00               	movlw	0
  6937  0112BE  6EE6               	movwf	postinc1,c
  6938  0112C0  0E01               	movlw	1
  6939  0112C2  6EE6               	movwf	postinc1,c
  6940  0112C4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6941  0112C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6942  0112CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6943  0112D4  0E0C               	movlw	12
  6944  0112D6  6EE6               	movwf	postinc1,c
  6945  0112D8  ECB9  F0FB         	call	_sprintf	;wreg free
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6949                           ;stkvar	_inp_index @ sp[(-17)+11]
  6950  0112DC  0EFA               	movlw	-6
  6951  0112DE  50E3               	movf	plusw1,w,c
  6952  0112E0  6E34               	movwf	(btemp+10)^0,c
  6953  0112E2  6A35               	clrf	(btemp+11)^0,c
  6954  0112E4  0E02               	movlw	2
  6955  0112E6  2634               	addwf	(btemp+10)^0,f,c
  6956  0112E8  0E00               	movlw	0
  6957  0112EA  2235               	addwfc	(btemp+11)^0,f,c
  6958  0112EC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6959  0112F2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6960                           
  6961                           ;stkvar	_k @ sp[(-19)+12]
  6962  0112F8  0EF9               	movlw	-7
  6963  0112FA  50E3               	movf	plusw1,w,c
  6964  0112FC  0D04               	mullw	4
  6965  0112FE  0EFF               	movlw	low _C
  6966  011300  24F3               	addwf	243,w,c
  6967  011302  6ED9               	movwf	fsr2l,c
  6968  011304  0E08               	movlw	high _C
  6969  011306  20F4               	addwfc	prodh,w,c
  6970  011308  6EDA               	movwf	fsr2h,c
  6971  01130A  006F FF7B FFE6     	movff	postinc2,postinc1
  6972  011310  006F FF7B FFE6     	movff	postinc2,postinc1
  6973  011316  006F FF7B FFE6     	movff	postinc2,postinc1
  6974  01131C  006F FF7B FFE6     	movff	postinc2,postinc1
  6975                           
  6976                           ;stkvar	_k @ sp[(-23)+12]
  6977  011322  0EF5               	movlw	-11
  6978  011324  50E3               	movf	plusw1,w,c
  6979  011326  6EE6               	movwf	postinc1,c
  6980  011328  EC05  F012         	call	_get_raw_result	;wreg free
  6981  01132C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6982  011332  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6983  011338  0E51               	movlw	low STR_49
  6984  01133A  6EE6               	movwf	postinc1,c
  6985  01133C  0EFD               	movlw	high STR_49
  6986  01133E  6EE6               	movwf	postinc1,c
  6987  011340  0E00               	movlw	0
  6988  011342  6EE6               	movwf	postinc1,c
  6989  011344  0E02               	movlw	2
  6990  011346  6EE6               	movwf	postinc1,c
  6991  011348  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
  6992  01134C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6993  011352  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6994  011358  0E0C               	movlw	12
  6995  01135A  6EE6               	movwf	postinc1,c
  6996  01135C  ECB9  F0FB         	call	_sprintf	;wreg free
  6997                           
  6998                           ;main.c: 434:      break;
  6999  011360  D016               	goto	l17624
  7000  011362                     l17622:
  7001  011362  0101               	movlb	1	; () banked
  7002  011364  519B               	movf	_H& (0+255),w,b
  7003  011366  6E34               	movwf	(btemp+10)^0,c
  7004  011368  6A35               	clrf	(btemp+11)^0,c
  7005                           
  7006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7007                           ; Switch size 1, requested type "simple"
  7008                           ; Number of cases is 1, Range of values is 0 to 0
  7009                           ; switch strategies available:
  7010                           ; Name         Instructions Cycles
  7011                           ; simple_byte            4     3 (average)
  7012                           ;	Chosen strategy is simple_byte
  7013  01136A  5035               	movf	(btemp+11)^0,w,c
  7014  01136C  0A00               	xorlw	0	; case 0
  7015  01136E  A4D8               	btfss	status,2,c
  7016  011370  D00E               	goto	l17624
  7017                           
  7018                           ; BSR set to: 1
  7019                           ; Switch size 1, requested type "simple"
  7020                           ; Number of cases is 4, Range of values is 0 to 3
  7021                           ; switch strategies available:
  7022                           ; Name         Instructions Cycles
  7023                           ; simple_byte           13     7 (average)
  7024                           ;	Chosen strategy is simple_byte
  7025  011372  5034               	movf	(btemp+10)^0,w,c
  7026  011374  0A00               	xorlw	0	; case 0
  7027  011376  B4D8               	btfsc	status,2,c
  7028  011378  D4CE               	goto	l1495
  7029  01137A  0A01               	xorlw	1	; case 1
  7030  01137C  B4D8               	btfsc	status,2,c
  7031  01137E  EF88  F085         	goto	l1485
  7032  011382  0A03               	xorlw	3	; case 2
  7033  011384  B4D8               	btfsc	status,2,c
  7034  011386  D5DC               	goto	l1496
  7035  011388  0A01               	xorlw	1	; case 3
  7036  01138A  B4D8               	btfsc	status,2,c
  7037  01138C  D6F8               	goto	l17608
  7038  01138E                     l17624:
  7039                           
  7040                           ;main.c: 438:     clear_hid_pflags(&H);
  7041  01138E  0E9B               	movlw	low _H
  7042  011390  6EE6               	movwf	postinc1,c
  7043  011392  0E01               	movlw	high _H
  7044  011394  6EE6               	movwf	postinc1,c
  7045  011396  ECA1  F009         	call	_clear_hid_pflags	;wreg free
  7046                           
  7047                           ;main.c: 440:    StartTimer(TMR_DISPLAY, 250);
  7048  01139A  0EFA               	movlw	250
  7049  01139C  6EE6               	movwf	postinc1,c
  7050  01139E  0E00               	movlw	0
  7051  0113A0  6EE6               	movwf	postinc1,c
  7052  0113A2  0E0A               	movlw	10
  7053  0113A4  6EE6               	movwf	postinc1,c
  7054  0113A6  ECFA  F00D         	call	_StartTimer	;wreg free
  7055                           
  7056                           ;main.c: 441:    V.enter = check_enter_button(&H);
  7057  0113AA  0E9B               	movlw	low _H
  7058  0113AC  6EE6               	movwf	postinc1,c
  7059  0113AE  0E01               	movlw	high _H
  7060  0113B0  6EE6               	movwf	postinc1,c
  7061  0113B2  EC94  F008         	call	_check_enter_button	;wreg free
  7062  0113B6  502A               	movf	btemp^0,w,c
  7063  0113B8  0102               	movlb	2	; () banked
  7064  0113BA  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7065                           
  7066                           ; BSR set to: 2
  7067                           ;main.c: 442:    if (V.enter && (H.hid_display != HID_AUX)) {
  7068  0113BC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7069  0113BE  B4D8               	btfsc	status,2,c
  7070  0113C0  D013               	goto	l17638
  7071                           
  7072                           ; BSR set to: 2
  7073  0113C2  0E03               	movlw	3
  7074  0113C4  0101               	movlb	1	; () banked
  7075  0113C6  199B               	xorwf	_H& (0+255),w,b
  7076  0113C8  B4D8               	btfsc	status,2,c
  7077  0113CA  D00E               	goto	l17638
  7078                           
  7079                           ; BSR set to: 1
  7080                           ;main.c: 443:     V.enter = 0;
  7081  0113CC  0102               	movlb	2	; () banked
  7082  0113CE  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7083                           
  7084                           ; BSR set to: 2
  7085                           ;main.c: 444:     V.screen = ~V.screen;
  7086  0113D0  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7087  0113D2  D002               	goto	u17170
  7088  0113D4  0E01               	movlw	1
  7089  0113D6  D001               	goto	u17176
  7090  0113D8                     u17170:
  7091  0113D8  0E00               	movlw	0
  7092  0113DA                     u17176:
  7093  0113DA  0AFF               	xorlw	255
  7094  0113DC  6E35               	movwf	(btemp+11)^0,c
  7095  0113DE  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7096  0113E0  1835               	xorwf	(btemp+11)^0,w,c
  7097  0113E2  0BFE               	andlw	-2
  7098  0113E4  1835               	xorwf	(btemp+11)^0,w,c
  7099  0113E6  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7100  0113E8                     l17638:
  7101                           
  7102                           ;main.c: 446:    set_vterm(V.screen);
  7103  0113E8  0102               	movlb	2	; () banked
  7104  0113EA  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7105  0113EC  D002               	goto	u17180
  7106  0113EE  0E01               	movlw	1
  7107  0113F0  D001               	goto	u17186
  7108  0113F2                     u17180:
  7109  0113F2  0E00               	movlw	0
  7110  0113F4                     u17186:
  7111  0113F4  6EE6               	movwf	postinc1,c
  7112  0113F6  EC76  F012         	call	_set_vterm	;wreg free
  7113                           
  7114                           ;main.c: 447:    update_lcd(V.screen);
  7115  0113FA  0102               	movlb	2	; () banked
  7116  0113FC  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7117  0113FE  D002               	goto	u17190
  7118  011400  0E01               	movlw	1
  7119  011402  D001               	goto	u17196
  7120  011404                     u17190:
  7121  011404  0E00               	movlw	0
  7122  011406                     u17196:
  7123  011406  6EE6               	movwf	postinc1,c
  7124  011408  EC6B  F0F4         	call	_update_lcd	;wreg free
  7125                           
  7126                           ;main.c: 448:    display_history();
  7127  01140C  EC6C  F0D7         	call	_display_history	;wreg free
  7128                           
  7129                           ;main.c: 450:    wait_lcd_done();
  7130  011410  ECF4  F011         	call	_wait_lcd_done	;wreg free
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;main.c: 451:    set_dac_a(3.333);
  7134  011414  0EDF               	movlw	223
  7135  011416  6EE6               	movwf	postinc1,c
  7136  011418  0E4F               	movlw	79
  7137  01141A  6EE6               	movwf	postinc1,c
  7138  01141C  0E55               	movlw	85
  7139  01141E  6EE6               	movwf	postinc1,c
  7140  011420  0E40               	movlw	64
  7141  011422  6EE6               	movwf	postinc1,c
  7142  011424  EC56  F00F         	call	_set_dac_a	;wreg free
  7143                           
  7144                           ;main.c: 452:    set_dac_b(6.666);
  7145  011428  0EDF               	movlw	223
  7146  01142A  6EE6               	movwf	postinc1,c
  7147  01142C  0E4F               	movlw	79
  7148  01142E  6EE6               	movwf	postinc1,c
  7149  011430  0ED5               	movlw	213
  7150  011432  6EE6               	movwf	postinc1,c
  7151  011434  0E40               	movlw	64
  7152  011436  6EE6               	movwf	postinc1,c
  7153  011438  EC3C  F00F         	call	_set_dac_b	;wreg free
  7154                           
  7155                           ;main.c: 453:    set_dac();
  7156  01143C  EC3B  F002         	call	_set_dac	;wreg free
  7157  011440                     l17652:
  7158                           
  7159                           ;main.c: 459:   check_help(V.flipper);
  7160  011440  0102               	movlb	2	; () banked
  7161  011442  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7162  011444  6EE6               	movwf	postinc1,c
  7163  011446  EC66  F0E8         	call	_check_help	;wreg free
  7164                           
  7165                           ;main.c: 461:   if (V.enter) {
  7166  01144A  0102               	movlb	2	; () banked
  7167  01144C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7168  01144E  B4D8               	btfsc	status,2,c
  7169  011450  D062               	goto	l1501
  7170                           
  7171                           ; BSR set to: 2
  7172                           ;main.c: 462:    V.enter = 0;
  7173  011452  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7174                           
  7175                           ;main.c: 463:    V.calib = 0;
  7176  011454  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7177                           
  7178                           ; BSR set to: 2
  7179                           ;main.c: 464:    inp_index += 3;
  7180                           ;stkvar	_inp_index @ sp[(-17)+11]
  7181  011456  0EFA               	movlw	-6
  7182  011458  006F FF8C  F02A    	movff	plusw1,btemp
  7183  01145E  0E03               	movlw	3
  7184  011460  262A               	addwf	btemp^0,f,c
  7185  011462  0EFA               	movlw	-6
  7186  011464  0060  F0AB  FFE3   	movff	btemp,plusw1
  7187                           
  7188                           ;main.c: 465:    if (inp_index > 9)
  7189                           ;stkvar	_inp_index @ sp[(-17)+11]
  7190  01146A  0EFA               	movlw	-6
  7191  01146C  006F FF8C  F02A    	movff	plusw1,btemp
  7192  011472  0E09               	movlw	9
  7193  011474  642A               	cpfsgt	btemp^0,c
  7194  011476  D03A               	goto	l17680
  7195                           
  7196                           ; BSR set to: 2
  7197                           ;main.c: 466:     inp_index = 0;
  7198                           ;stkvar	_inp_index @ sp[(-17)+11]
  7199  011478  0EFA               	movlw	-6
  7200  01147A  6AE3               	clrf	plusw1,c
  7201  01147C  D037               	goto	l17680
  7202  01147E                     l17662:
  7203                           
  7204                           ; BSR set to: 2
  7205                           ;main.c: 469:     i = C_BATT;
  7206                           ;stkvar	_i @ sp[(-17)+14]
  7207  01147E  0EFD               	movlw	-3
  7208  011480  6AE3               	clrf	plusw1,c
  7209                           
  7210                           ; BSR set to: 2
  7211                           ;main.c: 470:     j = C_PV;
  7212                           ;stkvar	_j @ sp[(-17)+13]
  7213  011482  0EFC               	movlw	-4
  7214  011484  6AE3               	clrf	plusw1,c
  7215  011486  2AE3               	incf	plusw1,f,c
  7216                           
  7217                           ; BSR set to: 2
  7218                           ;main.c: 471:     k = V_CC;
  7219                           ;stkvar	_k @ sp[(-17)+12]
  7220  011488  0EFB               	movlw	-5
  7221  01148A  6AE3               	clrf	plusw1,c
  7222  01148C  82E3               	bsf	plusw1,1,c
  7223                           
  7224                           ;main.c: 472:     break;
  7225  01148E  D043               	goto	l1501
  7226  011490                     l17668:
  7227                           
  7228                           ; BSR set to: 2
  7229                           ;main.c: 474:     i = V_BAT;
  7230                           ;stkvar	_i @ sp[(-17)+14]
  7231  011490  0EFD               	movlw	-3
  7232  011492  6AE3               	clrf	plusw1,c
  7233  011494  84E3               	bsf	plusw1,2,c
  7234                           
  7235                           ;main.c: 475:     j = V_PV;
  7236                           ;stkvar	_j @ sp[(-17)+13]
  7237  011496  0EFC               	movlw	-4
  7238  011498  6AE3               	clrf	plusw1,c
  7239  01149A  80E3               	bsf	plusw1,0,c
  7240  01149C  84E3               	bsf	plusw1,2,c	;indir
  7241                           
  7242                           ;main.c: 476:     k = V_CBUS;
  7243                           ;stkvar	_k @ sp[(-17)+12]
  7244  01149E  0EFB               	movlw	-5
  7245  0114A0  6AE3               	clrf	plusw1,c
  7246  0114A2  82E3               	bsf	plusw1,1,c
  7247  0114A4  84E3               	bsf	plusw1,2,c	;indir
  7248                           
  7249                           ;main.c: 477:     break;
  7250  0114A6  D037               	goto	l1501
  7251  0114A8                     l17670:
  7252                           
  7253                           ; BSR set to: 2
  7254                           ;main.c: 479:     i = V_BBAT;
  7255                           ;stkvar	_i @ sp[(-17)+14]
  7256  0114A8  0EFD               	movlw	-3
  7257  0114AA  6AE3               	clrf	plusw1,c
  7258  0114AC  82E3               	bsf	plusw1,1,c
  7259  0114AE  86E3               	bsf	plusw1,3,c	;indir
  7260                           
  7261                           ; BSR set to: 2
  7262                           ;main.c: 480:     j = V_TEMP;
  7263  0114B0  0E0B               	movlw	11
  7264  0114B2  6E35               	movwf	(btemp+11)^0,c
  7265                           
  7266                           ;stkvar	_j @ sp[(-17)+13]
  7267  0114B4  0EFC               	movlw	-4
  7268  0114B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7269                           
  7270                           ; BSR set to: 2
  7271                           ;main.c: 481:     k = V_INVERTER;
  7272                           ;stkvar	_k @ sp[(-17)+12]
  7273  0114BC  0EFB               	movlw	-5
  7274  0114BE  6AE3               	clrf	plusw1,c
  7275  0114C0  84E3               	bsf	plusw1,2,c
  7276  0114C2  86E3               	bsf	plusw1,3,c	;indir
  7277                           
  7278                           ;main.c: 482:     break;
  7279  0114C4  D028               	goto	l1501
  7280  0114C6                     l17676:
  7281                           
  7282                           ; BSR set to: 2
  7283                           ;main.c: 484:     i = V_LIGHT_SENSOR;
  7284  0114C6  0E0D               	movlw	13
  7285  0114C8  6E35               	movwf	(btemp+11)^0,c
  7286                           
  7287                           ;stkvar	_i @ sp[(-17)+14]
  7288  0114CA  0EFD               	movlw	-3
  7289  0114CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7290                           
  7291                           ;main.c: 485:     j = V_LIGHT_SENSOR;
  7292  0114D2  0E0D               	movlw	13
  7293  0114D4  6E35               	movwf	(btemp+11)^0,c
  7294                           
  7295                           ;stkvar	_j @ sp[(-17)+13]
  7296  0114D6  0EFC               	movlw	-4
  7297  0114D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7298                           
  7299                           ;main.c: 486:     k = V_LIGHT_SENSOR;
  7300  0114DE  0E0D               	movlw	13
  7301  0114E0  6E35               	movwf	(btemp+11)^0,c
  7302                           
  7303                           ;stkvar	_k @ sp[(-17)+12]
  7304  0114E2  0EFB               	movlw	-5
  7305  0114E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7306                           
  7307                           ;main.c: 487:     break;
  7308  0114EA  D015               	goto	l1501
  7309  0114EC                     l17680:
  7310                           
  7311                           ; BSR set to: 2
  7312                           ;stkvar	_inp_index @ sp[(-17)+11]
  7313  0114EC  0EFA               	movlw	-6
  7314  0114EE  50E3               	movf	plusw1,w,c
  7315  0114F0  6E34               	movwf	(btemp+10)^0,c
  7316  0114F2  6A35               	clrf	(btemp+11)^0,c
  7317                           
  7318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7319                           ; Switch size 1, requested type "simple"
  7320                           ; Number of cases is 1, Range of values is 0 to 0
  7321                           ; switch strategies available:
  7322                           ; Name         Instructions Cycles
  7323                           ; simple_byte            4     3 (average)
  7324                           ;	Chosen strategy is simple_byte
  7325  0114F4  5035               	movf	(btemp+11)^0,w,c
  7326  0114F6  0A00               	xorlw	0	; case 0
  7327  0114F8  A4D8               	btfss	status,2,c
  7328  0114FA  D00D               	goto	l1501
  7329                           
  7330                           ; BSR set to: 2
  7331                           ; Switch size 1, requested type "simple"
  7332                           ; Number of cases is 4, Range of values is 0 to 9
  7333                           ; switch strategies available:
  7334                           ; Name         Instructions Cycles
  7335                           ; simple_byte           13     7 (average)
  7336                           ;	Chosen strategy is simple_byte
  7337  0114FC  5034               	movf	(btemp+10)^0,w,c
  7338  0114FE  0A00               	xorlw	0	; case 0
  7339  011500  B4D8               	btfsc	status,2,c
  7340  011502  D7BD               	goto	l17662
  7341  011504  0A03               	xorlw	3	; case 3
  7342  011506  B4D8               	btfsc	status,2,c
  7343  011508  D7C3               	goto	l17668
  7344  01150A  0A05               	xorlw	5	; case 6
  7345  01150C  B4D8               	btfsc	status,2,c
  7346  01150E  D7CC               	goto	l17670
  7347  011510  0A0F               	xorlw	15	; case 9
  7348  011512  B4D8               	btfsc	status,2,c
  7349  011514  D7D8               	goto	l17676
  7350  011516                     l1501:
  7351                           
  7352                           ; BSR set to: 2
  7353                           ;main.c: 496:   if (V.set_sequ) {
  7354  011516  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7355  011518  EF27  F084         	goto	l17528
  7356                           
  7357                           ; BSR set to: 2
  7358                           ;main.c: 497:    if (TimerDone(TMR_INFO)) {
  7359  01151C  0E07               	movlw	7
  7360  01151E  6EE6               	movwf	postinc1,c
  7361  011520  EC6F  F010         	call	_TimerDone	;wreg free
  7362  011524  502A               	movf	btemp^0,w,c
  7363  011526  B4D8               	btfsc	status,2,c
  7364  011528  D00C               	goto	l17690
  7365                           
  7366                           ;main.c: 498:     V.set_sequ = 0;
  7367  01152A  0102               	movlb	2	; () banked
  7368  01152C  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7369                           
  7370                           ; BSR set to: 2
  7371                           ;main.c: 499:     set_vterm(0);
  7372  01152E  0E00               	movlw	0
  7373  011530  6EE6               	movwf	postinc1,c
  7374  011532  EC76  F012         	call	_set_vterm	;wreg free
  7375                           
  7376                           ;main.c: 500:     update_lcd(0);
  7377  011536  0E00               	movlw	0
  7378  011538  6EE6               	movwf	postinc1,c
  7379  01153A  EC6B  F0F4         	call	_update_lcd	;wreg free
  7380                           
  7381                           ;main.c: 501:    } else {
  7382  01153E  EF27  F084         	goto	l17528
  7383  011542                     l17690:
  7384                           
  7385                           ;main.c: 502:     set_vterm(2);
  7386  011542  0E02               	movlw	2
  7387  011544  6EE6               	movwf	postinc1,c
  7388  011546  EC76  F012         	call	_set_vterm	;wreg free
  7389                           
  7390                           ;main.c: 503:     update_lcd(2);
  7391  01154A  0E02               	movlw	2
  7392  01154C  6EE6               	movwf	postinc1,c
  7393  01154E  EC6B  F0F4         	call	_update_lcd	;wreg free
  7394  011552  EF27  F084         	goto	l17528
  7395  011556                     __end_of_main:
  7396                           	opt callstack 0
  7397                           
  7398 ;; *************** function _update_hist_data *****************
  7399 ;; Defined at:
  7400 ;;		line 456 in file "daq.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  mode            1  [STACK] const _Bool 
  7403 ;;  hist            2  [STACK] PTR volatile struct hist
  7404 ;;		 -> C.hist(97), C(320), 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  1  [STACK] _Bool 
  7409 ;; Registers used:
  7410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7411 ;; Tracked objects:
  7412 ;;		On entry : 7/1
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7420 ;;Total ram usage:        0 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:   15
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_main
  7427 ;; This function uses a reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text1
  7431  000FBA                     __ptext1:
  7432                           	opt callstack 0
  7433  000FBA                     _update_hist_data:
  7434                           	opt callstack 15
  7435                           
  7436                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7437                           ;stkvar	_hist @ sp[(0)+-3]
  7438                           
  7439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7440                           ;incstack = 0
  7441  000FBA  0EFD               	movlw	-3
  7442  000FBC  006F FF8C  F02A    	movff	plusw1,btemp
  7443  000FC2  0EFE               	movlw	-2
  7444  000FC4  50E3               	movf	plusw1,w,c
  7445  000FC6  102A               	iorwf	btemp^0,w,c
  7446  000FC8  A4D8               	btfss	status,2,c
  7447  000FCA  D002               	goto	l14124
  7448  000FCC                     u13330:
  7449                           
  7450                           ;daq.c: 459:   return 0;
  7451  000FCC  0E00               	movlw	0
  7452  000FCE  D01A               	goto	L3
  7453  000FD0                     l14124:
  7454                           
  7455                           ;daq.c: 461:  if (mode) {
  7456                           ;stkvar	_mode @ sp[(0)+-1]
  7457  000FD0  0EFF               	movlw	-1
  7458  000FD2  50E3               	movf	plusw1,w,c
  7459  000FD4  B4D8               	btfsc	status,2,c
  7460  000FD6  D018               	goto	l14136
  7461                           
  7462                           ;daq.c: 462:   if (R.hist_save) {
  7463  000FD8  0101               	movlb	1	; () banked
  7464  000FDA  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7465  000FDC  D7F7               	goto	u13330
  7466                           
  7467                           ; BSR set to: 1
  7468                           ;daq.c: 463:    R.H = *hist;
  7469                           ;stkvar	_hist @ sp[(0)+-3]
  7470  000FDE  0EFD               	movlw	-3
  7471  000FE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7472  000FE6  0EFE               	movlw	-2
  7473  000FE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7474  000FEE  EE00  F136         	lfsr	0,_R+54	;volatile
  7475  000FF2  0E60               	movlw	96
  7476  000FF4                     u13361:
  7477  000FF4  006F FF6F FFEB     	movff	plusw2,plusw0
  7478  000FFA  06E8               	decf	wreg,f,c
  7479  000FFC  E2FB               	bc	u13361
  7480                           
  7481                           ; BSR set to: 1
  7482                           ;daq.c: 464:    if (R.hist_update) {
  7483  000FFE  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7484  001000  D7E5               	goto	u13330
  7485                           
  7486                           ; BSR set to: 1
  7487                           ;daq.c: 465:     return 1;
  7488  001002  0E01               	movlw	1
  7489  001004                     L3:
  7490  001004  6E2A               	movwf	btemp^0,c
  7491  001006  D013               	goto	l2096
  7492  001008                     l14136:
  7493                           
  7494                           ;daq.c: 469:   *hist = R.H;
  7495  001008  EE20  F136         	lfsr	2,_R+54	;volatile
  7496                           
  7497                           ;stkvar	_hist @ sp[(0)+-3]
  7498  00100C  0EFD               	movlw	-3
  7499  00100E  006F FF8F FFE9     	movff	plusw1,fsr0l
  7500  001014  0EFE               	movlw	-2
  7501  001016  006F FF8F FFEA     	movff	plusw1,fsr0h
  7502  00101C  0E60               	movlw	96
  7503  00101E                     u13381:
  7504  00101E  006F FF6F FFEB     	movff	plusw2,plusw0
  7505  001024  06E8               	decf	wreg,f,c
  7506  001026  E2FB               	bc	u13381
  7507                           
  7508                           ;daq.c: 470:   R.hist_save = 1;
  7509  001028  0101               	movlb	1	; () banked
  7510  00102A  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7511  00102C  D7CF               	goto	u13330
  7512  00102E                     l2096:
  7513                           
  7514                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7515  00102E  52E5               	movf	postdec1,f,c
  7516  001030  52E5               	movf	postdec1,f,c
  7517  001032  52E5               	movf	postdec1,f,c
  7518  001034  0012               	return		;funcret
  7519  001036                     __end_of_update_hist_data:
  7520                           	opt callstack 0
  7521                           
  7522 ;; *************** function _update_cal_data *****************
  7523 ;; Defined at:
  7524 ;;		line 437 in file "daq.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;		None
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;		None
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1  [STACK] void 
  7531 ;; Registers used:
  7532 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/39
  7535 ;;		On exit  : 3F/1
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7542 ;;Total ram usage:        0 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:   15
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_main
  7549 ;; This function uses a reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text2
  7553  001766                     __ptext2:
  7554                           	opt callstack 0
  7555  001766                     _update_cal_data:
  7556                           	opt callstack 15
  7557                           
  7558                           ;daq.c: 439:  R = r_cal;
  7559                           
  7560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7561                           ;incstack = 0
  7562  001766  EE21  F040         	lfsr	2,_r_cal
  7563  00176A  EE00  F100         	lfsr	0,_R	;volatile
  7564  00176E  0E9A               	movlw	154
  7565  001770                     u13301:
  7566  001770  006F FF7B FFEE     	movff	postinc2,postinc0
  7567  001776  06E8               	decf	wreg,f,c
  7568  001778  E2FB               	bc	u13301
  7569  00177A  0E9B               	movlw	155
  7570  00177C  5ED9               	subwf	fsr2l,f,c
  7571  00177E  5EE9               	subwf	fsr0l,f,c
  7572                           
  7573                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7574  001780  0101               	movlb	1	; () banked
  7575  001782  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7576  001784  D008               	goto	l14114
  7577                           
  7578                           ; BSR set to: 1
  7579                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7580  001786  0E0F               	movlw	15
  7581  001788  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7582  00178A  0E62               	movlw	98
  7583  00178C  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7584                           
  7585                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7586  00178E  0E0F               	movlw	15
  7587  001790  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7588  001792  0EA4               	movlw	164
  7589  001794  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7590  001796                     l14114:
  7591                           
  7592                           ; BSR set to: 1
  7593                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7594  001796  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7595  001798  0012               	return	
  7596                           
  7597                           ; BSR set to: 1
  7598                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7599  00179A  0EA0               	movlw	160
  7600  00179C  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7601  00179E  0E89               	movlw	137
  7602  0017A0  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7603  0017A2  0EB0               	movlw	176
  7604  0017A4  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7605  0017A6  0E3D               	movlw	61
  7606  0017A8  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7607                           
  7608                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7609  0017AA  0EA4               	movlw	164
  7610  0017AC  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7611  0017AE  0EDE               	movlw	222
  7612  0017B0  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7613  0017B2  0E13               	movlw	19
  7614  0017B4  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7615  0017B6  0E3D               	movlw	61
  7616  0017B8  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7617                           
  7618                           ; BSR set to: 1
  7619                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7620  0017BA  0012               	return		;funcret
  7621  0017BC                     __end_of_update_cal_data:
  7622                           	opt callstack 0
  7623                           
  7624 ;; *************** function _static_soc *****************
  7625 ;; Defined at:
  7626 ;;		line 118 in file "mbmc.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;		None
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;		None
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  1  [STACK] void 
  7633 ;; Registers used:
  7634 ;;		wreg, fsr2l, fsr2h
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/1
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7644 ;;Total ram usage:        0 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:   15
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_main
  7651 ;; This function uses a reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text3
  7655  001658                     __ptext3:
  7656                           	opt callstack 0
  7657  001658                     _static_soc:
  7658                           	opt callstack 15
  7659                           
  7660                           ;mbmc.c: 120:  C.runtime = 120;
  7661                           
  7662                           ; BSR set to: 1
  7663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7664                           ;incstack = 0
  7665  001658  0E78               	movlw	120
  7666  00165A  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7667  001660  0E00               	movlw	0
  7668  001662  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7669                           
  7670                           ;mbmc.c: 121:  C.soc = 100;
  7671  001668  0E64               	movlw	100
  7672  00166A  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7673  001670  0E00               	movlw	0
  7674  001672  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7675                           
  7676                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7677  001678  EE22  F18B         	lfsr	2,_C+140	;volatile
  7678  00167C  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7679  001682  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7680  001688  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7681  00168E  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7682                           
  7683                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7684  001694  EE22  F18F         	lfsr	2,_C+144	;volatile
  7685  001698  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7686  00169E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7687  0016A4  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7688  0016AA  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7689                           
  7690                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7691  0016B0  0012               	return		;funcret
  7692  0016B2                     __end_of_static_soc:
  7693                           	opt callstack 0
  7694                           
  7695 ;; *************** function _start_switch_handler *****************
  7696 ;; Defined at:
  7697 ;;		line 125 in file "dio.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;		None
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1  [STACK] void 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 3F/39
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7715 ;;Total ram usage:        0 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:   16
  7718 ;; This function calls:
  7719 ;;		_INT1_SetInterruptHandler
  7720 ;; This function is called by:
  7721 ;;		_main
  7722 ;; This function uses a reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text4
  7726  002470                     __ptext4:
  7727                           	opt callstack 0
  7728  002470                     _start_switch_handler:
  7729                           	opt callstack 14
  7730                           
  7731                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7732                           
  7733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7734                           ;incstack = 0
  7735  002470  0139               	movlb	57	; () banked
  7736  002472  9195               	bcf	149,0,b	;volatile
  7737                           
  7738                           ; BSR set to: 57
  7739                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7740  002474  0E36               	movlw	low _switch_handler
  7741  002476  6EE6               	movwf	postinc1,c
  7742  002478  0EEE               	movlw	high _switch_handler
  7743  00247A  6EE6               	movwf	postinc1,c
  7744  00247C  0E01               	movlw	low (_switch_handler shr (0+16))
  7745  00247E  6EE6               	movwf	postinc1,c
  7746  002480  ECFB  F010         	call	_INT1_SetInterruptHandler	;wreg free
  7747                           
  7748                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7749  002484  0E02               	movlw	2
  7750  002486  0101               	movlb	1	; () banked
  7751  002488  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  7752                           
  7753                           ; BSR set to: 1
  7754                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7755  00248A  0139               	movlb	57	; () banked
  7756  00248C  8195               	bsf	149,0,b	;volatile
  7757                           
  7758                           ; BSR set to: 57
  7759                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7760  00248E  0012               	return		;funcret
  7761  002490                     __end_of_start_switch_handler:
  7762                           	opt callstack 0
  7763                           
  7764 ;; *************** function _srand *****************
  7765 ;; Defined at:
  7766 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  s               2  [STACK] unsigned int 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;		None
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  1  [STACK] void 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 3F/2
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7784 ;;Total ram usage:        0 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:   15
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_main
  7791 ;; This function uses a reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text5
  7795  001E44                     __ptext5:
  7796                           	opt callstack 0
  7797  001E44                     _srand:
  7798                           	opt callstack 15
  7799                           
  7800                           ;stkvar	_s @ sp[(0)+-2]
  7801                           
  7802                           ; BSR set to: 57
  7803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7804                           ;incstack = 0
  7805  001E44  0EFE               	movlw	-2
  7806  001E46  50E3               	movf	plusw1,w,c
  7807  001E48  0FFF               	addlw	255
  7808  001E4A  6E34               	movwf	(btemp+10)^0,c
  7809  001E4C  0EFF               	movlw	-1
  7810  001E4E  006F FF8C  F035    	movff	plusw1,btemp+11
  7811  001E54  0EFF               	movlw	255
  7812  001E56  2235               	addwfc	(btemp+11)^0,f,c
  7813  001E58  0060  F0D0  F2DE   	movff	btemp+10,_seed
  7814  001E5E  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  7815  001E64  0102               	movlb	2	; () banked
  7816  001E66  6BE0               	clrf	(_seed+2)& (0+255),b
  7817  001E68  6BE1               	clrf	(_seed+3)& (0+255),b
  7818  001E6A  6BE2               	clrf	(_seed+4)& (0+255),b
  7819  001E6C  6BE3               	clrf	(_seed+5)& (0+255),b
  7820  001E6E  6BE4               	clrf	(_seed+6)& (0+255),b
  7821  001E70  6BE5               	clrf	(_seed+7)& (0+255),b
  7822                           
  7823                           ; BSR set to: 2
  7824                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7825  001E72  52E5               	movf	postdec1,f,c
  7826  001E74  52E5               	movf	postdec1,f,c
  7827  001E76  0012               	return		;funcret
  7828  001E78                     __end_of_srand:
  7829                           	opt callstack 0
  7830                           
  7831 ;; *************** function _set_time *****************
  7832 ;; Defined at:
  7833 ;;		line 255 in file "mbmc.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;  t               8  [STACK] long long 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1  [STACK] void 
  7840 ;; Registers used:
  7841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/1
  7844 ;;		On exit  : 3F/39
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:   15
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_main
  7858 ;; This function uses a reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text6
  7862  001DD8                     __ptext6:
  7863                           	opt callstack 0
  7864  001DD8                     _set_time:
  7865                           	opt callstack 15
  7866                           
  7867                           ;mbmc.c: 255: void set_time(time_t t);mbmc.c: 256: {;mbmc.c: 257:  PIE8bits.TMR5IE = 0;
  7868                           
  7869                           ; BSR set to: 2
  7870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7871                           ;incstack = 0
  7872  001DD8  0139               	movlb	57	; () banked
  7873  001DDA  9D98               	bcf	152,6,b	;volatile
  7874                           
  7875                           ; BSR set to: 57
  7876                           ;mbmc.c: 258:  V.ticks=t;
  7877                           ;stkvar	_t @ sp[(0)+-8]
  7878  001DDC  50E1               	movf	fsr1l,w,c
  7879  001DDE  0FF8               	addlw	-8
  7880  001DE0  6ED9               	movwf	fsr2l,c
  7881  001DE2  50E2               	movf	fsr1h,w,c
  7882  001DE4  6EDA               	movwf	fsr2h,c
  7883  001DE6  0EFF               	movlw	255
  7884  001DE8  22DA               	addwfc	fsr2h,f,c
  7885  001DEA  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  7886  001DF0  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  7887  001DF6  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  7888  001DFC  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  7889                           
  7890                           ; BSR set to: 57
  7891                           ;mbmc.c: 259:  PIE8bits.TMR5IE = 1;
  7892  001E02  8D98               	bsf	152,6,b	;volatile
  7893                           
  7894                           ; BSR set to: 57
  7895                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  7896  001E04  0EF8               	movlw	248
  7897  001E06  26E1               	addwf	fsr1l,f,c
  7898  001E08  0EFF               	movlw	255
  7899  001E0A  22E2               	addwfc	fsr1h,f,c
  7900  001E0C  0012               	return		;funcret
  7901  001E0E                     __end_of_set_time:
  7902                           	opt callstack 0
  7903                           
  7904 ;; *************** function _set_hist_flag *****************
  7905 ;; Defined at:
  7906 ;;		line 475 in file "daq.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1  [STACK] void 
  7913 ;; Registers used:
  7914 ;;		None
  7915 ;; Tracked objects:
  7916 ;;		On entry : 3F/39
  7917 ;;		On exit  : 3F/1
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7924 ;;Total ram usage:        0 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:   15
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_main
  7931 ;; This function uses a reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text7
  7935  002716                     __ptext7:
  7936                           	opt callstack 0
  7937  002716                     _set_hist_flag:
  7938                           	opt callstack 15
  7939                           
  7940                           ;daq.c: 477:  R.hist_update=1;
  7941                           
  7942                           ; BSR set to: 57
  7943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7944                           ;incstack = 0
  7945  002716  0101               	movlb	1	; () banked
  7946  002718  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  7947                           
  7948                           ; BSR set to: 1
  7949                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7950  00271A  0012               	return		;funcret
  7951  00271C                     __end_of_set_hist_flag:
  7952                           	opt callstack 0
  7953                           
  7954 ;; *************** function _set_dac_b *****************
  7955 ;; Defined at:
  7956 ;;		line 308 in file "daq.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;  voltage         4  [STACK] const float 
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;		None
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  2  [STACK] unsigned short 
  7963 ;; Registers used:
  7964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7974 ;;Total ram usage:        0 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:   17
  7977 ;; This function calls:
  7978 ;;		_convert_dac_raw
  7979 ;; This function is called by:
  7980 ;;		_main
  7981 ;; This function uses a reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text8
  7985  001E78                     __ptext8:
  7986                           	opt callstack 0
  7987  001E78                     _set_dac_b:
  7988                           	opt callstack 13
  7989                           
  7990                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7991                           ;stkvar	_voltage @ sp[(0)+-4]
  7992                           
  7993                           ; BSR set to: 1
  7994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7995                           ;incstack = 0
  7996  001E78  0EFC               	movlw	-4
  7997  001E7A  006F FF8F FFE6     	movff	plusw1,postinc1
  7998  001E80  006F FF8F FFE6     	movff	plusw1,postinc1
  7999  001E86  006F FF8F FFE6     	movff	plusw1,postinc1
  8000  001E8C  006F FF8F FFE6     	movff	plusw1,postinc1
  8001  001E92  EC17  F0FA         	call	_convert_dac_raw	;wreg free
  8002  001E96  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8003  001E9C  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8004                           
  8005                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8006                           
  8007                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8008  001EA2  52E5               	movf	postdec1,f,c
  8009  001EA4  52E5               	movf	postdec1,f,c
  8010  001EA6  52E5               	movf	postdec1,f,c
  8011  001EA8  52E5               	movf	postdec1,f,c
  8012  001EAA  0012               	return		;funcret
  8013  001EAC                     __end_of_set_dac_b:
  8014                           	opt callstack 0
  8015                           
  8016 ;; *************** function _set_dac_a *****************
  8017 ;; Defined at:
  8018 ;;		line 299 in file "daq.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  voltage         4  [STACK] const float 
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  2  [STACK] unsigned short 
  8025 ;; Registers used:
  8026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8027 ;; Tracked objects:
  8028 ;;		On entry : 3F/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8036 ;;Total ram usage:        0 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:   17
  8039 ;; This function calls:
  8040 ;;		_convert_dac_raw
  8041 ;; This function is called by:
  8042 ;;		_main
  8043 ;; This function uses a reentrant model
  8044 ;;
  8045                           
  8046                           	psect	text9
  8047  001EAC                     __ptext9:
  8048                           	opt callstack 0
  8049  001EAC                     _set_dac_a:
  8050                           	opt callstack 13
  8051                           
  8052                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8053                           ;stkvar	_voltage @ sp[(0)+-4]
  8054                           
  8055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8056                           ;incstack = 0
  8057  001EAC  0EFC               	movlw	-4
  8058  001EAE  006F FF8F FFE6     	movff	plusw1,postinc1
  8059  001EB4  006F FF8F FFE6     	movff	plusw1,postinc1
  8060  001EBA  006F FF8F FFE6     	movff	plusw1,postinc1
  8061  001EC0  006F FF8F FFE6     	movff	plusw1,postinc1
  8062  001EC6  EC17  F0FA         	call	_convert_dac_raw	;wreg free
  8063  001ECA  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8064  001ED0  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8065                           
  8066                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8067                           
  8068                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8069  001ED6  52E5               	movf	postdec1,f,c
  8070  001ED8  52E5               	movf	postdec1,f,c
  8071  001EDA  52E5               	movf	postdec1,f,c
  8072  001EDC  52E5               	movf	postdec1,f,c
  8073  001EDE  0012               	return		;funcret
  8074  001EE0                     __end_of_set_dac_a:
  8075                           	opt callstack 0
  8076                           
  8077 ;; *************** function _convert_dac_raw *****************
  8078 ;; Defined at:
  8079 ;;		line 281 in file "daq.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  voltage         4  [STACK] float 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;		None
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  2  [STACK] unsigned short 
  8086 ;; Registers used:
  8087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8097 ;;Total ram usage:        0 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:   16
  8100 ;; This function calls:
  8101 ;;		___fldiv
  8102 ;;		___flge
  8103 ;;		___fltol
  8104 ;; This function is called by:
  8105 ;;		_set_dac_a
  8106 ;;		_set_dac_b
  8107 ;; This function uses a reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text10
  8111  01F42E                     __ptext10:
  8112                           	opt callstack 0
  8113  01F42E                     _convert_dac_raw:
  8114                           	opt callstack 13
  8115                           
  8116                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8117                           
  8118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8119                           ;incstack = 0
  8120  01F42E  0E6F               	movlw	111
  8121  01F430  6EE6               	movwf	postinc1,c
  8122  01F432  0E12               	movlw	18
  8123  01F434  6EE6               	movwf	postinc1,c
  8124  01F436  0E83               	movlw	131
  8125  01F438  6EE6               	movwf	postinc1,c
  8126  01F43A  0E3A               	movlw	58
  8127  01F43C  6EE6               	movwf	postinc1,c
  8128                           
  8129                           ;stkvar	_voltage @ sp[(-4)+-4]
  8130  01F43E  0EF8               	movlw	-8
  8131  01F440  006F FF8F FFE6     	movff	plusw1,postinc1
  8132  01F446  006F FF8F FFE6     	movff	plusw1,postinc1
  8133  01F44C  006F FF8F FFE6     	movff	plusw1,postinc1
  8134  01F452  006F FF8F FFE6     	movff	plusw1,postinc1
  8135  01F458  EC09  F0F3         	call	___flge	;wreg free
  8136  01F45C  B02A               	btfsc	btemp& (0+255),0,c
  8137  01F45E  D018               	goto	l13648
  8138                           
  8139                           ;daq.c: 287:   voltage = 0.001;
  8140  01F460  0E6F               	movlw	111
  8141  01F462  6E32               	movwf	(btemp+8)^0,c
  8142  01F464  0E12               	movlw	18
  8143  01F466  6E33               	movwf	(btemp+9)^0,c
  8144  01F468  0E83               	movlw	131
  8145  01F46A  6E34               	movwf	(btemp+10)^0,c
  8146  01F46C  0E3A               	movlw	58
  8147  01F46E  6E35               	movwf	(btemp+11)^0,c
  8148                           
  8149                           ;stkvar	_voltage @ sp[(0)+-4]
  8150  01F470  0EFC               	movlw	-4
  8151  01F472  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8152  01F478  0EFD               	movlw	-3
  8153  01F47A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8154  01F480  0EFE               	movlw	-2
  8155  01F482  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8156  01F488  0EFF               	movlw	-1
  8157  01F48A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8158  01F490                     l13648:
  8159                           
  8160                           ;daq.c: 288:  if (voltage > 10.0)
  8161                           ;stkvar	_voltage @ sp[(0)+-4]
  8162  01F490  0EFC               	movlw	-4
  8163  01F492  006F FF8F FFE6     	movff	plusw1,postinc1
  8164  01F498  006F FF8F FFE6     	movff	plusw1,postinc1
  8165  01F49E  006F FF8F FFE6     	movff	plusw1,postinc1
  8166  01F4A4  006F FF8F FFE6     	movff	plusw1,postinc1
  8167  01F4AA  0E00               	movlw	0
  8168  01F4AC  6EE6               	movwf	postinc1,c
  8169  01F4AE  0E00               	movlw	0
  8170  01F4B0  6EE6               	movwf	postinc1,c
  8171  01F4B2  0E20               	movlw	32
  8172  01F4B4  6EE6               	movwf	postinc1,c
  8173  01F4B6  0E41               	movlw	65
  8174  01F4B8  6EE6               	movwf	postinc1,c
  8175  01F4BA  EC09  F0F3         	call	___flge	;wreg free
  8176  01F4BE  B02A               	btfsc	btemp& (0+255),0,c
  8177  01F4C0  D018               	goto	l13652
  8178                           
  8179                           ;daq.c: 289:   voltage = 10.0;
  8180  01F4C2  0E00               	movlw	0
  8181  01F4C4  6E32               	movwf	(btemp+8)^0,c
  8182  01F4C6  0E00               	movlw	0
  8183  01F4C8  6E33               	movwf	(btemp+9)^0,c
  8184  01F4CA  0E20               	movlw	32
  8185  01F4CC  6E34               	movwf	(btemp+10)^0,c
  8186  01F4CE  0E41               	movlw	65
  8187  01F4D0  6E35               	movwf	(btemp+11)^0,c
  8188                           
  8189                           ;stkvar	_voltage @ sp[(0)+-4]
  8190  01F4D2  0EFC               	movlw	-4
  8191  01F4D4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8192  01F4DA  0EFD               	movlw	-3
  8193  01F4DC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8194  01F4E2  0EFE               	movlw	-2
  8195  01F4E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8196  01F4EA  0EFF               	movlw	-1
  8197  01F4EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8198  01F4F2                     l13652:
  8199                           
  8200                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8201  01F4F2  0EF6               	movlw	246
  8202  01F4F4  6EE6               	movwf	postinc1,c
  8203  01F4F6  0E09               	movlw	9
  8204  01F4F8  6EE6               	movwf	postinc1,c
  8205  01F4FA  0E20               	movlw	32
  8206  01F4FC  6EE6               	movwf	postinc1,c
  8207  01F4FE  0E3B               	movlw	59
  8208  01F500  6EE6               	movwf	postinc1,c
  8209                           
  8210                           ;stkvar	_voltage @ sp[(-4)+-4]
  8211  01F502  0EF8               	movlw	-8
  8212  01F504  006F FF8F FFE6     	movff	plusw1,postinc1
  8213  01F50A  006F FF8F FFE6     	movff	plusw1,postinc1
  8214  01F510  006F FF8F FFE6     	movff	plusw1,postinc1
  8215  01F516  006F FF8F FFE6     	movff	plusw1,postinc1
  8216  01F51C  EC9E  F0BD         	call	___fldiv	;wreg free
  8217  01F520  0060  F0AB  FFE6   	movff	btemp,postinc1
  8218  01F526  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8219  01F52C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8220  01F532  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8221  01F538  EC9D  F0F1         	call	___fltol	;wreg free
  8222                           
  8223                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8224  01F53C  52E5               	movf	postdec1,f,c
  8225  01F53E  52E5               	movf	postdec1,f,c
  8226  01F540  52E5               	movf	postdec1,f,c
  8227  01F542  52E5               	movf	postdec1,f,c
  8228  01F544  0012               	return		;funcret
  8229  01F546                     __end_of_convert_dac_raw:
  8230                           	opt callstack 0
  8231                           
  8232 ;; *************** function _set_dac *****************
  8233 ;; Defined at:
  8234 ;;		line 257 in file "daq.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;		None
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1  [STACK] void 
  8241 ;; Registers used:
  8242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8252 ;;Total ram usage:        0 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:   16
  8255 ;; This function calls:
  8256 ;;		_SPI1_Exchange8bit
  8257 ;;		_dac_spi_control
  8258 ;; This function is called by:
  8259 ;;		_main
  8260 ;; This function uses a reentrant model
  8261 ;;
  8262                           
  8263                           	psect	text11
  8264  000476                     __ptext11:
  8265                           	opt callstack 0
  8266  000476                     _set_dac:
  8267                           	opt callstack 14
  8268                           
  8269                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8270                           
  8271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8272                           ;incstack = 0
  8273  000476  013D               	movlb	61	; () banked
  8274  000478  AB17               	btfss	23,5,b	;volatile
  8275  00047A  D7FD               	goto	_set_dac
  8276                           
  8277                           ; BSR set to: 61
  8278                           
  8279                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8280  00047C  84BC               	bsf	188,2,c	;volatile
  8281                           
  8282                           ; BSR set to: 61
  8283                           
  8284                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8285  00047E  80BC               	bsf	188,0,c	;volatile
  8286                           
  8287                           ; BSR set to: 61
  8288                           ;daq.c: 262:  dac_spi_control(1);
  8289  000480  0E01               	movlw	1
  8290  000482  6EE6               	movwf	postinc1,c
  8291  000484  EC1B  F008         	call	_dac_spi_control	;wreg free
  8292                           
  8293                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8294  000488  C120  F124         	movff	_R+32,_R+36	;volatile
  8295                           
  8296                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8297  00048C  EE20  F120         	lfsr	2,_R+32	;volatile
  8298  000490  006F FF78  F034    	movff	postinc2,btemp+10
  8299  000496  006F FF74  F035    	movff	postdec2,btemp+11
  8300  00049C  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8301  0004A2  6A35               	clrf	(btemp+11)^0,c
  8302  0004A4  0E0F               	movlw	15
  8303  0004A6  1634               	andwf	(btemp+10)^0,f,c
  8304  0004A8  0101               	movlb	1	; () banked
  8305  0004AA  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8306  0004AC  1834               	xorwf	(btemp+10)^0,w,c
  8307  0004AE  0BF0               	andlw	-16
  8308  0004B0  1834               	xorwf	(btemp+10)^0,w,c
  8309  0004B2  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8310                           
  8311                           ; BSR set to: 1
  8312                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8313  0004B4  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8314  0004B6  0B0F               	andlw	-241
  8315  0004B8  0940               	iorlw	64
  8316  0004BA  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8317                           
  8318                           ; BSR set to: 1
  8319  0004BC  90BF               	bcf	191,0,c	;volatile
  8320                           
  8321                           ; BSR set to: 1
  8322                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8323  0004BE  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8324  0004C0  6EE6               	movwf	postinc1,c
  8325  0004C2  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  8326                           
  8327                           ; BSR set to: 57
  8328                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8329  0004C6  0101               	movlb	1	; () banked
  8330  0004C8  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8331  0004CA  6EE6               	movwf	postinc1,c
  8332  0004CC  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  8333                           
  8334                           ; BSR set to: 57
  8335  0004D0  80BF               	bsf	191,0,c	;volatile
  8336                           
  8337                           ; BSR set to: 57
  8338                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8339  0004D2  C122  F124         	movff	_R+34,_R+36	;volatile
  8340                           
  8341                           ; BSR set to: 57
  8342                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8343  0004D6  EE20  F122         	lfsr	2,_R+34	;volatile
  8344  0004DA  006F FF78  F034    	movff	postinc2,btemp+10
  8345  0004E0  006F FF74  F035    	movff	postdec2,btemp+11
  8346  0004E6  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8347  0004EC  6A35               	clrf	(btemp+11)^0,c
  8348  0004EE  0E0F               	movlw	15
  8349  0004F0  1634               	andwf	(btemp+10)^0,f,c
  8350  0004F2  0101               	movlb	1	; () banked
  8351  0004F4  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8352  0004F6  1834               	xorwf	(btemp+10)^0,w,c
  8353  0004F8  0BF0               	andlw	-16
  8354  0004FA  1834               	xorwf	(btemp+10)^0,w,c
  8355  0004FC  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8356                           
  8357                           ; BSR set to: 1
  8358                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8359  0004FE  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8360  000500  0B0F               	andlw	-241
  8361  000502  0950               	iorlw	80
  8362  000504  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8363                           
  8364                           ; BSR set to: 1
  8365  000506  90BF               	bcf	191,0,c	;volatile
  8366                           
  8367                           ; BSR set to: 1
  8368                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8369  000508  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8370  00050A  6EE6               	movwf	postinc1,c
  8371  00050C  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  8372                           
  8373                           ; BSR set to: 57
  8374                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8375  000510  0101               	movlb	1	; () banked
  8376  000512  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8377  000514  6EE6               	movwf	postinc1,c
  8378  000516  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  8379  00051A                     l2033:
  8380  00051A  013D               	movlb	61	; () banked
  8381  00051C  AB17               	btfss	23,5,b	;volatile
  8382  00051E  D7FD               	goto	l2033
  8383                           
  8384                           ; BSR set to: 61
  8385                           
  8386                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8387  000520  80BF               	bsf	191,0,c	;volatile
  8388                           
  8389                           ; BSR set to: 61
  8390                           ;daq.c: 278:  dac_spi_control(0);
  8391  000522  0E00               	movlw	0
  8392  000524  6EE6               	movwf	postinc1,c
  8393  000526  EC1B  F008         	call	_dac_spi_control	;wreg free
  8394                           
  8395                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8396  00052A  0012               	return		;funcret
  8397  00052C                     __end_of_set_dac:
  8398                           	opt callstack 0
  8399                           
  8400 ;; *************** function _dac_spi_control *****************
  8401 ;; Defined at:
  8402 ;;		line 209 in file "daq.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  set             1  [STACK] _Bool 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1  [STACK] void 
  8409 ;; Registers used:
  8410 ;;		wreg, fsr1l, fsr1h, status,2
  8411 ;; Tracked objects:
  8412 ;;		On entry : 3F/3D
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8420 ;;Total ram usage:        0 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:   15
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_set_dac
  8427 ;; This function uses a reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text12
  8431  001036                     __ptext12:
  8432                           	opt callstack 0
  8433  001036                     _dac_spi_control:
  8434                           	opt callstack 14
  8435                           
  8436                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8437                           ;stkvar	_set @ sp[(0)+-1]
  8438                           
  8439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8440                           ;incstack = 0
  8441  001036  0EFF               	movlw	-1
  8442  001038  50E3               	movf	plusw1,w,c
  8443  00103A  B4D8               	btfsc	status,2,c
  8444  00103C  D022               	goto	l13640
  8445                           
  8446                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8447  00103E  013D               	movlb	61	; () banked
  8448  001040  9F14               	bcf	20,7,b	;volatile
  8449                           
  8450                           ; BSR set to: 61
  8451                           ;daq.c: 216:   if (!init) {
  8452  001042  5052               	movf	dac_spi_control@init^0,w,c
  8453  001044  A4D8               	btfss	status,2,c
  8454  001046  D011               	goto	l13628
  8455                           
  8456                           ; BSR set to: 61
  8457                           ;daq.c: 217:    init = 1;
  8458  001048  0E01               	movlw	1
  8459  00104A  6E52               	movwf	dac_spi_control@init^0,c
  8460                           
  8461                           ; BSR set to: 61
  8462                           ;daq.c: 218:    S0 = SPI1CON0;
  8463  00104C  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8464                           
  8465                           ; BSR set to: 61
  8466                           ;daq.c: 219:    S1 = SPI1CON1;
  8467  001052  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8468                           
  8469                           ; BSR set to: 61
  8470                           ;daq.c: 220:    S2 = SPI1CON2;
  8471  001058  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8472                           
  8473                           ; BSR set to: 61
  8474                           ;daq.c: 221:    SC = SPI1CLK;
  8475  00105E  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8476                           
  8477                           ; BSR set to: 61
  8478                           ;daq.c: 222:    SB = SPI1BAUD;
  8479  001064  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8480  00106A                     l13628:
  8481                           
  8482                           ; BSR set to: 61
  8483                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8484  00106A  6B15               	clrf	21,b	;volatile
  8485                           
  8486                           ; BSR set to: 61
  8487                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8488  00106C  8D15               	bsf	21,6,b	;volatile
  8489                           
  8490                           ; BSR set to: 61
  8491                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8492  00106E  9B15               	bcf	21,5,b	;volatile
  8493                           
  8494                           ; BSR set to: 61
  8495                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8496  001070  9F15               	bcf	21,7,b	;volatile
  8497                           
  8498                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8499  001072  0E03               	movlw	3
  8500  001074  6F16               	movwf	22,b	;volatile
  8501                           
  8502                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8503  001076  0E0F               	movlw	15
  8504  001078  6F19               	movwf	25,b	;volatile
  8505                           
  8506                           ; BSR set to: 61
  8507                           ;daq.c: 237:   SPI1CLK = 0x00;
  8508  00107A  6B1C               	clrf	28,b	;volatile
  8509                           
  8510                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8511  00107C  0E83               	movlw	131
  8512  00107E  6F14               	movwf	20,b	;volatile
  8513  001080  D014               	goto	L4
  8514  001082                     l13640:
  8515                           
  8516                           ;daq.c: 242:   if (init) {
  8517  001082  5052               	movf	dac_spi_control@init^0,w,c
  8518  001084  B4D8               	btfsc	status,2,c
  8519  001086  D012               	goto	l2017
  8520                           
  8521                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8522  001088  013D               	movlb	61	; () banked
  8523  00108A  9F14               	bcf	20,7,b	;volatile
  8524                           
  8525                           ;daq.c: 247:    SPI1CON1 = S1;
  8526  00108C  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8527                           
  8528                           ;daq.c: 248:    SPI1CON2 = S2;
  8529  001092  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8530                           
  8531                           ;daq.c: 249:    SPI1CLK = SC;
  8532  001098  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8533                           
  8534                           ;daq.c: 250:    SPI1BAUD = SB;
  8535  00109E  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8536                           
  8537                           ;daq.c: 251:    SPI1CON0 = S0;
  8538  0010A4  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8539  0010AA                     L4:
  8540                           
  8541                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8542  0010AA  8F14               	bsf	20,7,b	;volatile
  8543  0010AC                     l2017:
  8544                           
  8545                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8546  0010AC  52E5               	movf	postdec1,f,c
  8547  0010AE  0012               	return		;funcret
  8548  0010B0                     __end_of_dac_spi_control:
  8549                           	opt callstack 0
  8550                           
  8551 ;; *************** function _read_cal_data *****************
  8552 ;; Defined at:
  8553 ;;		line 370 in file "daq.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;		None
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  x               2  [STACK] unsigned short 
  8558 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8559 ;;		 -> r_cal(155), 
  8560 ;;  y               2  [STACK] unsigned short 
  8561 ;;  crcVal_save     1  [STACK] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1  [STACK] _Bool 
  8564 ;; Registers used:
  8565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/39
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8575 ;;Total ram usage:        0 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:   17
  8578 ;; This function calls:
  8579 ;;		_CRC_8BitDataWrite
  8580 ;;		_CRC_CalculatedResultGet
  8581 ;;		_CRC_Initialize
  8582 ;;		_CRC_IsBusy
  8583 ;;		_CRC_Start
  8584 ;;		_DATAEE_ReadByte
  8585 ;; This function is called by:
  8586 ;;		_main
  8587 ;; This function uses a reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text13
  8591  01D4E2                     __ptext13:
  8592                           	opt callstack 0
  8593  01D4E2                     _read_cal_data:
  8594                           	opt callstack 0
  8595                           
  8596                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8597  01D4E2  0E07               	movlw	7
  8598  01D4E4  26E1               	addwf	fsr1l,f,c
  8599  01D4E6  0E00               	movlw	0
  8600  01D4E8  22E2               	addwfc	fsr1h,f,c
  8601                           
  8602                           ;daq.c: 372:  uint16_t x = 0, y;
  8603                           ;stkvar	_x @ sp[(-7)+0]
  8604                           
  8605                           ;incstack = 0
  8606  01D4EA  0EF9               	movlw	-7
  8607  01D4EC  6AE3               	clrf	plusw1,c
  8608  01D4EE  0EFA               	movlw	-6
  8609  01D4F0  6AE3               	clrf	plusw1,c
  8610                           
  8611                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8612  01D4F2  0E9B               	movlw	155
  8613  01D4F4  6E34               	movwf	(btemp+10)^0,c
  8614  01D4F6  0E00               	movlw	0
  8615  01D4F8  6E35               	movwf	(btemp+11)^0,c
  8616                           
  8617                           ;stkvar	_y @ sp[(-7)+4]
  8618  01D4FA  0EFD               	movlw	-3
  8619  01D4FC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8620  01D502  0EFE               	movlw	-2
  8621  01D504  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8622                           
  8623                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8624                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8625  01D50A  0E04               	movlw	high _r_cal
  8626  01D50C  6E2A               	movwf	btemp^0,c
  8627  01D50E  0EFC               	movlw	-4
  8628  01D510  0060  F0AB  FFE3   	movff	btemp,plusw1
  8629  01D516  0E40               	movlw	low _r_cal
  8630  01D518  6E2A               	movwf	btemp^0,c
  8631  01D51A  0EFB               	movlw	-5
  8632  01D51C  0060  F0AB  FFE3   	movff	btemp,plusw1
  8633                           
  8634                           ;daq.c: 378:  CRC_Initialize();
  8635  01D522  EC4B  F006         	call	_CRC_Initialize	;wreg free
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;daq.c: 381:  CRC_Start();
  8639  01D526  EC8E  F013         	call	_CRC_Start	;wreg free
  8640  01D52A                     l14074:
  8641                           
  8642                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8643                           ;stkvar	_x @ sp[(-7)+0]
  8644  01D52A  0EF9               	movlw	-7
  8645  01D52C  006F FF8F FFE6     	movff	plusw1,postinc1
  8646  01D532  006F FF8F FFE6     	movff	plusw1,postinc1
  8647  01D538  EC8A  F00F         	call	_DATAEE_ReadByte	;wreg free
  8648                           
  8649                           ;stkvar	_x @ sp[(-7)+0]
  8650  01D53C  0EF9               	movlw	-7
  8651  01D53E  006F FF8C  F034    	movff	plusw1,btemp+10
  8652  01D544  0EFA               	movlw	-6
  8653  01D546  006F FF8C  F035    	movff	plusw1,btemp+11
  8654                           
  8655                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8656  01D54C  0EFB               	movlw	-5
  8657  01D54E  006F FF8C  F032    	movff	plusw1,btemp+8
  8658  01D554  0EFC               	movlw	-4
  8659  01D556  006F FF8C  F033    	movff	plusw1,btemp+9
  8660  01D55C  5034               	movf	(btemp+10)^0,w,c
  8661  01D55E  2432               	addwf	(btemp+8)^0,w,c
  8662  01D560  6ED9               	movwf	fsr2l,c
  8663  01D562  5035               	movf	(btemp+11)^0,w,c
  8664  01D564  2033               	addwfc	(btemp+9)^0,w,c
  8665  01D566  6EDA               	movwf	fsr2h,c
  8666  01D568  0060  F0AB  FFDF   	movff	btemp,indf2
  8667                           
  8668                           ;daq.c: 385:  } while (++x < y);
  8669                           ;stkvar	_y @ sp[(-7)+4]
  8670  01D56E  0EFD               	movlw	-3
  8671  01D570  006F FF8C  F034    	movff	plusw1,btemp+10
  8672  01D576  0EFE               	movlw	-2
  8673  01D578  006F FF8C  F035    	movff	plusw1,btemp+11
  8674                           
  8675                           ;stkvar	_x @ sp[(-7)+0]
  8676  01D57E  0EF9               	movlw	-7
  8677  01D580  50E3               	movf	plusw1,w,c
  8678  01D582  0F01               	addlw	1
  8679  01D584  6E2A               	movwf	btemp^0,c
  8680  01D586  0EF9               	movlw	-7
  8681  01D588  0060  F0AB  FFE3   	movff	btemp,plusw1
  8682  01D58E  6A2A               	clrf	btemp^0,c
  8683  01D590  0EFA               	movlw	-6
  8684  01D592  50E3               	movf	plusw1,w,c
  8685  01D594  202A               	addwfc	btemp^0,w,c
  8686  01D596  6E2A               	movwf	btemp^0,c
  8687  01D598  0EFA               	movlw	-6
  8688  01D59A  0060  F0AB  FFE3   	movff	btemp,plusw1
  8689  01D5A0  0EF9               	movlw	-7
  8690  01D5A2  006F FF8C  F032    	movff	plusw1,btemp+8
  8691  01D5A8  0EFA               	movlw	-6
  8692  01D5AA  006F FF8C  F033    	movff	plusw1,btemp+9
  8693  01D5B0  5034               	movf	(btemp+10)^0,w,c
  8694  01D5B2  5C32               	subwf	(btemp+8)^0,w,c
  8695  01D5B4  5035               	movf	(btemp+11)^0,w,c
  8696  01D5B6  5833               	subwfb	(btemp+9)^0,w,c
  8697  01D5B8  A0D8               	btfss	status,0,c
  8698  01D5BA  D7B7               	goto	l14074
  8699                           
  8700                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8701                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8702  01D5BC  0EFF               	movlw	-1
  8703  01D5BE  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8704                           
  8705                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8706  01D5C4  0E57               	movlw	87
  8707  01D5C6  0104               	movlb	4	; () banked
  8708  01D5C8  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8709  01D5CA  E163               	bnz	l14094
  8710  01D5CC  0E19               	movlw	25
  8711  01D5CE  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8712  01D5D0  A4D8               	btfss	status,2,c
  8713  01D5D2  D05F               	goto	u13290
  8714                           
  8715                           ; BSR set to: 4
  8716                           ;daq.c: 389:   r_cal.crc = 0x42;
  8717  01D5D4  0E42               	movlw	66
  8718  01D5D6  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8719                           
  8720                           ; BSR set to: 4
  8721                           ;daq.c: 390:   x = 0;
  8722                           ;stkvar	_x @ sp[(-7)+0]
  8723  01D5D8  0EF9               	movlw	-7
  8724  01D5DA  6AE3               	clrf	plusw1,c
  8725  01D5DC  0EFA               	movlw	-6
  8726  01D5DE  6AE3               	clrf	plusw1,c
  8727  01D5E0                     l14086:
  8728                           
  8729                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8730                           ;stkvar	_x @ sp[(-7)+0]
  8731  01D5E0  0EF9               	movlw	-7
  8732  01D5E2  006F FF8C  F034    	movff	plusw1,btemp+10
  8733  01D5E8  0EFA               	movlw	-6
  8734  01D5EA  006F FF8C  F035    	movff	plusw1,btemp+11
  8735                           
  8736                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8737  01D5F0  0EFB               	movlw	-5
  8738  01D5F2  006F FF8C  F032    	movff	plusw1,btemp+8
  8739  01D5F8  0EFC               	movlw	-4
  8740  01D5FA  006F FF8C  F033    	movff	plusw1,btemp+9
  8741  01D600  5034               	movf	(btemp+10)^0,w,c
  8742  01D602  2432               	addwf	(btemp+8)^0,w,c
  8743  01D604  6ED9               	movwf	fsr2l,c
  8744  01D606  5035               	movf	(btemp+11)^0,w,c
  8745  01D608  2033               	addwfc	(btemp+9)^0,w,c
  8746  01D60A  6EDA               	movwf	fsr2h,c
  8747  01D60C  50DF               	movf	indf2,w,c
  8748  01D60E  6EE6               	movwf	postinc1,c
  8749  01D610  ECFD  F012         	call	_CRC_8BitDataWrite	;wreg free
  8750  01D614                     l14088:
  8751  01D614  EC1F  F013         	call	_CRC_IsBusy	;wreg free
  8752  01D618  502A               	movf	btemp^0,w,c
  8753  01D61A  A4D8               	btfss	status,2,c
  8754  01D61C  D7FB               	goto	l14088
  8755                           
  8756                           ;daq.c: 395:   } while (++x < y);
  8757                           ;stkvar	_y @ sp[(-7)+4]
  8758  01D61E  0EFD               	movlw	-3
  8759  01D620  006F FF8C  F034    	movff	plusw1,btemp+10
  8760  01D626  0EFE               	movlw	-2
  8761  01D628  006F FF8C  F035    	movff	plusw1,btemp+11
  8762                           
  8763                           ;stkvar	_x @ sp[(-7)+0]
  8764  01D62E  0EF9               	movlw	-7
  8765  01D630  50E3               	movf	plusw1,w,c
  8766  01D632  0F01               	addlw	1
  8767  01D634  6E2A               	movwf	btemp^0,c
  8768  01D636  0EF9               	movlw	-7
  8769  01D638  0060  F0AB  FFE3   	movff	btemp,plusw1
  8770  01D63E  6A2A               	clrf	btemp^0,c
  8771  01D640  0EFA               	movlw	-6
  8772  01D642  50E3               	movf	plusw1,w,c
  8773  01D644  202A               	addwfc	btemp^0,w,c
  8774  01D646  6E2A               	movwf	btemp^0,c
  8775  01D648  0EFA               	movlw	-6
  8776  01D64A  0060  F0AB  FFE3   	movff	btemp,plusw1
  8777  01D650  0EF9               	movlw	-7
  8778  01D652  006F FF8C  F032    	movff	plusw1,btemp+8
  8779  01D658  0EFA               	movlw	-6
  8780  01D65A  006F FF8C  F033    	movff	plusw1,btemp+9
  8781  01D660  5034               	movf	(btemp+10)^0,w,c
  8782  01D662  5C32               	subwf	(btemp+8)^0,w,c
  8783  01D664  5035               	movf	(btemp+11)^0,w,c
  8784  01D666  5833               	subwfb	(btemp+9)^0,w,c
  8785  01D668  A0D8               	btfss	status,0,c
  8786  01D66A  D7BA               	goto	l14086
  8787                           
  8788                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8789  01D66C  0E00               	movlw	0
  8790  01D66E  6EE6               	movwf	postinc1,c
  8791  01D670  0E00               	movlw	0
  8792  01D672  6EE6               	movwf	postinc1,c
  8793  01D674  0E00               	movlw	0
  8794  01D676  6EE6               	movwf	postinc1,c
  8795  01D678  ECE4  F0F0         	call	_CRC_CalculatedResultGet	;wreg free
  8796                           
  8797                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8798  01D67C  0EFF               	movlw	-1
  8799  01D67E  50E3               	movf	plusw1,w,c
  8800  01D680  6E34               	movwf	(btemp+10)^0,c
  8801  01D682  6A35               	clrf	(btemp+11)^0,c
  8802  01D684  5034               	movf	(btemp+10)^0,w,c
  8803  01D686  182A               	xorwf	btemp^0,w,c
  8804  01D688  E104               	bnz	u13290
  8805  01D68A  5035               	movf	(btemp+11)^0,w,c
  8806  01D68C  182B               	xorwf	(btemp+1)^0,w,c
  8807  01D68E  B4D8               	btfsc	status,2,c
  8808  01D690  D002               	goto	l14102
  8809  01D692                     u13290:
  8810  01D692                     l14094:
  8811                           
  8812                           ;daq.c: 397:    return 0;
  8813  01D692  0E00               	movlw	0
  8814  01D694  D005               	goto	L5
  8815  01D696                     l14102:
  8816                           
  8817                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  8818                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8819  01D696  0EFF               	movlw	-1
  8820  01D698  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  8821                           
  8822                           ;daq.c: 402:  return 1;
  8823  01D69E  0E01               	movlw	1
  8824  01D6A0                     L5:
  8825  01D6A0  6E2A               	movwf	btemp^0,c
  8826                           
  8827                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8828  01D6A2  0EF9               	movlw	249
  8829  01D6A4  26E1               	addwf	fsr1l,f,c
  8830  01D6A6  0EFF               	movlw	255
  8831  01D6A8  22E2               	addwfc	fsr1h,f,c
  8832  01D6AA  0012               	return		;funcret
  8833  01D6AC                     __end_of_read_cal_data:
  8834                           	opt callstack 0
  8835                           
  8836 ;; *************** function _DATAEE_ReadByte *****************
  8837 ;; Defined at:
  8838 ;;		line 194 in file "mcc_generated_files/memory.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  bAdd            2  [STACK] unsigned short 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1  [STACK] unsigned char 
  8845 ;; Registers used:
  8846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/39
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8856 ;;Total ram usage:        0 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:   15
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_read_cal_data
  8863 ;; This function uses a reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text14
  8867  001F14                     __ptext14:
  8868                           	opt callstack 0
  8869  001F14                     _DATAEE_ReadByte:
  8870                           	opt callstack 14
  8871                           
  8872                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8873                           ;stkvar	_bAdd @ sp[(0)+-2]
  8874                           
  8875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8876                           ;incstack = 0
  8877  001F14  0EFF               	movlw	255
  8878  001F16  24E1               	addwf	fsr1l,w,c
  8879  001F18  6ED9               	movwf	fsr2l,c
  8880  001F1A  0EFF               	movlw	255
  8881  001F1C  20E2               	addwfc	fsr1h,w,c
  8882  001F1E  6EDA               	movwf	fsr2h,c
  8883  001F20  50DF               	movf	indf2,w,c
  8884  001F22  0B03               	andlw	3
  8885  001F24  0139               	movlb	57	; () banked
  8886  001F26  6FE1               	movwf	225,b	;volatile
  8887                           
  8888                           ; BSR set to: 57
  8889                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8890                           ;stkvar	_bAdd @ sp[(0)+-2]
  8891  001F28  0EFE               	movlw	-2
  8892  001F2A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8893                           
  8894                           ; BSR set to: 57
  8895                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8896  001F30  0E3F               	movlw	-193
  8897  001F32  17E5               	andwf	229,f,b	;volsfr
  8898                           
  8899                           ; BSR set to: 57
  8900                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8901  001F34  81E5               	bsf	229,0,b	;volsfr
  8902                           
  8903                           ; BSR set to: 57
  8904                           ;mcc_generated_files/memory.c: 200:     __nop();
  8905  001F36  F000               	nop	
  8906                           
  8907                           ;mcc_generated_files/memory.c: 201:     __nop();
  8908  001F38  F000               	nop	
  8909                           
  8910                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8911  001F3A  006E F78C  F02A    	movff	14819,btemp	;volatile
  8912                           
  8913                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8914  001F40  52E5               	movf	postdec1,f,c
  8915  001F42  52E5               	movf	postdec1,f,c
  8916  001F44  0012               	return		;funcret
  8917  001F46                     __end_of_DATAEE_ReadByte:
  8918                           	opt callstack 0
  8919                           
  8920 ;; *************** function _load_hist_data *****************
  8921 ;; Defined at:
  8922 ;;		line 224 in file "mbmc.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;		None
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;  esr_rescale     2  [STACK] short 
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  1  [STACK] void 
  8929 ;; Registers used:
  8930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  8931 ;; Tracked objects:
  8932 ;;		On entry : 3F/1
  8933 ;;		On exit  : 3F/39
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8940 ;;Total ram usage:        0 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:   16
  8943 ;; This function calls:
  8944 ;;		___fldiv
  8945 ;;		___flmul
  8946 ;;		___fltol
  8947 ;;		_start_bsoc
  8948 ;;		_stop_bsoc
  8949 ;;		_time
  8950 ;; This function is called by:
  8951 ;;		_main
  8952 ;; This function uses a reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text15
  8956  01C13C                     __ptext15:
  8957                           	opt callstack 0
  8958  01C13C                     _load_hist_data:
  8959                           	opt callstack 0
  8960                           
  8961                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8962  01C13C  52E6               	movf	postinc1,f,c
  8963  01C13E  52E6               	movf	postinc1,f,c
  8964                           
  8965                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  8966                           
  8967                           ;incstack = 0
  8968  01C140  EC9A  F013         	call	_stop_bsoc	;wreg free
  8969                           
  8970                           ; BSR set to: 57
  8971                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  8972  01C144  0E00               	movlw	0
  8973  01C146  6EE6               	movwf	postinc1,c
  8974  01C148  0E00               	movlw	0
  8975  01C14A  6EE6               	movwf	postinc1,c
  8976  01C14C  0E7A               	movlw	122
  8977  01C14E  6EE6               	movwf	postinc1,c
  8978  01C150  0E44               	movlw	68
  8979  01C152  6EE6               	movwf	postinc1,c
  8980  01C154  EE22  F187         	lfsr	2,_C+136	;volatile
  8981  01C158  006F FF7B FFE6     	movff	postinc2,postinc1
  8982  01C15E  006F FF7B FFE6     	movff	postinc2,postinc1
  8983  01C164  006F FF7B FFE6     	movff	postinc2,postinc1
  8984  01C16A  006F FF7B FFE6     	movff	postinc2,postinc1
  8985  01C170  EC4D  F0B2         	call	___flmul	;wreg free
  8986  01C174  0060  F0AB  FFE6   	movff	btemp,postinc1
  8987  01C17A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8988  01C180  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8989  01C186  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8990  01C18C  EC9D  F0F1         	call	___fltol	;wreg free
  8991  01C190  0060  F0A8  F034   	movff	btemp,btemp+10
  8992  01C196  0060  F0AC  F035   	movff	btemp+1,btemp+11
  8993                           
  8994                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  8995  01C19C  0EFE               	movlw	-2
  8996  01C19E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8997  01C1A4  0EFF               	movlw	-1
  8998  01C1A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8999                           
  9000                           ;mbmc.c: 230:  C.hist[0].updates++;
  9001  01C1AC  EE22  F1D9         	lfsr	2,_C+218	;volatile
  9002  01C1B0  2ADE               	incf	postinc2,f,c
  9003  01C1B2  0E00               	movlw	0
  9004  01C1B4  22DE               	addwfc	postinc2,f,c
  9005  01C1B6  22DE               	addwfc	postinc2,f,c
  9006  01C1B8  22DE               	addwfc	postinc2,f,c
  9007                           
  9008                           ;mbmc.c: 231:  C.hist[0].h[12] += (int16_t) (C.pvkw / 10.0);
  9009  01C1BA  0E00               	movlw	0
  9010  01C1BC  6EE6               	movwf	postinc1,c
  9011  01C1BE  0E00               	movlw	0
  9012  01C1C0  6EE6               	movwf	postinc1,c
  9013  01C1C2  0E20               	movlw	32
  9014  01C1C4  6EE6               	movwf	postinc1,c
  9015  01C1C6  0E41               	movlw	65
  9016  01C1C8  6EE6               	movwf	postinc1,c
  9017  01C1CA  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9018  01C1CE  006F FF7B FFE6     	movff	postinc2,postinc1
  9019  01C1D4  006F FF7B FFE6     	movff	postinc2,postinc1
  9020  01C1DA  006F FF7B FFE6     	movff	postinc2,postinc1
  9021  01C1E0  006F FF7B FFE6     	movff	postinc2,postinc1
  9022  01C1E6  EC9E  F0BD         	call	___fldiv	;wreg free
  9023  01C1EA  0060  F0AB  FFE6   	movff	btemp,postinc1
  9024  01C1F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9025  01C1F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9026  01C1FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9027  01C202  EC9D  F0F1         	call	___fltol	;wreg free
  9028  01C206  0060  F0A8  F034   	movff	btemp,btemp+10
  9029  01C20C  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9030  01C212  EE22  F1F5         	lfsr	2,_C+246	;volatile
  9031  01C216  5034               	movf	(btemp+10)^0,w,c
  9032  01C218  26DE               	addwf	postinc2,f,c
  9033  01C21A  5035               	movf	(btemp+11)^0,w,c
  9034  01C21C  22DD               	addwfc	postdec2,f,c
  9035                           
  9036                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9037  01C21E  EE22  F1F3         	lfsr	2,_C+244	;volatile
  9038  01C222  2ADE               	incf	postinc2,f,c
  9039  01C224  0E00               	movlw	0
  9040  01C226  22DD               	addwfc	postdec2,f,c
  9041                           
  9042                           ;mbmc.c: 233:  C.hist[10].h[10] = esr_rescale;
  9043                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9044  01C228  50E1               	movf	fsr1l,w,c
  9045  01C22A  0FFE               	addlw	-2
  9046  01C22C  6ED9               	movwf	fsr2l,c
  9047  01C22E  50E2               	movf	fsr1h,w,c
  9048  01C230  6EDA               	movwf	fsr2h,c
  9049  01C232  0EFF               	movlw	255
  9050  01C234  22DA               	addwfc	fsr2h,f,c
  9051  01C236  006F FF78  FDBB    	movff	postinc2,_C+1212	;volatile
  9052  01C23C  006F FF74  FDBC    	movff	postdec2,_C+1213	;volatile
  9053                           
  9054                           ;mbmc.c: 234:  C.hist[10].h[9] = esr_rescale;
  9055                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9056  01C242  50E1               	movf	fsr1l,w,c
  9057  01C244  0FFE               	addlw	-2
  9058  01C246  6ED9               	movwf	fsr2l,c
  9059  01C248  50E2               	movf	fsr1h,w,c
  9060  01C24A  6EDA               	movwf	fsr2h,c
  9061  01C24C  0EFF               	movlw	255
  9062  01C24E  22DA               	addwfc	fsr2h,f,c
  9063  01C250  006F FF78  FDB9    	movff	postinc2,_C+1210	;volatile
  9064  01C256  006F FF74  FDBA    	movff	postdec2,_C+1211	;volatile
  9065                           
  9066                           ;mbmc.c: 235:  C.hist[0].h[6] = C.dynamic_ah;
  9067  01C25C  EE22  F18F         	lfsr	2,_C+144	;volatile
  9068  01C260  006F FF7B FFE6     	movff	postinc2,postinc1
  9069  01C266  006F FF7B FFE6     	movff	postinc2,postinc1
  9070  01C26C  006F FF7B FFE6     	movff	postinc2,postinc1
  9071  01C272  006F FF7B FFE6     	movff	postinc2,postinc1
  9072  01C278  EC9D  F0F1         	call	___fltol	;wreg free
  9073  01C27C  0060  F0A8  F034   	movff	btemp,btemp+10
  9074  01C282  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9075  01C288  0060  F0D0  F9E9   	movff	btemp+10,_C+234	;volatile
  9076  01C28E  0060  F0D4  F9EA   	movff	btemp+11,_C+235	;volatile
  9077                           
  9078                           ;mbmc.c: 236:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9079  01C294  EE22  F19B         	lfsr	2,_C+156	;volatile
  9080  01C298  006F FF7B FFE6     	movff	postinc2,postinc1
  9081  01C29E  006F FF7B FFE6     	movff	postinc2,postinc1
  9082  01C2A4  006F FF7B FFE6     	movff	postinc2,postinc1
  9083  01C2AA  006F FF7B FFE6     	movff	postinc2,postinc1
  9084  01C2B0  EC9D  F0F1         	call	___fltol	;wreg free
  9085  01C2B4  0060  F0A8  F034   	movff	btemp,btemp+10
  9086  01C2BA  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9087  01C2C0  0060  F0D0  F9DD   	movff	btemp+10,_C+222	;volatile
  9088  01C2C6  0060  F0D4  F9DE   	movff	btemp+11,_C+223	;volatile
  9089                           
  9090                           ;mbmc.c: 237:  C.hist[0].pclock = time(((void*)0));
  9091  01C2CC  0E00               	movlw	0
  9092  01C2CE  6EE6               	movwf	postinc1,c
  9093  01C2D0  0E00               	movlw	0
  9094  01C2D2  6EE6               	movwf	postinc1,c
  9095  01C2D4  ECFD  F00A         	call	_time	;wreg free
  9096  01C2D8  52E5               	movf	postdec1,f,c
  9097  01C2DA  006F FF9C  F041    	movff	indf1,btemp+23
  9098  01C2E0  52E5               	movf	postdec1,f,c
  9099  01C2E2  006F FF9C  F040    	movff	indf1,btemp+22
  9100  01C2E8  52E5               	movf	postdec1,f,c
  9101  01C2EA  006F FF9C  F03F    	movff	indf1,btemp+21
  9102  01C2F0  52E5               	movf	postdec1,f,c
  9103  01C2F2  006F FF9C  F03E    	movff	indf1,btemp+20
  9104  01C2F8  52E5               	movf	postdec1,f,c
  9105  01C2FA  006F FF9C  F03D    	movff	indf1,btemp+19
  9106  01C300  52E5               	movf	postdec1,f,c
  9107  01C302  006F FF9C  F03C    	movff	indf1,btemp+18
  9108  01C308  52E5               	movf	postdec1,f,c
  9109  01C30A  006F FF9C  F03B    	movff	indf1,btemp+17
  9110  01C310  52E5               	movf	postdec1,f,c
  9111  01C312  006F FF9C  F03A    	movff	indf1,btemp+16
  9112  01C318  EE22  F1B9         	lfsr	2,_C+186	;volatile
  9113  01C31C  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9114  01C322  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9115  01C328  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9116  01C32E  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9117  01C334  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9118  01C33A  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9119  01C340  0060  F103  FFDE   	movff	btemp+22,postinc2
  9120  01C346  0060  F107  FFDE   	movff	btemp+23,postinc2
  9121                           
  9122                           ; BSR set to: 57
  9123                           ;mbmc.c: 238:  C.dynamic_ah = 0.0;
  9124  01C34C  0E00               	movlw	0
  9125  01C34E  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9126  01C354  0E00               	movlw	0
  9127  01C356  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9128  01C35C  0E00               	movlw	0
  9129  01C35E  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9130  01C364  0E00               	movlw	0
  9131  01C366  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9132                           
  9133                           ; BSR set to: 57
  9134                           ;mbmc.c: 239:  C.dynamic_ah_adj = 0.0;
  9135  01C36C  0E00               	movlw	0
  9136  01C36E  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9137  01C374  0E00               	movlw	0
  9138  01C376  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9139  01C37C  0E00               	movlw	0
  9140  01C37E  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9141  01C384  0E00               	movlw	0
  9142  01C386  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9143                           
  9144                           ; BSR set to: 57
  9145                           ;mbmc.c: 240:  start_bsoc();
  9146  01C38C  EC16  F012         	call	_start_bsoc	;wreg free
  9147                           
  9148                           ; BSR set to: 57
  9149                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9150  01C390  52E5               	movf	postdec1,f,c
  9151  01C392  52E5               	movf	postdec1,f,c
  9152  01C394  0012               	return		;funcret
  9153  01C396                     __end_of_load_hist_data:
  9154                           	opt callstack 0
  9155                           
  9156 ;; *************** function _init_port_dma *****************
  9157 ;; Defined at:
  9158 ;;		line 104 in file "eadog.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1  [STACK] void 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/2
  9169 ;;		On exit  : 3F/3B
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9176 ;;Total ram usage:        0 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:   15
  9179 ;; This function calls:
  9180 ;;		Nothing
  9181 ;; This function is called by:
  9182 ;;		_main
  9183 ;; This function uses a reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text16
  9187  001F46                     __ptext16:
  9188                           	opt callstack 0
  9189  001F46                     _init_port_dma:
  9190                           	opt callstack 15
  9191                           
  9192                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9193                           
  9194                           ; BSR set to: 57
  9195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9196                           ;incstack = 0
  9197  001F46  0E3F               	movlw	-193
  9198  001F48  013B               	movlb	59	; () banked
  9199  001F4A  17DD               	andwf	221,f,b	;volatile
  9200                           
  9201                           ; BSR set to: 59
  9202                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9203  001F4C  9BDD               	bcf	221,5,b	;volatile
  9204                           
  9205                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9206  001F4E  51DD               	movf	221,w,b	;volatile
  9207  001F50  0BF9               	andlw	-7
  9208  001F52  0902               	iorlw	2
  9209  001F54  6FDD               	movwf	221,b	;volatile
  9210                           
  9211                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9212  001F56  0EE7               	movlw	-25
  9213  001F58  17DD               	andwf	221,f,b	;volatile
  9214                           
  9215                           ; BSR set to: 59
  9216                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9217  001F5A  81DD               	bsf	221,0,b	;volatile
  9218                           
  9219                           ; BSR set to: 59
  9220                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9221  001F5C  9DDC               	bcf	220,6,b	;volatile
  9222                           
  9223                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9224  001F5E  0E3D               	movlw	61
  9225  001F60  6FD1               	movwf	209,b	;volatile
  9226  001F62  0EEA               	movlw	234
  9227  001F64  6FD0               	movwf	208,b	;volatile
  9228                           
  9229                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9230  001F66  0EFF               	movlw	low _port_data
  9231  001F68  6FD9               	movwf	217,b	;volatile
  9232  001F6A  0E06               	movlw	high _port_data
  9233  001F6C  6FDA               	movwf	218,b	;volatile
  9234  001F6E  0E00               	movlw	low (_port_data shr (0+16))
  9235  001F70  6FDB               	movwf	219,b	;volatile
  9236                           
  9237                           ; BSR set to: 59
  9238                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9239  001F72  9BDC               	bcf	220,5,b	;volatile
  9240                           
  9241                           ; BSR set to: 59
  9242                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9243  001F74  0012               	return		;funcret
  9244  001F76                     __end_of_init_port_dma:
  9245                           	opt callstack 0
  9246                           
  9247 ;; *************** function _init_display *****************
  9248 ;; Defined at:
  9249 ;;		line 38 in file "eadog.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;		None
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;		None
  9254 ;; Return value:  Size  Location     Type
  9255 ;;                  1  [STACK] void 
  9256 ;; Registers used:
  9257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9258 ;; Tracked objects:
  9259 ;;		On entry : 3F/3B
  9260 ;;		On exit  : 3F/3D
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9267 ;;Total ram usage:        0 bytes
  9268 ;; Hardware stack levels used:    1
  9269 ;; Hardware stack levels required when called:   17
  9270 ;; This function calls:
  9271 ;;		_ringBufS_init
  9272 ;;		_send_lcd_cmd
  9273 ;;		_send_lcd_cmd_long
  9274 ;;		_send_lcd_data
  9275 ;;		_wdtdelay
  9276 ;; This function is called by:
  9277 ;;		_main
  9278 ;; This function uses a reentrant model
  9279 ;;
  9280                           
  9281                           	psect	text17
  9282  01FD3E                     __ptext17:
  9283                           	opt callstack 0
  9284  01FD3E                     _init_display:
  9285                           	opt callstack 13
  9286                           
  9287                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9288                           
  9289                           ; BSR set to: 59
  9290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9291                           ;incstack = 0
  9292  01FD3E  0E43               	movlw	low _ring_buf1
  9293  01FD40  0100               	movlb	0	; () banked
  9294  01FD42  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9295  01FD44  0E05               	movlw	high _ring_buf1
  9296  01FD46  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9297                           
  9298                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9299  01FD48  0E00               	movlw	low _ring_buf2
  9300  01FD4A  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9301  01FD4C  0E05               	movlw	high _ring_buf2
  9302  01FD4E  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9306  01FD50  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9307  01FD56  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9308  01FD5C  EC5B  F010         	call	_ringBufS_init	;wreg free
  9309                           
  9310                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9311  01FD60  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9312  01FD66  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9313  01FD6C  EC5B  F010         	call	_ringBufS_init	;wreg free
  9314                           
  9315                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9316  01FD70  84BE               	bsf	190,2,c	;volatile
  9317                           
  9318                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9319  01FD72  013D               	movlb	61	; () banked
  9320  01FD74  9F14               	bcf	20,7,b	;volatile
  9321                           
  9322                           ; BSR set to: 61
  9323                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9324  01FD76  0E20               	movlw	32
  9325  01FD78  6F15               	movwf	21,b	;volatile
  9326                           
  9327                           ; BSR set to: 61
  9328                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9329  01FD7A  0E03               	movlw	3
  9330  01FD7C  6F16               	movwf	22,b	;volatile
  9331                           
  9332                           ; BSR set to: 61
  9333                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9334  01FD7E  0E04               	movlw	4
  9335  01FD80  6F19               	movwf	25,b	;volatile
  9336                           
  9337                           ; BSR set to: 61
  9338                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9339  01FD82  0E02               	movlw	2
  9340  01FD84  6F1C               	movwf	28,b	;volatile
  9341                           
  9342                           ; BSR set to: 61
  9343                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9344  01FD86  0E83               	movlw	131
  9345  01FD88  6F14               	movwf	20,b	;volatile
  9346                           
  9347                           ; BSR set to: 61
  9348                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9349  01FD8A  8F14               	bsf	20,7,b	;volatile
  9350                           
  9351                           ; BSR set to: 61
  9352                           ;eadog.c: 60:  wdtdelay(350000);
  9353  01FD8C  0E30               	movlw	48
  9354  01FD8E  6EE6               	movwf	postinc1,c
  9355  01FD90  0E57               	movlw	87
  9356  01FD92  6EE6               	movwf	postinc1,c
  9357  01FD94  0E05               	movlw	5
  9358  01FD96  6EE6               	movwf	postinc1,c
  9359  01FD98  0E00               	movlw	0
  9360  01FD9A  6EE6               	movwf	postinc1,c
  9361  01FD9C  EC59  F00B         	call	_wdtdelay	;wreg free
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9365  01FDA0  0E46               	movlw	70
  9366  01FDA2  6EE6               	movwf	postinc1,c
  9367  01FDA4  ECBA  F00D         	call	_send_lcd_cmd_long	;wreg free
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9371  01FDA8  0E41               	movlw	65
  9372  01FDAA  6EE6               	movwf	postinc1,c
  9373  01FDAC  ECDA  F00D         	call	_send_lcd_cmd	;wreg free
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;eadog.c: 63:  wdtdelay(80);
  9377  01FDB0  0E50               	movlw	80
  9378  01FDB2  6EE6               	movwf	postinc1,c
  9379  01FDB4  0E00               	movlw	0
  9380  01FDB6  6EE6               	movwf	postinc1,c
  9381  01FDB8  0E00               	movlw	0
  9382  01FDBA  6EE6               	movwf	postinc1,c
  9383  01FDBC  0E00               	movlw	0
  9384  01FDBE  6EE6               	movwf	postinc1,c
  9385  01FDC0  EC59  F00B         	call	_wdtdelay	;wreg free
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9389  01FDC4  0E53               	movlw	83
  9390  01FDC6  6EE6               	movwf	postinc1,c
  9391  01FDC8  ECDA  F00D         	call	_send_lcd_cmd	;wreg free
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;eadog.c: 65:  send_lcd_data(2);
  9395  01FDCC  0E02               	movlw	2
  9396  01FDCE  6EE6               	movwf	postinc1,c
  9397  01FDD0  EC88  F011         	call	_send_lcd_data	;wreg free
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;eadog.c: 66:  wdtdelay(80);
  9401  01FDD4  0E50               	movlw	80
  9402  01FDD6  6EE6               	movwf	postinc1,c
  9403  01FDD8  0E00               	movlw	0
  9404  01FDDA  6EE6               	movwf	postinc1,c
  9405  01FDDC  0E00               	movlw	0
  9406  01FDDE  6EE6               	movwf	postinc1,c
  9407  01FDE0  0E00               	movlw	0
  9408  01FDE2  6EE6               	movwf	postinc1,c
  9409  01FDE4  EC59  F00B         	call	_wdtdelay	;wreg free
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9413  01FDE8  0E51               	movlw	81
  9414  01FDEA  6EE6               	movwf	postinc1,c
  9415  01FDEC  ECBA  F00D         	call	_send_lcd_cmd_long	;wreg free
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9419  01FDF0  013D               	movlb	61	; () banked
  9420  01FDF2  9F14               	bcf	20,7,b	;volatile
  9421                           
  9422                           ; BSR set to: 61
  9423                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9424  01FDF4  0E02               	movlw	2
  9425  01FDF6  6F16               	movwf	22,b	;volatile
  9426                           
  9427                           ; BSR set to: 61
  9428                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9429  01FDF8  8F14               	bsf	20,7,b	;volatile
  9430                           
  9431                           ; BSR set to: 61
  9432                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9433  01FDFA  931A               	bcf	26,1,b	;volatile
  9434                           
  9435                           ; BSR set to: 61
  9436                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9437  01FDFC  0E3F               	movlw	-193
  9438  01FDFE  013B               	movlb	59	; () banked
  9439  01FE00  17FD               	andwf	253,f,b	;volatile
  9440                           
  9441                           ; BSR set to: 59
  9442                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9443  01FE02  9BFD               	bcf	253,5,b	;volatile
  9444                           
  9445                           ; BSR set to: 59
  9446                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9447  01FE04  51FD               	movf	253,w,b	;volatile
  9448  01FE06  0BF9               	andlw	-7
  9449  01FE08  0902               	iorlw	2
  9450  01FE0A  6FFD               	movwf	253,b	;volatile
  9451                           
  9452                           ; BSR set to: 59
  9453                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9454  01FE0C  0EE7               	movlw	-25
  9455  01FE0E  17FD               	andwf	253,f,b	;volatile
  9456                           
  9457                           ; BSR set to: 59
  9458                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9459  01FE10  81FD               	bsf	253,0,b	;volatile
  9460                           
  9461                           ; BSR set to: 59
  9462                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9463  01FE12  0E43               	movlw	low _ring_buf1
  9464  01FE14  6FF9               	movwf	249,b	;volatile
  9465  01FE16  0E05               	movlw	high _ring_buf1
  9466  01FE18  6FFA               	movwf	250,b	;volatile
  9467  01FE1A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9468  01FE1C  6FFB               	movwf	251,b	;volatile
  9469                           
  9470                           ; BSR set to: 59
  9471                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9472  01FE1E  9BFC               	bcf	252,5,b	;volatile
  9473                           
  9474                           ; BSR set to: 59
  9475                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9476  01FE20  013D               	movlb	61	; () banked
  9477  01FE22  831A               	bsf	26,1,b	;volatile
  9478                           
  9479                           ; BSR set to: 61
  9480                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9481  01FE24  94BE               	bcf	190,2,c	;volatile
  9482                           
  9483                           ; BSR set to: 61
  9484                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9485  01FE26  0012               	return		;funcret
  9486  01FE28                     __end_of_init_display:
  9487                           	opt callstack 0
  9488                           
  9489 ;; *************** function _send_lcd_data *****************
  9490 ;; Defined at:
  9491 ;;		line 123 in file "eadog.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  data            1  [STACK] const unsigned char 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;		None
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  1  [STACK] void 
  9498 ;; Registers used:
  9499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9500 ;; Tracked objects:
  9501 ;;		On entry : 3F/0
  9502 ;;		On exit  : 3F/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9509 ;;Total ram usage:        0 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; Hardware stack levels required when called:   16
  9512 ;; This function calls:
  9513 ;;		_SPI1_Exchange8bit
  9514 ;;		_wdtdelay
  9515 ;; This function is called by:
  9516 ;;		_init_display
  9517 ;; This function uses a reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text18
  9521  002310                     __ptext18:
  9522                           	opt callstack 0
  9523  002310                     _send_lcd_data:
  9524                           	opt callstack 13
  9525                           
  9526                           ; BSR set to: 61
  9527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9528                           ;incstack = 0
  9529                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9530  002310  94BC               	bcf	188,2,c	;volatile
  9531                           
  9532                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9533                           ;stkvar	_data @ sp[(0)+-1]
  9534  002312  0EFF               	movlw	-1
  9535  002314  50E3               	movf	plusw1,w,c
  9536  002316  6EE6               	movwf	postinc1,c
  9537  002318  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9538                           
  9539                           ; BSR set to: 57
  9540                           ;eadog.c: 127:  wdtdelay(8);
  9541  00231C  0E08               	movlw	8
  9542  00231E  6EE6               	movwf	postinc1,c
  9543  002320  0E00               	movlw	0
  9544  002322  6EE6               	movwf	postinc1,c
  9545  002324  0E00               	movlw	0
  9546  002326  6EE6               	movwf	postinc1,c
  9547  002328  0E00               	movlw	0
  9548  00232A  6EE6               	movwf	postinc1,c
  9549  00232C  EC59  F00B         	call	_wdtdelay	;wreg free
  9550                           
  9551                           ; BSR set to: 0
  9552                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9553  002330  52E5               	movf	postdec1,f,c
  9554  002332  0012               	return		;funcret
  9555  002334                     __end_of_send_lcd_data:
  9556                           	opt callstack 0
  9557                           
  9558 ;; *************** function _send_lcd_cmd_long *****************
  9559 ;; Defined at:
  9560 ;;		line 139 in file "eadog.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  cmd             1  [STACK] const unsigned char 
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1  [STACK] void 
  9567 ;; Registers used:
  9568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9569 ;; Tracked objects:
  9570 ;;		On entry : 3F/0
  9571 ;;		On exit  : 3F/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:   16
  9581 ;; This function calls:
  9582 ;;		_SPI1_Exchange8bit
  9583 ;;		_wdtdelay
  9584 ;; This function is called by:
  9585 ;;		_init_display
  9586 ;; This function uses a reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text19
  9590  001B74                     __ptext19:
  9591                           	opt callstack 0
  9592  001B74                     _send_lcd_cmd_long:
  9593                           	opt callstack 13
  9594                           
  9595                           ; BSR set to: 0
  9596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9597                           ;incstack = 0
  9598                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9599  001B74  94BC               	bcf	188,2,c	;volatile
  9600                           
  9601                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9602  001B76  0EFE               	movlw	254
  9603  001B78  6EE6               	movwf	postinc1,c
  9604  001B7A  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9605                           
  9606                           ; BSR set to: 57
  9607                           ;eadog.c: 143:  wdtdelay(8);
  9608  001B7E  0E08               	movlw	8
  9609  001B80  6EE6               	movwf	postinc1,c
  9610  001B82  0E00               	movlw	0
  9611  001B84  6EE6               	movwf	postinc1,c
  9612  001B86  0E00               	movlw	0
  9613  001B88  6EE6               	movwf	postinc1,c
  9614  001B8A  0E00               	movlw	0
  9615  001B8C  6EE6               	movwf	postinc1,c
  9616  001B8E  EC59  F00B         	call	_wdtdelay	;wreg free
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9620                           ;stkvar	_cmd @ sp[(0)+-1]
  9621  001B92  0EFF               	movlw	-1
  9622  001B94  50E3               	movf	plusw1,w,c
  9623  001B96  6EE6               	movwf	postinc1,c
  9624  001B98  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9625                           
  9626                           ;eadog.c: 145:  wdtdelay(800);
  9627  001B9C  0E20               	movlw	32
  9628  001B9E  6EE6               	movwf	postinc1,c
  9629  001BA0  0E03               	movlw	3
  9630  001BA2  6EE6               	movwf	postinc1,c
  9631  001BA4  0E00               	movlw	0
  9632  001BA6  6EE6               	movwf	postinc1,c
  9633  001BA8  0E00               	movlw	0
  9634  001BAA  6EE6               	movwf	postinc1,c
  9635  001BAC  EC59  F00B         	call	_wdtdelay	;wreg free
  9636                           
  9637                           ; BSR set to: 0
  9638                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9639  001BB0  52E5               	movf	postdec1,f,c
  9640  001BB2  0012               	return		;funcret
  9641  001BB4                     __end_of_send_lcd_cmd_long:
  9642                           	opt callstack 0
  9643                           
  9644 ;; *************** function _send_lcd_cmd *****************
  9645 ;; Defined at:
  9646 ;;		line 130 in file "eadog.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  cmd             1  [STACK] const unsigned char 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;		None
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1  [STACK] void 
  9653 ;; Registers used:
  9654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9655 ;; Tracked objects:
  9656 ;;		On entry : 3F/0
  9657 ;;		On exit  : 3F/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;Total ram usage:        0 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:   16
  9667 ;; This function calls:
  9668 ;;		_SPI1_Exchange8bit
  9669 ;;		_wdtdelay
  9670 ;; This function is called by:
  9671 ;;		_init_display
  9672 ;; This function uses a reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text20
  9676  001BB4                     __ptext20:
  9677                           	opt callstack 0
  9678  001BB4                     _send_lcd_cmd:
  9679                           	opt callstack 13
  9680                           
  9681                           ; BSR set to: 0
  9682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9683                           ;incstack = 0
  9684                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9685  001BB4  94BC               	bcf	188,2,c	;volatile
  9686                           
  9687                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9688  001BB6  0EFE               	movlw	254
  9689  001BB8  6EE6               	movwf	postinc1,c
  9690  001BBA  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9691                           
  9692                           ; BSR set to: 57
  9693                           ;eadog.c: 134:  wdtdelay(8);
  9694  001BBE  0E08               	movlw	8
  9695  001BC0  6EE6               	movwf	postinc1,c
  9696  001BC2  0E00               	movlw	0
  9697  001BC4  6EE6               	movwf	postinc1,c
  9698  001BC6  0E00               	movlw	0
  9699  001BC8  6EE6               	movwf	postinc1,c
  9700  001BCA  0E00               	movlw	0
  9701  001BCC  6EE6               	movwf	postinc1,c
  9702  001BCE  EC59  F00B         	call	_wdtdelay	;wreg free
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9706                           ;stkvar	_cmd @ sp[(0)+-1]
  9707  001BD2  0EFF               	movlw	-1
  9708  001BD4  50E3               	movf	plusw1,w,c
  9709  001BD6  6EE6               	movwf	postinc1,c
  9710  001BD8  EC58  F012         	call	_SPI1_Exchange8bit	;wreg free
  9711                           
  9712                           ;eadog.c: 136:  wdtdelay(8);
  9713  001BDC  0E08               	movlw	8
  9714  001BDE  6EE6               	movwf	postinc1,c
  9715  001BE0  0E00               	movlw	0
  9716  001BE2  6EE6               	movwf	postinc1,c
  9717  001BE4  0E00               	movlw	0
  9718  001BE6  6EE6               	movwf	postinc1,c
  9719  001BE8  0E00               	movlw	0
  9720  001BEA  6EE6               	movwf	postinc1,c
  9721  001BEC  EC59  F00B         	call	_wdtdelay	;wreg free
  9722                           
  9723                           ; BSR set to: 0
  9724                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9725  001BF0  52E5               	movf	postdec1,f,c
  9726  001BF2  0012               	return		;funcret
  9727  001BF4                     __end_of_send_lcd_cmd:
  9728                           	opt callstack 0
  9729                           
  9730 ;; *************** function _SPI1_Exchange8bit *****************
  9731 ;; Defined at:
  9732 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  data            1  [STACK] unsigned char 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;		None
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1  [STACK] unsigned char 
  9739 ;; Registers used:
  9740 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/1
  9743 ;;		On exit  : 3F/39
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9750 ;;Total ram usage:        0 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:   15
  9753 ;; This function calls:
  9754 ;;		Nothing
  9755 ;; This function is called by:
  9756 ;;		_send_lcd_data
  9757 ;;		_send_lcd_cmd
  9758 ;;		_send_lcd_cmd_long
  9759 ;;		_set_dac
  9760 ;; This function uses a reentrant model
  9761 ;;
  9762                           
  9763                           	psect	text21
  9764  0024B0                     __ptext21:
  9765                           	opt callstack 0
  9766  0024B0                     _SPI1_Exchange8bit:
  9767                           	opt callstack 14
  9768                           
  9769                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9770                           
  9771                           ; BSR set to: 0
  9772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9773                           ;incstack = 0
  9774  0024B0  0E01               	movlw	1
  9775  0024B2  013D               	movlb	61	; () banked
  9776  0024B4  6F12               	movwf	18,b	;volatile
  9777                           
  9778                           ; BSR set to: 61
  9779                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9780                           ;stkvar	_data @ sp[(0)+-1]
  9781  0024B6  0EFF               	movlw	-1
  9782  0024B8  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9783  0024BE                     l809:
  9784                           
  9785                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9786  0024BE  0139               	movlb	57	; () banked
  9787  0024C0  A9A2               	btfss	162,4,b	;volatile
  9788  0024C2  D7FD               	goto	l809
  9789                           
  9790                           ; BSR set to: 57
  9791                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9792  0024C4  006F F440  F02A    	movff	15632,btemp	;volatile
  9793                           
  9794                           ; BSR set to: 57
  9795                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9796  0024CA  52E5               	movf	postdec1,f,c
  9797  0024CC  0012               	return		;funcret
  9798  0024CE                     __end_of_SPI1_Exchange8bit:
  9799                           	opt callstack 0
  9800                           
  9801 ;; *************** function _ringBufS_init *****************
  9802 ;; Defined at:
  9803 ;;		line 22 in file "ringbufs.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  _this           2  [STACK] PTR volatile struct ring
  9806 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1  [STACK] void 
  9811 ;; Registers used:
  9812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:   16
  9825 ;; This function calls:
  9826 ;;		_memset
  9827 ;; This function is called by:
  9828 ;;		_init_display
  9829 ;; This function uses a reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text22
  9833  0020B6                     __ptext22:
  9834                           	opt callstack 0
  9835  0020B6                     _ringBufS_init:
  9836                           	opt callstack 13
  9837                           
  9838                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9839                           
  9840                           ; BSR set to: 57
  9841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9842                           ;incstack = 0
  9843  0020B6  0E43               	movlw	67
  9844  0020B8  6EE6               	movwf	postinc1,c
  9845  0020BA  0E00               	movlw	0
  9846  0020BC  6EE6               	movwf	postinc1,c
  9847  0020BE  0E00               	movlw	0
  9848  0020C0  6EE6               	movwf	postinc1,c
  9849  0020C2  0E00               	movlw	0
  9850  0020C4  6EE6               	movwf	postinc1,c
  9851                           
  9852                           ;stkvar	__this @ sp[(-4)+-2]
  9853  0020C6  0EFA               	movlw	-6
  9854  0020C8  006F FF8F FFE6     	movff	plusw1,postinc1
  9855  0020CE  006F FF8F FFE6     	movff	plusw1,postinc1
  9856  0020D4  ECF6  F0D5         	call	_memset	;wreg free
  9857                           
  9858                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9859  0020D8  52E5               	movf	postdec1,f,c
  9860  0020DA  52E5               	movf	postdec1,f,c
  9861  0020DC  0012               	return		;funcret
  9862  0020DE                     __end_of_ringBufS_init:
  9863                           	opt callstack 0
  9864                           
  9865 ;; *************** function _init_bsoc *****************
  9866 ;; Defined at:
  9867 ;;		line 110 in file "bsoc.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;		None
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1  [STACK] void 
  9874 ;; Registers used:
  9875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/1
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9885 ;;Total ram usage:        0 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:   18
  9888 ;; This function calls:
  9889 ;;		_TMR3_SetInterruptHandler
  9890 ;;		_Volts_to_SOC
  9891 ;;		___fldiv
  9892 ;;		___flmul
  9893 ;;		___fltol
  9894 ;;		___xxtofl
  9895 ;;		_conv_raw_result
  9896 ;; This function is called by:
  9897 ;;		_main
  9898 ;; This function uses a reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text23
  9902  01C396                     __ptext23:
  9903                           	opt callstack 0
  9904  01C396                     _init_bsoc:
  9905                           	opt callstack 12
  9906                           
  9907                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  9908                           
  9909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9910                           ;incstack = 0
  9911  01C396  0E00               	movlw	0
  9912  01C398  6EE6               	movwf	postinc1,c
  9913  01C39A  0E00               	movlw	0
  9914  01C39C  6EE6               	movwf	postinc1,c
  9915  01C39E  0E7A               	movlw	122
  9916  01C3A0  6EE6               	movwf	postinc1,c
  9917  01C3A2  0E44               	movlw	68
  9918  01C3A4  6EE6               	movwf	postinc1,c
  9919  01C3A6  0E00               	movlw	0
  9920  01C3A8  6EE6               	movwf	postinc1,c
  9921  01C3AA  0E04               	movlw	4
  9922  01C3AC  6EE6               	movwf	postinc1,c
  9923  01C3AE  ECE6  F0C2         	call	_conv_raw_result	;wreg free
  9924  01C3B2  0060  F0AB  FFE6   	movff	btemp,postinc1
  9925  01C3B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9926  01C3BE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9927  01C3C4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9928  01C3CA  EC9D  F0F1         	call	___fltol	;wreg free
  9929  01C3CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9930  01C3D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9931  01C3DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9932  01C3E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9933  01C3E6  0E00               	movlw	0
  9934  01C3E8  6EE6               	movwf	postinc1,c
  9935  01C3EA  EC6F  F0E9         	call	___xxtofl	;wreg free
  9936  01C3EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9937  01C3F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9938  01C3FA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9939  01C400  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9940  01C406  EC4D  F0B2         	call	___flmul	;wreg free
  9941  01C40A  0060  F0AB  FFE6   	movff	btemp,postinc1
  9942  01C410  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9943  01C416  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9944  01C41C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9945  01C422  EC9D  F0F1         	call	___fltol	;wreg free
  9946  01C426  0060  F0AB  FFE6   	movff	btemp,postinc1
  9947  01C42C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9948  01C432  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9949  01C438  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9950  01C43E  EC82  F001         	call	_Volts_to_SOC	;wreg free
  9951  01C442  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
  9952  01C448  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
  9953                           
  9954                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9955  01C44E  EE22  F18B         	lfsr	2,_C+140	;volatile
  9956  01C452  006F FF7B FFE6     	movff	postinc2,postinc1
  9957  01C458  006F FF7B FFE6     	movff	postinc2,postinc1
  9958  01C45E  006F FF7B FFE6     	movff	postinc2,postinc1
  9959  01C464  006F FF7B FFE6     	movff	postinc2,postinc1
  9960  01C46A  0E00               	movlw	0
  9961  01C46C  6EE6               	movwf	postinc1,c
  9962  01C46E  0E00               	movlw	0
  9963  01C470  6EE6               	movwf	postinc1,c
  9964  01C472  0EC8               	movlw	200
  9965  01C474  6EE6               	movwf	postinc1,c
  9966  01C476  0E42               	movlw	66
  9967  01C478  6EE6               	movwf	postinc1,c
  9968  01C47A  0E00               	movlw	0
  9969  01C47C  6EE6               	movwf	postinc1,c
  9970  01C47E  0E00               	movlw	0
  9971  01C480  6EE6               	movwf	postinc1,c
  9972  01C482  0E7A               	movlw	122
  9973  01C484  6EE6               	movwf	postinc1,c
  9974  01C486  0E44               	movlw	68
  9975  01C488  6EE6               	movwf	postinc1,c
  9976  01C48A  0E00               	movlw	0
  9977  01C48C  6EE6               	movwf	postinc1,c
  9978  01C48E  0E04               	movlw	4
  9979  01C490  6EE6               	movwf	postinc1,c
  9980  01C492  ECE6  F0C2         	call	_conv_raw_result	;wreg free
  9981  01C496  0060  F0AB  FFE6   	movff	btemp,postinc1
  9982  01C49C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9983  01C4A2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9984  01C4A8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9985  01C4AE  EC9D  F0F1         	call	___fltol	;wreg free
  9986  01C4B2  0060  F0AB  FFE6   	movff	btemp,postinc1
  9987  01C4B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9988  01C4BE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9989  01C4C4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9990  01C4CA  0E00               	movlw	0
  9991  01C4CC  6EE6               	movwf	postinc1,c
  9992  01C4CE  EC6F  F0E9         	call	___xxtofl	;wreg free
  9993  01C4D2  0060  F0AB  FFE6   	movff	btemp,postinc1
  9994  01C4D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9995  01C4DE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9996  01C4E4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9997  01C4EA  EC4D  F0B2         	call	___flmul	;wreg free
  9998  01C4EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9999  01C4F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10000  01C4FA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10001  01C500  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10002  01C506  EC9D  F0F1         	call	___fltol	;wreg free
 10003  01C50A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10004  01C510  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10005  01C516  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10006  01C51C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10007  01C522  EC82  F001         	call	_Volts_to_SOC	;wreg free
 10008  01C526  0060  F0A8  F034   	movff	btemp,btemp+10
 10009  01C52C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10010  01C532  5034               	movf	(btemp+10)^0,w,c
 10011  01C534  6E2E               	movwf	(btemp+4)^0,c
 10012  01C536  5035               	movf	(btemp+11)^0,w,c
 10013  01C538  6E2F               	movwf	(btemp+5)^0,c
 10014  01C53A  6A30               	clrf	(btemp+6)^0,c
 10015  01C53C  6A31               	clrf	(btemp+7)^0,c
 10016  01C53E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10017  01C544  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10018  01C54A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10019  01C550  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10020  01C556  0E00               	movlw	0
 10021  01C558  6EE6               	movwf	postinc1,c
 10022  01C55A  EC6F  F0E9         	call	___xxtofl	;wreg free
 10023  01C55E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10024  01C564  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10025  01C56A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10026  01C570  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10027  01C576  EC9E  F0BD         	call	___fldiv	;wreg free
 10028  01C57A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10029  01C580  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10030  01C586  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10031  01C58C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10032  01C592  EC4D  F0B2         	call	___flmul	;wreg free
 10033  01C596  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10034  01C59C  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10035  01C5A2  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10036  01C5A8  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10037                           
 10038                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10039  01C5AE  EE22  F18F         	lfsr	2,_C+144	;volatile
 10040  01C5B2  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10041  01C5B8  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10042  01C5BE  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10043  01C5C4  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10044                           
 10045                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10046  01C5CA  0E18               	movlw	low _calc_bsoc
 10047  01C5CC  6EE6               	movwf	postinc1,c
 10048  01C5CE  0E48               	movlw	high _calc_bsoc
 10049  01C5D0  6EE6               	movwf	postinc1,c
 10050  01C5D2  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10051  01C5D4  6EE6               	movwf	postinc1,c
 10052  01C5D6  ECE7  F010         	call	_TMR3_SetInterruptHandler	;wreg free
 10053                           
 10054                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10055  01C5DA  0012               	return		;funcret
 10056  01C5DC                     __end_of_init_bsoc:
 10057                           	opt callstack 0
 10058                           
 10059 ;; *************** function _Volts_to_SOC *****************
 10060 ;; Defined at:
 10061 ;;		line 175 in file "bsoc.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;  cvoltage        4  [STACK] const unsigned long 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;  soc             2  [STACK] unsigned short 
 10066 ;;  slot            1  [STACK] unsigned char 
 10067 ;; Return value:  Size  Location     Type
 10068 ;;                  2  [STACK] unsigned short 
 10069 ;; Registers used:
 10070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10071 ;; Tracked objects:
 10072 ;;		On entry : 0/1
 10073 ;;		On exit  : 0/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10080 ;;Total ram usage:        0 bytes
 10081 ;; Hardware stack levels used:    1
 10082 ;; Hardware stack levels required when called:   15
 10083 ;; This function calls:
 10084 ;;		Nothing
 10085 ;; This function is called by:
 10086 ;;		_init_bsoc
 10087 ;; This function uses a reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text24
 10091  000304                     __ptext24:
 10092                           	opt callstack 0
 10093  000304                     _Volts_to_SOC:
 10094                           	opt callstack 0
 10095                           
 10096                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10097  000304  52E6               	movf	postinc1,f,c
 10098  000306  52E6               	movf	postinc1,f,c
 10099  000308  52E6               	movf	postinc1,f,c
 10100                           
 10101                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10102                           ;stkvar	_soc @ sp[(-3)+0]
 10103                           
 10104                           ;incstack = 0
 10105  00030A  0EFD               	movlw	-3
 10106  00030C  6AE3               	clrf	plusw1,c
 10107  00030E  0EFE               	movlw	-2
 10108  000310  6AE3               	clrf	plusw1,c
 10109                           
 10110                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10111                           ;stkvar	_slot @ sp[(-3)+2]
 10112  000312  0EFF               	movlw	-1
 10113  000314  6AE3               	clrf	plusw1,c
 10114  000316                     l13816:
 10115                           
 10116                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10117                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10118                           ;stkvar	_slot @ sp[(-3)+2]
 10119  000316  0EFF               	movlw	-1
 10120  000318  50E3               	movf	plusw1,w,c
 10121  00031A  0D08               	mullw	8
 10122  00031C  0ED7               	movlw	low _BVSOC_TABLE
 10123  00031E  24F3               	addwf	243,w,c
 10124  000320  6EF6               	movwf	tblptrl,c
 10125  000322  0EF7               	movlw	high _BVSOC_TABLE
 10126  000324  20F4               	addwfc	244,w,c
 10127  000326  6EF7               	movwf	tblptrh,c
 10128  000328                     	if	1	;There are 3 active tblptr bytes
 10129  000328  6AF8               	clrf	tblptru,c
 10130  00032A  0E00               	movlw	low (__mediumconst shr (0+16))
 10131  00032C  22F8               	addwfc	tblptru,f,c
 10132  00032E                     	endif
 10133  00032E  0EF9               	movlw	-7
 10134  000330  50E3               	movf	plusw1,w,c
 10135  000332  0009               	tblrd		*+
 10136  000334  5CF5               	subwf	tablat,w,c
 10137  000336  0EFA               	movlw	-6
 10138  000338  50E3               	movf	plusw1,w,c
 10139  00033A  0009               	tblrd		*+
 10140  00033C  58F5               	subwfb	tablat,w,c
 10141  00033E  0EFB               	movlw	-5
 10142  000340  50E3               	movf	plusw1,w,c
 10143  000342  0009               	tblrd		*+
 10144  000344  58F5               	subwfb	tablat,w,c
 10145  000346  0EFC               	movlw	-4
 10146  000348  50E3               	movf	plusw1,w,c
 10147  00034A  0009               	tblrd		*+
 10148  00034C  58F5               	subwfb	tablat,w,c
 10149  00034E  B0D8               	btfsc	status,0,c
 10150  000350  D020               	goto	l13820
 10151                           
 10152                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10153                           ;stkvar	_slot @ sp[(-3)+2]
 10154  000352  0EFF               	movlw	-1
 10155  000354  50E3               	movf	plusw1,w,c
 10156  000356  0D08               	mullw	8
 10157  000358  0E04               	movlw	4
 10158  00035A  26F3               	addwf	243,f,c
 10159  00035C  0E00               	movlw	0
 10160  00035E  22F4               	addwfc	244,f,c
 10161  000360  0ED7               	movlw	low _BVSOC_TABLE
 10162  000362  24F3               	addwf	243,w,c
 10163  000364  6EF6               	movwf	tblptrl,c
 10164  000366  0EF7               	movlw	high _BVSOC_TABLE
 10165  000368  20F4               	addwfc	244,w,c
 10166  00036A  6EF7               	movwf	tblptrh,c
 10167  00036C                     	if	1	;There are 3 active tblptr bytes
 10168  00036C  6AF8               	clrf	tblptru,c
 10169  00036E  0E00               	movlw	low (__mediumconst shr (0+16))
 10170  000370  22F8               	addwfc	tblptru,f,c
 10171  000372                     	endif
 10172  000372  0009               	tblrd		*+
 10173  000374  006F FFD4  F034    	movff	tablat,btemp+10
 10174  00037A  0009               	tblrd		*+
 10175  00037C  006F FFD4  F035    	movff	tablat,btemp+11
 10176                           
 10177                           ;stkvar	_soc @ sp[(-3)+0]
 10178  000382  0EFD               	movlw	-3
 10179  000384  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10180  00038A  0EFE               	movlw	-2
 10181  00038C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10182  000392                     l13820:
 10183                           
 10184                           ;bsoc.c: 187:  }
 10185                           ;stkvar	_slot @ sp[(-3)+2]
 10186  000392  0EFF               	movlw	-1
 10187  000394  2AE3               	incf	plusw1,f,c
 10188                           
 10189                           ;stkvar	_slot @ sp[(-3)+2]
 10190  000396  0EFF               	movlw	-1
 10191  000398  006F FF8C  F02A    	movff	plusw1,btemp
 10192  00039E  0E19               	movlw	25
 10193  0003A0  642A               	cpfsgt	btemp^0,c
 10194  0003A2  D7B9               	goto	l13816
 10195                           
 10196                           ;bsoc.c: 188:  return soc;
 10197                           ;stkvar	_soc @ sp[(-3)+0]
 10198  0003A4  0EFD               	movlw	-3
 10199  0003A6  006F FF8C  F02A    	movff	plusw1,btemp
 10200  0003AC  0EFE               	movlw	-2
 10201  0003AE  006F FF8C  F02B    	movff	plusw1,btemp+1
 10202                           
 10203                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10204  0003B4  0EF9               	movlw	249
 10205  0003B6  26E1               	addwf	fsr1l,f,c
 10206  0003B8  0EFF               	movlw	255
 10207  0003BA  22E2               	addwfc	fsr1h,f,c
 10208  0003BC  0012               	return		;funcret
 10209  0003BE                     __end_of_Volts_to_SOC:
 10210                           	opt callstack 0
 10211                           
 10212 ;; *************** function _hid_display *****************
 10213 ;; Defined at:
 10214 ;;		line 22 in file "hid.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;  h               2  [STACK] PTR struct H_data
 10217 ;;		 -> H(9), 
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;		None
 10220 ;; Return value:  Size  Location     Type
 10221 ;;                  2  [STACK] PTR struct H_data
 10222 ;; Registers used:
 10223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/39
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10233 ;;Total ram usage:        0 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:   17
 10236 ;; This function calls:
 10237 ;;		_hid_input
 10238 ;; This function is called by:
 10239 ;;		_main
 10240 ;; This function uses a reentrant model
 10241 ;;
 10242                           
 10243                           	psect	text25
 10244  01CEB0                     __ptext25:
 10245                           	opt callstack 0
 10246  01CEB0                     _hid_display:
 10247                           	opt callstack 13
 10248                           
 10249                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10250                           ;stkvar	_h @ sp[(0)+-2]
 10251                           
 10252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10253                           ;incstack = 0
 10254  01CEB0  0EFE               	movlw	-2
 10255  01CEB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10256  01CEB8  006F FF8F FFE6     	movff	plusw1,postinc1
 10257  01CEBE  EC5C  F0F8         	call	_hid_input	;wreg free
 10258                           
 10259                           ;hid.c: 26:  switch (h->h_state) {
 10260  01CEC2  D0E6               	goto	l17230
 10261  01CEC4                     l17204:
 10262                           
 10263                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10264                           ;stkvar	_h @ sp[(0)+-2]
 10265  01CEC4  0EFE               	movlw	-2
 10266  01CEC6  006F FF8C  F034    	movff	plusw1,btemp+10
 10267  01CECC  0EFF               	movlw	-1
 10268  01CECE  006F FF8C  F035    	movff	plusw1,btemp+11
 10269  01CED4  0E01               	movlw	1
 10270  01CED6  2434               	addwf	(btemp+10)^0,w,c
 10271  01CED8  6ED9               	movwf	fsr2l,c
 10272  01CEDA  0E00               	movlw	0
 10273  01CEDC  2035               	addwfc	(btemp+11)^0,w,c
 10274  01CEDE  6EDA               	movwf	fsr2h,c
 10275  01CEE0  0E01               	movlw	1
 10276  01CEE2  6EDF               	movwf	indf2,c
 10277                           
 10278                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10279                           ;stkvar	_h @ sp[(0)+-2]
 10280  01CEE4  0EFE               	movlw	-2
 10281  01CEE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10282  01CEEC  0EFF               	movlw	-1
 10283  01CEEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10284  01CEF4  0E00               	movlw	0
 10285  01CEF6  6EDF               	movwf	indf2,c
 10286                           
 10287                           ;hid.c: 30:   h->wait_enter = 1;
 10288                           ;stkvar	_h @ sp[(0)+-2]
 10289  01CEF8  0EFE               	movlw	-2
 10290  01CEFA  006F FF8C  F034    	movff	plusw1,btemp+10
 10291  01CF00  0EFF               	movlw	-1
 10292  01CF02  006F FF8C  F035    	movff	plusw1,btemp+11
 10293  01CF08  0E04               	movlw	4
 10294  01CF0A  2434               	addwf	(btemp+10)^0,w,c
 10295  01CF0C  6ED9               	movwf	fsr2l,c
 10296  01CF0E  0E00               	movlw	0
 10297  01CF10  2035               	addwfc	(btemp+11)^0,w,c
 10298  01CF12  6EDA               	movwf	fsr2h,c
 10299  01CF14  0E01               	movlw	1
 10300  01CF16  6EDF               	movwf	indf2,c
 10301                           
 10302                           ;hid.c: 31:   h->wait_select = 1;
 10303                           ;stkvar	_h @ sp[(0)+-2]
 10304  01CF18  0EFE               	movlw	-2
 10305  01CF1A  006F FF8C  F034    	movff	plusw1,btemp+10
 10306  01CF20  0EFF               	movlw	-1
 10307  01CF22  006F FF8C  F035    	movff	plusw1,btemp+11
 10308  01CF28  0E02               	movlw	2
 10309  01CF2A  2434               	addwf	(btemp+10)^0,w,c
 10310  01CF2C  6ED9               	movwf	fsr2l,c
 10311  01CF2E  0E00               	movlw	0
 10312  01CF30  2035               	addwfc	(btemp+11)^0,w,c
 10313  01CF32  6EDA               	movwf	fsr2h,c
 10314  01CF34  0E01               	movlw	1
 10315  01CF36  6EDF               	movwf	indf2,c
 10316                           
 10317                           ;hid.c: 32:   h->wait_calib = 1;
 10318                           ;stkvar	_h @ sp[(0)+-2]
 10319  01CF38  0EFE               	movlw	-2
 10320  01CF3A  006F FF8C  F034    	movff	plusw1,btemp+10
 10321  01CF40  0EFF               	movlw	-1
 10322  01CF42  006F FF8C  F035    	movff	plusw1,btemp+11
 10323  01CF48  0E06               	movlw	6
 10324  01CF4A  2434               	addwf	(btemp+10)^0,w,c
 10325  01CF4C  6ED9               	movwf	fsr2l,c
 10326  01CF4E  0E00               	movlw	0
 10327  01CF50  2035               	addwfc	(btemp+11)^0,w,c
 10328  01CF52  6EDA               	movwf	fsr2h,c
 10329  01CF54  0E01               	movlw	1
 10330  01CF56  6EDF               	movwf	indf2,c
 10331                           
 10332                           ;hid.c: 33:   h->select_p = SW_OFF;
 10333                           ;stkvar	_h @ sp[(0)+-2]
 10334  01CF58  0EFE               	movlw	-2
 10335  01CF5A  006F FF8C  F034    	movff	plusw1,btemp+10
 10336  01CF60  0EFF               	movlw	-1
 10337  01CF62  006F FF8C  F035    	movff	plusw1,btemp+11
 10338  01CF68  0E03               	movlw	3
 10339  01CF6A  2434               	addwf	(btemp+10)^0,w,c
 10340  01CF6C  6ED9               	movwf	fsr2l,c
 10341  01CF6E  0E00               	movlw	0
 10342  01CF70  2035               	addwfc	(btemp+11)^0,w,c
 10343  01CF72  6EDA               	movwf	fsr2h,c
 10344  01CF74  0E00               	movlw	0
 10345  01CF76  6EDF               	movwf	indf2,c
 10346                           
 10347                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10348                           ;stkvar	_h @ sp[(0)+-2]
 10349  01CF78  0EFE               	movlw	-2
 10350  01CF7A  006F FF8C  F034    	movff	plusw1,btemp+10
 10351  01CF80  0EFF               	movlw	-1
 10352  01CF82  006F FF8C  F035    	movff	plusw1,btemp+11
 10353  01CF88  0E05               	movlw	5
 10354  01CF8A  2434               	addwf	(btemp+10)^0,w,c
 10355  01CF8C  6ED9               	movwf	fsr2l,c
 10356  01CF8E  0E00               	movlw	0
 10357  01CF90  2035               	addwfc	(btemp+11)^0,w,c
 10358  01CF92  6EDA               	movwf	fsr2h,c
 10359  01CF94  0E00               	movlw	0
 10360  01CF96  6EDF               	movwf	indf2,c
 10361                           
 10362                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10363                           ;stkvar	_h @ sp[(0)+-2]
 10364  01CF98  0EFE               	movlw	-2
 10365  01CF9A  006F FF8C  F034    	movff	plusw1,btemp+10
 10366  01CFA0  0EFF               	movlw	-1
 10367  01CFA2  006F FF8C  F035    	movff	plusw1,btemp+11
 10368  01CFA8  0E07               	movlw	7
 10369  01CFAA  2434               	addwf	(btemp+10)^0,w,c
 10370  01CFAC  6ED9               	movwf	fsr2l,c
 10371  01CFAE  0E00               	movlw	0
 10372  01CFB0  2035               	addwfc	(btemp+11)^0,w,c
 10373  01CFB2  6EDA               	movwf	fsr2h,c
 10374  01CFB4  0E00               	movlw	0
 10375  01CFB6  D06A               	goto	L6
 10376  01CFB8                     l17220:
 10377                           
 10378                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10379                           ;stkvar	_h @ sp[(0)+-2]
 10380  01CFB8  0EFE               	movlw	-2
 10381  01CFBA  006F FF8C  F034    	movff	plusw1,btemp+10
 10382  01CFC0  0EFF               	movlw	-1
 10383  01CFC2  006F FF8C  F035    	movff	plusw1,btemp+11
 10384  01CFC8  0E02               	movlw	2
 10385  01CFCA  2434               	addwf	(btemp+10)^0,w,c
 10386  01CFCC  6ED9               	movwf	fsr2l,c
 10387  01CFCE  0E00               	movlw	0
 10388  01CFD0  2035               	addwfc	(btemp+11)^0,w,c
 10389  01CFD2  6EDA               	movwf	fsr2h,c
 10390  01CFD4  50DF               	movf	indf2,w,c
 10391  01CFD6  A4D8               	btfss	status,2,c
 10392  01CFD8  D076               	goto	l2290
 10393                           
 10394                           ;stkvar	_h @ sp[(0)+-2]
 10395  01CFDA  0EFE               	movlw	-2
 10396  01CFDC  006F FF8C  F034    	movff	plusw1,btemp+10
 10397  01CFE2  0EFF               	movlw	-1
 10398  01CFE4  006F FF8C  F035    	movff	plusw1,btemp+11
 10399  01CFEA  0E03               	movlw	3
 10400  01CFEC  2434               	addwf	(btemp+10)^0,w,c
 10401  01CFEE  6ED9               	movwf	fsr2l,c
 10402  01CFF0  0E00               	movlw	0
 10403  01CFF2  2035               	addwfc	(btemp+11)^0,w,c
 10404  01CFF4  6EDA               	movwf	fsr2h,c
 10405  01CFF6  50DF               	movf	indf2,w,c
 10406  01CFF8  A4D8               	btfss	status,2,c
 10407  01CFFA  D065               	goto	l2290
 10408                           
 10409                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10410                           ;stkvar	_h @ sp[(0)+-2]
 10411  01CFFC  0EFE               	movlw	-2
 10412  01CFFE  006F FF8C  F034    	movff	plusw1,btemp+10
 10413  01D004  0EFF               	movlw	-1
 10414  01D006  006F FF8C  F035    	movff	plusw1,btemp+11
 10415  01D00C  0E08               	movlw	8
 10416  01D00E  2434               	addwf	(btemp+10)^0,w,c
 10417  01D010  6ED9               	movwf	fsr2l,c
 10418  01D012  0E00               	movlw	0
 10419  01D014  2035               	addwfc	(btemp+11)^0,w,c
 10420  01D016  6EDA               	movwf	fsr2h,c
 10421                           
 10422                           ;stkvar	_h @ sp[(0)+-2]
 10423  01D018  0EFE               	movlw	-2
 10424  01D01A  006F FF8C  F034    	movff	plusw1,btemp+10
 10425  01D020  0EFF               	movlw	-1
 10426  01D022  006F FF8C  F035    	movff	plusw1,btemp+11
 10427  01D028  0E08               	movlw	8
 10428  01D02A  2434               	addwf	(btemp+10)^0,w,c
 10429  01D02C  6EE9               	movwf	fsr0l,c
 10430  01D02E  0E00               	movlw	0
 10431  01D030  2035               	addwfc	(btemp+11)^0,w,c
 10432  01D032  6EEA               	movwf	fsr0h,c
 10433  01D034  2AEF               	incf	indf0,f,c
 10434  01D036  50EF               	movf	indf0,w,c
 10435  01D038  0B03               	andlw	3
 10436  01D03A  6EDF               	movwf	indf2,c
 10437                           
 10438                           ;hid.c: 41:    h->hid_display = h->sequence;
 10439                           ;stkvar	_h @ sp[(0)+-2]
 10440  01D03C  0EFE               	movlw	-2
 10441  01D03E  006F FF8C  F034    	movff	plusw1,btemp+10
 10442  01D044  0EFF               	movlw	-1
 10443  01D046  006F FF8C  F035    	movff	plusw1,btemp+11
 10444  01D04C  0E08               	movlw	8
 10445  01D04E  2434               	addwf	(btemp+10)^0,w,c
 10446  01D050  6ED9               	movwf	fsr2l,c
 10447  01D052  0E00               	movlw	0
 10448  01D054  2035               	addwfc	(btemp+11)^0,w,c
 10449  01D056  6EDA               	movwf	fsr2h,c
 10450                           
 10451                           ;stkvar	_h @ sp[(0)+-2]
 10452  01D058  0EFE               	movlw	-2
 10453  01D05A  006F FF8F FFE9     	movff	plusw1,fsr0l
 10454  01D060  0EFF               	movlw	-1
 10455  01D062  006F FF8F FFEA     	movff	plusw1,fsr0h
 10456  01D068  006F FF7F FFEF     	movff	indf2,indf0
 10457                           
 10458                           ;hid.c: 42:    h->wait_select = 1;
 10459                           ;stkvar	_h @ sp[(0)+-2]
 10460  01D06E  0EFE               	movlw	-2
 10461  01D070  006F FF8C  F034    	movff	plusw1,btemp+10
 10462  01D076  0EFF               	movlw	-1
 10463  01D078  006F FF8C  F035    	movff	plusw1,btemp+11
 10464  01D07E  0E02               	movlw	2
 10465  01D080  2434               	addwf	(btemp+10)^0,w,c
 10466  01D082  6ED9               	movwf	fsr2l,c
 10467  01D084  0E00               	movlw	0
 10468  01D086  2035               	addwfc	(btemp+11)^0,w,c
 10469  01D088  6EDA               	movwf	fsr2h,c
 10470  01D08A  0E01               	movlw	1
 10471  01D08C                     L6:
 10472  01D08C  6EDF               	movwf	indf2,c
 10473  01D08E  D01B               	goto	l2290
 10474  01D090                     l17230:
 10475                           
 10476                           ;stkvar	_h @ sp[(0)+-2]
 10477  01D090  0EFE               	movlw	-2
 10478  01D092  006F FF8C  F034    	movff	plusw1,btemp+10
 10479  01D098  0EFF               	movlw	-1
 10480  01D09A  006F FF8C  F035    	movff	plusw1,btemp+11
 10481  01D0A0  0E01               	movlw	1
 10482  01D0A2  2434               	addwf	(btemp+10)^0,w,c
 10483  01D0A4  6ED9               	movwf	fsr2l,c
 10484  01D0A6  0E00               	movlw	0
 10485  01D0A8  2035               	addwfc	(btemp+11)^0,w,c
 10486  01D0AA  6EDA               	movwf	fsr2h,c
 10487  01D0AC  50DF               	movf	indf2,w,c
 10488  01D0AE  6E34               	movwf	(btemp+10)^0,c
 10489  01D0B0  6A35               	clrf	(btemp+11)^0,c
 10490                           
 10491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10492                           ; Switch size 1, requested type "simple"
 10493                           ; Number of cases is 1, Range of values is 0 to 0
 10494                           ; switch strategies available:
 10495                           ; Name         Instructions Cycles
 10496                           ; simple_byte            4     3 (average)
 10497                           ;	Chosen strategy is simple_byte
 10498  01D0B2  5035               	movf	(btemp+11)^0,w,c
 10499  01D0B4  0A00               	xorlw	0	; case 0
 10500  01D0B6  A4D8               	btfss	status,2,c
 10501  01D0B8  D77F               	goto	l17220
 10502                           
 10503                           ; Switch size 1, requested type "simple"
 10504                           ; Number of cases is 2, Range of values is 0 to 1
 10505                           ; switch strategies available:
 10506                           ; Name         Instructions Cycles
 10507                           ; simple_byte            7     4 (average)
 10508                           ;	Chosen strategy is simple_byte
 10509  01D0BA  5034               	movf	(btemp+10)^0,w,c
 10510  01D0BC  0A00               	xorlw	0	; case 0
 10511  01D0BE  B4D8               	btfsc	status,2,c
 10512  01D0C0  D701               	goto	l17204
 10513  01D0C2  0A01               	xorlw	1	; case 1
 10514  01D0C4  D779               	goto	l17220
 10515  01D0C6                     l2290:
 10516                           
 10517                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10518  01D0C6  52E5               	movf	postdec1,f,c
 10519  01D0C8  52E5               	movf	postdec1,f,c
 10520  01D0CA  0012               	return		;funcret
 10521  01D0CC                     __end_of_hid_display:
 10522                           	opt callstack 0
 10523                           
 10524 ;; *************** function _hid_input *****************
 10525 ;; Defined at:
 10526 ;;		line 3 in file "hid.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  h               2  [STACK] PTR struct H_data
 10529 ;;		 -> H(9), 
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;		None
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  2  [STACK] PTR struct H_data
 10534 ;; Registers used:
 10535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/39
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10545 ;;Total ram usage:        0 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; Hardware stack levels required when called:   16
 10548 ;; This function calls:
 10549 ;;		_get_switch
 10550 ;; This function is called by:
 10551 ;;		_hid_display
 10552 ;; This function uses a reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text26
 10556  01F0B8                     __ptext26:
 10557                           	opt callstack 0
 10558  01F0B8                     _hid_input:
 10559                           	opt callstack 13
 10560                           
 10561                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10562                           
 10563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10564                           ;incstack = 0
 10565  01F0B8  0E02               	movlw	2
 10566  01F0BA  6EE6               	movwf	postinc1,c
 10567  01F0BC  EC03  F010         	call	_get_switch	;wreg free
 10568  01F0C0  502A               	movf	btemp^0,w,c
 10569  01F0C2  B4D8               	btfsc	status,2,c
 10570  01F0C4  D02C               	goto	l16966
 10571                           
 10572                           ;hid.c: 6:   h->wait_select = 0;
 10573                           ;stkvar	_h @ sp[(0)+-2]
 10574  01F0C6  0EFE               	movlw	-2
 10575  01F0C8  006F FF8C  F034    	movff	plusw1,btemp+10
 10576  01F0CE  0EFF               	movlw	-1
 10577  01F0D0  006F FF8C  F035    	movff	plusw1,btemp+11
 10578  01F0D6  0E02               	movlw	2
 10579  01F0D8  2434               	addwf	(btemp+10)^0,w,c
 10580  01F0DA  6ED9               	movwf	fsr2l,c
 10581  01F0DC  0E00               	movlw	0
 10582  01F0DE  2035               	addwfc	(btemp+11)^0,w,c
 10583  01F0E0  6EDA               	movwf	fsr2h,c
 10584  01F0E2  0E00               	movlw	0
 10585  01F0E4  6EDF               	movwf	indf2,c
 10586                           
 10587                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10588  01F0E6  0E02               	movlw	2
 10589  01F0E8  6EE6               	movwf	postinc1,c
 10590  01F0EA  EC03  F010         	call	_get_switch	;wreg free
 10591  01F0EE  502A               	movf	btemp^0,w,c
 10592  01F0F0  B4D8               	btfsc	status,2,c
 10593  01F0F2  D003               	goto	u16490
 10594  01F0F4  6A35               	clrf	(btemp+11)^0,c
 10595  01F0F6  2A35               	incf	(btemp+11)^0,f,c
 10596  01F0F8  D001               	goto	u16508
 10597  01F0FA                     u16490:
 10598  01F0FA  6A35               	clrf	(btemp+11)^0,c
 10599  01F0FC                     u16508:
 10600                           
 10601                           ;stkvar	_h @ sp[(0)+-2]
 10602  01F0FC  0EFE               	movlw	-2
 10603  01F0FE  006F FF8C  F032    	movff	plusw1,btemp+8
 10604  01F104  0EFF               	movlw	-1
 10605  01F106  006F FF8C  F033    	movff	plusw1,btemp+9
 10606  01F10C  0E03               	movlw	3
 10607  01F10E  2432               	addwf	(btemp+8)^0,w,c
 10608  01F110  6ED9               	movwf	fsr2l,c
 10609  01F112  0E00               	movlw	0
 10610  01F114  2033               	addwfc	(btemp+9)^0,w,c
 10611  01F116  6EDA               	movwf	fsr2h,c
 10612  01F118  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10613  01F11E                     l16966:
 10614                           
 10615                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10616  01F11E  0E03               	movlw	3
 10617  01F120  6EE6               	movwf	postinc1,c
 10618  01F122  EC03  F010         	call	_get_switch	;wreg free
 10619  01F126  502A               	movf	btemp^0,w,c
 10620  01F128  B4D8               	btfsc	status,2,c
 10621  01F12A  D02C               	goto	l16972
 10622                           
 10623                           ;hid.c: 11:   h->wait_enter = 0;
 10624                           ;stkvar	_h @ sp[(0)+-2]
 10625  01F12C  0EFE               	movlw	-2
 10626  01F12E  006F FF8C  F034    	movff	plusw1,btemp+10
 10627  01F134  0EFF               	movlw	-1
 10628  01F136  006F FF8C  F035    	movff	plusw1,btemp+11
 10629  01F13C  0E04               	movlw	4
 10630  01F13E  2434               	addwf	(btemp+10)^0,w,c
 10631  01F140  6ED9               	movwf	fsr2l,c
 10632  01F142  0E00               	movlw	0
 10633  01F144  2035               	addwfc	(btemp+11)^0,w,c
 10634  01F146  6EDA               	movwf	fsr2h,c
 10635  01F148  0E00               	movlw	0
 10636  01F14A  6EDF               	movwf	indf2,c
 10637                           
 10638                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10639  01F14C  0E03               	movlw	3
 10640  01F14E  6EE6               	movwf	postinc1,c
 10641  01F150  EC03  F010         	call	_get_switch	;wreg free
 10642  01F154  502A               	movf	btemp^0,w,c
 10643  01F156  B4D8               	btfsc	status,2,c
 10644  01F158  D003               	goto	u16520
 10645  01F15A  6A35               	clrf	(btemp+11)^0,c
 10646  01F15C  2A35               	incf	(btemp+11)^0,f,c
 10647  01F15E  D001               	goto	u16538
 10648  01F160                     u16520:
 10649  01F160  6A35               	clrf	(btemp+11)^0,c
 10650  01F162                     u16538:
 10651                           
 10652                           ;stkvar	_h @ sp[(0)+-2]
 10653  01F162  0EFE               	movlw	-2
 10654  01F164  006F FF8C  F032    	movff	plusw1,btemp+8
 10655  01F16A  0EFF               	movlw	-1
 10656  01F16C  006F FF8C  F033    	movff	plusw1,btemp+9
 10657  01F172  0E05               	movlw	5
 10658  01F174  2432               	addwf	(btemp+8)^0,w,c
 10659  01F176  6ED9               	movwf	fsr2l,c
 10660  01F178  0E00               	movlw	0
 10661  01F17A  2033               	addwfc	(btemp+9)^0,w,c
 10662  01F17C  6EDA               	movwf	fsr2h,c
 10663  01F17E  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10664  01F184                     l16972:
 10665                           
 10666                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10667  01F184  0E04               	movlw	4
 10668  01F186  6EE6               	movwf	postinc1,c
 10669  01F188  EC03  F010         	call	_get_switch	;wreg free
 10670  01F18C  502A               	movf	btemp^0,w,c
 10671  01F18E  B4D8               	btfsc	status,2,c
 10672  01F190  D02C               	goto	l2281
 10673                           
 10674                           ;hid.c: 16:   h->wait_calib = 0;
 10675                           ;stkvar	_h @ sp[(0)+-2]
 10676  01F192  0EFE               	movlw	-2
 10677  01F194  006F FF8C  F034    	movff	plusw1,btemp+10
 10678  01F19A  0EFF               	movlw	-1
 10679  01F19C  006F FF8C  F035    	movff	plusw1,btemp+11
 10680  01F1A2  0E06               	movlw	6
 10681  01F1A4  2434               	addwf	(btemp+10)^0,w,c
 10682  01F1A6  6ED9               	movwf	fsr2l,c
 10683  01F1A8  0E00               	movlw	0
 10684  01F1AA  2035               	addwfc	(btemp+11)^0,w,c
 10685  01F1AC  6EDA               	movwf	fsr2h,c
 10686  01F1AE  0E00               	movlw	0
 10687  01F1B0  6EDF               	movwf	indf2,c
 10688                           
 10689                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10690  01F1B2  0E04               	movlw	4
 10691  01F1B4  6EE6               	movwf	postinc1,c
 10692  01F1B6  EC03  F010         	call	_get_switch	;wreg free
 10693  01F1BA  502A               	movf	btemp^0,w,c
 10694  01F1BC  B4D8               	btfsc	status,2,c
 10695  01F1BE  D003               	goto	u16550
 10696  01F1C0  6A35               	clrf	(btemp+11)^0,c
 10697  01F1C2  2A35               	incf	(btemp+11)^0,f,c
 10698  01F1C4  D001               	goto	u16568
 10699  01F1C6                     u16550:
 10700  01F1C6  6A35               	clrf	(btemp+11)^0,c
 10701  01F1C8                     u16568:
 10702                           
 10703                           ;stkvar	_h @ sp[(0)+-2]
 10704  01F1C8  0EFE               	movlw	-2
 10705  01F1CA  006F FF8C  F032    	movff	plusw1,btemp+8
 10706  01F1D0  0EFF               	movlw	-1
 10707  01F1D2  006F FF8C  F033    	movff	plusw1,btemp+9
 10708  01F1D8  0E07               	movlw	7
 10709  01F1DA  2432               	addwf	(btemp+8)^0,w,c
 10710  01F1DC  6ED9               	movwf	fsr2l,c
 10711  01F1DE  0E00               	movlw	0
 10712  01F1E0  2033               	addwfc	(btemp+9)^0,w,c
 10713  01F1E2  6EDA               	movwf	fsr2h,c
 10714  01F1E4  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10715  01F1EA                     l2281:
 10716                           
 10717                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10718  01F1EA  52E5               	movf	postdec1,f,c
 10719  01F1EC  52E5               	movf	postdec1,f,c
 10720  01F1EE  0012               	return		;funcret
 10721  01F1F0                     __end_of_hid_input:
 10722                           	opt callstack 0
 10723                           
 10724 ;; *************** function _esr_check *****************
 10725 ;; Defined at:
 10726 ;;		line 197 in file "bsoc.c"
 10727 ;; Parameters:    Size  Location     Type
 10728 ;;  fsm             1  [STACK] const unsigned char 
 10729 ;; Auto vars:     Size  Location     Type
 10730 ;;		None
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  4  [STACK] float 
 10733 ;; Registers used:
 10734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10744 ;;Total ram usage:        0 bytes
 10745 ;; Hardware stack levels used:    1
 10746 ;; Hardware stack levels required when called:   18
 10747 ;; This function calls:
 10748 ;;		_StartTimer
 10749 ;;		_TimerDone
 10750 ;;		___fldiv
 10751 ;;		___flsub
 10752 ;;		_conv_raw_result
 10753 ;;		_fabsf
 10754 ;;		_set_load_relay_one
 10755 ;;		_set_load_relay_two
 10756 ;;		_update_adc_result
 10757 ;; This function is called by:
 10758 ;;		_main
 10759 ;; This function uses a reentrant model
 10760 ;;
 10761                           
 10762                           	psect	text27
 10763  01B1B2                     __ptext27:
 10764                           	opt callstack 0
 10765  01B1B2                     _esr_check:
 10766                           	opt callstack 12
 10767                           
 10768                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 10769                           ;stkvar	_fsm @ sp[(0)+-1]
 10770                           
 10771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10772                           ;incstack = 0
 10773  01B1B2  0EFF               	movlw	-1
 10774  01B1B4  50E3               	movf	plusw1,w,c
 10775  01B1B6  B4D8               	btfsc	status,2,c
 10776  01B1B8  D149               	goto	l14244
 10777                           
 10778                           ;bsoc.c: 202:   esr_state = 0;
 10779  01B1BA  0100               	movlb	0	; () banked
 10780  01B1BC  6BC6               	clrf	esr_check@esr_state& (0+255),b
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;bsoc.c: 203:   return -10.0;
 10784  01B1BE  0E00               	movlw	0
 10785  01B1C0  6E2A               	movwf	btemp^0,c
 10786  01B1C2  0E00               	movlw	0
 10787  01B1C4  6E2B               	movwf	(btemp+1)^0,c
 10788  01B1C6  0E20               	movlw	32
 10789  01B1C8  6E2C               	movwf	(btemp+2)^0,c
 10790  01B1CA  0EC1               	movlw	193
 10791  01B1CC  D15B               	goto	L7
 10792  01B1CE                     l14176:
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 10796  01B1CE  0E10               	movlw	16
 10797  01B1D0  6EE6               	movwf	postinc1,c
 10798  01B1D2  0E27               	movlw	39
 10799  01B1D4  6EE6               	movwf	postinc1,c
 10800  01B1D6  0E0C               	movlw	12
 10801  01B1D8  6EE6               	movwf	postinc1,c
 10802  01B1DA  ECFA  F00D         	call	_StartTimer	;wreg free
 10803  01B1DE                     l14178:
 10804                           
 10805                           ;bsoc.c: 209:   esr_state++;
 10806  01B1DE  0100               	movlb	0	; () banked
 10807  01B1E0  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 10808                           
 10809                           ;bsoc.c: 210:   break;
 10810  01B1E2  D149               	goto	l14246
 10811  01B1E4                     l14180:
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;bsoc.c: 215:   set_load_relay_one(0);
 10815  01B1E4  0E00               	movlw	0
 10816  01B1E6  6EE6               	movwf	postinc1,c
 10817  01B1E8  EC17  F013         	call	_set_load_relay_one	;wreg free
 10818                           
 10819                           ;bsoc.c: 216:   set_load_relay_two(0);
 10820  01B1EC  0E00               	movlw	0
 10821  01B1EE  6EE6               	movwf	postinc1,c
 10822  01B1F0  EC0F  F013         	call	_set_load_relay_two	;wreg free
 10823                           
 10824                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 10825  01B1F4  0E0C               	movlw	12
 10826  01B1F6  6EE6               	movwf	postinc1,c
 10827  01B1F8  EC6F  F010         	call	_TimerDone	;wreg free
 10828  01B1FC  502A               	movf	btemp^0,w,c
 10829  01B1FE  B4D8               	btfsc	status,2,c
 10830  01B200  D009               	goto	l14186
 10831                           
 10832                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 10833  01B202  0E10               	movlw	16
 10834  01B204  6EE6               	movwf	postinc1,c
 10835  01B206  0E27               	movlw	39
 10836  01B208  6EE6               	movwf	postinc1,c
 10837  01B20A  0E0C               	movlw	12
 10838  01B20C  6EE6               	movwf	postinc1,c
 10839  01B20E  ECFA  F00D         	call	_StartTimer	;wreg free
 10840                           
 10841                           ;bsoc.c: 219:   } else {
 10842  01B212  D006               	goto	l14190
 10843  01B214                     l14186:
 10844                           
 10845                           ;bsoc.c: 220:    return -2.0;
 10846  01B214  0E00               	movlw	0
 10847  01B216  6E2A               	movwf	btemp^0,c
 10848  01B218  0E00               	movlw	0
 10849  01B21A  6E2B               	movwf	(btemp+1)^0,c
 10850  01B21C  0E00               	movlw	0
 10851  01B21E  D066               	goto	L9
 10852  01B220                     l14190:
 10853                           
 10854                           ;bsoc.c: 225:   update_adc_result();
 10855  01B220  EC97  F00E         	call	_update_adc_result	;wreg free
 10856                           
 10857                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 10858  01B224  0E00               	movlw	0
 10859  01B226  6EE6               	movwf	postinc1,c
 10860  01B228  0E04               	movlw	4
 10861  01B22A  6EE6               	movwf	postinc1,c
 10862  01B22C  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10863  01B230  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 10864  01B236  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 10865  01B23C  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 10866  01B242  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 10867  01B248  D7CA               	goto	l14178
 10868  01B24A                     l14196:
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;bsoc.c: 230:   set_load_relay_one(1);
 10872  01B24A  0E01               	movlw	1
 10873  01B24C  6EE6               	movwf	postinc1,c
 10874  01B24E  EC17  F013         	call	_set_load_relay_one	;wreg free
 10875                           
 10876                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 10877  01B252  0E0C               	movlw	12
 10878  01B254  6EE6               	movwf	postinc1,c
 10879  01B256  EC6F  F010         	call	_TimerDone	;wreg free
 10880  01B25A  502A               	movf	btemp^0,w,c
 10881  01B25C  B4D8               	btfsc	status,2,c
 10882  01B25E  D009               	goto	l14202
 10883                           
 10884                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 10885  01B260  0E10               	movlw	16
 10886  01B262  6EE6               	movwf	postinc1,c
 10887  01B264  0E27               	movlw	39
 10888  01B266  6EE6               	movwf	postinc1,c
 10889  01B268  0E0C               	movlw	12
 10890  01B26A  6EE6               	movwf	postinc1,c
 10891  01B26C  ECFA  F00D         	call	_StartTimer	;wreg free
 10892                           
 10893                           ;bsoc.c: 233:   } else {
 10894  01B270  D006               	goto	l14206
 10895  01B272                     l14202:
 10896                           
 10897                           ;bsoc.c: 234:    return -3.0;
 10898  01B272  0E00               	movlw	0
 10899  01B274  6E2A               	movwf	btemp^0,c
 10900  01B276  0E00               	movlw	0
 10901  01B278  6E2B               	movwf	(btemp+1)^0,c
 10902  01B27A  0E40               	movlw	64
 10903  01B27C  D037               	goto	L9
 10904  01B27E                     l14206:
 10905                           
 10906                           ;bsoc.c: 237:   update_adc_result();
 10907  01B27E  EC97  F00E         	call	_update_adc_result	;wreg free
 10908                           
 10909                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 10910  01B282  0E00               	movlw	0
 10911  01B284  6EE6               	movwf	postinc1,c
 10912  01B286  0E04               	movlw	4
 10913  01B288  6EE6               	movwf	postinc1,c
 10914  01B28A  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10915  01B28E  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 10916  01B294  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 10917  01B29A  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 10918  01B2A0  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 10919                           
 10920                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 10921  01B2A6  0E00               	movlw	0
 10922  01B2A8  6EE6               	movwf	postinc1,c
 10923  01B2AA  0E00               	movlw	0
 10924  01B2AC  6EE6               	movwf	postinc1,c
 10925  01B2AE  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10926  01B2B2  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 10927  01B2B8  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 10928  01B2BE  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 10929  01B2C4  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 10930  01B2CA  D789               	goto	l14178
 10931  01B2CC                     l14214:
 10932                           
 10933                           ; BSR set to: 0
 10934                           ;bsoc.c: 243:   set_load_relay_two(1);
 10935  01B2CC  0E01               	movlw	1
 10936  01B2CE  6EE6               	movwf	postinc1,c
 10937  01B2D0  EC0F  F013         	call	_set_load_relay_two	;wreg free
 10938                           
 10939                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 10940  01B2D4  0E0C               	movlw	12
 10941  01B2D6  6EE6               	movwf	postinc1,c
 10942  01B2D8  EC6F  F010         	call	_TimerDone	;wreg free
 10943  01B2DC  502A               	movf	btemp^0,w,c
 10944  01B2DE  A4D8               	btfss	status,2,c
 10945  01B2E0  D008               	goto	l14222
 10946                           
 10947                           ;bsoc.c: 245:    return -4.0;
 10948  01B2E2  0E00               	movlw	0
 10949  01B2E4  6E2A               	movwf	btemp^0,c
 10950  01B2E6  0E00               	movlw	0
 10951  01B2E8  6E2B               	movwf	(btemp+1)^0,c
 10952  01B2EA  0E80               	movlw	128
 10953  01B2EC                     L9:
 10954  01B2EC  6E2C               	movwf	(btemp+2)^0,c
 10955  01B2EE  0EC0               	movlw	192
 10956  01B2F0  D0C9               	goto	L7
 10957  01B2F2                     l14222:
 10958                           
 10959                           ;bsoc.c: 247:   update_adc_result();
 10960  01B2F2  EC97  F00E         	call	_update_adc_result	;wreg free
 10961                           
 10962                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 10963  01B2F6  0E00               	movlw	0
 10964  01B2F8  6EE6               	movwf	postinc1,c
 10965  01B2FA  0E04               	movlw	4
 10966  01B2FC  6EE6               	movwf	postinc1,c
 10967  01B2FE  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10968  01B302  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 10969  01B308  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 10970  01B30E  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 10971  01B314  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 10972                           
 10973                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 10974  01B31A  0E00               	movlw	0
 10975  01B31C  6EE6               	movwf	postinc1,c
 10976  01B31E  0E00               	movlw	0
 10977  01B320  6EE6               	movwf	postinc1,c
 10978  01B322  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 10979  01B326  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 10980  01B32C  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 10981  01B332  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 10982  01B338  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 10983                           
 10984                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 10985  01B33E  EE22  F21D         	lfsr	2,_C+286	;volatile
 10986  01B342  006F FF7B FFE6     	movff	postinc2,postinc1
 10987  01B348  006F FF7B FFE6     	movff	postinc2,postinc1
 10988  01B34E  006F FF7B FFE6     	movff	postinc2,postinc1
 10989  01B354  006F FF7B FFE6     	movff	postinc2,postinc1
 10990  01B35A  EE22  F219         	lfsr	2,_C+282	;volatile
 10991  01B35E  006F FF7B FFE6     	movff	postinc2,postinc1
 10992  01B364  006F FF7B FFE6     	movff	postinc2,postinc1
 10993  01B36A  006F FF7B FFE6     	movff	postinc2,postinc1
 10994  01B370  006F FF7B FFE6     	movff	postinc2,postinc1
 10995  01B376  EC54  F00D         	call	___flsub	;wreg free
 10996  01B37A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10997  01B380  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10998  01B386  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10999  01B38C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11000  01B392  EE22  F229         	lfsr	2,_C+298	;volatile
 11001  01B396  006F FF7B FFE6     	movff	postinc2,postinc1
 11002  01B39C  006F FF7B FFE6     	movff	postinc2,postinc1
 11003  01B3A2  006F FF7B FFE6     	movff	postinc2,postinc1
 11004  01B3A8  006F FF7B FFE6     	movff	postinc2,postinc1
 11005  01B3AE  EE22  F225         	lfsr	2,_C+294	;volatile
 11006  01B3B2  006F FF7B FFE6     	movff	postinc2,postinc1
 11007  01B3B8  006F FF7B FFE6     	movff	postinc2,postinc1
 11008  01B3BE  006F FF7B FFE6     	movff	postinc2,postinc1
 11009  01B3C4  006F FF7B FFE6     	movff	postinc2,postinc1
 11010  01B3CA  EC54  F00D         	call	___flsub	;wreg free
 11011  01B3CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 11012  01B3D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11013  01B3DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11014  01B3E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11015  01B3E6  EC9E  F0BD         	call	___fldiv	;wreg free
 11016  01B3EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11017  01B3F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11018  01B3F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11019  01B3FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11020  01B402  EC96  F002         	call	_fabsf	;wreg free
 11021  01B406  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11022  01B40C  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11023  01B412  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11024  01B418  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11025                           
 11026                           ;bsoc.c: 252:   set_load_relay_one(0);
 11027  01B41E  0E00               	movlw	0
 11028  01B420  6EE6               	movwf	postinc1,c
 11029  01B422  EC17  F013         	call	_set_load_relay_one	;wreg free
 11030                           
 11031                           ;bsoc.c: 253:   set_load_relay_two(0);
 11032  01B426  0E00               	movlw	0
 11033  01B428  6EE6               	movwf	postinc1,c
 11034  01B42A  EC0F  F013         	call	_set_load_relay_two	;wreg free
 11035                           
 11036                           ;bsoc.c: 254:   esr_state = 0;
 11037  01B42E  0100               	movlb	0	; () banked
 11038  01B430  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;bsoc.c: 255:   return C.esr;
 11042  01B432  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11043  01B438  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11044  01B43E  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11045  01B444  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11046  01B44A  D01D               	goto	l2406
 11047  01B44C                     l14244:
 11048  01B44C  0100               	movlb	0	; () banked
 11049  01B44E  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11050  01B450  6E34               	movwf	(btemp+10)^0,c
 11051  01B452  6A35               	clrf	(btemp+11)^0,c
 11052                           
 11053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11054                           ; Switch size 1, requested type "simple"
 11055                           ; Number of cases is 1, Range of values is 0 to 0
 11056                           ; switch strategies available:
 11057                           ; Name         Instructions Cycles
 11058                           ; simple_byte            4     3 (average)
 11059                           ;	Chosen strategy is simple_byte
 11060  01B454  5035               	movf	(btemp+11)^0,w,c
 11061  01B456  0A00               	xorlw	0	; case 0
 11062  01B458  A4D8               	btfss	status,2,c
 11063  01B45A  D00D               	goto	l14246
 11064                           
 11065                           ; BSR set to: 0
 11066                           ; Switch size 1, requested type "simple"
 11067                           ; Number of cases is 4, Range of values is 0 to 3
 11068                           ; switch strategies available:
 11069                           ; Name         Instructions Cycles
 11070                           ; simple_byte           13     7 (average)
 11071                           ;	Chosen strategy is simple_byte
 11072  01B45C  5034               	movf	(btemp+10)^0,w,c
 11073  01B45E  0A00               	xorlw	0	; case 0
 11074  01B460  B4D8               	btfsc	status,2,c
 11075  01B462  D6B5               	goto	l14176
 11076  01B464  0A01               	xorlw	1	; case 1
 11077  01B466  B4D8               	btfsc	status,2,c
 11078  01B468  D6BD               	goto	l14180
 11079  01B46A  0A03               	xorlw	3	; case 2
 11080  01B46C  B4D8               	btfsc	status,2,c
 11081  01B46E  D6ED               	goto	l14196
 11082  01B470  0A01               	xorlw	1	; case 3
 11083  01B472  B4D8               	btfsc	status,2,c
 11084  01B474  D72B               	goto	l14214
 11085  01B476                     l14246:
 11086                           
 11087                           ; BSR set to: 0
 11088                           ;bsoc.c: 260:  return -1.0;
 11089  01B476  0E00               	movlw	0
 11090  01B478  6E2A               	movwf	btemp^0,c
 11091  01B47A  0E00               	movlw	0
 11092  01B47C  6E2B               	movwf	(btemp+1)^0,c
 11093  01B47E  0E80               	movlw	128
 11094  01B480  6E2C               	movwf	(btemp+2)^0,c
 11095  01B482  0EBF               	movlw	191
 11096  01B484                     L7:
 11097  01B484  6E2D               	movwf	(btemp+3)^0,c
 11098  01B486                     l2406:
 11099                           
 11100                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11101  01B486  52E5               	movf	postdec1,f,c
 11102  01B488  0012               	return		;funcret
 11103  01B48A                     __end_of_esr_check:
 11104                           	opt callstack 0
 11105                           
 11106 ;; *************** function _update_adc_result *****************
 11107 ;; Defined at:
 11108 ;;		line 111 in file "daq.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;		None
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;		None
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  1  [STACK] _Bool 
 11115 ;; Registers used:
 11116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11126 ;;Total ram usage:        0 bytes
 11127 ;; Hardware stack levels used:    1
 11128 ;; Hardware stack levels required when called:   17
 11129 ;; This function calls:
 11130 ;;		_StartTimer
 11131 ;;		_TimerDone
 11132 ;;		_check_adc_scan
 11133 ;;		_clear_adc_scan
 11134 ;;		_start_adc_scan
 11135 ;; This function is called by:
 11136 ;;		_esr_check
 11137 ;; This function uses a reentrant model
 11138 ;;
 11139                           
 11140                           	psect	text28
 11141  001D2E                     __ptext28:
 11142                           	opt callstack 0
 11143  001D2E                     _update_adc_result:
 11144                           	opt callstack 12
 11145                           
 11146                           ;daq.c: 113:  if (R.done) {
 11147                           
 11148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11149                           ;incstack = 0
 11150  001D2E  0101               	movlb	1	; () banked
 11151  001D30  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11152  001D32  B4D8               	btfsc	status,2,c
 11153  001D34  0012               	return	
 11154                           
 11155                           ; BSR set to: 1
 11156                           ;daq.c: 114:   clear_adc_scan();
 11157  001D36  EC91  F013         	call	_clear_adc_scan	;wreg free
 11158                           
 11159                           ; BSR set to: 1
 11160                           ;daq.c: 115:   start_adc_scan();
 11161  001D3A  EC39  F00A         	call	_start_adc_scan	;wreg free
 11162                           
 11163                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11164  001D3E  0EC8               	movlw	200
 11165  001D40  6EE6               	movwf	postinc1,c
 11166  001D42  0E00               	movlw	0
 11167  001D44  6EE6               	movwf	postinc1,c
 11168  001D46  0E01               	movlw	1
 11169  001D48  6EE6               	movwf	postinc1,c
 11170  001D4A  ECFA  F00D         	call	_StartTimer	;wreg free
 11171  001D4E                     l13604:
 11172  001D4E  0E01               	movlw	1
 11173  001D50  6EE6               	movwf	postinc1,c
 11174  001D52  EC6F  F010         	call	_TimerDone	;wreg free
 11175  001D56  502A               	movf	btemp^0,w,c
 11176  001D58  A4D8               	btfss	status,2,c
 11177  001D5A  0012               	return	
 11178  001D5C  EC77  F013         	call	_check_adc_scan	;wreg free
 11179  001D60  502A               	movf	btemp^0,w,c
 11180  001D62  A4D8               	btfss	status,2,c
 11181  001D64  0012               	return	
 11182  001D66  D7F3               	goto	l13604
 11183  001D68                     __end_of_update_adc_result:
 11184                           	opt callstack 0
 11185                           
 11186 ;; *************** function _check_adc_scan *****************
 11187 ;; Defined at:
 11188 ;;		line 95 in file "daq.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;		None
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;		None
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1  [STACK] _Bool 
 11195 ;; Registers used:
 11196 ;;		btemp
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/2
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11206 ;;Total ram usage:        0 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:   15
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_main
 11213 ;;		_update_adc_result
 11214 ;; This function uses a reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text29
 11218  0026EE                     __ptext29:
 11219                           	opt callstack 0
 11220  0026EE                     _check_adc_scan:
 11221                           	opt callstack 13
 11222                           
 11223                           ;daq.c: 97:  return R.done;
 11224                           
 11225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11226                           ;incstack = 0
 11227  0026EE  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11228                           
 11229                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11230  0026F4  0012               	return		;funcret
 11231  0026F6                     __end_of_check_adc_scan:
 11232                           	opt callstack 0
 11233                           
 11234 ;; *************** function _set_load_relay_two *****************
 11235 ;; Defined at:
 11236 ;;		line 131 in file "mbmc.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;  mode            1  [STACK] const _Bool 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1  [STACK] void 
 11243 ;; Registers used:
 11244 ;;		wreg, fsr1l, fsr1h
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11254 ;;Total ram usage:        0 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:   15
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_main
 11261 ;;		_esr_check
 11262 ;; This function uses a reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text30
 11266  00261E                     __ptext30:
 11267                           	opt callstack 0
 11268  00261E                     _set_load_relay_two:
 11269                           	opt callstack 15
 11270                           
 11271                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11272                           ;stkvar	_mode @ sp[(0)+-1]
 11273                           
 11274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11275                           ;incstack = 0
 11276  00261E  0EFF               	movlw	-1
 11277  002620  B0E3               	btfsc	plusw1,0,c
 11278  002622  D002               	bra	u12475
 11279  002624  9ABD               	bcf	189,5,c	;volatile
 11280  002626  D001               	bra	u12476
 11281  002628                     u12475:
 11282  002628  8ABD               	bsf	189,5,c	;volatile
 11283  00262A                     u12476:
 11284                           
 11285                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11286  00262A  52E5               	movf	postdec1,f,c
 11287  00262C  0012               	return		;funcret
 11288  00262E                     __end_of_set_load_relay_two:
 11289                           	opt callstack 0
 11290                           
 11291 ;; *************** function _set_load_relay_one *****************
 11292 ;; Defined at:
 11293 ;;		line 126 in file "mbmc.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;  mode            1  [STACK] const _Bool 
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1  [STACK] void 
 11300 ;; Registers used:
 11301 ;;		wreg, fsr1l, fsr1h
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11311 ;;Total ram usage:        0 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:   15
 11314 ;; This function calls:
 11315 ;;		Nothing
 11316 ;; This function is called by:
 11317 ;;		_main
 11318 ;;		_esr_check
 11319 ;; This function uses a reentrant model
 11320 ;;
 11321                           
 11322                           	psect	text31
 11323  00262E                     __ptext31:
 11324                           	opt callstack 0
 11325  00262E                     _set_load_relay_one:
 11326                           	opt callstack 15
 11327                           
 11328                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11329                           ;stkvar	_mode @ sp[(0)+-1]
 11330                           
 11331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11332                           ;incstack = 0
 11333  00262E  0EFF               	movlw	-1
 11334  002630  B0E3               	btfsc	plusw1,0,c
 11335  002632  D002               	bra	u12465
 11336  002634  98BD               	bcf	189,4,c	;volatile
 11337  002636  D001               	bra	u12466
 11338  002638                     u12465:
 11339  002638  88BD               	bsf	189,4,c	;volatile
 11340  00263A                     u12466:
 11341                           
 11342                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11343  00263A  52E5               	movf	postdec1,f,c
 11344  00263C  0012               	return		;funcret
 11345  00263E                     __end_of_set_load_relay_one:
 11346                           	opt callstack 0
 11347                           
 11348 ;; *************** function _eaDogM_WriteCommand *****************
 11349 ;; Defined at:
 11350 ;;		line 384 in file "eadog.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;  cmd             1  [STACK] const unsigned char 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1  [STACK] void 
 11357 ;; Registers used:
 11358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11359 ;; Tracked objects:
 11360 ;;		On entry : 3F/3D
 11361 ;;		On exit  : 3F/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11368 ;;Total ram usage:        0 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:   19
 11371 ;; This function calls:
 11372 ;;		_send_lcd_cmd_dma
 11373 ;; This function is called by:
 11374 ;;		_main
 11375 ;; This function uses a reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text32
 11379  00266E                     __ptext32:
 11380                           	opt callstack 0
 11381  00266E                     _eaDogM_WriteCommand:
 11382                           	opt callstack 11
 11383                           
 11384                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11385                           ;stkvar	_cmd @ sp[(0)+-1]
 11386                           
 11387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11388                           ;incstack = 0
 11389  00266E  0EFF               	movlw	-1
 11390  002670  50E3               	movf	plusw1,w,c
 11391  002672  6EE6               	movwf	postinc1,c
 11392  002674  EC67  F012         	call	_send_lcd_cmd_dma	;wreg free
 11393                           
 11394                           ; BSR set to: 0
 11395                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11396  002678  52E5               	movf	postdec1,f,c
 11397  00267A  0012               	return		;funcret
 11398  00267C                     __end_of_eaDogM_WriteCommand:
 11399                           	opt callstack 0
 11400                           
 11401 ;; *************** function _display_history *****************
 11402 ;; Defined at:
 11403 ;;		line 617 in file "main.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;		None
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1  [STACK] _Bool 
 11410 ;; Registers used:
 11411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/2
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11421 ;;Total ram usage:        0 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; Hardware stack levels required when called:   27
 11424 ;; This function calls:
 11425 ;;		_WaitMs
 11426 ;;		_asctime
 11427 ;;		_get_switch
 11428 ;;		_get_vterm_ptr
 11429 ;;		_localtime
 11430 ;;		_sprintf
 11431 ;;		_time
 11432 ;;		_update_lcd
 11433 ;; This function is called by:
 11434 ;;		_main
 11435 ;; This function uses a reentrant model
 11436 ;;
 11437                           
 11438                           	psect	text33
 11439  01AED8                     __ptext33:
 11440                           	opt callstack 0
 11441  01AED8                     _display_history:
 11442                           	opt callstack 3
 11443                           
 11444                           ;main.c: 619:  static uint8_t bwait = 0;;main.c: 621:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11445                           
 11446                           ; BSR set to: 0
 11447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11448                           ;incstack = 0
 11449  01AED8  0E04               	movlw	4
 11450  01AEDA  6EE6               	movwf	postinc1,c
 11451  01AEDC  EC03  F010         	call	_get_switch	;wreg free
 11452  01AEE0  502A               	movf	btemp^0,w,c
 11453  01AEE2  B4D8               	btfsc	status,2,c
 11454  01AEE4  D15E               	goto	l17278
 11455  01AEE6  2A53               	incf	display_history@bwait^0,f,c
 11456  01AEE8  0E05               	movlw	5
 11457  01AEEA  6453               	cpfsgt	display_history@bwait^0,c
 11458  01AEEC  D15A               	goto	l17278
 11459                           
 11460                           ;main.c: 622:   pclock = time(((void*)0));
 11461  01AEEE  0E00               	movlw	0
 11462  01AEF0  6EE6               	movwf	postinc1,c
 11463  01AEF2  0E00               	movlw	0
 11464  01AEF4  6EE6               	movwf	postinc1,c
 11465  01AEF6  ECFD  F00A         	call	_time	;wreg free
 11466  01AEFA  52E5               	movf	postdec1,f,c
 11467  01AEFC  006F FF9C  F041    	movff	indf1,btemp+23
 11468  01AF02  52E5               	movf	postdec1,f,c
 11469  01AF04  006F FF9C  F040    	movff	indf1,btemp+22
 11470  01AF0A  52E5               	movf	postdec1,f,c
 11471  01AF0C  006F FF9C  F03F    	movff	indf1,btemp+21
 11472  01AF12  52E5               	movf	postdec1,f,c
 11473  01AF14  006F FF9C  F03E    	movff	indf1,btemp+20
 11474  01AF1A  52E5               	movf	postdec1,f,c
 11475  01AF1C  006F FF9C  F03D    	movff	indf1,btemp+19
 11476  01AF22  52E5               	movf	postdec1,f,c
 11477  01AF24  006F FF9C  F03C    	movff	indf1,btemp+18
 11478  01AF2A  52E5               	movf	postdec1,f,c
 11479  01AF2C  006F FF9C  F03B    	movff	indf1,btemp+17
 11480  01AF32  52E5               	movf	postdec1,f,c
 11481  01AF34  006F FF9C  F03A    	movff	indf1,btemp+16
 11482  01AF3A  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11483  01AF40  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11484  01AF46  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11485  01AF4C  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11486  01AF52  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11487  01AF58  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11488  01AF5E  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11489  01AF64  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11490                           
 11491                           ; BSR set to: 57
 11492                           ;main.c: 623:   t_mbmc = localtime(&pclock);
 11493  01AF6A  0EDA               	movlw	_pclock& (0+255)
 11494  01AF6C  6EE6               	movwf	postinc1,c
 11495  01AF6E  ECC7  F012         	call	_localtime	;wreg free
 11496  01AF72  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11497  01AF78  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11498                           
 11499                           ;main.c: 624:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11500  01AF7E  EE22  F1E3         	lfsr	2,_C+228	;volatile
 11501  01AF82  006F FF78  F034    	movff	postinc2,btemp+10
 11502  01AF88  006F FF74  F035    	movff	postdec2,btemp+11
 11503  01AF8E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11504  01AF94  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11505  01AF9A  EE22  F1E1         	lfsr	2,_C+226	;volatile
 11506  01AF9E  006F FF78  F034    	movff	postinc2,btemp+10
 11507  01AFA4  006F FF74  F035    	movff	postdec2,btemp+11
 11508  01AFAA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11509  01AFB0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11510  01AFB6  EE22  F1DF         	lfsr	2,_C+224	;volatile
 11511  01AFBA  006F FF78  F034    	movff	postinc2,btemp+10
 11512  01AFC0  006F FF74  F035    	movff	postdec2,btemp+11
 11513  01AFC6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11514  01AFCC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11515  01AFD2  EE22  F1DD         	lfsr	2,_C+222	;volatile
 11516  01AFD6  006F FF78  F034    	movff	postinc2,btemp+10
 11517  01AFDC  006F FF74  F035    	movff	postdec2,btemp+11
 11518  01AFE2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11519  01AFE8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11520  01AFEE  0EE4               	movlw	low STR_65
 11521  01AFF0  6EE6               	movwf	postinc1,c
 11522  01AFF2  0EFA               	movlw	high STR_65
 11523  01AFF4  6EE6               	movwf	postinc1,c
 11524  01AFF6  0E00               	movlw	0
 11525  01AFF8  6EE6               	movwf	postinc1,c
 11526  01AFFA  0E00               	movlw	0
 11527  01AFFC  6EE6               	movwf	postinc1,c
 11528  01AFFE  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 11529  01B002  0060  F0AB  FFE6   	movff	btemp,postinc1
 11530  01B008  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11531  01B00E  0E0C               	movlw	12
 11532  01B010  6EE6               	movwf	postinc1,c
 11533  01B012  ECB9  F0FB         	call	_sprintf	;wreg free
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;main.c: 625:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11537  01B016  EE22  F1EB         	lfsr	2,_C+236	;volatile
 11538  01B01A  006F FF78  F034    	movff	postinc2,btemp+10
 11539  01B020  006F FF74  F035    	movff	postdec2,btemp+11
 11540  01B026  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11541  01B02C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11542  01B032  EE22  F1E9         	lfsr	2,_C+234	;volatile
 11543  01B036  006F FF78  F034    	movff	postinc2,btemp+10
 11544  01B03C  006F FF74  F035    	movff	postdec2,btemp+11
 11545  01B042  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11546  01B048  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11547  01B04E  EE22  F1E7         	lfsr	2,_C+232	;volatile
 11548  01B052  006F FF78  F034    	movff	postinc2,btemp+10
 11549  01B058  006F FF74  F035    	movff	postdec2,btemp+11
 11550  01B05E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11551  01B064  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11552  01B06A  EE22  F1E5         	lfsr	2,_C+230	;volatile
 11553  01B06E  006F FF78  F034    	movff	postinc2,btemp+10
 11554  01B074  006F FF74  F035    	movff	postdec2,btemp+11
 11555  01B07A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11556  01B080  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11557  01B086  0EE4               	movlw	low STR_65
 11558  01B088  6EE6               	movwf	postinc1,c
 11559  01B08A  0EFA               	movlw	high STR_65
 11560  01B08C  6EE6               	movwf	postinc1,c
 11561  01B08E  0E00               	movlw	0
 11562  01B090  6EE6               	movwf	postinc1,c
 11563  01B092  0E01               	movlw	1
 11564  01B094  6EE6               	movwf	postinc1,c
 11565  01B096  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 11566  01B09A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11567  01B0A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11568  01B0A6  0E0C               	movlw	12
 11569  01B0A8  6EE6               	movwf	postinc1,c
 11570  01B0AA  ECB9  F0FB         	call	_sprintf	;wreg free
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;main.c: 626:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11574  01B0AE  EE22  F1F5         	lfsr	2,_C+246	;volatile
 11575  01B0B2  006F FF78  F034    	movff	postinc2,btemp+10
 11576  01B0B8  006F FF74  F035    	movff	postdec2,btemp+11
 11577  01B0BE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11578  01B0C4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11579  01B0CA  EE22  F1F1         	lfsr	2,_C+242	;volatile
 11580  01B0CE  006F FF78  F034    	movff	postinc2,btemp+10
 11581  01B0D4  006F FF74  F035    	movff	postdec2,btemp+11
 11582  01B0DA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11583  01B0E0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11584  01B0E6  EE22  F1EF         	lfsr	2,_C+240	;volatile
 11585  01B0EA  006F FF78  F034    	movff	postinc2,btemp+10
 11586  01B0F0  006F FF74  F035    	movff	postdec2,btemp+11
 11587  01B0F6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11588  01B0FC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11589  01B102  EE22  F1ED         	lfsr	2,_C+238	;volatile
 11590  01B106  006F FF78  F034    	movff	postinc2,btemp+10
 11591  01B10C  006F FF74  F035    	movff	postdec2,btemp+11
 11592  01B112  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11593  01B118  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11594  01B11E  0EE4               	movlw	low STR_65
 11595  01B120  6EE6               	movwf	postinc1,c
 11596  01B122  0EFA               	movlw	high STR_65
 11597  01B124  6EE6               	movwf	postinc1,c
 11598  01B126  0E00               	movlw	0
 11599  01B128  6EE6               	movwf	postinc1,c
 11600  01B12A  0E02               	movlw	2
 11601  01B12C  6EE6               	movwf	postinc1,c
 11602  01B12E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 11603  01B132  0060  F0AB  FFE6   	movff	btemp,postinc1
 11604  01B138  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11605  01B13E  0E0C               	movlw	12
 11606  01B140  6EE6               	movwf	postinc1,c
 11607  01B142  ECB9  F0FB         	call	_sprintf	;wreg free
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;main.c: 627:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11611  01B146  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 11612  01B14C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 11613  01B152  EC5B  F0C0         	call	_asctime	;wreg free
 11614  01B156  0060  F0AB  FFE6   	movff	btemp,postinc1
 11615  01B15C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11616  01B162  0E78               	movlw	low (STR_72+5)
 11617  01B164  6EE6               	movwf	postinc1,c
 11618  01B166  0EFF               	movlw	high (STR_72+5)
 11619  01B168  6EE6               	movwf	postinc1,c
 11620  01B16A  0E00               	movlw	0
 11621  01B16C  6EE6               	movwf	postinc1,c
 11622  01B16E  0E03               	movlw	3
 11623  01B170  6EE6               	movwf	postinc1,c
 11624  01B172  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 11625  01B176  0060  F0AB  FFE6   	movff	btemp,postinc1
 11626  01B17C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11627  01B182  0E06               	movlw	6
 11628  01B184  6EE6               	movwf	postinc1,c
 11629  01B186  ECB9  F0FB         	call	_sprintf	;wreg free
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;main.c: 628:   update_lcd(0);
 11633  01B18A  0E00               	movlw	0
 11634  01B18C  6EE6               	movwf	postinc1,c
 11635  01B18E  EC6B  F0F4         	call	_update_lcd	;wreg free
 11636                           
 11637                           ;main.c: 629:   WaitMs(2000);
 11638  01B192  0ED0               	movlw	208
 11639  01B194  6EE6               	movwf	postinc1,c
 11640  01B196  0E07               	movlw	7
 11641  01B198  6EE6               	movwf	postinc1,c
 11642  01B19A  EC07  F00F         	call	_WaitMs	;wreg free
 11643  01B19E                     l17272:
 11644                           
 11645                           ;main.c: 630:   bwait = 0;
 11646  01B19E  6A53               	clrf	display_history@bwait^0,c
 11647  01B1A0  0012               	return	
 11648  01B1A2                     l17278:
 11649                           
 11650                           ;main.c: 633:   if (!get_switch(SCALIB))
 11651  01B1A2  0E04               	movlw	4
 11652  01B1A4  6EE6               	movwf	postinc1,c
 11653  01B1A6  EC03  F010         	call	_get_switch	;wreg free
 11654  01B1AA  502A               	movf	btemp^0,w,c
 11655  01B1AC  A4D8               	btfss	status,2,c
 11656  01B1AE  0012               	return	
 11657  01B1B0  D7F6               	goto	l17272
 11658  01B1B2                     __end_of_display_history:
 11659                           	opt callstack 0
 11660                           
 11661 ;; *************** function _time *****************
 11662 ;; Defined at:
 11663 ;;		line 243 in file "mbmc.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;  t               2  [STACK] PTR long long 
 11666 ;;		 -> time@current_time(8), NULL(0), 
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;		None
 11669 ;; Return value:  Size  Location     Type
 11670 ;;                  8  [STACK] long long 
 11671 ;; Registers used:
 11672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/2
 11675 ;;		On exit  : 3F/39
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11682 ;;Total ram usage:        0 bytes
 11683 ;; Hardware stack levels used:    1
 11684 ;; Hardware stack levels required when called:   15
 11685 ;; This function calls:
 11686 ;;		Nothing
 11687 ;; This function is called by:
 11688 ;;		_main
 11689 ;;		_display_history
 11690 ;;		_check_day_time
 11691 ;;		_load_hist_data
 11692 ;; This function uses a reentrant model
 11693 ;;
 11694                           
 11695                           	psect	text34
 11696  0015FA                     __ptext34:
 11697                           	opt callstack 0
 11698  0015FA                     _time:
 11699                           	opt callstack 0
 11700                           
 11701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 11702  0015FA  0E06               	movlw	6
 11703  0015FC  26E1               	addwf	fsr1l,f,c
 11704  0015FE  0E00               	movlw	0
 11705  001600  22E2               	addwfc	fsr1h,f,c
 11706                           
 11707                           ;mbmc.c: 243: time_t time(time_t * t);mbmc.c: 244: {;mbmc.c: 245:  static time_t current
      +                          _time;;mbmc.c: 246:  PIE8bits.TMR5IE = 0;
 11708                           
 11709                           ;incstack = 0
 11710 ;; hardware stack exceeded
 11711  001602  0139               	movlb	57	; () banked
 11712  001604  9D98               	bcf	152,6,b	;volatile
 11713                           
 11714                           ; BSR set to: 57
 11715                           ;mbmc.c: 247:  current_time = V.ticks;
 11716  001606  0102               	movlb	2	; () banked
 11717  001608  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 11718  00160A  0100               	movlb	0	; () banked
 11719  00160C  6FD2               	movwf	time@current_time& (0+255),b
 11720  00160E  0102               	movlb	2	; () banked
 11721  001610  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 11722  001612  0100               	movlb	0	; () banked
 11723  001614  6FD3               	movwf	(time@current_time+1)& (0+255),b
 11724  001616  0102               	movlb	2	; () banked
 11725  001618  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 11726  00161A  0100               	movlb	0	; () banked
 11727  00161C  6FD4               	movwf	(time@current_time+2)& (0+255),b
 11728  00161E  0102               	movlb	2	; () banked
 11729  001620  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 11730  001622  0100               	movlb	0	; () banked
 11731  001624  6FD5               	movwf	(time@current_time+3)& (0+255),b
 11732  001626  6BD6               	clrf	(time@current_time+4)& (0+255),b
 11733  001628  6BD7               	clrf	(time@current_time+5)& (0+255),b
 11734  00162A  6BD8               	clrf	(time@current_time+6)& (0+255),b
 11735  00162C  6BD9               	clrf	(time@current_time+7)& (0+255),b
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;mbmc.c: 248:  PIE8bits.TMR5IE = 1;
 11739  00162E  0139               	movlb	57	; () banked
 11740  001630  8D98               	bsf	152,6,b	;volatile
 11741                           
 11742                           ; BSR set to: 57
 11743                           ;mbmc.c: 249:  if (t) {
 11744                           ;stkvar	_t @ sp[(0)+-8]
 11745  001632  0EF8               	movlw	-8
 11746  001634  006F FF8C  F02A    	movff	plusw1,btemp
 11747  00163A  0EF9               	movlw	-7
 11748  00163C  50E3               	movf	plusw1,w,c
 11749  00163E  102A               	iorwf	btemp^0,w,c
 11750                           
 11751                           ; BSR set to: 57
 11752                           ;mbmc.c: 252:  return current_time;
 11753                           
 11754                           ; BSR set to: 57
 11755  001640  EE20  F0D2         	lfsr	2,time@current_time
 11756                           
 11757                           ;stkvar	?_time @ sp[(0)+-8]
 11758  001644  0E08               	movlw	8
 11759  001646  6E2A               	movwf	btemp^0,c
 11760  001648  0EF8               	movlw	-8
 11761  00164A                     us1169999:
 11762  00164A  006F FF7B FFE3     	movff	postinc2,plusw1
 11763  001650  28E8               	incf	wreg,w,c
 11764  001652  2E2A               	decfsz	btemp^0,f,c
 11765  001654  D7FA               	bra	us1169999
 11766                           
 11767                           ; BSR set to: 57
 11768                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 11769  001656  0012               	return		;funcret
 11770  001658                     __end_of_time:
 11771                           	opt callstack 0
 11772                           
 11773 ;; *************** function _localtime *****************
 11774 ;; Defined at:
 11775 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 11776 ;; Parameters:    Size  Location     Type
 11777 ;;  t               1  [STACK] PTR const long long 
 11778 ;;		 -> pclock(8), 
 11779 ;; Auto vars:     Size  Location     Type
 11780 ;;		None
 11781 ;; Return value:  Size  Location     Type
 11782 ;;                  2  [STACK] PTR struct tm
 11783 ;; Registers used:
 11784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11785 ;; Tracked objects:
 11786 ;;		On entry : 3F/39
 11787 ;;		On exit  : 0/0
 11788 ;;		Unchanged: 0/0
 11789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11794 ;;Total ram usage:        0 bytes
 11795 ;; Hardware stack levels used:    1
 11796 ;; Hardware stack levels required when called:   21
 11797 ;; This function calls:
 11798 ;;		___localtime_r
 11799 ;; This function is called by:
 11800 ;;		_main
 11801 ;;		_display_history
 11802 ;; This function uses a reentrant model
 11803 ;;
 11804                           
 11805                           	psect	text35
 11806  00258E                     __ptext35:
 11807                           	opt callstack 0
 11808  00258E                     _localtime:
 11809                           	opt callstack 9
 11810                           
 11811                           ; BSR set to: 57
 11812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11813                           ;incstack = 0
 11814  00258E  0EDF               	movlw	low localtime@tm
 11815  002590  6EE6               	movwf	postinc1,c
 11816  002592  0E03               	movlw	high localtime@tm
 11817  002594  6EE6               	movwf	postinc1,c
 11818                           
 11819                           ;stkvar	_t @ sp[(-2)+-1]
 11820  002596  0EFD               	movlw	-3
 11821  002598  50E3               	movf	plusw1,w,c
 11822  00259A  6EE6               	movwf	postinc1,c
 11823  00259C  ECEE  F0E2         	call	___localtime_r	;wreg free
 11824                           
 11825                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11826  0025A0  52E5               	movf	postdec1,f,c
 11827  0025A2  0012               	return		;funcret
 11828  0025A4                     __end_of_localtime:
 11829                           	opt callstack 0
 11830                           
 11831 ;; *************** function ___localtime_r *****************
 11832 ;; Defined at:
 11833 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;  t               1  [STACK] PTR const long long 
 11836 ;;		 -> pclock(8), 
 11837 ;;  tm              2  [STACK] PTR struct tm
 11838 ;;		 -> localtime@tm(24), 
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;		None
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  2  [STACK] PTR struct tm
 11843 ;; Registers used:
 11844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/39
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11854 ;;Total ram usage:        0 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:   20
 11857 ;; This function calls:
 11858 ;;		___secs_to_tm
 11859 ;;		___secs_to_zone
 11860 ;; This function is called by:
 11861 ;;		_localtime
 11862 ;; This function uses a reentrant model
 11863 ;;
 11864                           
 11865                           	psect	text36
 11866  01C5DC                     __ptext36:
 11867                           	opt callstack 0
 11868  01C5DC                     ___localtime_r:
 11869                           	opt callstack 9
 11870                           
 11871                           ;stkvar	_t @ sp[(0)+-1]
 11872                           
 11873                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11874                           ;incstack = 0
 11875  01C5DC  0EFF               	movlw	-1
 11876  01C5DE  50E3               	movf	plusw1,w,c
 11877  01C5E0  6ED9               	movwf	fsr2l,c
 11878  01C5E2  6ADA               	clrf	fsr2h,c
 11879  01C5E4  0E07               	movlw	7
 11880  01C5E6  AEDB               	btfss	plusw2,7,c
 11881  01C5E8  D010               	goto	u16400
 11882  01C5EA  52DE               	movf	postinc2,f,c
 11883  01C5EC  52DE               	movf	postinc2,f,c
 11884  01C5EE  0E80               	movlw	128
 11885  01C5F0  5CDE               	subwf	postinc2,w,c
 11886  01C5F2  0EBD               	movlw	189
 11887  01C5F4  58DE               	subwfb	postinc2,w,c
 11888  01C5F6  0E0E               	movlw	14
 11889  01C5F8  58DE               	subwfb	postinc2,w,c
 11890  01C5FA  0EFF               	movlw	255
 11891  01C5FC  58DE               	subwfb	postinc2,w,c
 11892  01C5FE  0EFF               	movlw	255
 11893  01C600  58DE               	subwfb	postinc2,w,c
 11894  01C602  0EFF               	movlw	255
 11895  01C604  58DE               	subwfb	postinc2,w,c
 11896  01C606  A0D8               	btfss	status,0,c
 11897  01C608  D01B               	goto	u16410
 11898  01C60A                     u16400:
 11899                           
 11900                           ;stkvar	_t @ sp[(0)+-1]
 11901  01C60A  0EFF               	movlw	-1
 11902  01C60C  50E3               	movf	plusw1,w,c
 11903  01C60E  6ED9               	movwf	fsr2l,c
 11904  01C610  6ADA               	clrf	fsr2h,c
 11905  01C612  0E07               	movlw	7
 11906  01C614  BEDB               	btfsc	plusw2,7,c
 11907  01C616  D019               	goto	l16820
 11908  01C618  0E07               	movlw	7
 11909  01C61A  50DB               	movf	plusw2,w,c
 11910  01C61C  E111               	bnz	u16410
 11911  01C61E  0E06               	movlw	6
 11912  01C620  50DB               	movf	plusw2,w,c
 11913  01C622  E10E               	bnz	u16410
 11914  01C624  0E05               	movlw	5
 11915  01C626  50DB               	movf	plusw2,w,c
 11916  01C628  E10B               	bnz	u16410
 11917  01C62A  04DE               	decf	postinc2,w,c
 11918  01C62C  0E7B               	movlw	123
 11919  01C62E  58DE               	subwfb	postinc2,w,c
 11920  01C630  0E9D               	movlw	157
 11921  01C632  58DE               	subwfb	postinc2,w,c
 11922  01C634  0E40               	movlw	64
 11923  01C636  58DE               	subwfb	postinc2,w,c
 11924  01C638  0EF1               	movlw	241
 11925  01C63A  58DE               	subwfb	postinc2,w,c
 11926  01C63C  A0D8               	btfss	status,0,c
 11927  01C63E  D005               	goto	l16820
 11928  01C640                     u16410:
 11929  01C640  0E00               	movlw	0
 11930  01C642  6E2A               	movwf	btemp^0,c
 11931  01C644  0E00               	movlw	0
 11932  01C646  6E2B               	movwf	(btemp+1)^0,c
 11933  01C648  D0E7               	goto	l3515
 11934  01C64A                     l16820:
 11935                           
 11936                           ;stkvar	_tm @ sp[(0)+-3]
 11937  01C64A  0EFD               	movlw	-3
 11938  01C64C  50E3               	movf	plusw1,w,c
 11939  01C64E  0F16               	addlw	22
 11940  01C650  6E34               	movwf	(btemp+10)^0,c
 11941  01C652  0EFE               	movlw	-2
 11942  01C654  006F FF8C  F035    	movff	plusw1,btemp+11
 11943  01C65A  0E00               	movlw	0
 11944  01C65C  2235               	addwfc	(btemp+11)^0,f,c
 11945  01C65E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11946  01C664  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11947  01C66A  0E00               	movlw	0
 11948  01C66C  6EE6               	movwf	postinc1,c
 11949  01C66E  0E00               	movlw	0
 11950  01C670  6EE6               	movwf	postinc1,c
 11951                           
 11952                           ;stkvar	_tm @ sp[(-4)+-3]
 11953  01C672  0EF9               	movlw	-7
 11954  01C674  50E3               	movf	plusw1,w,c
 11955  01C676  0F12               	addlw	18
 11956  01C678  6E34               	movwf	(btemp+10)^0,c
 11957  01C67A  0EFA               	movlw	-6
 11958  01C67C  006F FF8C  F035    	movff	plusw1,btemp+11
 11959  01C682  0E00               	movlw	0
 11960  01C684  2235               	addwfc	(btemp+11)^0,f,c
 11961  01C686  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11962  01C68C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11963                           
 11964                           ;stkvar	_tm @ sp[(-6)+-3]
 11965  01C692  0EF7               	movlw	-9
 11966  01C694  50E3               	movf	plusw1,w,c
 11967  01C696  0F10               	addlw	16
 11968  01C698  6E34               	movwf	(btemp+10)^0,c
 11969  01C69A  0EF8               	movlw	-8
 11970  01C69C  006F FF8C  F035    	movff	plusw1,btemp+11
 11971  01C6A2  0E00               	movlw	0
 11972  01C6A4  2235               	addwfc	(btemp+11)^0,f,c
 11973  01C6A6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11974  01C6AC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11975  01C6B2  0E00               	movlw	0
 11976  01C6B4  6EE6               	movwf	postinc1,c
 11977  01C6B6  0E00               	movlw	0
 11978  01C6B8  6EE6               	movwf	postinc1,c
 11979                           
 11980                           ;stkvar	_t @ sp[(-10)+-1]
 11981  01C6BA  0EF5               	movlw	-11
 11982  01C6BC  50E3               	movf	plusw1,w,c
 11983  01C6BE  6ED9               	movwf	fsr2l,c
 11984  01C6C0  6ADA               	clrf	fsr2h,c
 11985  01C6C2  006F FF7B FFE6     	movff	postinc2,postinc1
 11986  01C6C8  006F FF7B FFE6     	movff	postinc2,postinc1
 11987  01C6CE  006F FF7B FFE6     	movff	postinc2,postinc1
 11988  01C6D4  006F FF7B FFE6     	movff	postinc2,postinc1
 11989  01C6DA  006F FF7B FFE6     	movff	postinc2,postinc1
 11990  01C6E0  006F FF7B FFE6     	movff	postinc2,postinc1
 11991  01C6E6  006F FF7B FFE6     	movff	postinc2,postinc1
 11992  01C6EC  006F FF7B FFE6     	movff	postinc2,postinc1
 11993  01C6F2  ECFC  F0AD         	call	___secs_to_zone	;wreg free
 11994                           
 11995                           ;stkvar	_tm @ sp[(0)+-3]
 11996  01C6F6  0EFD               	movlw	-3
 11997  01C6F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11998  01C6FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11999                           
 12000                           ;stkvar	_t @ sp[(-2)+-1]
 12001  01C704  0EFD               	movlw	-3
 12002  01C706  50E3               	movf	plusw1,w,c
 12003  01C708  6ED9               	movwf	fsr2l,c
 12004  01C70A  6ADA               	clrf	fsr2h,c
 12005  01C70C  006F FF78  F03A    	movff	postinc2,btemp+16
 12006  01C712  006F FF78  F03B    	movff	postinc2,btemp+17
 12007  01C718  006F FF78  F03C    	movff	postinc2,btemp+18
 12008  01C71E  006F FF78  F03D    	movff	postinc2,btemp+19
 12009  01C724  006F FF78  F03E    	movff	postinc2,btemp+20
 12010  01C72A  006F FF78  F03F    	movff	postinc2,btemp+21
 12011  01C730  006F FF78  F040    	movff	postinc2,btemp+22
 12012  01C736  006F FF78  F041    	movff	postinc2,btemp+23
 12013                           
 12014                           ;stkvar	_tm @ sp[(-2)+-3]
 12015  01C73C  0EFB               	movlw	-5
 12016  01C73E  006F FF8C  F034    	movff	plusw1,btemp+10
 12017  01C744  0EFC               	movlw	-4
 12018  01C746  006F FF8C  F035    	movff	plusw1,btemp+11
 12019  01C74C  0E12               	movlw	18
 12020  01C74E  2434               	addwf	(btemp+10)^0,w,c
 12021  01C750  6ED9               	movwf	fsr2l,c
 12022  01C752  0E00               	movlw	0
 12023  01C754  2035               	addwfc	(btemp+11)^0,w,c
 12024  01C756  6EDA               	movwf	fsr2h,c
 12025  01C758  006F FF78  F032    	movff	postinc2,btemp+8
 12026  01C75E  006F FF78  F033    	movff	postinc2,btemp+9
 12027  01C764  006F FF78  F034    	movff	postinc2,btemp+10
 12028  01C76A  006F FF78  F035    	movff	postinc2,btemp+11
 12029  01C770  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12030  01C776  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12031  01C77C  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12032  01C782  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12033  01C788  6A46               	clrf	(btemp+28)^0,c
 12034  01C78A  BE45               	btfsc	(btemp+27)^0,7,c
 12035  01C78C  6846               	setf	(btemp+28)^0,c
 12036  01C78E  0060  F118  F047   	movff	btemp+28,btemp+29
 12037  01C794  0060  F118  F048   	movff	btemp+28,btemp+30
 12038  01C79A  0060  F118  F049   	movff	btemp+28,btemp+31
 12039  01C7A0  503A               	movf	(btemp+16)^0,w,c
 12040  01C7A2  2442               	addwf	(btemp+24)^0,w,c
 12041  01C7A4  6E32               	movwf	(btemp+8)^0,c
 12042  01C7A6  503B               	movf	(btemp+17)^0,w,c
 12043  01C7A8  2043               	addwfc	(btemp+25)^0,w,c
 12044  01C7AA  6E33               	movwf	(btemp+9)^0,c
 12045  01C7AC  503C               	movf	(btemp+18)^0,w,c
 12046  01C7AE  2044               	addwfc	(btemp+26)^0,w,c
 12047  01C7B0  6E34               	movwf	(btemp+10)^0,c
 12048  01C7B2  503D               	movf	(btemp+19)^0,w,c
 12049  01C7B4  2045               	addwfc	(btemp+27)^0,w,c
 12050  01C7B6  6E35               	movwf	(btemp+11)^0,c
 12051  01C7B8  503E               	movf	(btemp+20)^0,w,c
 12052  01C7BA  2046               	addwfc	(btemp+28)^0,w,c
 12053  01C7BC  6E36               	movwf	(btemp+12)^0,c
 12054  01C7BE  503F               	movf	(btemp+21)^0,w,c
 12055  01C7C0  2047               	addwfc	(btemp+29)^0,w,c
 12056  01C7C2  6E37               	movwf	(btemp+13)^0,c
 12057  01C7C4  5040               	movf	(btemp+22)^0,w,c
 12058  01C7C6  2048               	addwfc	(btemp+30)^0,w,c
 12059  01C7C8  6E38               	movwf	(btemp+14)^0,c
 12060  01C7CA  5041               	movf	(btemp+23)^0,w,c
 12061  01C7CC  2049               	addwfc	(btemp+31)^0,w,c
 12062  01C7CE  6E39               	movwf	(btemp+15)^0,c
 12063  01C7D0  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12064  01C7D6  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12065  01C7DC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12066  01C7E2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12067  01C7E8  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12068  01C7EE  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12069  01C7F4  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12070  01C7FA  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12071  01C800  ECCD  F093         	call	___secs_to_tm	;wreg free
 12072  01C804  BE2D               	btfsc	(btemp+3)^0,7,c
 12073  01C806  D71C               	goto	u16410
 12074                           
 12075                           ;stkvar	_tm @ sp[(0)+-3]
 12076  01C808  0EFD               	movlw	-3
 12077  01C80A  006F FF8C  F02A    	movff	plusw1,btemp
 12078  01C810  0EFE               	movlw	-2
 12079  01C812  006F FF8C  F02B    	movff	plusw1,btemp+1
 12080  01C818                     l3515:
 12081                           
 12082                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12083  01C818  52E5               	movf	postdec1,f,c
 12084  01C81A  52E5               	movf	postdec1,f,c
 12085  01C81C  52E5               	movf	postdec1,f,c
 12086  01C81E  0012               	return		;funcret
 12087  01C820                     __end_of___localtime_r:
 12088                           	opt callstack 0
 12089                           
 12090 ;; *************** function ___secs_to_zone *****************
 12091 ;; Defined at:
 12092 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12093 ;; Parameters:    Size  Location     Type
 12094 ;;  t               8  [STACK] long long 
 12095 ;;  local           2  [STACK] int 
 12096 ;;  isdst           2  [STACK] PTR int 
 12097 ;;		 -> localtime@tm(24), 
 12098 ;;  offset          2  [STACK] PTR long 
 12099 ;;		 -> localtime@tm(24), 
 12100 ;;  oppoff          2  [STACK] PTR long 
 12101 ;;		 -> NULL(0), 
 12102 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12103 ;;		 -> localtime@tm(24), 
 12104 ;; Auto vars:     Size  Location     Type
 12105 ;;  alt             2  [STACK] unsigned int 
 12106 ;;  i               2    0        unsigned int 
 12107 ;;  y               8  [STACK] long long 
 12108 ;;  t1              8  [STACK] long long 
 12109 ;;  t0              8  [STACK] long long 
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1  [STACK] void 
 12112 ;; Registers used:
 12113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/39
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;Total ram usage:        0 bytes
 12124 ;; Hardware stack levels used:    1
 12125 ;; Hardware stack levels required when called:   19
 12126 ;; This function calls:
 12127 ;;		___aodiv
 12128 ;;		___year_to_secs
 12129 ;;		_do_tzset
 12130 ;;		_rule_to_secs
 12131 ;;		_scan_trans
 12132 ;;		_zi_read32
 12133 ;; This function is called by:
 12134 ;;		___localtime_r
 12135 ;; This function uses a reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text37
 12139  015BF8                     __ptext37:
 12140                           	opt callstack 0
 12141  015BF8                     ___secs_to_zone:
 12142                           	opt callstack 0
 12143                           
 12144                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12145  015BF8  0E18               	movlw	24
 12146  015BFA  26E1               	addwf	fsr1l,f,c
 12147  015BFC  0E00               	movlw	0
 12148  015BFE  22E2               	addwfc	fsr1h,f,c
 12149                           
 12150                           ;incstack = 0
 12151  015C00  ECA4  F0DB         	call	_do_tzset	;wreg free
 12152  015C04  0100               	movlb	0	; () banked
 12153  015C06  51B8               	movf	___daylight& (0+255),w,b
 12154  015C08  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12155  015C0A  B4D8               	btfsc	status,2,c
 12156  015C0C  D356               	goto	u16190
 12157                           
 12158                           ; BSR set to: 0
 12159  015C0E  0E58               	movlw	88
 12160  015C10  6EE6               	movwf	postinc1,c
 12161  015C12  0E85               	movlw	133
 12162  015C14  6EE6               	movwf	postinc1,c
 12163  015C16  0EE1               	movlw	225
 12164  015C18  6EE6               	movwf	postinc1,c
 12165  015C1A  0E01               	movlw	1
 12166  015C1C  6EE6               	movwf	postinc1,c
 12167  015C1E  0E00               	movlw	0
 12168  015C20  6EE6               	movwf	postinc1,c
 12169  015C22  0E00               	movlw	0
 12170  015C24  6EE6               	movwf	postinc1,c
 12171  015C26  0E00               	movlw	0
 12172  015C28  6EE6               	movwf	postinc1,c
 12173  015C2A  0E00               	movlw	0
 12174  015C2C  6EE6               	movwf	postinc1,c
 12175                           
 12176                           ;stkvar	_t @ sp[(-32)+-8]
 12177  015C2E  50E1               	movf	fsr1l,w,c
 12178  015C30  0FD8               	addlw	-40
 12179  015C32  6ED9               	movwf	fsr2l,c
 12180  015C34  50E2               	movf	fsr1h,w,c
 12181  015C36  6EDA               	movwf	fsr2h,c
 12182  015C38  0EFF               	movlw	255
 12183  015C3A  22DA               	addwfc	fsr2h,f,c
 12184  015C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 12185  015C42  006F FF7B FFE6     	movff	postinc2,postinc1
 12186  015C48  006F FF7B FFE6     	movff	postinc2,postinc1
 12187  015C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 12188  015C54  006F FF7B FFE6     	movff	postinc2,postinc1
 12189  015C5A  006F FF7B FFE6     	movff	postinc2,postinc1
 12190  015C60  006F FF7B FFE6     	movff	postinc2,postinc1
 12191  015C66  006F FF7B FFE6     	movff	postinc2,postinc1
 12192  015C6C  EC24  F0DE         	call	___aodiv	;wreg free
 12193  015C70  52E5               	movf	postdec1,f,c
 12194  015C72  006F FF9C  F041    	movff	indf1,btemp+23
 12195  015C78  52E5               	movf	postdec1,f,c
 12196  015C7A  006F FF9C  F040    	movff	indf1,btemp+22
 12197  015C80  52E5               	movf	postdec1,f,c
 12198  015C82  006F FF9C  F03F    	movff	indf1,btemp+21
 12199  015C88  52E5               	movf	postdec1,f,c
 12200  015C8A  006F FF9C  F03E    	movff	indf1,btemp+20
 12201  015C90  52E5               	movf	postdec1,f,c
 12202  015C92  006F FF9C  F03D    	movff	indf1,btemp+19
 12203  015C98  52E5               	movf	postdec1,f,c
 12204  015C9A  006F FF9C  F03C    	movff	indf1,btemp+18
 12205  015CA0  52E5               	movf	postdec1,f,c
 12206  015CA2  006F FF9C  F03B    	movff	indf1,btemp+17
 12207  015CA8  52E5               	movf	postdec1,f,c
 12208  015CAA  006F FF9C  F03A    	movff	indf1,btemp+16
 12209  015CB0  0EF8               	movlw	248
 12210  015CB2  26E1               	addwf	fsr1l,f,c
 12211  015CB4  0EFF               	movlw	255
 12212  015CB6  22E2               	addwfc	fsr1h,f,c
 12213  015CB8  0E46               	movlw	70
 12214  015CBA  243A               	addwf	(btemp+16)^0,w,c
 12215  015CBC  6E42               	movwf	(btemp+24)^0,c
 12216  015CBE  0E00               	movlw	0
 12217  015CC0  203B               	addwfc	(btemp+17)^0,w,c
 12218  015CC2  6E43               	movwf	(btemp+25)^0,c
 12219  015CC4  0E00               	movlw	0
 12220  015CC6  203C               	addwfc	(btemp+18)^0,w,c
 12221  015CC8  6E44               	movwf	(btemp+26)^0,c
 12222  015CCA  0E00               	movlw	0
 12223  015CCC  203D               	addwfc	(btemp+19)^0,w,c
 12224  015CCE  6E45               	movwf	(btemp+27)^0,c
 12225  015CD0  0E00               	movlw	0
 12226  015CD2  203E               	addwfc	(btemp+20)^0,w,c
 12227  015CD4  6E46               	movwf	(btemp+28)^0,c
 12228  015CD6  0E00               	movlw	0
 12229  015CD8  203F               	addwfc	(btemp+21)^0,w,c
 12230  015CDA  6E47               	movwf	(btemp+29)^0,c
 12231  015CDC  0E00               	movlw	0
 12232  015CDE  2040               	addwfc	(btemp+22)^0,w,c
 12233  015CE0  6E48               	movwf	(btemp+30)^0,c
 12234  015CE2  0E00               	movlw	0
 12235  015CE4  2041               	addwfc	(btemp+23)^0,w,c
 12236  015CE6  6E49               	movwf	(btemp+31)^0,c
 12237                           
 12238                           ;stkvar	_y @ sp[(-24)+0]
 12239  015CE8  0EE8               	movlw	-24
 12240  015CEA  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12241  015CF0  0EE9               	movlw	-23
 12242  015CF2  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12243  015CF8  0EEA               	movlw	-22
 12244  015CFA  0060  F113  FFE3   	movff	btemp+26,plusw1
 12245  015D00  0EEB               	movlw	-21
 12246  015D02  0060  F117  FFE3   	movff	btemp+27,plusw1
 12247  015D08  0EEC               	movlw	-20
 12248  015D0A  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12249  015D10  0EED               	movlw	-19
 12250  015D12  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12251  015D18  0EEE               	movlw	-18
 12252  015D1A  0060  F123  FFE3   	movff	btemp+30,plusw1
 12253  015D20  0EEF               	movlw	-17
 12254  015D22  0060  F127  FFE3   	movff	btemp+31,plusw1
 12255  015D28  D010               	goto	l16590
 12256  015D2A                     l16588:
 12257                           
 12258                           ;stkvar	_y @ sp[(-24)+0]
 12259  015D2A  50E1               	movf	fsr1l,w,c
 12260  015D2C  0FE8               	addlw	-24
 12261  015D2E  6ED9               	movwf	fsr2l,c
 12262  015D30  50E2               	movf	fsr1h,w,c
 12263  015D32  6EDA               	movwf	fsr2h,c
 12264  015D34  0EFF               	movlw	255
 12265  015D36  22DA               	addwfc	fsr2h,f,c
 12266  015D38  06DE               	decf	postinc2,f,c
 12267  015D3A  0E00               	movlw	0
 12268  015D3C  5ADE               	subwfb	postinc2,f,c
 12269  015D3E  5ADE               	subwfb	postinc2,f,c
 12270  015D40  5ADE               	subwfb	postinc2,f,c
 12271  015D42  5ADE               	subwfb	postinc2,f,c
 12272  015D44  5ADE               	subwfb	postinc2,f,c
 12273  015D46  5ADE               	subwfb	postinc2,f,c
 12274  015D48  5ADE               	subwfb	postinc2,f,c
 12275  015D4A                     l16590:
 12276  015D4A  0E00               	movlw	0
 12277  015D4C  6EE6               	movwf	postinc1,c
 12278  015D4E  0E00               	movlw	0
 12279  015D50  6EE6               	movwf	postinc1,c
 12280                           
 12281                           ;stkvar	_y @ sp[(-26)+0]
 12282  015D52  50E1               	movf	fsr1l,w,c
 12283  015D54  0FE6               	addlw	-26
 12284  015D56  6ED9               	movwf	fsr2l,c
 12285  015D58  50E2               	movf	fsr1h,w,c
 12286  015D5A  6EDA               	movwf	fsr2h,c
 12287  015D5C  0EFF               	movlw	255
 12288  015D5E  22DA               	addwfc	fsr2h,f,c
 12289  015D60  006F FF7B FFE6     	movff	postinc2,postinc1
 12290  015D66  006F FF7B FFE6     	movff	postinc2,postinc1
 12291  015D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 12292  015D72  006F FF7B FFE6     	movff	postinc2,postinc1
 12293  015D78  006F FF7B FFE6     	movff	postinc2,postinc1
 12294  015D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 12295  015D84  006F FF7B FFE6     	movff	postinc2,postinc1
 12296  015D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 12297  015D90  EC43  F0A9         	call	___year_to_secs	;wreg free
 12298  015D94  52E5               	movf	postdec1,f,c
 12299  015D96  006F FF9C  F041    	movff	indf1,btemp+23
 12300  015D9C  52E5               	movf	postdec1,f,c
 12301  015D9E  006F FF9C  F040    	movff	indf1,btemp+22
 12302  015DA4  52E5               	movf	postdec1,f,c
 12303  015DA6  006F FF9C  F03F    	movff	indf1,btemp+21
 12304  015DAC  52E5               	movf	postdec1,f,c
 12305  015DAE  006F FF9C  F03E    	movff	indf1,btemp+20
 12306  015DB4  52E5               	movf	postdec1,f,c
 12307  015DB6  006F FF9C  F03D    	movff	indf1,btemp+19
 12308  015DBC  52E5               	movf	postdec1,f,c
 12309  015DBE  006F FF9C  F03C    	movff	indf1,btemp+18
 12310  015DC4  52E5               	movf	postdec1,f,c
 12311  015DC6  006F FF9C  F03B    	movff	indf1,btemp+17
 12312  015DCC  52E5               	movf	postdec1,f,c
 12313  015DCE  006F FF9C  F03A    	movff	indf1,btemp+16
 12314  015DD4  52E5               	movf	postdec1,f,c
 12315  015DD6  52E5               	movf	postdec1,f,c
 12316                           
 12317                           ;stkvar	_t @ sp[(-24)+-8]
 12318  015DD8  0EE0               	movlw	-32
 12319  015DDA  006F FF8C  F02A    	movff	plusw1,btemp
 12320  015DE0  503A               	movf	(btemp+16)^0,w,c
 12321  015DE2  5C2A               	subwf	btemp^0,w,c
 12322  015DE4  0EE1               	movlw	-31
 12323  015DE6  006F FF8C  F02A    	movff	plusw1,btemp
 12324  015DEC  503B               	movf	(btemp+17)^0,w,c
 12325  015DEE  582A               	subwfb	btemp^0,w,c
 12326  015DF0  0EE2               	movlw	-30
 12327  015DF2  006F FF8C  F02A    	movff	plusw1,btemp
 12328  015DF8  503C               	movf	(btemp+18)^0,w,c
 12329  015DFA  582A               	subwfb	btemp^0,w,c
 12330  015DFC  0EE3               	movlw	-29
 12331  015DFE  006F FF8C  F02A    	movff	plusw1,btemp
 12332  015E04  503D               	movf	(btemp+19)^0,w,c
 12333  015E06  582A               	subwfb	btemp^0,w,c
 12334  015E08  0EE4               	movlw	-28
 12335  015E0A  006F FF8C  F02A    	movff	plusw1,btemp
 12336  015E10  503E               	movf	(btemp+20)^0,w,c
 12337  015E12  582A               	subwfb	btemp^0,w,c
 12338  015E14  0EE5               	movlw	-27
 12339  015E16  006F FF8C  F02A    	movff	plusw1,btemp
 12340  015E1C  503F               	movf	(btemp+21)^0,w,c
 12341  015E1E  582A               	subwfb	btemp^0,w,c
 12342  015E20  0EE6               	movlw	-26
 12343  015E22  006F FF8C  F02A    	movff	plusw1,btemp
 12344  015E28  5040               	movf	(btemp+22)^0,w,c
 12345  015E2A  582A               	subwfb	btemp^0,w,c
 12346  015E2C  0EE7               	movlw	-25
 12347  015E2E  50E3               	movf	plusw1,w,c
 12348  015E30  0A80               	xorlw	128
 12349  015E32  6E2A               	movwf	btemp^0,c
 12350  015E34  5041               	movf	(btemp+23)^0,w,c
 12351  015E36  0A80               	xorlw	128
 12352  015E38  582A               	subwfb	btemp^0,w,c
 12353  015E3A  B0D8               	btfsc	status,0,c
 12354  015E3C  D011               	goto	l16594
 12355  015E3E  D775               	goto	l16588
 12356  015E40                     l16592:
 12357                           
 12358                           ;stkvar	_y @ sp[(-24)+0]
 12359  015E40  50E1               	movf	fsr1l,w,c
 12360  015E42  0FE8               	addlw	-24
 12361  015E44  6ED9               	movwf	fsr2l,c
 12362  015E46  50E2               	movf	fsr1h,w,c
 12363  015E48  6EDA               	movwf	fsr2h,c
 12364  015E4A  0EFF               	movlw	255
 12365  015E4C  22DA               	addwfc	fsr2h,f,c
 12366  015E4E  2ADE               	incf	postinc2,f,c
 12367  015E50  0E00               	movlw	0
 12368  015E52  22DE               	addwfc	postinc2,f,c
 12369  015E54  22DE               	addwfc	postinc2,f,c
 12370  015E56  22DE               	addwfc	postinc2,f,c
 12371  015E58  22DE               	addwfc	postinc2,f,c
 12372  015E5A  22DE               	addwfc	postinc2,f,c
 12373  015E5C  22DE               	addwfc	postinc2,f,c
 12374  015E5E  22DE               	addwfc	postinc2,f,c
 12375  015E60                     l16594:
 12376                           
 12377                           ;stkvar	_t @ sp[(-24)+-8]
 12378  015E60  0E00               	movlw	0
 12379  015E62  6EE6               	movwf	postinc1,c
 12380  015E64  0E00               	movlw	0
 12381  015E66  6EE6               	movwf	postinc1,c
 12382                           
 12383                           ;stkvar	_y @ sp[(-26)+0]
 12384  015E68  0EE6               	movlw	-26
 12385  015E6A  50E3               	movf	plusw1,w,c
 12386  015E6C  0F01               	addlw	1
 12387  015E6E  6E3A               	movwf	(btemp+16)^0,c
 12388  015E70  0EE7               	movlw	-25
 12389  015E72  006F FF8C  F03B    	movff	plusw1,btemp+17
 12390  015E78  0E00               	movlw	0
 12391  015E7A  223B               	addwfc	(btemp+17)^0,f,c
 12392  015E7C  0EE8               	movlw	-24
 12393  015E7E  006F FF8C  F03C    	movff	plusw1,btemp+18
 12394  015E84  0E00               	movlw	0
 12395  015E86  223C               	addwfc	(btemp+18)^0,f,c
 12396  015E88  0EE9               	movlw	-23
 12397  015E8A  006F FF8C  F03D    	movff	plusw1,btemp+19
 12398  015E90  0E00               	movlw	0
 12399  015E92  223D               	addwfc	(btemp+19)^0,f,c
 12400  015E94  0EEA               	movlw	-22
 12401  015E96  006F FF8C  F03E    	movff	plusw1,btemp+20
 12402  015E9C  0E00               	movlw	0
 12403  015E9E  223E               	addwfc	(btemp+20)^0,f,c
 12404  015EA0  0EEB               	movlw	-21
 12405  015EA2  006F FF8C  F03F    	movff	plusw1,btemp+21
 12406  015EA8  0E00               	movlw	0
 12407  015EAA  223F               	addwfc	(btemp+21)^0,f,c
 12408  015EAC  0EEC               	movlw	-20
 12409  015EAE  006F FF8C  F040    	movff	plusw1,btemp+22
 12410  015EB4  0E00               	movlw	0
 12411  015EB6  2240               	addwfc	(btemp+22)^0,f,c
 12412  015EB8  0EED               	movlw	-19
 12413  015EBA  006F FF8C  F041    	movff	plusw1,btemp+23
 12414  015EC0  0E00               	movlw	0
 12415  015EC2  2241               	addwfc	(btemp+23)^0,f,c
 12416  015EC4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12417  015ECA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12418  015ED0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12419  015ED6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12420  015EDC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12421  015EE2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12422  015EE8  0060  F103  FFE6   	movff	btemp+22,postinc1
 12423  015EEE  0060  F107  FFE6   	movff	btemp+23,postinc1
 12424  015EF4  EC43  F0A9         	call	___year_to_secs	;wreg free
 12425  015EF8  52E5               	movf	postdec1,f,c
 12426  015EFA  006F FF9C  F041    	movff	indf1,btemp+23
 12427  015F00  52E5               	movf	postdec1,f,c
 12428  015F02  006F FF9C  F040    	movff	indf1,btemp+22
 12429  015F08  52E5               	movf	postdec1,f,c
 12430  015F0A  006F FF9C  F03F    	movff	indf1,btemp+21
 12431  015F10  52E5               	movf	postdec1,f,c
 12432  015F12  006F FF9C  F03E    	movff	indf1,btemp+20
 12433  015F18  52E5               	movf	postdec1,f,c
 12434  015F1A  006F FF9C  F03D    	movff	indf1,btemp+19
 12435  015F20  52E5               	movf	postdec1,f,c
 12436  015F22  006F FF9C  F03C    	movff	indf1,btemp+18
 12437  015F28  52E5               	movf	postdec1,f,c
 12438  015F2A  006F FF9C  F03B    	movff	indf1,btemp+17
 12439  015F30  52E5               	movf	postdec1,f,c
 12440  015F32  006F FF9C  F03A    	movff	indf1,btemp+16
 12441  015F38  52E5               	movf	postdec1,f,c
 12442  015F3A  52E5               	movf	postdec1,f,c
 12443  015F3C  0EE0               	movlw	-32
 12444  015F3E  50E3               	movf	plusw1,w,c
 12445  015F40  5C3A               	subwf	(btemp+16)^0,w,c
 12446  015F42  0EE1               	movlw	-31
 12447  015F44  50E3               	movf	plusw1,w,c
 12448  015F46  583B               	subwfb	(btemp+17)^0,w,c
 12449  015F48  0EE2               	movlw	-30
 12450  015F4A  50E3               	movf	plusw1,w,c
 12451  015F4C  583C               	subwfb	(btemp+18)^0,w,c
 12452  015F4E  0EE3               	movlw	-29
 12453  015F50  50E3               	movf	plusw1,w,c
 12454  015F52  583D               	subwfb	(btemp+19)^0,w,c
 12455  015F54  0EE4               	movlw	-28
 12456  015F56  50E3               	movf	plusw1,w,c
 12457  015F58  583E               	subwfb	(btemp+20)^0,w,c
 12458  015F5A  0EE5               	movlw	-27
 12459  015F5C  50E3               	movf	plusw1,w,c
 12460  015F5E  583F               	subwfb	(btemp+21)^0,w,c
 12461  015F60  0EE6               	movlw	-26
 12462  015F62  50E3               	movf	plusw1,w,c
 12463  015F64  5840               	subwfb	(btemp+22)^0,w,c
 12464  015F66  5041               	movf	(btemp+23)^0,w,c
 12465  015F68  0A80               	xorlw	128
 12466  015F6A  6E2A               	movwf	btemp^0,c
 12467  015F6C  0EE7               	movlw	-25
 12468  015F6E  50E3               	movf	plusw1,w,c
 12469  015F70  0A80               	xorlw	128
 12470  015F72  582A               	subwfb	btemp^0,w,c
 12471  015F74  A0D8               	btfss	status,0,c
 12472  015F76  D764               	goto	l16592
 12473                           
 12474                           ;stkvar	_y @ sp[(-24)+0]
 12475  015F78  0EE8               	movlw	-24
 12476  015F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 12477  015F80  006F FF8F FFE6     	movff	plusw1,postinc1
 12478  015F86  0EE5               	movlw	low _r0
 12479  015F88  6EE6               	movwf	postinc1,c
 12480  015F8A  0E01               	movlw	high _r0
 12481  015F8C  6EE6               	movwf	postinc1,c
 12482  015F8E  EC40  F0BA         	call	_rule_to_secs	;wreg free
 12483  015F92  52E5               	movf	postdec1,f,c
 12484  015F94  006F FF9C  F041    	movff	indf1,btemp+23
 12485  015F9A  52E5               	movf	postdec1,f,c
 12486  015F9C  006F FF9C  F040    	movff	indf1,btemp+22
 12487  015FA2  52E5               	movf	postdec1,f,c
 12488  015FA4  006F FF9C  F03F    	movff	indf1,btemp+21
 12489  015FAA  52E5               	movf	postdec1,f,c
 12490  015FAC  006F FF9C  F03E    	movff	indf1,btemp+20
 12491  015FB2  52E5               	movf	postdec1,f,c
 12492  015FB4  006F FF9C  F03D    	movff	indf1,btemp+19
 12493  015FBA  52E5               	movf	postdec1,f,c
 12494  015FBC  006F FF9C  F03C    	movff	indf1,btemp+18
 12495  015FC2  52E5               	movf	postdec1,f,c
 12496  015FC4  006F FF9C  F03B    	movff	indf1,btemp+17
 12497  015FCA  52E5               	movf	postdec1,f,c
 12498  015FCC  006F FF9C  F03A    	movff	indf1,btemp+16
 12499                           
 12500                           ;stkvar	_t0 @ sp[(-24)+16]
 12501  015FD2  0EF8               	movlw	-8
 12502  015FD4  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12503  015FDA  0EF9               	movlw	-7
 12504  015FDC  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12505  015FE2  0EFA               	movlw	-6
 12506  015FE4  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12507  015FEA  0EFB               	movlw	-5
 12508  015FEC  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12509  015FF2  0EFC               	movlw	-4
 12510  015FF4  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12511  015FFA  0EFD               	movlw	-3
 12512  015FFC  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12513  016002  0EFE               	movlw	-2
 12514  016004  0060  F103  FFE3   	movff	btemp+22,plusw1
 12515  01600A  0EFF               	movlw	-1
 12516  01600C  0060  F107  FFE3   	movff	btemp+23,plusw1
 12517                           
 12518                           ;stkvar	_y @ sp[(-24)+0]
 12519  016012  0EE8               	movlw	-24
 12520  016014  006F FF8F FFE6     	movff	plusw1,postinc1
 12521  01601A  006F FF8F FFE6     	movff	plusw1,postinc1
 12522  016020  0EDB               	movlw	low _r1
 12523  016022  6EE6               	movwf	postinc1,c
 12524  016024  0E01               	movlw	high _r1
 12525  016026  6EE6               	movwf	postinc1,c
 12526  016028  EC40  F0BA         	call	_rule_to_secs	;wreg free
 12527  01602C  52E5               	movf	postdec1,f,c
 12528  01602E  006F FF9C  F041    	movff	indf1,btemp+23
 12529  016034  52E5               	movf	postdec1,f,c
 12530  016036  006F FF9C  F040    	movff	indf1,btemp+22
 12531  01603C  52E5               	movf	postdec1,f,c
 12532  01603E  006F FF9C  F03F    	movff	indf1,btemp+21
 12533  016044  52E5               	movf	postdec1,f,c
 12534  016046  006F FF9C  F03E    	movff	indf1,btemp+20
 12535  01604C  52E5               	movf	postdec1,f,c
 12536  01604E  006F FF9C  F03D    	movff	indf1,btemp+19
 12537  016054  52E5               	movf	postdec1,f,c
 12538  016056  006F FF9C  F03C    	movff	indf1,btemp+18
 12539  01605C  52E5               	movf	postdec1,f,c
 12540  01605E  006F FF9C  F03B    	movff	indf1,btemp+17
 12541  016064  52E5               	movf	postdec1,f,c
 12542  016066  006F FF9C  F03A    	movff	indf1,btemp+16
 12543                           
 12544                           ;stkvar	_t1 @ sp[(-24)+8]
 12545  01606C  0EF0               	movlw	-16
 12546  01606E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12547  016074  0EF1               	movlw	-15
 12548  016076  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12549  01607C  0EF2               	movlw	-14
 12550  01607E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12551  016084  0EF3               	movlw	-13
 12552  016086  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12553  01608C  0EF4               	movlw	-12
 12554  01608E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12555  016094  0EF5               	movlw	-11
 12556  016096  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12557  01609C  0EF6               	movlw	-10
 12558  01609E  0060  F103  FFE3   	movff	btemp+22,plusw1
 12559  0160A4  0EF7               	movlw	-9
 12560  0160A6  0060  F107  FFE3   	movff	btemp+23,plusw1
 12561                           
 12562                           ;stkvar	_local @ sp[(-24)+-10]
 12563  0160AC  0EDE               	movlw	-34
 12564  0160AE  006F FF8C  F02A    	movff	plusw1,btemp
 12565  0160B4  0EDF               	movlw	-33
 12566  0160B6  50E3               	movf	plusw1,w,c
 12567  0160B8  102A               	iorwf	btemp^0,w,c
 12568  0160BA  A4D8               	btfss	status,2,c
 12569  0160BC  D044               	goto	l16604
 12570  0160BE  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12571  0160C4  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12572  0160CA  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12573  0160D0  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12574  0160D6  6A3E               	clrf	(btemp+20)^0,c
 12575  0160D8  BE3D               	btfsc	(btemp+19)^0,7,c
 12576  0160DA  683E               	setf	(btemp+20)^0,c
 12577  0160DC  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12578  0160E2  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12579  0160E8  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12580                           
 12581                           ;stkvar	_t0 @ sp[(-24)+16]
 12582  0160EE  50E1               	movf	fsr1l,w,c
 12583  0160F0  0FF8               	addlw	-8
 12584  0160F2  6ED9               	movwf	fsr2l,c
 12585  0160F4  50E2               	movf	fsr1h,w,c
 12586  0160F6  6EDA               	movwf	fsr2h,c
 12587  0160F8  0EFF               	movlw	255
 12588  0160FA  22DA               	addwfc	fsr2h,f,c
 12589  0160FC  503A               	movf	(btemp+16)^0,w,c
 12590  0160FE  26DE               	addwf	postinc2,f,c
 12591  016100  503B               	movf	(btemp+17)^0,w,c
 12592  016102  22DE               	addwfc	postinc2,f,c
 12593  016104  503C               	movf	(btemp+18)^0,w,c
 12594  016106  22DE               	addwfc	postinc2,f,c
 12595  016108  503D               	movf	(btemp+19)^0,w,c
 12596  01610A  22DE               	addwfc	postinc2,f,c
 12597  01610C  503E               	movf	(btemp+20)^0,w,c
 12598  01610E  22DE               	addwfc	postinc2,f,c
 12599  016110  503F               	movf	(btemp+21)^0,w,c
 12600  016112  22DE               	addwfc	postinc2,f,c
 12601  016114  5040               	movf	(btemp+22)^0,w,c
 12602  016116  22DE               	addwfc	postinc2,f,c
 12603  016118  5041               	movf	(btemp+23)^0,w,c
 12604  01611A  22DE               	addwfc	postinc2,f,c
 12605                           
 12606                           ;stkvar	_t1 @ sp[(-24)+8]
 12607  01611C  50E1               	movf	fsr1l,w,c
 12608  01611E  0FF0               	addlw	-16
 12609  016120  6ED9               	movwf	fsr2l,c
 12610  016122  50E2               	movf	fsr1h,w,c
 12611  016124  6EDA               	movwf	fsr2h,c
 12612  016126  0EFF               	movlw	255
 12613  016128  22DA               	addwfc	fsr2h,f,c
 12614  01612A  0100               	movlb	0	; () banked
 12615  01612C  51B6               	movf	_dst_off& (0+255),w,b
 12616  01612E  26DE               	addwf	postinc2,f,c
 12617  016130  51B7               	movf	(_dst_off+1)& (0+255),w,b
 12618  016132  22DE               	addwfc	postinc2,f,c
 12619  016134  0E00               	movlw	0
 12620  016136  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 12621  016138  0EFF               	movlw	255
 12622  01613A  22DE               	addwfc	postinc2,f,c
 12623  01613C  22DE               	addwfc	postinc2,f,c
 12624  01613E  22DE               	addwfc	postinc2,f,c
 12625  016140  22DE               	addwfc	postinc2,f,c
 12626  016142  22DE               	addwfc	postinc2,f,c
 12627  016144  22DE               	addwfc	postinc2,f,c
 12628  016146                     l16604:
 12629                           
 12630                           ;stkvar	_t1 @ sp[(-24)+8]
 12631                           ;stkvar	_t0 @ sp[(-24)+16]
 12632  016146  50E1               	movf	fsr1l,w,c
 12633  016148  0FF8               	addlw	-8
 12634  01614A  6ED9               	movwf	fsr2l,c
 12635  01614C  50E2               	movf	fsr1h,w,c
 12636  01614E  6EDA               	movwf	fsr2h,c
 12637  016150  0EFF               	movlw	255
 12638  016152  22DA               	addwfc	fsr2h,f,c
 12639  016154  0EF0               	movlw	-16
 12640  016156  50E3               	movf	plusw1,w,c
 12641  016158  5CDE               	subwf	postinc2,w,c
 12642  01615A  0EF1               	movlw	-15
 12643  01615C  50E3               	movf	plusw1,w,c
 12644  01615E  58DE               	subwfb	postinc2,w,c
 12645  016160  0EF2               	movlw	-14
 12646  016162  50E3               	movf	plusw1,w,c
 12647  016164  58DE               	subwfb	postinc2,w,c
 12648  016166  0EF3               	movlw	-13
 12649  016168  50E3               	movf	plusw1,w,c
 12650  01616A  58DE               	subwfb	postinc2,w,c
 12651  01616C  0EF4               	movlw	-12
 12652  01616E  50E3               	movf	plusw1,w,c
 12653  016170  58DE               	subwfb	postinc2,w,c
 12654  016172  0EF5               	movlw	-11
 12655  016174  50E3               	movf	plusw1,w,c
 12656  016176  58DE               	subwfb	postinc2,w,c
 12657  016178  0EF6               	movlw	-10
 12658  01617A  50E3               	movf	plusw1,w,c
 12659  01617C  58DE               	subwfb	postinc2,w,c
 12660  01617E  50DE               	movf	postinc2,w,c
 12661  016180  0A80               	xorlw	128
 12662  016182  6E2A               	movwf	btemp^0,c
 12663  016184  0EF7               	movlw	-9
 12664  016186  50E3               	movf	plusw1,w,c
 12665  016188  0A80               	xorlw	128
 12666  01618A  582A               	subwfb	btemp^0,w,c
 12667  01618C  B0D8               	btfsc	status,0,c
 12668  01618E  D04B               	goto	l16614
 12669                           
 12670                           ;stkvar	_t0 @ sp[(-24)+16]
 12671                           ;stkvar	_t @ sp[(-24)+-8]
 12672  016190  50E1               	movf	fsr1l,w,c
 12673  016192  0FE0               	addlw	-32
 12674  016194  6ED9               	movwf	fsr2l,c
 12675  016196  50E2               	movf	fsr1h,w,c
 12676  016198  6EDA               	movwf	fsr2h,c
 12677  01619A  0EFF               	movlw	255
 12678  01619C  22DA               	addwfc	fsr2h,f,c
 12679  01619E  0EF8               	movlw	-8
 12680  0161A0  50E3               	movf	plusw1,w,c
 12681  0161A2  5CDE               	subwf	postinc2,w,c
 12682  0161A4  0EF9               	movlw	-7
 12683  0161A6  50E3               	movf	plusw1,w,c
 12684  0161A8  58DE               	subwfb	postinc2,w,c
 12685  0161AA  0EFA               	movlw	-6
 12686  0161AC  50E3               	movf	plusw1,w,c
 12687  0161AE  58DE               	subwfb	postinc2,w,c
 12688  0161B0  0EFB               	movlw	-5
 12689  0161B2  50E3               	movf	plusw1,w,c
 12690  0161B4  58DE               	subwfb	postinc2,w,c
 12691  0161B6  0EFC               	movlw	-4
 12692  0161B8  50E3               	movf	plusw1,w,c
 12693  0161BA  58DE               	subwfb	postinc2,w,c
 12694  0161BC  0EFD               	movlw	-3
 12695  0161BE  50E3               	movf	plusw1,w,c
 12696  0161C0  58DE               	subwfb	postinc2,w,c
 12697  0161C2  0EFE               	movlw	-2
 12698  0161C4  50E3               	movf	plusw1,w,c
 12699  0161C6  58DE               	subwfb	postinc2,w,c
 12700  0161C8  50DE               	movf	postinc2,w,c
 12701  0161CA  0A80               	xorlw	128
 12702  0161CC  6E2A               	movwf	btemp^0,c
 12703  0161CE  0EFF               	movlw	-1
 12704  0161D0  50E3               	movf	plusw1,w,c
 12705  0161D2  0A80               	xorlw	128
 12706  0161D4  582A               	subwfb	btemp^0,w,c
 12707  0161D6  A0D8               	btfss	status,0,c
 12708  0161D8  D070               	goto	u16190
 12709                           
 12710                           ;stkvar	_t1 @ sp[(-24)+8]
 12711                           ;stkvar	_t @ sp[(-24)+-8]
 12712  0161DA  50E1               	movf	fsr1l,w,c
 12713  0161DC  0FE0               	addlw	-32
 12714  0161DE  6ED9               	movwf	fsr2l,c
 12715  0161E0  50E2               	movf	fsr1h,w,c
 12716  0161E2  6EDA               	movwf	fsr2h,c
 12717  0161E4  0EFF               	movlw	255
 12718  0161E6  22DA               	addwfc	fsr2h,f,c
 12719  0161E8  0EF0               	movlw	-16
 12720  0161EA  50E3               	movf	plusw1,w,c
 12721  0161EC  5CDE               	subwf	postinc2,w,c
 12722  0161EE  0EF1               	movlw	-15
 12723  0161F0  50E3               	movf	plusw1,w,c
 12724  0161F2  58DE               	subwfb	postinc2,w,c
 12725  0161F4  0EF2               	movlw	-14
 12726  0161F6  50E3               	movf	plusw1,w,c
 12727  0161F8  58DE               	subwfb	postinc2,w,c
 12728  0161FA  0EF3               	movlw	-13
 12729  0161FC  50E3               	movf	plusw1,w,c
 12730  0161FE  58DE               	subwfb	postinc2,w,c
 12731  016200  0EF4               	movlw	-12
 12732  016202  50E3               	movf	plusw1,w,c
 12733  016204  58DE               	subwfb	postinc2,w,c
 12734  016206  0EF5               	movlw	-11
 12735  016208  50E3               	movf	plusw1,w,c
 12736  01620A  58DE               	subwfb	postinc2,w,c
 12737  01620C  0EF6               	movlw	-10
 12738  01620E  50E3               	movf	plusw1,w,c
 12739  016210  58DE               	subwfb	postinc2,w,c
 12740  016212  50DE               	movf	postinc2,w,c
 12741  016214  0A80               	xorlw	128
 12742  016216  6E2A               	movwf	btemp^0,c
 12743  016218  0EF7               	movlw	-9
 12744  01621A  50E3               	movf	plusw1,w,c
 12745  01621C  0A80               	xorlw	128
 12746  01621E  582A               	subwfb	btemp^0,w,c
 12747  016220  A0D8               	btfss	status,0,c
 12748  016222  D0C1               	goto	l16632
 12749  016224  D04A               	goto	u16190
 12750  016226                     l16614:
 12751                           
 12752                           ;stkvar	_t1 @ sp[(-24)+8]
 12753                           ;stkvar	_t @ sp[(-24)+-8]
 12754  016226  50E1               	movf	fsr1l,w,c
 12755  016228  0FE0               	addlw	-32
 12756  01622A  6ED9               	movwf	fsr2l,c
 12757  01622C  50E2               	movf	fsr1h,w,c
 12758  01622E  6EDA               	movwf	fsr2h,c
 12759  016230  0EFF               	movlw	255
 12760  016232  22DA               	addwfc	fsr2h,f,c
 12761  016234  0EF0               	movlw	-16
 12762  016236  50E3               	movf	plusw1,w,c
 12763  016238  5CDE               	subwf	postinc2,w,c
 12764  01623A  0EF1               	movlw	-15
 12765  01623C  50E3               	movf	plusw1,w,c
 12766  01623E  58DE               	subwfb	postinc2,w,c
 12767  016240  0EF2               	movlw	-14
 12768  016242  50E3               	movf	plusw1,w,c
 12769  016244  58DE               	subwfb	postinc2,w,c
 12770  016246  0EF3               	movlw	-13
 12771  016248  50E3               	movf	plusw1,w,c
 12772  01624A  58DE               	subwfb	postinc2,w,c
 12773  01624C  0EF4               	movlw	-12
 12774  01624E  50E3               	movf	plusw1,w,c
 12775  016250  58DE               	subwfb	postinc2,w,c
 12776  016252  0EF5               	movlw	-11
 12777  016254  50E3               	movf	plusw1,w,c
 12778  016256  58DE               	subwfb	postinc2,w,c
 12779  016258  0EF6               	movlw	-10
 12780  01625A  50E3               	movf	plusw1,w,c
 12781  01625C  58DE               	subwfb	postinc2,w,c
 12782  01625E  50DE               	movf	postinc2,w,c
 12783  016260  0A80               	xorlw	128
 12784  016262  6E2A               	movwf	btemp^0,c
 12785  016264  0EF7               	movlw	-9
 12786  016266  50E3               	movf	plusw1,w,c
 12787  016268  0A80               	xorlw	128
 12788  01626A  582A               	subwfb	btemp^0,w,c
 12789  01626C  A0D8               	btfss	status,0,c
 12790  01626E  D09B               	goto	l16632
 12791                           
 12792                           ;stkvar	_t0 @ sp[(-24)+16]
 12793                           ;stkvar	_t @ sp[(-24)+-8]
 12794  016270  50E1               	movf	fsr1l,w,c
 12795  016272  0FE0               	addlw	-32
 12796  016274  6ED9               	movwf	fsr2l,c
 12797  016276  50E2               	movf	fsr1h,w,c
 12798  016278  6EDA               	movwf	fsr2h,c
 12799  01627A  0EFF               	movlw	255
 12800  01627C  22DA               	addwfc	fsr2h,f,c
 12801  01627E  0EF8               	movlw	-8
 12802  016280  50E3               	movf	plusw1,w,c
 12803  016282  5CDE               	subwf	postinc2,w,c
 12804  016284  0EF9               	movlw	-7
 12805  016286  50E3               	movf	plusw1,w,c
 12806  016288  58DE               	subwfb	postinc2,w,c
 12807  01628A  0EFA               	movlw	-6
 12808  01628C  50E3               	movf	plusw1,w,c
 12809  01628E  58DE               	subwfb	postinc2,w,c
 12810  016290  0EFB               	movlw	-5
 12811  016292  50E3               	movf	plusw1,w,c
 12812  016294  58DE               	subwfb	postinc2,w,c
 12813  016296  0EFC               	movlw	-4
 12814  016298  50E3               	movf	plusw1,w,c
 12815  01629A  58DE               	subwfb	postinc2,w,c
 12816  01629C  0EFD               	movlw	-3
 12817  01629E  50E3               	movf	plusw1,w,c
 12818  0162A0  58DE               	subwfb	postinc2,w,c
 12819  0162A2  0EFE               	movlw	-2
 12820  0162A4  50E3               	movf	plusw1,w,c
 12821  0162A6  58DE               	subwfb	postinc2,w,c
 12822  0162A8  50DE               	movf	postinc2,w,c
 12823  0162AA  0A80               	xorlw	128
 12824  0162AC  6E2A               	movwf	btemp^0,c
 12825  0162AE  0EFF               	movlw	-1
 12826  0162B0  50E3               	movf	plusw1,w,c
 12827  0162B2  0A80               	xorlw	128
 12828  0162B4  582A               	subwfb	btemp^0,w,c
 12829  0162B6  B0D8               	btfsc	status,0,c
 12830  0162B8  D076               	goto	l16632
 12831  0162BA                     u16190:
 12832                           
 12833                           ;stkvar	_isdst @ sp[(-24)+-12]
 12834  0162BA  0EDC               	movlw	-36
 12835  0162BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12836  0162C2  0EDD               	movlw	-35
 12837  0162C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12838  0162CA  0E00               	movlw	0
 12839  0162CC  6EDE               	movwf	postinc2,c
 12840  0162CE  0E00               	movlw	0
 12841  0162D0  6EDD               	movwf	postdec2,c
 12842  0162D2  0060  F1C0  F032   	movff	___timezone,btemp+8
 12843  0162D8  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 12844  0162DE  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 12845  0162E4  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 12846  0162EA  1E32               	comf	(btemp+8)^0,f,c
 12847  0162EC  1E33               	comf	(btemp+9)^0,f,c
 12848  0162EE  1E34               	comf	(btemp+10)^0,f,c
 12849  0162F0  1E35               	comf	(btemp+11)^0,f,c
 12850  0162F2  2A32               	incf	(btemp+8)^0,f,c
 12851  0162F4  0E00               	movlw	0
 12852  0162F6  2233               	addwfc	(btemp+9)^0,f,c
 12853  0162F8  2234               	addwfc	(btemp+10)^0,f,c
 12854  0162FA  2235               	addwfc	(btemp+11)^0,f,c
 12855                           
 12856                           ;stkvar	_offset @ sp[(-24)+-14]
 12857  0162FC  0EDA               	movlw	-38
 12858  0162FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12859  016304  0EDB               	movlw	-37
 12860  016306  006F FF8F FFDA     	movff	plusw1,fsr2h
 12861  01630C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 12862  016312  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 12863  016318  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 12864  01631E  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 12865                           
 12866                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12867  016324  0ED8               	movlw	-40
 12868  016326  006F FF8C  F02A    	movff	plusw1,btemp
 12869  01632C  0ED9               	movlw	-39
 12870  01632E  50E3               	movf	plusw1,w,c
 12871  016330  102A               	iorwf	btemp^0,w,c
 12872  016332  B4D8               	btfsc	status,2,c
 12873  016334  D029               	goto	l16628
 12874  016336  0060  F2D8  F034   	movff	_dst_off,btemp+10
 12875  01633C  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 12876  016342  1E34               	comf	(btemp+10)^0,f,c
 12877  016344  1E35               	comf	(btemp+11)^0,f,c
 12878  016346  4A34               	infsnz	(btemp+10)^0,f,c
 12879  016348  2A35               	incf	(btemp+11)^0,f,c
 12880  01634A  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12881  016350  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12882  016356  0E00               	movlw	0
 12883  016358  BE2F               	btfsc	(btemp+5)^0,7,c
 12884  01635A  0EFF               	movlw	255
 12885  01635C  6E30               	movwf	(btemp+6)^0,c
 12886  01635E  6E31               	movwf	(btemp+7)^0,c
 12887                           
 12888                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12889  016360  0ED8               	movlw	-40
 12890  016362  006F FF8F FFD9     	movff	plusw1,fsr2l
 12891  016368  0ED9               	movlw	-39
 12892  01636A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12893  016370  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 12894  016376  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 12895  01637C  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 12896  016382  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 12897  016388                     l16628:
 12898                           
 12899                           ;stkvar	_zonename @ sp[(-24)+-18]
 12900  016388  0ED6               	movlw	-42
 12901  01638A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12902  016390  0ED7               	movlw	-41
 12903  016392  006F FF8F FFDA     	movff	plusw1,fsr2h
 12904  016398  0060  F1B3  FFDE   	movff	___tzname,postinc2
 12905  01639E  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 12906  0163A4  D075               	goto	l4027
 12907  0163A6                     l16632:
 12908                           
 12909                           ;stkvar	_isdst @ sp[(-24)+-12]
 12910  0163A6  0EDC               	movlw	-36
 12911  0163A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12912  0163AE  0EDD               	movlw	-35
 12913  0163B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12914  0163B6  0E01               	movlw	1
 12915  0163B8  6EDE               	movwf	postinc2,c
 12916  0163BA  0E00               	movlw	0
 12917  0163BC  6EDD               	movwf	postdec2,c
 12918  0163BE  0060  F2D8  F034   	movff	_dst_off,btemp+10
 12919  0163C4  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 12920  0163CA  1E34               	comf	(btemp+10)^0,f,c
 12921  0163CC  1E35               	comf	(btemp+11)^0,f,c
 12922  0163CE  4A34               	infsnz	(btemp+10)^0,f,c
 12923  0163D0  2A35               	incf	(btemp+11)^0,f,c
 12924  0163D2  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12925  0163D8  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12926  0163DE  0E00               	movlw	0
 12927  0163E0  BE2F               	btfsc	(btemp+5)^0,7,c
 12928  0163E2  0EFF               	movlw	255
 12929  0163E4  6E30               	movwf	(btemp+6)^0,c
 12930  0163E6  6E31               	movwf	(btemp+7)^0,c
 12931                           
 12932                           ;stkvar	_offset @ sp[(-24)+-14]
 12933  0163E8  0EDA               	movlw	-38
 12934  0163EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12935  0163F0  0EDB               	movlw	-37
 12936  0163F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12937  0163F8  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 12938  0163FE  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 12939  016404  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 12940  01640A  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 12941                           
 12942                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12943  016410  0ED8               	movlw	-40
 12944  016412  006F FF8C  F02A    	movff	plusw1,btemp
 12945  016418  0ED9               	movlw	-39
 12946  01641A  50E3               	movf	plusw1,w,c
 12947  01641C  102A               	iorwf	btemp^0,w,c
 12948  01641E  B4D8               	btfsc	status,2,c
 12949  016420  D029               	goto	l16640
 12950  016422  0060  F1C0  F032   	movff	___timezone,btemp+8
 12951  016428  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 12952  01642E  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 12953  016434  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 12954  01643A  1E32               	comf	(btemp+8)^0,f,c
 12955  01643C  1E33               	comf	(btemp+9)^0,f,c
 12956  01643E  1E34               	comf	(btemp+10)^0,f,c
 12957  016440  1E35               	comf	(btemp+11)^0,f,c
 12958  016442  2A32               	incf	(btemp+8)^0,f,c
 12959  016444  0E00               	movlw	0
 12960  016446  2233               	addwfc	(btemp+9)^0,f,c
 12961  016448  2234               	addwfc	(btemp+10)^0,f,c
 12962  01644A  2235               	addwfc	(btemp+11)^0,f,c
 12963                           
 12964                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12965  01644C  0ED8               	movlw	-40
 12966  01644E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12967  016454  0ED9               	movlw	-39
 12968  016456  006F FF8F FFDA     	movff	plusw1,fsr2h
 12969  01645C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 12970  016462  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 12971  016468  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 12972  01646E  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 12973  016474                     l16640:
 12974                           
 12975                           ;stkvar	_zonename @ sp[(-24)+-18]
 12976  016474  0ED6               	movlw	-42
 12977  016476  006F FF8F FFD9     	movff	plusw1,fsr2l
 12978  01647C  0ED7               	movlw	-41
 12979  01647E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12980  016484  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 12981  01648A  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 12982  016490                     l4027:
 12983                           
 12984                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 12985  016490  0ED6               	movlw	214
 12986  016492  26E1               	addwf	fsr1l,f,c
 12987  016494  0EFF               	movlw	255
 12988  016496  22E2               	addwfc	fsr1h,f,c
 12989  016498  0012               	return		;funcret
 12990  01649A                     __end_of___secs_to_zone:
 12991                           	opt callstack 0
 12992                           
 12993 ;; *************** function _scan_trans *****************
 12994 ;; Defined at:
 12995 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12996 ;; Parameters:    Size  Location     Type
 12997 ;;  t               8  [STACK] long long 
 12998 ;;  local           2  [STACK] int 
 12999 ;;  alt             2  [STACK] PTR unsigned int 
 13000 ;;		 -> alt(2), 
 13001 ;; Auto vars:     Size  Location     Type
 13002 ;;  x               8    0        unsigned long long 
 13003 ;;  a               2    0        unsigned int 
 13004 ;;  scale           2    0        int 
 13005 ;;  n               2    0        unsigned int 
 13006 ;;  m               2    0        unsigned int 
 13007 ;;  off             2    0        int 
 13008 ;; Return value:  Size  Location     Type
 13009 ;;                  2  [STACK] unsigned int 
 13010 ;; Registers used:
 13011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13021 ;;Total ram usage:        0 bytes
 13022 ;; Hardware stack levels used:    1
 13023 ;; Hardware stack levels required when called:   16
 13024 ;; This function calls:
 13025 ;;		_zi_read32
 13026 ;; This function is called by:
 13027 ;;		___secs_to_zone
 13028 ;; This function uses a reentrant model
 13029 ;;
 13030                           
 13031                           	psect	text38
 13032  001CF2                     __ptext38:
 13033                           	opt callstack 0
 13034  001CF2                     _scan_trans:
 13035                           	opt callstack 11
 13036                           
 13037                           ;stkvar	_alt @ sp[(0)+-12]
 13038                           
 13039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13040                           ;incstack = 0
 13041  001CF2  0EF4               	movlw	-12
 13042  001CF4  006F FF8C  F02A    	movff	plusw1,btemp
 13043  001CFA  0EF5               	movlw	-11
 13044  001CFC  50E3               	movf	plusw1,w,c
 13045  001CFE  102A               	iorwf	btemp^0,w,c
 13046  001D00  B4D8               	btfsc	status,2,c
 13047  001D02  D00C               	goto	l16368
 13048                           
 13049                           ;stkvar	_alt @ sp[(0)+-12]
 13050  001D04  0EF4               	movlw	-12
 13051  001D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 13052  001D0C  0EF5               	movlw	-11
 13053  001D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13054  001D14  0E00               	movlw	0
 13055  001D16  6EDE               	movwf	postinc2,c
 13056  001D18  0E00               	movlw	0
 13057  001D1A  6EDD               	movwf	postdec2,c
 13058  001D1C                     l16368:
 13059  001D1C  0E00               	movlw	0
 13060  001D1E  6E2A               	movwf	btemp^0,c
 13061  001D20  0E00               	movlw	0
 13062  001D22  6E2B               	movwf	(btemp+1)^0,c
 13063                           
 13064                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13065  001D24  0EF4               	movlw	244
 13066  001D26  26E1               	addwf	fsr1l,f,c
 13067  001D28  0EFF               	movlw	255
 13068  001D2A  22E2               	addwfc	fsr1h,f,c
 13069  001D2C  0012               	return		;funcret
 13070  001D2E                     __end_of_scan_trans:
 13071                           	opt callstack 0
 13072                           
 13073 ;; *************** function _zi_read32 *****************
 13074 ;; Defined at:
 13075 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13076 ;; Parameters:    Size  Location     Type
 13077 ;;  z               2  [STACK] PTR const unsigned char 
 13078 ;;		 -> NULL(0), 
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;		None
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  4  [STACK] unsigned long 
 13083 ;; Registers used:
 13084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13085 ;; Tracked objects:
 13086 ;;		On entry : 0/0
 13087 ;;		On exit  : 0/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13094 ;;Total ram usage:        0 bytes
 13095 ;; Hardware stack levels used:    1
 13096 ;; Hardware stack levels required when called:   15
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_scan_trans
 13101 ;;		___secs_to_zone
 13102 ;; This function uses a reentrant model
 13103 ;;
 13104                           
 13105                           	psect	text39
 13106  01F974                     __ptext39:
 13107                           	opt callstack 0
 13108  01F974                     _zi_read32:
 13109                           	opt callstack 12
 13110                           
 13111                           ;stkvar	_z @ sp[(0)+-2]
 13112                           
 13113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13114                           ;incstack = 0
 13115  01F974  0EFE               	movlw	-2
 13116  01F976  006F FF8C  F034    	movff	plusw1,btemp+10
 13117  01F97C  0EFF               	movlw	-1
 13118  01F97E  006F FF8C  F035    	movff	plusw1,btemp+11
 13119  01F984  0E02               	movlw	2
 13120  01F986  2434               	addwf	(btemp+10)^0,w,c
 13121  01F988  6ED9               	movwf	fsr2l,c
 13122  01F98A  0E00               	movlw	0
 13123  01F98C  2035               	addwfc	(btemp+11)^0,w,c
 13124  01F98E  6EDA               	movwf	fsr2h,c
 13125  01F990  50DF               	movf	indf2,w,c
 13126  01F992  6E35               	movwf	(btemp+11)^0,c
 13127  01F994  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13128  01F99A  6A2F               	clrf	(btemp+5)^0,c
 13129  01F99C  6A30               	clrf	(btemp+6)^0,c
 13130  01F99E  6A31               	clrf	(btemp+7)^0,c
 13131  01F9A0  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13132  01F9A6  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13133  01F9AC  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13134  01F9B2  6A2E               	clrf	(btemp+4)^0,c
 13135                           
 13136                           ;stkvar	_z @ sp[(0)+-2]
 13137  01F9B4  0EFE               	movlw	-2
 13138  01F9B6  006F FF8C  F034    	movff	plusw1,btemp+10
 13139  01F9BC  0EFF               	movlw	-1
 13140  01F9BE  006F FF8C  F035    	movff	plusw1,btemp+11
 13141  01F9C4  0E01               	movlw	1
 13142  01F9C6  2434               	addwf	(btemp+10)^0,w,c
 13143  01F9C8  6ED9               	movwf	fsr2l,c
 13144  01F9CA  0E00               	movlw	0
 13145  01F9CC  2035               	addwfc	(btemp+11)^0,w,c
 13146  01F9CE  6EDA               	movwf	fsr2h,c
 13147  01F9D0  50DF               	movf	indf2,w,c
 13148  01F9D2  6E35               	movwf	(btemp+11)^0,c
 13149  01F9D4  0060  F0D4  F02A   	movff	btemp+11,btemp
 13150  01F9DA  6A2B               	clrf	(btemp+1)^0,c
 13151  01F9DC  6A2C               	clrf	(btemp+2)^0,c
 13152  01F9DE  6A2D               	clrf	(btemp+3)^0,c
 13153  01F9E0  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13154  01F9E6  0060  F0A8  F02C   	movff	btemp,btemp+2
 13155  01F9EC  6A2B               	clrf	(btemp+1)^0,c
 13156  01F9EE  6A2A               	clrf	btemp^0,c
 13157                           
 13158                           ;stkvar	_z @ sp[(0)+-2]
 13159  01F9F0  0EFE               	movlw	-2
 13160  01F9F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13161  01F9F8  0EFF               	movlw	-1
 13162  01F9FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13163  01FA00  50DF               	movf	indf2,w,c
 13164  01FA02  6E32               	movwf	(btemp+8)^0,c
 13165  01FA04  6A33               	clrf	(btemp+9)^0,c
 13166  01FA06  6A34               	clrf	(btemp+10)^0,c
 13167  01FA08  6A35               	clrf	(btemp+11)^0,c
 13168  01FA0A  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13169  01FA10  6A34               	clrf	(btemp+10)^0,c
 13170  01FA12  6A33               	clrf	(btemp+9)^0,c
 13171  01FA14  6A32               	clrf	(btemp+8)^0,c
 13172  01FA16  502A               	movf	btemp^0,w,c
 13173  01FA18  1232               	iorwf	(btemp+8)^0,f,c
 13174  01FA1A  502B               	movf	(btemp+1)^0,w,c
 13175  01FA1C  1233               	iorwf	(btemp+9)^0,f,c
 13176  01FA1E  502C               	movf	(btemp+2)^0,w,c
 13177  01FA20  1234               	iorwf	(btemp+10)^0,f,c
 13178  01FA22  502D               	movf	(btemp+3)^0,w,c
 13179  01FA24  1235               	iorwf	(btemp+11)^0,f,c
 13180  01FA26  502E               	movf	(btemp+4)^0,w,c
 13181  01FA28  1232               	iorwf	(btemp+8)^0,f,c
 13182  01FA2A  502F               	movf	(btemp+5)^0,w,c
 13183  01FA2C  1233               	iorwf	(btemp+9)^0,f,c
 13184  01FA2E  5030               	movf	(btemp+6)^0,w,c
 13185  01FA30  1234               	iorwf	(btemp+10)^0,f,c
 13186  01FA32  5031               	movf	(btemp+7)^0,w,c
 13187  01FA34  1235               	iorwf	(btemp+11)^0,f,c
 13188                           
 13189                           ;stkvar	_z @ sp[(0)+-2]
 13190  01FA36  0EFE               	movlw	-2
 13191  01FA38  006F FF8C  F030    	movff	plusw1,btemp+6
 13192  01FA3E  0EFF               	movlw	-1
 13193  01FA40  006F FF8C  F031    	movff	plusw1,btemp+7
 13194  01FA46  0E03               	movlw	3
 13195  01FA48  2430               	addwf	(btemp+6)^0,w,c
 13196  01FA4A  6ED9               	movwf	fsr2l,c
 13197  01FA4C  0E00               	movlw	0
 13198  01FA4E  2031               	addwfc	(btemp+7)^0,w,c
 13199  01FA50  6EDA               	movwf	fsr2h,c
 13200  01FA52  50DF               	movf	indf2,w,c
 13201  01FA54  1032               	iorwf	(btemp+8)^0,w,c
 13202  01FA56  6E2A               	movwf	btemp^0,c
 13203  01FA58  5033               	movf	(btemp+9)^0,w,c
 13204  01FA5A  6E2B               	movwf	(btemp+1)^0,c
 13205  01FA5C  5034               	movf	(btemp+10)^0,w,c
 13206  01FA5E  6E2C               	movwf	(btemp+2)^0,c
 13207  01FA60  5035               	movf	(btemp+11)^0,w,c
 13208  01FA62  6E2D               	movwf	(btemp+3)^0,c
 13209                           
 13210                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13211  01FA64  52E5               	movf	postdec1,f,c
 13212  01FA66  52E5               	movf	postdec1,f,c
 13213  01FA68  0012               	return		;funcret
 13214  01FA6A                     __end_of_zi_read32:
 13215                           	opt callstack 0
 13216                           
 13217 ;; *************** function _rule_to_secs *****************
 13218 ;; Defined at:
 13219 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;  rule            2  [STACK] PTR const int 
 13222 ;;		 -> r1(10), r0(10), 
 13223 ;;  year            2  [STACK] int 
 13224 ;; Auto vars:     Size  Location     Type
 13225 ;;  days            2  [STACK] int 
 13226 ;;  wday            2  [STACK] int 
 13227 ;;  t               8  [STACK] long long 
 13228 ;;  is_leap         2  [STACK] int 
 13229 ;;  n               2  [STACK] int 
 13230 ;;  x               2  [STACK] int 
 13231 ;;  m               2  [STACK] int 
 13232 ;;  d               2  [STACK] int 
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  8  [STACK] long long 
 13235 ;; Registers used:
 13236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13237 ;; Tracked objects:
 13238 ;;		On entry : 0/0
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13246 ;;Total ram usage:        0 bytes
 13247 ;; Hardware stack levels used:    1
 13248 ;; Hardware stack levels required when called:   17
 13249 ;; This function calls:
 13250 ;;		___aldiv
 13251 ;;		___aomod
 13252 ;;		___lmul
 13253 ;;		___month_to_secs
 13254 ;;		___year_to_secs
 13255 ;;		_days_in_month
 13256 ;; This function is called by:
 13257 ;;		___secs_to_zone
 13258 ;; This function uses a reentrant model
 13259 ;;
 13260                           
 13261                           	psect	text40
 13262  017480                     __ptext40:
 13263                           	opt callstack 0
 13264  017480                     _rule_to_secs:
 13265                           	opt callstack 0
 13266                           
 13267                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13268  017480  0E1A               	movlw	26
 13269  017482  26E1               	addwf	fsr1l,f,c
 13270  017484  0E00               	movlw	0
 13271  017486  22E2               	addwfc	fsr1h,f,c
 13272                           
 13273                           ;stkvar	_is_leap @ sp[(-22)+12]
 13274                           
 13275                           ;incstack = 0
 13276  017488  0EF6               	movlw	246
 13277  01748A  24E1               	addwf	fsr1l,w,c
 13278  01748C  6E2A               	movwf	btemp^0,c
 13279  01748E  0EFF               	movlw	255
 13280  017490  20E2               	addwfc	fsr1h,w,c
 13281  017492  6E2B               	movwf	(btemp+1)^0,c
 13282  017494  0060  F0AB  FFE6   	movff	btemp,postinc1
 13283  01749A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13284                           
 13285                           ;stkvar	_year @ sp[(-24)+-8]
 13286  0174A0  0EE0               	movlw	-32
 13287  0174A2  006F FF8C  F03A    	movff	plusw1,btemp+16
 13288  0174A8  0EE1               	movlw	-31
 13289  0174AA  006F FF8C  F03B    	movff	plusw1,btemp+17
 13290  0174B0  6A3C               	clrf	(btemp+18)^0,c
 13291  0174B2  BE3B               	btfsc	(btemp+17)^0,7,c
 13292  0174B4  683C               	setf	(btemp+18)^0,c
 13293  0174B6  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13294  0174BC  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13295  0174C2  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13296  0174C8  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13297  0174CE  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13298  0174D4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13299  0174DA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13300  0174E0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13301  0174E6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13302  0174EC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13303  0174F2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13304  0174F8  0060  F103  FFE6   	movff	btemp+22,postinc1
 13305  0174FE  0060  F107  FFE6   	movff	btemp+23,postinc1
 13306  017504  EC43  F0A9         	call	___year_to_secs	;wreg free
 13307  017508  52E5               	movf	postdec1,f,c
 13308  01750A  006F FF9C  F041    	movff	indf1,btemp+23
 13309  017510  52E5               	movf	postdec1,f,c
 13310  017512  006F FF9C  F040    	movff	indf1,btemp+22
 13311  017518  52E5               	movf	postdec1,f,c
 13312  01751A  006F FF9C  F03F    	movff	indf1,btemp+21
 13313  017520  52E5               	movf	postdec1,f,c
 13314  017522  006F FF9C  F03E    	movff	indf1,btemp+20
 13315  017528  52E5               	movf	postdec1,f,c
 13316  01752A  006F FF9C  F03D    	movff	indf1,btemp+19
 13317  017530  52E5               	movf	postdec1,f,c
 13318  017532  006F FF9C  F03C    	movff	indf1,btemp+18
 13319  017538  52E5               	movf	postdec1,f,c
 13320  01753A  006F FF9C  F03B    	movff	indf1,btemp+17
 13321  017540  52E5               	movf	postdec1,f,c
 13322  017542  006F FF9C  F03A    	movff	indf1,btemp+16
 13323  017548  52E5               	movf	postdec1,f,c
 13324  01754A  52E5               	movf	postdec1,f,c
 13325                           
 13326                           ;stkvar	_t @ sp[(-22)+4]
 13327  01754C  0EEE               	movlw	-18
 13328  01754E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13329  017554  0EEF               	movlw	-17
 13330  017556  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13331  01755C  0EF0               	movlw	-16
 13332  01755E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13333  017564  0EF1               	movlw	-15
 13334  017566  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13335  01756C  0EF2               	movlw	-14
 13336  01756E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13337  017574  0EF3               	movlw	-13
 13338  017576  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13339  01757C  0EF4               	movlw	-12
 13340  01757E  0060  F103  FFE3   	movff	btemp+22,plusw1
 13341  017584  0EF5               	movlw	-11
 13342  017586  0060  F107  FFE3   	movff	btemp+23,plusw1
 13343                           
 13344                           ;stkvar	_rule @ sp[(-22)+-6]
 13345  01758C  0EE4               	movlw	-28
 13346  01758E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13347  017594  0EE5               	movlw	-27
 13348  017596  006F FF8F FFDA     	movff	plusw1,fsr2h
 13349  01759C  0E4D               	movlw	77
 13350  01759E  18DE               	xorwf	postinc2,w,c
 13351  0175A0  10DE               	iorwf	postinc2,w,c
 13352  0175A2  B4D8               	btfsc	status,2,c
 13353  0175A4  D074               	goto	l16484
 13354                           
 13355                           ;stkvar	_rule @ sp[(-22)+-6]
 13356  0175A6  0EE4               	movlw	-28
 13357  0175A8  006F FF8C  F034    	movff	plusw1,btemp+10
 13358  0175AE  0EE5               	movlw	-27
 13359  0175B0  006F FF8C  F035    	movff	plusw1,btemp+11
 13360  0175B6  0E02               	movlw	2
 13361  0175B8  2434               	addwf	(btemp+10)^0,w,c
 13362  0175BA  6ED9               	movwf	fsr2l,c
 13363  0175BC  0E00               	movlw	0
 13364  0175BE  2035               	addwfc	(btemp+11)^0,w,c
 13365  0175C0  6EDA               	movwf	fsr2h,c
 13366  0175C2  006F FF78  F034    	movff	postinc2,btemp+10
 13367  0175C8  006F FF74  F035    	movff	postdec2,btemp+11
 13368                           
 13369                           ;stkvar	_x @ sp[(-22)+16]
 13370  0175CE  0EFA               	movlw	-6
 13371  0175D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13372  0175D6  0EFB               	movlw	-5
 13373  0175D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13374                           
 13375                           ;stkvar	_rule @ sp[(-22)+-6]
 13376  0175DE  0EE4               	movlw	-28
 13377  0175E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13378  0175E6  0EE5               	movlw	-27
 13379  0175E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13380  0175EE  0E4A               	movlw	74
 13381  0175F0  18DE               	xorwf	postinc2,w,c
 13382  0175F2  10DE               	iorwf	postinc2,w,c
 13383  0175F4  A4D8               	btfss	status,2,c
 13384  0175F6  D021               	goto	l16482
 13385                           
 13386                           ;stkvar	_x @ sp[(-22)+16]
 13387  0175F8  0EFB               	movlw	-5
 13388  0175FA  BEE3               	btfsc	plusw1,7,c
 13389  0175FC  D014               	goto	u16020
 13390  0175FE  0EFB               	movlw	-5
 13391  017600  50E3               	movf	plusw1,w,c
 13392  017602  E108               	bnz	u16010
 13393  017604  0EFA               	movlw	-6
 13394  017606  006F FF8C  F02A    	movff	plusw1,btemp
 13395  01760C  0E3C               	movlw	60
 13396  01760E  5E2A               	subwf	btemp^0,f,c
 13397  017610  A0D8               	btfss	status,0,c
 13398  017612  D009               	goto	u16020
 13399  017614                     u16010:
 13400                           
 13401                           ;stkvar	_is_leap @ sp[(-22)+12]
 13402  017614  0EF6               	movlw	-10
 13403  017616  006F FF8C  F02A    	movff	plusw1,btemp
 13404  01761C  0EF7               	movlw	-9
 13405  01761E  50E3               	movf	plusw1,w,c
 13406  017620  102A               	iorwf	btemp^0,w,c
 13407  017622  A4D8               	btfss	status,2,c
 13408  017624  D00A               	goto	l16482
 13409  017626                     u16020:
 13410                           
 13411                           ;stkvar	_x @ sp[(-22)+16]
 13412  017626  50E1               	movf	fsr1l,w,c
 13413  017628  0FFA               	addlw	-6
 13414  01762A  6ED9               	movwf	fsr2l,c
 13415  01762C  50E2               	movf	fsr1h,w,c
 13416  01762E  6EDA               	movwf	fsr2h,c
 13417  017630  0EFF               	movlw	255
 13418  017632  22DA               	addwfc	fsr2h,f,c
 13419  017634  06DE               	decf	postinc2,f,c
 13420  017636  0E00               	movlw	0
 13421  017638  5ADD               	subwfb	postdec2,f,c
 13422  01763A                     l16482:
 13423  01763A  0E80               	movlw	128
 13424  01763C  6EE6               	movwf	postinc1,c
 13425  01763E  0E51               	movlw	81
 13426  017640  6EE6               	movwf	postinc1,c
 13427  017642  0E01               	movlw	1
 13428  017644  6EE6               	movwf	postinc1,c
 13429  017646  0E00               	movlw	0
 13430  017648  6EE6               	movwf	postinc1,c
 13431                           
 13432                           ;stkvar	_x @ sp[(-26)+16]
 13433  01764A  0EF6               	movlw	-10
 13434  01764C  006F FF8C  F034    	movff	plusw1,btemp+10
 13435  017652  0EF7               	movlw	-9
 13436  017654  006F FF8C  F035    	movff	plusw1,btemp+11
 13437  01765A  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13438  017660  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13439  017666  0E00               	movlw	0
 13440  017668  BE2F               	btfsc	(btemp+5)^0,7,c
 13441  01766A  0EFF               	movlw	255
 13442  01766C  6E30               	movwf	(btemp+6)^0,c
 13443  01766E  6E31               	movwf	(btemp+7)^0,c
 13444  017670  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13445  017676  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13446  01767C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13447  017682  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13448  017688  EC14  F0FF         	call	___lmul	;wreg free
 13449  01768C  D1EC               	goto	L10
 13450  01768E                     l16484:
 13451                           
 13452                           ;stkvar	_rule @ sp[(-22)+-6]
 13453  01768E  0EE4               	movlw	-28
 13454  017690  006F FF8C  F034    	movff	plusw1,btemp+10
 13455  017696  0EE5               	movlw	-27
 13456  017698  006F FF8C  F035    	movff	plusw1,btemp+11
 13457  01769E  0E02               	movlw	2
 13458  0176A0  2434               	addwf	(btemp+10)^0,w,c
 13459  0176A2  6ED9               	movwf	fsr2l,c
 13460  0176A4  0E00               	movlw	0
 13461  0176A6  2035               	addwfc	(btemp+11)^0,w,c
 13462  0176A8  6EDA               	movwf	fsr2h,c
 13463  0176AA  006F FF78  F034    	movff	postinc2,btemp+10
 13464  0176B0  006F FF74  F035    	movff	postdec2,btemp+11
 13465                           
 13466                           ;stkvar	_m @ sp[(-22)+18]
 13467  0176B6  0EFC               	movlw	-4
 13468  0176B8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13469  0176BE  0EFD               	movlw	-3
 13470  0176C0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13471                           
 13472                           ;stkvar	_rule @ sp[(-22)+-6]
 13473  0176C6  0EE4               	movlw	-28
 13474  0176C8  006F FF8C  F034    	movff	plusw1,btemp+10
 13475  0176CE  0EE5               	movlw	-27
 13476  0176D0  006F FF8C  F035    	movff	plusw1,btemp+11
 13477  0176D6  0E04               	movlw	4
 13478  0176D8  2434               	addwf	(btemp+10)^0,w,c
 13479  0176DA  6ED9               	movwf	fsr2l,c
 13480  0176DC  0E00               	movlw	0
 13481  0176DE  2035               	addwfc	(btemp+11)^0,w,c
 13482  0176E0  6EDA               	movwf	fsr2h,c
 13483  0176E2  006F FF78  F034    	movff	postinc2,btemp+10
 13484  0176E8  006F FF74  F035    	movff	postdec2,btemp+11
 13485                           
 13486                           ;stkvar	_n @ sp[(-22)+14]
 13487  0176EE  0EF8               	movlw	-8
 13488  0176F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13489  0176F6  0EF9               	movlw	-7
 13490  0176F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13491                           
 13492                           ;stkvar	_rule @ sp[(-22)+-6]
 13493  0176FE  0EE4               	movlw	-28
 13494  017700  006F FF8C  F034    	movff	plusw1,btemp+10
 13495  017706  0EE5               	movlw	-27
 13496  017708  006F FF8C  F035    	movff	plusw1,btemp+11
 13497  01770E  0E06               	movlw	6
 13498  017710  2434               	addwf	(btemp+10)^0,w,c
 13499  017712  6ED9               	movwf	fsr2l,c
 13500  017714  0E00               	movlw	0
 13501  017716  2035               	addwfc	(btemp+11)^0,w,c
 13502  017718  6EDA               	movwf	fsr2h,c
 13503  01771A  006F FF78  F034    	movff	postinc2,btemp+10
 13504  017720  006F FF74  F035    	movff	postdec2,btemp+11
 13505                           
 13506                           ;stkvar	_d @ sp[(-22)+20]
 13507  017726  0EFE               	movlw	-2
 13508  017728  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13509  01772E  0EFF               	movlw	-1
 13510  017730  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13511                           
 13512                           ;stkvar	_is_leap @ sp[(-22)+12]
 13513  017736  0EF6               	movlw	-10
 13514  017738  006F FF8F FFE6     	movff	plusw1,postinc1
 13515  01773E  006F FF8F FFE6     	movff	plusw1,postinc1
 13516                           
 13517                           ;stkvar	_m @ sp[(-24)+18]
 13518  017744  0EFA               	movlw	-6
 13519  017746  50E3               	movf	plusw1,w,c
 13520  017748  0FFF               	addlw	255
 13521  01774A  6E34               	movwf	(btemp+10)^0,c
 13522  01774C  0EFB               	movlw	-5
 13523  01774E  006F FF8C  F035    	movff	plusw1,btemp+11
 13524  017754  0EFF               	movlw	255
 13525  017756  2235               	addwfc	(btemp+11)^0,f,c
 13526  017758  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13527  01775E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13528  017764  EC29  F0FE         	call	___month_to_secs	;wreg free
 13529  017768  0060  F0A8  F03A   	movff	btemp,btemp+16
 13530  01776E  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13531  017774  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13532  01777A  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13533  017780  6A3E               	clrf	(btemp+20)^0,c
 13534  017782  BE3D               	btfsc	(btemp+19)^0,7,c
 13535  017784  683E               	setf	(btemp+20)^0,c
 13536  017786  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13537  01778C  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13538  017792  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13539                           
 13540                           ;stkvar	_t @ sp[(-22)+4]
 13541  017798  50E1               	movf	fsr1l,w,c
 13542  01779A  0FEE               	addlw	-18
 13543  01779C  6ED9               	movwf	fsr2l,c
 13544  01779E  50E2               	movf	fsr1h,w,c
 13545  0177A0  6EDA               	movwf	fsr2h,c
 13546  0177A2  0EFF               	movlw	255
 13547  0177A4  22DA               	addwfc	fsr2h,f,c
 13548  0177A6  503A               	movf	(btemp+16)^0,w,c
 13549  0177A8  26DE               	addwf	postinc2,f,c
 13550  0177AA  503B               	movf	(btemp+17)^0,w,c
 13551  0177AC  22DE               	addwfc	postinc2,f,c
 13552  0177AE  503C               	movf	(btemp+18)^0,w,c
 13553  0177B0  22DE               	addwfc	postinc2,f,c
 13554  0177B2  503D               	movf	(btemp+19)^0,w,c
 13555  0177B4  22DE               	addwfc	postinc2,f,c
 13556  0177B6  503E               	movf	(btemp+20)^0,w,c
 13557  0177B8  22DE               	addwfc	postinc2,f,c
 13558  0177BA  503F               	movf	(btemp+21)^0,w,c
 13559  0177BC  22DE               	addwfc	postinc2,f,c
 13560  0177BE  5040               	movf	(btemp+22)^0,w,c
 13561  0177C0  22DE               	addwfc	postinc2,f,c
 13562  0177C2  5041               	movf	(btemp+23)^0,w,c
 13563  0177C4  22DE               	addwfc	postinc2,f,c
 13564  0177C6  0E80               	movlw	128
 13565  0177C8  6EE6               	movwf	postinc1,c
 13566  0177CA  0E51               	movlw	81
 13567  0177CC  6EE6               	movwf	postinc1,c
 13568  0177CE  0E01               	movlw	1
 13569  0177D0  6EE6               	movwf	postinc1,c
 13570  0177D2  0E00               	movlw	0
 13571  0177D4  6EE6               	movwf	postinc1,c
 13572  0177D6  0E80               	movlw	128
 13573  0177D8  6EE6               	movwf	postinc1,c
 13574  0177DA  0E3A               	movlw	58
 13575  0177DC  6EE6               	movwf	postinc1,c
 13576  0177DE  0E09               	movlw	9
 13577  0177E0  6EE6               	movwf	postinc1,c
 13578  0177E2  0E00               	movlw	0
 13579  0177E4  6EE6               	movwf	postinc1,c
 13580  0177E6  0E00               	movlw	0
 13581  0177E8  6EE6               	movwf	postinc1,c
 13582  0177EA  0E00               	movlw	0
 13583  0177EC  6EE6               	movwf	postinc1,c
 13584  0177EE  0E00               	movlw	0
 13585  0177F0  6EE6               	movwf	postinc1,c
 13586  0177F2  0E00               	movlw	0
 13587  0177F4  6EE6               	movwf	postinc1,c
 13588                           
 13589                           ;stkvar	_t @ sp[(-34)+4]
 13590  0177F6  0EE2               	movlw	-30
 13591  0177F8  50E3               	movf	plusw1,w,c
 13592  0177FA  0F00               	addlw	0
 13593  0177FC  6E3A               	movwf	(btemp+16)^0,c
 13594  0177FE  0EE3               	movlw	-29
 13595  017800  006F FF8C  F03B    	movff	plusw1,btemp+17
 13596  017806  0E46               	movlw	70
 13597  017808  223B               	addwfc	(btemp+17)^0,f,c
 13598  01780A  0EE4               	movlw	-28
 13599  01780C  006F FF8C  F03C    	movff	plusw1,btemp+18
 13600  017812  0E05               	movlw	5
 13601  017814  223C               	addwfc	(btemp+18)^0,f,c
 13602  017816  0EE5               	movlw	-27
 13603  017818  006F FF8C  F03D    	movff	plusw1,btemp+19
 13604  01781E  0E00               	movlw	0
 13605  017820  223D               	addwfc	(btemp+19)^0,f,c
 13606  017822  0EE6               	movlw	-26
 13607  017824  006F FF8C  F03E    	movff	plusw1,btemp+20
 13608  01782A  0E00               	movlw	0
 13609  01782C  223E               	addwfc	(btemp+20)^0,f,c
 13610  01782E  0EE7               	movlw	-25
 13611  017830  006F FF8C  F03F    	movff	plusw1,btemp+21
 13612  017836  0E00               	movlw	0
 13613  017838  223F               	addwfc	(btemp+21)^0,f,c
 13614  01783A  0EE8               	movlw	-24
 13615  01783C  006F FF8C  F040    	movff	plusw1,btemp+22
 13616  017842  0E00               	movlw	0
 13617  017844  2240               	addwfc	(btemp+22)^0,f,c
 13618  017846  0EE9               	movlw	-23
 13619  017848  006F FF8C  F041    	movff	plusw1,btemp+23
 13620  01784E  0E00               	movlw	0
 13621  017850  2241               	addwfc	(btemp+23)^0,f,c
 13622  017852  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13623  017858  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13624  01785E  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13625  017864  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13626  01786A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13627  017870  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13628  017876  0060  F103  FFE6   	movff	btemp+22,postinc1
 13629  01787C  0060  F107  FFE6   	movff	btemp+23,postinc1
 13630  017882  EC10  F0E4         	call	___aomod	;wreg free
 13631  017886  52E5               	movf	postdec1,f,c
 13632  017888  006F FF9C  F041    	movff	indf1,btemp+23
 13633  01788E  52E5               	movf	postdec1,f,c
 13634  017890  006F FF9C  F040    	movff	indf1,btemp+22
 13635  017896  52E5               	movf	postdec1,f,c
 13636  017898  006F FF9C  F03F    	movff	indf1,btemp+21
 13637  01789E  52E5               	movf	postdec1,f,c
 13638  0178A0  006F FF9C  F03E    	movff	indf1,btemp+20
 13639  0178A6  52E5               	movf	postdec1,f,c
 13640  0178A8  006F FF9C  F03D    	movff	indf1,btemp+19
 13641  0178AE  52E5               	movf	postdec1,f,c
 13642  0178B0  006F FF9C  F03C    	movff	indf1,btemp+18
 13643  0178B6  52E5               	movf	postdec1,f,c
 13644  0178B8  006F FF9C  F03B    	movff	indf1,btemp+17
 13645  0178BE  52E5               	movf	postdec1,f,c
 13646  0178C0  006F FF9C  F03A    	movff	indf1,btemp+16
 13647  0178C6  0EF8               	movlw	248
 13648  0178C8  26E1               	addwf	fsr1l,f,c
 13649  0178CA  0EFF               	movlw	255
 13650  0178CC  22E2               	addwfc	fsr1h,f,c
 13651  0178CE  0060  F0E8  F034   	movff	btemp+16,btemp+10
 13652  0178D4  0060  F0EC  F035   	movff	btemp+17,btemp+11
 13653  0178DA  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13654  0178E0  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13655  0178E6  0E00               	movlw	0
 13656  0178E8  BE2F               	btfsc	(btemp+5)^0,7,c
 13657  0178EA  0EFF               	movlw	255
 13658  0178EC  6E30               	movwf	(btemp+6)^0,c
 13659  0178EE  6E31               	movwf	(btemp+7)^0,c
 13660  0178F0  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13661  0178F6  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13662  0178FC  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13663  017902  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13664  017908  ECD0  F0ED         	call	___aldiv	;wreg free
 13665  01790C  0060  F0A8  F034   	movff	btemp,btemp+10
 13666  017912  0060  F0AC  F035   	movff	btemp+1,btemp+11
 13667                           
 13668                           ;stkvar	_wday @ sp[(-22)+2]
 13669  017918  0EEC               	movlw	-20
 13670  01791A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13671  017920  0EED               	movlw	-19
 13672  017922  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13673                           
 13674                           ;stkvar	_wday @ sp[(-22)+2]
 13675                           ;stkvar	_d @ sp[(-22)+20]
 13676  017928  0EFE               	movlw	-2
 13677  01792A  006F FF8C  F034    	movff	plusw1,btemp+10
 13678  017930  0EFF               	movlw	-1
 13679  017932  006F FF8C  F035    	movff	plusw1,btemp+11
 13680  017938  0EEC               	movlw	-20
 13681  01793A  50E3               	movf	plusw1,w,c
 13682  01793C  5E34               	subwf	(btemp+10)^0,f,c
 13683  01793E  0EED               	movlw	-19
 13684  017940  50E3               	movf	plusw1,w,c
 13685  017942  5A35               	subwfb	(btemp+11)^0,f,c
 13686                           
 13687                           ;stkvar	_days @ sp[(-22)+0]
 13688  017944  0EEA               	movlw	-22
 13689  017946  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13690  01794C  0EEB               	movlw	-21
 13691  01794E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13692                           
 13693                           ;stkvar	_days @ sp[(-22)+0]
 13694  017954  0EEB               	movlw	-21
 13695  017956  AEE3               	btfss	plusw1,7,c
 13696  017958  D011               	goto	l4019
 13697                           
 13698                           ;stkvar	_days @ sp[(-22)+0]
 13699  01795A  0EEA               	movlw	-22
 13700  01795C  50E3               	movf	plusw1,w,c
 13701  01795E  0F07               	addlw	7
 13702  017960  6E2A               	movwf	btemp^0,c
 13703  017962  0EEA               	movlw	-22
 13704  017964  0060  F0AB  FFE3   	movff	btemp,plusw1
 13705  01796A  6A2A               	clrf	btemp^0,c
 13706  01796C  0EEB               	movlw	-21
 13707  01796E  50E3               	movf	plusw1,w,c
 13708  017970  202A               	addwfc	btemp^0,w,c
 13709  017972  6E2A               	movwf	btemp^0,c
 13710  017974  0EEB               	movlw	-21
 13711  017976  0060  F0AB  FFE3   	movff	btemp,plusw1
 13712  01797C                     l4019:
 13713                           
 13714                           ;stkvar	_n @ sp[(-22)+14]
 13715  01797C  0EF8               	movlw	-8
 13716  01797E  006F FF8C  F02A    	movff	plusw1,btemp
 13717  017984  0E05               	movlw	5
 13718  017986  182A               	xorwf	btemp^0,w,c
 13719  017988  E134               	bnz	l16500
 13720  01798A  0EF9               	movlw	-7
 13721  01798C  50E3               	movf	plusw1,w,c
 13722  01798E  A4D8               	btfss	status,2,c
 13723  017990  D030               	goto	l16500
 13724                           
 13725                           ;stkvar	_is_leap @ sp[(-22)+12]
 13726  017992  0EF6               	movlw	-10
 13727  017994  006F FF8F FFE6     	movff	plusw1,postinc1
 13728  01799A  006F FF8F FFE6     	movff	plusw1,postinc1
 13729                           
 13730                           ;stkvar	_m @ sp[(-24)+18]
 13731  0179A0  0EFA               	movlw	-6
 13732  0179A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13733  0179A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13734  0179AE  EC07  F00A         	call	_days_in_month	;wreg free
 13735                           
 13736                           ;stkvar	_days @ sp[(-22)+0]
 13737  0179B2  0EEA               	movlw	-22
 13738  0179B4  50E3               	movf	plusw1,w,c
 13739  0179B6  0F1C               	addlw	28
 13740  0179B8  6E34               	movwf	(btemp+10)^0,c
 13741  0179BA  0EEB               	movlw	-21
 13742  0179BC  006F FF8C  F035    	movff	plusw1,btemp+11
 13743  0179C2  0E00               	movlw	0
 13744  0179C4  2235               	addwfc	(btemp+11)^0,f,c
 13745  0179C6  502A               	movf	btemp^0,w,c
 13746  0179C8  5C34               	subwf	(btemp+10)^0,w,c
 13747  0179CA  5035               	movf	(btemp+11)^0,w,c
 13748  0179CC  0A80               	xorlw	128
 13749  0179CE  6E2C               	movwf	(btemp+2)^0,c
 13750  0179D0  502B               	movf	(btemp+1)^0,w,c
 13751  0179D2  0A80               	xorlw	128
 13752  0179D4  582C               	subwfb	(btemp+2)^0,w,c
 13753  0179D6  A0D8               	btfss	status,0,c
 13754  0179D8  D00C               	goto	l16500
 13755  0179DA  0E04               	movlw	4
 13756  0179DC  6E34               	movwf	(btemp+10)^0,c
 13757  0179DE  0E00               	movlw	0
 13758  0179E0  6E35               	movwf	(btemp+11)^0,c
 13759                           
 13760                           ;stkvar	_n @ sp[(-22)+14]
 13761  0179E2  0EF8               	movlw	-8
 13762  0179E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13763  0179EA  0EF9               	movlw	-7
 13764  0179EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13765  0179F2                     l16500:
 13766  0179F2  0E80               	movlw	128
 13767  0179F4  6EE6               	movwf	postinc1,c
 13768  0179F6  0E51               	movlw	81
 13769  0179F8  6EE6               	movwf	postinc1,c
 13770  0179FA  0E01               	movlw	1
 13771  0179FC  6EE6               	movwf	postinc1,c
 13772  0179FE  0E00               	movlw	0
 13773  017A00  6EE6               	movwf	postinc1,c
 13774                           
 13775                           ;stkvar	_days @ sp[(-26)+0]
 13776                           ;stkvar	_n @ sp[(-26)+14]
 13777  017A02  0EF4               	movlw	-12
 13778  017A04  006F FF8C  F034    	movff	plusw1,btemp+10
 13779  017A0A  0EF5               	movlw	-11
 13780  017A0C  006F FF8C  F035    	movff	plusw1,btemp+11
 13781  017A12  0E07               	movlw	7
 13782  017A14  0234               	mulwf	(btemp+10)^0,c
 13783  017A16  006F FFCC  F032    	movff	prodl,btemp+8
 13784  017A1C  006F FFD0  F033    	movff	prodh,btemp+9
 13785  017A22  0235               	mulwf	(btemp+11)^0,c
 13786  017A24  50F3               	movf	prodl,w,c
 13787  017A26  2633               	addwf	(btemp+9)^0,f,c
 13788  017A28  0EE6               	movlw	-26
 13789  017A2A  50E3               	movf	plusw1,w,c
 13790  017A2C  2632               	addwf	(btemp+8)^0,f,c
 13791  017A2E  0EE7               	movlw	-25
 13792  017A30  50E3               	movf	plusw1,w,c
 13793  017A32  2233               	addwfc	(btemp+9)^0,f,c
 13794  017A34  0EF9               	movlw	249
 13795  017A36  2432               	addwf	(btemp+8)^0,w,c
 13796  017A38  6E2E               	movwf	(btemp+4)^0,c
 13797  017A3A  0EFF               	movlw	255
 13798  017A3C  2033               	addwfc	(btemp+9)^0,w,c
 13799  017A3E  6E2F               	movwf	(btemp+5)^0,c
 13800  017A40  6A30               	clrf	(btemp+6)^0,c
 13801  017A42  BE2F               	btfsc	(btemp+5)^0,7,c
 13802  017A44  0630               	decf	(btemp+6)^0,f,c
 13803  017A46  5030               	movf	(btemp+6)^0,w,c
 13804  017A48  6E31               	movwf	(btemp+7)^0,c
 13805  017A4A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13806  017A50  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13807  017A56  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13808  017A5C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13809  017A62  EC14  F0FF         	call	___lmul	;wreg free
 13810  017A66                     L10:
 13811  017A66  0060  F0A8  F03A   	movff	btemp,btemp+16
 13812  017A6C  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13813  017A72  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13814  017A78  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13815  017A7E  6A3E               	clrf	(btemp+20)^0,c
 13816  017A80  BE3D               	btfsc	(btemp+19)^0,7,c
 13817  017A82  683E               	setf	(btemp+20)^0,c
 13818  017A84  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13819  017A8A  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13820  017A90  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13821                           
 13822                           ;stkvar	_t @ sp[(-22)+4]
 13823  017A96  50E1               	movf	fsr1l,w,c
 13824  017A98  0FEE               	addlw	-18
 13825  017A9A  6ED9               	movwf	fsr2l,c
 13826  017A9C  50E2               	movf	fsr1h,w,c
 13827  017A9E  6EDA               	movwf	fsr2h,c
 13828  017AA0  0EFF               	movlw	255
 13829  017AA2  22DA               	addwfc	fsr2h,f,c
 13830  017AA4  503A               	movf	(btemp+16)^0,w,c
 13831  017AA6  26DE               	addwf	postinc2,f,c
 13832  017AA8  503B               	movf	(btemp+17)^0,w,c
 13833  017AAA  22DE               	addwfc	postinc2,f,c
 13834  017AAC  503C               	movf	(btemp+18)^0,w,c
 13835  017AAE  22DE               	addwfc	postinc2,f,c
 13836  017AB0  503D               	movf	(btemp+19)^0,w,c
 13837  017AB2  22DE               	addwfc	postinc2,f,c
 13838  017AB4  503E               	movf	(btemp+20)^0,w,c
 13839  017AB6  22DE               	addwfc	postinc2,f,c
 13840  017AB8  503F               	movf	(btemp+21)^0,w,c
 13841  017ABA  22DE               	addwfc	postinc2,f,c
 13842  017ABC  5040               	movf	(btemp+22)^0,w,c
 13843  017ABE  22DE               	addwfc	postinc2,f,c
 13844  017AC0  5041               	movf	(btemp+23)^0,w,c
 13845  017AC2  22DE               	addwfc	postinc2,f,c
 13846                           
 13847                           ;stkvar	_rule @ sp[(-22)+-6]
 13848  017AC4  0EE4               	movlw	-28
 13849  017AC6  006F FF8C  F034    	movff	plusw1,btemp+10
 13850  017ACC  0EE5               	movlw	-27
 13851  017ACE  006F FF8C  F035    	movff	plusw1,btemp+11
 13852  017AD4  0E08               	movlw	8
 13853  017AD6  2434               	addwf	(btemp+10)^0,w,c
 13854  017AD8  6ED9               	movwf	fsr2l,c
 13855  017ADA  0E00               	movlw	0
 13856  017ADC  2035               	addwfc	(btemp+11)^0,w,c
 13857  017ADE  6EDA               	movwf	fsr2h,c
 13858  017AE0  006F FF78  F034    	movff	postinc2,btemp+10
 13859  017AE6  006F FF74  F035    	movff	postdec2,btemp+11
 13860                           
 13861                           ;stkvar	_t @ sp[(-22)+4]
 13862  017AEC  50E1               	movf	fsr1l,w,c
 13863  017AEE  0FEE               	addlw	-18
 13864  017AF0  6ED9               	movwf	fsr2l,c
 13865  017AF2  50E2               	movf	fsr1h,w,c
 13866  017AF4  6EDA               	movwf	fsr2h,c
 13867  017AF6  0EFF               	movlw	255
 13868  017AF8  22DA               	addwfc	fsr2h,f,c
 13869  017AFA  5034               	movf	(btemp+10)^0,w,c
 13870  017AFC  26DE               	addwf	postinc2,f,c
 13871  017AFE  5035               	movf	(btemp+11)^0,w,c
 13872  017B00  22DE               	addwfc	postinc2,f,c
 13873  017B02  0E00               	movlw	0
 13874  017B04  BE35               	btfsc	(btemp+11)^0,7,c
 13875  017B06  0EFF               	movlw	255
 13876  017B08  22DE               	addwfc	postinc2,f,c
 13877  017B0A  22DE               	addwfc	postinc2,f,c
 13878  017B0C  22DE               	addwfc	postinc2,f,c
 13879  017B0E  22DE               	addwfc	postinc2,f,c
 13880  017B10  22DE               	addwfc	postinc2,f,c
 13881  017B12  22DE               	addwfc	postinc2,f,c
 13882                           
 13883                           ;stkvar	_t @ sp[(-22)+4]
 13884  017B14  0EEE               	movlw	238
 13885  017B16  24E1               	addwf	fsr1l,w,c
 13886  017B18  6ED9               	movwf	fsr2l,c
 13887  017B1A  0EFF               	movlw	255
 13888  017B1C  20E2               	addwfc	fsr1h,w,c
 13889  017B1E  6EDA               	movwf	fsr2h,c
 13890                           
 13891                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 13892  017B20  0E08               	movlw	8
 13893  017B22  6E2A               	movwf	btemp^0,c
 13894  017B24  0EE2               	movlw	-30
 13895  017B26                     us1606999:
 13896  017B26  006F FF7B FFE3     	movff	postinc2,plusw1
 13897  017B2C  28E8               	incf	wreg,w,c
 13898  017B2E  2E2A               	decfsz	btemp^0,f,c
 13899  017B30  D7FA               	bra	us1606999
 13900                           
 13901                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 13902  017B32  0EEA               	movlw	234
 13903  017B34  26E1               	addwf	fsr1l,f,c
 13904  017B36  0EFF               	movlw	255
 13905  017B38  22E2               	addwfc	fsr1h,f,c
 13906  017B3A  0012               	return		;funcret
 13907  017B3C                     __end_of_rule_to_secs:
 13908                           	opt callstack 0
 13909                           
 13910 ;; *************** function _days_in_month *****************
 13911 ;; Defined at:
 13912 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13913 ;; Parameters:    Size  Location     Type
 13914 ;;  m               2  [STACK] int 
 13915 ;;  is_leap         2  [STACK] int 
 13916 ;; Auto vars:     Size  Location     Type
 13917 ;;		None
 13918 ;; Return value:  Size  Location     Type
 13919 ;;                  2  [STACK] int 
 13920 ;; Registers used:
 13921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13922 ;; Tracked objects:
 13923 ;;		On entry : 0/0
 13924 ;;		On exit  : 0/0
 13925 ;;		Unchanged: 0/0
 13926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13931 ;;Total ram usage:        0 bytes
 13932 ;; Hardware stack levels used:    1
 13933 ;; Hardware stack levels required when called:   15
 13934 ;; This function calls:
 13935 ;;		Nothing
 13936 ;; This function is called by:
 13937 ;;		_rule_to_secs
 13938 ;; This function uses a reentrant model
 13939 ;;
 13940                           
 13941                           	psect	text41
 13942  00140E                     __ptext41:
 13943                           	opt callstack 0
 13944  00140E                     _days_in_month:
 13945                           	opt callstack 11
 13946                           
 13947                           ;stkvar	_m @ sp[(0)+-2]
 13948                           
 13949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13950                           ;incstack = 0
 13951  00140E  0EFE               	movlw	-2
 13952  001410  006F FF8C  F02A    	movff	plusw1,btemp
 13953  001416  0E02               	movlw	2
 13954  001418  182A               	xorwf	btemp^0,w,c
 13955  00141A  E10D               	bnz	l11592
 13956  00141C  0EFF               	movlw	-1
 13957  00141E  50E3               	movf	plusw1,w,c
 13958  001420  A4D8               	btfss	status,2,c
 13959  001422  D009               	goto	l11592
 13960                           
 13961                           ;stkvar	_is_leap @ sp[(0)+-4]
 13962  001424  0EFC               	movlw	-4
 13963  001426  50E3               	movf	plusw1,w,c
 13964  001428  0F1C               	addlw	28
 13965  00142A  6E2A               	movwf	btemp^0,c
 13966  00142C  0EFD               	movlw	-3
 13967  00142E  006F FF8C  F02B    	movff	plusw1,btemp+1
 13968  001434  D017               	goto	L11
 13969  001436                     l11592:
 13970  001436  0EFF               	movlw	255
 13971  001438  6E35               	movwf	(btemp+11)^0,c
 13972                           
 13973                           ;stkvar	_m @ sp[(0)+-2]
 13974  00143A  0EFE               	movlw	-2
 13975  00143C  50E3               	movf	plusw1,w,c
 13976  00143E  2435               	addwf	(btemp+11)^0,w,c
 13977  001440  6E34               	movwf	(btemp+10)^0,c
 13978  001442  0ED5               	movlw	213
 13979  001444  6E2A               	movwf	btemp^0,c
 13980  001446  0E0A               	movlw	10
 13981  001448  6E2B               	movwf	(btemp+1)^0,c
 13982  00144A  2A34               	incf	(btemp+10)^0,f,c
 13983  00144C  D003               	goto	u10684
 13984  00144E                     u10685:
 13985  00144E  342B               	rlcf	(btemp+1)^0,w,c
 13986  001450  322B               	rrcf	(btemp+1)^0,f,c
 13987  001452  322A               	rrcf	btemp^0,f,c
 13988  001454                     u10684:
 13989  001454  2E34               	decfsz	(btemp+10)^0,f,c
 13990  001456  D7FB               	goto	u10685
 13991  001458  0E01               	movlw	1
 13992  00145A  162A               	andwf	btemp^0,f,c
 13993  00145C  0E00               	movlw	0
 13994  00145E  162B               	andwf	(btemp+1)^0,f,c
 13995  001460  0E1E               	movlw	30
 13996  001462  262A               	addwf	btemp^0,f,c
 13997  001464                     L11:
 13998  001464  0E00               	movlw	0
 13999  001466  222B               	addwfc	(btemp+1)^0,f,c
 14000                           
 14001                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14002  001468  52E5               	movf	postdec1,f,c
 14003  00146A  52E5               	movf	postdec1,f,c
 14004  00146C  52E5               	movf	postdec1,f,c
 14005  00146E  52E5               	movf	postdec1,f,c
 14006  001470  0012               	return		;funcret
 14007  001472                     __end_of_days_in_month:
 14008                           	opt callstack 0
 14009                           
 14010 ;; *************** function ___year_to_secs *****************
 14011 ;; Defined at:
 14012 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;  year            8  [STACK] long long 
 14015 ;;  is_leap         2  [STACK] PTR int 
 14016 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14017 ;; Auto vars:     Size  Location     Type
 14018 ;;  y               2  [STACK] int 
 14019 ;;  leaps           2  [STACK] int 
 14020 ;;  rem             2  [STACK] int 
 14021 ;;  5               2  [STACK] int 
 14022 ;;  centuries       2  [STACK] int 
 14023 ;;  leaps           2  [STACK] int 
 14024 ;;  cycles          2  [STACK] int 
 14025 ;; Return value:  Size  Location     Type
 14026 ;;                  8  [STACK] long long 
 14027 ;; Registers used:
 14028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14029 ;; Tracked objects:
 14030 ;;		On entry : 0/0
 14031 ;;		On exit  : 0/0
 14032 ;;		Unchanged: 0/0
 14033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14038 ;;Total ram usage:        0 bytes
 14039 ;; Hardware stack levels used:    1
 14040 ;; Hardware stack levels required when called:   16
 14041 ;; This function calls:
 14042 ;;		___aodiv
 14043 ;;		___aomod
 14044 ;;		___lmul
 14045 ;;		___omul
 14046 ;; This function is called by:
 14047 ;;		_rule_to_secs
 14048 ;;		___secs_to_zone
 14049 ;; This function uses a reentrant model
 14050 ;;
 14051                           
 14052                           	psect	text42
 14053  015286                     __ptext42:
 14054                           	opt callstack 0
 14055  015286                     ___year_to_secs:
 14056                           	opt callstack 0
 14057                           
 14058                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14059  015286  0E0E               	movlw	14
 14060  015288  26E1               	addwf	fsr1l,f,c
 14061  01528A  0E00               	movlw	0
 14062  01528C  22E2               	addwfc	fsr1h,f,c
 14063                           
 14064                           ;stkvar	_year @ sp[(-14)+-8]
 14065                           
 14066                           ;incstack = 0
 14067  01528E  0EEA               	movlw	-22
 14068  015290  50E3               	movf	plusw1,w,c
 14069  015292  0FFE               	addlw	254
 14070  015294  6E3A               	movwf	(btemp+16)^0,c
 14071  015296  0EEB               	movlw	-21
 14072  015298  006F FF8C  F03B    	movff	plusw1,btemp+17
 14073  01529E  0EFF               	movlw	255
 14074  0152A0  223B               	addwfc	(btemp+17)^0,f,c
 14075  0152A2  0EEC               	movlw	-20
 14076  0152A4  006F FF8C  F03C    	movff	plusw1,btemp+18
 14077  0152AA  0EFF               	movlw	255
 14078  0152AC  223C               	addwfc	(btemp+18)^0,f,c
 14079  0152AE  0EED               	movlw	-19
 14080  0152B0  006F FF8C  F03D    	movff	plusw1,btemp+19
 14081  0152B6  0EFF               	movlw	255
 14082  0152B8  223D               	addwfc	(btemp+19)^0,f,c
 14083  0152BA  0EEE               	movlw	-18
 14084  0152BC  006F FF8C  F03E    	movff	plusw1,btemp+20
 14085  0152C2  0EFF               	movlw	255
 14086  0152C4  223E               	addwfc	(btemp+20)^0,f,c
 14087  0152C6  0EEF               	movlw	-17
 14088  0152C8  006F FF8C  F03F    	movff	plusw1,btemp+21
 14089  0152CE  0EFF               	movlw	255
 14090  0152D0  223F               	addwfc	(btemp+21)^0,f,c
 14091  0152D2  0EF0               	movlw	-16
 14092  0152D4  006F FF8C  F040    	movff	plusw1,btemp+22
 14093  0152DA  0EFF               	movlw	255
 14094  0152DC  2240               	addwfc	(btemp+22)^0,f,c
 14095  0152DE  0EF1               	movlw	-15
 14096  0152E0  006F FF8C  F041    	movff	plusw1,btemp+23
 14097  0152E6  0EFF               	movlw	255
 14098  0152E8  2241               	addwfc	(btemp+23)^0,f,c
 14099  0152EA  5041               	movf	(btemp+23)^0,w,c
 14100  0152EC  1040               	iorwf	(btemp+22)^0,w,c
 14101  0152EE  103F               	iorwf	(btemp+21)^0,w,c
 14102  0152F0  103E               	iorwf	(btemp+20)^0,w,c
 14103  0152F2  103D               	iorwf	(btemp+19)^0,w,c
 14104  0152F4  103C               	iorwf	(btemp+18)^0,w,c
 14105  0152F6  103B               	iorwf	(btemp+17)^0,w,c
 14106  0152F8  E103               	bnz	u10691
 14107  0152FA  0E89               	movlw	137
 14108  0152FC  5C3A               	subwf	(btemp+16)^0,w,c
 14109  0152FE  B0D8               	btfsc	status,0,c
 14110  015300                     u10691:
 14111  015300  D0E7               	goto	l11618
 14112                           
 14113                           ;stkvar	_year @ sp[(-14)+-8]
 14114                           ;stkvar	_y @ sp[(-14)+0]
 14115  015302  0EEA               	movlw	-22
 14116  015304  006F FF8C  F02A    	movff	plusw1,btemp
 14117  01530A  0EF2               	movlw	-14
 14118  01530C  0060  F0AB  FFE3   	movff	btemp,plusw1
 14119  015312  0EEB               	movlw	-21
 14120  015314  006F FF8C  F02A    	movff	plusw1,btemp
 14121  01531A  0EF3               	movlw	-13
 14122  01531C  0060  F0AB  FFE3   	movff	btemp,plusw1
 14123                           
 14124                           ;stkvar	_y @ sp[(-14)+0]
 14125  015322  0EF2               	movlw	-14
 14126  015324  50E3               	movf	plusw1,w,c
 14127  015326  0FBC               	addlw	188
 14128  015328  6E34               	movwf	(btemp+10)^0,c
 14129  01532A  0EF3               	movlw	-13
 14130  01532C  006F FF8C  F035    	movff	plusw1,btemp+11
 14131  015332  0EFF               	movlw	255
 14132  015334  2235               	addwfc	(btemp+11)^0,f,c
 14133  015336  3435               	rlcf	(btemp+11)^0,w,c
 14134  015338  3235               	rrcf	(btemp+11)^0,f,c
 14135  01533A  3234               	rrcf	(btemp+10)^0,f,c
 14136  01533C  3435               	rlcf	(btemp+11)^0,w,c
 14137  01533E  3235               	rrcf	(btemp+11)^0,f,c
 14138  015340  3234               	rrcf	(btemp+10)^0,f,c
 14139                           
 14140                           ;stkvar	_leaps @ sp[(-14)+2]
 14141  015342  0EF4               	movlw	-12
 14142  015344  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14143  01534A  0EF5               	movlw	-11
 14144  01534C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14145  015352  0EBC               	movlw	188
 14146  015354  6E35               	movwf	(btemp+11)^0,c
 14147                           
 14148                           ;stkvar	_y @ sp[(-14)+0]
 14149  015356  0EF2               	movlw	-14
 14150  015358  50E3               	movf	plusw1,w,c
 14151  01535A  2435               	addwf	(btemp+11)^0,w,c
 14152  01535C  6E34               	movwf	(btemp+10)^0,c
 14153  01535E  0E03               	movlw	3
 14154  015360  1634               	andwf	(btemp+10)^0,f,c
 14155  015362  A4D8               	btfss	status,2,c
 14156  015364  D01D               	goto	l11610
 14157                           
 14158                           ;stkvar	_leaps @ sp[(-14)+2]
 14159  015366  50E1               	movf	fsr1l,w,c
 14160  015368  0FF4               	addlw	-12
 14161  01536A  6ED9               	movwf	fsr2l,c
 14162  01536C  50E2               	movf	fsr1h,w,c
 14163  01536E  6EDA               	movwf	fsr2h,c
 14164  015370  0EFF               	movlw	255
 14165  015372  22DA               	addwfc	fsr2h,f,c
 14166  015374  06DE               	decf	postinc2,f,c
 14167  015376  0E00               	movlw	0
 14168  015378  5ADD               	subwfb	postdec2,f,c
 14169                           
 14170                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14171  01537A  0EE8               	movlw	-24
 14172  01537C  006F FF8C  F02A    	movff	plusw1,btemp
 14173  015382  0EE9               	movlw	-23
 14174  015384  50E3               	movf	plusw1,w,c
 14175  015386  102A               	iorwf	btemp^0,w,c
 14176  015388  B4D8               	btfsc	status,2,c
 14177  01538A  D01F               	goto	l11614
 14178                           
 14179                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14180  01538C  0EE8               	movlw	-24
 14181  01538E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14182  015394  0EE9               	movlw	-23
 14183  015396  006F FF8F FFDA     	movff	plusw1,fsr2h
 14184  01539C  0E01               	movlw	1
 14185  01539E  D012               	goto	L12
 14186  0153A0                     l11610:
 14187                           
 14188                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14189  0153A0  0EE8               	movlw	-24
 14190  0153A2  006F FF8C  F02A    	movff	plusw1,btemp
 14191  0153A8  0EE9               	movlw	-23
 14192  0153AA  50E3               	movf	plusw1,w,c
 14193  0153AC  102A               	iorwf	btemp^0,w,c
 14194  0153AE  B4D8               	btfsc	status,2,c
 14195  0153B0  D00C               	goto	l11614
 14196                           
 14197                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14198  0153B2  0EE8               	movlw	-24
 14199  0153B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14200  0153BA  0EE9               	movlw	-23
 14201  0153BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14202  0153C2  0E00               	movlw	0
 14203  0153C4                     L12:
 14204  0153C4  6EDE               	movwf	postinc2,c
 14205  0153C6  0E00               	movlw	0
 14206  0153C8  6EDD               	movwf	postdec2,c
 14207  0153CA                     l11614:
 14208  0153CA  0E80               	movlw	128
 14209  0153CC  6EE6               	movwf	postinc1,c
 14210  0153CE  0E33               	movlw	51
 14211  0153D0  6EE6               	movwf	postinc1,c
 14212  0153D2  0EE1               	movlw	225
 14213  0153D4  6EE6               	movwf	postinc1,c
 14214  0153D6  0E01               	movlw	1
 14215  0153D8  6EE6               	movwf	postinc1,c
 14216                           
 14217                           ;stkvar	_y @ sp[(-18)+0]
 14218  0153DA  0EEE               	movlw	-18
 14219  0153DC  006F FF8C  F034    	movff	plusw1,btemp+10
 14220  0153E2  0EEF               	movlw	-17
 14221  0153E4  006F FF8C  F035    	movff	plusw1,btemp+11
 14222  0153EA  0EBA               	movlw	186
 14223  0153EC  2434               	addwf	(btemp+10)^0,w,c
 14224  0153EE  6E2E               	movwf	(btemp+4)^0,c
 14225  0153F0  0EFF               	movlw	255
 14226  0153F2  2035               	addwfc	(btemp+11)^0,w,c
 14227  0153F4  6E2F               	movwf	(btemp+5)^0,c
 14228  0153F6  6A30               	clrf	(btemp+6)^0,c
 14229  0153F8  BE2F               	btfsc	(btemp+5)^0,7,c
 14230  0153FA  0630               	decf	(btemp+6)^0,f,c
 14231  0153FC  5030               	movf	(btemp+6)^0,w,c
 14232  0153FE  6E31               	movwf	(btemp+7)^0,c
 14233  015400  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14234  015406  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14235  01540C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14236  015412  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14237  015418  EC14  F0FF         	call	___lmul	;wreg free
 14238  01541C  0060  F0A8  F032   	movff	btemp,btemp+8
 14239  015422  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14240  015428  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14241  01542E  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14242  015434  0E80               	movlw	128
 14243  015436  6EE6               	movwf	postinc1,c
 14244  015438  0E51               	movlw	81
 14245  01543A  6EE6               	movwf	postinc1,c
 14246  01543C  0E01               	movlw	1
 14247  01543E  6EE6               	movwf	postinc1,c
 14248  015440  0E00               	movlw	0
 14249  015442  6EE6               	movwf	postinc1,c
 14250                           
 14251                           ;stkvar	_leaps @ sp[(-18)+2]
 14252  015444  0EF0               	movlw	-16
 14253  015446  006F FF8C  F030    	movff	plusw1,btemp+6
 14254  01544C  0EF1               	movlw	-15
 14255  01544E  006F FF8C  F031    	movff	plusw1,btemp+7
 14256  015454  0060  F0C0  F02A   	movff	btemp+6,btemp
 14257  01545A  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14258  015460  0E00               	movlw	0
 14259  015462  BE2B               	btfsc	(btemp+1)^0,7,c
 14260  015464  0EFF               	movlw	255
 14261  015466  6E2C               	movwf	(btemp+2)^0,c
 14262  015468  6E2D               	movwf	(btemp+3)^0,c
 14263  01546A  0060  F0AB  FFE6   	movff	btemp,postinc1
 14264  015470  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14265  015476  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14266  01547C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14267  015482  EC14  F0FF         	call	___lmul	;wreg free
 14268  015486  502A               	movf	btemp^0,w,c
 14269  015488  2432               	addwf	(btemp+8)^0,w,c
 14270  01548A  6E2E               	movwf	(btemp+4)^0,c
 14271  01548C  502B               	movf	(btemp+1)^0,w,c
 14272  01548E  2033               	addwfc	(btemp+9)^0,w,c
 14273  015490  6E2F               	movwf	(btemp+5)^0,c
 14274  015492  502C               	movf	(btemp+2)^0,w,c
 14275  015494  2034               	addwfc	(btemp+10)^0,w,c
 14276  015496  6E30               	movwf	(btemp+6)^0,c
 14277  015498  502D               	movf	(btemp+3)^0,w,c
 14278  01549A  2035               	addwfc	(btemp+11)^0,w,c
 14279  01549C  6E31               	movwf	(btemp+7)^0,c
 14280  01549E  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14281  0154A4  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14282  0154AA  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14283  0154B0  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14284  0154B6  6A3E               	clrf	(btemp+20)^0,c
 14285  0154B8  BE3D               	btfsc	(btemp+19)^0,7,c
 14286  0154BA  683E               	setf	(btemp+20)^0,c
 14287  0154BC  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14288  0154C2  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14289  0154C8  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14290  0154CE  D36F               	goto	L13
 14291  0154D0                     l11618:
 14292                           
 14293                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14294  0154D0  0EE8               	movlw	-24
 14295  0154D2  006F FF8C  F02A    	movff	plusw1,btemp
 14296  0154D8  0EE9               	movlw	-23
 14297  0154DA  50E3               	movf	plusw1,w,c
 14298  0154DC  102A               	iorwf	btemp^0,w,c
 14299  0154DE  A4D8               	btfss	status,2,c
 14300  0154E0  D012               	goto	l11624
 14301                           
 14302                           ;stkvar	F5 @ sp[(-14)+6]
 14303  0154E2  0EF8               	movlw	-8
 14304  0154E4  6AE3               	clrf	plusw1,c
 14305  0154E6  0EF9               	movlw	-7
 14306  0154E8  6AE3               	clrf	plusw1,c
 14307                           
 14308                           ;stkvar	F5 @ sp[(-14)+6]
 14309  0154EA  0EF8               	movlw	248
 14310  0154EC  24E1               	addwf	fsr1l,w,c
 14311  0154EE  6E34               	movwf	(btemp+10)^0,c
 14312  0154F0  0EFF               	movlw	255
 14313  0154F2  20E2               	addwfc	fsr1h,w,c
 14314  0154F4  6E35               	movwf	(btemp+11)^0,c
 14315                           
 14316                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14317  0154F6  0EE9               	movlw	-23
 14318  0154F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14319  0154FE  0EE8               	movlw	-24
 14320  015500  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14321  015506                     l11624:
 14322  015506  0E90               	movlw	144
 14323  015508  6EE6               	movwf	postinc1,c
 14324  01550A  0E01               	movlw	1
 14325  01550C  6EE6               	movwf	postinc1,c
 14326  01550E  0E00               	movlw	0
 14327  015510  6EE6               	movwf	postinc1,c
 14328  015512  0E00               	movlw	0
 14329  015514  6EE6               	movwf	postinc1,c
 14330  015516  0E00               	movlw	0
 14331  015518  6EE6               	movwf	postinc1,c
 14332  01551A  0E00               	movlw	0
 14333  01551C  6EE6               	movwf	postinc1,c
 14334  01551E  0E00               	movlw	0
 14335  015520  6EE6               	movwf	postinc1,c
 14336  015522  0E00               	movlw	0
 14337  015524  6EE6               	movwf	postinc1,c
 14338                           
 14339                           ;stkvar	_year @ sp[(-22)+-8]
 14340  015526  0EE2               	movlw	-30
 14341  015528  50E3               	movf	plusw1,w,c
 14342  01552A  0F9C               	addlw	156
 14343  01552C  6E3A               	movwf	(btemp+16)^0,c
 14344  01552E  0EE3               	movlw	-29
 14345  015530  006F FF8C  F03B    	movff	plusw1,btemp+17
 14346  015536  0EFF               	movlw	255
 14347  015538  223B               	addwfc	(btemp+17)^0,f,c
 14348  01553A  0EE4               	movlw	-28
 14349  01553C  006F FF8C  F03C    	movff	plusw1,btemp+18
 14350  015542  0EFF               	movlw	255
 14351  015544  223C               	addwfc	(btemp+18)^0,f,c
 14352  015546  0EE5               	movlw	-27
 14353  015548  006F FF8C  F03D    	movff	plusw1,btemp+19
 14354  01554E  0EFF               	movlw	255
 14355  015550  223D               	addwfc	(btemp+19)^0,f,c
 14356  015552  0EE6               	movlw	-26
 14357  015554  006F FF8C  F03E    	movff	plusw1,btemp+20
 14358  01555A  0EFF               	movlw	255
 14359  01555C  223E               	addwfc	(btemp+20)^0,f,c
 14360  01555E  0EE7               	movlw	-25
 14361  015560  006F FF8C  F03F    	movff	plusw1,btemp+21
 14362  015566  0EFF               	movlw	255
 14363  015568  223F               	addwfc	(btemp+21)^0,f,c
 14364  01556A  0EE8               	movlw	-24
 14365  01556C  006F FF8C  F040    	movff	plusw1,btemp+22
 14366  015572  0EFF               	movlw	255
 14367  015574  2240               	addwfc	(btemp+22)^0,f,c
 14368  015576  0EE9               	movlw	-23
 14369  015578  006F FF8C  F041    	movff	plusw1,btemp+23
 14370  01557E  0EFF               	movlw	255
 14371  015580  2241               	addwfc	(btemp+23)^0,f,c
 14372  015582  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14373  015588  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14374  01558E  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14375  015594  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14376  01559A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14377  0155A0  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14378  0155A6  0060  F103  FFE6   	movff	btemp+22,postinc1
 14379  0155AC  0060  F107  FFE6   	movff	btemp+23,postinc1
 14380  0155B2  EC24  F0DE         	call	___aodiv	;wreg free
 14381  0155B6  52E5               	movf	postdec1,f,c
 14382  0155B8  006F FF9C  F041    	movff	indf1,btemp+23
 14383  0155BE  52E5               	movf	postdec1,f,c
 14384  0155C0  006F FF9C  F040    	movff	indf1,btemp+22
 14385  0155C6  52E5               	movf	postdec1,f,c
 14386  0155C8  006F FF9C  F03F    	movff	indf1,btemp+21
 14387  0155CE  52E5               	movf	postdec1,f,c
 14388  0155D0  006F FF9C  F03E    	movff	indf1,btemp+20
 14389  0155D6  52E5               	movf	postdec1,f,c
 14390  0155D8  006F FF9C  F03D    	movff	indf1,btemp+19
 14391  0155DE  52E5               	movf	postdec1,f,c
 14392  0155E0  006F FF9C  F03C    	movff	indf1,btemp+18
 14393  0155E6  52E5               	movf	postdec1,f,c
 14394  0155E8  006F FF9C  F03B    	movff	indf1,btemp+17
 14395  0155EE  52E5               	movf	postdec1,f,c
 14396  0155F0  006F FF9C  F03A    	movff	indf1,btemp+16
 14397  0155F6  0EF8               	movlw	248
 14398  0155F8  26E1               	addwf	fsr1l,f,c
 14399  0155FA  0EFF               	movlw	255
 14400  0155FC  22E2               	addwfc	fsr1h,f,c
 14401  0155FE  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14402  015604  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14403                           
 14404                           ;stkvar	_cycles @ sp[(-14)+12]
 14405  01560A  0EFE               	movlw	-2
 14406  01560C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14407  015612  0EFF               	movlw	-1
 14408  015614  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14409  01561A  0E90               	movlw	144
 14410  01561C  6EE6               	movwf	postinc1,c
 14411  01561E  0E01               	movlw	1
 14412  015620  6EE6               	movwf	postinc1,c
 14413  015622  0E00               	movlw	0
 14414  015624  6EE6               	movwf	postinc1,c
 14415  015626  0E00               	movlw	0
 14416  015628  6EE6               	movwf	postinc1,c
 14417  01562A  0E00               	movlw	0
 14418  01562C  6EE6               	movwf	postinc1,c
 14419  01562E  0E00               	movlw	0
 14420  015630  6EE6               	movwf	postinc1,c
 14421  015632  0E00               	movlw	0
 14422  015634  6EE6               	movwf	postinc1,c
 14423  015636  0E00               	movlw	0
 14424  015638  6EE6               	movwf	postinc1,c
 14425                           
 14426                           ;stkvar	_year @ sp[(-22)+-8]
 14427  01563A  0EE2               	movlw	-30
 14428  01563C  50E3               	movf	plusw1,w,c
 14429  01563E  0F9C               	addlw	156
 14430  015640  6E3A               	movwf	(btemp+16)^0,c
 14431  015642  0EE3               	movlw	-29
 14432  015644  006F FF8C  F03B    	movff	plusw1,btemp+17
 14433  01564A  0EFF               	movlw	255
 14434  01564C  223B               	addwfc	(btemp+17)^0,f,c
 14435  01564E  0EE4               	movlw	-28
 14436  015650  006F FF8C  F03C    	movff	plusw1,btemp+18
 14437  015656  0EFF               	movlw	255
 14438  015658  223C               	addwfc	(btemp+18)^0,f,c
 14439  01565A  0EE5               	movlw	-27
 14440  01565C  006F FF8C  F03D    	movff	plusw1,btemp+19
 14441  015662  0EFF               	movlw	255
 14442  015664  223D               	addwfc	(btemp+19)^0,f,c
 14443  015666  0EE6               	movlw	-26
 14444  015668  006F FF8C  F03E    	movff	plusw1,btemp+20
 14445  01566E  0EFF               	movlw	255
 14446  015670  223E               	addwfc	(btemp+20)^0,f,c
 14447  015672  0EE7               	movlw	-25
 14448  015674  006F FF8C  F03F    	movff	plusw1,btemp+21
 14449  01567A  0EFF               	movlw	255
 14450  01567C  223F               	addwfc	(btemp+21)^0,f,c
 14451  01567E  0EE8               	movlw	-24
 14452  015680  006F FF8C  F040    	movff	plusw1,btemp+22
 14453  015686  0EFF               	movlw	255
 14454  015688  2240               	addwfc	(btemp+22)^0,f,c
 14455  01568A  0EE9               	movlw	-23
 14456  01568C  006F FF8C  F041    	movff	plusw1,btemp+23
 14457  015692  0EFF               	movlw	255
 14458  015694  2241               	addwfc	(btemp+23)^0,f,c
 14459  015696  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14460  01569C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14461  0156A2  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14462  0156A8  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14463  0156AE  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14464  0156B4  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14465  0156BA  0060  F103  FFE6   	movff	btemp+22,postinc1
 14466  0156C0  0060  F107  FFE6   	movff	btemp+23,postinc1
 14467  0156C6  EC10  F0E4         	call	___aomod	;wreg free
 14468  0156CA  52E5               	movf	postdec1,f,c
 14469  0156CC  006F FF9C  F041    	movff	indf1,btemp+23
 14470  0156D2  52E5               	movf	postdec1,f,c
 14471  0156D4  006F FF9C  F040    	movff	indf1,btemp+22
 14472  0156DA  52E5               	movf	postdec1,f,c
 14473  0156DC  006F FF9C  F03F    	movff	indf1,btemp+21
 14474  0156E2  52E5               	movf	postdec1,f,c
 14475  0156E4  006F FF9C  F03E    	movff	indf1,btemp+20
 14476  0156EA  52E5               	movf	postdec1,f,c
 14477  0156EC  006F FF9C  F03D    	movff	indf1,btemp+19
 14478  0156F2  52E5               	movf	postdec1,f,c
 14479  0156F4  006F FF9C  F03C    	movff	indf1,btemp+18
 14480  0156FA  52E5               	movf	postdec1,f,c
 14481  0156FC  006F FF9C  F03B    	movff	indf1,btemp+17
 14482  015702  52E5               	movf	postdec1,f,c
 14483  015704  006F FF9C  F03A    	movff	indf1,btemp+16
 14484  01570A  0EF8               	movlw	248
 14485  01570C  26E1               	addwf	fsr1l,f,c
 14486  01570E  0EFF               	movlw	255
 14487  015710  22E2               	addwfc	fsr1h,f,c
 14488  015712  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14489  015718  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14490                           
 14491                           ;stkvar	_rem @ sp[(-14)+4]
 14492  01571E  0EF6               	movlw	-10
 14493  015720  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14494  015726  0EF7               	movlw	-9
 14495  015728  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14496                           
 14497                           ;stkvar	_rem @ sp[(-14)+4]
 14498  01572E  0EF7               	movlw	-9
 14499  015730  AEE3               	btfss	plusw1,7,c
 14500  015732  D015               	goto	l11634
 14501                           
 14502                           ;stkvar	_cycles @ sp[(-14)+12]
 14503  015734  50E1               	movf	fsr1l,w,c
 14504  015736  0FFE               	addlw	-2
 14505  015738  6ED9               	movwf	fsr2l,c
 14506  01573A  50E2               	movf	fsr1h,w,c
 14507  01573C  6EDA               	movwf	fsr2h,c
 14508  01573E  0EFF               	movlw	255
 14509  015740  22DA               	addwfc	fsr2h,f,c
 14510  015742  06DE               	decf	postinc2,f,c
 14511  015744  0E00               	movlw	0
 14512  015746  5ADD               	subwfb	postdec2,f,c
 14513                           
 14514                           ;stkvar	_rem @ sp[(-14)+4]
 14515  015748  50E1               	movf	fsr1l,w,c
 14516  01574A  0FF6               	addlw	-10
 14517  01574C  6ED9               	movwf	fsr2l,c
 14518  01574E  50E2               	movf	fsr1h,w,c
 14519  015750  6EDA               	movwf	fsr2h,c
 14520  015752  0EFF               	movlw	255
 14521  015754  22DA               	addwfc	fsr2h,f,c
 14522  015756  0E90               	movlw	144
 14523  015758  26DE               	addwf	postinc2,f,c
 14524  01575A  0E01               	movlw	1
 14525  01575C  22DD               	addwfc	postdec2,f,c
 14526  01575E                     l11634:
 14527                           
 14528                           ;stkvar	_rem @ sp[(-14)+4]
 14529  01575E  0EF6               	movlw	-10
 14530  015760  006F FF8C  F02A    	movff	plusw1,btemp
 14531  015766  0EF7               	movlw	-9
 14532  015768  50E3               	movf	plusw1,w,c
 14533  01576A  102A               	iorwf	btemp^0,w,c
 14534  01576C  A4D8               	btfss	status,2,c
 14535  01576E  D015               	goto	l11642
 14536                           
 14537                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14538  015770  0EE8               	movlw	-24
 14539  015772  006F FF8F FFD9     	movff	plusw1,fsr2l
 14540  015778  0EE9               	movlw	-23
 14541  01577A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14542  015780  0E01               	movlw	1
 14543  015782  6EDE               	movwf	postinc2,c
 14544  015784  0E00               	movlw	0
 14545  015786  6EDD               	movwf	postdec2,c
 14546                           
 14547                           ;stkvar	_centuries @ sp[(-14)+8]
 14548  015788  0EFA               	movlw	-6
 14549  01578A  6AE3               	clrf	plusw1,c
 14550  01578C  0EFB               	movlw	-5
 14551  01578E  6AE3               	clrf	plusw1,c
 14552  015790                     l11640:
 14553                           
 14554                           ;stkvar	_leaps @ sp[(-14)+10]
 14555  015790  0EFC               	movlw	-4
 14556  015792  6AE3               	clrf	plusw1,c
 14557  015794  0EFD               	movlw	-3
 14558  015796  6AE3               	clrf	plusw1,c
 14559  015798  D0D6               	goto	l11674
 14560  01579A                     l11642:
 14561                           
 14562                           ;stkvar	_rem @ sp[(-14)+4]
 14563  01579A  0EF7               	movlw	-9
 14564  01579C  BEE3               	btfsc	plusw1,7,c
 14565  01579E  D04A               	goto	l11654
 14566  0157A0  0EF7               	movlw	-9
 14567  0157A2  50E3               	movf	plusw1,w,c
 14568  0157A4  E108               	bnz	u10760
 14569  0157A6  0EF6               	movlw	-10
 14570  0157A8  006F FF8C  F02A    	movff	plusw1,btemp
 14571  0157AE  0EC8               	movlw	200
 14572  0157B0  5E2A               	subwf	btemp^0,f,c
 14573  0157B2  A0D8               	btfss	status,0,c
 14574  0157B4  D03F               	goto	l11654
 14575  0157B6                     u10760:
 14576                           
 14577                           ;stkvar	_rem @ sp[(-14)+4]
 14578  0157B6  0EF7               	movlw	-9
 14579  0157B8  BEE3               	btfsc	plusw1,7,c
 14580  0157BA  D025               	goto	l11650
 14581  0157BC  0EF6               	movlw	-10
 14582  0157BE  006F FF8C  F02A    	movff	plusw1,btemp
 14583  0157C4  0E2C               	movlw	44
 14584  0157C6  5E2A               	subwf	btemp^0,f,c
 14585  0157C8  0EF7               	movlw	-9
 14586  0157CA  006F FF8C  F02A    	movff	plusw1,btemp
 14587  0157D0  0E01               	movlw	1
 14588  0157D2  5A2A               	subwfb	btemp^0,f,c
 14589  0157D4  A0D8               	btfss	status,0,c
 14590  0157D6  D017               	goto	l11650
 14591  0157D8  0E03               	movlw	3
 14592  0157DA  6E34               	movwf	(btemp+10)^0,c
 14593  0157DC  0E00               	movlw	0
 14594  0157DE  6E35               	movwf	(btemp+11)^0,c
 14595                           
 14596                           ;stkvar	_centuries @ sp[(-14)+8]
 14597  0157E0  0EFA               	movlw	-6
 14598  0157E2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14599  0157E8  0EFB               	movlw	-5
 14600  0157EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14601                           
 14602                           ;stkvar	_rem @ sp[(-14)+4]
 14603  0157F0  50E1               	movf	fsr1l,w,c
 14604  0157F2  0FF6               	addlw	-10
 14605  0157F4  6ED9               	movwf	fsr2l,c
 14606  0157F6  50E2               	movf	fsr1h,w,c
 14607  0157F8  6EDA               	movwf	fsr2h,c
 14608  0157FA  0EFF               	movlw	255
 14609  0157FC  22DA               	addwfc	fsr2h,f,c
 14610  0157FE  0ED4               	movlw	212
 14611  015800  26DE               	addwf	postinc2,f,c
 14612  015802  0EFE               	movlw	254
 14613  015804  D015               	goto	L14
 14614  015806                     l11650:
 14615  015806  0E02               	movlw	2
 14616  015808  6E34               	movwf	(btemp+10)^0,c
 14617  01580A  0E00               	movlw	0
 14618  01580C  6E35               	movwf	(btemp+11)^0,c
 14619                           
 14620                           ;stkvar	_centuries @ sp[(-14)+8]
 14621  01580E  0EFA               	movlw	-6
 14622  015810  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14623  015816  0EFB               	movlw	-5
 14624  015818  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14625                           
 14626                           ;stkvar	_rem @ sp[(-14)+4]
 14627  01581E  50E1               	movf	fsr1l,w,c
 14628  015820  0FF6               	addlw	-10
 14629  015822  6ED9               	movwf	fsr2l,c
 14630  015824  50E2               	movf	fsr1h,w,c
 14631  015826  6EDA               	movwf	fsr2h,c
 14632  015828  0EFF               	movlw	255
 14633  01582A  22DA               	addwfc	fsr2h,f,c
 14634  01582C  0E38               	movlw	56
 14635  01582E  D024               	goto	L15
 14636  015830                     L14:
 14637  015830  22DD               	addwfc	postdec2,f,c
 14638  015832  D029               	goto	l11662
 14639  015834                     l11654:
 14640                           
 14641                           ;stkvar	_rem @ sp[(-14)+4]
 14642  015834  0EF7               	movlw	-9
 14643  015836  BEE3               	btfsc	plusw1,7,c
 14644  015838  D022               	goto	l11660
 14645  01583A  0EF7               	movlw	-9
 14646  01583C  50E3               	movf	plusw1,w,c
 14647  01583E  E108               	bnz	u10780
 14648  015840  0EF6               	movlw	-10
 14649  015842  006F FF8C  F02A    	movff	plusw1,btemp
 14650  015848  0E64               	movlw	100
 14651  01584A  5E2A               	subwf	btemp^0,f,c
 14652  01584C  A0D8               	btfss	status,0,c
 14653  01584E  D017               	goto	l11660
 14654  015850                     u10780:
 14655  015850  0E01               	movlw	1
 14656  015852  6E34               	movwf	(btemp+10)^0,c
 14657  015854  0E00               	movlw	0
 14658  015856  6E35               	movwf	(btemp+11)^0,c
 14659                           
 14660                           ;stkvar	_centuries @ sp[(-14)+8]
 14661  015858  0EFA               	movlw	-6
 14662  01585A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14663  015860  0EFB               	movlw	-5
 14664  015862  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14665                           
 14666                           ;stkvar	_rem @ sp[(-14)+4]
 14667  015868  50E1               	movf	fsr1l,w,c
 14668  01586A  0FF6               	addlw	-10
 14669  01586C  6ED9               	movwf	fsr2l,c
 14670  01586E  50E2               	movf	fsr1h,w,c
 14671  015870  6EDA               	movwf	fsr2h,c
 14672  015872  0EFF               	movlw	255
 14673  015874  22DA               	addwfc	fsr2h,f,c
 14674  015876  0E9C               	movlw	156
 14675  015878                     L15:
 14676  015878  26DE               	addwf	postinc2,f,c
 14677  01587A  0EFF               	movlw	255
 14678  01587C  D7D9               	goto	L14
 14679  01587E                     l11660:
 14680                           
 14681                           ;stkvar	_centuries @ sp[(-14)+8]
 14682  01587E  0EFA               	movlw	-6
 14683  015880  6AE3               	clrf	plusw1,c
 14684  015882  0EFB               	movlw	-5
 14685  015884  6AE3               	clrf	plusw1,c
 14686  015886                     l11662:
 14687                           
 14688                           ;stkvar	_rem @ sp[(-14)+4]
 14689  015886  0EF6               	movlw	-10
 14690  015888  006F FF8C  F02A    	movff	plusw1,btemp
 14691  01588E  0EF7               	movlw	-9
 14692  015890  50E3               	movf	plusw1,w,c
 14693  015892  102A               	iorwf	btemp^0,w,c
 14694  015894  A4D8               	btfss	status,2,c
 14695  015896  D00D               	goto	l11668
 14696                           
 14697                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14698  015898  0EE8               	movlw	-24
 14699  01589A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14700  0158A0  0EE9               	movlw	-23
 14701  0158A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14702  0158A8  0E00               	movlw	0
 14703  0158AA  6EDE               	movwf	postinc2,c
 14704  0158AC  0E00               	movlw	0
 14705  0158AE  6EDD               	movwf	postdec2,c
 14706  0158B0  D76F               	goto	l11640
 14707  0158B2                     l11668:
 14708                           
 14709                           ;stkvar	_rem @ sp[(-14)+4]
 14710  0158B2  0EF6               	movlw	-10
 14711  0158B4  006F FF8C  F034    	movff	plusw1,btemp+10
 14712  0158BA  0EF7               	movlw	-9
 14713  0158BC  006F FF8C  F035    	movff	plusw1,btemp+11
 14714  0158C2  90D8               	bcf	status,0,c
 14715  0158C4  3235               	rrcf	(btemp+11)^0,f,c
 14716  0158C6  3234               	rrcf	(btemp+10)^0,f,c
 14717  0158C8  90D8               	bcf	status,0,c
 14718  0158CA  3235               	rrcf	(btemp+11)^0,f,c
 14719  0158CC  3234               	rrcf	(btemp+10)^0,f,c
 14720                           
 14721                           ;stkvar	_leaps @ sp[(-14)+10]
 14722  0158CE  0EFC               	movlw	-4
 14723  0158D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14724  0158D6  0EFD               	movlw	-3
 14725  0158D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14726  0158DE  0E03               	movlw	3
 14727  0158E0  6E34               	movwf	(btemp+10)^0,c
 14728  0158E2  0E00               	movlw	0
 14729  0158E4  6E35               	movwf	(btemp+11)^0,c
 14730                           
 14731                           ;stkvar	_rem @ sp[(-14)+4]
 14732  0158E6  0EF6               	movlw	-10
 14733  0158E8  006F FF8C  F02A    	movff	plusw1,btemp
 14734  0158EE  5034               	movf	(btemp+10)^0,w,c
 14735  0158F0  162A               	andwf	btemp^0,f,c
 14736  0158F2  0EF6               	movlw	-10
 14737  0158F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 14738  0158FA  0EF7               	movlw	-9
 14739  0158FC  006F FF8C  F02A    	movff	plusw1,btemp
 14740  015902  5035               	movf	(btemp+11)^0,w,c
 14741  015904  162A               	andwf	btemp^0,f,c
 14742  015906  0EF7               	movlw	-9
 14743  015908  0060  F0AB  FFE3   	movff	btemp,plusw1
 14744                           
 14745                           ;stkvar	_rem @ sp[(-14)+4]
 14746  01590E  0EF6               	movlw	-10
 14747  015910  006F FF8C  F02A    	movff	plusw1,btemp
 14748  015916  0EF7               	movlw	-9
 14749  015918  50E3               	movf	plusw1,w,c
 14750  01591A  102A               	iorwf	btemp^0,w,c
 14751  01591C  A4D8               	btfss	status,2,c
 14752  01591E  D002               	goto	u10800
 14753  015920  0E01               	movlw	1
 14754  015922  D001               	goto	u10810
 14755  015924                     u10800:
 14756  015924  0E00               	movlw	0
 14757  015926                     u10810:
 14758  015926  6E34               	movwf	(btemp+10)^0,c
 14759  015928  6A35               	clrf	(btemp+11)^0,c
 14760                           
 14761                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14762  01592A  0EE8               	movlw	-24
 14763  01592C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14764  015932  0EE9               	movlw	-23
 14765  015934  006F FF8F FFDA     	movff	plusw1,fsr2h
 14766  01593A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 14767  015940  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 14768  015946                     l11674:
 14769                           
 14770                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14771  015946  0EE8               	movlw	-24
 14772  015948  006F FF8F FFD9     	movff	plusw1,fsr2l
 14773  01594E  0EE9               	movlw	-23
 14774  015950  006F FF8F FFDA     	movff	plusw1,fsr2h
 14775  015956  006F FF78  F034    	movff	postinc2,btemp+10
 14776  01595C  006F FF74  F035    	movff	postdec2,btemp+11
 14777                           
 14778                           ;stkvar	_centuries @ sp[(-14)+8]
 14779  015962  0EFA               	movlw	-6
 14780  015964  006F FF8C  F032    	movff	plusw1,btemp+8
 14781  01596A  0EFB               	movlw	-5
 14782  01596C  006F FF8C  F033    	movff	plusw1,btemp+9
 14783  015972  0E18               	movlw	24
 14784  015974  0232               	mulwf	(btemp+8)^0,c
 14785  015976  006F FFCC  F030    	movff	prodl,btemp+6
 14786  01597C  006F FFD0  F031    	movff	prodh,btemp+7
 14787  015982  0233               	mulwf	(btemp+9)^0,c
 14788  015984  50F3               	movf	prodl,w,c
 14789  015986  2631               	addwf	(btemp+7)^0,f,c
 14790                           
 14791                           ;stkvar	_cycles @ sp[(-14)+12]
 14792  015988  0EFE               	movlw	-2
 14793  01598A  006F FF8C  F032    	movff	plusw1,btemp+8
 14794  015990  0EFF               	movlw	-1
 14795  015992  006F FF8C  F033    	movff	plusw1,btemp+9
 14796  015998  0E61               	movlw	97
 14797  01599A  0232               	mulwf	(btemp+8)^0,c
 14798  01599C  006F FFCC  F02E    	movff	prodl,btemp+4
 14799  0159A2  006F FFD0  F02F    	movff	prodh,btemp+5
 14800  0159A8  0233               	mulwf	(btemp+9)^0,c
 14801  0159AA  50F3               	movf	prodl,w,c
 14802  0159AC  262F               	addwf	(btemp+5)^0,f,c
 14803  0159AE  5030               	movf	(btemp+6)^0,w,c
 14804  0159B0  262E               	addwf	(btemp+4)^0,f,c
 14805  0159B2  5031               	movf	(btemp+7)^0,w,c
 14806  0159B4  222F               	addwfc	(btemp+5)^0,f,c
 14807  0159B6  5034               	movf	(btemp+10)^0,w,c
 14808  0159B8  5E2E               	subwf	(btemp+4)^0,f,c
 14809  0159BA  5035               	movf	(btemp+11)^0,w,c
 14810  0159BC  5A2F               	subwfb	(btemp+5)^0,f,c
 14811                           
 14812                           ;stkvar	_leaps @ sp[(-14)+10]
 14813  0159BE  50E1               	movf	fsr1l,w,c
 14814  0159C0  0FFC               	addlw	-4
 14815  0159C2  6ED9               	movwf	fsr2l,c
 14816  0159C4  50E2               	movf	fsr1h,w,c
 14817  0159C6  6EDA               	movwf	fsr2h,c
 14818  0159C8  0EFF               	movlw	255
 14819  0159CA  22DA               	addwfc	fsr2h,f,c
 14820  0159CC  502E               	movf	(btemp+4)^0,w,c
 14821  0159CE  26DE               	addwf	postinc2,f,c
 14822  0159D0  502F               	movf	(btemp+5)^0,w,c
 14823  0159D2  22DD               	addwfc	postdec2,f,c
 14824  0159D4  0E80               	movlw	128
 14825  0159D6  6EE6               	movwf	postinc1,c
 14826  0159D8  0E51               	movlw	81
 14827  0159DA  6EE6               	movwf	postinc1,c
 14828  0159DC  0E01               	movlw	1
 14829  0159DE  6EE6               	movwf	postinc1,c
 14830  0159E0  0E00               	movlw	0
 14831  0159E2  6EE6               	movwf	postinc1,c
 14832  0159E4  0E00               	movlw	0
 14833  0159E6  6EE6               	movwf	postinc1,c
 14834  0159E8  0E00               	movlw	0
 14835  0159EA  6EE6               	movwf	postinc1,c
 14836  0159EC  0E00               	movlw	0
 14837  0159EE  6EE6               	movwf	postinc1,c
 14838  0159F0  0E00               	movlw	0
 14839  0159F2  6EE6               	movwf	postinc1,c
 14840                           
 14841                           ;stkvar	_leaps @ sp[(-22)+10]
 14842  0159F4  0EF4               	movlw	-12
 14843  0159F6  006F FF8C  F03A    	movff	plusw1,btemp+16
 14844  0159FC  0EF5               	movlw	-11
 14845  0159FE  006F FF8C  F03B    	movff	plusw1,btemp+17
 14846  015A04  6A3C               	clrf	(btemp+18)^0,c
 14847  015A06  BE3B               	btfsc	(btemp+17)^0,7,c
 14848  015A08  683C               	setf	(btemp+18)^0,c
 14849  015A0A  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 14850  015A10  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 14851  015A16  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 14852  015A1C  0060  F0F0  F040   	movff	btemp+18,btemp+22
 14853  015A22  0060  F0F0  F041   	movff	btemp+18,btemp+23
 14854  015A28  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14855  015A2E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14856  015A34  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14857  015A3A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14858  015A40  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14859  015A46  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14860  015A4C  0060  F103  FFE6   	movff	btemp+22,postinc1
 14861  015A52  0060  F107  FFE6   	movff	btemp+23,postinc1
 14862  015A58  EC1B  F0F5         	call	___omul	;wreg free
 14863  015A5C  52E5               	movf	postdec1,f,c
 14864  015A5E  006F FF9C  F041    	movff	indf1,btemp+23
 14865  015A64  52E5               	movf	postdec1,f,c
 14866  015A66  006F FF9C  F040    	movff	indf1,btemp+22
 14867  015A6C  52E5               	movf	postdec1,f,c
 14868  015A6E  006F FF9C  F03F    	movff	indf1,btemp+21
 14869  015A74  52E5               	movf	postdec1,f,c
 14870  015A76  006F FF9C  F03E    	movff	indf1,btemp+20
 14871  015A7C  52E5               	movf	postdec1,f,c
 14872  015A7E  006F FF9C  F03D    	movff	indf1,btemp+19
 14873  015A84  52E5               	movf	postdec1,f,c
 14874  015A86  006F FF9C  F03C    	movff	indf1,btemp+18
 14875  015A8C  52E5               	movf	postdec1,f,c
 14876  015A8E  006F FF9C  F03B    	movff	indf1,btemp+17
 14877  015A94  52E5               	movf	postdec1,f,c
 14878  015A96  006F FF9C  F03A    	movff	indf1,btemp+16
 14879  015A9C  0EF8               	movlw	248
 14880  015A9E  26E1               	addwf	fsr1l,f,c
 14881  015AA0  0EFF               	movlw	255
 14882  015AA2  22E2               	addwfc	fsr1h,f,c
 14883  015AA4  0E80               	movlw	128
 14884  015AA6  6EE6               	movwf	postinc1,c
 14885  015AA8  0E33               	movlw	51
 14886  015AAA  6EE6               	movwf	postinc1,c
 14887  015AAC  0EE1               	movlw	225
 14888  015AAE  6EE6               	movwf	postinc1,c
 14889  015AB0  0E01               	movlw	1
 14890  015AB2  6EE6               	movwf	postinc1,c
 14891  015AB4  0E00               	movlw	0
 14892  015AB6  6EE6               	movwf	postinc1,c
 14893  015AB8  0E00               	movlw	0
 14894  015ABA  6EE6               	movwf	postinc1,c
 14895  015ABC  0E00               	movlw	0
 14896  015ABE  6EE6               	movwf	postinc1,c
 14897  015AC0  0E00               	movlw	0
 14898  015AC2  6EE6               	movwf	postinc1,c
 14899                           
 14900                           ;stkvar	_year @ sp[(-22)+-8]
 14901  015AC4  50E1               	movf	fsr1l,w,c
 14902  015AC6  0FE2               	addlw	-30
 14903  015AC8  6ED9               	movwf	fsr2l,c
 14904  015ACA  50E2               	movf	fsr1h,w,c
 14905  015ACC  6EDA               	movwf	fsr2h,c
 14906  015ACE  0EFF               	movlw	255
 14907  015AD0  22DA               	addwfc	fsr2h,f,c
 14908  015AD2  006F FF7B FFE6     	movff	postinc2,postinc1
 14909  015AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 14910  015ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 14911  015AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 14912  015AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 14913  015AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 14914  015AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 14915  015AFC  006F FF7B FFE6     	movff	postinc2,postinc1
 14916  015B02  EC1B  F0F5         	call	___omul	;wreg free
 14917  015B06  52E5               	movf	postdec1,f,c
 14918  015B08  006F FF9C  F049    	movff	indf1,btemp+31
 14919  015B0E  52E5               	movf	postdec1,f,c
 14920  015B10  006F FF9C  F048    	movff	indf1,btemp+30
 14921  015B16  52E5               	movf	postdec1,f,c
 14922  015B18  006F FF9C  F047    	movff	indf1,btemp+29
 14923  015B1E  52E5               	movf	postdec1,f,c
 14924  015B20  006F FF9C  F046    	movff	indf1,btemp+28
 14925  015B26  52E5               	movf	postdec1,f,c
 14926  015B28  006F FF9C  F045    	movff	indf1,btemp+27
 14927  015B2E  52E5               	movf	postdec1,f,c
 14928  015B30  006F FF9C  F044    	movff	indf1,btemp+26
 14929  015B36  52E5               	movf	postdec1,f,c
 14930  015B38  006F FF9C  F043    	movff	indf1,btemp+25
 14931  015B3E  52E5               	movf	postdec1,f,c
 14932  015B40  006F FF9C  F042    	movff	indf1,btemp+24
 14933  015B46  0EF8               	movlw	248
 14934  015B48  26E1               	addwf	fsr1l,f,c
 14935  015B4A  0EFF               	movlw	255
 14936  015B4C  22E2               	addwfc	fsr1h,f,c
 14937  015B4E  503A               	movf	(btemp+16)^0,w,c
 14938  015B50  2442               	addwf	(btemp+24)^0,w,c
 14939  015B52  6E32               	movwf	(btemp+8)^0,c
 14940  015B54  503B               	movf	(btemp+17)^0,w,c
 14941  015B56  2043               	addwfc	(btemp+25)^0,w,c
 14942  015B58  6E33               	movwf	(btemp+9)^0,c
 14943  015B5A  503C               	movf	(btemp+18)^0,w,c
 14944  015B5C  2044               	addwfc	(btemp+26)^0,w,c
 14945  015B5E  6E34               	movwf	(btemp+10)^0,c
 14946  015B60  503D               	movf	(btemp+19)^0,w,c
 14947  015B62  2045               	addwfc	(btemp+27)^0,w,c
 14948  015B64  6E35               	movwf	(btemp+11)^0,c
 14949  015B66  503E               	movf	(btemp+20)^0,w,c
 14950  015B68  2046               	addwfc	(btemp+28)^0,w,c
 14951  015B6A  6E36               	movwf	(btemp+12)^0,c
 14952  015B6C  503F               	movf	(btemp+21)^0,w,c
 14953  015B6E  2047               	addwfc	(btemp+29)^0,w,c
 14954  015B70  6E37               	movwf	(btemp+13)^0,c
 14955  015B72  5040               	movf	(btemp+22)^0,w,c
 14956  015B74  2048               	addwfc	(btemp+30)^0,w,c
 14957  015B76  6E38               	movwf	(btemp+14)^0,c
 14958  015B78  5041               	movf	(btemp+23)^0,w,c
 14959  015B7A  2049               	addwfc	(btemp+31)^0,w,c
 14960  015B7C  6E39               	movwf	(btemp+15)^0,c
 14961  015B7E  0E00               	movlw	0
 14962  015B80  2432               	addwf	(btemp+8)^0,w,c
 14963  015B82  6E3A               	movwf	(btemp+16)^0,c
 14964  015B84  0E77               	movlw	119
 14965  015B86  2033               	addwfc	(btemp+9)^0,w,c
 14966  015B88  6E3B               	movwf	(btemp+17)^0,c
 14967  015B8A  0E76               	movlw	118
 14968  015B8C  2034               	addwfc	(btemp+10)^0,w,c
 14969  015B8E  6E3C               	movwf	(btemp+18)^0,c
 14970  015B90  0E7C               	movlw	124
 14971  015B92  2035               	addwfc	(btemp+11)^0,w,c
 14972  015B94  6E3D               	movwf	(btemp+19)^0,c
 14973  015B96  0EFF               	movlw	255
 14974  015B98  2036               	addwfc	(btemp+12)^0,w,c
 14975  015B9A  6E3E               	movwf	(btemp+20)^0,c
 14976  015B9C  0EFF               	movlw	255
 14977  015B9E  2037               	addwfc	(btemp+13)^0,w,c
 14978  015BA0  6E3F               	movwf	(btemp+21)^0,c
 14979  015BA2  0EFF               	movlw	255
 14980  015BA4  2038               	addwfc	(btemp+14)^0,w,c
 14981  015BA6  6E40               	movwf	(btemp+22)^0,c
 14982  015BA8  0EFF               	movlw	255
 14983  015BAA  2039               	addwfc	(btemp+15)^0,w,c
 14984  015BAC  6E41               	movwf	(btemp+23)^0,c
 14985  015BAE                     L13:
 14986                           
 14987                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 14988  015BAE  0EEA               	movlw	-22
 14989  015BB0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 14990  015BB6  0EEB               	movlw	-21
 14991  015BB8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 14992  015BBE  0EEC               	movlw	-20
 14993  015BC0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 14994  015BC6  0EED               	movlw	-19
 14995  015BC8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 14996  015BCE  0EEE               	movlw	-18
 14997  015BD0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 14998  015BD6  0EEF               	movlw	-17
 14999  015BD8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15000  015BDE  0EF0               	movlw	-16
 15001  015BE0  0060  F103  FFE3   	movff	btemp+22,plusw1
 15002  015BE6  0EF1               	movlw	-15
 15003  015BE8  0060  F107  FFE3   	movff	btemp+23,plusw1
 15004                           
 15005                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15006  015BEE  0EF2               	movlw	242
 15007  015BF0  26E1               	addwf	fsr1l,f,c
 15008  015BF2  0EFF               	movlw	255
 15009  015BF4  22E2               	addwfc	fsr1h,f,c
 15010  015BF6  0012               	return		;funcret
 15011  015BF8                     __end_of___year_to_secs:
 15012                           	opt callstack 0
 15013                           
 15014 ;; *************** function ___month_to_secs *****************
 15015 ;; Defined at:
 15016 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;  month           2  [STACK] int 
 15019 ;;  is_leap         2  [STACK] int 
 15020 ;; Auto vars:     Size  Location     Type
 15021 ;;  t               4  [STACK] long 
 15022 ;; Return value:  Size  Location     Type
 15023 ;;                  4  [STACK] long 
 15024 ;; Registers used:
 15025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15026 ;; Tracked objects:
 15027 ;;		On entry : 0/0
 15028 ;;		On exit  : 0/0
 15029 ;;		Unchanged: 0/0
 15030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15035 ;;Total ram usage:        0 bytes
 15036 ;; Hardware stack levels used:    1
 15037 ;; Hardware stack levels required when called:   15
 15038 ;; This function calls:
 15039 ;;		Nothing
 15040 ;; This function is called by:
 15041 ;;		_rule_to_secs
 15042 ;; This function uses a reentrant model
 15043 ;;
 15044                           
 15045                           	psect	text43
 15046  01FC52                     __ptext43:
 15047                           	opt callstack 0
 15048  01FC52                     ___month_to_secs:
 15049                           	opt callstack 0
 15050                           
 15051                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15052  01FC52  52E6               	movf	postinc1,f,c
 15053  01FC54  52E6               	movf	postinc1,f,c
 15054  01FC56  52E6               	movf	postinc1,f,c
 15055  01FC58  52E6               	movf	postinc1,f,c
 15056                           
 15057                           ;stkvar	_month @ sp[(-4)+-2]
 15058                           
 15059                           ;incstack = 0
 15060  01FC5A  0EFA               	movlw	-6
 15061  01FC5C  006F FF8C  F034    	movff	plusw1,btemp+10
 15062  01FC62  0EFB               	movlw	-5
 15063  01FC64  006F FF8C  F035    	movff	plusw1,btemp+11
 15064  01FC6A  90D8               	bcf	status,0,c
 15065  01FC6C  3634               	rlcf	(btemp+10)^0,f,c
 15066  01FC6E  3635               	rlcf	(btemp+11)^0,f,c
 15067  01FC70  90D8               	bcf	status,0,c
 15068  01FC72  3634               	rlcf	(btemp+10)^0,f,c
 15069  01FC74  3635               	rlcf	(btemp+11)^0,f,c
 15070  01FC76  0EA7               	movlw	low ___month_to_secs@secs_through_month
 15071  01FC78  2434               	addwf	(btemp+10)^0,w,c
 15072  01FC7A  6EF6               	movwf	tblptrl,c
 15073  01FC7C  0EF8               	movlw	high ___month_to_secs@secs_through_month
 15074  01FC7E  2035               	addwfc	(btemp+11)^0,w,c
 15075  01FC80  6EF7               	movwf	tblptrh,c
 15076  01FC82                     	if	1	;There are 3 active tblptr bytes
 15077  01FC82  6AF8               	clrf	tblptru,c
 15078  01FC84  0E00               	movlw	low (__mediumconst shr (0+16))
 15079  01FC86  22F8               	addwfc	tblptru,f,c
 15080  01FC88                     	endif
 15081  01FC88  0009               	tblrd		*+
 15082  01FC8A  006F FFD4  F032    	movff	tablat,btemp+8
 15083  01FC90  0009               	tblrd		*+
 15084  01FC92  006F FFD4  F033    	movff	tablat,btemp+9
 15085  01FC98  0009               	tblrd		*+
 15086  01FC9A  006F FFD4  F034    	movff	tablat,btemp+10
 15087  01FCA0  0009               	tblrd		*+
 15088  01FCA2  006F FFD4  F035    	movff	tablat,btemp+11
 15089                           
 15090                           ;stkvar	_t @ sp[(-4)+0]
 15091  01FCA8  0EFC               	movlw	-4
 15092  01FCAA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15093  01FCB0  0EFD               	movlw	-3
 15094  01FCB2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15095  01FCB8  0EFE               	movlw	-2
 15096  01FCBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15097  01FCC0  0EFF               	movlw	-1
 15098  01FCC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15099                           
 15100                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15101  01FCC8  0EF8               	movlw	-8
 15102  01FCCA  006F FF8C  F02A    	movff	plusw1,btemp
 15103  01FCD0  0EF9               	movlw	-7
 15104  01FCD2  50E3               	movf	plusw1,w,c
 15105  01FCD4  102A               	iorwf	btemp^0,w,c
 15106  01FCD6  B4D8               	btfsc	status,2,c
 15107  01FCD8  D01D               	goto	l11688
 15108                           
 15109                           ;stkvar	_month @ sp[(-4)+-2]
 15110  01FCDA  0EFB               	movlw	-5
 15111  01FCDC  BEE3               	btfsc	plusw1,7,c
 15112  01FCDE  D01A               	goto	l11688
 15113  01FCE0  0EFB               	movlw	-5
 15114  01FCE2  50E3               	movf	plusw1,w,c
 15115  01FCE4  E108               	bnz	u10830
 15116  01FCE6  0EFA               	movlw	-6
 15117  01FCE8  006F FF8C  F02A    	movff	plusw1,btemp
 15118  01FCEE  0E02               	movlw	2
 15119  01FCF0  5E2A               	subwf	btemp^0,f,c
 15120  01FCF2  A0D8               	btfss	status,0,c
 15121  01FCF4  D00F               	goto	l11688
 15122  01FCF6                     u10830:
 15123                           
 15124                           ;stkvar	_t @ sp[(-4)+0]
 15125  01FCF6  50E1               	movf	fsr1l,w,c
 15126  01FCF8  0FFC               	addlw	-4
 15127  01FCFA  6ED9               	movwf	fsr2l,c
 15128  01FCFC  50E2               	movf	fsr1h,w,c
 15129  01FCFE  6EDA               	movwf	fsr2h,c
 15130  01FD00  0EFF               	movlw	255
 15131  01FD02  22DA               	addwfc	fsr2h,f,c
 15132  01FD04  0E80               	movlw	128
 15133  01FD06  26DE               	addwf	postinc2,f,c
 15134  01FD08  0E51               	movlw	81
 15135  01FD0A  22DE               	addwfc	postinc2,f,c
 15136  01FD0C  0E01               	movlw	1
 15137  01FD0E  22DE               	addwfc	postinc2,f,c
 15138  01FD10  0E00               	movlw	0
 15139  01FD12  22DE               	addwfc	postinc2,f,c
 15140  01FD14                     l11688:
 15141                           
 15142                           ;stkvar	_t @ sp[(-4)+0]
 15143  01FD14  0EFC               	movlw	-4
 15144  01FD16  006F FF8C  F02A    	movff	plusw1,btemp
 15145  01FD1C  0EFD               	movlw	-3
 15146  01FD1E  006F FF8C  F02B    	movff	plusw1,btemp+1
 15147  01FD24  0EFE               	movlw	-2
 15148  01FD26  006F FF8C  F02C    	movff	plusw1,btemp+2
 15149  01FD2C  0EFF               	movlw	-1
 15150  01FD2E  006F FF8C  F02D    	movff	plusw1,btemp+3
 15151                           
 15152                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15153  01FD34  0EF8               	movlw	248
 15154  01FD36  26E1               	addwf	fsr1l,f,c
 15155  01FD38  0EFF               	movlw	255
 15156  01FD3A  22E2               	addwfc	fsr1h,f,c
 15157  01FD3C  0012               	return		;funcret
 15158  01FD3E                     __end_of___month_to_secs:
 15159                           	opt callstack 0
 15160                           
 15161 ;; *************** function _do_tzset *****************
 15162 ;; Defined at:
 15163 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15164 ;; Parameters:    Size  Location     Type
 15165 ;;		None
 15166 ;; Auto vars:     Size  Location     Type
 15167 ;;  s               2  [STACK] PTR const unsigned char 
 15168 ;;		 -> __gmt(4), 
 15169 ;; Return value:  Size  Location     Type
 15170 ;;                  1  [STACK] void 
 15171 ;; Registers used:
 15172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15173 ;; Tracked objects:
 15174 ;;		On entry : 0/39
 15175 ;;		On exit  : 0/0
 15176 ;;		Unchanged: 0/0
 15177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15182 ;;Total ram usage:        0 bytes
 15183 ;; Hardware stack levels used:    1
 15184 ;; Hardware stack levels required when called:   18
 15185 ;; This function calls:
 15186 ;;		_getname
 15187 ;;		_getoff
 15188 ;;		_getrule
 15189 ;; This function is called by:
 15190 ;;		___secs_to_zone
 15191 ;; This function uses a reentrant model
 15192 ;;
 15193                           
 15194                           	psect	text44
 15195  01B748                     __ptext44:
 15196                           	opt callstack 0
 15197  01B748                     _do_tzset:
 15198                           	opt callstack 0
 15199                           
 15200                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15201  01B748  52E6               	movf	postinc1,f,c
 15202  01B74A  52E6               	movf	postinc1,f,c
 15203                           
 15204                           ;stkvar	_s @ sp[(-2)+0]
 15205                           
 15206                           ;incstack = 0
 15207  01B74C  0EFA               	movlw	high ___gmt
 15208  01B74E  6E2A               	movwf	btemp^0,c
 15209  01B750  0EFF               	movlw	-1
 15210  01B752  0060  F0AB  FFE3   	movff	btemp,plusw1
 15211  01B758  0E13               	movlw	low ___gmt
 15212  01B75A  6E2A               	movwf	btemp^0,c
 15213  01B75C  0EFE               	movlw	-2
 15214  01B75E  0060  F0AB  FFE3   	movff	btemp,plusw1
 15215                           
 15216                           ;stkvar	_s @ sp[(-2)+0]
 15217  01B764  0EFE               	movlw	254
 15218  01B766  24E1               	addwf	fsr1l,w,c
 15219  01B768  6E2A               	movwf	btemp^0,c
 15220  01B76A  0EFF               	movlw	255
 15221  01B76C  20E2               	addwfc	fsr1h,w,c
 15222  01B76E  6E2B               	movwf	(btemp+1)^0,c
 15223  01B770  0060  F0AB  FFE6   	movff	btemp,postinc1
 15224  01B776  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15225  01B77C  0EF6               	movlw	low _std_name
 15226  01B77E  6EE6               	movwf	postinc1,c
 15227  01B780  0E01               	movlw	high _std_name
 15228  01B782  6EE6               	movwf	postinc1,c
 15229  01B784  EC78  F0D4         	call	_getname	;wreg free
 15230  01B788  0EF6               	movlw	low _std_name
 15231  01B78A  0100               	movlb	0	; () banked
 15232  01B78C  6F6C               	movwf	___tzname& (0+255),b
 15233  01B78E  0E01               	movlw	high _std_name
 15234  01B790  6F6D               	movwf	(___tzname+1)& (0+255),b
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;stkvar	_s @ sp[(-2)+0]
 15238  01B792  0EFE               	movlw	254
 15239  01B794  24E1               	addwf	fsr1l,w,c
 15240  01B796  6E2A               	movwf	btemp^0,c
 15241  01B798  0EFF               	movlw	255
 15242  01B79A  20E2               	addwfc	fsr1h,w,c
 15243  01B79C  6E2B               	movwf	(btemp+1)^0,c
 15244  01B79E  0060  F0AB  FFE6   	movff	btemp,postinc1
 15245  01B7A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15246  01B7AA  EC30  F0E5         	call	_getoff	;wreg free
 15247  01B7AE  0060  F0A8  F070   	movff	btemp,___timezone
 15248  01B7B4  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15249  01B7BA  0100               	movlb	0	; () banked
 15250  01B7BC  0E00               	movlw	0
 15251  01B7BE  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15252  01B7C0  0EFF               	movlw	-1
 15253  01B7C2  6F72               	movwf	(___timezone+2)& (0+255),b
 15254  01B7C4  6F73               	movwf	(___timezone+3)& (0+255),b
 15255                           
 15256                           ; BSR set to: 0
 15257                           ;stkvar	_s @ sp[(-2)+0]
 15258  01B7C6  0EFE               	movlw	254
 15259  01B7C8  24E1               	addwf	fsr1l,w,c
 15260  01B7CA  6E2A               	movwf	btemp^0,c
 15261  01B7CC  0EFF               	movlw	255
 15262  01B7CE  20E2               	addwfc	fsr1h,w,c
 15263  01B7D0  6E2B               	movwf	(btemp+1)^0,c
 15264  01B7D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 15265  01B7D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15266  01B7DE  0EEF               	movlw	low _dst_name
 15267  01B7E0  6EE6               	movwf	postinc1,c
 15268  01B7E2  0E01               	movlw	high _dst_name
 15269  01B7E4  6EE6               	movwf	postinc1,c
 15270  01B7E6  EC78  F0D4         	call	_getname	;wreg free
 15271  01B7EA  0EEF               	movlw	low _dst_name
 15272  01B7EC  0100               	movlb	0	; () banked
 15273  01B7EE  6F6E               	movwf	(___tzname+2)& (0+255),b
 15274  01B7F0  0E01               	movlw	high _dst_name
 15275  01B7F2  6F6F               	movwf	(___tzname+3)& (0+255),b
 15276                           
 15277                           ; BSR set to: 0
 15278  01B7F4  0101               	movlb	1	; () banked
 15279  01B7F6  51EF               	movf	_dst_name& (0+255),w,b
 15280  01B7F8  B4D8               	btfsc	status,2,c
 15281  01B7FA  D070               	goto	l3967
 15282                           
 15283                           ; BSR set to: 1
 15284  01B7FC  0E00               	movlw	0
 15285  01B7FE  0100               	movlb	0	; () banked
 15286  01B800  6FB9               	movwf	(___daylight+1)& (0+255),b
 15287  01B802  0E01               	movlw	1
 15288  01B804  6FB8               	movwf	___daylight& (0+255),b
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;stkvar	_s @ sp[(-2)+0]
 15292  01B806  50E1               	movf	fsr1l,w,c
 15293  01B808  0FFE               	addlw	-2
 15294  01B80A  6ED9               	movwf	fsr2l,c
 15295  01B80C  50E2               	movf	fsr1h,w,c
 15296  01B80E  6EDA               	movwf	fsr2h,c
 15297  01B810  0EFF               	movlw	255
 15298  01B812  22DA               	addwfc	fsr2h,f,c
 15299  01B814  006F FF7B FFF6     	movff	postinc2,tblptrl
 15300  01B81A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15301  01B820                     	if	0	;tblptru may be non-zero
 15302  01B820                     	endif
 15303  01B820                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15304  01B820  0E00               	movlw	low (__mediumconst shr (0+16))
 15305  01B822  6EF8               	movwf	tblptru,c
 15306  01B824                     	endif
 15307  01B824  0008               	tblrd		*
 15308  01B826  50F5               	movf	tablat,w,c
 15309  01B828  0A2B               	xorlw	43
 15310  01B82A  B4D8               	btfsc	status,2,c
 15311  01B82C  D035               	goto	u15950
 15312                           
 15313                           ; BSR set to: 0
 15314                           ;stkvar	_s @ sp[(-2)+0]
 15315  01B82E  50E1               	movf	fsr1l,w,c
 15316  01B830  0FFE               	addlw	-2
 15317  01B832  6ED9               	movwf	fsr2l,c
 15318  01B834  50E2               	movf	fsr1h,w,c
 15319  01B836  6EDA               	movwf	fsr2h,c
 15320  01B838  0EFF               	movlw	255
 15321  01B83A  22DA               	addwfc	fsr2h,f,c
 15322  01B83C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15323  01B842  006F FF77 FFF7     	movff	postdec2,tblptrh
 15324  01B848                     	if	0	;tblptru may be non-zero
 15325  01B848                     	endif
 15326  01B848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15327  01B848  0E00               	movlw	low (__mediumconst shr (0+16))
 15328  01B84A  6EF8               	movwf	tblptru,c
 15329  01B84C                     	endif
 15330  01B84C  0008               	tblrd		*
 15331  01B84E  50F5               	movf	tablat,w,c
 15332  01B850  0A2D               	xorlw	45
 15333  01B852  B4D8               	btfsc	status,2,c
 15334  01B854  D021               	goto	u15950
 15335                           
 15336                           ; BSR set to: 0
 15337  01B856  0ED0               	movlw	208
 15338  01B858  6E34               	movwf	(btemp+10)^0,c
 15339  01B85A  0EFF               	movlw	255
 15340  01B85C  6E35               	movwf	(btemp+11)^0,c
 15341                           
 15342                           ;stkvar	_s @ sp[(-2)+0]
 15343  01B85E  50E1               	movf	fsr1l,w,c
 15344  01B860  0FFE               	addlw	-2
 15345  01B862  6ED9               	movwf	fsr2l,c
 15346  01B864  50E2               	movf	fsr1h,w,c
 15347  01B866  6EDA               	movwf	fsr2h,c
 15348  01B868  0EFF               	movlw	255
 15349  01B86A  22DA               	addwfc	fsr2h,f,c
 15350  01B86C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15351  01B872  006F FF77 FFF7     	movff	postdec2,tblptrh
 15352  01B878                     	if	0	;tblptru may be non-zero
 15353  01B878                     	endif
 15354  01B878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15355  01B878  0E00               	movlw	low (__mediumconst shr (0+16))
 15356  01B87A  6EF8               	movwf	tblptru,c
 15357  01B87C                     	endif
 15358  01B87C  0008               	tblrd		*
 15359  01B87E  50F5               	movf	tablat,w,c
 15360  01B880  6E32               	movwf	(btemp+8)^0,c
 15361  01B882  6A33               	clrf	(btemp+9)^0,c
 15362  01B884  5034               	movf	(btemp+10)^0,w,c
 15363  01B886  2632               	addwf	(btemp+8)^0,f,c
 15364  01B888  5035               	movf	(btemp+11)^0,w,c
 15365  01B88A  2233               	addwfc	(btemp+9)^0,f,c
 15366  01B88C  5033               	movf	(btemp+9)^0,w,c
 15367  01B88E  E119               	bnz	l16340
 15368  01B890  0E0A               	movlw	10
 15369  01B892  5C32               	subwf	(btemp+8)^0,w,c
 15370  01B894  B0D8               	btfsc	status,0,c
 15371  01B896  D015               	goto	l16340
 15372  01B898                     u15950:
 15373                           
 15374                           ; BSR set to: 0
 15375                           ;stkvar	_s @ sp[(-2)+0]
 15376  01B898  0EFE               	movlw	254
 15377  01B89A  24E1               	addwf	fsr1l,w,c
 15378  01B89C  6E2A               	movwf	btemp^0,c
 15379  01B89E  0EFF               	movlw	255
 15380  01B8A0  20E2               	addwfc	fsr1h,w,c
 15381  01B8A2  6E2B               	movwf	(btemp+1)^0,c
 15382  01B8A4  0060  F0AB  FFE6   	movff	btemp,postinc1
 15383  01B8AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15384  01B8B0  EC30  F0E5         	call	_getoff	;wreg free
 15385  01B8B4  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15386  01B8BA  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15387  01B8C0  D012               	goto	l16342
 15388  01B8C2                     l16340:
 15389                           
 15390                           ; BSR set to: 0
 15391  01B8C2  0060  F1C0  F034   	movff	___timezone,btemp+10
 15392  01B8C8  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15393  01B8CE  0EF0               	movlw	240
 15394  01B8D0  2434               	addwf	(btemp+10)^0,w,c
 15395  01B8D2  6FB6               	movwf	_dst_off& (0+255),b
 15396  01B8D4  0EF1               	movlw	241
 15397  01B8D6  2035               	addwfc	(btemp+11)^0,w,c
 15398  01B8D8  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15399  01B8DA  D005               	goto	l16342
 15400  01B8DC                     l3967:
 15401                           
 15402                           ; BSR set to: 1
 15403  01B8DC  0100               	movlb	0	; () banked
 15404  01B8DE  6BB8               	clrf	___daylight& (0+255),b
 15405  01B8E0  6BB9               	clrf	(___daylight+1)& (0+255),b
 15406  01B8E2  6BB6               	clrf	_dst_off& (0+255),b
 15407  01B8E4  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15408  01B8E6                     l16342:
 15409                           
 15410                           ;stkvar	_s @ sp[(-2)+0]
 15411  01B8E6  50E1               	movf	fsr1l,w,c
 15412  01B8E8  0FFE               	addlw	-2
 15413  01B8EA  6ED9               	movwf	fsr2l,c
 15414  01B8EC  50E2               	movf	fsr1h,w,c
 15415  01B8EE  6EDA               	movwf	fsr2h,c
 15416  01B8F0  0EFF               	movlw	255
 15417  01B8F2  22DA               	addwfc	fsr2h,f,c
 15418  01B8F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15419  01B8FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15420  01B900                     	if	0	;tblptru may be non-zero
 15421  01B900                     	endif
 15422  01B900                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15423  01B900  0E00               	movlw	low (__mediumconst shr (0+16))
 15424  01B902  6EF8               	movwf	tblptru,c
 15425  01B904                     	endif
 15426  01B904  0008               	tblrd		*
 15427  01B906  50F5               	movf	tablat,w,c
 15428  01B908  0A2C               	xorlw	44
 15429  01B90A  A4D8               	btfss	status,2,c
 15430  01B90C  D023               	goto	l16348
 15431                           
 15432                           ;stkvar	_s @ sp[(-2)+0]
 15433  01B90E  0EFE               	movlw	-2
 15434  01B910  50E3               	movf	plusw1,w,c
 15435  01B912  0F01               	addlw	1
 15436  01B914  6E2A               	movwf	btemp^0,c
 15437  01B916  0EFE               	movlw	-2
 15438  01B918  0060  F0AB  FFE3   	movff	btemp,plusw1
 15439  01B91E  6A2A               	clrf	btemp^0,c
 15440  01B920  0EFF               	movlw	-1
 15441  01B922  50E3               	movf	plusw1,w,c
 15442  01B924  202A               	addwfc	btemp^0,w,c
 15443  01B926  6E2A               	movwf	btemp^0,c
 15444  01B928  0EFF               	movlw	-1
 15445  01B92A  0060  F0AB  FFE3   	movff	btemp,plusw1
 15446  01B930  0EE5               	movlw	low _r0
 15447  01B932  6EE6               	movwf	postinc1,c
 15448  01B934  0E01               	movlw	high _r0
 15449  01B936  6EE6               	movwf	postinc1,c
 15450                           
 15451                           ;stkvar	_s @ sp[(-4)+0]
 15452  01B938  0EFC               	movlw	252
 15453  01B93A  24E1               	addwf	fsr1l,w,c
 15454  01B93C  6E2A               	movwf	btemp^0,c
 15455  01B93E  0EFF               	movlw	255
 15456  01B940  20E2               	addwfc	fsr1h,w,c
 15457  01B942  6E2B               	movwf	(btemp+1)^0,c
 15458  01B944  0060  F0AB  FFE6   	movff	btemp,postinc1
 15459  01B94A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15460  01B950  ECE4  F0DC         	call	_getrule	;wreg free
 15461  01B954                     l16348:
 15462                           
 15463                           ;stkvar	_s @ sp[(-2)+0]
 15464  01B954  50E1               	movf	fsr1l,w,c
 15465  01B956  0FFE               	addlw	-2
 15466  01B958  6ED9               	movwf	fsr2l,c
 15467  01B95A  50E2               	movf	fsr1h,w,c
 15468  01B95C  6EDA               	movwf	fsr2h,c
 15469  01B95E  0EFF               	movlw	255
 15470  01B960  22DA               	addwfc	fsr2h,f,c
 15471  01B962  006F FF7B FFF6     	movff	postinc2,tblptrl
 15472  01B968  006F FF77 FFF7     	movff	postdec2,tblptrh
 15473  01B96E                     	if	0	;tblptru may be non-zero
 15474  01B96E                     	endif
 15475  01B96E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15476  01B96E  0E00               	movlw	low (__mediumconst shr (0+16))
 15477  01B970  6EF8               	movwf	tblptru,c
 15478  01B972                     	endif
 15479  01B972  0008               	tblrd		*
 15480  01B974  50F5               	movf	tablat,w,c
 15481  01B976  0A2C               	xorlw	44
 15482  01B978  A4D8               	btfss	status,2,c
 15483  01B97A  D023               	goto	l3975
 15484                           
 15485                           ;stkvar	_s @ sp[(-2)+0]
 15486  01B97C  0EFE               	movlw	-2
 15487  01B97E  50E3               	movf	plusw1,w,c
 15488  01B980  0F01               	addlw	1
 15489  01B982  6E2A               	movwf	btemp^0,c
 15490  01B984  0EFE               	movlw	-2
 15491  01B986  0060  F0AB  FFE3   	movff	btemp,plusw1
 15492  01B98C  6A2A               	clrf	btemp^0,c
 15493  01B98E  0EFF               	movlw	-1
 15494  01B990  50E3               	movf	plusw1,w,c
 15495  01B992  202A               	addwfc	btemp^0,w,c
 15496  01B994  6E2A               	movwf	btemp^0,c
 15497  01B996  0EFF               	movlw	-1
 15498  01B998  0060  F0AB  FFE3   	movff	btemp,plusw1
 15499  01B99E  0EDB               	movlw	low _r1
 15500  01B9A0  6EE6               	movwf	postinc1,c
 15501  01B9A2  0E01               	movlw	high _r1
 15502  01B9A4  6EE6               	movwf	postinc1,c
 15503                           
 15504                           ;stkvar	_s @ sp[(-4)+0]
 15505  01B9A6  0EFC               	movlw	252
 15506  01B9A8  24E1               	addwf	fsr1l,w,c
 15507  01B9AA  6E2A               	movwf	btemp^0,c
 15508  01B9AC  0EFF               	movlw	255
 15509  01B9AE  20E2               	addwfc	fsr1h,w,c
 15510  01B9B0  6E2B               	movwf	(btemp+1)^0,c
 15511  01B9B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 15512  01B9B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15513  01B9BE  ECE4  F0DC         	call	_getrule	;wreg free
 15514  01B9C2                     l3975:
 15515                           
 15516                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15517  01B9C2  52E5               	movf	postdec1,f,c
 15518  01B9C4  52E5               	movf	postdec1,f,c
 15519  01B9C6  0012               	return		;funcret
 15520  01B9C8                     __end_of_do_tzset:
 15521                           	opt callstack 0
 15522                           
 15523 ;; *************** function _getrule *****************
 15524 ;; Defined at:
 15525 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15526 ;; Parameters:    Size  Location     Type
 15527 ;;  p               2  [STACK] PTR PTR const unsigned c
 15528 ;;		 -> s(2), 
 15529 ;;  rule            2  [STACK] PTR int 
 15530 ;;		 -> r1(10), r0(10), 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  r               2  [STACK] int 
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1  [STACK] void 
 15535 ;; Registers used:
 15536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15546 ;;Total ram usage:        0 bytes
 15547 ;; Hardware stack levels used:    1
 15548 ;; Hardware stack levels required when called:   17
 15549 ;; This function calls:
 15550 ;;		_getint
 15551 ;;		_getoff
 15552 ;; This function is called by:
 15553 ;;		_do_tzset
 15554 ;; This function uses a reentrant model
 15555 ;;
 15556                           
 15557                           	psect	text45
 15558  01B9C8                     __ptext45:
 15559                           	opt callstack 0
 15560  01B9C8                     _getrule:
 15561                           	opt callstack 0
 15562                           
 15563                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15564  01B9C8  52E6               	movf	postinc1,f,c
 15565  01B9CA  52E6               	movf	postinc1,f,c
 15566                           
 15567                           ;stkvar	_p @ sp[(-2)+-2]
 15568                           
 15569                           ;incstack = 0
 15570  01B9CC  0EFC               	movlw	-4
 15571  01B9CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15572  01B9D4  0EFD               	movlw	-3
 15573  01B9D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15574  01B9DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15575  01B9E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15576  01B9E8                     	if	0	;tblptru may be non-zero
 15577  01B9E8                     	endif
 15578  01B9E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15579  01B9E8  0E00               	movlw	low (__mediumconst shr (0+16))
 15580  01B9EA  6EF8               	movwf	tblptru,c
 15581  01B9EC                     	endif
 15582  01B9EC  0008               	tblrd		*
 15583  01B9EE  50F5               	movf	tablat,w,c
 15584  01B9F0  6E34               	movwf	(btemp+10)^0,c
 15585  01B9F2  6A35               	clrf	(btemp+11)^0,c
 15586                           
 15587                           ;stkvar	_rule @ sp[(-2)+-4]
 15588  01B9F4  0EFA               	movlw	-6
 15589  01B9F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15590  01B9FC  0EFB               	movlw	-5
 15591  01B9FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15592  01BA04  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15593  01BA0A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15594  01BA10  006F FF78  F034    	movff	postinc2,btemp+10
 15595  01BA16  006F FF74  F035    	movff	postdec2,btemp+11
 15596                           
 15597                           ;stkvar	_r @ sp[(-2)+0]
 15598  01BA1C  0EFE               	movlw	-2
 15599  01BA1E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15600  01BA24  0EFF               	movlw	-1
 15601  01BA26  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15602                           
 15603                           ;stkvar	_r @ sp[(-2)+0]
 15604  01BA2C  0EFE               	movlw	-2
 15605  01BA2E  006F FF8C  F02A    	movff	plusw1,btemp
 15606  01BA34  0E4D               	movlw	77
 15607  01BA36  182A               	xorwf	btemp^0,w,c
 15608  01BA38  E104               	bnz	u15530
 15609  01BA3A  0EFF               	movlw	-1
 15610  01BA3C  50E3               	movf	plusw1,w,c
 15611  01BA3E  B4D8               	btfsc	status,2,c
 15612  01BA40  D036               	goto	l16038
 15613  01BA42                     u15530:
 15614                           
 15615                           ;stkvar	_r @ sp[(-2)+0]
 15616  01BA42  0EFE               	movlw	-2
 15617  01BA44  006F FF8C  F02A    	movff	plusw1,btemp
 15618  01BA4A  0E4A               	movlw	74
 15619  01BA4C  182A               	xorwf	btemp^0,w,c
 15620  01BA4E  E110               	bnz	l16034
 15621  01BA50  0EFF               	movlw	-1
 15622  01BA52  50E3               	movf	plusw1,w,c
 15623  01BA54  A4D8               	btfss	status,2,c
 15624  01BA56  D00C               	goto	l16034
 15625                           
 15626                           ;stkvar	_p @ sp[(-2)+-2]
 15627  01BA58  0EFC               	movlw	-4
 15628  01BA5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15629  01BA60  0EFD               	movlw	-3
 15630  01BA62  006F FF8F FFDA     	movff	plusw1,fsr2h
 15631  01BA68  2ADE               	incf	postinc2,f,c
 15632  01BA6A  0E00               	movlw	0
 15633  01BA6C  22DD               	addwfc	postdec2,f,c
 15634  01BA6E  D00C               	goto	l16036
 15635  01BA70                     l16034:
 15636                           
 15637                           ;stkvar	_rule @ sp[(-2)+-4]
 15638  01BA70  0EFA               	movlw	-6
 15639  01BA72  006F FF8F FFD9     	movff	plusw1,fsr2l
 15640  01BA78  0EFB               	movlw	-5
 15641  01BA7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15642  01BA80  0E00               	movlw	0
 15643  01BA82  6EDE               	movwf	postinc2,c
 15644  01BA84  0E00               	movlw	0
 15645  01BA86  6EDD               	movwf	postdec2,c
 15646  01BA88                     l16036:
 15647                           
 15648                           ;stkvar	_p @ sp[(-2)+-2]
 15649  01BA88  0EFC               	movlw	-4
 15650  01BA8A  006F FF8F FFE6     	movff	plusw1,postinc1
 15651  01BA90  006F FF8F FFE6     	movff	plusw1,postinc1
 15652  01BA96  ECB0  F0FD         	call	_getint	;wreg free
 15653                           
 15654                           ;stkvar	_rule @ sp[(-2)+-4]
 15655  01BA9A  0EFA               	movlw	-6
 15656  01BA9C  006F FF8C  F034    	movff	plusw1,btemp+10
 15657  01BAA2  0EFB               	movlw	-5
 15658  01BAA4  006F FF8C  F035    	movff	plusw1,btemp+11
 15659  01BAAA  0E02               	movlw	2
 15660  01BAAC  D06D               	goto	L16
 15661  01BAAE                     l16038:
 15662                           
 15663                           ;stkvar	_p @ sp[(-2)+-2]
 15664  01BAAE  0EFC               	movlw	-4
 15665  01BAB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15666  01BAB6  0EFD               	movlw	-3
 15667  01BAB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15668  01BABE  2ADE               	incf	postinc2,f,c
 15669  01BAC0  0E00               	movlw	0
 15670  01BAC2  22DD               	addwfc	postdec2,f,c
 15671                           
 15672                           ;stkvar	_p @ sp[(-2)+-2]
 15673  01BAC4  0EFC               	movlw	-4
 15674  01BAC6  006F FF8F FFE6     	movff	plusw1,postinc1
 15675  01BACC  006F FF8F FFE6     	movff	plusw1,postinc1
 15676  01BAD2  ECB0  F0FD         	call	_getint	;wreg free
 15677                           
 15678                           ;stkvar	_rule @ sp[(-2)+-4]
 15679  01BAD6  0EFA               	movlw	-6
 15680  01BAD8  006F FF8C  F034    	movff	plusw1,btemp+10
 15681  01BADE  0EFB               	movlw	-5
 15682  01BAE0  006F FF8C  F035    	movff	plusw1,btemp+11
 15683  01BAE6  0E02               	movlw	2
 15684  01BAE8  2434               	addwf	(btemp+10)^0,w,c
 15685  01BAEA  6ED9               	movwf	fsr2l,c
 15686  01BAEC  0E00               	movlw	0
 15687  01BAEE  2035               	addwfc	(btemp+11)^0,w,c
 15688  01BAF0  6EDA               	movwf	fsr2h,c
 15689  01BAF2  0060  F0AB  FFDE   	movff	btemp,postinc2
 15690  01BAF8  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15691                           
 15692                           ;stkvar	_p @ sp[(-2)+-2]
 15693  01BAFE  0EFC               	movlw	-4
 15694  01BB00  006F FF8F FFD9     	movff	plusw1,fsr2l
 15695  01BB06  0EFD               	movlw	-3
 15696  01BB08  006F FF8F FFDA     	movff	plusw1,fsr2h
 15697  01BB0E  2ADE               	incf	postinc2,f,c
 15698  01BB10  0E00               	movlw	0
 15699  01BB12  22DD               	addwfc	postdec2,f,c
 15700                           
 15701                           ;stkvar	_p @ sp[(-2)+-2]
 15702  01BB14  0EFC               	movlw	-4
 15703  01BB16  006F FF8F FFE6     	movff	plusw1,postinc1
 15704  01BB1C  006F FF8F FFE6     	movff	plusw1,postinc1
 15705  01BB22  ECB0  F0FD         	call	_getint	;wreg free
 15706                           
 15707                           ;stkvar	_rule @ sp[(-2)+-4]
 15708  01BB26  0EFA               	movlw	-6
 15709  01BB28  006F FF8C  F034    	movff	plusw1,btemp+10
 15710  01BB2E  0EFB               	movlw	-5
 15711  01BB30  006F FF8C  F035    	movff	plusw1,btemp+11
 15712  01BB36  0E04               	movlw	4
 15713  01BB38  2434               	addwf	(btemp+10)^0,w,c
 15714  01BB3A  6ED9               	movwf	fsr2l,c
 15715  01BB3C  0E00               	movlw	0
 15716  01BB3E  2035               	addwfc	(btemp+11)^0,w,c
 15717  01BB40  6EDA               	movwf	fsr2h,c
 15718  01BB42  0060  F0AB  FFDE   	movff	btemp,postinc2
 15719  01BB48  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15720                           
 15721                           ;stkvar	_p @ sp[(-2)+-2]
 15722  01BB4E  0EFC               	movlw	-4
 15723  01BB50  006F FF8F FFD9     	movff	plusw1,fsr2l
 15724  01BB56  0EFD               	movlw	-3
 15725  01BB58  006F FF8F FFDA     	movff	plusw1,fsr2h
 15726  01BB5E  2ADE               	incf	postinc2,f,c
 15727  01BB60  0E00               	movlw	0
 15728  01BB62  22DD               	addwfc	postdec2,f,c
 15729                           
 15730                           ;stkvar	_p @ sp[(-2)+-2]
 15731  01BB64  0EFC               	movlw	-4
 15732  01BB66  006F FF8F FFE6     	movff	plusw1,postinc1
 15733  01BB6C  006F FF8F FFE6     	movff	plusw1,postinc1
 15734  01BB72  ECB0  F0FD         	call	_getint	;wreg free
 15735                           
 15736                           ;stkvar	_rule @ sp[(-2)+-4]
 15737  01BB76  0EFA               	movlw	-6
 15738  01BB78  006F FF8C  F034    	movff	plusw1,btemp+10
 15739  01BB7E  0EFB               	movlw	-5
 15740  01BB80  006F FF8C  F035    	movff	plusw1,btemp+11
 15741  01BB86  0E06               	movlw	6
 15742  01BB88                     L16:
 15743  01BB88  2434               	addwf	(btemp+10)^0,w,c
 15744  01BB8A  6ED9               	movwf	fsr2l,c
 15745  01BB8C  0E00               	movlw	0
 15746  01BB8E  2035               	addwfc	(btemp+11)^0,w,c
 15747  01BB90  6EDA               	movwf	fsr2h,c
 15748  01BB92  0060  F0AB  FFDE   	movff	btemp,postinc2
 15749  01BB98  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15750                           
 15751                           ;stkvar	_p @ sp[(-2)+-2]
 15752  01BB9E  0EFC               	movlw	-4
 15753  01BBA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15754  01BBA6  0EFD               	movlw	-3
 15755  01BBA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15756  01BBAE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15757  01BBB4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15758  01BBBA                     	if	0	;tblptru may be non-zero
 15759  01BBBA                     	endif
 15760  01BBBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15761  01BBBA  0E00               	movlw	low (__mediumconst shr (0+16))
 15762  01BBBC  6EF8               	movwf	tblptru,c
 15763  01BBBE                     	endif
 15764  01BBBE  0008               	tblrd		*
 15765  01BBC0  50F5               	movf	tablat,w,c
 15766  01BBC2  0A2F               	xorlw	47
 15767  01BBC4  A4D8               	btfss	status,2,c
 15768  01BBC6  D029               	goto	l16054
 15769                           
 15770                           ;stkvar	_p @ sp[(-2)+-2]
 15771  01BBC8  0EFC               	movlw	-4
 15772  01BBCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15773  01BBD0  0EFD               	movlw	-3
 15774  01BBD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15775  01BBD8  2ADE               	incf	postinc2,f,c
 15776  01BBDA  0E00               	movlw	0
 15777  01BBDC  22DD               	addwfc	postdec2,f,c
 15778                           
 15779                           ;stkvar	_p @ sp[(-2)+-2]
 15780  01BBDE  0EFC               	movlw	-4
 15781  01BBE0  006F FF8F FFE6     	movff	plusw1,postinc1
 15782  01BBE6  006F FF8F FFE6     	movff	plusw1,postinc1
 15783  01BBEC  EC30  F0E5         	call	_getoff	;wreg free
 15784                           
 15785                           ;stkvar	_rule @ sp[(-2)+-4]
 15786  01BBF0  0EFA               	movlw	-6
 15787  01BBF2  006F FF8C  F034    	movff	plusw1,btemp+10
 15788  01BBF8  0EFB               	movlw	-5
 15789  01BBFA  006F FF8C  F035    	movff	plusw1,btemp+11
 15790  01BC00  0E08               	movlw	8
 15791  01BC02  2434               	addwf	(btemp+10)^0,w,c
 15792  01BC04  6ED9               	movwf	fsr2l,c
 15793  01BC06  0E00               	movlw	0
 15794  01BC08  2035               	addwfc	(btemp+11)^0,w,c
 15795  01BC0A  6EDA               	movwf	fsr2h,c
 15796  01BC0C  0060  F0AB  FFDE   	movff	btemp,postinc2
 15797  01BC12  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15798  01BC18  D012               	goto	l3940
 15799  01BC1A                     l16054:
 15800                           
 15801                           ;stkvar	_rule @ sp[(-2)+-4]
 15802  01BC1A  0EFA               	movlw	-6
 15803  01BC1C  006F FF8C  F034    	movff	plusw1,btemp+10
 15804  01BC22  0EFB               	movlw	-5
 15805  01BC24  006F FF8C  F035    	movff	plusw1,btemp+11
 15806  01BC2A  0E08               	movlw	8
 15807  01BC2C  2434               	addwf	(btemp+10)^0,w,c
 15808  01BC2E  6ED9               	movwf	fsr2l,c
 15809  01BC30  0E00               	movlw	0
 15810  01BC32  2035               	addwfc	(btemp+11)^0,w,c
 15811  01BC34  6EDA               	movwf	fsr2h,c
 15812  01BC36  0E20               	movlw	32
 15813  01BC38  6EDE               	movwf	postinc2,c
 15814  01BC3A  0E1C               	movlw	28
 15815  01BC3C  6EDD               	movwf	postdec2,c
 15816  01BC3E                     l3940:
 15817                           
 15818                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15819  01BC3E  0EFA               	movlw	250
 15820  01BC40  26E1               	addwf	fsr1l,f,c
 15821  01BC42  0EFF               	movlw	255
 15822  01BC44  22E2               	addwfc	fsr1h,f,c
 15823  01BC46  0012               	return		;funcret
 15824  01BC48                     __end_of_getrule:
 15825                           	opt callstack 0
 15826                           
 15827 ;; *************** function _getoff *****************
 15828 ;; Defined at:
 15829 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15830 ;; Parameters:    Size  Location     Type
 15831 ;;  p               2  [STACK] PTR PTR const unsigned c
 15832 ;;		 -> s(2), 
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;  off             2  [STACK] int 
 15835 ;;  neg             2  [STACK] int 
 15836 ;; Return value:  Size  Location     Type
 15837 ;;                  2  [STACK] int 
 15838 ;; Registers used:
 15839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15840 ;; Tracked objects:
 15841 ;;		On entry : 0/0
 15842 ;;		On exit  : 0/0
 15843 ;;		Unchanged: 0/0
 15844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15849 ;;Total ram usage:        0 bytes
 15850 ;; Hardware stack levels used:    1
 15851 ;; Hardware stack levels required when called:   16
 15852 ;; This function calls:
 15853 ;;		_getint
 15854 ;; This function is called by:
 15855 ;;		_getrule
 15856 ;;		_do_tzset
 15857 ;; This function uses a reentrant model
 15858 ;;
 15859                           
 15860                           	psect	text46
 15861  01CA60                     __ptext46:
 15862                           	opt callstack 0
 15863  01CA60                     _getoff:
 15864                           	opt callstack 0
 15865                           
 15866                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15867  01CA60  52E6               	movf	postinc1,f,c
 15868  01CA62  52E6               	movf	postinc1,f,c
 15869  01CA64  52E6               	movf	postinc1,f,c
 15870  01CA66  52E6               	movf	postinc1,f,c
 15871                           
 15872                           ;stkvar	_neg @ sp[(-4)+2]
 15873                           
 15874                           ;incstack = 0
 15875  01CA68  0EFE               	movlw	-2
 15876  01CA6A  6AE3               	clrf	plusw1,c
 15877  01CA6C  0EFF               	movlw	-1
 15878  01CA6E  6AE3               	clrf	plusw1,c
 15879                           
 15880                           ;stkvar	_p @ sp[(-4)+-2]
 15881  01CA70  0EFA               	movlw	-6
 15882  01CA72  006F FF8F FFD9     	movff	plusw1,fsr2l
 15883  01CA78  0EFB               	movlw	-5
 15884  01CA7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15885  01CA80  006F FF7B FFF6     	movff	postinc2,tblptrl
 15886  01CA86  006F FF77 FFF7     	movff	postdec2,tblptrh
 15887  01CA8C                     	if	0	;tblptru may be non-zero
 15888  01CA8C                     	endif
 15889  01CA8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15890  01CA8C  0E00               	movlw	low (__mediumconst shr (0+16))
 15891  01CA8E  6EF8               	movwf	tblptru,c
 15892  01CA90                     	endif
 15893  01CA90  0008               	tblrd		*
 15894  01CA92  50F5               	movf	tablat,w,c
 15895  01CA94  0A2D               	xorlw	45
 15896  01CA96  A4D8               	btfss	status,2,c
 15897  01CA98  D018               	goto	l10814
 15898                           
 15899                           ;stkvar	_p @ sp[(-4)+-2]
 15900  01CA9A  0EFA               	movlw	-6
 15901  01CA9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15902  01CAA2  0EFB               	movlw	-5
 15903  01CAA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15904  01CAAA  2ADE               	incf	postinc2,f,c
 15905  01CAAC  0E00               	movlw	0
 15906  01CAAE  22DD               	addwfc	postdec2,f,c
 15907  01CAB0  0E01               	movlw	1
 15908  01CAB2  6E34               	movwf	(btemp+10)^0,c
 15909  01CAB4  0E00               	movlw	0
 15910  01CAB6  6E35               	movwf	(btemp+11)^0,c
 15911                           
 15912                           ;stkvar	_neg @ sp[(-4)+2]
 15913  01CAB8  0EFE               	movlw	-2
 15914  01CABA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15915  01CAC0  0EFF               	movlw	-1
 15916  01CAC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15917  01CAC8  D020               	goto	l10818
 15918  01CACA                     l10814:
 15919                           
 15920                           ;stkvar	_p @ sp[(-4)+-2]
 15921  01CACA  0EFA               	movlw	-6
 15922  01CACC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15923  01CAD2  0EFB               	movlw	-5
 15924  01CAD4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15925  01CADA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15926  01CAE0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15927  01CAE6                     	if	0	;tblptru may be non-zero
 15928  01CAE6                     	endif
 15929  01CAE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15930  01CAE6  0E00               	movlw	low (__mediumconst shr (0+16))
 15931  01CAE8  6EF8               	movwf	tblptru,c
 15932  01CAEA                     	endif
 15933  01CAEA  0008               	tblrd		*
 15934  01CAEC  50F5               	movf	tablat,w,c
 15935  01CAEE  0A2B               	xorlw	43
 15936  01CAF0  A4D8               	btfss	status,2,c
 15937  01CAF2  D00B               	goto	l10818
 15938                           
 15939                           ;stkvar	_p @ sp[(-4)+-2]
 15940  01CAF4  0EFA               	movlw	-6
 15941  01CAF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15942  01CAFC  0EFB               	movlw	-5
 15943  01CAFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15944  01CB04  2ADE               	incf	postinc2,f,c
 15945  01CB06  0E00               	movlw	0
 15946  01CB08  22DD               	addwfc	postdec2,f,c
 15947  01CB0A                     l10818:
 15948                           
 15949                           ;stkvar	_p @ sp[(-4)+-2]
 15950  01CB0A  0EFA               	movlw	-6
 15951  01CB0C  006F FF8F FFE6     	movff	plusw1,postinc1
 15952  01CB12  006F FF8F FFE6     	movff	plusw1,postinc1
 15953  01CB18  ECB0  F0FD         	call	_getint	;wreg free
 15954  01CB1C  0060  F0A8  F034   	movff	btemp,btemp+10
 15955  01CB22  0060  F0AC  F035   	movff	btemp+1,btemp+11
 15956  01CB28  0E10               	movlw	16
 15957  01CB2A  0234               	mulwf	(btemp+10)^0,c
 15958  01CB2C  006F FFCC  F032    	movff	prodl,btemp+8
 15959  01CB32  006F FFD0  F033    	movff	prodh,btemp+9
 15960  01CB38  0235               	mulwf	(btemp+11)^0,c
 15961  01CB3A  50F3               	movf	prodl,w,c
 15962  01CB3C  2633               	addwf	(btemp+9)^0,f,c
 15963  01CB3E  0E0E               	movlw	14
 15964  01CB40  0234               	mulwf	(btemp+10)^0,c
 15965  01CB42  50F3               	movf	prodl,w,c
 15966  01CB44  2633               	addwf	(btemp+9)^0,f,c
 15967                           
 15968                           ;stkvar	_off @ sp[(-4)+0]
 15969  01CB46  0EFC               	movlw	-4
 15970  01CB48  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15971  01CB4E  0EFD               	movlw	-3
 15972  01CB50  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15973                           
 15974                           ;stkvar	_p @ sp[(-4)+-2]
 15975  01CB56  0EFA               	movlw	-6
 15976  01CB58  006F FF8F FFD9     	movff	plusw1,fsr2l
 15977  01CB5E  0EFB               	movlw	-5
 15978  01CB60  006F FF8F FFDA     	movff	plusw1,fsr2h
 15979  01CB66  006F FF7B FFF6     	movff	postinc2,tblptrl
 15980  01CB6C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15981  01CB72                     	if	0	;tblptru may be non-zero
 15982  01CB72                     	endif
 15983  01CB72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15984  01CB72  0E00               	movlw	low (__mediumconst shr (0+16))
 15985  01CB74  6EF8               	movwf	tblptru,c
 15986  01CB76                     	endif
 15987  01CB76  0008               	tblrd		*
 15988  01CB78  50F5               	movf	tablat,w,c
 15989  01CB7A  0A3A               	xorlw	58
 15990  01CB7C  A4D8               	btfss	status,2,c
 15991  01CB7E  D064               	goto	l10832
 15992                           
 15993                           ;stkvar	_p @ sp[(-4)+-2]
 15994  01CB80  0EFA               	movlw	-6
 15995  01CB82  006F FF8F FFD9     	movff	plusw1,fsr2l
 15996  01CB88  0EFB               	movlw	-5
 15997  01CB8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15998  01CB90  2ADE               	incf	postinc2,f,c
 15999  01CB92  0E00               	movlw	0
 16000  01CB94  22DD               	addwfc	postdec2,f,c
 16001                           
 16002                           ;stkvar	_p @ sp[(-4)+-2]
 16003  01CB96  0EFA               	movlw	-6
 16004  01CB98  006F FF8F FFE6     	movff	plusw1,postinc1
 16005  01CB9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16006  01CBA4  ECB0  F0FD         	call	_getint	;wreg free
 16007  01CBA8  0060  F0A8  F034   	movff	btemp,btemp+10
 16008  01CBAE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16009  01CBB4  0E3C               	movlw	60
 16010  01CBB6  0234               	mulwf	(btemp+10)^0,c
 16011  01CBB8  006F FFCC  F032    	movff	prodl,btemp+8
 16012  01CBBE  006F FFD0  F033    	movff	prodh,btemp+9
 16013  01CBC4  0235               	mulwf	(btemp+11)^0,c
 16014  01CBC6  50F3               	movf	prodl,w,c
 16015  01CBC8  2633               	addwf	(btemp+9)^0,f,c
 16016                           
 16017                           ;stkvar	_off @ sp[(-4)+0]
 16018  01CBCA  50E1               	movf	fsr1l,w,c
 16019  01CBCC  0FFC               	addlw	-4
 16020  01CBCE  6ED9               	movwf	fsr2l,c
 16021  01CBD0  50E2               	movf	fsr1h,w,c
 16022  01CBD2  6EDA               	movwf	fsr2h,c
 16023  01CBD4  0EFF               	movlw	255
 16024  01CBD6  22DA               	addwfc	fsr2h,f,c
 16025  01CBD8  5032               	movf	(btemp+8)^0,w,c
 16026  01CBDA  26DE               	addwf	postinc2,f,c
 16027  01CBDC  5033               	movf	(btemp+9)^0,w,c
 16028  01CBDE  22DD               	addwfc	postdec2,f,c
 16029                           
 16030                           ;stkvar	_p @ sp[(-4)+-2]
 16031  01CBE0  0EFA               	movlw	-6
 16032  01CBE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16033  01CBE8  0EFB               	movlw	-5
 16034  01CBEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16035  01CBF0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16036  01CBF6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16037  01CBFC                     	if	0	;tblptru may be non-zero
 16038  01CBFC                     	endif
 16039  01CBFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16040  01CBFC  0E00               	movlw	low (__mediumconst shr (0+16))
 16041  01CBFE  6EF8               	movwf	tblptru,c
 16042  01CC00                     	endif
 16043  01CC00  0008               	tblrd		*
 16044  01CC02  50F5               	movf	tablat,w,c
 16045  01CC04  0A3A               	xorlw	58
 16046  01CC06  A4D8               	btfss	status,2,c
 16047  01CC08  D01F               	goto	l10832
 16048                           
 16049                           ;stkvar	_p @ sp[(-4)+-2]
 16050  01CC0A  0EFA               	movlw	-6
 16051  01CC0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16052  01CC12  0EFB               	movlw	-5
 16053  01CC14  006F FF8F FFDA     	movff	plusw1,fsr2h
 16054  01CC1A  2ADE               	incf	postinc2,f,c
 16055  01CC1C  0E00               	movlw	0
 16056  01CC1E  22DD               	addwfc	postdec2,f,c
 16057                           
 16058                           ;stkvar	_p @ sp[(-4)+-2]
 16059  01CC20  0EFA               	movlw	-6
 16060  01CC22  006F FF8F FFE6     	movff	plusw1,postinc1
 16061  01CC28  006F FF8F FFE6     	movff	plusw1,postinc1
 16062  01CC2E  ECB0  F0FD         	call	_getint	;wreg free
 16063                           
 16064                           ;stkvar	_off @ sp[(-4)+0]
 16065  01CC32  50E1               	movf	fsr1l,w,c
 16066  01CC34  0FFC               	addlw	-4
 16067  01CC36  6ED9               	movwf	fsr2l,c
 16068  01CC38  50E2               	movf	fsr1h,w,c
 16069  01CC3A  6EDA               	movwf	fsr2h,c
 16070  01CC3C  0EFF               	movlw	255
 16071  01CC3E  22DA               	addwfc	fsr2h,f,c
 16072  01CC40  502A               	movf	btemp^0,w,c
 16073  01CC42  26DE               	addwf	postinc2,f,c
 16074  01CC44  502B               	movf	(btemp+1)^0,w,c
 16075  01CC46  22DD               	addwfc	postdec2,f,c
 16076  01CC48                     l10832:
 16077                           
 16078                           ;stkvar	_neg @ sp[(-4)+2]
 16079  01CC48  0EFE               	movlw	-2
 16080  01CC4A  006F FF8C  F02A    	movff	plusw1,btemp
 16081  01CC50  0EFF               	movlw	-1
 16082  01CC52  50E3               	movf	plusw1,w,c
 16083  01CC54  102A               	iorwf	btemp^0,w,c
 16084  01CC56  A4D8               	btfss	status,2,c
 16085  01CC58  D009               	goto	l10836
 16086                           
 16087                           ;stkvar	_off @ sp[(-4)+0]
 16088  01CC5A  0EFC               	movlw	-4
 16089  01CC5C  006F FF8C  F02A    	movff	plusw1,btemp
 16090  01CC62  0EFD               	movlw	-3
 16091  01CC64  006F FF8C  F02B    	movff	plusw1,btemp+1
 16092  01CC6A  D00D               	goto	l3931
 16093  01CC6C                     l10836:
 16094                           
 16095                           ;stkvar	_off @ sp[(-4)+0]
 16096  01CC6C  0EFC               	movlw	-4
 16097  01CC6E  006F FF8C  F02A    	movff	plusw1,btemp
 16098  01CC74  1E2A               	comf	btemp^0,f,c
 16099  01CC76  0EFD               	movlw	-3
 16100  01CC78  006F FF8C  F02B    	movff	plusw1,btemp+1
 16101  01CC7E  1E2B               	comf	(btemp+1)^0,f,c
 16102  01CC80  2A2A               	incf	btemp^0,f,c
 16103  01CC82  B4D8               	btfsc	status,2,c
 16104  01CC84  2A2B               	incf	(btemp+1)^0,f,c
 16105  01CC86                     l3931:
 16106                           
 16107                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16108  01CC86  0EFA               	movlw	250
 16109  01CC88  26E1               	addwf	fsr1l,f,c
 16110  01CC8A  0EFF               	movlw	255
 16111  01CC8C  22E2               	addwfc	fsr1h,f,c
 16112  01CC8E  0012               	return		;funcret
 16113  01CC90                     __end_of_getoff:
 16114                           	opt callstack 0
 16115                           
 16116 ;; *************** function _getint *****************
 16117 ;; Defined at:
 16118 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16119 ;; Parameters:    Size  Location     Type
 16120 ;;  p               2  [STACK] PTR PTR const unsigned c
 16121 ;;		 -> s(2), 
 16122 ;; Auto vars:     Size  Location     Type
 16123 ;;  x               2  [STACK] unsigned int 
 16124 ;; Return value:  Size  Location     Type
 16125 ;;                  2  [STACK] int 
 16126 ;; Registers used:
 16127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16128 ;; Tracked objects:
 16129 ;;		On entry : 0/0
 16130 ;;		On exit  : 0/0
 16131 ;;		Unchanged: 0/0
 16132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16137 ;;Total ram usage:        0 bytes
 16138 ;; Hardware stack levels used:    1
 16139 ;; Hardware stack levels required when called:   15
 16140 ;; This function calls:
 16141 ;;		Nothing
 16142 ;; This function is called by:
 16143 ;;		_getoff
 16144 ;;		_getrule
 16145 ;; This function uses a reentrant model
 16146 ;;
 16147                           
 16148                           	psect	text47
 16149  01FB60                     __ptext47:
 16150                           	opt callstack 0
 16151  01FB60                     _getint:
 16152                           	opt callstack 0
 16153                           
 16154                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16155  01FB60  52E6               	movf	postinc1,f,c
 16156  01FB62  52E6               	movf	postinc1,f,c
 16157                           
 16158                           ;stkvar	_x @ sp[(-2)+0]
 16159                           
 16160                           ;incstack = 0
 16161  01FB64  0EFE               	movlw	-2
 16162  01FB66  6AE3               	clrf	plusw1,c
 16163  01FB68  0EFF               	movlw	-1
 16164  01FB6A  6AE3               	clrf	plusw1,c
 16165  01FB6C  D043               	goto	l9970
 16166  01FB6E                     l9966:
 16167  01FB6E  0ED0               	movlw	208
 16168  01FB70  6E34               	movwf	(btemp+10)^0,c
 16169  01FB72  0EFF               	movlw	255
 16170  01FB74  6E35               	movwf	(btemp+11)^0,c
 16171                           
 16172                           ;stkvar	_x @ sp[(-2)+0]
 16173  01FB76  0EFE               	movlw	-2
 16174  01FB78  006F FF8C  F032    	movff	plusw1,btemp+8
 16175  01FB7E  0EFF               	movlw	-1
 16176  01FB80  006F FF8C  F033    	movff	plusw1,btemp+9
 16177  01FB86  0E0A               	movlw	10
 16178  01FB88  0232               	mulwf	(btemp+8)^0,c
 16179  01FB8A  006F FFCC  F030    	movff	prodl,btemp+6
 16180  01FB90  006F FFD0  F031    	movff	prodh,btemp+7
 16181  01FB96  0233               	mulwf	(btemp+9)^0,c
 16182  01FB98  50F3               	movf	prodl,w,c
 16183  01FB9A  2631               	addwf	(btemp+7)^0,f,c
 16184                           
 16185                           ;stkvar	_p @ sp[(-2)+-2]
 16186  01FB9C  0EFC               	movlw	-4
 16187  01FB9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16188  01FBA4  0EFD               	movlw	-3
 16189  01FBA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16190  01FBAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16191  01FBB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16192  01FBB8                     	if	0	;tblptru may be non-zero
 16193  01FBB8                     	endif
 16194  01FBB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16195  01FBB8  0E00               	movlw	low (__mediumconst shr (0+16))
 16196  01FBBA  6EF8               	movwf	tblptru,c
 16197  01FBBC                     	endif
 16198  01FBBC  0008               	tblrd		*
 16199  01FBBE  50F5               	movf	tablat,w,c
 16200  01FBC0  2630               	addwf	(btemp+6)^0,f,c
 16201  01FBC2  0E00               	movlw	0
 16202  01FBC4  2231               	addwfc	(btemp+7)^0,f,c
 16203  01FBC6  5034               	movf	(btemp+10)^0,w,c
 16204  01FBC8  2630               	addwf	(btemp+6)^0,f,c
 16205  01FBCA  5035               	movf	(btemp+11)^0,w,c
 16206  01FBCC  2231               	addwfc	(btemp+7)^0,f,c
 16207                           
 16208                           ;stkvar	_x @ sp[(-2)+0]
 16209  01FBCE  0EFE               	movlw	-2
 16210  01FBD0  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16211  01FBD6  0EFF               	movlw	-1
 16212  01FBD8  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16213                           
 16214                           ;stkvar	_p @ sp[(-2)+-2]
 16215  01FBDE  0EFC               	movlw	-4
 16216  01FBE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16217  01FBE6  0EFD               	movlw	-3
 16218  01FBE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16219  01FBEE  2ADE               	incf	postinc2,f,c
 16220  01FBF0  0E00               	movlw	0
 16221  01FBF2  22DD               	addwfc	postdec2,f,c
 16222  01FBF4                     l9970:
 16223  01FBF4  0ED0               	movlw	208
 16224  01FBF6  6E34               	movwf	(btemp+10)^0,c
 16225  01FBF8  0EFF               	movlw	255
 16226  01FBFA  6E35               	movwf	(btemp+11)^0,c
 16227                           
 16228                           ;stkvar	_p @ sp[(-2)+-2]
 16229  01FBFC  0EFC               	movlw	-4
 16230  01FBFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16231  01FC04  0EFD               	movlw	-3
 16232  01FC06  006F FF8F FFDA     	movff	plusw1,fsr2h
 16233  01FC0C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16234  01FC12  006F FF77 FFF7     	movff	postdec2,tblptrh
 16235  01FC18                     	if	0	;tblptru may be non-zero
 16236  01FC18                     	endif
 16237  01FC18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16238  01FC18  0E00               	movlw	low (__mediumconst shr (0+16))
 16239  01FC1A  6EF8               	movwf	tblptru,c
 16240  01FC1C                     	endif
 16241  01FC1C  0008               	tblrd		*
 16242  01FC1E  50F5               	movf	tablat,w,c
 16243  01FC20  6E32               	movwf	(btemp+8)^0,c
 16244  01FC22  6A33               	clrf	(btemp+9)^0,c
 16245  01FC24  5034               	movf	(btemp+10)^0,w,c
 16246  01FC26  2632               	addwf	(btemp+8)^0,f,c
 16247  01FC28  5035               	movf	(btemp+11)^0,w,c
 16248  01FC2A  2233               	addwfc	(btemp+9)^0,f,c
 16249  01FC2C  5033               	movf	(btemp+9)^0,w,c
 16250  01FC2E  E104               	bnz	u7610
 16251  01FC30  0E0A               	movlw	10
 16252  01FC32  5C32               	subwf	(btemp+8)^0,w,c
 16253  01FC34  A0D8               	btfss	status,0,c
 16254  01FC36  D79B               	goto	l9966
 16255  01FC38                     u7610:
 16256                           
 16257                           ;stkvar	_x @ sp[(-2)+0]
 16258  01FC38  0EFE               	movlw	-2
 16259  01FC3A  006F FF8C  F02A    	movff	plusw1,btemp
 16260  01FC40  0EFF               	movlw	-1
 16261  01FC42  006F FF8C  F02B    	movff	plusw1,btemp+1
 16262                           
 16263                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16264  01FC48  52E5               	movf	postdec1,f,c
 16265  01FC4A  52E5               	movf	postdec1,f,c
 16266  01FC4C  52E5               	movf	postdec1,f,c
 16267  01FC4E  52E5               	movf	postdec1,f,c
 16268  01FC50  0012               	return		;funcret
 16269  01FC52                     __end_of_getint:
 16270                           	opt callstack 0
 16271                           
 16272 ;; *************** function _getname *****************
 16273 ;; Defined at:
 16274 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16275 ;; Parameters:    Size  Location     Type
 16276 ;;  d               2  [STACK] PTR unsigned char 
 16277 ;;		 -> dst_name(7), std_name(7), 
 16278 ;;  p               2  [STACK] PTR PTR const unsigned c
 16279 ;;		 -> s(2), 
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;  i               2  [STACK] int 
 16282 ;; Return value:  Size  Location     Type
 16283 ;;                  1  [STACK] void 
 16284 ;; Registers used:
 16285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16286 ;; Tracked objects:
 16287 ;;		On entry : 0/39
 16288 ;;		On exit  : 0/0
 16289 ;;		Unchanged: 0/0
 16290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16295 ;;Total ram usage:        0 bytes
 16296 ;; Hardware stack levels used:    1
 16297 ;; Hardware stack levels required when called:   15
 16298 ;; This function calls:
 16299 ;;		Nothing
 16300 ;; This function is called by:
 16301 ;;		_do_tzset
 16302 ;; This function uses a reentrant model
 16303 ;;
 16304                           
 16305                           	psect	text48
 16306  01A8F0                     __ptext48:
 16307                           	opt callstack 0
 16308  01A8F0                     _getname:
 16309                           	opt callstack 0
 16310                           
 16311                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16312  01A8F0  52E6               	movf	postinc1,f,c
 16313  01A8F2  52E6               	movf	postinc1,f,c
 16314                           
 16315                           ;stkvar	_p @ sp[(-2)+-4]
 16316                           
 16317                           ;incstack = 0
 16318  01A8F4  0EFA               	movlw	-6
 16319  01A8F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16320  01A8FC  0EFB               	movlw	-5
 16321  01A8FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16322  01A904  006F FF7B FFF6     	movff	postinc2,tblptrl
 16323  01A90A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16324  01A910                     	if	0	;tblptru may be non-zero
 16325  01A910                     	endif
 16326  01A910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16327  01A910  0E00               	movlw	low (__mediumconst shr (0+16))
 16328  01A912  6EF8               	movwf	tblptru,c
 16329  01A914                     	endif
 16330  01A914  0008               	tblrd		*
 16331  01A916  50F5               	movf	tablat,w,c
 16332  01A918  0A3C               	xorlw	60
 16333  01A91A  A4D8               	btfss	status,2,c
 16334  01A91C  D09E               	goto	l16072
 16335                           
 16336                           ;stkvar	_p @ sp[(-2)+-4]
 16337  01A91E  0EFA               	movlw	-6
 16338  01A920  006F FF8F FFD9     	movff	plusw1,fsr2l
 16339  01A926  0EFB               	movlw	-5
 16340  01A928  006F FF8F FFDA     	movff	plusw1,fsr2h
 16341  01A92E  2ADE               	incf	postinc2,f,c
 16342  01A930  0E00               	movlw	0
 16343  01A932  22DD               	addwfc	postdec2,f,c
 16344                           
 16345                           ;stkvar	_i @ sp[(-2)+0]
 16346  01A934  0EFE               	movlw	-2
 16347  01A936  6AE3               	clrf	plusw1,c
 16348  01A938  0EFF               	movlw	-1
 16349  01A93A  6AE3               	clrf	plusw1,c
 16350  01A93C  D04D               	goto	l16066
 16351  01A93E                     l16062:
 16352                           
 16353                           ;stkvar	_i @ sp[(-2)+0]
 16354  01A93E  0EFE               	movlw	-2
 16355  01A940  006F FF8C  F034    	movff	plusw1,btemp+10
 16356  01A946  0EFF               	movlw	-1
 16357  01A948  006F FF8C  F035    	movff	plusw1,btemp+11
 16358                           
 16359                           ;stkvar	_p @ sp[(-2)+-4]
 16360  01A94E  0EFA               	movlw	-6
 16361  01A950  006F FF8F FFD9     	movff	plusw1,fsr2l
 16362  01A956  0EFB               	movlw	-5
 16363  01A958  006F FF8F FFDA     	movff	plusw1,fsr2h
 16364  01A95E  006F FF78  F032    	movff	postinc2,btemp+8
 16365  01A964  006F FF74  F033    	movff	postdec2,btemp+9
 16366  01A96A  5034               	movf	(btemp+10)^0,w,c
 16367  01A96C  2632               	addwf	(btemp+8)^0,f,c
 16368  01A96E  5035               	movf	(btemp+11)^0,w,c
 16369  01A970  2233               	addwfc	(btemp+9)^0,f,c
 16370  01A972  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16371  01A978  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16372  01A97E                     	if	0	;tblptru may be non-zero
 16373  01A97E                     	endif
 16374  01A97E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16375  01A97E  0E00               	movlw	low (__mediumconst shr (0+16))
 16376  01A980  6EF8               	movwf	tblptru,c
 16377  01A982                     	endif
 16378                           
 16379                           ;stkvar	_i @ sp[(-2)+0]
 16380  01A982  0EFE               	movlw	-2
 16381  01A984  006F FF8C  F034    	movff	plusw1,btemp+10
 16382  01A98A  0EFF               	movlw	-1
 16383  01A98C  006F FF8C  F035    	movff	plusw1,btemp+11
 16384                           
 16385                           ;stkvar	_d @ sp[(-2)+-2]
 16386  01A992  0EFC               	movlw	-4
 16387  01A994  006F FF8C  F032    	movff	plusw1,btemp+8
 16388  01A99A  0EFD               	movlw	-3
 16389  01A99C  006F FF8C  F033    	movff	plusw1,btemp+9
 16390  01A9A2  5034               	movf	(btemp+10)^0,w,c
 16391  01A9A4  2432               	addwf	(btemp+8)^0,w,c
 16392  01A9A6  6ED9               	movwf	fsr2l,c
 16393  01A9A8  5035               	movf	(btemp+11)^0,w,c
 16394  01A9AA  2033               	addwfc	(btemp+9)^0,w,c
 16395  01A9AC  6EDA               	movwf	fsr2h,c
 16396  01A9AE  0008               	tblrd		*
 16397  01A9B0  006F FFD7 FFDF     	movff	tablat,indf2
 16398                           
 16399                           ;stkvar	_i @ sp[(-2)+0]
 16400  01A9B6  0EFE               	movlw	-2
 16401  01A9B8  50E3               	movf	plusw1,w,c
 16402  01A9BA  0F01               	addlw	1
 16403  01A9BC  6E2A               	movwf	btemp^0,c
 16404  01A9BE  0EFE               	movlw	-2
 16405  01A9C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 16406  01A9C6  6A2A               	clrf	btemp^0,c
 16407  01A9C8  0EFF               	movlw	-1
 16408  01A9CA  50E3               	movf	plusw1,w,c
 16409  01A9CC  202A               	addwfc	btemp^0,w,c
 16410  01A9CE  6E2A               	movwf	btemp^0,c
 16411  01A9D0  0EFF               	movlw	-1
 16412  01A9D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 16413  01A9D8                     l16066:
 16414                           
 16415                           ;stkvar	_i @ sp[(-2)+0]
 16416  01A9D8  0EFE               	movlw	-2
 16417  01A9DA  006F FF8C  F034    	movff	plusw1,btemp+10
 16418  01A9E0  0EFF               	movlw	-1
 16419  01A9E2  006F FF8C  F035    	movff	plusw1,btemp+11
 16420                           
 16421                           ;stkvar	_p @ sp[(-2)+-4]
 16422  01A9E8  0EFA               	movlw	-6
 16423  01A9EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16424  01A9F0  0EFB               	movlw	-5
 16425  01A9F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16426  01A9F8  006F FF78  F032    	movff	postinc2,btemp+8
 16427  01A9FE  006F FF74  F033    	movff	postdec2,btemp+9
 16428  01AA04  5034               	movf	(btemp+10)^0,w,c
 16429  01AA06  2632               	addwf	(btemp+8)^0,f,c
 16430  01AA08  5035               	movf	(btemp+11)^0,w,c
 16431  01AA0A  2233               	addwfc	(btemp+9)^0,f,c
 16432  01AA0C  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16433  01AA12  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16434  01AA18                     	if	0	;tblptru may be non-zero
 16435  01AA18                     	endif
 16436  01AA18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16437  01AA18  0E00               	movlw	low (__mediumconst shr (0+16))
 16438  01AA1A  6EF8               	movwf	tblptru,c
 16439  01AA1C                     	endif
 16440  01AA1C  0008               	tblrd		*
 16441  01AA1E  50F5               	movf	tablat,w,c
 16442  01AA20  0A3E               	xorlw	62
 16443  01AA22  B4D8               	btfsc	status,2,c
 16444  01AA24  D00E               	goto	u15580
 16445                           
 16446                           ;stkvar	_i @ sp[(-2)+0]
 16447  01AA26  0EFF               	movlw	-1
 16448  01AA28  BEE3               	btfsc	plusw1,7,c
 16449  01AA2A  D789               	goto	l16062
 16450  01AA2C  0EFF               	movlw	-1
 16451  01AA2E  50E3               	movf	plusw1,w,c
 16452  01AA30  E108               	bnz	u15580
 16453  01AA32  0EFE               	movlw	-2
 16454  01AA34  006F FF8C  F02A    	movff	plusw1,btemp
 16455  01AA3A  0E06               	movlw	6
 16456  01AA3C  5E2A               	subwf	btemp^0,f,c
 16457  01AA3E  A0D8               	btfss	status,0,c
 16458  01AA40  D77E               	goto	l16062
 16459  01AA42                     u15580:
 16460                           
 16461                           ;stkvar	_p @ sp[(-2)+-4]
 16462  01AA42  0EFA               	movlw	-6
 16463  01AA44  006F FF8F FFD9     	movff	plusw1,fsr2l
 16464  01AA4A  0EFB               	movlw	-5
 16465  01AA4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16466  01AA52  2ADE               	incf	postinc2,f,c
 16467  01AA54  0E00               	movlw	0
 16468  01AA56  22DD               	addwfc	postdec2,f,c
 16469  01AA58  D098               	goto	u15600
 16470  01AA5A                     l16072:
 16471                           
 16472                           ;stkvar	_i @ sp[(-2)+0]
 16473  01AA5A  0EFE               	movlw	-2
 16474  01AA5C  6AE3               	clrf	plusw1,c
 16475  01AA5E  0EFF               	movlw	-1
 16476  01AA60  6AE3               	clrf	plusw1,c
 16477  01AA62  D04D               	goto	l16078
 16478  01AA64                     l16074:
 16479                           
 16480                           ;stkvar	_i @ sp[(-2)+0]
 16481  01AA64  0EFE               	movlw	-2
 16482  01AA66  006F FF8C  F034    	movff	plusw1,btemp+10
 16483  01AA6C  0EFF               	movlw	-1
 16484  01AA6E  006F FF8C  F035    	movff	plusw1,btemp+11
 16485                           
 16486                           ;stkvar	_p @ sp[(-2)+-4]
 16487  01AA74  0EFA               	movlw	-6
 16488  01AA76  006F FF8F FFD9     	movff	plusw1,fsr2l
 16489  01AA7C  0EFB               	movlw	-5
 16490  01AA7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16491  01AA84  006F FF78  F032    	movff	postinc2,btemp+8
 16492  01AA8A  006F FF74  F033    	movff	postdec2,btemp+9
 16493  01AA90  5034               	movf	(btemp+10)^0,w,c
 16494  01AA92  2632               	addwf	(btemp+8)^0,f,c
 16495  01AA94  5035               	movf	(btemp+11)^0,w,c
 16496  01AA96  2233               	addwfc	(btemp+9)^0,f,c
 16497  01AA98  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16498  01AA9E  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16499  01AAA4                     	if	0	;tblptru may be non-zero
 16500  01AAA4                     	endif
 16501  01AAA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16502  01AAA4  0E00               	movlw	low (__mediumconst shr (0+16))
 16503  01AAA6  6EF8               	movwf	tblptru,c
 16504  01AAA8                     	endif
 16505                           
 16506                           ;stkvar	_i @ sp[(-2)+0]
 16507  01AAA8  0EFE               	movlw	-2
 16508  01AAAA  006F FF8C  F034    	movff	plusw1,btemp+10
 16509  01AAB0  0EFF               	movlw	-1
 16510  01AAB2  006F FF8C  F035    	movff	plusw1,btemp+11
 16511                           
 16512                           ;stkvar	_d @ sp[(-2)+-2]
 16513  01AAB8  0EFC               	movlw	-4
 16514  01AABA  006F FF8C  F032    	movff	plusw1,btemp+8
 16515  01AAC0  0EFD               	movlw	-3
 16516  01AAC2  006F FF8C  F033    	movff	plusw1,btemp+9
 16517  01AAC8  5034               	movf	(btemp+10)^0,w,c
 16518  01AACA  2432               	addwf	(btemp+8)^0,w,c
 16519  01AACC  6ED9               	movwf	fsr2l,c
 16520  01AACE  5035               	movf	(btemp+11)^0,w,c
 16521  01AAD0  2033               	addwfc	(btemp+9)^0,w,c
 16522  01AAD2  6EDA               	movwf	fsr2h,c
 16523  01AAD4  0008               	tblrd		*
 16524  01AAD6  006F FFD7 FFDF     	movff	tablat,indf2
 16525                           
 16526                           ;stkvar	_i @ sp[(-2)+0]
 16527  01AADC  0EFE               	movlw	-2
 16528  01AADE  50E3               	movf	plusw1,w,c
 16529  01AAE0  0F01               	addlw	1
 16530  01AAE2  6E2A               	movwf	btemp^0,c
 16531  01AAE4  0EFE               	movlw	-2
 16532  01AAE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 16533  01AAEC  6A2A               	clrf	btemp^0,c
 16534  01AAEE  0EFF               	movlw	-1
 16535  01AAF0  50E3               	movf	plusw1,w,c
 16536  01AAF2  202A               	addwfc	btemp^0,w,c
 16537  01AAF4  6E2A               	movwf	btemp^0,c
 16538  01AAF6  0EFF               	movlw	-1
 16539  01AAF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 16540  01AAFE                     l16078:
 16541  01AAFE  0E9F               	movlw	159
 16542  01AB00  6E34               	movwf	(btemp+10)^0,c
 16543  01AB02  0EFF               	movlw	255
 16544  01AB04  6E35               	movwf	(btemp+11)^0,c
 16545                           
 16546                           ;stkvar	_i @ sp[(-2)+0]
 16547  01AB06  0EFE               	movlw	-2
 16548  01AB08  006F FF8C  F032    	movff	plusw1,btemp+8
 16549  01AB0E  0EFF               	movlw	-1
 16550  01AB10  006F FF8C  F033    	movff	plusw1,btemp+9
 16551                           
 16552                           ;stkvar	_p @ sp[(-2)+-4]
 16553  01AB16  0EFA               	movlw	-6
 16554  01AB18  006F FF8F FFD9     	movff	plusw1,fsr2l
 16555  01AB1E  0EFB               	movlw	-5
 16556  01AB20  006F FF8F FFDA     	movff	plusw1,fsr2h
 16557  01AB26  006F FF78  F030    	movff	postinc2,btemp+6
 16558  01AB2C  006F FF74  F031    	movff	postdec2,btemp+7
 16559  01AB32  5032               	movf	(btemp+8)^0,w,c
 16560  01AB34  2630               	addwf	(btemp+6)^0,f,c
 16561  01AB36  5033               	movf	(btemp+9)^0,w,c
 16562  01AB38  2231               	addwfc	(btemp+7)^0,f,c
 16563  01AB3A  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16564  01AB40  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16565  01AB46                     	if	0	;tblptru may be non-zero
 16566  01AB46                     	endif
 16567  01AB46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16568  01AB46  0E00               	movlw	low (__mediumconst shr (0+16))
 16569  01AB48  6EF8               	movwf	tblptru,c
 16570  01AB4A                     	endif
 16571  01AB4A  0008               	tblrd		*
 16572  01AB4C  50F5               	movf	tablat,w,c
 16573  01AB4E  6E32               	movwf	(btemp+8)^0,c
 16574  01AB50  6A33               	clrf	(btemp+9)^0,c
 16575  01AB52  0E20               	movlw	32
 16576  01AB54  1232               	iorwf	(btemp+8)^0,f,c
 16577  01AB56  0E00               	movlw	0
 16578  01AB58  1233               	iorwf	(btemp+9)^0,f,c
 16579  01AB5A  5034               	movf	(btemp+10)^0,w,c
 16580  01AB5C  2632               	addwf	(btemp+8)^0,f,c
 16581  01AB5E  5035               	movf	(btemp+11)^0,w,c
 16582  01AB60  2233               	addwfc	(btemp+9)^0,f,c
 16583  01AB62  5033               	movf	(btemp+9)^0,w,c
 16584  01AB64  E112               	bnz	l16082
 16585  01AB66  0E1A               	movlw	26
 16586  01AB68  5C32               	subwf	(btemp+8)^0,w,c
 16587  01AB6A  B0D8               	btfsc	status,0,c
 16588  01AB6C  D00E               	goto	u15600
 16589                           
 16590                           ;stkvar	_i @ sp[(-2)+0]
 16591  01AB6E  0EFF               	movlw	-1
 16592  01AB70  BEE3               	btfsc	plusw1,7,c
 16593  01AB72  D778               	goto	l16074
 16594  01AB74  0EFF               	movlw	-1
 16595  01AB76  50E3               	movf	plusw1,w,c
 16596  01AB78  E108               	bnz	u15600
 16597  01AB7A  0EFE               	movlw	-2
 16598  01AB7C  006F FF8C  F02A    	movff	plusw1,btemp
 16599  01AB82  0E06               	movlw	6
 16600  01AB84  5E2A               	subwf	btemp^0,f,c
 16601  01AB86  A0D8               	btfss	status,0,c
 16602  01AB88  D76D               	goto	l16074
 16603  01AB8A                     u15600:
 16604  01AB8A                     l16082:
 16605                           
 16606                           ;stkvar	_i @ sp[(-2)+0]
 16607  01AB8A  0EFE               	movlw	-2
 16608  01AB8C  006F FF8C  F034    	movff	plusw1,btemp+10
 16609  01AB92  0EFF               	movlw	-1
 16610  01AB94  006F FF8C  F035    	movff	plusw1,btemp+11
 16611                           
 16612                           ;stkvar	_p @ sp[(-2)+-4]
 16613  01AB9A  0EFA               	movlw	-6
 16614  01AB9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16615  01ABA2  0EFB               	movlw	-5
 16616  01ABA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16617  01ABAA  5034               	movf	(btemp+10)^0,w,c
 16618  01ABAC  26DE               	addwf	postinc2,f,c
 16619  01ABAE  5035               	movf	(btemp+11)^0,w,c
 16620  01ABB0  22DD               	addwfc	postdec2,f,c
 16621                           
 16622                           ;stkvar	_i @ sp[(-2)+0]
 16623  01ABB2  0EFE               	movlw	-2
 16624  01ABB4  006F FF8C  F034    	movff	plusw1,btemp+10
 16625  01ABBA  0EFF               	movlw	-1
 16626  01ABBC  006F FF8C  F035    	movff	plusw1,btemp+11
 16627                           
 16628                           ;stkvar	_d @ sp[(-2)+-2]
 16629  01ABC2  0EFC               	movlw	-4
 16630  01ABC4  006F FF8C  F032    	movff	plusw1,btemp+8
 16631  01ABCA  0EFD               	movlw	-3
 16632  01ABCC  006F FF8C  F033    	movff	plusw1,btemp+9
 16633  01ABD2  5034               	movf	(btemp+10)^0,w,c
 16634  01ABD4  2432               	addwf	(btemp+8)^0,w,c
 16635  01ABD6  6ED9               	movwf	fsr2l,c
 16636  01ABD8  5035               	movf	(btemp+11)^0,w,c
 16637  01ABDA  2033               	addwfc	(btemp+9)^0,w,c
 16638  01ABDC  6EDA               	movwf	fsr2h,c
 16639  01ABDE  0E00               	movlw	0
 16640  01ABE0  6EDF               	movwf	indf2,c
 16641                           
 16642                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16643  01ABE2  0EFA               	movlw	250
 16644  01ABE4  26E1               	addwf	fsr1l,f,c
 16645  01ABE6  0EFF               	movlw	255
 16646  01ABE8  22E2               	addwfc	fsr1h,f,c
 16647  01ABEA  0012               	return		;funcret
 16648  01ABEC                     __end_of_getname:
 16649                           	opt callstack 0
 16650                           
 16651 ;; *************** function ___secs_to_tm *****************
 16652 ;; Defined at:
 16653 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;  t               8  [STACK] long long 
 16656 ;;  tm              2  [STACK] PTR struct tm
 16657 ;;		 -> localtime@tm(24), 
 16658 ;; Auto vars:     Size  Location     Type
 16659 ;;  years           8  [STACK] long long 
 16660 ;;  days            8  [STACK] long long 
 16661 ;;  secs            8  [STACK] long long 
 16662 ;;  remdays         4  [STACK] long 
 16663 ;;  q_cycles        4  [STACK] long 
 16664 ;;  c_cycles        4  [STACK] long 
 16665 ;;  remyears        4  [STACK] long 
 16666 ;;  remsecs         4  [STACK] long 
 16667 ;;  qc_cycles       4  [STACK] long 
 16668 ;;  months          2  [STACK] int 
 16669 ;;  leap            2  [STACK] int 
 16670 ;;  yday            2  [STACK] int 
 16671 ;;  wday            2  [STACK] int 
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  4  [STACK] long 
 16674 ;; Registers used:
 16675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/39
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16685 ;;Total ram usage:        0 bytes
 16686 ;; Hardware stack levels used:    1
 16687 ;; Hardware stack levels required when called:   16
 16688 ;; This function calls:
 16689 ;;		___aldiv
 16690 ;;		___almod
 16691 ;;		___aodiv
 16692 ;;		___aomod
 16693 ;;		___lmul
 16694 ;;		___omul
 16695 ;; This function is called by:
 16696 ;;		___localtime_r
 16697 ;; This function uses a reentrant model
 16698 ;;
 16699                           
 16700                           	psect	text49
 16701  01279A                     __ptext49:
 16702                           	opt callstack 0
 16703  01279A                     ___secs_to_tm:
 16704                           	opt callstack 0
 16705                           
 16706                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16707  01279A  0E39               	movlw	57
 16708  01279C  26E1               	addwf	fsr1l,f,c
 16709  01279E  0E00               	movlw	0
 16710  0127A0  22E2               	addwfc	fsr1h,f,c
 16711                           
 16712                           ;stkvar	_t @ sp[(-57)+-8]
 16713                           
 16714                           ;incstack = 0
 16715  0127A2  0EC6               	movlw	-58
 16716  0127A4  AEE3               	btfss	plusw1,7,c
 16717  0127A6  D026               	goto	u16220
 16718  0127A8  0EC1               	movlw	-63
 16719  0127AA  006F FF8C  F02A    	movff	plusw1,btemp
 16720  0127B0  0E80               	movlw	128
 16721  0127B2  5E2A               	subwf	btemp^0,f,c
 16722  0127B4  0EC2               	movlw	-62
 16723  0127B6  006F FF8C  F02A    	movff	plusw1,btemp
 16724  0127BC  0EBD               	movlw	189
 16725  0127BE  5A2A               	subwfb	btemp^0,f,c
 16726  0127C0  0EC3               	movlw	-61
 16727  0127C2  006F FF8C  F02A    	movff	plusw1,btemp
 16728  0127C8  0E0E               	movlw	14
 16729  0127CA  5A2A               	subwfb	btemp^0,f,c
 16730  0127CC  0EC4               	movlw	-60
 16731  0127CE  006F FF8C  F02A    	movff	plusw1,btemp
 16732  0127D4  0EFF               	movlw	255
 16733  0127D6  5A2A               	subwfb	btemp^0,f,c
 16734  0127D8  0EC5               	movlw	-59
 16735  0127DA  006F FF8C  F02A    	movff	plusw1,btemp
 16736  0127E0  0EFF               	movlw	255
 16737  0127E2  5A2A               	subwfb	btemp^0,f,c
 16738  0127E4  0EC6               	movlw	-58
 16739  0127E6  006F FF8C  F02A    	movff	plusw1,btemp
 16740  0127EC  0EFF               	movlw	255
 16741  0127EE  5A2A               	subwfb	btemp^0,f,c
 16742  0127F0  A0D8               	btfss	status,0,c
 16743  0127F2  D028               	goto	u16230
 16744  0127F4                     u16220:
 16745                           
 16746                           ;stkvar	_t @ sp[(-57)+-8]
 16747  0127F4  0EC6               	movlw	-58
 16748  0127F6  BEE3               	btfsc	plusw1,7,c
 16749  0127F8  D02F               	goto	l16650
 16750  0127FA  0EC6               	movlw	-58
 16751  0127FC  50E3               	movf	plusw1,w,c
 16752  0127FE  E122               	bnz	u16230
 16753  012800  0EC5               	movlw	-59
 16754  012802  50E3               	movf	plusw1,w,c
 16755  012804  E11F               	bnz	u16230
 16756  012806  0EC4               	movlw	-60
 16757  012808  50E3               	movf	plusw1,w,c
 16758  01280A  E11C               	bnz	u16230
 16759  01280C  0EBF               	movlw	-65
 16760  01280E  04E3               	decf	plusw1,w,c
 16761  012810  0EC0               	movlw	-64
 16762  012812  006F FF8C  F02A    	movff	plusw1,btemp
 16763  012818  0E7B               	movlw	123
 16764  01281A  5A2A               	subwfb	btemp^0,f,c
 16765  01281C  0EC1               	movlw	-63
 16766  01281E  006F FF8C  F02A    	movff	plusw1,btemp
 16767  012824  0E9D               	movlw	157
 16768  012826  5A2A               	subwfb	btemp^0,f,c
 16769  012828  0EC2               	movlw	-62
 16770  01282A  006F FF8C  F02A    	movff	plusw1,btemp
 16771  012830  0E40               	movlw	64
 16772  012832  5A2A               	subwfb	btemp^0,f,c
 16773  012834  0EC3               	movlw	-61
 16774  012836  006F FF8C  F02A    	movff	plusw1,btemp
 16775  01283C  0EF1               	movlw	241
 16776  01283E  5A2A               	subwfb	btemp^0,f,c
 16777  012840  A0D8               	btfss	status,0,c
 16778  012842  D00A               	goto	l16650
 16779  012844                     u16230:
 16780  012844  0EFF               	movlw	255
 16781  012846  6E2A               	movwf	btemp^0,c
 16782  012848  0EFF               	movlw	255
 16783  01284A  6E2B               	movwf	(btemp+1)^0,c
 16784  01284C  0EFF               	movlw	255
 16785  01284E  6E2C               	movwf	(btemp+2)^0,c
 16786  012850  0EFF               	movlw	255
 16787  012852  6E2D               	movwf	(btemp+3)^0,c
 16788  012854  EF31  F09C         	goto	l3847
 16789  012858                     l16650:
 16790                           
 16791                           ;stkvar	_t @ sp[(-57)+-8]
 16792  012858  0EBF               	movlw	-65
 16793  01285A  50E3               	movf	plusw1,w,c
 16794  01285C  0F80               	addlw	128
 16795  01285E  6E3A               	movwf	(btemp+16)^0,c
 16796  012860  0EC0               	movlw	-64
 16797  012862  006F FF8C  F03B    	movff	plusw1,btemp+17
 16798  012868  0EA2               	movlw	162
 16799  01286A  223B               	addwfc	(btemp+17)^0,f,c
 16800  01286C  0EC1               	movlw	-63
 16801  01286E  006F FF8C  F03C    	movff	plusw1,btemp+18
 16802  012874  0E43               	movlw	67
 16803  012876  223C               	addwfc	(btemp+18)^0,f,c
 16804  012878  0EC2               	movlw	-62
 16805  01287A  006F FF8C  F03D    	movff	plusw1,btemp+19
 16806  012880  0EC7               	movlw	199
 16807  012882  223D               	addwfc	(btemp+19)^0,f,c
 16808  012884  0EC3               	movlw	-61
 16809  012886  006F FF8C  F03E    	movff	plusw1,btemp+20
 16810  01288C  0EFF               	movlw	255
 16811  01288E  223E               	addwfc	(btemp+20)^0,f,c
 16812  012890  0EC4               	movlw	-60
 16813  012892  006F FF8C  F03F    	movff	plusw1,btemp+21
 16814  012898  0EFF               	movlw	255
 16815  01289A  223F               	addwfc	(btemp+21)^0,f,c
 16816  01289C  0EC5               	movlw	-59
 16817  01289E  006F FF8C  F040    	movff	plusw1,btemp+22
 16818  0128A4  0EFF               	movlw	255
 16819  0128A6  2240               	addwfc	(btemp+22)^0,f,c
 16820  0128A8  0EC6               	movlw	-58
 16821  0128AA  006F FF8C  F041    	movff	plusw1,btemp+23
 16822  0128B0  0EFF               	movlw	255
 16823  0128B2  2241               	addwfc	(btemp+23)^0,f,c
 16824                           
 16825                           ;stkvar	_secs @ sp[(-57)+17]
 16826  0128B4  0ED8               	movlw	-40
 16827  0128B6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16828  0128BC  0ED9               	movlw	-39
 16829  0128BE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16830  0128C4  0EDA               	movlw	-38
 16831  0128C6  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16832  0128CC  0EDB               	movlw	-37
 16833  0128CE  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16834  0128D4  0EDC               	movlw	-36
 16835  0128D6  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16836  0128DC  0EDD               	movlw	-35
 16837  0128DE  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16838  0128E4  0EDE               	movlw	-34
 16839  0128E6  0060  F103  FFE3   	movff	btemp+22,plusw1
 16840  0128EC  0EDF               	movlw	-33
 16841  0128EE  0060  F107  FFE3   	movff	btemp+23,plusw1
 16842  0128F4  0E80               	movlw	128
 16843  0128F6  6EE6               	movwf	postinc1,c
 16844  0128F8  0E51               	movlw	81
 16845  0128FA  6EE6               	movwf	postinc1,c
 16846  0128FC  0E01               	movlw	1
 16847  0128FE  6EE6               	movwf	postinc1,c
 16848  012900  0E00               	movlw	0
 16849  012902  6EE6               	movwf	postinc1,c
 16850  012904  0E00               	movlw	0
 16851  012906  6EE6               	movwf	postinc1,c
 16852  012908  0E00               	movlw	0
 16853  01290A  6EE6               	movwf	postinc1,c
 16854  01290C  0E00               	movlw	0
 16855  01290E  6EE6               	movwf	postinc1,c
 16856  012910  0E00               	movlw	0
 16857  012912  6EE6               	movwf	postinc1,c
 16858                           
 16859                           ;stkvar	_secs @ sp[(-65)+17]
 16860  012914  50E1               	movf	fsr1l,w,c
 16861  012916  0FD0               	addlw	-48
 16862  012918  6ED9               	movwf	fsr2l,c
 16863  01291A  50E2               	movf	fsr1h,w,c
 16864  01291C  6EDA               	movwf	fsr2h,c
 16865  01291E  0EFF               	movlw	255
 16866  012920  22DA               	addwfc	fsr2h,f,c
 16867  012922  006F FF7B FFE6     	movff	postinc2,postinc1
 16868  012928  006F FF7B FFE6     	movff	postinc2,postinc1
 16869  01292E  006F FF7B FFE6     	movff	postinc2,postinc1
 16870  012934  006F FF7B FFE6     	movff	postinc2,postinc1
 16871  01293A  006F FF7B FFE6     	movff	postinc2,postinc1
 16872  012940  006F FF7B FFE6     	movff	postinc2,postinc1
 16873  012946  006F FF7B FFE6     	movff	postinc2,postinc1
 16874  01294C  006F FF7B FFE6     	movff	postinc2,postinc1
 16875  012952  EC24  F0DE         	call	___aodiv	;wreg free
 16876  012956  52E5               	movf	postdec1,f,c
 16877  012958  006F FF9C  F041    	movff	indf1,btemp+23
 16878  01295E  52E5               	movf	postdec1,f,c
 16879  012960  006F FF9C  F040    	movff	indf1,btemp+22
 16880  012966  52E5               	movf	postdec1,f,c
 16881  012968  006F FF9C  F03F    	movff	indf1,btemp+21
 16882  01296E  52E5               	movf	postdec1,f,c
 16883  012970  006F FF9C  F03E    	movff	indf1,btemp+20
 16884  012976  52E5               	movf	postdec1,f,c
 16885  012978  006F FF9C  F03D    	movff	indf1,btemp+19
 16886  01297E  52E5               	movf	postdec1,f,c
 16887  012980  006F FF9C  F03C    	movff	indf1,btemp+18
 16888  012986  52E5               	movf	postdec1,f,c
 16889  012988  006F FF9C  F03B    	movff	indf1,btemp+17
 16890  01298E  52E5               	movf	postdec1,f,c
 16891  012990  006F FF9C  F03A    	movff	indf1,btemp+16
 16892  012996  0EF8               	movlw	248
 16893  012998  26E1               	addwf	fsr1l,f,c
 16894  01299A  0EFF               	movlw	255
 16895  01299C  22E2               	addwfc	fsr1h,f,c
 16896                           
 16897                           ;stkvar	_days @ sp[(-57)+9]
 16898  01299E  0ED0               	movlw	-48
 16899  0129A0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16900  0129A6  0ED1               	movlw	-47
 16901  0129A8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16902  0129AE  0ED2               	movlw	-46
 16903  0129B0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16904  0129B6  0ED3               	movlw	-45
 16905  0129B8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16906  0129BE  0ED4               	movlw	-44
 16907  0129C0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16908  0129C6  0ED5               	movlw	-43
 16909  0129C8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16910  0129CE  0ED6               	movlw	-42
 16911  0129D0  0060  F103  FFE3   	movff	btemp+22,plusw1
 16912  0129D6  0ED7               	movlw	-41
 16913  0129D8  0060  F107  FFE3   	movff	btemp+23,plusw1
 16914  0129DE  0E80               	movlw	128
 16915  0129E0  6EE6               	movwf	postinc1,c
 16916  0129E2  0E51               	movlw	81
 16917  0129E4  6EE6               	movwf	postinc1,c
 16918  0129E6  0E01               	movlw	1
 16919  0129E8  6EE6               	movwf	postinc1,c
 16920  0129EA  0E00               	movlw	0
 16921  0129EC  6EE6               	movwf	postinc1,c
 16922  0129EE  0E00               	movlw	0
 16923  0129F0  6EE6               	movwf	postinc1,c
 16924  0129F2  0E00               	movlw	0
 16925  0129F4  6EE6               	movwf	postinc1,c
 16926  0129F6  0E00               	movlw	0
 16927  0129F8  6EE6               	movwf	postinc1,c
 16928  0129FA  0E00               	movlw	0
 16929  0129FC  6EE6               	movwf	postinc1,c
 16930                           
 16931                           ;stkvar	_secs @ sp[(-65)+17]
 16932  0129FE  50E1               	movf	fsr1l,w,c
 16933  012A00  0FD0               	addlw	-48
 16934  012A02  6ED9               	movwf	fsr2l,c
 16935  012A04  50E2               	movf	fsr1h,w,c
 16936  012A06  6EDA               	movwf	fsr2h,c
 16937  012A08  0EFF               	movlw	255
 16938  012A0A  22DA               	addwfc	fsr2h,f,c
 16939  012A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 16940  012A12  006F FF7B FFE6     	movff	postinc2,postinc1
 16941  012A18  006F FF7B FFE6     	movff	postinc2,postinc1
 16942  012A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 16943  012A24  006F FF7B FFE6     	movff	postinc2,postinc1
 16944  012A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 16945  012A30  006F FF7B FFE6     	movff	postinc2,postinc1
 16946  012A36  006F FF7B FFE6     	movff	postinc2,postinc1
 16947  012A3C  EC10  F0E4         	call	___aomod	;wreg free
 16948  012A40  52E5               	movf	postdec1,f,c
 16949  012A42  006F FF9C  F041    	movff	indf1,btemp+23
 16950  012A48  52E5               	movf	postdec1,f,c
 16951  012A4A  006F FF9C  F040    	movff	indf1,btemp+22
 16952  012A50  52E5               	movf	postdec1,f,c
 16953  012A52  006F FF9C  F03F    	movff	indf1,btemp+21
 16954  012A58  52E5               	movf	postdec1,f,c
 16955  012A5A  006F FF9C  F03E    	movff	indf1,btemp+20
 16956  012A60  52E5               	movf	postdec1,f,c
 16957  012A62  006F FF9C  F03D    	movff	indf1,btemp+19
 16958  012A68  52E5               	movf	postdec1,f,c
 16959  012A6A  006F FF9C  F03C    	movff	indf1,btemp+18
 16960  012A70  52E5               	movf	postdec1,f,c
 16961  012A72  006F FF9C  F03B    	movff	indf1,btemp+17
 16962  012A78  52E5               	movf	postdec1,f,c
 16963  012A7A  006F FF9C  F03A    	movff	indf1,btemp+16
 16964  012A80  0EF8               	movlw	248
 16965  012A82  26E1               	addwf	fsr1l,f,c
 16966  012A84  0EFF               	movlw	255
 16967  012A86  22E2               	addwfc	fsr1h,f,c
 16968  012A88  0060  F0E8  F032   	movff	btemp+16,btemp+8
 16969  012A8E  0060  F0EC  F033   	movff	btemp+17,btemp+9
 16970  012A94  0060  F0F0  F034   	movff	btemp+18,btemp+10
 16971  012A9A  0060  F0F4  F035   	movff	btemp+19,btemp+11
 16972                           
 16973                           ;stkvar	_remsecs @ sp[(-57)+41]
 16974  012AA0  0EF0               	movlw	-16
 16975  012AA2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16976  012AA8  0EF1               	movlw	-15
 16977  012AAA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16978  012AB0  0EF2               	movlw	-14
 16979  012AB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16980  012AB8  0EF3               	movlw	-13
 16981  012ABA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16982                           
 16983                           ;stkvar	_remsecs @ sp[(-57)+41]
 16984  012AC0  0EF3               	movlw	-13
 16985  012AC2  AEE3               	btfss	plusw1,7,c
 16986  012AC4  D01F               	goto	l16662
 16987                           
 16988                           ;stkvar	_remsecs @ sp[(-57)+41]
 16989  012AC6  50E1               	movf	fsr1l,w,c
 16990  012AC8  0FF0               	addlw	-16
 16991  012ACA  6ED9               	movwf	fsr2l,c
 16992  012ACC  50E2               	movf	fsr1h,w,c
 16993  012ACE  6EDA               	movwf	fsr2h,c
 16994  012AD0  0EFF               	movlw	255
 16995  012AD2  22DA               	addwfc	fsr2h,f,c
 16996  012AD4  0E80               	movlw	128
 16997  012AD6  26DE               	addwf	postinc2,f,c
 16998  012AD8  0E51               	movlw	81
 16999  012ADA  22DE               	addwfc	postinc2,f,c
 17000  012ADC  0E01               	movlw	1
 17001  012ADE  22DE               	addwfc	postinc2,f,c
 17002  012AE0  0E00               	movlw	0
 17003  012AE2  22DE               	addwfc	postinc2,f,c
 17004                           
 17005                           ;stkvar	_days @ sp[(-57)+9]
 17006  012AE4  50E1               	movf	fsr1l,w,c
 17007  012AE6  0FD0               	addlw	-48
 17008  012AE8  6ED9               	movwf	fsr2l,c
 17009  012AEA  50E2               	movf	fsr1h,w,c
 17010  012AEC  6EDA               	movwf	fsr2h,c
 17011  012AEE  0EFF               	movlw	255
 17012  012AF0  22DA               	addwfc	fsr2h,f,c
 17013  012AF2  06DE               	decf	postinc2,f,c
 17014  012AF4  0E00               	movlw	0
 17015  012AF6  5ADE               	subwfb	postinc2,f,c
 17016  012AF8  5ADE               	subwfb	postinc2,f,c
 17017  012AFA  5ADE               	subwfb	postinc2,f,c
 17018  012AFC  5ADE               	subwfb	postinc2,f,c
 17019  012AFE  5ADE               	subwfb	postinc2,f,c
 17020  012B00  5ADE               	subwfb	postinc2,f,c
 17021  012B02  5ADE               	subwfb	postinc2,f,c
 17022  012B04                     l16662:
 17023  012B04  0E07               	movlw	7
 17024  012B06  6EE6               	movwf	postinc1,c
 17025  012B08  0E00               	movlw	0
 17026  012B0A  6EE6               	movwf	postinc1,c
 17027  012B0C  0E00               	movlw	0
 17028  012B0E  6EE6               	movwf	postinc1,c
 17029  012B10  0E00               	movlw	0
 17030  012B12  6EE6               	movwf	postinc1,c
 17031  012B14  0E00               	movlw	0
 17032  012B16  6EE6               	movwf	postinc1,c
 17033  012B18  0E00               	movlw	0
 17034  012B1A  6EE6               	movwf	postinc1,c
 17035  012B1C  0E00               	movlw	0
 17036  012B1E  6EE6               	movwf	postinc1,c
 17037  012B20  0E00               	movlw	0
 17038  012B22  6EE6               	movwf	postinc1,c
 17039                           
 17040                           ;stkvar	_days @ sp[(-65)+9]
 17041  012B24  0EC8               	movlw	-56
 17042  012B26  50E3               	movf	plusw1,w,c
 17043  012B28  0F03               	addlw	3
 17044  012B2A  6E3A               	movwf	(btemp+16)^0,c
 17045  012B2C  0EC9               	movlw	-55
 17046  012B2E  006F FF8C  F03B    	movff	plusw1,btemp+17
 17047  012B34  0E00               	movlw	0
 17048  012B36  223B               	addwfc	(btemp+17)^0,f,c
 17049  012B38  0ECA               	movlw	-54
 17050  012B3A  006F FF8C  F03C    	movff	plusw1,btemp+18
 17051  012B40  0E00               	movlw	0
 17052  012B42  223C               	addwfc	(btemp+18)^0,f,c
 17053  012B44  0ECB               	movlw	-53
 17054  012B46  006F FF8C  F03D    	movff	plusw1,btemp+19
 17055  012B4C  0E00               	movlw	0
 17056  012B4E  223D               	addwfc	(btemp+19)^0,f,c
 17057  012B50  0ECC               	movlw	-52
 17058  012B52  006F FF8C  F03E    	movff	plusw1,btemp+20
 17059  012B58  0E00               	movlw	0
 17060  012B5A  223E               	addwfc	(btemp+20)^0,f,c
 17061  012B5C  0ECD               	movlw	-51
 17062  012B5E  006F FF8C  F03F    	movff	plusw1,btemp+21
 17063  012B64  0E00               	movlw	0
 17064  012B66  223F               	addwfc	(btemp+21)^0,f,c
 17065  012B68  0ECE               	movlw	-50
 17066  012B6A  006F FF8C  F040    	movff	plusw1,btemp+22
 17067  012B70  0E00               	movlw	0
 17068  012B72  2240               	addwfc	(btemp+22)^0,f,c
 17069  012B74  0ECF               	movlw	-49
 17070  012B76  006F FF8C  F041    	movff	plusw1,btemp+23
 17071  012B7C  0E00               	movlw	0
 17072  012B7E  2241               	addwfc	(btemp+23)^0,f,c
 17073  012B80  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17074  012B86  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17075  012B8C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17076  012B92  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17077  012B98  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17078  012B9E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17079  012BA4  0060  F103  FFE6   	movff	btemp+22,postinc1
 17080  012BAA  0060  F107  FFE6   	movff	btemp+23,postinc1
 17081  012BB0  EC10  F0E4         	call	___aomod	;wreg free
 17082  012BB4  52E5               	movf	postdec1,f,c
 17083  012BB6  006F FF9C  F041    	movff	indf1,btemp+23
 17084  012BBC  52E5               	movf	postdec1,f,c
 17085  012BBE  006F FF9C  F040    	movff	indf1,btemp+22
 17086  012BC4  52E5               	movf	postdec1,f,c
 17087  012BC6  006F FF9C  F03F    	movff	indf1,btemp+21
 17088  012BCC  52E5               	movf	postdec1,f,c
 17089  012BCE  006F FF9C  F03E    	movff	indf1,btemp+20
 17090  012BD4  52E5               	movf	postdec1,f,c
 17091  012BD6  006F FF9C  F03D    	movff	indf1,btemp+19
 17092  012BDC  52E5               	movf	postdec1,f,c
 17093  012BDE  006F FF9C  F03C    	movff	indf1,btemp+18
 17094  012BE4  52E5               	movf	postdec1,f,c
 17095  012BE6  006F FF9C  F03B    	movff	indf1,btemp+17
 17096  012BEC  52E5               	movf	postdec1,f,c
 17097  012BEE  006F FF9C  F03A    	movff	indf1,btemp+16
 17098  012BF4  0EF8               	movlw	248
 17099  012BF6  26E1               	addwf	fsr1l,f,c
 17100  012BF8  0EFF               	movlw	255
 17101  012BFA  22E2               	addwfc	fsr1h,f,c
 17102  012BFC  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17103  012C02  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17104                           
 17105                           ;stkvar	_wday @ sp[(-57)+55]
 17106  012C08  0EFE               	movlw	-2
 17107  012C0A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17108  012C10  0EFF               	movlw	-1
 17109  012C12  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17110                           
 17111                           ;stkvar	_wday @ sp[(-57)+55]
 17112  012C18  0EFF               	movlw	-1
 17113  012C1A  AEE3               	btfss	plusw1,7,c
 17114  012C1C  D011               	goto	l16668
 17115                           
 17116                           ;stkvar	_wday @ sp[(-57)+55]
 17117  012C1E  0EFE               	movlw	-2
 17118  012C20  50E3               	movf	plusw1,w,c
 17119  012C22  0F07               	addlw	7
 17120  012C24  6E2A               	movwf	btemp^0,c
 17121  012C26  0EFE               	movlw	-2
 17122  012C28  0060  F0AB  FFE3   	movff	btemp,plusw1
 17123  012C2E  6A2A               	clrf	btemp^0,c
 17124  012C30  0EFF               	movlw	-1
 17125  012C32  50E3               	movf	plusw1,w,c
 17126  012C34  202A               	addwfc	btemp^0,w,c
 17127  012C36  6E2A               	movwf	btemp^0,c
 17128  012C38  0EFF               	movlw	-1
 17129  012C3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 17130  012C40                     l16668:
 17131  012C40  0EB1               	movlw	177
 17132  012C42  6EE6               	movwf	postinc1,c
 17133  012C44  0E3A               	movlw	58
 17134  012C46  6EE6               	movwf	postinc1,c
 17135  012C48  0E02               	movlw	2
 17136  012C4A  6EE6               	movwf	postinc1,c
 17137  012C4C  0E00               	movlw	0
 17138  012C4E  6EE6               	movwf	postinc1,c
 17139  012C50  0E00               	movlw	0
 17140  012C52  6EE6               	movwf	postinc1,c
 17141  012C54  0E00               	movlw	0
 17142  012C56  6EE6               	movwf	postinc1,c
 17143  012C58  0E00               	movlw	0
 17144  012C5A  6EE6               	movwf	postinc1,c
 17145  012C5C  0E00               	movlw	0
 17146  012C5E  6EE6               	movwf	postinc1,c
 17147                           
 17148                           ;stkvar	_days @ sp[(-65)+9]
 17149  012C60  50E1               	movf	fsr1l,w,c
 17150  012C62  0FC8               	addlw	-56
 17151  012C64  6ED9               	movwf	fsr2l,c
 17152  012C66  50E2               	movf	fsr1h,w,c
 17153  012C68  6EDA               	movwf	fsr2h,c
 17154  012C6A  0EFF               	movlw	255
 17155  012C6C  22DA               	addwfc	fsr2h,f,c
 17156  012C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 17157  012C74  006F FF7B FFE6     	movff	postinc2,postinc1
 17158  012C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17159  012C80  006F FF7B FFE6     	movff	postinc2,postinc1
 17160  012C86  006F FF7B FFE6     	movff	postinc2,postinc1
 17161  012C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17162  012C92  006F FF7B FFE6     	movff	postinc2,postinc1
 17163  012C98  006F FF7B FFE6     	movff	postinc2,postinc1
 17164  012C9E  EC24  F0DE         	call	___aodiv	;wreg free
 17165  012CA2  52E5               	movf	postdec1,f,c
 17166  012CA4  006F FF9C  F041    	movff	indf1,btemp+23
 17167  012CAA  52E5               	movf	postdec1,f,c
 17168  012CAC  006F FF9C  F040    	movff	indf1,btemp+22
 17169  012CB2  52E5               	movf	postdec1,f,c
 17170  012CB4  006F FF9C  F03F    	movff	indf1,btemp+21
 17171  012CBA  52E5               	movf	postdec1,f,c
 17172  012CBC  006F FF9C  F03E    	movff	indf1,btemp+20
 17173  012CC2  52E5               	movf	postdec1,f,c
 17174  012CC4  006F FF9C  F03D    	movff	indf1,btemp+19
 17175  012CCA  52E5               	movf	postdec1,f,c
 17176  012CCC  006F FF9C  F03C    	movff	indf1,btemp+18
 17177  012CD2  52E5               	movf	postdec1,f,c
 17178  012CD4  006F FF9C  F03B    	movff	indf1,btemp+17
 17179  012CDA  52E5               	movf	postdec1,f,c
 17180  012CDC  006F FF9C  F03A    	movff	indf1,btemp+16
 17181  012CE2  0EF8               	movlw	248
 17182  012CE4  26E1               	addwf	fsr1l,f,c
 17183  012CE6  0EFF               	movlw	255
 17184  012CE8  22E2               	addwfc	fsr1h,f,c
 17185  012CEA  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17186  012CF0  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17187  012CF6  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17188  012CFC  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17189                           
 17190                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17191  012D02  0EF4               	movlw	-12
 17192  012D04  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17193  012D0A  0EF5               	movlw	-11
 17194  012D0C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17195  012D12  0EF6               	movlw	-10
 17196  012D14  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17197  012D1A  0EF7               	movlw	-9
 17198  012D1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17199  012D22  0EB1               	movlw	177
 17200  012D24  6EE6               	movwf	postinc1,c
 17201  012D26  0E3A               	movlw	58
 17202  012D28  6EE6               	movwf	postinc1,c
 17203  012D2A  0E02               	movlw	2
 17204  012D2C  6EE6               	movwf	postinc1,c
 17205  012D2E  0E00               	movlw	0
 17206  012D30  6EE6               	movwf	postinc1,c
 17207  012D32  0E00               	movlw	0
 17208  012D34  6EE6               	movwf	postinc1,c
 17209  012D36  0E00               	movlw	0
 17210  012D38  6EE6               	movwf	postinc1,c
 17211  012D3A  0E00               	movlw	0
 17212  012D3C  6EE6               	movwf	postinc1,c
 17213  012D3E  0E00               	movlw	0
 17214  012D40  6EE6               	movwf	postinc1,c
 17215                           
 17216                           ;stkvar	_days @ sp[(-65)+9]
 17217  012D42  50E1               	movf	fsr1l,w,c
 17218  012D44  0FC8               	addlw	-56
 17219  012D46  6ED9               	movwf	fsr2l,c
 17220  012D48  50E2               	movf	fsr1h,w,c
 17221  012D4A  6EDA               	movwf	fsr2h,c
 17222  012D4C  0EFF               	movlw	255
 17223  012D4E  22DA               	addwfc	fsr2h,f,c
 17224  012D50  006F FF7B FFE6     	movff	postinc2,postinc1
 17225  012D56  006F FF7B FFE6     	movff	postinc2,postinc1
 17226  012D5C  006F FF7B FFE6     	movff	postinc2,postinc1
 17227  012D62  006F FF7B FFE6     	movff	postinc2,postinc1
 17228  012D68  006F FF7B FFE6     	movff	postinc2,postinc1
 17229  012D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 17230  012D74  006F FF7B FFE6     	movff	postinc2,postinc1
 17231  012D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17232  012D80  EC10  F0E4         	call	___aomod	;wreg free
 17233  012D84  52E5               	movf	postdec1,f,c
 17234  012D86  006F FF9C  F041    	movff	indf1,btemp+23
 17235  012D8C  52E5               	movf	postdec1,f,c
 17236  012D8E  006F FF9C  F040    	movff	indf1,btemp+22
 17237  012D94  52E5               	movf	postdec1,f,c
 17238  012D96  006F FF9C  F03F    	movff	indf1,btemp+21
 17239  012D9C  52E5               	movf	postdec1,f,c
 17240  012D9E  006F FF9C  F03E    	movff	indf1,btemp+20
 17241  012DA4  52E5               	movf	postdec1,f,c
 17242  012DA6  006F FF9C  F03D    	movff	indf1,btemp+19
 17243  012DAC  52E5               	movf	postdec1,f,c
 17244  012DAE  006F FF9C  F03C    	movff	indf1,btemp+18
 17245  012DB4  52E5               	movf	postdec1,f,c
 17246  012DB6  006F FF9C  F03B    	movff	indf1,btemp+17
 17247  012DBC  52E5               	movf	postdec1,f,c
 17248  012DBE  006F FF9C  F03A    	movff	indf1,btemp+16
 17249  012DC4  0EF8               	movlw	248
 17250  012DC6  26E1               	addwf	fsr1l,f,c
 17251  012DC8  0EFF               	movlw	255
 17252  012DCA  22E2               	addwfc	fsr1h,f,c
 17253  012DCC  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17254  012DD2  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17255  012DD8  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17256  012DDE  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17257                           
 17258                           ;stkvar	_remdays @ sp[(-57)+25]
 17259  012DE4  0EE0               	movlw	-32
 17260  012DE6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17261  012DEC  0EE1               	movlw	-31
 17262  012DEE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17263  012DF4  0EE2               	movlw	-30
 17264  012DF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17265  012DFC  0EE3               	movlw	-29
 17266  012DFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17267                           
 17268                           ;stkvar	_remdays @ sp[(-57)+25]
 17269  012E04  0EE3               	movlw	-29
 17270  012E06  AEE3               	btfss	plusw1,7,c
 17271  012E08  D01B               	goto	l16676
 17272                           
 17273                           ;stkvar	_remdays @ sp[(-57)+25]
 17274  012E0A  50E1               	movf	fsr1l,w,c
 17275  012E0C  0FE0               	addlw	-32
 17276  012E0E  6ED9               	movwf	fsr2l,c
 17277  012E10  50E2               	movf	fsr1h,w,c
 17278  012E12  6EDA               	movwf	fsr2h,c
 17279  012E14  0EFF               	movlw	255
 17280  012E16  22DA               	addwfc	fsr2h,f,c
 17281  012E18  0EB1               	movlw	177
 17282  012E1A  26DE               	addwf	postinc2,f,c
 17283  012E1C  0E3A               	movlw	58
 17284  012E1E  22DE               	addwfc	postinc2,f,c
 17285  012E20  0E02               	movlw	2
 17286  012E22  22DE               	addwfc	postinc2,f,c
 17287  012E24  0E00               	movlw	0
 17288  012E26  22DE               	addwfc	postinc2,f,c
 17289                           
 17290                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17291  012E28  50E1               	movf	fsr1l,w,c
 17292  012E2A  0FF4               	addlw	-12
 17293  012E2C  6ED9               	movwf	fsr2l,c
 17294  012E2E  50E2               	movf	fsr1h,w,c
 17295  012E30  6EDA               	movwf	fsr2h,c
 17296  012E32  0EFF               	movlw	255
 17297  012E34  22DA               	addwfc	fsr2h,f,c
 17298  012E36  06DE               	decf	postinc2,f,c
 17299  012E38  0E00               	movlw	0
 17300  012E3A  5ADE               	subwfb	postinc2,f,c
 17301  012E3C  5ADE               	subwfb	postinc2,f,c
 17302  012E3E  5ADE               	subwfb	postinc2,f,c
 17303  012E40                     l16676:
 17304  012E40  0EAC               	movlw	172
 17305  012E42  6EE6               	movwf	postinc1,c
 17306  012E44  0E8E               	movlw	142
 17307  012E46  6EE6               	movwf	postinc1,c
 17308  012E48  0E00               	movlw	0
 17309  012E4A  6EE6               	movwf	postinc1,c
 17310  012E4C  0E00               	movlw	0
 17311  012E4E  6EE6               	movwf	postinc1,c
 17312                           
 17313                           ;stkvar	_remdays @ sp[(-61)+25]
 17314  012E50  0EDC               	movlw	-36
 17315  012E52  006F FF8F FFE6     	movff	plusw1,postinc1
 17316  012E58  006F FF8F FFE6     	movff	plusw1,postinc1
 17317  012E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 17318  012E64  006F FF8F FFE6     	movff	plusw1,postinc1
 17319  012E6A  ECD0  F0ED         	call	___aldiv	;wreg free
 17320                           
 17321                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17322  012E6E  0EE8               	movlw	-24
 17323  012E70  0060  F0AB  FFE3   	movff	btemp,plusw1
 17324  012E76  0EE9               	movlw	-23
 17325  012E78  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17326  012E7E  0EEA               	movlw	-22
 17327  012E80  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17328  012E86  0EEB               	movlw	-21
 17329  012E88  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17330                           
 17331                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17332  012E8E  0EE8               	movlw	-24
 17333  012E90  006F FF8C  F02A    	movff	plusw1,btemp
 17334  012E96  0E04               	movlw	4
 17335  012E98  182A               	xorwf	btemp^0,w,c
 17336  012E9A  E116               	bnz	l16682
 17337  012E9C  0EE9               	movlw	-23
 17338  012E9E  50E3               	movf	plusw1,w,c
 17339  012EA0  E113               	bnz	l16682
 17340  012EA2  0EEA               	movlw	-22
 17341  012EA4  50E3               	movf	plusw1,w,c
 17342  012EA6  E110               	bnz	l16682
 17343  012EA8  0EEB               	movlw	-21
 17344  012EAA  50E3               	movf	plusw1,w,c
 17345  012EAC  A4D8               	btfss	status,2,c
 17346  012EAE  D00C               	goto	l16682
 17347                           
 17348                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17349  012EB0  50E1               	movf	fsr1l,w,c
 17350  012EB2  0FE8               	addlw	-24
 17351  012EB4  6ED9               	movwf	fsr2l,c
 17352  012EB6  50E2               	movf	fsr1h,w,c
 17353  012EB8  6EDA               	movwf	fsr2h,c
 17354  012EBA  0EFF               	movlw	255
 17355  012EBC  22DA               	addwfc	fsr2h,f,c
 17356  012EBE  06DE               	decf	postinc2,f,c
 17357  012EC0  0E00               	movlw	0
 17358  012EC2  5ADE               	subwfb	postinc2,f,c
 17359  012EC4  5ADE               	subwfb	postinc2,f,c
 17360  012EC6  5ADE               	subwfb	postinc2,f,c
 17361  012EC8                     l16682:
 17362  012EC8  0EAC               	movlw	172
 17363  012ECA  6EE6               	movwf	postinc1,c
 17364  012ECC  0E8E               	movlw	142
 17365  012ECE  6EE6               	movwf	postinc1,c
 17366  012ED0  0E00               	movlw	0
 17367  012ED2  6EE6               	movwf	postinc1,c
 17368  012ED4  0E00               	movlw	0
 17369  012ED6  6EE6               	movwf	postinc1,c
 17370                           
 17371                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17372  012ED8  0EE4               	movlw	-28
 17373  012EDA  006F FF8F FFE6     	movff	plusw1,postinc1
 17374  012EE0  006F FF8F FFE6     	movff	plusw1,postinc1
 17375  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 17376  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 17377  012EF2  EC14  F0FF         	call	___lmul	;wreg free
 17378                           
 17379                           ;stkvar	_remdays @ sp[(-57)+25]
 17380  012EF6  50E1               	movf	fsr1l,w,c
 17381  012EF8  0FE0               	addlw	-32
 17382  012EFA  6ED9               	movwf	fsr2l,c
 17383  012EFC  50E2               	movf	fsr1h,w,c
 17384  012EFE  6EDA               	movwf	fsr2h,c
 17385  012F00  0EFF               	movlw	255
 17386  012F02  22DA               	addwfc	fsr2h,f,c
 17387  012F04  502A               	movf	btemp^0,w,c
 17388  012F06  5EDE               	subwf	postinc2,f,c
 17389  012F08  502B               	movf	(btemp+1)^0,w,c
 17390  012F0A  5ADE               	subwfb	postinc2,f,c
 17391  012F0C  502C               	movf	(btemp+2)^0,w,c
 17392  012F0E  5ADE               	subwfb	postinc2,f,c
 17393  012F10  502D               	movf	(btemp+3)^0,w,c
 17394  012F12  5ADE               	subwfb	postinc2,f,c
 17395  012F14  0EB5               	movlw	181
 17396  012F16  6EE6               	movwf	postinc1,c
 17397  012F18  0E05               	movlw	5
 17398  012F1A  6EE6               	movwf	postinc1,c
 17399  012F1C  0E00               	movlw	0
 17400  012F1E  6EE6               	movwf	postinc1,c
 17401  012F20  0E00               	movlw	0
 17402  012F22  6EE6               	movwf	postinc1,c
 17403                           
 17404                           ;stkvar	_remdays @ sp[(-61)+25]
 17405  012F24  0EDC               	movlw	-36
 17406  012F26  006F FF8F FFE6     	movff	plusw1,postinc1
 17407  012F2C  006F FF8F FFE6     	movff	plusw1,postinc1
 17408  012F32  006F FF8F FFE6     	movff	plusw1,postinc1
 17409  012F38  006F FF8F FFE6     	movff	plusw1,postinc1
 17410  012F3E  ECD0  F0ED         	call	___aldiv	;wreg free
 17411                           
 17412                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17413  012F42  0EE4               	movlw	-28
 17414  012F44  0060  F0AB  FFE3   	movff	btemp,plusw1
 17415  012F4A  0EE5               	movlw	-27
 17416  012F4C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17417  012F52  0EE6               	movlw	-26
 17418  012F54  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17419  012F5A  0EE7               	movlw	-25
 17420  012F5C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17421                           
 17422                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17423  012F62  0EE4               	movlw	-28
 17424  012F64  006F FF8C  F02A    	movff	plusw1,btemp
 17425  012F6A  0E19               	movlw	25
 17426  012F6C  182A               	xorwf	btemp^0,w,c
 17427  012F6E  E116               	bnz	l16690
 17428  012F70  0EE5               	movlw	-27
 17429  012F72  50E3               	movf	plusw1,w,c
 17430  012F74  E113               	bnz	l16690
 17431  012F76  0EE6               	movlw	-26
 17432  012F78  50E3               	movf	plusw1,w,c
 17433  012F7A  E110               	bnz	l16690
 17434  012F7C  0EE7               	movlw	-25
 17435  012F7E  50E3               	movf	plusw1,w,c
 17436  012F80  A4D8               	btfss	status,2,c
 17437  012F82  D00C               	goto	l16690
 17438                           
 17439                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17440  012F84  50E1               	movf	fsr1l,w,c
 17441  012F86  0FE4               	addlw	-28
 17442  012F88  6ED9               	movwf	fsr2l,c
 17443  012F8A  50E2               	movf	fsr1h,w,c
 17444  012F8C  6EDA               	movwf	fsr2h,c
 17445  012F8E  0EFF               	movlw	255
 17446  012F90  22DA               	addwfc	fsr2h,f,c
 17447  012F92  06DE               	decf	postinc2,f,c
 17448  012F94  0E00               	movlw	0
 17449  012F96  5ADE               	subwfb	postinc2,f,c
 17450  012F98  5ADE               	subwfb	postinc2,f,c
 17451  012F9A  5ADE               	subwfb	postinc2,f,c
 17452  012F9C                     l16690:
 17453  012F9C  0EB5               	movlw	181
 17454  012F9E  6EE6               	movwf	postinc1,c
 17455  012FA0  0E05               	movlw	5
 17456  012FA2  6EE6               	movwf	postinc1,c
 17457  012FA4  0E00               	movlw	0
 17458  012FA6  6EE6               	movwf	postinc1,c
 17459  012FA8  0E00               	movlw	0
 17460  012FAA  6EE6               	movwf	postinc1,c
 17461                           
 17462                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17463  012FAC  0EE0               	movlw	-32
 17464  012FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 17465  012FB4  006F FF8F FFE6     	movff	plusw1,postinc1
 17466  012FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 17467  012FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 17468  012FC6  EC14  F0FF         	call	___lmul	;wreg free
 17469                           
 17470                           ;stkvar	_remdays @ sp[(-57)+25]
 17471  012FCA  50E1               	movf	fsr1l,w,c
 17472  012FCC  0FE0               	addlw	-32
 17473  012FCE  6ED9               	movwf	fsr2l,c
 17474  012FD0  50E2               	movf	fsr1h,w,c
 17475  012FD2  6EDA               	movwf	fsr2h,c
 17476  012FD4  0EFF               	movlw	255
 17477  012FD6  22DA               	addwfc	fsr2h,f,c
 17478  012FD8  502A               	movf	btemp^0,w,c
 17479  012FDA  5EDE               	subwf	postinc2,f,c
 17480  012FDC  502B               	movf	(btemp+1)^0,w,c
 17481  012FDE  5ADE               	subwfb	postinc2,f,c
 17482  012FE0  502C               	movf	(btemp+2)^0,w,c
 17483  012FE2  5ADE               	subwfb	postinc2,f,c
 17484  012FE4  502D               	movf	(btemp+3)^0,w,c
 17485  012FE6  5ADE               	subwfb	postinc2,f,c
 17486  012FE8  0E6D               	movlw	109
 17487  012FEA  6EE6               	movwf	postinc1,c
 17488  012FEC  0E01               	movlw	1
 17489  012FEE  6EE6               	movwf	postinc1,c
 17490  012FF0  0E00               	movlw	0
 17491  012FF2  6EE6               	movwf	postinc1,c
 17492  012FF4  0E00               	movlw	0
 17493  012FF6  6EE6               	movwf	postinc1,c
 17494                           
 17495                           ;stkvar	_remdays @ sp[(-61)+25]
 17496  012FF8  0EDC               	movlw	-36
 17497  012FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17498  013000  006F FF8F FFE6     	movff	plusw1,postinc1
 17499  013006  006F FF8F FFE6     	movff	plusw1,postinc1
 17500  01300C  006F FF8F FFE6     	movff	plusw1,postinc1
 17501  013012  ECD0  F0ED         	call	___aldiv	;wreg free
 17502                           
 17503                           ;stkvar	_remyears @ sp[(-57)+37]
 17504  013016  0EEC               	movlw	-20
 17505  013018  0060  F0AB  FFE3   	movff	btemp,plusw1
 17506  01301E  0EED               	movlw	-19
 17507  013020  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17508  013026  0EEE               	movlw	-18
 17509  013028  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17510  01302E  0EEF               	movlw	-17
 17511  013030  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17512                           
 17513                           ;stkvar	_remyears @ sp[(-57)+37]
 17514  013036  0EEC               	movlw	-20
 17515  013038  006F FF8C  F02A    	movff	plusw1,btemp
 17516  01303E  0E04               	movlw	4
 17517  013040  182A               	xorwf	btemp^0,w,c
 17518  013042  E116               	bnz	l16698
 17519  013044  0EED               	movlw	-19
 17520  013046  50E3               	movf	plusw1,w,c
 17521  013048  E113               	bnz	l16698
 17522  01304A  0EEE               	movlw	-18
 17523  01304C  50E3               	movf	plusw1,w,c
 17524  01304E  E110               	bnz	l16698
 17525  013050  0EEF               	movlw	-17
 17526  013052  50E3               	movf	plusw1,w,c
 17527  013054  A4D8               	btfss	status,2,c
 17528  013056  D00C               	goto	l16698
 17529                           
 17530                           ;stkvar	_remyears @ sp[(-57)+37]
 17531  013058  50E1               	movf	fsr1l,w,c
 17532  01305A  0FEC               	addlw	-20
 17533  01305C  6ED9               	movwf	fsr2l,c
 17534  01305E  50E2               	movf	fsr1h,w,c
 17535  013060  6EDA               	movwf	fsr2h,c
 17536  013062  0EFF               	movlw	255
 17537  013064  22DA               	addwfc	fsr2h,f,c
 17538  013066  06DE               	decf	postinc2,f,c
 17539  013068  0E00               	movlw	0
 17540  01306A  5ADE               	subwfb	postinc2,f,c
 17541  01306C  5ADE               	subwfb	postinc2,f,c
 17542  01306E  5ADE               	subwfb	postinc2,f,c
 17543  013070                     l16698:
 17544  013070  0E6D               	movlw	109
 17545  013072  6EE6               	movwf	postinc1,c
 17546  013074  0E01               	movlw	1
 17547  013076  6EE6               	movwf	postinc1,c
 17548  013078  0E00               	movlw	0
 17549  01307A  6EE6               	movwf	postinc1,c
 17550  01307C  0E00               	movlw	0
 17551  01307E  6EE6               	movwf	postinc1,c
 17552                           
 17553                           ;stkvar	_remyears @ sp[(-61)+37]
 17554  013080  0EE8               	movlw	-24
 17555  013082  006F FF8F FFE6     	movff	plusw1,postinc1
 17556  013088  006F FF8F FFE6     	movff	plusw1,postinc1
 17557  01308E  006F FF8F FFE6     	movff	plusw1,postinc1
 17558  013094  006F FF8F FFE6     	movff	plusw1,postinc1
 17559  01309A  EC14  F0FF         	call	___lmul	;wreg free
 17560                           
 17561                           ;stkvar	_remdays @ sp[(-57)+25]
 17562  01309E  50E1               	movf	fsr1l,w,c
 17563  0130A0  0FE0               	addlw	-32
 17564  0130A2  6ED9               	movwf	fsr2l,c
 17565  0130A4  50E2               	movf	fsr1h,w,c
 17566  0130A6  6EDA               	movwf	fsr2h,c
 17567  0130A8  0EFF               	movlw	255
 17568  0130AA  22DA               	addwfc	fsr2h,f,c
 17569  0130AC  502A               	movf	btemp^0,w,c
 17570  0130AE  5EDE               	subwf	postinc2,f,c
 17571  0130B0  502B               	movf	(btemp+1)^0,w,c
 17572  0130B2  5ADE               	subwfb	postinc2,f,c
 17573  0130B4  502C               	movf	(btemp+2)^0,w,c
 17574  0130B6  5ADE               	subwfb	postinc2,f,c
 17575  0130B8  502D               	movf	(btemp+3)^0,w,c
 17576  0130BA  5ADE               	subwfb	postinc2,f,c
 17577                           
 17578                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17579  0130BC  0EC7               	movlw	-57
 17580  0130BE  6AE3               	clrf	plusw1,c
 17581                           
 17582                           ;stkvar	_remyears @ sp[(-57)+37]
 17583  0130C0  0EEC               	movlw	-20
 17584  0130C2  50E3               	movf	plusw1,w,c
 17585  0130C4  E127               	bnz	l16710
 17586  0130C6  0EED               	movlw	-19
 17587  0130C8  50E3               	movf	plusw1,w,c
 17588  0130CA  E124               	bnz	l16710
 17589  0130CC  0EEE               	movlw	-18
 17590  0130CE  50E3               	movf	plusw1,w,c
 17591  0130D0  E121               	bnz	l16710
 17592  0130D2  0EEF               	movlw	-17
 17593  0130D4  50E3               	movf	plusw1,w,c
 17594  0130D6  A4D8               	btfss	status,2,c
 17595  0130D8  D01D               	goto	l16710
 17596                           
 17597                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17598  0130DA  0EE4               	movlw	-28
 17599  0130DC  50E3               	movf	plusw1,w,c
 17600  0130DE  E117               	bnz	l16708
 17601  0130E0  0EE5               	movlw	-27
 17602  0130E2  50E3               	movf	plusw1,w,c
 17603  0130E4  E114               	bnz	l16708
 17604  0130E6  0EE6               	movlw	-26
 17605  0130E8  50E3               	movf	plusw1,w,c
 17606  0130EA  E111               	bnz	l16708
 17607  0130EC  0EE7               	movlw	-25
 17608  0130EE  50E3               	movf	plusw1,w,c
 17609  0130F0  A4D8               	btfss	status,2,c
 17610  0130F2  D00D               	goto	u16320
 17611                           
 17612                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17613  0130F4  0EE8               	movlw	-24
 17614  0130F6  50E3               	movf	plusw1,w,c
 17615  0130F8  E10D               	bnz	l16710
 17616  0130FA  0EE9               	movlw	-23
 17617  0130FC  50E3               	movf	plusw1,w,c
 17618  0130FE  E10A               	bnz	l16710
 17619  013100  0EEA               	movlw	-22
 17620  013102  50E3               	movf	plusw1,w,c
 17621  013104  E107               	bnz	l16710
 17622  013106  0EEB               	movlw	-21
 17623  013108  50E3               	movf	plusw1,w,c
 17624  01310A  A4D8               	btfss	status,2,c
 17625  01310C  D003               	goto	l16710
 17626  01310E                     u16320:
 17627  01310E                     l16708:
 17628                           
 17629                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17630  01310E  0EC7               	movlw	-57
 17631  013110  6AE3               	clrf	plusw1,c
 17632  013112  2AE3               	incf	plusw1,f,c
 17633  013114                     l16710:
 17634                           
 17635                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17636  013114  0EC7               	movlw	-57
 17637  013116  50E3               	movf	plusw1,w,c
 17638  013118  6E34               	movwf	(btemp+10)^0,c
 17639  01311A  6A35               	clrf	(btemp+11)^0,c
 17640                           
 17641                           ;stkvar	_leap @ sp[(-57)+51]
 17642  01311C  0EFA               	movlw	-6
 17643  01311E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17644  013124  0EFB               	movlw	-5
 17645  013126  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17646                           
 17647                           ;stkvar	_remdays @ sp[(-57)+25]
 17648                           ;stkvar	_leap @ sp[(-57)+51]
 17649  01312C  0EFA               	movlw	-6
 17650  01312E  006F FF8C  F034    	movff	plusw1,btemp+10
 17651  013134  0EFB               	movlw	-5
 17652  013136  006F FF8C  F035    	movff	plusw1,btemp+11
 17653  01313C  0EE0               	movlw	-32
 17654  01313E  50E3               	movf	plusw1,w,c
 17655  013140  2634               	addwf	(btemp+10)^0,f,c
 17656  013142  0EE1               	movlw	-31
 17657  013144  50E3               	movf	plusw1,w,c
 17658  013146  2235               	addwfc	(btemp+11)^0,f,c
 17659  013148  0E3B               	movlw	59
 17660  01314A  2634               	addwf	(btemp+10)^0,f,c
 17661  01314C  0E00               	movlw	0
 17662  01314E  2235               	addwfc	(btemp+11)^0,f,c
 17663                           
 17664                           ;stkvar	_yday @ sp[(-57)+53]
 17665  013150  0EFC               	movlw	-4
 17666  013152  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17667  013158  0EFD               	movlw	-3
 17668  01315A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17669                           
 17670                           ;stkvar	_leap @ sp[(-57)+51]
 17671  013160  0EFA               	movlw	-6
 17672  013162  50E3               	movf	plusw1,w,c
 17673  013164  0F6D               	addlw	109
 17674  013166  6E34               	movwf	(btemp+10)^0,c
 17675  013168  0EFB               	movlw	-5
 17676  01316A  006F FF8C  F035    	movff	plusw1,btemp+11
 17677  013170  0E01               	movlw	1
 17678  013172  2235               	addwfc	(btemp+11)^0,f,c
 17679                           
 17680                           ;stkvar	_yday @ sp[(-57)+53]
 17681  013174  0EFC               	movlw	-4
 17682  013176  006F FF8C  F02A    	movff	plusw1,btemp
 17683  01317C  5034               	movf	(btemp+10)^0,w,c
 17684  01317E  5C2A               	subwf	btemp^0,w,c
 17685  013180  0EFD               	movlw	-3
 17686  013182  50E3               	movf	plusw1,w,c
 17687  013184  0A80               	xorlw	128
 17688  013186  6E2A               	movwf	btemp^0,c
 17689  013188  5035               	movf	(btemp+11)^0,w,c
 17690  01318A  0A80               	xorlw	128
 17691  01318C  582A               	subwfb	btemp^0,w,c
 17692  01318E  A0D8               	btfss	status,0,c
 17693  013190  D01E               	goto	l16718
 17694                           
 17695                           ;stkvar	_leap @ sp[(-57)+51]
 17696  013192  0EFA               	movlw	-6
 17697  013194  50E3               	movf	plusw1,w,c
 17698  013196  0F6D               	addlw	109
 17699  013198  6E34               	movwf	(btemp+10)^0,c
 17700  01319A  0EFB               	movlw	-5
 17701  01319C  006F FF8C  F035    	movff	plusw1,btemp+11
 17702  0131A2  0E01               	movlw	1
 17703  0131A4  2235               	addwfc	(btemp+11)^0,f,c
 17704                           
 17705                           ;stkvar	_yday @ sp[(-57)+53]
 17706  0131A6  0EFC               	movlw	-4
 17707  0131A8  006F FF8C  F02A    	movff	plusw1,btemp
 17708  0131AE  5034               	movf	(btemp+10)^0,w,c
 17709  0131B0  5E2A               	subwf	btemp^0,f,c
 17710  0131B2  0EFC               	movlw	-4
 17711  0131B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 17712  0131BA  0EFD               	movlw	-3
 17713  0131BC  006F FF8C  F02A    	movff	plusw1,btemp
 17714  0131C2  5035               	movf	(btemp+11)^0,w,c
 17715  0131C4  5A2A               	subwfb	btemp^0,f,c
 17716  0131C6  0EFD               	movlw	-3
 17717  0131C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 17718  0131CE                     l16718:
 17719                           
 17720                           ;stkvar	_remyears @ sp[(-57)+37]
 17721                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17722  0131CE  0EE4               	movlw	-28
 17723  0131D0  006F FF8C  F032    	movff	plusw1,btemp+8
 17724  0131D6  0EE5               	movlw	-27
 17725  0131D8  006F FF8C  F033    	movff	plusw1,btemp+9
 17726  0131DE  0EE6               	movlw	-26
 17727  0131E0  006F FF8C  F034    	movff	plusw1,btemp+10
 17728  0131E6  0EE7               	movlw	-25
 17729  0131E8  006F FF8C  F035    	movff	plusw1,btemp+11
 17730  0131EE  0E02               	movlw	2
 17731  0131F0                     u16345:
 17732  0131F0  90D8               	bcf	status,0,c
 17733  0131F2  3632               	rlcf	(btemp+8)^0,f,c
 17734  0131F4  3633               	rlcf	(btemp+9)^0,f,c
 17735  0131F6  3634               	rlcf	(btemp+10)^0,f,c
 17736  0131F8  3635               	rlcf	(btemp+11)^0,f,c
 17737  0131FA  2EE8               	decfsz	wreg,f,c
 17738  0131FC  D7F9               	goto	u16345
 17739  0131FE  0E64               	movlw	100
 17740  013200  6EE6               	movwf	postinc1,c
 17741  013202  0E00               	movlw	0
 17742  013204  6EE6               	movwf	postinc1,c
 17743  013206  0E00               	movlw	0
 17744  013208  6EE6               	movwf	postinc1,c
 17745  01320A  0E00               	movlw	0
 17746  01320C  6EE6               	movwf	postinc1,c
 17747                           
 17748                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17749  01320E  0EE4               	movlw	-28
 17750  013210  006F FF8F FFE6     	movff	plusw1,postinc1
 17751  013216  006F FF8F FFE6     	movff	plusw1,postinc1
 17752  01321C  006F FF8F FFE6     	movff	plusw1,postinc1
 17753  013222  006F FF8F FFE6     	movff	plusw1,postinc1
 17754  013228  EC14  F0FF         	call	___lmul	;wreg free
 17755  01322C  5032               	movf	(btemp+8)^0,w,c
 17756  01322E  242A               	addwf	btemp^0,w,c
 17757  013230  6E2E               	movwf	(btemp+4)^0,c
 17758  013232  5033               	movf	(btemp+9)^0,w,c
 17759  013234  202B               	addwfc	(btemp+1)^0,w,c
 17760  013236  6E2F               	movwf	(btemp+5)^0,c
 17761  013238  5034               	movf	(btemp+10)^0,w,c
 17762  01323A  202C               	addwfc	(btemp+2)^0,w,c
 17763  01323C  6E30               	movwf	(btemp+6)^0,c
 17764  01323E  5035               	movf	(btemp+11)^0,w,c
 17765  013240  202D               	addwfc	(btemp+3)^0,w,c
 17766  013242  6E31               	movwf	(btemp+7)^0,c
 17767  013244  0EEC               	movlw	-20
 17768  013246  50E3               	movf	plusw1,w,c
 17769  013248  262E               	addwf	(btemp+4)^0,f,c
 17770  01324A  0EED               	movlw	-19
 17771  01324C  50E3               	movf	plusw1,w,c
 17772  01324E  222F               	addwfc	(btemp+5)^0,f,c
 17773  013250  0EEE               	movlw	-18
 17774  013252  50E3               	movf	plusw1,w,c
 17775  013254  2230               	addwfc	(btemp+6)^0,f,c
 17776  013256  0EEF               	movlw	-17
 17777  013258  50E3               	movf	plusw1,w,c
 17778  01325A  2231               	addwfc	(btemp+7)^0,f,c
 17779  01325C  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 17780  013262  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 17781  013268  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 17782  01326E  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 17783  013274  6A3E               	clrf	(btemp+20)^0,c
 17784  013276  BE3D               	btfsc	(btemp+19)^0,7,c
 17785  013278  683E               	setf	(btemp+20)^0,c
 17786  01327A  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 17787  013280  0060  F0F8  F040   	movff	btemp+20,btemp+22
 17788  013286  0060  F0F8  F041   	movff	btemp+20,btemp+23
 17789  01328C  0E90               	movlw	144
 17790  01328E  6EE6               	movwf	postinc1,c
 17791  013290  0E01               	movlw	1
 17792  013292  6EE6               	movwf	postinc1,c
 17793  013294  0E00               	movlw	0
 17794  013296  6EE6               	movwf	postinc1,c
 17795  013298  0E00               	movlw	0
 17796  01329A  6EE6               	movwf	postinc1,c
 17797  01329C  0E00               	movlw	0
 17798  01329E  6EE6               	movwf	postinc1,c
 17799  0132A0  0E00               	movlw	0
 17800  0132A2  6EE6               	movwf	postinc1,c
 17801  0132A4  0E00               	movlw	0
 17802  0132A6  6EE6               	movwf	postinc1,c
 17803  0132A8  0E00               	movlw	0
 17804  0132AA  6EE6               	movwf	postinc1,c
 17805                           
 17806                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 17807  0132AC  0EEC               	movlw	-20
 17808  0132AE  006F FF8C  F042    	movff	plusw1,btemp+24
 17809  0132B4  0EED               	movlw	-19
 17810  0132B6  006F FF8C  F043    	movff	plusw1,btemp+25
 17811  0132BC  0EEE               	movlw	-18
 17812  0132BE  006F FF8C  F044    	movff	plusw1,btemp+26
 17813  0132C4  0EEF               	movlw	-17
 17814  0132C6  006F FF8C  F045    	movff	plusw1,btemp+27
 17815  0132CC  6A46               	clrf	(btemp+28)^0,c
 17816  0132CE  BE45               	btfsc	(btemp+27)^0,7,c
 17817  0132D0  6846               	setf	(btemp+28)^0,c
 17818  0132D2  0060  F118  F047   	movff	btemp+28,btemp+29
 17819  0132D8  0060  F118  F048   	movff	btemp+28,btemp+30
 17820  0132DE  0060  F118  F049   	movff	btemp+28,btemp+31
 17821  0132E4  0060  F10B  FFE6   	movff	btemp+24,postinc1
 17822  0132EA  0060  F10F  FFE6   	movff	btemp+25,postinc1
 17823  0132F0  0060  F113  FFE6   	movff	btemp+26,postinc1
 17824  0132F6  0060  F117  FFE6   	movff	btemp+27,postinc1
 17825  0132FC  0060  F11B  FFE6   	movff	btemp+28,postinc1
 17826  013302  0060  F11F  FFE6   	movff	btemp+29,postinc1
 17827  013308  0060  F123  FFE6   	movff	btemp+30,postinc1
 17828  01330E  0060  F127  FFE6   	movff	btemp+31,postinc1
 17829  013314  EC1B  F0F5         	call	___omul	;wreg free
 17830  013318  52E5               	movf	postdec1,f,c
 17831  01331A  006F FF9C  F049    	movff	indf1,btemp+31
 17832  013320  52E5               	movf	postdec1,f,c
 17833  013322  006F FF9C  F048    	movff	indf1,btemp+30
 17834  013328  52E5               	movf	postdec1,f,c
 17835  01332A  006F FF9C  F047    	movff	indf1,btemp+29
 17836  013330  52E5               	movf	postdec1,f,c
 17837  013332  006F FF9C  F046    	movff	indf1,btemp+28
 17838  013338  52E5               	movf	postdec1,f,c
 17839  01333A  006F FF9C  F045    	movff	indf1,btemp+27
 17840  013340  52E5               	movf	postdec1,f,c
 17841  013342  006F FF9C  F044    	movff	indf1,btemp+26
 17842  013348  52E5               	movf	postdec1,f,c
 17843  01334A  006F FF9C  F043    	movff	indf1,btemp+25
 17844  013350  52E5               	movf	postdec1,f,c
 17845  013352  006F FF9C  F042    	movff	indf1,btemp+24
 17846  013358  0EF8               	movlw	248
 17847  01335A  26E1               	addwf	fsr1l,f,c
 17848  01335C  0EFF               	movlw	255
 17849  01335E  22E2               	addwfc	fsr1h,f,c
 17850  013360  503A               	movf	(btemp+16)^0,w,c
 17851  013362  2442               	addwf	(btemp+24)^0,w,c
 17852  013364  6E32               	movwf	(btemp+8)^0,c
 17853  013366  503B               	movf	(btemp+17)^0,w,c
 17854  013368  2043               	addwfc	(btemp+25)^0,w,c
 17855  01336A  6E33               	movwf	(btemp+9)^0,c
 17856  01336C  503C               	movf	(btemp+18)^0,w,c
 17857  01336E  2044               	addwfc	(btemp+26)^0,w,c
 17858  013370  6E34               	movwf	(btemp+10)^0,c
 17859  013372  503D               	movf	(btemp+19)^0,w,c
 17860  013374  2045               	addwfc	(btemp+27)^0,w,c
 17861  013376  6E35               	movwf	(btemp+11)^0,c
 17862  013378  503E               	movf	(btemp+20)^0,w,c
 17863  01337A  2046               	addwfc	(btemp+28)^0,w,c
 17864  01337C  6E36               	movwf	(btemp+12)^0,c
 17865  01337E  503F               	movf	(btemp+21)^0,w,c
 17866  013380  2047               	addwfc	(btemp+29)^0,w,c
 17867  013382  6E37               	movwf	(btemp+13)^0,c
 17868  013384  5040               	movf	(btemp+22)^0,w,c
 17869  013386  2048               	addwfc	(btemp+30)^0,w,c
 17870  013388  6E38               	movwf	(btemp+14)^0,c
 17871  01338A  5041               	movf	(btemp+23)^0,w,c
 17872  01338C  2049               	addwfc	(btemp+31)^0,w,c
 17873  01338E  6E39               	movwf	(btemp+15)^0,c
 17874                           
 17875                           ;stkvar	_years @ sp[(-57)+1]
 17876  013390  0EC8               	movlw	-56
 17877  013392  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17878  013398  0EC9               	movlw	-55
 17879  01339A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17880  0133A0  0ECA               	movlw	-54
 17881  0133A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17882  0133A8  0ECB               	movlw	-53
 17883  0133AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17884  0133B0  0ECC               	movlw	-52
 17885  0133B2  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 17886  0133B8  0ECD               	movlw	-51
 17887  0133BA  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 17888  0133C0  0ECE               	movlw	-50
 17889  0133C2  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 17890  0133C8  0ECF               	movlw	-49
 17891  0133CA  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 17892                           
 17893                           ;stkvar	_months @ sp[(-57)+49]
 17894  0133D0  0EF8               	movlw	-8
 17895  0133D2  6AE3               	clrf	plusw1,c
 17896  0133D4  0EF9               	movlw	-7
 17897  0133D6  6AE3               	clrf	plusw1,c
 17898  0133D8  D030               	goto	l16726
 17899  0133DA                     l16722:
 17900                           
 17901                           ;stkvar	_remdays @ sp[(-57)+25]
 17902  0133DA  50E1               	movf	fsr1l,w,c
 17903  0133DC  0FE0               	addlw	-32
 17904  0133DE  6ED9               	movwf	fsr2l,c
 17905  0133E0  50E2               	movf	fsr1h,w,c
 17906  0133E2  6EDA               	movwf	fsr2h,c
 17907  0133E4  0EFF               	movlw	255
 17908  0133E6  22DA               	addwfc	fsr2h,f,c
 17909                           
 17910                           ;stkvar	_months @ sp[(-57)+49]
 17911  0133E8  0EF8               	movlw	-8
 17912  0133EA  006F FF8C  F034    	movff	plusw1,btemp+10
 17913  0133F0  0EF9               	movlw	-7
 17914  0133F2  006F FF8C  F035    	movff	plusw1,btemp+11
 17915  0133F8  0ED7               	movlw	low ___secs_to_tm@days_in_month
 17916  0133FA  2434               	addwf	(btemp+10)^0,w,c
 17917  0133FC  6EF6               	movwf	tblptrl,c
 17918  0133FE  0EF8               	movlw	high ___secs_to_tm@days_in_month
 17919  013400  2035               	addwfc	(btemp+11)^0,w,c
 17920  013402  6EF7               	movwf	tblptrh,c
 17921  013404                     	if	1	;There are 3 active tblptr bytes
 17922  013404  6AF8               	clrf	tblptru,c
 17923  013406  0E00               	movlw	low (__mediumconst shr (0+16))
 17924  013408  22F8               	addwfc	tblptru,f,c
 17925  01340A                     	endif
 17926  01340A  0008               	tblrd		*
 17927  01340C  50F5               	movf	tablat,w,c
 17928  01340E  5EDE               	subwf	postinc2,f,c
 17929  013410  0E00               	movlw	0
 17930  013412  5ADE               	subwfb	postinc2,f,c
 17931  013414  5ADE               	subwfb	postinc2,f,c
 17932  013416  5ADE               	subwfb	postinc2,f,c
 17933                           
 17934                           ;stkvar	_months @ sp[(-57)+49]
 17935  013418  0EF8               	movlw	-8
 17936  01341A  50E3               	movf	plusw1,w,c
 17937  01341C  0F01               	addlw	1
 17938  01341E  6E2A               	movwf	btemp^0,c
 17939  013420  0EF8               	movlw	-8
 17940  013422  0060  F0AB  FFE3   	movff	btemp,plusw1
 17941  013428  6A2A               	clrf	btemp^0,c
 17942  01342A  0EF9               	movlw	-7
 17943  01342C  50E3               	movf	plusw1,w,c
 17944  01342E  202A               	addwfc	btemp^0,w,c
 17945  013430  6E2A               	movwf	btemp^0,c
 17946  013432  0EF9               	movlw	-7
 17947  013434  0060  F0AB  FFE3   	movff	btemp,plusw1
 17948  01343A                     l16726:
 17949                           
 17950                           ;stkvar	_months @ sp[(-57)+49]
 17951  01343A  0EF8               	movlw	-8
 17952  01343C  006F FF8C  F034    	movff	plusw1,btemp+10
 17953  013442  0EF9               	movlw	-7
 17954  013444  006F FF8C  F035    	movff	plusw1,btemp+11
 17955  01344A  0ED7               	movlw	low ___secs_to_tm@days_in_month
 17956  01344C  2434               	addwf	(btemp+10)^0,w,c
 17957  01344E  6EF6               	movwf	tblptrl,c
 17958  013450  0EF8               	movlw	high ___secs_to_tm@days_in_month
 17959  013452  2035               	addwfc	(btemp+11)^0,w,c
 17960  013454  6EF7               	movwf	tblptrh,c
 17961  013456                     	if	1	;There are 3 active tblptr bytes
 17962  013456  6AF8               	clrf	tblptru,c
 17963  013458  0E00               	movlw	low (__mediumconst shr (0+16))
 17964  01345A  22F8               	addwfc	tblptru,f,c
 17965  01345C                     	endif
 17966  01345C  0008               	tblrd		*
 17967  01345E  006F FFD4  F035    	movff	tablat,btemp+11
 17968  013464  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 17969  01346A  6A2F               	clrf	(btemp+5)^0,c
 17970  01346C  6A30               	clrf	(btemp+6)^0,c
 17971  01346E  6A31               	clrf	(btemp+7)^0,c
 17972                           
 17973                           ;stkvar	_remdays @ sp[(-57)+25]
 17974  013470  0EE0               	movlw	-32
 17975  013472  006F FF8C  F02A    	movff	plusw1,btemp
 17976  013478  502E               	movf	(btemp+4)^0,w,c
 17977  01347A  5C2A               	subwf	btemp^0,w,c
 17978  01347C  0EE1               	movlw	-31
 17979  01347E  006F FF8C  F02A    	movff	plusw1,btemp
 17980  013484  502F               	movf	(btemp+5)^0,w,c
 17981  013486  582A               	subwfb	btemp^0,w,c
 17982  013488  0EE2               	movlw	-30
 17983  01348A  006F FF8C  F02A    	movff	plusw1,btemp
 17984  013490  5030               	movf	(btemp+6)^0,w,c
 17985  013492  582A               	subwfb	btemp^0,w,c
 17986  013494  0EE3               	movlw	-29
 17987  013496  50E3               	movf	plusw1,w,c
 17988  013498  0A80               	xorlw	128
 17989  01349A  6E2A               	movwf	btemp^0,c
 17990  01349C  5031               	movf	(btemp+7)^0,w,c
 17991  01349E  0A80               	xorlw	128
 17992  0134A0  582A               	subwfb	btemp^0,w,c
 17993  0134A2  B0D8               	btfsc	status,0,c
 17994  0134A4  D79A               	goto	l16722
 17995                           
 17996                           ;stkvar	_months @ sp[(-57)+49]
 17997  0134A6  0EF9               	movlw	-7
 17998  0134A8  BEE3               	btfsc	plusw1,7,c
 17999  0134AA  D026               	goto	l16734
 18000  0134AC  0EF9               	movlw	-7
 18001  0134AE  50E3               	movf	plusw1,w,c
 18002  0134B0  E108               	bnz	u16360
 18003  0134B2  0EF8               	movlw	-8
 18004  0134B4  006F FF8C  F02A    	movff	plusw1,btemp
 18005  0134BA  0E0A               	movlw	10
 18006  0134BC  5E2A               	subwf	btemp^0,f,c
 18007  0134BE  A0D8               	btfss	status,0,c
 18008  0134C0  D01B               	goto	l16734
 18009  0134C2                     u16360:
 18010                           
 18011                           ;stkvar	_months @ sp[(-57)+49]
 18012  0134C2  50E1               	movf	fsr1l,w,c
 18013  0134C4  0FF8               	addlw	-8
 18014  0134C6  6ED9               	movwf	fsr2l,c
 18015  0134C8  50E2               	movf	fsr1h,w,c
 18016  0134CA  6EDA               	movwf	fsr2h,c
 18017  0134CC  0EFF               	movlw	255
 18018  0134CE  22DA               	addwfc	fsr2h,f,c
 18019  0134D0  0EF4               	movlw	244
 18020  0134D2  26DE               	addwf	postinc2,f,c
 18021  0134D4  0EFF               	movlw	255
 18022  0134D6  22DD               	addwfc	postdec2,f,c
 18023                           
 18024                           ;stkvar	_years @ sp[(-57)+1]
 18025  0134D8  50E1               	movf	fsr1l,w,c
 18026  0134DA  0FC8               	addlw	-56
 18027  0134DC  6ED9               	movwf	fsr2l,c
 18028  0134DE  50E2               	movf	fsr1h,w,c
 18029  0134E0  6EDA               	movwf	fsr2h,c
 18030  0134E2  0EFF               	movlw	255
 18031  0134E4  22DA               	addwfc	fsr2h,f,c
 18032  0134E6  2ADE               	incf	postinc2,f,c
 18033  0134E8  0E00               	movlw	0
 18034  0134EA  22DE               	addwfc	postinc2,f,c
 18035  0134EC  22DE               	addwfc	postinc2,f,c
 18036  0134EE  22DE               	addwfc	postinc2,f,c
 18037  0134F0  22DE               	addwfc	postinc2,f,c
 18038  0134F2  22DE               	addwfc	postinc2,f,c
 18039  0134F4  22DE               	addwfc	postinc2,f,c
 18040  0134F6  22DE               	addwfc	postinc2,f,c
 18041  0134F8                     l16734:
 18042                           
 18043                           ;stkvar	_years @ sp[(-57)+1]
 18044  0134F8  0EC8               	movlw	-56
 18045  0134FA  50E3               	movf	plusw1,w,c
 18046  0134FC  0F64               	addlw	100
 18047  0134FE  6E3A               	movwf	(btemp+16)^0,c
 18048  013500  0EC9               	movlw	-55
 18049  013502  006F FF8C  F03B    	movff	plusw1,btemp+17
 18050  013508  0E00               	movlw	0
 18051  01350A  223B               	addwfc	(btemp+17)^0,f,c
 18052  01350C  0ECA               	movlw	-54
 18053  01350E  006F FF8C  F03C    	movff	plusw1,btemp+18
 18054  013514  0E00               	movlw	0
 18055  013516  223C               	addwfc	(btemp+18)^0,f,c
 18056  013518  0ECB               	movlw	-53
 18057  01351A  006F FF8C  F03D    	movff	plusw1,btemp+19
 18058  013520  0E00               	movlw	0
 18059  013522  223D               	addwfc	(btemp+19)^0,f,c
 18060  013524  0ECC               	movlw	-52
 18061  013526  006F FF8C  F03E    	movff	plusw1,btemp+20
 18062  01352C  0E00               	movlw	0
 18063  01352E  223E               	addwfc	(btemp+20)^0,f,c
 18064  013530  0ECD               	movlw	-51
 18065  013532  006F FF8C  F03F    	movff	plusw1,btemp+21
 18066  013538  0E00               	movlw	0
 18067  01353A  223F               	addwfc	(btemp+21)^0,f,c
 18068  01353C  0ECE               	movlw	-50
 18069  01353E  006F FF8C  F040    	movff	plusw1,btemp+22
 18070  013544  0E00               	movlw	0
 18071  013546  2240               	addwfc	(btemp+22)^0,f,c
 18072  013548  0ECF               	movlw	-49
 18073  01354A  006F FF8C  F041    	movff	plusw1,btemp+23
 18074  013550  0E00               	movlw	0
 18075  013552  2241               	addwfc	(btemp+23)^0,f,c
 18076  013554  BE41               	btfsc	(btemp+23)^0,7,c
 18077  013556  D00C               	goto	u16370
 18078  013558  5041               	movf	(btemp+23)^0,w,c
 18079  01355A  1040               	iorwf	(btemp+22)^0,w,c
 18080  01355C  103F               	iorwf	(btemp+21)^0,w,c
 18081  01355E  103E               	iorwf	(btemp+20)^0,w,c
 18082  013560  103D               	iorwf	(btemp+19)^0,w,c
 18083  013562  103C               	iorwf	(btemp+18)^0,w,c
 18084  013564  E103               	bnz	u16371
 18085  013566  0E80               	movlw	128
 18086  013568  5C3B               	subwf	(btemp+17)^0,w,c
 18087  01356A  B0D8               	btfsc	status,0,c
 18088  01356C                     u16371:
 18089  01356C  EF22  F094         	goto	u16230
 18090  013570                     u16370:
 18091                           
 18092                           ;stkvar	_years @ sp[(-57)+1]
 18093  013570  0EC8               	movlw	-56
 18094  013572  50E3               	movf	plusw1,w,c
 18095  013574  0F64               	addlw	100
 18096  013576  6E3A               	movwf	(btemp+16)^0,c
 18097  013578  0EC9               	movlw	-55
 18098  01357A  006F FF8C  F03B    	movff	plusw1,btemp+17
 18099  013580  0E00               	movlw	0
 18100  013582  223B               	addwfc	(btemp+17)^0,f,c
 18101  013584  0ECA               	movlw	-54
 18102  013586  006F FF8C  F03C    	movff	plusw1,btemp+18
 18103  01358C  0E00               	movlw	0
 18104  01358E  223C               	addwfc	(btemp+18)^0,f,c
 18105  013590  0ECB               	movlw	-53
 18106  013592  006F FF8C  F03D    	movff	plusw1,btemp+19
 18107  013598  0E00               	movlw	0
 18108  01359A  223D               	addwfc	(btemp+19)^0,f,c
 18109  01359C  0ECC               	movlw	-52
 18110  01359E  006F FF8C  F03E    	movff	plusw1,btemp+20
 18111  0135A4  0E00               	movlw	0
 18112  0135A6  223E               	addwfc	(btemp+20)^0,f,c
 18113  0135A8  0ECD               	movlw	-51
 18114  0135AA  006F FF8C  F03F    	movff	plusw1,btemp+21
 18115  0135B0  0E00               	movlw	0
 18116  0135B2  223F               	addwfc	(btemp+21)^0,f,c
 18117  0135B4  0ECE               	movlw	-50
 18118  0135B6  006F FF8C  F040    	movff	plusw1,btemp+22
 18119  0135BC  0E00               	movlw	0
 18120  0135BE  2240               	addwfc	(btemp+22)^0,f,c
 18121  0135C0  0ECF               	movlw	-49
 18122  0135C2  006F FF8C  F041    	movff	plusw1,btemp+23
 18123  0135C8  0E00               	movlw	0
 18124  0135CA  2241               	addwfc	(btemp+23)^0,f,c
 18125  0135CC  AE41               	btfss	(btemp+23)^0,7,c
 18126  0135CE  D011               	goto	l16742
 18127  0135D0  0E80               	movlw	128
 18128  0135D2  5C3B               	subwf	(btemp+17)^0,w,c
 18129  0135D4  0EFF               	movlw	255
 18130  0135D6  583C               	subwfb	(btemp+18)^0,w,c
 18131  0135D8  0EFF               	movlw	255
 18132  0135DA  583D               	subwfb	(btemp+19)^0,w,c
 18133  0135DC  0EFF               	movlw	255
 18134  0135DE  583E               	subwfb	(btemp+20)^0,w,c
 18135  0135E0  0EFF               	movlw	255
 18136  0135E2  583F               	subwfb	(btemp+21)^0,w,c
 18137  0135E4  0EFF               	movlw	255
 18138  0135E6  5840               	subwfb	(btemp+22)^0,w,c
 18139  0135E8  0EFF               	movlw	255
 18140  0135EA  5841               	subwfb	(btemp+23)^0,w,c
 18141  0135EC  A0D8               	btfss	status,0,c
 18142  0135EE  EF22  F094         	goto	u16230
 18143  0135F2                     l16742:
 18144                           
 18145                           ;stkvar	_years @ sp[(-57)+1]
 18146  0135F2  0EC8               	movlw	-56
 18147  0135F4  50E3               	movf	plusw1,w,c
 18148  0135F6  0F64               	addlw	100
 18149  0135F8  6E34               	movwf	(btemp+10)^0,c
 18150  0135FA  0EC9               	movlw	-55
 18151  0135FC  006F FF8C  F035    	movff	plusw1,btemp+11
 18152  013602  0E00               	movlw	0
 18153  013604  2235               	addwfc	(btemp+11)^0,f,c
 18154                           
 18155                           ;stkvar	_tm @ sp[(-57)+-10]
 18156  013606  0EBD               	movlw	-67
 18157  013608  006F FF8C  F032    	movff	plusw1,btemp+8
 18158  01360E  0EBE               	movlw	-66
 18159  013610  006F FF8C  F033    	movff	plusw1,btemp+9
 18160  013616  0E0A               	movlw	10
 18161  013618  2432               	addwf	(btemp+8)^0,w,c
 18162  01361A  6ED9               	movwf	fsr2l,c
 18163  01361C  0E00               	movlw	0
 18164  01361E  2033               	addwfc	(btemp+9)^0,w,c
 18165  013620  6EDA               	movwf	fsr2h,c
 18166  013622  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18167  013628  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18168                           
 18169                           ;stkvar	_months @ sp[(-57)+49]
 18170  01362E  0EF8               	movlw	-8
 18171  013630  50E3               	movf	plusw1,w,c
 18172  013632  0F02               	addlw	2
 18173  013634  6E34               	movwf	(btemp+10)^0,c
 18174  013636  0EF9               	movlw	-7
 18175  013638  006F FF8C  F035    	movff	plusw1,btemp+11
 18176  01363E  0E00               	movlw	0
 18177  013640  2235               	addwfc	(btemp+11)^0,f,c
 18178                           
 18179                           ;stkvar	_tm @ sp[(-57)+-10]
 18180  013642  0EBD               	movlw	-67
 18181  013644  006F FF8C  F032    	movff	plusw1,btemp+8
 18182  01364A  0EBE               	movlw	-66
 18183  01364C  006F FF8C  F033    	movff	plusw1,btemp+9
 18184  013652  0E08               	movlw	8
 18185  013654  2432               	addwf	(btemp+8)^0,w,c
 18186  013656  6ED9               	movwf	fsr2l,c
 18187  013658  0E00               	movlw	0
 18188  01365A  2033               	addwfc	(btemp+9)^0,w,c
 18189  01365C  6EDA               	movwf	fsr2h,c
 18190  01365E  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18191  013664  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18192                           
 18193                           ;stkvar	_remdays @ sp[(-57)+25]
 18194  01366A  0EE0               	movlw	-32
 18195  01366C  50E3               	movf	plusw1,w,c
 18196  01366E  0F01               	addlw	1
 18197  013670  6E34               	movwf	(btemp+10)^0,c
 18198  013672  0EE1               	movlw	-31
 18199  013674  006F FF8C  F035    	movff	plusw1,btemp+11
 18200  01367A  0E00               	movlw	0
 18201  01367C  2235               	addwfc	(btemp+11)^0,f,c
 18202                           
 18203                           ;stkvar	_tm @ sp[(-57)+-10]
 18204  01367E  0EBD               	movlw	-67
 18205  013680  006F FF8C  F032    	movff	plusw1,btemp+8
 18206  013686  0EBE               	movlw	-66
 18207  013688  006F FF8C  F033    	movff	plusw1,btemp+9
 18208  01368E  0E06               	movlw	6
 18209  013690  2432               	addwf	(btemp+8)^0,w,c
 18210  013692  6ED9               	movwf	fsr2l,c
 18211  013694  0E00               	movlw	0
 18212  013696  2033               	addwfc	(btemp+9)^0,w,c
 18213  013698  6EDA               	movwf	fsr2h,c
 18214  01369A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18215  0136A0  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18216                           
 18217                           ;stkvar	_wday @ sp[(-57)+55]
 18218  0136A6  50E1               	movf	fsr1l,w,c
 18219  0136A8  0FFE               	addlw	-2
 18220  0136AA  6ED9               	movwf	fsr2l,c
 18221  0136AC  50E2               	movf	fsr1h,w,c
 18222  0136AE  6EDA               	movwf	fsr2h,c
 18223  0136B0  0EFF               	movlw	255
 18224  0136B2  22DA               	addwfc	fsr2h,f,c
 18225                           
 18226                           ;stkvar	_tm @ sp[(-57)+-10]
 18227  0136B4  0EBD               	movlw	-67
 18228  0136B6  006F FF8C  F034    	movff	plusw1,btemp+10
 18229  0136BC  0EBE               	movlw	-66
 18230  0136BE  006F FF8C  F035    	movff	plusw1,btemp+11
 18231  0136C4  0E0C               	movlw	12
 18232  0136C6  2434               	addwf	(btemp+10)^0,w,c
 18233  0136C8  6EE9               	movwf	fsr0l,c
 18234  0136CA  0E00               	movlw	0
 18235  0136CC  2035               	addwfc	(btemp+11)^0,w,c
 18236  0136CE  6EEA               	movwf	fsr0h,c
 18237  0136D0  006F FF7B FFEE     	movff	postinc2,postinc0
 18238  0136D6  006F FF77 FFED     	movff	postdec2,postdec0
 18239                           
 18240                           ;stkvar	_yday @ sp[(-57)+53]
 18241  0136DC  50E1               	movf	fsr1l,w,c
 18242  0136DE  0FFC               	addlw	-4
 18243  0136E0  6ED9               	movwf	fsr2l,c
 18244  0136E2  50E2               	movf	fsr1h,w,c
 18245  0136E4  6EDA               	movwf	fsr2h,c
 18246  0136E6  0EFF               	movlw	255
 18247  0136E8  22DA               	addwfc	fsr2h,f,c
 18248                           
 18249                           ;stkvar	_tm @ sp[(-57)+-10]
 18250  0136EA  0EBD               	movlw	-67
 18251  0136EC  006F FF8C  F034    	movff	plusw1,btemp+10
 18252  0136F2  0EBE               	movlw	-66
 18253  0136F4  006F FF8C  F035    	movff	plusw1,btemp+11
 18254  0136FA  0E0E               	movlw	14
 18255  0136FC  2434               	addwf	(btemp+10)^0,w,c
 18256  0136FE  6EE9               	movwf	fsr0l,c
 18257  013700  0E00               	movlw	0
 18258  013702  2035               	addwfc	(btemp+11)^0,w,c
 18259  013704  6EEA               	movwf	fsr0h,c
 18260  013706  006F FF7B FFEE     	movff	postinc2,postinc0
 18261  01370C  006F FF77 FFED     	movff	postdec2,postdec0
 18262  013712  0E10               	movlw	16
 18263  013714  6EE6               	movwf	postinc1,c
 18264  013716  0E0E               	movlw	14
 18265  013718  6EE6               	movwf	postinc1,c
 18266  01371A  0E00               	movlw	0
 18267  01371C  6EE6               	movwf	postinc1,c
 18268  01371E  0E00               	movlw	0
 18269  013720  6EE6               	movwf	postinc1,c
 18270                           
 18271                           ;stkvar	_remsecs @ sp[(-61)+41]
 18272  013722  0EEC               	movlw	-20
 18273  013724  006F FF8F FFE6     	movff	plusw1,postinc1
 18274  01372A  006F FF8F FFE6     	movff	plusw1,postinc1
 18275  013730  006F FF8F FFE6     	movff	plusw1,postinc1
 18276  013736  006F FF8F FFE6     	movff	plusw1,postinc1
 18277  01373C  ECD0  F0ED         	call	___aldiv	;wreg free
 18278  013740  0060  F0A8  F034   	movff	btemp,btemp+10
 18279  013746  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18280                           
 18281                           ;stkvar	_tm @ sp[(-57)+-10]
 18282  01374C  0EBD               	movlw	-67
 18283  01374E  006F FF8C  F032    	movff	plusw1,btemp+8
 18284  013754  0EBE               	movlw	-66
 18285  013756  006F FF8C  F033    	movff	plusw1,btemp+9
 18286  01375C  0E04               	movlw	4
 18287  01375E  2432               	addwf	(btemp+8)^0,w,c
 18288  013760  6ED9               	movwf	fsr2l,c
 18289  013762  0E00               	movlw	0
 18290  013764  2033               	addwfc	(btemp+9)^0,w,c
 18291  013766  6EDA               	movwf	fsr2h,c
 18292  013768  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18293  01376E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18294  013774  0E3C               	movlw	60
 18295  013776  6EE6               	movwf	postinc1,c
 18296  013778  0E00               	movlw	0
 18297  01377A  6EE6               	movwf	postinc1,c
 18298  01377C  0E00               	movlw	0
 18299  01377E  6EE6               	movwf	postinc1,c
 18300  013780  0E00               	movlw	0
 18301  013782  6EE6               	movwf	postinc1,c
 18302  013784  0E3C               	movlw	60
 18303  013786  6EE6               	movwf	postinc1,c
 18304  013788  0E00               	movlw	0
 18305  01378A  6EE6               	movwf	postinc1,c
 18306  01378C  0E00               	movlw	0
 18307  01378E  6EE6               	movwf	postinc1,c
 18308  013790  0E00               	movlw	0
 18309  013792  6EE6               	movwf	postinc1,c
 18310                           
 18311                           ;stkvar	_remsecs @ sp[(-65)+41]
 18312  013794  0EE8               	movlw	-24
 18313  013796  006F FF8F FFE6     	movff	plusw1,postinc1
 18314  01379C  006F FF8F FFE6     	movff	plusw1,postinc1
 18315  0137A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18316  0137A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18317  0137AE  ECD0  F0ED         	call	___aldiv	;wreg free
 18318  0137B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 18319  0137B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18320  0137BE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18321  0137C4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18322  0137CA  EC56  F0F2         	call	___almod	;wreg free
 18323  0137CE  0060  F0A8  F034   	movff	btemp,btemp+10
 18324  0137D4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18325                           
 18326                           ;stkvar	_tm @ sp[(-57)+-10]
 18327  0137DA  0EBD               	movlw	-67
 18328  0137DC  006F FF8C  F032    	movff	plusw1,btemp+8
 18329  0137E2  0EBE               	movlw	-66
 18330  0137E4  006F FF8C  F033    	movff	plusw1,btemp+9
 18331  0137EA  0E02               	movlw	2
 18332  0137EC  2432               	addwf	(btemp+8)^0,w,c
 18333  0137EE  6ED9               	movwf	fsr2l,c
 18334  0137F0  0E00               	movlw	0
 18335  0137F2  2033               	addwfc	(btemp+9)^0,w,c
 18336  0137F4  6EDA               	movwf	fsr2h,c
 18337  0137F6  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18338  0137FC  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18339  013802  0E3C               	movlw	60
 18340  013804  6EE6               	movwf	postinc1,c
 18341  013806  0E00               	movlw	0
 18342  013808  6EE6               	movwf	postinc1,c
 18343  01380A  0E00               	movlw	0
 18344  01380C  6EE6               	movwf	postinc1,c
 18345  01380E  0E00               	movlw	0
 18346  013810  6EE6               	movwf	postinc1,c
 18347                           
 18348                           ;stkvar	_remsecs @ sp[(-61)+41]
 18349  013812  0EEC               	movlw	-20
 18350  013814  006F FF8F FFE6     	movff	plusw1,postinc1
 18351  01381A  006F FF8F FFE6     	movff	plusw1,postinc1
 18352  013820  006F FF8F FFE6     	movff	plusw1,postinc1
 18353  013826  006F FF8F FFE6     	movff	plusw1,postinc1
 18354  01382C  EC56  F0F2         	call	___almod	;wreg free
 18355  013830  0060  F0A8  F034   	movff	btemp,btemp+10
 18356  013836  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18357                           
 18358                           ;stkvar	_tm @ sp[(-57)+-10]
 18359  01383C  0EBD               	movlw	-67
 18360  01383E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18361  013844  0EBE               	movlw	-66
 18362  013846  006F FF8F FFDA     	movff	plusw1,fsr2h
 18363  01384C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18364  013852  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18365  013858  0E00               	movlw	0
 18366  01385A  6E2A               	movwf	btemp^0,c
 18367  01385C  6A2B               	clrf	(btemp+1)^0,c
 18368  01385E  6A2C               	clrf	(btemp+2)^0,c
 18369  013860  6A2D               	clrf	(btemp+3)^0,c
 18370  013862                     l3847:
 18371                           
 18372                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18373  013862  0EBD               	movlw	189
 18374  013864  26E1               	addwf	fsr1l,f,c
 18375  013866  0EFF               	movlw	255
 18376  013868  22E2               	addwfc	fsr1h,f,c
 18377  01386A  0012               	return		;funcret
 18378  01386C                     __end_of___secs_to_tm:
 18379                           	opt callstack 0
 18380                           
 18381 ;; *************** function ___omul *****************
 18382 ;; Defined at:
 18383 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18384 ;; Parameters:    Size  Location     Type
 18385 ;;  multiplier      8  [STACK] unsigned long long 
 18386 ;;  multiplicand    8  [STACK] unsigned long long 
 18387 ;; Auto vars:     Size  Location     Type
 18388 ;;  product         8  [STACK] unsigned long long 
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  8  [STACK] unsigned long long 
 18391 ;; Registers used:
 18392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/0
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18402 ;;Total ram usage:        0 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; Hardware stack levels required when called:   15
 18405 ;; This function calls:
 18406 ;;		Nothing
 18407 ;; This function is called by:
 18408 ;;		___secs_to_tm
 18409 ;;		___year_to_secs
 18410 ;; This function uses a reentrant model
 18411 ;;
 18412                           
 18413                           	psect	text50
 18414  01EA36                     __ptext50:
 18415                           	opt callstack 0
 18416  01EA36                     ___omul:
 18417                           	opt callstack 0
 18418                           
 18419                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18420  01EA36  0E08               	movlw	8
 18421  01EA38  26E1               	addwf	fsr1l,f,c
 18422  01EA3A  0E00               	movlw	0
 18423  01EA3C  22E2               	addwfc	fsr1h,f,c
 18424                           
 18425                           ;stkvar	_product @ sp[(-8)+0]
 18426                           
 18427                           ;incstack = 0
 18428  01EA3E  0E07               	movlw	7
 18429  01EA40  6E2A               	movwf	btemp^0,c
 18430  01EA42  0EF8               	movlw	-8
 18431  01EA44                     u8031:
 18432  01EA44  6AE3               	clrf	plusw1,c
 18433  01EA46  2AE8               	incf	wreg,f,c
 18434  01EA48  062A               	decf	btemp^0,f,c
 18435  01EA4A  E2FC               	bc	u8031
 18436  01EA4C                     l10164:
 18437                           
 18438                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18439  01EA4C  0EF0               	movlw	-16
 18440  01EA4E  A0E3               	btfss	plusw1,0,c
 18441  01EA50  D050               	goto	l10168
 18442                           
 18443                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18444                           ;stkvar	_product @ sp[(-8)+0]
 18445  01EA52  0EF8               	movlw	-8
 18446  01EA54  50E3               	movf	plusw1,w,c
 18447  01EA56  6E2A               	movwf	btemp^0,c
 18448  01EA58  0EE8               	movlw	-24
 18449  01EA5A  50E3               	movf	plusw1,w,c
 18450  01EA5C  262A               	addwf	btemp^0,f,c
 18451  01EA5E  0EF8               	movlw	-8
 18452  01EA60  0060  F0AB  FFE3   	movff	btemp,plusw1
 18453  01EA66  0EF9               	movlw	-7
 18454  01EA68  50E3               	movf	plusw1,w,c
 18455  01EA6A  6E2A               	movwf	btemp^0,c
 18456  01EA6C  0EE9               	movlw	-23
 18457  01EA6E  50E3               	movf	plusw1,w,c
 18458  01EA70  222A               	addwfc	btemp^0,f,c
 18459  01EA72  0EF9               	movlw	-7
 18460  01EA74  0060  F0AB  FFE3   	movff	btemp,plusw1
 18461  01EA7A  0EFA               	movlw	-6
 18462  01EA7C  50E3               	movf	plusw1,w,c
 18463  01EA7E  6E2A               	movwf	btemp^0,c
 18464  01EA80  0EEA               	movlw	-22
 18465  01EA82  50E3               	movf	plusw1,w,c
 18466  01EA84  222A               	addwfc	btemp^0,f,c
 18467  01EA86  0EFA               	movlw	-6
 18468  01EA88  0060  F0AB  FFE3   	movff	btemp,plusw1
 18469  01EA8E  0EFB               	movlw	-5
 18470  01EA90  50E3               	movf	plusw1,w,c
 18471  01EA92  6E2A               	movwf	btemp^0,c
 18472  01EA94  0EEB               	movlw	-21
 18473  01EA96  50E3               	movf	plusw1,w,c
 18474  01EA98  222A               	addwfc	btemp^0,f,c
 18475  01EA9A  0EFB               	movlw	-5
 18476  01EA9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18477  01EAA2  0EFC               	movlw	-4
 18478  01EAA4  50E3               	movf	plusw1,w,c
 18479  01EAA6  6E2A               	movwf	btemp^0,c
 18480  01EAA8  0EEC               	movlw	-20
 18481  01EAAA  50E3               	movf	plusw1,w,c
 18482  01EAAC  222A               	addwfc	btemp^0,f,c
 18483  01EAAE  0EFC               	movlw	-4
 18484  01EAB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18485  01EAB6  0EFD               	movlw	-3
 18486  01EAB8  50E3               	movf	plusw1,w,c
 18487  01EABA  6E2A               	movwf	btemp^0,c
 18488  01EABC  0EED               	movlw	-19
 18489  01EABE  50E3               	movf	plusw1,w,c
 18490  01EAC0  222A               	addwfc	btemp^0,f,c
 18491  01EAC2  0EFD               	movlw	-3
 18492  01EAC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18493  01EACA  0EFE               	movlw	-2
 18494  01EACC  50E3               	movf	plusw1,w,c
 18495  01EACE  6E2A               	movwf	btemp^0,c
 18496  01EAD0  0EEE               	movlw	-18
 18497  01EAD2  50E3               	movf	plusw1,w,c
 18498  01EAD4  222A               	addwfc	btemp^0,f,c
 18499  01EAD6  0EFE               	movlw	-2
 18500  01EAD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 18501  01EADE  0EFF               	movlw	-1
 18502  01EAE0  50E3               	movf	plusw1,w,c
 18503  01EAE2  6E2A               	movwf	btemp^0,c
 18504  01EAE4  0EEF               	movlw	-17
 18505  01EAE6  50E3               	movf	plusw1,w,c
 18506  01EAE8  222A               	addwfc	btemp^0,f,c
 18507  01EAEA  0EFF               	movlw	-1
 18508  01EAEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18509  01EAF2                     l10168:
 18510                           
 18511                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18512  01EAF2  90D8               	bcf	status,0,c
 18513  01EAF4  0EE8               	movlw	-24
 18514  01EAF6  36E3               	rlcf	plusw1,f,c
 18515  01EAF8  0EE9               	movlw	-23
 18516  01EAFA  36E3               	rlcf	plusw1,f,c
 18517  01EAFC  0EEA               	movlw	-22
 18518  01EAFE  36E3               	rlcf	plusw1,f,c
 18519  01EB00  0EEB               	movlw	-21
 18520  01EB02  36E3               	rlcf	plusw1,f,c
 18521  01EB04  0EEC               	movlw	-20
 18522  01EB06  36E3               	rlcf	plusw1,f,c
 18523  01EB08  0EED               	movlw	-19
 18524  01EB0A  36E3               	rlcf	plusw1,f,c
 18525  01EB0C  0EEE               	movlw	-18
 18526  01EB0E  36E3               	rlcf	plusw1,f,c
 18527  01EB10  0EEF               	movlw	-17
 18528  01EB12  36E3               	rlcf	plusw1,f,c
 18529                           
 18530                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18531  01EB14  90D8               	bcf	status,0,c
 18532  01EB16  0EF7               	movlw	-9
 18533  01EB18  32E3               	rrcf	plusw1,f,c
 18534  01EB1A  0EF6               	movlw	-10
 18535  01EB1C  32E3               	rrcf	plusw1,f,c
 18536  01EB1E  0EF5               	movlw	-11
 18537  01EB20  32E3               	rrcf	plusw1,f,c
 18538  01EB22  0EF4               	movlw	-12
 18539  01EB24  32E3               	rrcf	plusw1,f,c
 18540  01EB26  0EF3               	movlw	-13
 18541  01EB28  32E3               	rrcf	plusw1,f,c
 18542  01EB2A  0EF2               	movlw	-14
 18543  01EB2C  32E3               	rrcf	plusw1,f,c
 18544  01EB2E  0EF1               	movlw	-15
 18545  01EB30  32E3               	rrcf	plusw1,f,c
 18546  01EB32  0EF0               	movlw	-16
 18547  01EB34  32E3               	rrcf	plusw1,f,c
 18548                           
 18549                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18550  01EB36  0EF0               	movlw	-16
 18551  01EB38  50E3               	movf	plusw1,w,c
 18552  01EB3A  E188               	bnz	l10164
 18553  01EB3C  0EF1               	movlw	-15
 18554  01EB3E  50E3               	movf	plusw1,w,c
 18555  01EB40  E185               	bnz	l10164
 18556  01EB42  0EF2               	movlw	-14
 18557  01EB44  50E3               	movf	plusw1,w,c
 18558  01EB46  E182               	bnz	l10164
 18559  01EB48  0EF3               	movlw	-13
 18560  01EB4A  50E3               	movf	plusw1,w,c
 18561  01EB4C  E10C               	bnz	u8051
 18562  01EB4E  0EF4               	movlw	-12
 18563  01EB50  50E3               	movf	plusw1,w,c
 18564  01EB52  E109               	bnz	u8051
 18565  01EB54  0EF5               	movlw	-11
 18566  01EB56  50E3               	movf	plusw1,w,c
 18567  01EB58  E106               	bnz	u8051
 18568  01EB5A  0EF6               	movlw	-10
 18569  01EB5C  50E3               	movf	plusw1,w,c
 18570  01EB5E  E103               	bnz	u8051
 18571  01EB60  0EF7               	movlw	-9
 18572  01EB62  50E3               	movf	plusw1,w,c
 18573  01EB64  A4D8               	btfss	status,2,c
 18574  01EB66                     u8051:
 18575  01EB66  D772               	goto	l10164
 18576                           
 18577                           ;stkvar	_product @ sp[(-8)+0]
 18578  01EB68  0EF8               	movlw	248
 18579  01EB6A  24E1               	addwf	fsr1l,w,c
 18580  01EB6C  6ED9               	movwf	fsr2l,c
 18581  01EB6E  0EFF               	movlw	255
 18582  01EB70  20E2               	addwfc	fsr1h,w,c
 18583  01EB72  6EDA               	movwf	fsr2h,c
 18584                           
 18585                           ;stkvar	?___omul @ sp[(-8)+-8]
 18586  01EB74  0E08               	movlw	8
 18587  01EB76  6E2A               	movwf	btemp^0,c
 18588  01EB78  0EF0               	movlw	-16
 18589  01EB7A                     us806999:
 18590  01EB7A  006F FF7B FFE3     	movff	postinc2,plusw1
 18591  01EB80  28E8               	incf	wreg,w,c
 18592  01EB82  2E2A               	decfsz	btemp^0,f,c
 18593  01EB84  D7FA               	bra	us806999
 18594                           
 18595                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18596  01EB86  0EF8               	movlw	248
 18597  01EB88  26E1               	addwf	fsr1l,f,c
 18598  01EB8A  0EFF               	movlw	255
 18599  01EB8C  22E2               	addwfc	fsr1h,f,c
 18600  01EB8E  0012               	return		;funcret
 18601  01EB90                     __end_of___omul:
 18602                           	opt callstack 0
 18603                           
 18604 ;; *************** function ___lmul *****************
 18605 ;; Defined at:
 18606 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18607 ;; Parameters:    Size  Location     Type
 18608 ;;  multiplier      4  [STACK] unsigned long 
 18609 ;;  multiplicand    4  [STACK] unsigned long 
 18610 ;; Auto vars:     Size  Location     Type
 18611 ;;  product         4  [STACK] unsigned long 
 18612 ;; Return value:  Size  Location     Type
 18613 ;;                  4  [STACK] unsigned long 
 18614 ;; Registers used:
 18615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18616 ;; Tracked objects:
 18617 ;;		On entry : 0/0
 18618 ;;		On exit  : 0/0
 18619 ;;		Unchanged: 0/0
 18620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18625 ;;Total ram usage:        0 bytes
 18626 ;; Hardware stack levels used:    1
 18627 ;; Hardware stack levels required when called:   15
 18628 ;; This function calls:
 18629 ;;		Nothing
 18630 ;; This function is called by:
 18631 ;;		___secs_to_tm
 18632 ;;		_rule_to_secs
 18633 ;;		___year_to_secs
 18634 ;; This function uses a reentrant model
 18635 ;;
 18636                           
 18637                           	psect	text51
 18638  01FE28                     __ptext51:
 18639                           	opt callstack 0
 18640  01FE28                     ___lmul:
 18641                           	opt callstack 0
 18642                           
 18643                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18644  01FE28  52E6               	movf	postinc1,f,c
 18645  01FE2A  52E6               	movf	postinc1,f,c
 18646  01FE2C  52E6               	movf	postinc1,f,c
 18647  01FE2E  52E6               	movf	postinc1,f,c
 18648                           
 18649                           ;stkvar	_product @ sp[(-4)+0]
 18650                           
 18651                           ;incstack = 0
 18652  01FE30  0EFC               	movlw	-4
 18653  01FE32  6AE3               	clrf	plusw1,c
 18654  01FE34  0EFD               	movlw	-3
 18655  01FE36  6AE3               	clrf	plusw1,c
 18656  01FE38  0EFE               	movlw	-2
 18657  01FE3A  6AE3               	clrf	plusw1,c
 18658  01FE3C  0EFF               	movlw	-1
 18659  01FE3E  6AE3               	clrf	plusw1,c
 18660  01FE40                     l2731:
 18661                           
 18662                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18663  01FE40  0EF8               	movlw	-8
 18664  01FE42  A0E3               	btfss	plusw1,0,c
 18665  01FE44  D028               	goto	l10154
 18666                           
 18667                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18668                           ;stkvar	_product @ sp[(-4)+0]
 18669  01FE46  0EFC               	movlw	-4
 18670  01FE48  50E3               	movf	plusw1,w,c
 18671  01FE4A  6E2A               	movwf	btemp^0,c
 18672  01FE4C  0EF4               	movlw	-12
 18673  01FE4E  50E3               	movf	plusw1,w,c
 18674  01FE50  262A               	addwf	btemp^0,f,c
 18675  01FE52  0EFC               	movlw	-4
 18676  01FE54  0060  F0AB  FFE3   	movff	btemp,plusw1
 18677  01FE5A  0EFD               	movlw	-3
 18678  01FE5C  50E3               	movf	plusw1,w,c
 18679  01FE5E  6E2A               	movwf	btemp^0,c
 18680  01FE60  0EF5               	movlw	-11
 18681  01FE62  50E3               	movf	plusw1,w,c
 18682  01FE64  222A               	addwfc	btemp^0,f,c
 18683  01FE66  0EFD               	movlw	-3
 18684  01FE68  0060  F0AB  FFE3   	movff	btemp,plusw1
 18685  01FE6E  0EFE               	movlw	-2
 18686  01FE70  50E3               	movf	plusw1,w,c
 18687  01FE72  6E2A               	movwf	btemp^0,c
 18688  01FE74  0EF6               	movlw	-10
 18689  01FE76  50E3               	movf	plusw1,w,c
 18690  01FE78  222A               	addwfc	btemp^0,f,c
 18691  01FE7A  0EFE               	movlw	-2
 18692  01FE7C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18693  01FE82  0EFF               	movlw	-1
 18694  01FE84  50E3               	movf	plusw1,w,c
 18695  01FE86  6E2A               	movwf	btemp^0,c
 18696  01FE88  0EF7               	movlw	-9
 18697  01FE8A  50E3               	movf	plusw1,w,c
 18698  01FE8C  222A               	addwfc	btemp^0,f,c
 18699  01FE8E  0EFF               	movlw	-1
 18700  01FE90  0060  F0AB  FFE3   	movff	btemp,plusw1
 18701  01FE96                     l10154:
 18702                           
 18703                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18704  01FE96  90D8               	bcf	status,0,c
 18705  01FE98  0EF4               	movlw	-12
 18706  01FE9A  36E3               	rlcf	plusw1,f,c
 18707  01FE9C  0EF5               	movlw	-11
 18708  01FE9E  36E3               	rlcf	plusw1,f,c
 18709  01FEA0  0EF6               	movlw	-10
 18710  01FEA2  36E3               	rlcf	plusw1,f,c
 18711  01FEA4  0EF7               	movlw	-9
 18712  01FEA6  36E3               	rlcf	plusw1,f,c
 18713                           
 18714                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18715  01FEA8  90D8               	bcf	status,0,c
 18716  01FEAA  0EFB               	movlw	-5
 18717  01FEAC  32E3               	rrcf	plusw1,f,c
 18718  01FEAE  0EFA               	movlw	-6
 18719  01FEB0  32E3               	rrcf	plusw1,f,c
 18720  01FEB2  0EF9               	movlw	-7
 18721  01FEB4  32E3               	rrcf	plusw1,f,c
 18722  01FEB6  0EF8               	movlw	-8
 18723  01FEB8  32E3               	rrcf	plusw1,f,c
 18724                           
 18725                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18726  01FEBA  0EF8               	movlw	-8
 18727  01FEBC  50E3               	movf	plusw1,w,c
 18728  01FEBE  E1C0               	bnz	l2731
 18729  01FEC0  0EF9               	movlw	-7
 18730  01FEC2  50E3               	movf	plusw1,w,c
 18731  01FEC4  E1BD               	bnz	l2731
 18732  01FEC6  0EFA               	movlw	-6
 18733  01FEC8  50E3               	movf	plusw1,w,c
 18734  01FECA  E1BA               	bnz	l2731
 18735  01FECC  0EFB               	movlw	-5
 18736  01FECE  50E3               	movf	plusw1,w,c
 18737  01FED0  A4D8               	btfss	status,2,c
 18738  01FED2  D7B6               	goto	l2731
 18739                           
 18740                           ;stkvar	_product @ sp[(-4)+0]
 18741  01FED4  0EFC               	movlw	-4
 18742  01FED6  006F FF8C  F02A    	movff	plusw1,btemp
 18743  01FEDC  0EFD               	movlw	-3
 18744  01FEDE  006F FF8C  F02B    	movff	plusw1,btemp+1
 18745  01FEE4  0EFE               	movlw	-2
 18746  01FEE6  006F FF8C  F02C    	movff	plusw1,btemp+2
 18747  01FEEC  0EFF               	movlw	-1
 18748  01FEEE  006F FF8C  F02D    	movff	plusw1,btemp+3
 18749                           
 18750                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18751  01FEF4  0EF4               	movlw	244
 18752  01FEF6  26E1               	addwf	fsr1l,f,c
 18753  01FEF8  0EFF               	movlw	255
 18754  01FEFA  22E2               	addwfc	fsr1h,f,c
 18755  01FEFC  0012               	return		;funcret
 18756  01FEFE                     __end_of___lmul:
 18757                           	opt callstack 0
 18758                           
 18759 ;; *************** function ___almod *****************
 18760 ;; Defined at:
 18761 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 18762 ;; Parameters:    Size  Location     Type
 18763 ;;  dividend        4  [STACK] long 
 18764 ;;  divisor         4  [STACK] long 
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;  sign            1  [STACK] unsigned char 
 18767 ;;  counter         1  [STACK] unsigned char 
 18768 ;; Return value:  Size  Location     Type
 18769 ;;                  4  [STACK] long 
 18770 ;; Registers used:
 18771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18772 ;; Tracked objects:
 18773 ;;		On entry : 0/39
 18774 ;;		On exit  : 0/0
 18775 ;;		Unchanged: 0/0
 18776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18781 ;;Total ram usage:        0 bytes
 18782 ;; Hardware stack levels used:    1
 18783 ;; Hardware stack levels required when called:   15
 18784 ;; This function calls:
 18785 ;;		Nothing
 18786 ;; This function is called by:
 18787 ;;		___secs_to_tm
 18788 ;; This function uses a reentrant model
 18789 ;;
 18790                           
 18791                           	psect	text52
 18792  01E4AC                     __ptext52:
 18793                           	opt callstack 0
 18794  01E4AC                     ___almod:
 18795                           	opt callstack 0
 18796                           
 18797                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18798  01E4AC  52E6               	movf	postinc1,f,c
 18799  01E4AE  52E6               	movf	postinc1,f,c
 18800                           
 18801                           ;stkvar	_sign @ sp[(-2)+0]
 18802                           
 18803                           ;incstack = 0
 18804  01E4B0  0EFE               	movlw	-2
 18805  01E4B2  6AE3               	clrf	plusw1,c
 18806                           
 18807                           ;stkvar	_dividend @ sp[(-2)+-4]
 18808  01E4B4  0EFD               	movlw	-3
 18809  01E4B6  AEE3               	btfss	plusw1,7,c
 18810  01E4B8  D014               	goto	l11944
 18811                           
 18812                           ;stkvar	_dividend @ sp[(-2)+-4]
 18813                           ;stkvar	_dividend @ sp[(-2)+-4]
 18814  01E4BA  0EFA               	movlw	-6
 18815  01E4BC  6CE3               	negf	plusw1,c
 18816  01E4BE  0EFB               	movlw	-5
 18817  01E4C0  1EE3               	comf	plusw1,f,c
 18818  01E4C2  0EFC               	movlw	-4
 18819  01E4C4  1EE3               	comf	plusw1,f,c
 18820  01E4C6  0EFD               	movlw	-3
 18821  01E4C8  1EE3               	comf	plusw1,f,c
 18822  01E4CA  E308               	bnc	u11180
 18823  01E4CC  0EFB               	movlw	-5
 18824  01E4CE  2AE3               	incf	plusw1,f,c
 18825  01E4D0  E305               	bnc	u11180
 18826  01E4D2  0EFC               	movlw	-4
 18827  01E4D4  2AE3               	incf	plusw1,f,c
 18828  01E4D6  E302               	bnc	u11180
 18829  01E4D8  0EFD               	movlw	-3
 18830  01E4DA  2AE3               	incf	plusw1,f,c
 18831  01E4DC                     u11180:
 18832                           
 18833                           ;stkvar	_sign @ sp[(-2)+0]
 18834  01E4DC  0EFE               	movlw	-2
 18835  01E4DE  6AE3               	clrf	plusw1,c
 18836  01E4E0  2AE3               	incf	plusw1,f,c
 18837  01E4E2                     l11944:
 18838                           
 18839                           ;stkvar	_divisor @ sp[(-2)+-8]
 18840  01E4E2  0EF9               	movlw	-7
 18841  01E4E4  AEE3               	btfss	plusw1,7,c
 18842  01E4E6  D011               	goto	u11200
 18843                           
 18844                           ;stkvar	_divisor @ sp[(-2)+-8]
 18845                           ;stkvar	_divisor @ sp[(-2)+-8]
 18846  01E4E8  0EF6               	movlw	-10
 18847  01E4EA  6CE3               	negf	plusw1,c
 18848  01E4EC  0EF7               	movlw	-9
 18849  01E4EE  1EE3               	comf	plusw1,f,c
 18850  01E4F0  0EF8               	movlw	-8
 18851  01E4F2  1EE3               	comf	plusw1,f,c
 18852  01E4F4  0EF9               	movlw	-7
 18853  01E4F6  1EE3               	comf	plusw1,f,c
 18854  01E4F8  E308               	bnc	u11200
 18855  01E4FA  0EF7               	movlw	-9
 18856  01E4FC  2AE3               	incf	plusw1,f,c
 18857  01E4FE  E305               	bnc	u11200
 18858  01E500  0EF8               	movlw	-8
 18859  01E502  2AE3               	incf	plusw1,f,c
 18860  01E504  E302               	bnc	u11200
 18861  01E506  0EF9               	movlw	-7
 18862  01E508  2AE3               	incf	plusw1,f,c
 18863  01E50A                     u11200:
 18864                           
 18865                           ;stkvar	_divisor @ sp[(-2)+-8]
 18866  01E50A  0EF6               	movlw	-10
 18867  01E50C  50E3               	movf	plusw1,w,c
 18868  01E50E  E10A               	bnz	u11210
 18869  01E510  0EF7               	movlw	-9
 18870  01E512  50E3               	movf	plusw1,w,c
 18871  01E514  E107               	bnz	u11210
 18872  01E516  0EF8               	movlw	-8
 18873  01E518  50E3               	movf	plusw1,w,c
 18874  01E51A  E104               	bnz	u11210
 18875  01E51C  0EF9               	movlw	-7
 18876  01E51E  50E3               	movf	plusw1,w,c
 18877  01E520  B4D8               	btfsc	status,2,c
 18878  01E522  D04D               	goto	u11240
 18879  01E524                     u11210:
 18880                           
 18881                           ;stkvar	_counter @ sp[(-2)+1]
 18882  01E524  0EFF               	movlw	-1
 18883  01E526  6AE3               	clrf	plusw1,c
 18884  01E528  D00A               	goto	L17
 18885  01E52A                     l11952:
 18886                           
 18887                           ;stkvar	_divisor @ sp[(-2)+-8]
 18888  01E52A  90D8               	bcf	status,0,c
 18889  01E52C  0EF6               	movlw	-10
 18890  01E52E  36E3               	rlcf	plusw1,f,c
 18891  01E530  0EF7               	movlw	-9
 18892  01E532  36E3               	rlcf	plusw1,f,c
 18893  01E534  0EF8               	movlw	-8
 18894  01E536  36E3               	rlcf	plusw1,f,c
 18895  01E538  0EF9               	movlw	-7
 18896  01E53A  36E3               	rlcf	plusw1,f,c
 18897                           
 18898                           ;stkvar	_counter @ sp[(-2)+1]
 18899  01E53C  0EFF               	movlw	-1
 18900  01E53E                     L17:
 18901  01E53E  2AE3               	incf	plusw1,f,c
 18902                           
 18903                           ;stkvar	_divisor @ sp[(-2)+-8]
 18904  01E540  0EF9               	movlw	-7
 18905  01E542  AEE3               	btfss	plusw1,7,c
 18906  01E544  D7F2               	goto	l11952
 18907  01E546                     u11220:
 18908                           
 18909                           ;stkvar	_divisor @ sp[(-2)+-8]
 18910                           ;stkvar	_dividend @ sp[(-2)+-4]
 18911  01E546  50E1               	movf	fsr1l,w,c
 18912  01E548  0FFA               	addlw	-6
 18913  01E54A  6ED9               	movwf	fsr2l,c
 18914  01E54C  50E2               	movf	fsr1h,w,c
 18915  01E54E  6EDA               	movwf	fsr2h,c
 18916  01E550  0EFF               	movlw	255
 18917  01E552  22DA               	addwfc	fsr2h,f,c
 18918  01E554  0EF6               	movlw	-10
 18919  01E556  50E3               	movf	plusw1,w,c
 18920  01E558  5CDE               	subwf	postinc2,w,c
 18921  01E55A  0EF7               	movlw	-9
 18922  01E55C  50E3               	movf	plusw1,w,c
 18923  01E55E  58DE               	subwfb	postinc2,w,c
 18924  01E560  0EF8               	movlw	-8
 18925  01E562  50E3               	movf	plusw1,w,c
 18926  01E564  58DE               	subwfb	postinc2,w,c
 18927  01E566  0EF9               	movlw	-7
 18928  01E568  50E3               	movf	plusw1,w,c
 18929  01E56A  58DE               	subwfb	postinc2,w,c
 18930  01E56C  A0D8               	btfss	status,0,c
 18931  01E56E  D013               	goto	l11960
 18932                           
 18933                           ;stkvar	_divisor @ sp[(-2)+-8]
 18934                           ;stkvar	_dividend @ sp[(-2)+-4]
 18935  01E570  50E1               	movf	fsr1l,w,c
 18936  01E572  0FFA               	addlw	-6
 18937  01E574  6ED9               	movwf	fsr2l,c
 18938  01E576  50E2               	movf	fsr1h,w,c
 18939  01E578  6EDA               	movwf	fsr2h,c
 18940  01E57A  0EFF               	movlw	255
 18941  01E57C  22DA               	addwfc	fsr2h,f,c
 18942  01E57E  0EF6               	movlw	-10
 18943  01E580  50E3               	movf	plusw1,w,c
 18944  01E582  5EDE               	subwf	postinc2,f,c
 18945  01E584  0EF7               	movlw	-9
 18946  01E586  50E3               	movf	plusw1,w,c
 18947  01E588  5ADE               	subwfb	postinc2,f,c
 18948  01E58A  0EF8               	movlw	-8
 18949  01E58C  50E3               	movf	plusw1,w,c
 18950  01E58E  5ADE               	subwfb	postinc2,f,c
 18951  01E590  0EF9               	movlw	-7
 18952  01E592  50E3               	movf	plusw1,w,c
 18953  01E594  5ADE               	subwfb	postinc2,f,c
 18954  01E596                     l11960:
 18955                           
 18956                           ;stkvar	_divisor @ sp[(-2)+-8]
 18957  01E596  90D8               	bcf	status,0,c
 18958  01E598  0EF9               	movlw	-7
 18959  01E59A  32E3               	rrcf	plusw1,f,c
 18960  01E59C  0EF8               	movlw	-8
 18961  01E59E  32E3               	rrcf	plusw1,f,c
 18962  01E5A0  0EF7               	movlw	-9
 18963  01E5A2  32E3               	rrcf	plusw1,f,c
 18964  01E5A4  0EF6               	movlw	-10
 18965  01E5A6  32E3               	rrcf	plusw1,f,c
 18966                           
 18967                           ;stkvar	_counter @ sp[(-2)+1]
 18968  01E5A8  0EFF               	movlw	-1
 18969  01E5AA  50E3               	movf	plusw1,w,c
 18970  01E5AC  6E2A               	movwf	btemp^0,c
 18971  01E5AE  0E01               	movlw	1
 18972  01E5B0  5E2A               	subwf	btemp^0,f,c
 18973  01E5B2  0EFF               	movlw	-1
 18974  01E5B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18975  01E5BA  A4D8               	btfss	status,2,c
 18976  01E5BC  D7C4               	goto	u11220
 18977  01E5BE                     u11240:
 18978                           
 18979                           ;stkvar	_sign @ sp[(-2)+0]
 18980  01E5BE  0EFE               	movlw	-2
 18981  01E5C0  50E3               	movf	plusw1,w,c
 18982  01E5C2  B4D8               	btfsc	status,2,c
 18983  01E5C4  D011               	goto	u11260
 18984                           
 18985                           ;stkvar	_dividend @ sp[(-2)+-4]
 18986                           ;stkvar	_dividend @ sp[(-2)+-4]
 18987  01E5C6  0EFA               	movlw	-6
 18988  01E5C8  6CE3               	negf	plusw1,c
 18989  01E5CA  0EFB               	movlw	-5
 18990  01E5CC  1EE3               	comf	plusw1,f,c
 18991  01E5CE  0EFC               	movlw	-4
 18992  01E5D0  1EE3               	comf	plusw1,f,c
 18993  01E5D2  0EFD               	movlw	-3
 18994  01E5D4  1EE3               	comf	plusw1,f,c
 18995  01E5D6  E308               	bnc	u11260
 18996  01E5D8  0EFB               	movlw	-5
 18997  01E5DA  2AE3               	incf	plusw1,f,c
 18998  01E5DC  E305               	bnc	u11260
 18999  01E5DE  0EFC               	movlw	-4
 19000  01E5E0  2AE3               	incf	plusw1,f,c
 19001  01E5E2  E302               	bnc	u11260
 19002  01E5E4  0EFD               	movlw	-3
 19003  01E5E6  2AE3               	incf	plusw1,f,c
 19004  01E5E8                     u11260:
 19005                           
 19006                           ;stkvar	_dividend @ sp[(-2)+-4]
 19007  01E5E8  0EFA               	movlw	-6
 19008  01E5EA  006F FF8C  F02A    	movff	plusw1,btemp
 19009  01E5F0  0EFB               	movlw	-5
 19010  01E5F2  006F FF8C  F02B    	movff	plusw1,btemp+1
 19011  01E5F8  0EFC               	movlw	-4
 19012  01E5FA  006F FF8C  F02C    	movff	plusw1,btemp+2
 19013  01E600  0EFD               	movlw	-3
 19014  01E602  006F FF8C  F02D    	movff	plusw1,btemp+3
 19015                           
 19016                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19017  01E608  0EF6               	movlw	246
 19018  01E60A  26E1               	addwf	fsr1l,f,c
 19019  01E60C  0EFF               	movlw	255
 19020  01E60E  22E2               	addwfc	fsr1h,f,c
 19021  01E610  0012               	return		;funcret
 19022  01E612                     __end_of___almod:
 19023                           	opt callstack 0
 19024                           
 19025 ;; *************** function ___aldiv *****************
 19026 ;; Defined at:
 19027 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19028 ;; Parameters:    Size  Location     Type
 19029 ;;  dividend        4  [STACK] long 
 19030 ;;  divisor         4  [STACK] long 
 19031 ;; Auto vars:     Size  Location     Type
 19032 ;;  quotient        4  [STACK] long 
 19033 ;;  sign            1  [STACK] unsigned char 
 19034 ;;  counter         1  [STACK] unsigned char 
 19035 ;; Return value:  Size  Location     Type
 19036 ;;                  4  [STACK] long 
 19037 ;; Registers used:
 19038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19039 ;; Tracked objects:
 19040 ;;		On entry : 0/0
 19041 ;;		On exit  : 0/0
 19042 ;;		Unchanged: 0/0
 19043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19048 ;;Total ram usage:        0 bytes
 19049 ;; Hardware stack levels used:    1
 19050 ;; Hardware stack levels required when called:   15
 19051 ;; This function calls:
 19052 ;;		Nothing
 19053 ;; This function is called by:
 19054 ;;		___secs_to_tm
 19055 ;;		_rule_to_secs
 19056 ;; This function uses a reentrant model
 19057 ;;
 19058                           
 19059                           	psect	text53
 19060  01DBA0                     __ptext53:
 19061                           	opt callstack 0
 19062  01DBA0                     ___aldiv:
 19063                           	opt callstack 0
 19064                           
 19065                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19066  01DBA0  0E06               	movlw	6
 19067  01DBA2  26E1               	addwf	fsr1l,f,c
 19068  01DBA4  0E00               	movlw	0
 19069  01DBA6  22E2               	addwfc	fsr1h,f,c
 19070                           
 19071                           ;stkvar	_sign @ sp[(-6)+4]
 19072                           
 19073                           ;incstack = 0
 19074  01DBA8  0EFE               	movlw	-2
 19075  01DBAA  6AE3               	clrf	plusw1,c
 19076                           
 19077                           ;stkvar	_divisor @ sp[(-6)+-8]
 19078  01DBAC  0EF5               	movlw	-11
 19079  01DBAE  AEE3               	btfss	plusw1,7,c
 19080  01DBB0  D014               	goto	l11484
 19081                           
 19082                           ;stkvar	_divisor @ sp[(-6)+-8]
 19083                           ;stkvar	_divisor @ sp[(-6)+-8]
 19084  01DBB2  0EF2               	movlw	-14
 19085  01DBB4  6CE3               	negf	plusw1,c
 19086  01DBB6  0EF3               	movlw	-13
 19087  01DBB8  1EE3               	comf	plusw1,f,c
 19088  01DBBA  0EF4               	movlw	-12
 19089  01DBBC  1EE3               	comf	plusw1,f,c
 19090  01DBBE  0EF5               	movlw	-11
 19091  01DBC0  1EE3               	comf	plusw1,f,c
 19092  01DBC2  E308               	bnc	u10500
 19093  01DBC4  0EF3               	movlw	-13
 19094  01DBC6  2AE3               	incf	plusw1,f,c
 19095  01DBC8  E305               	bnc	u10500
 19096  01DBCA  0EF4               	movlw	-12
 19097  01DBCC  2AE3               	incf	plusw1,f,c
 19098  01DBCE  E302               	bnc	u10500
 19099  01DBD0  0EF5               	movlw	-11
 19100  01DBD2  2AE3               	incf	plusw1,f,c
 19101  01DBD4                     u10500:
 19102                           
 19103                           ;stkvar	_sign @ sp[(-6)+4]
 19104  01DBD4  0EFE               	movlw	-2
 19105  01DBD6  6AE3               	clrf	plusw1,c
 19106  01DBD8  2AE3               	incf	plusw1,f,c
 19107  01DBDA                     l11484:
 19108                           
 19109                           ;stkvar	_dividend @ sp[(-6)+-4]
 19110  01DBDA  0EF9               	movlw	-7
 19111  01DBDC  AEE3               	btfss	plusw1,7,c
 19112  01DBDE  D013               	goto	l11490
 19113                           
 19114                           ;stkvar	_dividend @ sp[(-6)+-4]
 19115                           ;stkvar	_dividend @ sp[(-6)+-4]
 19116  01DBE0  0EF6               	movlw	-10
 19117  01DBE2  6CE3               	negf	plusw1,c
 19118  01DBE4  0EF7               	movlw	-9
 19119  01DBE6  1EE3               	comf	plusw1,f,c
 19120  01DBE8  0EF8               	movlw	-8
 19121  01DBEA  1EE3               	comf	plusw1,f,c
 19122  01DBEC  0EF9               	movlw	-7
 19123  01DBEE  1EE3               	comf	plusw1,f,c
 19124  01DBF0  E308               	bnc	u10520
 19125  01DBF2  0EF7               	movlw	-9
 19126  01DBF4  2AE3               	incf	plusw1,f,c
 19127  01DBF6  E305               	bnc	u10520
 19128  01DBF8  0EF8               	movlw	-8
 19129  01DBFA  2AE3               	incf	plusw1,f,c
 19130  01DBFC  E302               	bnc	u10520
 19131  01DBFE  0EF9               	movlw	-7
 19132  01DC00  2AE3               	incf	plusw1,f,c
 19133  01DC02                     u10520:
 19134                           
 19135                           ;stkvar	_sign @ sp[(-6)+4]
 19136  01DC02  0EFE               	movlw	-2
 19137  01DC04  70E3               	btg	plusw1,0,c
 19138  01DC06                     l11490:
 19139                           
 19140                           ;stkvar	_quotient @ sp[(-6)+0]
 19141  01DC06  0EFA               	movlw	-6
 19142  01DC08  6AE3               	clrf	plusw1,c
 19143  01DC0A  0EFB               	movlw	-5
 19144  01DC0C  6AE3               	clrf	plusw1,c
 19145  01DC0E  0EFC               	movlw	-4
 19146  01DC10  6AE3               	clrf	plusw1,c
 19147  01DC12  0EFD               	movlw	-3
 19148  01DC14  6AE3               	clrf	plusw1,c
 19149                           
 19150                           ;stkvar	_divisor @ sp[(-6)+-8]
 19151  01DC16  0EF2               	movlw	-14
 19152  01DC18  50E3               	movf	plusw1,w,c
 19153  01DC1A  E10A               	bnz	u10530
 19154  01DC1C  0EF3               	movlw	-13
 19155  01DC1E  50E3               	movf	plusw1,w,c
 19156  01DC20  E107               	bnz	u10530
 19157  01DC22  0EF4               	movlw	-12
 19158  01DC24  50E3               	movf	plusw1,w,c
 19159  01DC26  E104               	bnz	u10530
 19160  01DC28  0EF5               	movlw	-11
 19161  01DC2A  50E3               	movf	plusw1,w,c
 19162  01DC2C  B4D8               	btfsc	status,2,c
 19163  01DC2E  D058               	goto	u10560
 19164  01DC30                     u10530:
 19165                           
 19166                           ;stkvar	_counter @ sp[(-6)+5]
 19167  01DC30  0EFF               	movlw	-1
 19168  01DC32  6AE3               	clrf	plusw1,c
 19169  01DC34  D00A               	goto	L18
 19170  01DC36                     l11496:
 19171                           
 19172                           ;stkvar	_divisor @ sp[(-6)+-8]
 19173  01DC36  90D8               	bcf	status,0,c
 19174  01DC38  0EF2               	movlw	-14
 19175  01DC3A  36E3               	rlcf	plusw1,f,c
 19176  01DC3C  0EF3               	movlw	-13
 19177  01DC3E  36E3               	rlcf	plusw1,f,c
 19178  01DC40  0EF4               	movlw	-12
 19179  01DC42  36E3               	rlcf	plusw1,f,c
 19180  01DC44  0EF5               	movlw	-11
 19181  01DC46  36E3               	rlcf	plusw1,f,c
 19182                           
 19183                           ;stkvar	_counter @ sp[(-6)+5]
 19184  01DC48  0EFF               	movlw	-1
 19185  01DC4A                     L18:
 19186  01DC4A  2AE3               	incf	plusw1,f,c
 19187                           
 19188                           ;stkvar	_divisor @ sp[(-6)+-8]
 19189  01DC4C  0EF5               	movlw	-11
 19190  01DC4E  AEE3               	btfss	plusw1,7,c
 19191  01DC50  D7F2               	goto	l11496
 19192  01DC52                     u10540:
 19193                           
 19194                           ;stkvar	_quotient @ sp[(-6)+0]
 19195  01DC52  90D8               	bcf	status,0,c
 19196  01DC54  0EFA               	movlw	-6
 19197  01DC56  36E3               	rlcf	plusw1,f,c
 19198  01DC58  0EFB               	movlw	-5
 19199  01DC5A  36E3               	rlcf	plusw1,f,c
 19200  01DC5C  0EFC               	movlw	-4
 19201  01DC5E  36E3               	rlcf	plusw1,f,c
 19202  01DC60  0EFD               	movlw	-3
 19203  01DC62  36E3               	rlcf	plusw1,f,c
 19204                           
 19205                           ;stkvar	_divisor @ sp[(-6)+-8]
 19206                           ;stkvar	_dividend @ sp[(-6)+-4]
 19207  01DC64  50E1               	movf	fsr1l,w,c
 19208  01DC66  0FF6               	addlw	-10
 19209  01DC68  6ED9               	movwf	fsr2l,c
 19210  01DC6A  50E2               	movf	fsr1h,w,c
 19211  01DC6C  6EDA               	movwf	fsr2h,c
 19212  01DC6E  0EFF               	movlw	255
 19213  01DC70  22DA               	addwfc	fsr2h,f,c
 19214  01DC72  0EF2               	movlw	-14
 19215  01DC74  50E3               	movf	plusw1,w,c
 19216  01DC76  5CDE               	subwf	postinc2,w,c
 19217  01DC78  0EF3               	movlw	-13
 19218  01DC7A  50E3               	movf	plusw1,w,c
 19219  01DC7C  58DE               	subwfb	postinc2,w,c
 19220  01DC7E  0EF4               	movlw	-12
 19221  01DC80  50E3               	movf	plusw1,w,c
 19222  01DC82  58DE               	subwfb	postinc2,w,c
 19223  01DC84  0EF5               	movlw	-11
 19224  01DC86  50E3               	movf	plusw1,w,c
 19225  01DC88  58DE               	subwfb	postinc2,w,c
 19226  01DC8A  A0D8               	btfss	status,0,c
 19227  01DC8C  D015               	goto	l11508
 19228                           
 19229                           ;stkvar	_divisor @ sp[(-6)+-8]
 19230                           ;stkvar	_dividend @ sp[(-6)+-4]
 19231  01DC8E  50E1               	movf	fsr1l,w,c
 19232  01DC90  0FF6               	addlw	-10
 19233  01DC92  6ED9               	movwf	fsr2l,c
 19234  01DC94  50E2               	movf	fsr1h,w,c
 19235  01DC96  6EDA               	movwf	fsr2h,c
 19236  01DC98  0EFF               	movlw	255
 19237  01DC9A  22DA               	addwfc	fsr2h,f,c
 19238  01DC9C  0EF2               	movlw	-14
 19239  01DC9E  50E3               	movf	plusw1,w,c
 19240  01DCA0  5EDE               	subwf	postinc2,f,c
 19241  01DCA2  0EF3               	movlw	-13
 19242  01DCA4  50E3               	movf	plusw1,w,c
 19243  01DCA6  5ADE               	subwfb	postinc2,f,c
 19244  01DCA8  0EF4               	movlw	-12
 19245  01DCAA  50E3               	movf	plusw1,w,c
 19246  01DCAC  5ADE               	subwfb	postinc2,f,c
 19247  01DCAE  0EF5               	movlw	-11
 19248  01DCB0  50E3               	movf	plusw1,w,c
 19249  01DCB2  5ADE               	subwfb	postinc2,f,c
 19250                           
 19251                           ;stkvar	_quotient @ sp[(-6)+0]
 19252  01DCB4  0EFA               	movlw	-6
 19253  01DCB6  80E3               	bsf	plusw1,0,c
 19254  01DCB8                     l11508:
 19255                           
 19256                           ;stkvar	_divisor @ sp[(-6)+-8]
 19257  01DCB8  90D8               	bcf	status,0,c
 19258  01DCBA  0EF5               	movlw	-11
 19259  01DCBC  32E3               	rrcf	plusw1,f,c
 19260  01DCBE  0EF4               	movlw	-12
 19261  01DCC0  32E3               	rrcf	plusw1,f,c
 19262  01DCC2  0EF3               	movlw	-13
 19263  01DCC4  32E3               	rrcf	plusw1,f,c
 19264  01DCC6  0EF2               	movlw	-14
 19265  01DCC8  32E3               	rrcf	plusw1,f,c
 19266                           
 19267                           ;stkvar	_counter @ sp[(-6)+5]
 19268  01DCCA  0EFF               	movlw	-1
 19269  01DCCC  50E3               	movf	plusw1,w,c
 19270  01DCCE  6E2A               	movwf	btemp^0,c
 19271  01DCD0  0E01               	movlw	1
 19272  01DCD2  5E2A               	subwf	btemp^0,f,c
 19273  01DCD4  0EFF               	movlw	-1
 19274  01DCD6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19275  01DCDC  A4D8               	btfss	status,2,c
 19276  01DCDE  D7B9               	goto	u10540
 19277  01DCE0                     u10560:
 19278                           
 19279                           ;stkvar	_sign @ sp[(-6)+4]
 19280  01DCE0  0EFE               	movlw	-2
 19281  01DCE2  50E3               	movf	plusw1,w,c
 19282  01DCE4  B4D8               	btfsc	status,2,c
 19283  01DCE6  D011               	goto	u10580
 19284                           
 19285                           ;stkvar	_quotient @ sp[(-6)+0]
 19286                           ;stkvar	_quotient @ sp[(-6)+0]
 19287  01DCE8  0EFA               	movlw	-6
 19288  01DCEA  6CE3               	negf	plusw1,c
 19289  01DCEC  0EFB               	movlw	-5
 19290  01DCEE  1EE3               	comf	plusw1,f,c
 19291  01DCF0  0EFC               	movlw	-4
 19292  01DCF2  1EE3               	comf	plusw1,f,c
 19293  01DCF4  0EFD               	movlw	-3
 19294  01DCF6  1EE3               	comf	plusw1,f,c
 19295  01DCF8  E308               	bnc	u10580
 19296  01DCFA  0EFB               	movlw	-5
 19297  01DCFC  2AE3               	incf	plusw1,f,c
 19298  01DCFE  E305               	bnc	u10580
 19299  01DD00  0EFC               	movlw	-4
 19300  01DD02  2AE3               	incf	plusw1,f,c
 19301  01DD04  E302               	bnc	u10580
 19302  01DD06  0EFD               	movlw	-3
 19303  01DD08  2AE3               	incf	plusw1,f,c
 19304  01DD0A                     u10580:
 19305                           
 19306                           ;stkvar	_quotient @ sp[(-6)+0]
 19307  01DD0A  0EFA               	movlw	-6
 19308  01DD0C  006F FF8C  F02A    	movff	plusw1,btemp
 19309  01DD12  0EFB               	movlw	-5
 19310  01DD14  006F FF8C  F02B    	movff	plusw1,btemp+1
 19311  01DD1A  0EFC               	movlw	-4
 19312  01DD1C  006F FF8C  F02C    	movff	plusw1,btemp+2
 19313  01DD22  0EFD               	movlw	-3
 19314  01DD24  006F FF8C  F02D    	movff	plusw1,btemp+3
 19315                           
 19316                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19317  01DD2A  0EF2               	movlw	242
 19318  01DD2C  26E1               	addwf	fsr1l,f,c
 19319  01DD2E  0EFF               	movlw	255
 19320  01DD30  22E2               	addwfc	fsr1h,f,c
 19321  01DD32  0012               	return		;funcret
 19322  01DD34                     __end_of___aldiv:
 19323                           	opt callstack 0
 19324                           
 19325 ;; *************** function _asctime *****************
 19326 ;; Defined at:
 19327 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19328 ;; Parameters:    Size  Location     Type
 19329 ;;  tim             2  [STACK] PTR const struct tm
 19330 ;;		 -> localtime@tm(24), NULL(0), 
 19331 ;; Auto vars:     Size  Location     Type
 19332 ;;  cp              2  [STACK] PTR unsigned char 
 19333 ;;		 -> asctime@buf(27), 
 19334 ;;  s               2  [STACK] PTR const unsigned char 
 19335 ;;		 -> STR_128(37), STR_127(22), 
 19336 ;; Return value:  Size  Location     Type
 19337 ;;                  2  [STACK] PTR unsigned char 
 19338 ;; Registers used:
 19339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19340 ;; Tracked objects:
 19341 ;;		On entry : 0/39
 19342 ;;		On exit  : 0/0
 19343 ;;		Unchanged: 0/0
 19344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19349 ;;Total ram usage:        0 bytes
 19350 ;; Hardware stack levels used:    1
 19351 ;; Hardware stack levels required when called:   17
 19352 ;; This function calls:
 19353 ;;		___awdiv
 19354 ;;		___awmod
 19355 ;;		_put2d
 19356 ;; This function is called by:
 19357 ;;		_main
 19358 ;;		_display_history
 19359 ;; This function uses a reentrant model
 19360 ;;
 19361                           
 19362                           	psect	text54
 19363  0180B6                     __ptext54:
 19364                           	opt callstack 0
 19365  0180B6                     _asctime:
 19366                           	opt callstack 0
 19367                           
 19368                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19369  0180B6  52E6               	movf	postinc1,f,c
 19370  0180B8  52E6               	movf	postinc1,f,c
 19371  0180BA  52E6               	movf	postinc1,f,c
 19372  0180BC  52E6               	movf	postinc1,f,c
 19373                           
 19374                           ;stkvar	_tim @ sp[(-4)+-2]
 19375                           
 19376                           ;incstack = 0
 19377  0180BE  0EFA               	movlw	-6
 19378  0180C0  006F FF8C  F034    	movff	plusw1,btemp+10
 19379  0180C6  0EFB               	movlw	-5
 19380  0180C8  006F FF8C  F035    	movff	plusw1,btemp+11
 19381  0180CE  0E0C               	movlw	12
 19382  0180D0  2434               	addwf	(btemp+10)^0,w,c
 19383  0180D2  6ED9               	movwf	fsr2l,c
 19384  0180D4  0E00               	movlw	0
 19385  0180D6  2035               	addwfc	(btemp+11)^0,w,c
 19386  0180D8  6EDA               	movwf	fsr2h,c
 19387  0180DA  006F FF78  F034    	movff	postinc2,btemp+10
 19388  0180E0  006F FF74  F035    	movff	postdec2,btemp+11
 19389  0180E6  0E03               	movlw	3
 19390  0180E8  0234               	mulwf	(btemp+10)^0,c
 19391  0180EA  006F FFCC  F032    	movff	prodl,btemp+8
 19392  0180F0  006F FFD0  F033    	movff	prodh,btemp+9
 19393  0180F6  0235               	mulwf	(btemp+11)^0,c
 19394  0180F8  50F3               	movf	prodl,w,c
 19395  0180FA  2633               	addwf	(btemp+9)^0,f,c
 19396  0180FC  0EDB               	movlw	low STR_127
 19397  0180FE  6E34               	movwf	(btemp+10)^0,c
 19398  018100  0EFB               	movlw	high STR_127
 19399  018102  6E35               	movwf	(btemp+11)^0,c
 19400  018104  5032               	movf	(btemp+8)^0,w,c
 19401  018106  2634               	addwf	(btemp+10)^0,f,c
 19402  018108  5033               	movf	(btemp+9)^0,w,c
 19403  01810A  2235               	addwfc	(btemp+11)^0,f,c
 19404                           
 19405                           ;stkvar	_s @ sp[(-4)+2]
 19406  01810C  0EFF               	movlw	-1
 19407  01810E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19408  018114  0EFE               	movlw	-2
 19409  018116  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19410                           
 19411                           ;stkvar	_cp @ sp[(-4)+0]
 19412  01811C  0E03               	movlw	high asctime@buf
 19413  01811E  6E2A               	movwf	btemp^0,c
 19414  018120  0EFD               	movlw	-3
 19415  018122  0060  F0AB  FFE3   	movff	btemp,plusw1
 19416  018128  0EC4               	movlw	low asctime@buf
 19417  01812A  6E2A               	movwf	btemp^0,c
 19418  01812C  0EFC               	movlw	-4
 19419  01812E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19420                           
 19421                           ;stkvar	_s @ sp[(-4)+2]
 19422  018134  50E1               	movf	fsr1l,w,c
 19423  018136  0FFE               	addlw	-2
 19424  018138  6ED9               	movwf	fsr2l,c
 19425  01813A  50E2               	movf	fsr1h,w,c
 19426  01813C  6EDA               	movwf	fsr2h,c
 19427  01813E  0EFF               	movlw	255
 19428  018140  22DA               	addwfc	fsr2h,f,c
 19429  018142  006F FF7B FFF6     	movff	postinc2,tblptrl
 19430  018148  006F FF77 FFF7     	movff	postdec2,tblptrh
 19431  01814E                     	if	0	;tblptru may be non-zero
 19432  01814E                     	endif
 19433  01814E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19434  01814E  0E00               	movlw	low (__mediumconst shr (0+16))
 19435  018150  6EF8               	movwf	tblptru,c
 19436  018152                     	endif
 19437                           
 19438                           ;stkvar	_cp @ sp[(-4)+0]
 19439  018152  0EFC               	movlw	-4
 19440  018154  006F FF8F FFD9     	movff	plusw1,fsr2l
 19441  01815A  0EFD               	movlw	-3
 19442  01815C  006F FF8F FFDA     	movff	plusw1,fsr2h
 19443  018162  0008               	tblrd		*
 19444  018164  006F FFD7 FFDF     	movff	tablat,indf2
 19445                           
 19446                           ;stkvar	_s @ sp[(-4)+2]
 19447  01816A  0EFE               	movlw	-2
 19448  01816C  50E3               	movf	plusw1,w,c
 19449  01816E  0F01               	addlw	1
 19450  018170  6E2A               	movwf	btemp^0,c
 19451  018172  0EFE               	movlw	-2
 19452  018174  0060  F0AB  FFE3   	movff	btemp,plusw1
 19453  01817A  6A2A               	clrf	btemp^0,c
 19454  01817C  0EFF               	movlw	-1
 19455  01817E  50E3               	movf	plusw1,w,c
 19456  018180  202A               	addwfc	btemp^0,w,c
 19457  018182  6E2A               	movwf	btemp^0,c
 19458  018184  0EFF               	movlw	-1
 19459  018186  0060  F0AB  FFE3   	movff	btemp,plusw1
 19460                           
 19461                           ;stkvar	_cp @ sp[(-4)+0]
 19462  01818C  0EFC               	movlw	-4
 19463  01818E  50E3               	movf	plusw1,w,c
 19464  018190  0F01               	addlw	1
 19465  018192  6E2A               	movwf	btemp^0,c
 19466  018194  0EFC               	movlw	-4
 19467  018196  0060  F0AB  FFE3   	movff	btemp,plusw1
 19468  01819C  6A2A               	clrf	btemp^0,c
 19469  01819E  0EFD               	movlw	-3
 19470  0181A0  50E3               	movf	plusw1,w,c
 19471  0181A2  202A               	addwfc	btemp^0,w,c
 19472  0181A4  6E2A               	movwf	btemp^0,c
 19473  0181A6  0EFD               	movlw	-3
 19474  0181A8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19475                           
 19476                           ;stkvar	_s @ sp[(-4)+2]
 19477  0181AE  50E1               	movf	fsr1l,w,c
 19478  0181B0  0FFE               	addlw	-2
 19479  0181B2  6ED9               	movwf	fsr2l,c
 19480  0181B4  50E2               	movf	fsr1h,w,c
 19481  0181B6  6EDA               	movwf	fsr2h,c
 19482  0181B8  0EFF               	movlw	255
 19483  0181BA  22DA               	addwfc	fsr2h,f,c
 19484  0181BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19485  0181C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19486  0181C8                     	if	0	;tblptru may be non-zero
 19487  0181C8                     	endif
 19488  0181C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19489  0181C8  0E00               	movlw	low (__mediumconst shr (0+16))
 19490  0181CA  6EF8               	movwf	tblptru,c
 19491  0181CC                     	endif
 19492                           
 19493                           ;stkvar	_cp @ sp[(-4)+0]
 19494  0181CC  0EFC               	movlw	-4
 19495  0181CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 19496  0181D4  0EFD               	movlw	-3
 19497  0181D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 19498  0181DC  0008               	tblrd		*
 19499  0181DE  006F FFD7 FFDF     	movff	tablat,indf2
 19500                           
 19501                           ;stkvar	_s @ sp[(-4)+2]
 19502  0181E4  0EFE               	movlw	-2
 19503  0181E6  50E3               	movf	plusw1,w,c
 19504  0181E8  0F01               	addlw	1
 19505  0181EA  6E2A               	movwf	btemp^0,c
 19506  0181EC  0EFE               	movlw	-2
 19507  0181EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19508  0181F4  6A2A               	clrf	btemp^0,c
 19509  0181F6  0EFF               	movlw	-1
 19510  0181F8  50E3               	movf	plusw1,w,c
 19511  0181FA  202A               	addwfc	btemp^0,w,c
 19512  0181FC  6E2A               	movwf	btemp^0,c
 19513  0181FE  0EFF               	movlw	-1
 19514  018200  0060  F0AB  FFE3   	movff	btemp,plusw1
 19515                           
 19516                           ;stkvar	_cp @ sp[(-4)+0]
 19517  018206  0EFC               	movlw	-4
 19518  018208  50E3               	movf	plusw1,w,c
 19519  01820A  0F01               	addlw	1
 19520  01820C  6E2A               	movwf	btemp^0,c
 19521  01820E  0EFC               	movlw	-4
 19522  018210  0060  F0AB  FFE3   	movff	btemp,plusw1
 19523  018216  6A2A               	clrf	btemp^0,c
 19524  018218  0EFD               	movlw	-3
 19525  01821A  50E3               	movf	plusw1,w,c
 19526  01821C  202A               	addwfc	btemp^0,w,c
 19527  01821E  6E2A               	movwf	btemp^0,c
 19528  018220  0EFD               	movlw	-3
 19529  018222  0060  F0AB  FFE3   	movff	btemp,plusw1
 19530                           
 19531                           ;stkvar	_s @ sp[(-4)+2]
 19532  018228  50E1               	movf	fsr1l,w,c
 19533  01822A  0FFE               	addlw	-2
 19534  01822C  6ED9               	movwf	fsr2l,c
 19535  01822E  50E2               	movf	fsr1h,w,c
 19536  018230  6EDA               	movwf	fsr2h,c
 19537  018232  0EFF               	movlw	255
 19538  018234  22DA               	addwfc	fsr2h,f,c
 19539  018236  006F FF7B FFF6     	movff	postinc2,tblptrl
 19540  01823C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19541  018242                     	if	0	;tblptru may be non-zero
 19542  018242                     	endif
 19543  018242                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19544  018242  0E00               	movlw	low (__mediumconst shr (0+16))
 19545  018244  6EF8               	movwf	tblptru,c
 19546  018246                     	endif
 19547                           
 19548                           ;stkvar	_cp @ sp[(-4)+0]
 19549  018246  0EFC               	movlw	-4
 19550  018248  006F FF8F FFD9     	movff	plusw1,fsr2l
 19551  01824E  0EFD               	movlw	-3
 19552  018250  006F FF8F FFDA     	movff	plusw1,fsr2h
 19553  018256  0008               	tblrd		*
 19554  018258  006F FFD7 FFDF     	movff	tablat,indf2
 19555                           
 19556                           ;stkvar	_cp @ sp[(-4)+0]
 19557  01825E  0EFC               	movlw	-4
 19558  018260  50E3               	movf	plusw1,w,c
 19559  018262  0F01               	addlw	1
 19560  018264  6E2A               	movwf	btemp^0,c
 19561  018266  0EFC               	movlw	-4
 19562  018268  0060  F0AB  FFE3   	movff	btemp,plusw1
 19563  01826E  6A2A               	clrf	btemp^0,c
 19564  018270  0EFD               	movlw	-3
 19565  018272  50E3               	movf	plusw1,w,c
 19566  018274  202A               	addwfc	btemp^0,w,c
 19567  018276  6E2A               	movwf	btemp^0,c
 19568  018278  0EFD               	movlw	-3
 19569  01827A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19570                           
 19571                           ;stkvar	_cp @ sp[(-4)+0]
 19572  018280  0EFC               	movlw	-4
 19573  018282  006F FF8F FFD9     	movff	plusw1,fsr2l
 19574  018288  0EFD               	movlw	-3
 19575  01828A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19576  018290  0E20               	movlw	32
 19577  018292  6EDF               	movwf	indf2,c
 19578                           
 19579                           ;stkvar	_cp @ sp[(-4)+0]
 19580  018294  0EFC               	movlw	-4
 19581  018296  50E3               	movf	plusw1,w,c
 19582  018298  0F01               	addlw	1
 19583  01829A  6E2A               	movwf	btemp^0,c
 19584  01829C  0EFC               	movlw	-4
 19585  01829E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19586  0182A4  6A2A               	clrf	btemp^0,c
 19587  0182A6  0EFD               	movlw	-3
 19588  0182A8  50E3               	movf	plusw1,w,c
 19589  0182AA  202A               	addwfc	btemp^0,w,c
 19590  0182AC  6E2A               	movwf	btemp^0,c
 19591  0182AE  0EFD               	movlw	-3
 19592  0182B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19593                           
 19594                           ;stkvar	_tim @ sp[(-4)+-2]
 19595  0182B6  0EFA               	movlw	-6
 19596  0182B8  006F FF8C  F034    	movff	plusw1,btemp+10
 19597  0182BE  0EFB               	movlw	-5
 19598  0182C0  006F FF8C  F035    	movff	plusw1,btemp+11
 19599  0182C6  0E08               	movlw	8
 19600  0182C8  2434               	addwf	(btemp+10)^0,w,c
 19601  0182CA  6ED9               	movwf	fsr2l,c
 19602  0182CC  0E00               	movlw	0
 19603  0182CE  2035               	addwfc	(btemp+11)^0,w,c
 19604  0182D0  6EDA               	movwf	fsr2h,c
 19605  0182D2  006F FF78  F034    	movff	postinc2,btemp+10
 19606  0182D8  006F FF74  F035    	movff	postdec2,btemp+11
 19607  0182DE  0E03               	movlw	3
 19608  0182E0  0234               	mulwf	(btemp+10)^0,c
 19609  0182E2  006F FFCC  F032    	movff	prodl,btemp+8
 19610  0182E8  006F FFD0  F033    	movff	prodh,btemp+9
 19611  0182EE  0235               	mulwf	(btemp+11)^0,c
 19612  0182F0  50F3               	movf	prodl,w,c
 19613  0182F2  2633               	addwf	(btemp+9)^0,f,c
 19614  0182F4  0EA2               	movlw	low STR_128
 19615  0182F6  6E34               	movwf	(btemp+10)^0,c
 19616  0182F8  0EFA               	movlw	high STR_128
 19617  0182FA  6E35               	movwf	(btemp+11)^0,c
 19618  0182FC  5032               	movf	(btemp+8)^0,w,c
 19619  0182FE  2634               	addwf	(btemp+10)^0,f,c
 19620  018300  5033               	movf	(btemp+9)^0,w,c
 19621  018302  2235               	addwfc	(btemp+11)^0,f,c
 19622                           
 19623                           ;stkvar	_s @ sp[(-4)+2]
 19624  018304  0EFF               	movlw	-1
 19625  018306  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19626  01830C  0EFE               	movlw	-2
 19627  01830E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19628                           
 19629                           ;stkvar	_s @ sp[(-4)+2]
 19630  018314  50E1               	movf	fsr1l,w,c
 19631  018316  0FFE               	addlw	-2
 19632  018318  6ED9               	movwf	fsr2l,c
 19633  01831A  50E2               	movf	fsr1h,w,c
 19634  01831C  6EDA               	movwf	fsr2h,c
 19635  01831E  0EFF               	movlw	255
 19636  018320  22DA               	addwfc	fsr2h,f,c
 19637  018322  006F FF7B FFF6     	movff	postinc2,tblptrl
 19638  018328  006F FF77 FFF7     	movff	postdec2,tblptrh
 19639  01832E                     	if	0	;tblptru may be non-zero
 19640  01832E                     	endif
 19641  01832E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19642  01832E  0E00               	movlw	low (__mediumconst shr (0+16))
 19643  018330  6EF8               	movwf	tblptru,c
 19644  018332                     	endif
 19645                           
 19646                           ;stkvar	_cp @ sp[(-4)+0]
 19647  018332  0EFC               	movlw	-4
 19648  018334  006F FF8F FFD9     	movff	plusw1,fsr2l
 19649  01833A  0EFD               	movlw	-3
 19650  01833C  006F FF8F FFDA     	movff	plusw1,fsr2h
 19651  018342  0008               	tblrd		*
 19652  018344  006F FFD7 FFDF     	movff	tablat,indf2
 19653                           
 19654                           ;stkvar	_s @ sp[(-4)+2]
 19655  01834A  0EFE               	movlw	-2
 19656  01834C  50E3               	movf	plusw1,w,c
 19657  01834E  0F01               	addlw	1
 19658  018350  6E2A               	movwf	btemp^0,c
 19659  018352  0EFE               	movlw	-2
 19660  018354  0060  F0AB  FFE3   	movff	btemp,plusw1
 19661  01835A  6A2A               	clrf	btemp^0,c
 19662  01835C  0EFF               	movlw	-1
 19663  01835E  50E3               	movf	plusw1,w,c
 19664  018360  202A               	addwfc	btemp^0,w,c
 19665  018362  6E2A               	movwf	btemp^0,c
 19666  018364  0EFF               	movlw	-1
 19667  018366  0060  F0AB  FFE3   	movff	btemp,plusw1
 19668                           
 19669                           ;stkvar	_cp @ sp[(-4)+0]
 19670  01836C  0EFC               	movlw	-4
 19671  01836E  50E3               	movf	plusw1,w,c
 19672  018370  0F01               	addlw	1
 19673  018372  6E2A               	movwf	btemp^0,c
 19674  018374  0EFC               	movlw	-4
 19675  018376  0060  F0AB  FFE3   	movff	btemp,plusw1
 19676  01837C  6A2A               	clrf	btemp^0,c
 19677  01837E  0EFD               	movlw	-3
 19678  018380  50E3               	movf	plusw1,w,c
 19679  018382  202A               	addwfc	btemp^0,w,c
 19680  018384  6E2A               	movwf	btemp^0,c
 19681  018386  0EFD               	movlw	-3
 19682  018388  0060  F0AB  FFE3   	movff	btemp,plusw1
 19683                           
 19684                           ;stkvar	_s @ sp[(-4)+2]
 19685  01838E  50E1               	movf	fsr1l,w,c
 19686  018390  0FFE               	addlw	-2
 19687  018392  6ED9               	movwf	fsr2l,c
 19688  018394  50E2               	movf	fsr1h,w,c
 19689  018396  6EDA               	movwf	fsr2h,c
 19690  018398  0EFF               	movlw	255
 19691  01839A  22DA               	addwfc	fsr2h,f,c
 19692  01839C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19693  0183A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19694  0183A8                     	if	0	;tblptru may be non-zero
 19695  0183A8                     	endif
 19696  0183A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19697  0183A8  0E00               	movlw	low (__mediumconst shr (0+16))
 19698  0183AA  6EF8               	movwf	tblptru,c
 19699  0183AC                     	endif
 19700                           
 19701                           ;stkvar	_cp @ sp[(-4)+0]
 19702  0183AC  0EFC               	movlw	-4
 19703  0183AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 19704  0183B4  0EFD               	movlw	-3
 19705  0183B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 19706  0183BC  0008               	tblrd		*
 19707  0183BE  006F FFD7 FFDF     	movff	tablat,indf2
 19708                           
 19709                           ;stkvar	_s @ sp[(-4)+2]
 19710  0183C4  0EFE               	movlw	-2
 19711  0183C6  50E3               	movf	plusw1,w,c
 19712  0183C8  0F01               	addlw	1
 19713  0183CA  6E2A               	movwf	btemp^0,c
 19714  0183CC  0EFE               	movlw	-2
 19715  0183CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19716  0183D4  6A2A               	clrf	btemp^0,c
 19717  0183D6  0EFF               	movlw	-1
 19718  0183D8  50E3               	movf	plusw1,w,c
 19719  0183DA  202A               	addwfc	btemp^0,w,c
 19720  0183DC  6E2A               	movwf	btemp^0,c
 19721  0183DE  0EFF               	movlw	-1
 19722  0183E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19723                           
 19724                           ;stkvar	_cp @ sp[(-4)+0]
 19725  0183E6  0EFC               	movlw	-4
 19726  0183E8  50E3               	movf	plusw1,w,c
 19727  0183EA  0F01               	addlw	1
 19728  0183EC  6E2A               	movwf	btemp^0,c
 19729  0183EE  0EFC               	movlw	-4
 19730  0183F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19731  0183F6  6A2A               	clrf	btemp^0,c
 19732  0183F8  0EFD               	movlw	-3
 19733  0183FA  50E3               	movf	plusw1,w,c
 19734  0183FC  202A               	addwfc	btemp^0,w,c
 19735  0183FE  6E2A               	movwf	btemp^0,c
 19736  018400  0EFD               	movlw	-3
 19737  018402  0060  F0AB  FFE3   	movff	btemp,plusw1
 19738                           
 19739                           ;stkvar	_s @ sp[(-4)+2]
 19740  018408  50E1               	movf	fsr1l,w,c
 19741  01840A  0FFE               	addlw	-2
 19742  01840C  6ED9               	movwf	fsr2l,c
 19743  01840E  50E2               	movf	fsr1h,w,c
 19744  018410  6EDA               	movwf	fsr2h,c
 19745  018412  0EFF               	movlw	255
 19746  018414  22DA               	addwfc	fsr2h,f,c
 19747  018416  006F FF7B FFF6     	movff	postinc2,tblptrl
 19748  01841C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19749  018422                     	if	0	;tblptru may be non-zero
 19750  018422                     	endif
 19751  018422                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19752  018422  0E00               	movlw	low (__mediumconst shr (0+16))
 19753  018424  6EF8               	movwf	tblptru,c
 19754  018426                     	endif
 19755                           
 19756                           ;stkvar	_cp @ sp[(-4)+0]
 19757  018426  0EFC               	movlw	-4
 19758  018428  006F FF8F FFD9     	movff	plusw1,fsr2l
 19759  01842E  0EFD               	movlw	-3
 19760  018430  006F FF8F FFDA     	movff	plusw1,fsr2h
 19761  018436  0008               	tblrd		*
 19762  018438  006F FFD7 FFDF     	movff	tablat,indf2
 19763  01843E  0E20               	movlw	32
 19764  018440  0103               	movlb	3	; () banked
 19765  018442  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 19766                           
 19767                           ; BSR set to: 3
 19768  018444  0E20               	movlw	32
 19769  018446  6EE6               	movwf	postinc1,c
 19770  018448  0E20               	movlw	32
 19771  01844A  6EE6               	movwf	postinc1,c
 19772                           
 19773                           ;stkvar	_tim @ sp[(-6)+-2]
 19774  01844C  0EF8               	movlw	-8
 19775  01844E  006F FF8C  F034    	movff	plusw1,btemp+10
 19776  018454  0EF9               	movlw	-7
 19777  018456  006F FF8C  F035    	movff	plusw1,btemp+11
 19778  01845C  0E06               	movlw	6
 19779  01845E  2434               	addwf	(btemp+10)^0,w,c
 19780  018460  6ED9               	movwf	fsr2l,c
 19781  018462  0E00               	movlw	0
 19782  018464  2035               	addwfc	(btemp+11)^0,w,c
 19783  018466  6EDA               	movwf	fsr2h,c
 19784  018468  50DF               	movf	indf2,w,c
 19785  01846A  6EE6               	movwf	postinc1,c
 19786  01846C  0ECE               	movlw	low (asctime@buf+10)
 19787  01846E  6EE6               	movwf	postinc1,c
 19788  018470  0E03               	movlw	high (asctime@buf+10)
 19789  018472  6EE6               	movwf	postinc1,c
 19790  018474  EC8A  F0F9         	call	_put2d	;wreg free
 19791  018478  0E3A               	movlw	58
 19792  01847A  6EE6               	movwf	postinc1,c
 19793  01847C  0E30               	movlw	48
 19794  01847E  6EE6               	movwf	postinc1,c
 19795                           
 19796                           ;stkvar	_tim @ sp[(-6)+-2]
 19797  018480  0EF8               	movlw	-8
 19798  018482  006F FF8C  F034    	movff	plusw1,btemp+10
 19799  018488  0EF9               	movlw	-7
 19800  01848A  006F FF8C  F035    	movff	plusw1,btemp+11
 19801  018490  0E04               	movlw	4
 19802  018492  2434               	addwf	(btemp+10)^0,w,c
 19803  018494  6ED9               	movwf	fsr2l,c
 19804  018496  0E00               	movlw	0
 19805  018498  2035               	addwfc	(btemp+11)^0,w,c
 19806  01849A  6EDA               	movwf	fsr2h,c
 19807  01849C  50DF               	movf	indf2,w,c
 19808  01849E  6EE6               	movwf	postinc1,c
 19809  0184A0  0ED1               	movlw	low (asctime@buf+13)
 19810  0184A2  6EE6               	movwf	postinc1,c
 19811  0184A4  0E03               	movlw	high (asctime@buf+13)
 19812  0184A6  6EE6               	movwf	postinc1,c
 19813  0184A8  EC8A  F0F9         	call	_put2d	;wreg free
 19814  0184AC  0E3A               	movlw	58
 19815  0184AE  6EE6               	movwf	postinc1,c
 19816  0184B0  0E30               	movlw	48
 19817  0184B2  6EE6               	movwf	postinc1,c
 19818                           
 19819                           ;stkvar	_tim @ sp[(-6)+-2]
 19820  0184B4  0EF8               	movlw	-8
 19821  0184B6  006F FF8C  F034    	movff	plusw1,btemp+10
 19822  0184BC  0EF9               	movlw	-7
 19823  0184BE  006F FF8C  F035    	movff	plusw1,btemp+11
 19824  0184C4  0E02               	movlw	2
 19825  0184C6  2434               	addwf	(btemp+10)^0,w,c
 19826  0184C8  6ED9               	movwf	fsr2l,c
 19827  0184CA  0E00               	movlw	0
 19828  0184CC  2035               	addwfc	(btemp+11)^0,w,c
 19829  0184CE  6EDA               	movwf	fsr2h,c
 19830  0184D0  50DF               	movf	indf2,w,c
 19831  0184D2  6EE6               	movwf	postinc1,c
 19832  0184D4  0ED4               	movlw	low (asctime@buf+16)
 19833  0184D6  6EE6               	movwf	postinc1,c
 19834  0184D8  0E03               	movlw	high (asctime@buf+16)
 19835  0184DA  6EE6               	movwf	postinc1,c
 19836  0184DC  EC8A  F0F9         	call	_put2d	;wreg free
 19837  0184E0  0E20               	movlw	32
 19838  0184E2  6EE6               	movwf	postinc1,c
 19839  0184E4  0E30               	movlw	48
 19840  0184E6  6EE6               	movwf	postinc1,c
 19841                           
 19842                           ;stkvar	_tim @ sp[(-6)+-2]
 19843  0184E8  0EF8               	movlw	-8
 19844  0184EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 19845  0184F0  0EF9               	movlw	-7
 19846  0184F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 19847  0184F8  50DF               	movf	indf2,w,c
 19848  0184FA  6EE6               	movwf	postinc1,c
 19849  0184FC  0ED7               	movlw	low (asctime@buf+19)
 19850  0184FE  6EE6               	movwf	postinc1,c
 19851  018500  0E03               	movlw	high (asctime@buf+19)
 19852  018502  6EE6               	movwf	postinc1,c
 19853  018504  EC8A  F0F9         	call	_put2d	;wreg free
 19854  018508  0E00               	movlw	0
 19855  01850A  6EE6               	movwf	postinc1,c
 19856  01850C  0E20               	movlw	32
 19857  01850E  6EE6               	movwf	postinc1,c
 19858  018510  0E64               	movlw	100
 19859  018512  6EE6               	movwf	postinc1,c
 19860  018514  0E00               	movlw	0
 19861  018516  6EE6               	movwf	postinc1,c
 19862                           
 19863                           ;stkvar	_tim @ sp[(-8)+-2]
 19864  018518  0EF6               	movlw	-10
 19865  01851A  006F FF8C  F034    	movff	plusw1,btemp+10
 19866  018520  0EF7               	movlw	-9
 19867  018522  006F FF8C  F035    	movff	plusw1,btemp+11
 19868  018528  0E0A               	movlw	10
 19869  01852A  2434               	addwf	(btemp+10)^0,w,c
 19870  01852C  6ED9               	movwf	fsr2l,c
 19871  01852E  0E00               	movlw	0
 19872  018530  2035               	addwfc	(btemp+11)^0,w,c
 19873  018532  6EDA               	movwf	fsr2h,c
 19874  018534  006F FF78  F034    	movff	postinc2,btemp+10
 19875  01853A  006F FF74  F035    	movff	postdec2,btemp+11
 19876  018540  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 19877  018546  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 19878  01854C  EC74  F0F6         	call	___awdiv	;wreg free
 19879  018550  502A               	movf	btemp^0,w,c
 19880  018552  0F13               	addlw	19
 19881  018554  6EE6               	movwf	postinc1,c
 19882  018556  0EDA               	movlw	low (asctime@buf+22)
 19883  018558  6EE6               	movwf	postinc1,c
 19884  01855A  0E03               	movlw	high (asctime@buf+22)
 19885  01855C  6EE6               	movwf	postinc1,c
 19886  01855E  EC8A  F0F9         	call	_put2d	;wreg free
 19887  018562  0E0A               	movlw	10
 19888  018564  6EE6               	movwf	postinc1,c
 19889  018566  0E30               	movlw	48
 19890  018568  6EE6               	movwf	postinc1,c
 19891  01856A  0E64               	movlw	100
 19892  01856C  6EE6               	movwf	postinc1,c
 19893  01856E  0E00               	movlw	0
 19894  018570  6EE6               	movwf	postinc1,c
 19895                           
 19896                           ;stkvar	_tim @ sp[(-8)+-2]
 19897  018572  0EF6               	movlw	-10
 19898  018574  006F FF8C  F034    	movff	plusw1,btemp+10
 19899  01857A  0EF7               	movlw	-9
 19900  01857C  006F FF8C  F035    	movff	plusw1,btemp+11
 19901  018582  0E0A               	movlw	10
 19902  018584  2434               	addwf	(btemp+10)^0,w,c
 19903  018586  6ED9               	movwf	fsr2l,c
 19904  018588  0E00               	movlw	0
 19905  01858A  2035               	addwfc	(btemp+11)^0,w,c
 19906  01858C  6EDA               	movwf	fsr2h,c
 19907  01858E  006F FF78  F034    	movff	postinc2,btemp+10
 19908  018594  006F FF74  F035    	movff	postdec2,btemp+11
 19909  01859A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 19910  0185A0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 19911  0185A6  ECA3  F0FA         	call	___awmod	;wreg free
 19912  0185AA  502A               	movf	btemp^0,w,c
 19913  0185AC  6EE6               	movwf	postinc1,c
 19914  0185AE  0EDC               	movlw	low (asctime@buf+24)
 19915  0185B0  6EE6               	movwf	postinc1,c
 19916  0185B2  0E03               	movlw	high (asctime@buf+24)
 19917  0185B4  6EE6               	movwf	postinc1,c
 19918  0185B6  EC8A  F0F9         	call	_put2d	;wreg free
 19919  0185BA  0EC4               	movlw	low asctime@buf
 19920  0185BC  6E2A               	movwf	btemp^0,c
 19921  0185BE  0E03               	movlw	high asctime@buf
 19922  0185C0  6E2B               	movwf	(btemp+1)^0,c
 19923                           
 19924                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19925  0185C2  0EFA               	movlw	250
 19926  0185C4  26E1               	addwf	fsr1l,f,c
 19927  0185C6  0EFF               	movlw	255
 19928  0185C8  22E2               	addwfc	fsr1h,f,c
 19929  0185CA  0012               	return		;funcret
 19930  0185CC                     __end_of_asctime:
 19931                           	opt callstack 0
 19932                           
 19933 ;; *************** function _put2d *****************
 19934 ;; Defined at:
 19935 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19936 ;; Parameters:    Size  Location     Type
 19937 ;;  cp              2  [STACK] PTR unsigned char 
 19938 ;;		 -> asctime@buf(27), 
 19939 ;;  i               1  [STACK] unsigned char 
 19940 ;;  cl              1  [STACK] unsigned char 
 19941 ;;  ct              1  [STACK] unsigned char 
 19942 ;; Auto vars:     Size  Location     Type
 19943 ;;		None
 19944 ;; Return value:  Size  Location     Type
 19945 ;;                  1  [STACK] void 
 19946 ;; Registers used:
 19947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19948 ;; Tracked objects:
 19949 ;;		On entry : 0/3
 19950 ;;		On exit  : 0/0
 19951 ;;		Unchanged: 0/0
 19952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19957 ;;Total ram usage:        0 bytes
 19958 ;; Hardware stack levels used:    1
 19959 ;; Hardware stack levels required when called:   16
 19960 ;; This function calls:
 19961 ;;		___awdiv
 19962 ;;		___lbmod
 19963 ;; This function is called by:
 19964 ;;		_asctime
 19965 ;; This function uses a reentrant model
 19966 ;;
 19967                           
 19968                           	psect	text55
 19969  01F314                     __ptext55:
 19970                           	opt callstack 0
 19971  01F314                     _put2d:
 19972                           	opt callstack 12
 19973                           
 19974                           ;stkvar	_ct @ sp[(0)+-5]
 19975                           ;stkvar	_cp @ sp[(0)+-2]
 19976                           
 19977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19978                           ;incstack = 0
 19979  01F314  0EFE               	movlw	-2
 19980  01F316  006F FF8F FFD9     	movff	plusw1,fsr2l
 19981  01F31C  0EFF               	movlw	-1
 19982  01F31E  006F FF8F FFDA     	movff	plusw1,fsr2h
 19983  01F324  0EFB               	movlw	-5
 19984  01F326  006F FF8F FFDF     	movff	plusw1,indf2
 19985  01F32C  0E0A               	movlw	10
 19986  01F32E  6EE6               	movwf	postinc1,c
 19987                           
 19988                           ;stkvar	_i @ sp[(-1)+-3]
 19989  01F330  0EFC               	movlw	-4
 19990  01F332  50E3               	movf	plusw1,w,c
 19991  01F334  6EE6               	movwf	postinc1,c
 19992  01F336  EC8E  F004         	call	___lbmod	;wreg free
 19993  01F33A  0E30               	movlw	48
 19994  01F33C  262A               	addwf	btemp^0,f,c
 19995                           
 19996                           ;stkvar	_cp @ sp[(0)+-2]
 19997  01F33E  0EFE               	movlw	-2
 19998  01F340  006F FF8C  F02B    	movff	plusw1,btemp+1
 19999  01F346  0E01               	movlw	1
 20000  01F348  5E2B               	subwf	(btemp+1)^0,f,c
 20001  01F34A  0EFE               	movlw	-2
 20002  01F34C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20003  01F352  0EFF               	movlw	-1
 20004  01F354  006F FF8C  F02B    	movff	plusw1,btemp+1
 20005  01F35A  0E00               	movlw	0
 20006  01F35C  5A2B               	subwfb	(btemp+1)^0,f,c
 20007  01F35E  0EFF               	movlw	-1
 20008  01F360  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20009  01F366  0EFE               	movlw	-2
 20010  01F368  006F FF8F FFD9     	movff	plusw1,fsr2l
 20011  01F36E  0EFF               	movlw	-1
 20012  01F370  006F FF8F FFDA     	movff	plusw1,fsr2h
 20013  01F376  0060  F0AB  FFDF   	movff	btemp,indf2
 20014  01F37C  0E0A               	movlw	10
 20015  01F37E  6EE6               	movwf	postinc1,c
 20016  01F380  0E00               	movlw	0
 20017  01F382  6EE6               	movwf	postinc1,c
 20018                           
 20019                           ;stkvar	_i @ sp[(-2)+-3]
 20020  01F384  0EFB               	movlw	-5
 20021  01F386  50E3               	movf	plusw1,w,c
 20022  01F388  6EE6               	movwf	postinc1,c
 20023  01F38A  0E00               	movlw	0
 20024  01F38C  6EE6               	movwf	postinc1,c
 20025  01F38E  EC74  F0F6         	call	___awdiv	;wreg free
 20026                           
 20027                           ;stkvar	_i @ sp[(0)+-3]
 20028  01F392  0EFD               	movlw	-3
 20029  01F394  0060  F0AB  FFE3   	movff	btemp,plusw1
 20030  01F39A  0EFD               	movlw	-3
 20031  01F39C  50E3               	movf	plusw1,w,c
 20032  01F39E  B4D8               	btfsc	status,2,c
 20033  01F3A0  D021               	goto	l16810
 20034                           
 20035                           ;stkvar	_cp @ sp[(0)+-2]
 20036  01F3A2  0EFE               	movlw	-2
 20037  01F3A4  006F FF8C  F02A    	movff	plusw1,btemp
 20038  01F3AA  0E01               	movlw	1
 20039  01F3AC  5E2A               	subwf	btemp^0,f,c
 20040  01F3AE  0EFE               	movlw	-2
 20041  01F3B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20042  01F3B6  0EFF               	movlw	-1
 20043  01F3B8  006F FF8C  F02A    	movff	plusw1,btemp
 20044  01F3BE  0E00               	movlw	0
 20045  01F3C0  5A2A               	subwfb	btemp^0,f,c
 20046  01F3C2  0EFF               	movlw	-1
 20047  01F3C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 20048  01F3CA  0EFE               	movlw	-2
 20049  01F3CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 20050  01F3D2  0EFF               	movlw	-1
 20051  01F3D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 20052                           
 20053                           ;stkvar	_i @ sp[(0)+-3]
 20054  01F3DA  0EFD               	movlw	-3
 20055  01F3DC  50E3               	movf	plusw1,w,c
 20056  01F3DE  0F30               	addlw	48
 20057  01F3E0  6EDF               	movwf	indf2,c
 20058  01F3E2  D020               	goto	l3416
 20059  01F3E4                     l16810:
 20060                           
 20061                           ;stkvar	_cl @ sp[(0)+-4]
 20062                           ;stkvar	_cp @ sp[(0)+-2]
 20063  01F3E4  0EFE               	movlw	-2
 20064  01F3E6  006F FF8C  F02A    	movff	plusw1,btemp
 20065  01F3EC  0E01               	movlw	1
 20066  01F3EE  5E2A               	subwf	btemp^0,f,c
 20067  01F3F0  0EFE               	movlw	-2
 20068  01F3F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 20069  01F3F8  0EFF               	movlw	-1
 20070  01F3FA  006F FF8C  F02A    	movff	plusw1,btemp
 20071  01F400  0E00               	movlw	0
 20072  01F402  5A2A               	subwfb	btemp^0,f,c
 20073  01F404  0EFF               	movlw	-1
 20074  01F406  0060  F0AB  FFE3   	movff	btemp,plusw1
 20075  01F40C  0EFE               	movlw	-2
 20076  01F40E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20077  01F414  0EFF               	movlw	-1
 20078  01F416  006F FF8F FFDA     	movff	plusw1,fsr2h
 20079  01F41C  0EFC               	movlw	-4
 20080  01F41E  006F FF8F FFDF     	movff	plusw1,indf2
 20081  01F424                     l3416:
 20082                           
 20083                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20084  01F424  0EFB               	movlw	251
 20085  01F426  26E1               	addwf	fsr1l,f,c
 20086  01F428  0EFF               	movlw	255
 20087  01F42A  22E2               	addwfc	fsr1h,f,c
 20088  01F42C  0012               	return		;funcret
 20089  01F42E                     __end_of_put2d:
 20090                           	opt callstack 0
 20091                           
 20092 ;; *************** function ___lbmod *****************
 20093 ;; Defined at:
 20094 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20095 ;; Parameters:    Size  Location     Type
 20096 ;;  dividend        1  [STACK] unsigned char 
 20097 ;;  divisor         1  [STACK] unsigned char 
 20098 ;; Auto vars:     Size  Location     Type
 20099 ;;  rem             1  [STACK] unsigned char 
 20100 ;;  counter         1  [STACK] unsigned char 
 20101 ;; Return value:  Size  Location     Type
 20102 ;;                  1  [STACK] unsigned char 
 20103 ;; Registers used:
 20104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20105 ;; Tracked objects:
 20106 ;;		On entry : 0/3
 20107 ;;		On exit  : 0/0
 20108 ;;		Unchanged: 0/0
 20109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20114 ;;Total ram usage:        0 bytes
 20115 ;; Hardware stack levels used:    1
 20116 ;; Hardware stack levels required when called:   15
 20117 ;; This function calls:
 20118 ;;		Nothing
 20119 ;; This function is called by:
 20120 ;;		_put2d
 20121 ;; This function uses a reentrant model
 20122 ;;
 20123                           
 20124                           	psect	text56
 20125  00091C                     __ptext56:
 20126                           	opt callstack 0
 20127  00091C                     ___lbmod:
 20128                           	opt callstack 0
 20129                           
 20130                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20131  00091C  52E6               	movf	postinc1,f,c
 20132  00091E  52E6               	movf	postinc1,f,c
 20133                           
 20134                           ;stkvar	_counter @ sp[(-2)+1]
 20135                           
 20136                           ;incstack = 0
 20137  000920  0EFF               	movlw	-1
 20138  000922  6AE3               	clrf	plusw1,c
 20139  000924  86E3               	bsf	plusw1,3,c
 20140                           
 20141                           ;stkvar	_rem @ sp[(-2)+0]
 20142  000926  0EFE               	movlw	-2
 20143  000928  6AE3               	clrf	plusw1,c
 20144  00092A                     l16550:
 20145                           
 20146                           ;stkvar	_dividend @ sp[(-2)+-1]
 20147  00092A  0EFD               	movlw	-3
 20148  00092C  006F FF8C  F035    	movff	plusw1,btemp+11
 20149                           
 20150                           ;stkvar	_rem @ sp[(-2)+0]
 20151  000932  0EFE               	movlw	-2
 20152  000934  006F FF8C  F034    	movff	plusw1,btemp+10
 20153  00093A  90D8               	bcf	status,0,c
 20154  00093C  3435               	rlcf	(btemp+11)^0,w,c
 20155  00093E  3434               	rlcf	(btemp+10)^0,w,c
 20156  000940  6E35               	movwf	(btemp+11)^0,c
 20157                           
 20158                           ;stkvar	_rem @ sp[(-2)+0]
 20159  000942  0EFE               	movlw	-2
 20160  000944  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20161                           
 20162                           ;stkvar	_dividend @ sp[(-2)+-1]
 20163  00094A  50E1               	movf	fsr1l,w,c
 20164  00094C  0FFD               	addlw	-3
 20165  00094E  6ED9               	movwf	fsr2l,c
 20166  000950  50E2               	movf	fsr1h,w,c
 20167  000952  6EDA               	movwf	fsr2h,c
 20168  000954  0EFF               	movlw	255
 20169  000956  22DA               	addwfc	fsr2h,f,c
 20170  000958  90D8               	bcf	status,0,c
 20171  00095A  36DF               	rlcf	indf2,f,c
 20172                           
 20173                           ;stkvar	_divisor @ sp[(-2)+-2]
 20174                           ;stkvar	_rem @ sp[(-2)+0]
 20175  00095C  50E1               	movf	fsr1l,w,c
 20176  00095E  0FFE               	addlw	-2
 20177  000960  6ED9               	movwf	fsr2l,c
 20178  000962  50E2               	movf	fsr1h,w,c
 20179  000964  6EDA               	movwf	fsr2h,c
 20180  000966  0EFF               	movlw	255
 20181  000968  22DA               	addwfc	fsr2h,f,c
 20182  00096A  0EFC               	movlw	-4
 20183  00096C  50E3               	movf	plusw1,w,c
 20184  00096E  5CDE               	subwf	postinc2,w,c
 20185  000970  A0D8               	btfss	status,0,c
 20186  000972  D00D               	goto	l16558
 20187                           
 20188                           ;stkvar	_divisor @ sp[(-2)+-2]
 20189  000974  0EFC               	movlw	-4
 20190  000976  006F FF8C  F035    	movff	plusw1,btemp+11
 20191                           
 20192                           ;stkvar	_rem @ sp[(-2)+0]
 20193  00097C  50E1               	movf	fsr1l,w,c
 20194  00097E  0FFE               	addlw	-2
 20195  000980  6ED9               	movwf	fsr2l,c
 20196  000982  50E2               	movf	fsr1h,w,c
 20197  000984  6EDA               	movwf	fsr2h,c
 20198  000986  0EFF               	movlw	255
 20199  000988  22DA               	addwfc	fsr2h,f,c
 20200  00098A  5035               	movf	(btemp+11)^0,w,c
 20201  00098C  5EDF               	subwf	indf2,f,c
 20202  00098E                     l16558:
 20203                           
 20204                           ;stkvar	_counter @ sp[(-2)+1]
 20205  00098E  0EFF               	movlw	-1
 20206  000990  50E3               	movf	plusw1,w,c
 20207  000992  6E2A               	movwf	btemp^0,c
 20208  000994  0E01               	movlw	1
 20209  000996  5E2A               	subwf	btemp^0,f,c
 20210  000998  0EFF               	movlw	-1
 20211  00099A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20212  0009A0  A4D8               	btfss	status,2,c
 20213  0009A2  D7C3               	goto	l16550
 20214                           
 20215                           ;stkvar	_rem @ sp[(-2)+0]
 20216  0009A4  0EFE               	movlw	-2
 20217  0009A6  006F FF8C  F02A    	movff	plusw1,btemp
 20218                           
 20219                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20220  0009AC  52E5               	movf	postdec1,f,c
 20221  0009AE  52E5               	movf	postdec1,f,c
 20222  0009B0  52E5               	movf	postdec1,f,c
 20223  0009B2  52E5               	movf	postdec1,f,c
 20224  0009B4  0012               	return		;funcret
 20225  0009B6                     __end_of___lbmod:
 20226                           	opt callstack 0
 20227                           
 20228 ;; *************** function _current_sensor_cal *****************
 20229 ;; Defined at:
 20230 ;;		line 509 in file "main.c"
 20231 ;; Parameters:    Size  Location     Type
 20232 ;;		None
 20233 ;; Auto vars:     Size  Location     Type
 20234 ;;  cp              4  [STACK] unsigned long 
 20235 ;;  cb              4  [STACK] unsigned long 
 20236 ;;  x               1  [STACK] unsigned char 
 20237 ;; Return value:  Size  Location     Type
 20238 ;;                  1  [STACK] _Bool 
 20239 ;; Registers used:
 20240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20241 ;; Tracked objects:
 20242 ;;		On entry : 0/2
 20243 ;;		On exit  : 0/0
 20244 ;;		Unchanged: 0/0
 20245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20250 ;;Total ram usage:        0 bytes
 20251 ;; Hardware stack levels used:    1
 20252 ;; Hardware stack levels required when called:   27
 20253 ;; This function calls:
 20254 ;;		_WaitMs
 20255 ;;		_cal_current_zero
 20256 ;;		_clear_adc_scan
 20257 ;;		_get_raw_result
 20258 ;;		_get_switch
 20259 ;;		_get_vterm_ptr
 20260 ;;		_spinners
 20261 ;;		_sprintf
 20262 ;;		_start_adc_scan
 20263 ;;		_update_lcd
 20264 ;;		_write_cal_data
 20265 ;; This function is called by:
 20266 ;;		_main
 20267 ;; This function uses a reentrant model
 20268 ;;
 20269                           
 20270                           	psect	text57
 20271  018F08                     __ptext57:
 20272                           	opt callstack 0
 20273  018F08                     _current_sensor_cal:
 20274                           	opt callstack 0
 20275                           
 20276                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20277  018F08  0E09               	movlw	9
 20278  018F0A  26E1               	addwf	fsr1l,f,c
 20279  018F0C  0E00               	movlw	0
 20280  018F0E  22E2               	addwfc	fsr1h,f,c
 20281                           
 20282                           ;main.c: 511:  uint8_t x = 0;
 20283                           ;stkvar	_x @ sp[(-9)+8]
 20284                           
 20285                           ;incstack = 0
 20286  018F10  0EFF               	movlw	-1
 20287  018F12  6AE3               	clrf	plusw1,c
 20288                           
 20289                           ;main.c: 512:  uint32_t cb = 0, cp = 0;
 20290                           ;stkvar	_cb @ sp[(-9)+4]
 20291  018F14  0EFB               	movlw	-5
 20292  018F16  6AE3               	clrf	plusw1,c
 20293  018F18  0EFC               	movlw	-4
 20294  018F1A  6AE3               	clrf	plusw1,c
 20295  018F1C  0EFD               	movlw	-3
 20296  018F1E  6AE3               	clrf	plusw1,c
 20297  018F20  0EFE               	movlw	-2
 20298  018F22  6AE3               	clrf	plusw1,c
 20299                           
 20300                           ;stkvar	_cp @ sp[(-9)+0]
 20301  018F24  0EF7               	movlw	-9
 20302  018F26  6AE3               	clrf	plusw1,c
 20303  018F28  0EF8               	movlw	-8
 20304  018F2A  6AE3               	clrf	plusw1,c
 20305  018F2C  0EF9               	movlw	-7
 20306  018F2E  6AE3               	clrf	plusw1,c
 20307  018F30  0EFA               	movlw	-6
 20308  018F32  6AE3               	clrf	plusw1,c
 20309                           
 20310                           ;main.c: 514:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20311  018F34  0E8D               	movlw	low STR_52
 20312  018F36  6EE6               	movwf	postinc1,c
 20313  018F38  0EFE               	movlw	high STR_52
 20314  018F3A  6EE6               	movwf	postinc1,c
 20315  018F3C  0E00               	movlw	0
 20316  018F3E  6EE6               	movwf	postinc1,c
 20317  018F40  0E00               	movlw	0
 20318  018F42  6EE6               	movwf	postinc1,c
 20319  018F44  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20320  018F48  0060  F0AB  FFE6   	movff	btemp,postinc1
 20321  018F4E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20322  018F54  0E04               	movlw	4
 20323  018F56  6EE6               	movwf	postinc1,c
 20324  018F58  ECB9  F0FB         	call	_sprintf	;wreg free
 20325                           
 20326                           ; BSR set to: 0
 20327                           ;main.c: 515:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 20328  018F5C  0E39               	movlw	low STR_53
 20329  018F5E  6EE6               	movwf	postinc1,c
 20330  018F60  0EFE               	movlw	high STR_53
 20331  018F62  6EE6               	movwf	postinc1,c
 20332  018F64  0E00               	movlw	0
 20333  018F66  6EE6               	movwf	postinc1,c
 20334  018F68  0E01               	movlw	1
 20335  018F6A  6EE6               	movwf	postinc1,c
 20336  018F6C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20337  018F70  0060  F0AB  FFE6   	movff	btemp,postinc1
 20338  018F76  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20339  018F7C  0E04               	movlw	4
 20340  018F7E  6EE6               	movwf	postinc1,c
 20341  018F80  ECB9  F0FB         	call	_sprintf	;wreg free
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;main.c: 516:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 20345  018F84  0E24               	movlw	low STR_54
 20346  018F86  6EE6               	movwf	postinc1,c
 20347  018F88  0EFE               	movlw	high STR_54
 20348  018F8A  6EE6               	movwf	postinc1,c
 20349  018F8C  0E00               	movlw	0
 20350  018F8E  6EE6               	movwf	postinc1,c
 20351  018F90  0E02               	movlw	2
 20352  018F92  6EE6               	movwf	postinc1,c
 20353  018F94  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20354  018F98  0060  F0AB  FFE6   	movff	btemp,postinc1
 20355  018F9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20356  018FA4  0E04               	movlw	4
 20357  018FA6  6EE6               	movwf	postinc1,c
 20358  018FA8  ECB9  F0FB         	call	_sprintf	;wreg free
 20359                           
 20360                           ; BSR set to: 0
 20361                           ;main.c: 517:  update_lcd(0);
 20362  018FAC  0E00               	movlw	0
 20363  018FAE  6EE6               	movwf	postinc1,c
 20364  018FB0  EC6B  F0F4         	call	_update_lcd	;wreg free
 20365                           
 20366                           ;main.c: 518:  WaitMs(2000);
 20367  018FB4  0ED0               	movlw	208
 20368  018FB6  6EE6               	movwf	postinc1,c
 20369  018FB8  0E07               	movlw	7
 20370  018FBA  6EE6               	movwf	postinc1,c
 20371  018FBC  EC07  F00F         	call	_WaitMs	;wreg free
 20372  018FC0                     l17146:
 20373                           
 20374                           ;main.c: 520:   if (++x > 64)
 20375                           ;stkvar	_x @ sp[(-9)+8]
 20376  018FC0  0EFF               	movlw	-1
 20377  018FC2  2AE3               	incf	plusw1,f,c
 20378  018FC4  0EFF               	movlw	-1
 20379  018FC6  006F FF8C  F02A    	movff	plusw1,btemp
 20380  018FCC  0E40               	movlw	64
 20381  018FCE  642A               	cpfsgt	btemp^0,c
 20382  018FD0  D001               	goto	l17150
 20383  018FD2  D1CF               	goto	l1520
 20384  018FD4                     l17150:
 20385                           
 20386                           ;main.c: 522:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 20387  018FD4  0E00               	movlw	0
 20388  018FD6  6EE6               	movwf	postinc1,c
 20389  018FD8  0E04               	movlw	4
 20390  018FDA  6EE6               	movwf	postinc1,c
 20391  018FDC  EC35  F0FD         	call	_spinners	;wreg free
 20392  018FE0  502A               	movf	btemp^0,w,c
 20393  018FE2  6EE6               	movwf	postinc1,c
 20394  018FE4  0E00               	movlw	0
 20395  018FE6  6EE6               	movwf	postinc1,c
 20396  018FE8  0E5F               	movlw	low STR_55
 20397  018FEA  6EE6               	movwf	postinc1,c
 20398  018FEC  0EFF               	movlw	high STR_55
 20399  018FEE  6EE6               	movwf	postinc1,c
 20400  018FF0  0E00               	movlw	0
 20401  018FF2  6EE6               	movwf	postinc1,c
 20402  018FF4  0E02               	movlw	2
 20403  018FF6  6EE6               	movwf	postinc1,c
 20404  018FF8  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20405  018FFC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20406  019002  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20407  019008  0E06               	movlw	6
 20408  01900A  6EE6               	movwf	postinc1,c
 20409  01900C  ECB9  F0FB         	call	_sprintf	;wreg free
 20410                           
 20411                           ;main.c: 523:   update_lcd(0);
 20412  019010  0E00               	movlw	0
 20413  019012  6EE6               	movwf	postinc1,c
 20414  019014  EC6B  F0F4         	call	_update_lcd	;wreg free
 20415                           
 20416                           ;main.c: 524:   WaitMs(100);
 20417  019018  0E64               	movlw	100
 20418  01901A  6EE6               	movwf	postinc1,c
 20419  01901C  0E00               	movlw	0
 20420  01901E  6EE6               	movwf	postinc1,c
 20421  019020  EC07  F00F         	call	_WaitMs	;wreg free
 20422                           
 20423                           ;main.c: 525:  } while (get_switch(SCALIB));
 20424  019024  0E04               	movlw	4
 20425  019026  6EE6               	movwf	postinc1,c
 20426  019028  EC03  F010         	call	_get_switch	;wreg free
 20427  01902C  502A               	movf	btemp^0,w,c
 20428  01902E  A4D8               	btfss	status,2,c
 20429  019030  D7C7               	goto	l17146
 20430                           
 20431                           ;main.c: 527:  x = 0;
 20432                           ;stkvar	_x @ sp[(-9)+8]
 20433  019032  0EFF               	movlw	-1
 20434  019034  6AE3               	clrf	plusw1,c
 20435  019036                     l17158:
 20436                           
 20437                           ;main.c: 529:   cb += get_raw_result(C_BATT);
 20438  019036  0E00               	movlw	0
 20439  019038  6EE6               	movwf	postinc1,c
 20440  01903A  EC05  F012         	call	_get_raw_result	;wreg free
 20441                           
 20442                           ;stkvar	_cb @ sp[(-9)+4]
 20443  01903E  50E1               	movf	fsr1l,w,c
 20444  019040  0FFB               	addlw	-5
 20445  019042  6ED9               	movwf	fsr2l,c
 20446  019044  50E2               	movf	fsr1h,w,c
 20447  019046  6EDA               	movwf	fsr2h,c
 20448  019048  0EFF               	movlw	255
 20449  01904A  22DA               	addwfc	fsr2h,f,c
 20450  01904C  502A               	movf	btemp^0,w,c
 20451  01904E  26DE               	addwf	postinc2,f,c
 20452  019050  502B               	movf	(btemp+1)^0,w,c
 20453  019052  22DE               	addwfc	postinc2,f,c
 20454  019054  0E00               	movlw	0
 20455  019056  22DE               	addwfc	postinc2,f,c
 20456  019058  22DE               	addwfc	postinc2,f,c
 20457                           
 20458                           ;main.c: 530:   cp += get_raw_result(C_PV);
 20459  01905A  0E01               	movlw	1
 20460  01905C  6EE6               	movwf	postinc1,c
 20461  01905E  EC05  F012         	call	_get_raw_result	;wreg free
 20462                           
 20463                           ;stkvar	_cp @ sp[(-9)+0]
 20464  019062  50E1               	movf	fsr1l,w,c
 20465  019064  0FF7               	addlw	-9
 20466  019066  6ED9               	movwf	fsr2l,c
 20467  019068  50E2               	movf	fsr1h,w,c
 20468  01906A  6EDA               	movwf	fsr2h,c
 20469  01906C  0EFF               	movlw	255
 20470  01906E  22DA               	addwfc	fsr2h,f,c
 20471  019070  502A               	movf	btemp^0,w,c
 20472  019072  26DE               	addwf	postinc2,f,c
 20473  019074  502B               	movf	(btemp+1)^0,w,c
 20474  019076  22DE               	addwfc	postinc2,f,c
 20475  019078  0E00               	movlw	0
 20476  01907A  22DE               	addwfc	postinc2,f,c
 20477  01907C  22DE               	addwfc	postinc2,f,c
 20478                           
 20479                           ;main.c: 531:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 20480  01907E  0ECC               	movlw	low STR_56
 20481  019080  6EE6               	movwf	postinc1,c
 20482  019082  0EFE               	movlw	high STR_56
 20483  019084  6EE6               	movwf	postinc1,c
 20484  019086  0E00               	movlw	0
 20485  019088  6EE6               	movwf	postinc1,c
 20486  01908A  0E00               	movlw	0
 20487  01908C  6EE6               	movwf	postinc1,c
 20488  01908E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20489  019092  0060  F0AB  FFE6   	movff	btemp,postinc1
 20490  019098  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20491  01909E  0E04               	movlw	4
 20492  0190A0  6EE6               	movwf	postinc1,c
 20493  0190A2  ECB9  F0FB         	call	_sprintf	;wreg free
 20494                           
 20495                           ; BSR set to: 0
 20496                           ;main.c: 532:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 20497  0190A6  0E01               	movlw	1
 20498  0190A8  6EE6               	movwf	postinc1,c
 20499  0190AA  EC05  F012         	call	_get_raw_result	;wreg free
 20500  0190AE  0060  F0AB  FFE6   	movff	btemp,postinc1
 20501  0190B4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20502  0190BA  0E00               	movlw	0
 20503  0190BC  6EE6               	movwf	postinc1,c
 20504  0190BE  EC05  F012         	call	_get_raw_result	;wreg free
 20505  0190C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20506  0190C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20507  0190CE  0E91               	movlw	low STR_57
 20508  0190D0  6EE6               	movwf	postinc1,c
 20509  0190D2  0EFD               	movlw	high STR_57
 20510  0190D4  6EE6               	movwf	postinc1,c
 20511  0190D6  0E00               	movlw	0
 20512  0190D8  6EE6               	movwf	postinc1,c
 20513  0190DA  0E01               	movlw	1
 20514  0190DC  6EE6               	movwf	postinc1,c
 20515  0190DE  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20516  0190E2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20517  0190E8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20518  0190EE  0E08               	movlw	8
 20519  0190F0  6EE6               	movwf	postinc1,c
 20520  0190F2  ECB9  F0FB         	call	_sprintf	;wreg free
 20521                           
 20522                           ; BSR set to: 0
 20523                           ;main.c: 533:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 20524                           ;stkvar	_x @ sp[(-9)+8]
 20525  0190F6  0EFF               	movlw	-1
 20526  0190F8  50E3               	movf	plusw1,w,c
 20527  0190FA  6EE6               	movwf	postinc1,c
 20528  0190FC  0E00               	movlw	0
 20529  0190FE  6EE6               	movwf	postinc1,c
 20530  019100  0E20               	movlw	low STR_58
 20531  019102  6EE6               	movwf	postinc1,c
 20532  019104  0EFF               	movlw	high STR_58
 20533  019106  6EE6               	movwf	postinc1,c
 20534  019108  0E00               	movlw	0
 20535  01910A  6EE6               	movwf	postinc1,c
 20536  01910C  0E02               	movlw	2
 20537  01910E  6EE6               	movwf	postinc1,c
 20538  019110  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20539  019114  0060  F0AB  FFE6   	movff	btemp,postinc1
 20540  01911A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20541  019120  0E06               	movlw	6
 20542  019122  6EE6               	movwf	postinc1,c
 20543  019124  ECB9  F0FB         	call	_sprintf	;wreg free
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;main.c: 534:   update_lcd(0);
 20547  019128  0E00               	movlw	0
 20548  01912A  6EE6               	movwf	postinc1,c
 20549  01912C  EC6B  F0F4         	call	_update_lcd	;wreg free
 20550                           
 20551                           ;main.c: 535:   clear_adc_scan();
 20552  019130  EC91  F013         	call	_clear_adc_scan	;wreg free
 20553                           
 20554                           ; BSR set to: 1
 20555                           ;main.c: 536:   start_adc_scan();
 20556  019134  EC39  F00A         	call	_start_adc_scan	;wreg free
 20557                           
 20558                           ;main.c: 537:   WaitMs(100);
 20559  019138  0E64               	movlw	100
 20560  01913A  6EE6               	movwf	postinc1,c
 20561  01913C  0E00               	movlw	0
 20562  01913E  6EE6               	movwf	postinc1,c
 20563  019140  EC07  F00F         	call	_WaitMs	;wreg free
 20564                           
 20565                           ;main.c: 538:  } while (++x < 64);
 20566                           ;stkvar	_x @ sp[(-9)+8]
 20567  019144  0EFF               	movlw	-1
 20568  019146  2AE3               	incf	plusw1,f,c
 20569  019148  0EFF               	movlw	-1
 20570  01914A  006F FF8C  F02A    	movff	plusw1,btemp
 20571  019150  0E3F               	movlw	63
 20572  019152  642A               	cpfsgt	btemp^0,c
 20573  019154  D770               	goto	l17158
 20574                           
 20575                           ;main.c: 539:  cb = cb >> 6;
 20576  019156  0E06               	movlw	6
 20577  019158  6E35               	movwf	(btemp+11)^0,c
 20578                           
 20579                           ;stkvar	_cb @ sp[(-9)+4]
 20580  01915A  50E1               	movf	fsr1l,w,c
 20581  01915C  0FFB               	addlw	-5
 20582  01915E  6ED9               	movwf	fsr2l,c
 20583  019160  50E2               	movf	fsr1h,w,c
 20584  019162  6EDA               	movwf	fsr2h,c
 20585  019164  0EFF               	movlw	255
 20586  019166  22DA               	addwfc	fsr2h,f,c
 20587  019168  2835               	incf	(btemp+11)^0,w,c
 20588  01916A  52DE               	movf	postinc2,f,c
 20589  01916C  D007               	goto	u16760
 20590  01916E                     u16765:
 20591  01916E  52DE               	movf	postinc2,f,c
 20592  019170  52DE               	movf	postinc2,f,c
 20593  019172  90D8               	bcf	status,0,c
 20594  019174  32DD               	rrcf	postdec2,f,c
 20595  019176  32DD               	rrcf	postdec2,f,c
 20596  019178  32DD               	rrcf	postdec2,f,c
 20597  01917A  32DE               	rrcf	postinc2,f,c
 20598  01917C                     u16760:
 20599  01917C  2EE8               	decfsz	wreg,f,c
 20600  01917E  D7F7               	goto	u16765
 20601                           
 20602                           ;main.c: 540:  cp = cp >> 6;
 20603  019180  0E06               	movlw	6
 20604  019182  6E35               	movwf	(btemp+11)^0,c
 20605                           
 20606                           ;stkvar	_cp @ sp[(-9)+0]
 20607  019184  50E1               	movf	fsr1l,w,c
 20608  019186  0FF7               	addlw	-9
 20609  019188  6ED9               	movwf	fsr2l,c
 20610  01918A  50E2               	movf	fsr1h,w,c
 20611  01918C  6EDA               	movwf	fsr2h,c
 20612  01918E  0EFF               	movlw	255
 20613  019190  22DA               	addwfc	fsr2h,f,c
 20614  019192  2835               	incf	(btemp+11)^0,w,c
 20615  019194  52DE               	movf	postinc2,f,c
 20616  019196  D007               	goto	u16770
 20617  019198                     u16775:
 20618  019198  52DE               	movf	postinc2,f,c
 20619  01919A  52DE               	movf	postinc2,f,c
 20620  01919C  90D8               	bcf	status,0,c
 20621  01919E  32DD               	rrcf	postdec2,f,c
 20622  0191A0  32DD               	rrcf	postdec2,f,c
 20623  0191A2  32DD               	rrcf	postdec2,f,c
 20624  0191A4  32DE               	rrcf	postinc2,f,c
 20625  0191A6                     u16770:
 20626  0191A6  2EE8               	decfsz	wreg,f,c
 20627  0191A8  D7F7               	goto	u16775
 20628                           
 20629                           ;main.c: 542:  if (cal_current_zero(0, cb, cp)) {
 20630                           ;stkvar	_cp @ sp[(-9)+0]
 20631  0191AA  0EF7               	movlw	-9
 20632  0191AC  006F FF8F FFE6     	movff	plusw1,postinc1
 20633  0191B2  006F FF8F FFE6     	movff	plusw1,postinc1
 20634                           
 20635                           ;stkvar	_cb @ sp[(-11)+4]
 20636  0191B8  0EF9               	movlw	-7
 20637  0191BA  006F FF8F FFE6     	movff	plusw1,postinc1
 20638  0191C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20639  0191C6  0E00               	movlw	0
 20640  0191C8  6EE6               	movwf	postinc1,c
 20641  0191CA  EC27  F005         	call	_cal_current_zero	;wreg free
 20642  0191CE  502A               	movf	btemp^0,w,c
 20643  0191D0  B4D8               	btfsc	status,2,c
 20644  0191D2  D075               	goto	l17196
 20645                           
 20646                           ;main.c: 543:   cal_current_zero(1, cb, cp);
 20647                           ;stkvar	_cp @ sp[(-9)+0]
 20648  0191D4  0EF7               	movlw	-9
 20649  0191D6  006F FF8F FFE6     	movff	plusw1,postinc1
 20650  0191DC  006F FF8F FFE6     	movff	plusw1,postinc1
 20651                           
 20652                           ;stkvar	_cb @ sp[(-11)+4]
 20653  0191E2  0EF9               	movlw	-7
 20654  0191E4  006F FF8F FFE6     	movff	plusw1,postinc1
 20655  0191EA  006F FF8F FFE6     	movff	plusw1,postinc1
 20656  0191F0  0E01               	movlw	1
 20657  0191F2  6EE6               	movwf	postinc1,c
 20658  0191F4  EC27  F005         	call	_cal_current_zero	;wreg free
 20659                           
 20660                           ;main.c: 544:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20661  0191F8  0E8D               	movlw	low STR_52
 20662  0191FA  6EE6               	movwf	postinc1,c
 20663  0191FC  0EFE               	movlw	high STR_52
 20664  0191FE  6EE6               	movwf	postinc1,c
 20665  019200  0E00               	movlw	0
 20666  019202  6EE6               	movwf	postinc1,c
 20667  019204  0E00               	movlw	0
 20668  019206  6EE6               	movwf	postinc1,c
 20669  019208  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20670  01920C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20671  019212  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20672  019218  0E04               	movlw	4
 20673  01921A  6EE6               	movwf	postinc1,c
 20674  01921C  ECB9  F0FB         	call	_sprintf	;wreg free
 20675                           
 20676                           ; BSR set to: 0
 20677                           ;main.c: 545:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 20678                           ;stkvar	_cp @ sp[(-9)+0]
 20679  019220  0EF7               	movlw	-9
 20680  019222  006F FF8F FFE6     	movff	plusw1,postinc1
 20681  019228  006F FF8F FFE6     	movff	plusw1,postinc1
 20682  01922E  006F FF8F FFE6     	movff	plusw1,postinc1
 20683  019234  006F FF8F FFE6     	movff	plusw1,postinc1
 20684                           
 20685                           ;stkvar	_cb @ sp[(-13)+4]
 20686  01923A  0EF7               	movlw	-9
 20687  01923C  006F FF8F FFE6     	movff	plusw1,postinc1
 20688  019242  006F FF8F FFE6     	movff	plusw1,postinc1
 20689  019248  006F FF8F FFE6     	movff	plusw1,postinc1
 20690  01924E  006F FF8F FFE6     	movff	plusw1,postinc1
 20691  019254  0EA6               	movlw	low STR_60
 20692  019256  6EE6               	movwf	postinc1,c
 20693  019258  0EFD               	movlw	high STR_60
 20694  01925A  6EE6               	movwf	postinc1,c
 20695  01925C  0E00               	movlw	0
 20696  01925E  6EE6               	movwf	postinc1,c
 20697  019260  0E01               	movlw	1
 20698  019262  6EE6               	movwf	postinc1,c
 20699  019264  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20700  019268  0060  F0AB  FFE6   	movff	btemp,postinc1
 20701  01926E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20702  019274  0E0C               	movlw	12
 20703  019276  6EE6               	movwf	postinc1,c
 20704  019278  ECB9  F0FB         	call	_sprintf	;wreg free
 20705                           
 20706                           ; BSR set to: 0
 20707                           ;main.c: 546:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 20708  01927C  0E63               	movlw	low STR_61
 20709  01927E  6EE6               	movwf	postinc1,c
 20710  019280  0EFE               	movlw	high STR_61
 20711  019282  6EE6               	movwf	postinc1,c
 20712  019284  0E00               	movlw	0
 20713  019286  6EE6               	movwf	postinc1,c
 20714  019288  0E02               	movlw	2
 20715  01928A  6EE6               	movwf	postinc1,c
 20716  01928C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20717  019290  0060  F0AB  FFE6   	movff	btemp,postinc1
 20718  019296  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20719  01929C  0E04               	movlw	4
 20720  01929E  6EE6               	movwf	postinc1,c
 20721  0192A0  ECB9  F0FB         	call	_sprintf	;wreg free
 20722                           
 20723                           ; BSR set to: 0
 20724                           ;main.c: 547:   update_lcd(0);
 20725  0192A4  0E00               	movlw	0
 20726  0192A6  6EE6               	movwf	postinc1,c
 20727  0192A8  EC6B  F0F4         	call	_update_lcd	;wreg free
 20728                           
 20729                           ;main.c: 548:   WaitMs(2000);
 20730  0192AC  0ED0               	movlw	208
 20731  0192AE  6EE6               	movwf	postinc1,c
 20732  0192B0  0E07               	movlw	7
 20733  0192B2  6EE6               	movwf	postinc1,c
 20734  0192B4  EC07  F00F         	call	_WaitMs	;wreg free
 20735                           
 20736                           ;main.c: 549:   write_cal_data();
 20737  0192B8  ECC8  F0F5         	call	_write_cal_data	;wreg free
 20738                           
 20739                           ;main.c: 550:  } else {
 20740  0192BC  D05A               	goto	l1520
 20741  0192BE                     l17196:
 20742                           
 20743                           ;main.c: 551:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20744  0192BE  0E8D               	movlw	low STR_52
 20745  0192C0  6EE6               	movwf	postinc1,c
 20746  0192C2  0EFE               	movlw	high STR_52
 20747  0192C4  6EE6               	movwf	postinc1,c
 20748  0192C6  0E00               	movlw	0
 20749  0192C8  6EE6               	movwf	postinc1,c
 20750  0192CA  0E00               	movlw	0
 20751  0192CC  6EE6               	movwf	postinc1,c
 20752  0192CE  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20753  0192D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20754  0192D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20755  0192DE  0E04               	movlw	4
 20756  0192E0  6EE6               	movwf	postinc1,c
 20757  0192E2  ECB9  F0FB         	call	_sprintf	;wreg free
 20758                           
 20759                           ;main.c: 552:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 20760  0192E6  0E01               	movlw	1
 20761  0192E8  6EE6               	movwf	postinc1,c
 20762  0192EA  EC05  F012         	call	_get_raw_result	;wreg free
 20763  0192EE  0060  F0AB  FFE6   	movff	btemp,postinc1
 20764  0192F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20765  0192FA  0E00               	movlw	0
 20766  0192FC  6EE6               	movwf	postinc1,c
 20767  0192FE  EC05  F012         	call	_get_raw_result	;wreg free
 20768  019302  0060  F0AB  FFE6   	movff	btemp,postinc1
 20769  019308  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20770  01930E  0EA6               	movlw	low STR_60
 20771  019310  6EE6               	movwf	postinc1,c
 20772  019312  0EFD               	movlw	high STR_60
 20773  019314  6EE6               	movwf	postinc1,c
 20774  019316  0E00               	movlw	0
 20775  019318  6EE6               	movwf	postinc1,c
 20776  01931A  0E01               	movlw	1
 20777  01931C  6EE6               	movwf	postinc1,c
 20778  01931E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20779  019322  0060  F0AB  FFE6   	movff	btemp,postinc1
 20780  019328  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20781  01932E  0E08               	movlw	8
 20782  019330  6EE6               	movwf	postinc1,c
 20783  019332  ECB9  F0FB         	call	_sprintf	;wreg free
 20784                           
 20785                           ;main.c: 553:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 20786  019336  0E0B               	movlw	low STR_64
 20787  019338  6EE6               	movwf	postinc1,c
 20788  01933A  0EFF               	movlw	high STR_64
 20789  01933C  6EE6               	movwf	postinc1,c
 20790  01933E  0E00               	movlw	0
 20791  019340  6EE6               	movwf	postinc1,c
 20792  019342  0E02               	movlw	2
 20793  019344  6EE6               	movwf	postinc1,c
 20794  019346  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 20795  01934A  0060  F0AB  FFE6   	movff	btemp,postinc1
 20796  019350  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20797  019356  0E04               	movlw	4
 20798  019358  6EE6               	movwf	postinc1,c
 20799  01935A  ECB9  F0FB         	call	_sprintf	;wreg free
 20800                           
 20801                           ;main.c: 554:   update_lcd(0);
 20802  01935E  0E00               	movlw	0
 20803  019360  6EE6               	movwf	postinc1,c
 20804  019362  EC6B  F0F4         	call	_update_lcd	;wreg free
 20805                           
 20806                           ;main.c: 555:   WaitMs(2000);
 20807  019366  0ED0               	movlw	208
 20808  019368  6EE6               	movwf	postinc1,c
 20809  01936A  0E07               	movlw	7
 20810  01936C  6EE6               	movwf	postinc1,c
 20811  01936E  EC07  F00F         	call	_WaitMs	;wreg free
 20812  019372                     l1520:
 20813                           
 20814                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 20815  019372  0EF7               	movlw	247
 20816  019374  26E1               	addwf	fsr1l,f,c
 20817  019376  0EFF               	movlw	255
 20818  019378  22E2               	addwfc	fsr1h,f,c
 20819  01937A  0012               	return		;funcret
 20820  01937C                     __end_of_current_sensor_cal:
 20821                           	opt callstack 0
 20822                           
 20823 ;; *************** function _write_cal_data *****************
 20824 ;; Defined at:
 20825 ;;		line 408 in file "daq.c"
 20826 ;; Parameters:    Size  Location     Type
 20827 ;;		None
 20828 ;; Auto vars:     Size  Location     Type
 20829 ;;  x               2  [STACK] unsigned short 
 20830 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 20831 ;;		 -> R(155), 
 20832 ;;  y               2  [STACK] unsigned short 
 20833 ;;  crcVal          1  [STACK] unsigned char 
 20834 ;; Return value:  Size  Location     Type
 20835 ;;                  1  [STACK] void 
 20836 ;; Registers used:
 20837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 20838 ;; Tracked objects:
 20839 ;;		On entry : 0/39
 20840 ;;		On exit  : 0/0
 20841 ;;		Unchanged: 0/0
 20842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20847 ;;Total ram usage:        0 bytes
 20848 ;; Hardware stack levels used:    1
 20849 ;; Hardware stack levels required when called:   17
 20850 ;; This function calls:
 20851 ;;		_CRC_8BitDataWrite
 20852 ;;		_CRC_CalculatedResultGet
 20853 ;;		_CRC_Initialize
 20854 ;;		_CRC_IsBusy
 20855 ;;		_CRC_Start
 20856 ;;		_DATAEE_WriteByte
 20857 ;; This function is called by:
 20858 ;;		_main
 20859 ;;		_current_sensor_cal
 20860 ;; This function uses a reentrant model
 20861 ;;
 20862                           
 20863                           	psect	text58
 20864  01EB90                     __ptext58:
 20865                           	opt callstack 0
 20866  01EB90                     _write_cal_data:
 20867                           	opt callstack 0
 20868                           
 20869                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20870  01EB90  0E07               	movlw	7
 20871  01EB92  26E1               	addwf	fsr1l,f,c
 20872  01EB94  0E00               	movlw	0
 20873  01EB96  22E2               	addwfc	fsr1h,f,c
 20874                           
 20875                           ;daq.c: 410:  uint16_t x = 0, y;
 20876                           ;stkvar	_x @ sp[(-7)+0]
 20877                           
 20878                           ;incstack = 0
 20879  01EB98  0EF9               	movlw	-7
 20880  01EB9A  6AE3               	clrf	plusw1,c
 20881  01EB9C  0EFA               	movlw	-6
 20882  01EB9E  6AE3               	clrf	plusw1,c
 20883                           
 20884                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 20885  01EBA0  0E9B               	movlw	155
 20886  01EBA2  6E34               	movwf	(btemp+10)^0,c
 20887  01EBA4  0E00               	movlw	0
 20888  01EBA6  6E35               	movwf	(btemp+11)^0,c
 20889                           
 20890                           ;stkvar	_y @ sp[(-7)+4]
 20891  01EBA8  0EFD               	movlw	-3
 20892  01EBAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20893  01EBB0  0EFE               	movlw	-2
 20894  01EBB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20895                           
 20896                           ;daq.c: 414:  R.crc = 0x42;
 20897  01EBB8  0E42               	movlw	66
 20898  01EBBA  0101               	movlb	1	; () banked
 20899  01EBBC  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 20900                           
 20901                           ; BSR set to: 1
 20902                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 20903                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20904  01EBBE  0E01               	movlw	high _R
 20905  01EBC0  6E2A               	movwf	btemp^0,c
 20906  01EBC2  0EFC               	movlw	-4
 20907  01EBC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 20908  01EBCA  0E00               	movlw	low _R
 20909  01EBCC  6E2A               	movwf	btemp^0,c
 20910  01EBCE  0EFB               	movlw	-5
 20911  01EBD0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20912                           
 20913                           ; BSR set to: 1
 20914                           ;daq.c: 416:  R.checkmark = 0x1957;
 20915  01EBD6  0E19               	movlw	25
 20916  01EBD8  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 20917  01EBDA  0E57               	movlw	87
 20918  01EBDC  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 20919                           
 20920                           ; BSR set to: 1
 20921                           ;daq.c: 418:  CRC_Initialize();
 20922  01EBDE  EC4B  F006         	call	_CRC_Initialize	;wreg free
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;daq.c: 421:  CRC_Start();
 20926  01EBE2  EC8E  F013         	call	_CRC_Start	;wreg free
 20927  01EBE6                     l13464:
 20928                           
 20929                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 20930                           ;stkvar	_x @ sp[(-7)+0]
 20931  01EBE6  0EF9               	movlw	-7
 20932  01EBE8  006F FF8C  F034    	movff	plusw1,btemp+10
 20933  01EBEE  0EFA               	movlw	-6
 20934  01EBF0  006F FF8C  F035    	movff	plusw1,btemp+11
 20935                           
 20936                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20937  01EBF6  0EFB               	movlw	-5
 20938  01EBF8  006F FF8C  F032    	movff	plusw1,btemp+8
 20939  01EBFE  0EFC               	movlw	-4
 20940  01EC00  006F FF8C  F033    	movff	plusw1,btemp+9
 20941  01EC06  5034               	movf	(btemp+10)^0,w,c
 20942  01EC08  2432               	addwf	(btemp+8)^0,w,c
 20943  01EC0A  6ED9               	movwf	fsr2l,c
 20944  01EC0C  5035               	movf	(btemp+11)^0,w,c
 20945  01EC0E  2033               	addwfc	(btemp+9)^0,w,c
 20946  01EC10  6EDA               	movwf	fsr2h,c
 20947  01EC12  50DF               	movf	indf2,w,c
 20948  01EC14  6EE6               	movwf	postinc1,c
 20949                           
 20950                           ;stkvar	_x @ sp[(-8)+0]
 20951  01EC16  0EF8               	movlw	-8
 20952  01EC18  006F FF8F FFE6     	movff	plusw1,postinc1
 20953  01EC1E  006F FF8F FFE6     	movff	plusw1,postinc1
 20954  01EC24  EC6D  F009         	call	_DATAEE_WriteByte	;wreg free
 20955                           
 20956                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 20957                           ;stkvar	_x @ sp[(-7)+0]
 20958  01EC28  0EF9               	movlw	-7
 20959  01EC2A  006F FF8C  F034    	movff	plusw1,btemp+10
 20960  01EC30  0EFA               	movlw	-6
 20961  01EC32  006F FF8C  F035    	movff	plusw1,btemp+11
 20962                           
 20963                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20964  01EC38  0EFB               	movlw	-5
 20965  01EC3A  006F FF8C  F032    	movff	plusw1,btemp+8
 20966  01EC40  0EFC               	movlw	-4
 20967  01EC42  006F FF8C  F033    	movff	plusw1,btemp+9
 20968  01EC48  5034               	movf	(btemp+10)^0,w,c
 20969  01EC4A  2432               	addwf	(btemp+8)^0,w,c
 20970  01EC4C  6ED9               	movwf	fsr2l,c
 20971  01EC4E  5035               	movf	(btemp+11)^0,w,c
 20972  01EC50  2033               	addwfc	(btemp+9)^0,w,c
 20973  01EC52  6EDA               	movwf	fsr2h,c
 20974  01EC54  50DF               	movf	indf2,w,c
 20975  01EC56  6EE6               	movwf	postinc1,c
 20976  01EC58  ECFD  F012         	call	_CRC_8BitDataWrite	;wreg free
 20977  01EC5C                     l13468:
 20978  01EC5C  EC1F  F013         	call	_CRC_IsBusy	;wreg free
 20979  01EC60  502A               	movf	btemp^0,w,c
 20980  01EC62  A4D8               	btfss	status,2,c
 20981  01EC64  D7FB               	goto	l13468
 20982                           
 20983                           ;daq.c: 427:  } while (++x < y);
 20984                           ;stkvar	_y @ sp[(-7)+4]
 20985  01EC66  0EFD               	movlw	-3
 20986  01EC68  006F FF8C  F034    	movff	plusw1,btemp+10
 20987  01EC6E  0EFE               	movlw	-2
 20988  01EC70  006F FF8C  F035    	movff	plusw1,btemp+11
 20989                           
 20990                           ;stkvar	_x @ sp[(-7)+0]
 20991  01EC76  0EF9               	movlw	-7
 20992  01EC78  50E3               	movf	plusw1,w,c
 20993  01EC7A  0F01               	addlw	1
 20994  01EC7C  6E2A               	movwf	btemp^0,c
 20995  01EC7E  0EF9               	movlw	-7
 20996  01EC80  0060  F0AB  FFE3   	movff	btemp,plusw1
 20997  01EC86  6A2A               	clrf	btemp^0,c
 20998  01EC88  0EFA               	movlw	-6
 20999  01EC8A  50E3               	movf	plusw1,w,c
 21000  01EC8C  202A               	addwfc	btemp^0,w,c
 21001  01EC8E  6E2A               	movwf	btemp^0,c
 21002  01EC90  0EFA               	movlw	-6
 21003  01EC92  0060  F0AB  FFE3   	movff	btemp,plusw1
 21004  01EC98  0EF9               	movlw	-7
 21005  01EC9A  006F FF8C  F032    	movff	plusw1,btemp+8
 21006  01ECA0  0EFA               	movlw	-6
 21007  01ECA2  006F FF8C  F033    	movff	plusw1,btemp+9
 21008  01ECA8  5034               	movf	(btemp+10)^0,w,c
 21009  01ECAA  5C32               	subwf	(btemp+8)^0,w,c
 21010  01ECAC  5035               	movf	(btemp+11)^0,w,c
 21011  01ECAE  5833               	subwfb	(btemp+9)^0,w,c
 21012  01ECB0  A0D8               	btfss	status,0,c
 21013  01ECB2  D799               	goto	l13464
 21014                           
 21015                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 21016  01ECB4  0E00               	movlw	0
 21017  01ECB6  6EE6               	movwf	postinc1,c
 21018  01ECB8  0E00               	movlw	0
 21019  01ECBA  6EE6               	movwf	postinc1,c
 21020  01ECBC  0E00               	movlw	0
 21021  01ECBE  6EE6               	movwf	postinc1,c
 21022  01ECC0  ECE4  F0F0         	call	_CRC_CalculatedResultGet	;wreg free
 21023                           
 21024                           ;stkvar	_crcVal @ sp[(-7)+6]
 21025  01ECC4  0EFF               	movlw	-1
 21026  01ECC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 21027                           
 21028                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 21029                           ;stkvar	_crcVal @ sp[(-7)+6]
 21030  01ECCC  0EFF               	movlw	-1
 21031  01ECCE  50E3               	movf	plusw1,w,c
 21032  01ECD0  6EE6               	movwf	postinc1,c
 21033  01ECD2  0E9A               	movlw	154
 21034  01ECD4  6EE6               	movwf	postinc1,c
 21035  01ECD6  0E00               	movlw	0
 21036  01ECD8  6EE6               	movwf	postinc1,c
 21037  01ECDA  EC6D  F009         	call	_DATAEE_WriteByte	;wreg free
 21038                           
 21039                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21040  01ECDE  0EF9               	movlw	249
 21041  01ECE0  26E1               	addwf	fsr1l,f,c
 21042  01ECE2  0EFF               	movlw	255
 21043  01ECE4  22E2               	addwfc	fsr1h,f,c
 21044  01ECE6  0012               	return		;funcret
 21045  01ECE8                     __end_of_write_cal_data:
 21046                           	opt callstack 0
 21047                           
 21048 ;; *************** function _DATAEE_WriteByte *****************
 21049 ;; Defined at:
 21050 ;;		line 172 in file "mcc_generated_files/memory.c"
 21051 ;; Parameters:    Size  Location     Type
 21052 ;;  bAdd            2  [STACK] unsigned short 
 21053 ;;  bData           1  [STACK] unsigned char 
 21054 ;; Auto vars:     Size  Location     Type
 21055 ;;  GIEBitValue     1  [STACK] unsigned char 
 21056 ;; Return value:  Size  Location     Type
 21057 ;;                  1  [STACK] void 
 21058 ;; Registers used:
 21059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21060 ;; Tracked objects:
 21061 ;;		On entry : 0/39
 21062 ;;		On exit  : 0/0
 21063 ;;		Unchanged: 0/0
 21064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21069 ;;Total ram usage:        0 bytes
 21070 ;; Hardware stack levels used:    1
 21071 ;; Hardware stack levels required when called:   15
 21072 ;; This function calls:
 21073 ;;		Nothing
 21074 ;; This function is called by:
 21075 ;;		_write_cal_data
 21076 ;; This function uses a reentrant model
 21077 ;;
 21078                           
 21079                           	psect	text59
 21080  0012DA                     __ptext59:
 21081                           	opt callstack 0
 21082  0012DA                     _DATAEE_WriteByte:
 21083                           	opt callstack 0
 21084                           
 21085                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21086  0012DA  52E6               	movf	postinc1,f,c
 21087                           
 21088                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 21089                           
 21090                           ;incstack = 0
 21091  0012DC  AED2               	btfss	210,7,c	;volatile
 21092  0012DE  D003               	goto	u12040
 21093  0012E0  6A35               	clrf	(btemp+11)^0,c
 21094  0012E2  2A35               	incf	(btemp+11)^0,f,c
 21095  0012E4  D001               	goto	u12048
 21096  0012E6                     u12040:
 21097  0012E6  6A35               	clrf	(btemp+11)^0,c
 21098  0012E8                     u12048:
 21099                           
 21100                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21101  0012E8  0EFF               	movlw	-1
 21102  0012EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21103                           
 21104                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 21105                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21106  0012F0  0EFE               	movlw	254
 21107  0012F2  24E1               	addwf	fsr1l,w,c
 21108  0012F4  6ED9               	movwf	fsr2l,c
 21109  0012F6  0EFF               	movlw	255
 21110  0012F8  20E2               	addwfc	fsr1h,w,c
 21111  0012FA  6EDA               	movwf	fsr2h,c
 21112  0012FC  50DF               	movf	indf2,w,c
 21113  0012FE  0B03               	andlw	3
 21114  001300  0139               	movlb	57	; () banked
 21115  001302  6FE1               	movwf	225,b	;volatile
 21116                           
 21117                           ; BSR set to: 57
 21118                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 21119                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21120  001304  0EFD               	movlw	-3
 21121  001306  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 21122                           
 21123                           ; BSR set to: 57
 21124                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 21125                           ;stkvar	_bData @ sp[(-1)+-3]
 21126  00130C  0EFC               	movlw	-4
 21127  00130E  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 21128                           
 21129                           ; BSR set to: 57
 21130                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 21131  001314  0E3F               	movlw	-193
 21132  001316  17E5               	andwf	229,f,b	;volsfr
 21133                           
 21134                           ; BSR set to: 57
 21135                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 21136  001318  85E5               	bsf	229,2,b	;volsfr
 21137                           
 21138                           ; BSR set to: 57
 21139                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 21140  00131A  9ED2               	bcf	210,7,c	;volatile
 21141                           
 21142                           ; BSR set to: 57
 21143                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 21144  00131C  0E55               	movlw	85
 21145  00131E  6FE6               	movwf	230,b	;volsfr
 21146                           
 21147                           ; BSR set to: 57
 21148                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 21149  001320  0EAA               	movlw	170
 21150  001322  6FE6               	movwf	230,b	;volsfr
 21151                           
 21152                           ; BSR set to: 57
 21153                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 21154  001324  83E5               	bsf	229,1,b	;volsfr
 21155  001326                     l942:
 21156                           
 21157                           ; BSR set to: 57
 21158                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 21159  001326  B3E5               	btfsc	229,1,b	;volsfr
 21160  001328  D7FE               	goto	l942
 21161                           
 21162                           ; BSR set to: 57
 21163                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 21164  00132A  95E5               	bcf	229,2,b	;volsfr
 21165                           
 21166                           ; BSR set to: 57
 21167                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 21168                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21169  00132C  0EFF               	movlw	-1
 21170  00132E  B0E3               	btfsc	plusw1,0,c
 21171  001330  D002               	bra	u12065
 21172  001332  9ED2               	bcf	210,7,c	;volatile
 21173  001334  D001               	bra	u12066
 21174  001336                     u12065:
 21175  001336  8ED2               	bsf	210,7,c	;volatile
 21176  001338                     u12066:
 21177                           
 21178                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21179  001338  52E5               	movf	postdec1,f,c
 21180  00133A  52E5               	movf	postdec1,f,c
 21181  00133C  52E5               	movf	postdec1,f,c
 21182  00133E  52E5               	movf	postdec1,f,c
 21183  001340  0012               	return		;funcret
 21184  001342                     __end_of_DATAEE_WriteByte:
 21185                           	opt callstack 0
 21186                           
 21187 ;; *************** function _CRC_Start *****************
 21188 ;; Defined at:
 21189 ;;		line 119 in file "mcc_generated_files/crc.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;		None
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;		None
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1  [STACK] void 
 21196 ;; Registers used:
 21197 ;;		None
 21198 ;; Tracked objects:
 21199 ;;		On entry : 3F/0
 21200 ;;		On exit  : 3F/39
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21207 ;;Total ram usage:        0 bytes
 21208 ;; Hardware stack levels used:    1
 21209 ;; Hardware stack levels required when called:   15
 21210 ;; This function calls:
 21211 ;;		Nothing
 21212 ;; This function is called by:
 21213 ;;		_read_cal_data
 21214 ;;		_write_cal_data
 21215 ;; This function uses a reentrant model
 21216 ;;
 21217                           
 21218                           	psect	text60
 21219  00271C                     __ptext60:
 21220                           	opt callstack 0
 21221  00271C                     _CRC_Start:
 21222                           	opt callstack 14
 21223                           
 21224                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 21225                           
 21226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21227                           ;incstack = 0
 21228  00271C  0139               	movlb	57	; () banked
 21229  00271E  8D68               	bsf	104,6,b	;volatile
 21230                           
 21231                           ; BSR set to: 57
 21232                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21233  002720  0012               	return		;funcret
 21234  002722                     __end_of_CRC_Start:
 21235                           	opt callstack 0
 21236                           
 21237 ;; *************** function _CRC_IsBusy *****************
 21238 ;; Defined at:
 21239 ;;		line 201 in file "mcc_generated_files/crc.c"
 21240 ;; Parameters:    Size  Location     Type
 21241 ;;		None
 21242 ;; Auto vars:     Size  Location     Type
 21243 ;;		None
 21244 ;; Return value:  Size  Location     Type
 21245 ;;                  1  [STACK] _Bool 
 21246 ;; Registers used:
 21247 ;;		btemp
 21248 ;; Tracked objects:
 21249 ;;		On entry : 0/39
 21250 ;;		On exit  : 0/0
 21251 ;;		Unchanged: 0/0
 21252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21257 ;;Total ram usage:        0 bytes
 21258 ;; Hardware stack levels used:    1
 21259 ;; Hardware stack levels required when called:   15
 21260 ;; This function calls:
 21261 ;;		Nothing
 21262 ;; This function is called by:
 21263 ;;		_read_cal_data
 21264 ;;		_write_cal_data
 21265 ;; This function uses a reentrant model
 21266 ;;
 21267                           
 21268                           	psect	text61
 21269  00263E                     __ptext61:
 21270                           	opt callstack 0
 21271  00263E                     _CRC_IsBusy:
 21272                           	opt callstack 14
 21273                           
 21274                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 21275                           
 21276                           ; BSR set to: 57
 21277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21278                           ;incstack = 0
 21279  00263E  0139               	movlb	57	; () banked
 21280  002640  AB68               	btfss	104,5,b	;volatile
 21281  002642  D003               	goto	u12270
 21282  002644  6A2A               	clrf	btemp^0,c
 21283  002646  2A2A               	incf	btemp^0,f,c
 21284  002648  0012               	return	
 21285  00264A                     u12270:
 21286  00264A  6A2A               	clrf	btemp^0,c
 21287                           
 21288                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21289  00264C  0012               	return		;funcret
 21290  00264E                     __end_of_CRC_IsBusy:
 21291                           	opt callstack 0
 21292                           
 21293 ;; *************** function _CRC_CalculatedResultGet *****************
 21294 ;; Defined at:
 21295 ;;		line 159 in file "mcc_generated_files/crc.c"
 21296 ;; Parameters:    Size  Location     Type
 21297 ;;  reverse         1  [STACK] _Bool 
 21298 ;;  xorValue        2  [STACK] unsigned short 
 21299 ;; Auto vars:     Size  Location     Type
 21300 ;;  result          2  [STACK] unsigned short 
 21301 ;;  mask            2  [STACK] unsigned short 
 21302 ;; Return value:  Size  Location     Type
 21303 ;;                  2  [STACK] unsigned short 
 21304 ;; Registers used:
 21305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 21306 ;; Tracked objects:
 21307 ;;		On entry : 0/39
 21308 ;;		On exit  : 0/0
 21309 ;;		Unchanged: 0/0
 21310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21315 ;;Total ram usage:        0 bytes
 21316 ;; Hardware stack levels used:    1
 21317 ;; Hardware stack levels required when called:   16
 21318 ;; This function calls:
 21319 ;;		_CRC_ReverseValue
 21320 ;; This function is called by:
 21321 ;;		_read_cal_data
 21322 ;;		_write_cal_data
 21323 ;; This function uses a reentrant model
 21324 ;;
 21325                           
 21326                           	psect	text62
 21327  01E1C8                     __ptext62:
 21328                           	opt callstack 0
 21329  01E1C8                     _CRC_CalculatedResultGet:
 21330                           	opt callstack 0
 21331                           
 21332                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21333  01E1C8  52E6               	movf	postinc1,f,c
 21334  01E1CA  52E6               	movf	postinc1,f,c
 21335  01E1CC  52E6               	movf	postinc1,f,c
 21336  01E1CE  52E6               	movf	postinc1,f,c
 21337                           
 21338                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 21339                           
 21340                           ;incstack = 0
 21341  01E1D0  0139               	movlb	57	; () banked
 21342  01E1D2  9D68               	bcf	104,6,b	;volatile
 21343                           
 21344                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 21345  01E1D4  9DA0               	bcf	160,6,b	;volatile
 21346                           
 21347                           ; BSR set to: 57
 21348                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 21349  01E1D6  5169               	movf	105,w,b	;volatile
 21350  01E1D8  0B0F               	andlw	15
 21351  01E1DA  6E35               	movwf	(btemp+11)^0,c
 21352  01E1DC  3A35               	swapf	(btemp+11)^0,f,c
 21353  01E1DE  5169               	movf	105,w,b	;volatile
 21354  01E1E0  1835               	xorwf	(btemp+11)^0,w,c
 21355  01E1E2  0B0F               	andlw	-241
 21356  01E1E4  1835               	xorwf	(btemp+11)^0,w,c
 21357  01E1E6  6F69               	movwf	105,b	;volatile
 21358                           
 21359                           ; BSR set to: 57
 21360                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 21361  01E1E8  0E08               	movlw	8
 21362  01E1EA  0100               	movlb	0	; () banked
 21363  01E1EC  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 21364  01E1EE  D003               	goto	l1282
 21365                           
 21366                           ; BSR set to: 0
 21367                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 21368  01E1F0  0139               	movlb	57	; () banked
 21369  01E1F2  6B61               	clrf	97,b	;volatile
 21370  01E1F4  D001               	goto	L19
 21371  01E1F6                     l1282:
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 21375  01E1F6  0139               	movlb	57	; () banked
 21376  01E1F8                     L19:
 21377  01E1F8  6B60               	clrf	96,b	;volatile
 21378                           
 21379                           ; BSR set to: 57
 21380                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 21381                           
 21382                           ;mcc_generated_files/crc.c: 176:      }
 21383  01E1FA  8D68               	bsf	104,6,b	;volatile
 21384  01E1FC                     l1284:
 21385                           
 21386                           ; BSR set to: 57
 21387  01E1FC  ADA0               	btfss	160,6,b	;volatile
 21388  01E1FE  D7FE               	goto	l1284
 21389                           
 21390                           ; BSR set to: 57
 21391                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 21392  01E200  9DA0               	bcf	160,6,b	;volatile
 21393                           
 21394                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 21395  01E202  9D68               	bcf	104,6,b	;volatile
 21396                           
 21397                           ; BSR set to: 57
 21398                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 21399  01E204  0060  F388  F035   	movff	_crcObj,btemp+11
 21400  01E20A  0EFF               	movlw	255
 21401  01E20C  2635               	addwf	(btemp+11)^0,f,c
 21402  01E20E  3A35               	swapf	(btemp+11)^0,f,c
 21403  01E210  5169               	movf	105,w,b	;volatile
 21404  01E212  1835               	xorwf	(btemp+11)^0,w,c
 21405  01E214  0B0F               	andlw	-241
 21406  01E216  1835               	xorwf	(btemp+11)^0,w,c
 21407  01E218  6F69               	movwf	105,b	;volatile
 21408                           
 21409                           ; BSR set to: 57
 21410                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 21411  01E21A  5162               	movf	98,w,b	;volatile
 21412  01E21C  006E F58C  F02A    	movff	14691,btemp	;volatile
 21413  01E222  6A2B               	clrf	(btemp+1)^0,c
 21414  01E224  0060  F0A8  F02B   	movff	btemp,btemp+1
 21415  01E22A  6A2A               	clrf	btemp^0,c
 21416  01E22C  122A               	iorwf	btemp^0,f,c
 21417  01E22E  0E00               	movlw	0
 21418  01E230  122B               	iorwf	(btemp+1)^0,f,c
 21419                           
 21420                           ;stkvar	_result @ sp[(-4)+0]
 21421  01E232  0EFC               	movlw	-4
 21422  01E234  0060  F0AB  FFE3   	movff	btemp,plusw1
 21423  01E23A  0EFD               	movlw	-3
 21424  01E23C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21425                           
 21426                           ; BSR set to: 57
 21427                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 21428  01E242  0E10               	movlw	16
 21429  01E244  0100               	movlb	0	; () banked
 21430  01E246  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 21431  01E248  D03A               	goto	l12750
 21432                           
 21433                           ; BSR set to: 0
 21434                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 21435  01E24A  0EFF               	movlw	255
 21436  01E24C  6E34               	movwf	(btemp+10)^0,c
 21437  01E24E  0EFF               	movlw	255
 21438  01E250  6E35               	movwf	(btemp+11)^0,c
 21439  01E252  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 21440  01E258  0E01               	movlw	1
 21441  01E25A  6E30               	movwf	(btemp+6)^0,c
 21442  01E25C  0E00               	movlw	0
 21443  01E25E  6E31               	movwf	(btemp+7)^0,c
 21444  01E260  2A33               	incf	(btemp+9)^0,f,c
 21445  01E262  D003               	goto	u12254
 21446  01E264                     u12255:
 21447  01E264  90D8               	bcf	status,0,c
 21448  01E266  3630               	rlcf	(btemp+6)^0,f,c
 21449  01E268  3631               	rlcf	(btemp+7)^0,f,c
 21450  01E26A                     u12254:
 21451  01E26A  2E33               	decfsz	(btemp+9)^0,f,c
 21452  01E26C  D7FB               	goto	u12255
 21453  01E26E  5034               	movf	(btemp+10)^0,w,c
 21454  01E270  2630               	addwf	(btemp+6)^0,f,c
 21455  01E272  5035               	movf	(btemp+11)^0,w,c
 21456  01E274  2231               	addwfc	(btemp+7)^0,f,c
 21457                           
 21458                           ;stkvar	_mask @ sp[(-4)+2]
 21459  01E276  0EFE               	movlw	-2
 21460  01E278  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 21461  01E27E  0EFF               	movlw	-1
 21462  01E280  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 21463                           
 21464                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 21465                           ;stkvar	_mask @ sp[(-4)+2]
 21466  01E286  0EFE               	movlw	-2
 21467  01E288  006F FF8C  F034    	movff	plusw1,btemp+10
 21468  01E28E  0EFF               	movlw	-1
 21469  01E290  006F FF8C  F035    	movff	plusw1,btemp+11
 21470                           
 21471                           ;stkvar	_result @ sp[(-4)+0]
 21472  01E296  0EFC               	movlw	-4
 21473  01E298  006F FF8C  F02A    	movff	plusw1,btemp
 21474  01E29E  5034               	movf	(btemp+10)^0,w,c
 21475  01E2A0  162A               	andwf	btemp^0,f,c
 21476  01E2A2  0EFC               	movlw	-4
 21477  01E2A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 21478  01E2AA  0EFD               	movlw	-3
 21479  01E2AC  006F FF8C  F02A    	movff	plusw1,btemp
 21480  01E2B2  5035               	movf	(btemp+11)^0,w,c
 21481  01E2B4  162A               	andwf	btemp^0,f,c
 21482  01E2B6  0EFD               	movlw	-3
 21483  01E2B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 21484  01E2BE                     l12750:
 21485                           
 21486                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 21487                           ;stkvar	_reverse @ sp[(-4)+-1]
 21488  01E2BE  0EFB               	movlw	-5
 21489  01E2C0  50E3               	movf	plusw1,w,c
 21490  01E2C2  B4D8               	btfsc	status,2,c
 21491  01E2C4  D011               	goto	l12754
 21492                           
 21493                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 21494                           ;stkvar	_result @ sp[(-4)+0]
 21495  01E2C6  0EFC               	movlw	-4
 21496  01E2C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21497  01E2CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21498  01E2D4  EC5B  F000         	call	_CRC_ReverseValue	;wreg free
 21499                           
 21500                           ;stkvar	_result @ sp[(-4)+0]
 21501  01E2D8  0EFC               	movlw	-4
 21502  01E2DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 21503  01E2E0  0EFD               	movlw	-3
 21504  01E2E2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21505  01E2E8                     l12754:
 21506                           
 21507                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 21508                           ;stkvar	_xorValue @ sp[(-4)+-3]
 21509  01E2E8  0EF9               	movlw	-7
 21510  01E2EA  006F FF8C  F034    	movff	plusw1,btemp+10
 21511  01E2F0  0EFA               	movlw	-6
 21512  01E2F2  006F FF8C  F035    	movff	plusw1,btemp+11
 21513                           
 21514                           ;stkvar	_result @ sp[(-4)+0]
 21515  01E2F8  0EFC               	movlw	-4
 21516  01E2FA  006F FF8C  F02A    	movff	plusw1,btemp
 21517  01E300  5034               	movf	(btemp+10)^0,w,c
 21518  01E302  1A2A               	xorwf	btemp^0,f,c
 21519  01E304  0EFC               	movlw	-4
 21520  01E306  0060  F0AB  FFE3   	movff	btemp,plusw1
 21521  01E30C  0EFD               	movlw	-3
 21522  01E30E  006F FF8C  F02A    	movff	plusw1,btemp
 21523  01E314  5035               	movf	(btemp+11)^0,w,c
 21524  01E316  1A2A               	xorwf	btemp^0,f,c
 21525  01E318  0EFD               	movlw	-3
 21526  01E31A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21527                           
 21528                           ;mcc_generated_files/crc.c: 198:     return result;
 21529                           ;stkvar	_result @ sp[(-4)+0]
 21530  01E320  0EFC               	movlw	-4
 21531  01E322  006F FF8C  F02A    	movff	plusw1,btemp
 21532  01E328  0EFD               	movlw	-3
 21533  01E32A  006F FF8C  F02B    	movff	plusw1,btemp+1
 21534                           
 21535                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 21536  01E330  0EF9               	movlw	249
 21537  01E332  26E1               	addwf	fsr1l,f,c
 21538  01E334  0EFF               	movlw	255
 21539  01E336  22E2               	addwfc	fsr1h,f,c
 21540  01E338  0012               	return		;funcret
 21541  01E33A                     __end_of_CRC_CalculatedResultGet:
 21542                           	opt callstack 0
 21543                           
 21544 ;; *************** function _CRC_ReverseValue *****************
 21545 ;; Defined at:
 21546 ;;		line 138 in file "mcc_generated_files/crc.c"
 21547 ;; Parameters:    Size  Location     Type
 21548 ;;  crc             2  [STACK] unsigned short 
 21549 ;; Auto vars:     Size  Location     Type
 21550 ;;  mask            2  [STACK] unsigned short 
 21551 ;;  reverse         2  [STACK] unsigned short 
 21552 ;; Return value:  Size  Location     Type
 21553 ;;                  2  [STACK] unsigned short 
 21554 ;; Registers used:
 21555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21556 ;; Tracked objects:
 21557 ;;		On entry : 0/0
 21558 ;;		On exit  : 0/0
 21559 ;;		Unchanged: 0/0
 21560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21565 ;;Total ram usage:        0 bytes
 21566 ;; Hardware stack levels used:    1
 21567 ;; Hardware stack levels required when called:   15
 21568 ;; This function calls:
 21569 ;;		Nothing
 21570 ;; This function is called by:
 21571 ;;		_CRC_CalculatedResultGet
 21572 ;; This function uses a reentrant model
 21573 ;;
 21574                           
 21575                           	psect	text63
 21576  0000B6                     __ptext63:
 21577                           	opt callstack 0
 21578  0000B6                     _CRC_ReverseValue:
 21579                           	opt callstack 0
 21580                           
 21581                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21582  0000B6  52E6               	movf	postinc1,f,c
 21583  0000B8  52E6               	movf	postinc1,f,c
 21584  0000BA  52E6               	movf	postinc1,f,c
 21585  0000BC  52E6               	movf	postinc1,f,c
 21586                           
 21587                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 21588                           
 21589                           ;incstack = 0
 21590  0000BE  0E01               	movlw	1
 21591  0000C0  6E34               	movwf	(btemp+10)^0,c
 21592  0000C2  0E00               	movlw	0
 21593  0000C4  6E35               	movwf	(btemp+11)^0,c
 21594                           
 21595                           ;stkvar	_mask @ sp[(-4)+0]
 21596  0000C6  0EFC               	movlw	-4
 21597  0000C8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21598  0000CE  0EFD               	movlw	-3
 21599  0000D0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21600                           
 21601                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 21602  0000D6  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 21603  0000DC  0EFF               	movlw	255
 21604  0000DE  2635               	addwf	(btemp+11)^0,f,c
 21605                           
 21606                           ;stkvar	_mask @ sp[(-4)+0]
 21607  0000E0  50E1               	movf	fsr1l,w,c
 21608  0000E2  0FFC               	addlw	-4
 21609  0000E4  6ED9               	movwf	fsr2l,c
 21610  0000E6  50E2               	movf	fsr1h,w,c
 21611  0000E8  6EDA               	movwf	fsr2h,c
 21612  0000EA  0EFF               	movlw	255
 21613  0000EC  22DA               	addwfc	fsr2h,f,c
 21614  0000EE  2835               	incf	(btemp+11)^0,w,c
 21615  0000F0  D003               	goto	u11520
 21616  0000F2                     u11525:
 21617  0000F2  90D8               	bcf	status,0,c
 21618  0000F4  36DE               	rlcf	postinc2,f,c
 21619  0000F6  36DD               	rlcf	postdec2,f,c
 21620  0000F8                     u11520:
 21621  0000F8  2EE8               	decfsz	wreg,f,c
 21622  0000FA  D7FB               	goto	u11525
 21623                           
 21624                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 21625                           ;stkvar	_reverse @ sp[(-4)+2]
 21626  0000FC  0EFE               	movlw	-2
 21627  0000FE  6AE3               	clrf	plusw1,c
 21628  000100  0EFF               	movlw	-1
 21629  000102  6AE3               	clrf	plusw1,c
 21630                           
 21631                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21632  000104  D029               	goto	l12234
 21633  000106                     l12226:
 21634                           
 21635                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 21636                           ;stkvar	_crc @ sp[(-4)+-2]
 21637  000106  0EFA               	movlw	-6
 21638  000108  A0E3               	btfss	plusw1,0,c
 21639  00010A  D01C               	goto	l12230
 21640                           
 21641                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 21642                           ;stkvar	_mask @ sp[(-4)+0]
 21643  00010C  0EFC               	movlw	-4
 21644  00010E  006F FF8C  F034    	movff	plusw1,btemp+10
 21645  000114  0EFD               	movlw	-3
 21646  000116  006F FF8C  F035    	movff	plusw1,btemp+11
 21647                           
 21648                           ;stkvar	_reverse @ sp[(-4)+2]
 21649  00011C  0EFE               	movlw	-2
 21650  00011E  006F FF8C  F02A    	movff	plusw1,btemp
 21651  000124  5034               	movf	(btemp+10)^0,w,c
 21652  000126  122A               	iorwf	btemp^0,f,c
 21653  000128  0EFE               	movlw	-2
 21654  00012A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21655  000130  0EFF               	movlw	-1
 21656  000132  006F FF8C  F02A    	movff	plusw1,btemp
 21657  000138  5035               	movf	(btemp+11)^0,w,c
 21658  00013A  122A               	iorwf	btemp^0,f,c
 21659  00013C  0EFF               	movlw	-1
 21660  00013E  0060  F0AB  FFE3   	movff	btemp,plusw1
 21661  000144                     l12230:
 21662                           
 21663                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 21664                           ;stkvar	_mask @ sp[(-4)+0]
 21665  000144  90D8               	bcf	status,0,c
 21666  000146  0EFD               	movlw	-3
 21667  000148  32E3               	rrcf	plusw1,f,c
 21668  00014A  0EFC               	movlw	-4
 21669  00014C  32E3               	rrcf	plusw1,f,c
 21670                           
 21671                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 21672                           ;stkvar	_crc @ sp[(-4)+-2]
 21673  00014E  90D8               	bcf	status,0,c
 21674  000150  0EFB               	movlw	-5
 21675  000152  32E3               	rrcf	plusw1,f,c
 21676  000154  0EFA               	movlw	-6
 21677  000156  32E3               	rrcf	plusw1,f,c
 21678  000158                     l12234:
 21679                           
 21680                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21681                           ;stkvar	_crc @ sp[(-4)+-2]
 21682  000158  0EFA               	movlw	-6
 21683  00015A  006F FF8C  F02A    	movff	plusw1,btemp
 21684  000160  0EFB               	movlw	-5
 21685  000162  50E3               	movf	plusw1,w,c
 21686  000164  102A               	iorwf	btemp^0,w,c
 21687  000166  A4D8               	btfss	status,2,c
 21688  000168  D7CE               	goto	l12226
 21689                           
 21690                           ;mcc_generated_files/crc.c: 156:     return reverse;
 21691                           ;stkvar	_reverse @ sp[(-4)+2]
 21692  00016A  0EFE               	movlw	-2
 21693  00016C  006F FF8C  F02A    	movff	plusw1,btemp
 21694  000172  0EFF               	movlw	-1
 21695  000174  006F FF8C  F02B    	movff	plusw1,btemp+1
 21696                           
 21697                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 21698  00017A  0EFA               	movlw	250
 21699  00017C  26E1               	addwf	fsr1l,f,c
 21700  00017E  0EFF               	movlw	255
 21701  000180  22E2               	addwfc	fsr1h,f,c
 21702  000182  0012               	return		;funcret
 21703  000184                     __end_of_CRC_ReverseValue:
 21704                           	opt callstack 0
 21705                           
 21706 ;; *************** function _CRC_8BitDataWrite *****************
 21707 ;; Defined at:
 21708 ;;		line 125 in file "mcc_generated_files/crc.c"
 21709 ;; Parameters:    Size  Location     Type
 21710 ;;  data            1  [STACK] unsigned char 
 21711 ;; Auto vars:     Size  Location     Type
 21712 ;;		None
 21713 ;; Return value:  Size  Location     Type
 21714 ;;                  1  [STACK] _Bool 
 21715 ;; Registers used:
 21716 ;;		fsr1l, fsr1h
 21717 ;; Tracked objects:
 21718 ;;		On entry : 0/4
 21719 ;;		On exit  : 3F/39
 21720 ;;		Unchanged: 0/0
 21721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21726 ;;Total ram usage:        0 bytes
 21727 ;; Hardware stack levels used:    1
 21728 ;; Hardware stack levels required when called:   15
 21729 ;; This function calls:
 21730 ;;		Nothing
 21731 ;; This function is called by:
 21732 ;;		_read_cal_data
 21733 ;;		_write_cal_data
 21734 ;; This function uses a reentrant model
 21735 ;;
 21736                           
 21737                           	psect	text64
 21738  0025FA                     __ptext64:
 21739                           	opt callstack 0
 21740  0025FA                     _CRC_8BitDataWrite:
 21741                           	opt callstack 14
 21742                           
 21743                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 21744                           
 21745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21746                           ;incstack = 0
 21747  0025FA  0139               	movlb	57	; () banked
 21748  0025FC  B168               	btfsc	104,0,b	;volatile
 21749  0025FE  D004               	goto	l1271
 21750                           
 21751                           ; BSR set to: 57
 21752                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 21753                           ;stkvar	_data @ sp[(0)+-1]
 21754  002600  0EFF               	movlw	-1
 21755  002602  006F FF8F F960     	movff	plusw1,14688	;volatile
 21756  002608                     l1271:
 21757                           
 21758                           ; BSR set to: 57
 21759                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 21760  002608  52E5               	movf	postdec1,f,c
 21761  00260A  0012               	return		;funcret
 21762  00260C                     __end_of_CRC_8BitDataWrite:
 21763                           	opt callstack 0
 21764                           
 21765 ;; *************** function _start_adc_scan *****************
 21766 ;; Defined at:
 21767 ;;		line 72 in file "daq.c"
 21768 ;; Parameters:    Size  Location     Type
 21769 ;;		None
 21770 ;; Auto vars:     Size  Location     Type
 21771 ;;		None
 21772 ;; Return value:  Size  Location     Type
 21773 ;;                  1  [STACK] _Bool 
 21774 ;; Registers used:
 21775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21776 ;; Tracked objects:
 21777 ;;		On entry : 0/0
 21778 ;;		On exit  : 0/0
 21779 ;;		Unchanged: 0/0
 21780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21785 ;;Total ram usage:        0 bytes
 21786 ;; Hardware stack levels used:    1
 21787 ;; Hardware stack levels required when called:   16
 21788 ;; This function calls:
 21789 ;;		_ADCC_DischargeSampleCapacitor
 21790 ;;		_ADCC_SetADIInterruptHandler
 21791 ;;		_ADCC_SetADTIInterruptHandler
 21792 ;;		_ADCC_StartConversion
 21793 ;; This function is called by:
 21794 ;;		_main
 21795 ;;		_current_sensor_cal
 21796 ;;		_update_adc_result
 21797 ;; This function uses a reentrant model
 21798 ;;
 21799                           
 21800                           	psect	text65
 21801  001472                     __ptext65:
 21802                           	opt callstack 0
 21803  001472                     _start_adc_scan:
 21804                           	opt callstack 14
 21805                           
 21806                           ;daq.c: 74:  if (R.done)
 21807                           
 21808                           ; BSR set to: 57
 21809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21810                           ;incstack = 0
 21811  001472  0101               	movlb	1	; () banked
 21812  001474  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 21813  001476  A4D8               	btfss	status,2,c
 21814  001478  0012               	return	
 21815                           
 21816                           ; BSR set to: 1
 21817                           ;daq.c: 77:  R.scan_index = 0;
 21818  00147A  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 21819                           
 21820                           ; BSR set to: 1
 21821                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 21822  00147C  013A               	movlb	58	; () banked
 21823  00147E  5140               	movf	64,w,b	;volatile
 21824  001480  006E F940  F02A    	movff	14928,btemp	;volatile
 21825  001486  6A2B               	clrf	(btemp+1)^0,c
 21826  001488  0060  F0A8  F02B   	movff	btemp,btemp+1
 21827  00148E  6A2A               	clrf	btemp^0,c
 21828  001490  262A               	addwf	btemp^0,f,c
 21829  001492  0E00               	movlw	0
 21830  001494  222B               	addwfc	(btemp+1)^0,f,c
 21831  001496  0E77               	movlw	119
 21832  001498  142A               	andwf	btemp^0,w,c
 21833  00149A  0101               	movlb	1	; () banked
 21834  00149C  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 21835  00149E  0E3C               	movlw	60
 21836  0014A0  142B               	andwf	(btemp+1)^0,w,c
 21837  0014A2  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 21838                           
 21839                           ; BSR set to: 1
 21840                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 21841  0014A4  0E4A               	movlw	low _adc_int_handler
 21842  0014A6  6EE6               	movwf	postinc1,c
 21843  0014A8  0E27               	movlw	high _adc_int_handler
 21844  0014AA  6EE6               	movwf	postinc1,c
 21845  0014AC  0E00               	movlw	low (_adc_int_handler shr (0+16))
 21846  0014AE  6EE6               	movwf	postinc1,c
 21847  0014B0  EC37  F011         	call	_ADCC_SetADIInterruptHandler	;wreg free
 21848                           
 21849                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 21850  0014B4  0EB8               	movlw	low _adc_int_t_handler
 21851  0014B6  6EE6               	movwf	postinc1,c
 21852  0014B8  0E0E               	movlw	high _adc_int_t_handler
 21853  0014BA  6EE6               	movwf	postinc1,c
 21854  0014BC  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 21855  0014BE  6EE6               	movwf	postinc1,c
 21856  0014C0  EC23  F011         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 21857                           
 21858                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 21859  0014C4  EC7B  F013         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 21860                           
 21861                           ; BSR set to: 62
 21862                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 21863  0014C8  0101               	movlb	1	; () banked
 21864  0014CA  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 21865  0014CC  0B0F               	andlw	15
 21866  0014CE  6EE6               	movwf	postinc1,c
 21867  0014D0  EC06  F013         	call	_ADCC_StartConversion	;wreg free
 21868                           
 21869                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21870  0014D4  0012               	return		;funcret
 21871  0014D6                     __end_of_start_adc_scan:
 21872                           	opt callstack 0
 21873                           
 21874 ;; *************** function _ADCC_StartConversion *****************
 21875 ;; Defined at:
 21876 ;;		line 128 in file "mcc_generated_files/adcc.c"
 21877 ;; Parameters:    Size  Location     Type
 21878 ;;  channel         1  [STACK] enum E16136
 21879 ;; Auto vars:     Size  Location     Type
 21880 ;;		None
 21881 ;; Return value:  Size  Location     Type
 21882 ;;                  1  [STACK] void 
 21883 ;; Registers used:
 21884 ;;		fsr1l, fsr1h
 21885 ;; Tracked objects:
 21886 ;;		On entry : 3F/1
 21887 ;;		On exit  : 3F/3E
 21888 ;;		Unchanged: 0/0
 21889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21894 ;;Total ram usage:        0 bytes
 21895 ;; Hardware stack levels used:    1
 21896 ;; Hardware stack levels required when called:   15
 21897 ;; This function calls:
 21898 ;;		Nothing
 21899 ;; This function is called by:
 21900 ;;		_start_adc_scan
 21901 ;;		_adc_int_t_handler
 21902 ;; This function uses a reentrant model
 21903 ;;
 21904                           
 21905                           	psect	text66
 21906  00260C                     __ptext66:
 21907                           	opt callstack 0
 21908  00260C                     _ADCC_StartConversion:
 21909                           	opt callstack 0
 21910                           
 21911                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 21912                           ;stkvar	_channel @ sp[(0)+-1]
 21913                           
 21914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21915                           ;incstack = 0
 21916 ;; hardware stack exceeded
 21917  00260C  0EFF               	movlw	-1
 21918  00260E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 21919                           
 21920                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 21921  002614  013E               	movlb	62	; () banked
 21922  002616  8FF8               	bsf	248,7,b	;volatile
 21923                           
 21924                           ; BSR set to: 62
 21925                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 21926  002618  81F8               	bsf	248,0,b	;volatile
 21927                           
 21928                           ; BSR set to: 62
 21929                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 21930  00261A  52E5               	movf	postdec1,f,c
 21931  00261C  0012               	return		;funcret
 21932  00261E                     __end_of_ADCC_StartConversion:
 21933                           	opt callstack 0
 21934                           
 21935 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 21936 ;; Defined at:
 21937 ;;		line 189 in file "mcc_generated_files/adcc.c"
 21938 ;; Parameters:    Size  Location     Type
 21939 ;;		None
 21940 ;; Auto vars:     Size  Location     Type
 21941 ;;		None
 21942 ;; Return value:  Size  Location     Type
 21943 ;;                  1  [STACK] void 
 21944 ;; Registers used:
 21945 ;;		wreg, status,2
 21946 ;; Tracked objects:
 21947 ;;		On entry : 0/1
 21948 ;;		On exit  : 3F/3E
 21949 ;;		Unchanged: 0/0
 21950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21955 ;;Total ram usage:        0 bytes
 21956 ;; Hardware stack levels used:    1
 21957 ;; Hardware stack levels required when called:   15
 21958 ;; This function calls:
 21959 ;;		Nothing
 21960 ;; This function is called by:
 21961 ;;		_start_adc_scan
 21962 ;;		_adc_int_t_handler
 21963 ;; This function uses a reentrant model
 21964 ;;
 21965                           
 21966                           	psect	text67
 21967  0026F6                     __ptext67:
 21968                           	opt callstack 0
 21969  0026F6                     _ADCC_DischargeSampleCapacitor:
 21970                           	opt callstack 0
 21971                           
 21972                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 21973                           
 21974                           ; BSR set to: 62
 21975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21976                           ;incstack = 0
 21977 ;; hardware stack exceeded
 21978  0026F6  0E3B               	movlw	59
 21979  0026F8  013E               	movlb	62	; () banked
 21980  0026FA  6FF1               	movwf	241,b	;volatile
 21981                           
 21982                           ; BSR set to: 62
 21983                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 21984  0026FC  0012               	return		;funcret
 21985  0026FE                     __end_of_ADCC_DischargeSampleCapacitor:
 21986                           	opt callstack 0
 21987                           
 21988 ;; *************** function _spinners *****************
 21989 ;; Defined at:
 21990 ;;		line 147 in file "mbmc.c"
 21991 ;; Parameters:    Size  Location     Type
 21992 ;;  shape           1  [STACK] unsigned char 
 21993 ;;  reset           1  [STACK] const unsigned char 
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;  c               1  [STACK] unsigned char 
 21996 ;; Return value:  Size  Location     Type
 21997 ;;                  1  [STACK] unsigned char 
 21998 ;; Registers used:
 21999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 22000 ;; Tracked objects:
 22001 ;;		On entry : 0/0
 22002 ;;		On exit  : 0/0
 22003 ;;		Unchanged: 0/0
 22004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22009 ;;Total ram usage:        0 bytes
 22010 ;; Hardware stack levels used:    1
 22011 ;; Hardware stack levels required when called:   16
 22012 ;; This function calls:
 22013 ;;		_strlen
 22014 ;; This function is called by:
 22015 ;;		_main
 22016 ;;		_current_sensor_cal
 22017 ;; This function uses a reentrant model
 22018 ;;
 22019                           
 22020                           	psect	text68
 22021  01FA6A                     __ptext68:
 22022                           	opt callstack 0
 22023  01FA6A                     _spinners:
 22024                           	opt callstack 0
 22025                           
 22026                           ; BSR set to: 62
 22027                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22028  01FA6A  52E6               	movf	postinc1,f,c
 22029                           
 22030                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 22031                           ;stkvar	_shape @ sp[(-1)+-1]
 22032                           
 22033                           ;incstack = 0
 22034  01FA6C  0EFE               	movlw	-2
 22035  01FA6E  006F FF8C  F02A    	movff	plusw1,btemp
 22036  01FA74  0E05               	movlw	5
 22037  01FA76  642A               	cpfsgt	btemp^0,c
 22038  01FA78  D002               	goto	l2184
 22039                           
 22040                           ;mbmc.c: 153:   shape = 0;
 22041                           ;stkvar	_shape @ sp[(-1)+-1]
 22042  01FA7A  0EFE               	movlw	-2
 22043  01FA7C  6AE3               	clrf	plusw1,c
 22044  01FA7E                     l2184:
 22045                           
 22046                           ;mbmc.c: 154:  if (reset)
 22047                           ;stkvar	_reset @ sp[(-1)+-2]
 22048  01FA7E  0EFD               	movlw	-3
 22049  01FA80  50E3               	movf	plusw1,w,c
 22050  01FA82  B4D8               	btfsc	status,2,c
 22051  01FA84  D00C               	goto	l16866
 22052                           
 22053                           ;mbmc.c: 155:   s[shape] = 0;
 22054                           ;stkvar	_shape @ sp[(-1)+-1]
 22055  01FA86  0EFE               	movlw	-2
 22056  01FA88  50E3               	movf	plusw1,w,c
 22057  01FA8A  6E34               	movwf	(btemp+10)^0,c
 22058  01FA8C  6A35               	clrf	(btemp+11)^0,c
 22059  01FA8E  0ECD               	movlw	low spinners@s
 22060  01FA90  2434               	addwf	(btemp+10)^0,w,c
 22061  01FA92  6ED9               	movwf	fsr2l,c
 22062  01FA94  0E01               	movlw	high spinners@s
 22063  01FA96  2035               	addwfc	(btemp+11)^0,w,c
 22064  01FA98  6EDA               	movwf	fsr2h,c
 22065  01FA9A  0E00               	movlw	0
 22066  01FA9C  6EDF               	movwf	indf2,c
 22067  01FA9E                     l16866:
 22068                           
 22069                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 22070                           ;stkvar	_shape @ sp[(-1)+-1]
 22071  01FA9E  0EFE               	movlw	-2
 22072  01FAA0  50E3               	movf	plusw1,w,c
 22073  01FAA2  0D14               	mullw	20
 22074  01FAA4  0E93               	movlw	low _spin
 22075  01FAA6  6E34               	movwf	(btemp+10)^0,c
 22076  01FAA8  0EF9               	movlw	high _spin
 22077  01FAAA  6E35               	movwf	(btemp+11)^0,c
 22078  01FAAC  50F3               	movf	243,w,c
 22079  01FAAE  2634               	addwf	(btemp+10)^0,f,c
 22080  01FAB0  50F4               	movf	244,w,c
 22081  01FAB2  2235               	addwfc	(btemp+11)^0,f,c
 22082                           
 22083                           ;stkvar	_shape @ sp[(-1)+-1]
 22084  01FAB4  0EFE               	movlw	-2
 22085  01FAB6  50E3               	movf	plusw1,w,c
 22086  01FAB8  6E32               	movwf	(btemp+8)^0,c
 22087  01FABA  6A33               	clrf	(btemp+9)^0,c
 22088  01FABC  0ECD               	movlw	low spinners@s
 22089  01FABE  2432               	addwf	(btemp+8)^0,w,c
 22090  01FAC0  6ED9               	movwf	fsr2l,c
 22091  01FAC2  0E01               	movlw	high spinners@s
 22092  01FAC4  2033               	addwfc	(btemp+9)^0,w,c
 22093  01FAC6  6EDA               	movwf	fsr2h,c
 22094  01FAC8  50DF               	movf	indf2,w,c
 22095  01FACA  2634               	addwf	(btemp+10)^0,f,c
 22096  01FACC  0E00               	movlw	0
 22097  01FACE  2235               	addwfc	(btemp+11)^0,f,c
 22098  01FAD0  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 22099  01FAD6  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 22100  01FADC                     	if	0	;tblptru may be non-zero
 22101  01FADC                     	endif
 22102  01FADC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22103  01FADC  0E00               	movlw	low (__mediumconst shr (0+16))
 22104  01FADE  6EF8               	movwf	tblptru,c
 22105  01FAE0                     	endif
 22106                           
 22107                           ;stkvar	_c @ sp[(-1)+0]
 22108  01FAE0  0008               	tblrd		*
 22109  01FAE2  0EFF               	movlw	-1
 22110  01FAE4  006F FFD7 FFE3     	movff	tablat,plusw1
 22111                           
 22112                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 22113                           ;stkvar	_shape @ sp[(-1)+-1]
 22114  01FAEA  0EFE               	movlw	-2
 22115  01FAEC  50E3               	movf	plusw1,w,c
 22116  01FAEE  0D14               	mullw	20
 22117  01FAF0  0E93               	movlw	low _spin
 22118  01FAF2  6E34               	movwf	(btemp+10)^0,c
 22119  01FAF4  0EF9               	movlw	high _spin
 22120  01FAF6  6E35               	movwf	(btemp+11)^0,c
 22121  01FAF8  50F3               	movf	243,w,c
 22122  01FAFA  2634               	addwf	(btemp+10)^0,f,c
 22123  01FAFC  50F4               	movf	244,w,c
 22124  01FAFE  2235               	addwfc	(btemp+11)^0,f,c
 22125  01FB00  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22126  01FB06  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22127  01FB0C  EC3D  F004         	call	_strlen	;wreg free
 22128                           
 22129                           ;stkvar	_shape @ sp[(-1)+-1]
 22130  01FB10  0EFE               	movlw	-2
 22131  01FB12  50E3               	movf	plusw1,w,c
 22132  01FB14  6E34               	movwf	(btemp+10)^0,c
 22133  01FB16  6A35               	clrf	(btemp+11)^0,c
 22134  01FB18  0ECD               	movlw	low spinners@s
 22135  01FB1A  2434               	addwf	(btemp+10)^0,w,c
 22136  01FB1C  6ED9               	movwf	fsr2l,c
 22137  01FB1E  0E01               	movlw	high spinners@s
 22138  01FB20  2035               	addwfc	(btemp+11)^0,w,c
 22139  01FB22  6EDA               	movwf	fsr2h,c
 22140  01FB24  2ADF               	incf	indf2,f,c
 22141  01FB26  50DF               	movf	indf2,w,c
 22142  01FB28  6E34               	movwf	(btemp+10)^0,c
 22143  01FB2A  6A35               	clrf	(btemp+11)^0,c
 22144  01FB2C  502A               	movf	btemp^0,w,c
 22145  01FB2E  5C34               	subwf	(btemp+10)^0,w,c
 22146  01FB30  502B               	movf	(btemp+1)^0,w,c
 22147  01FB32  5835               	subwfb	(btemp+11)^0,w,c
 22148  01FB34  A0D8               	btfss	status,0,c
 22149  01FB36  D00C               	goto	l16872
 22150                           
 22151                           ;mbmc.c: 158:   s[shape] = 0;
 22152                           ;stkvar	_shape @ sp[(-1)+-1]
 22153  01FB38  0EFE               	movlw	-2
 22154  01FB3A  50E3               	movf	plusw1,w,c
 22155  01FB3C  6E34               	movwf	(btemp+10)^0,c
 22156  01FB3E  6A35               	clrf	(btemp+11)^0,c
 22157  01FB40  0ECD               	movlw	low spinners@s
 22158  01FB42  2434               	addwf	(btemp+10)^0,w,c
 22159  01FB44  6ED9               	movwf	fsr2l,c
 22160  01FB46  0E01               	movlw	high spinners@s
 22161  01FB48  2035               	addwfc	(btemp+11)^0,w,c
 22162  01FB4A  6EDA               	movwf	fsr2h,c
 22163  01FB4C  0E00               	movlw	0
 22164  01FB4E  6EDF               	movwf	indf2,c
 22165  01FB50                     l16872:
 22166                           
 22167                           ;mbmc.c: 159:  return c;
 22168                           ;stkvar	_c @ sp[(-1)+0]
 22169  01FB50  0EFF               	movlw	-1
 22170  01FB52  006F FF8C  F02A    	movff	plusw1,btemp
 22171                           
 22172                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 22173  01FB58  52E5               	movf	postdec1,f,c
 22174  01FB5A  52E5               	movf	postdec1,f,c
 22175  01FB5C  52E5               	movf	postdec1,f,c
 22176  01FB5E  0012               	return		;funcret
 22177  01FB60                     __end_of_spinners:
 22178                           	opt callstack 0
 22179                           
 22180 ;; *************** function _get_switch *****************
 22181 ;; Defined at:
 22182 ;;		line 18 in file "dio.c"
 22183 ;; Parameters:    Size  Location     Type
 22184 ;;  i               1  [STACK] const unsigned char 
 22185 ;; Auto vars:     Size  Location     Type
 22186 ;;		None
 22187 ;; Return value:  Size  Location     Type
 22188 ;;                  1  [STACK] enum E17187
 22189 ;; Registers used:
 22190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22191 ;; Tracked objects:
 22192 ;;		On entry : 0/0
 22193 ;;		On exit  : 0/0
 22194 ;;		Unchanged: 0/0
 22195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22200 ;;Total ram usage:        0 bytes
 22201 ;; Hardware stack levels used:    1
 22202 ;; Hardware stack levels required when called:   15
 22203 ;; This function calls:
 22204 ;;		Nothing
 22205 ;; This function is called by:
 22206 ;;		_main
 22207 ;;		_current_sensor_cal
 22208 ;;		_display_history
 22209 ;;		_hid_input
 22210 ;; This function uses a reentrant model
 22211 ;;
 22212                           
 22213                           	psect	text69
 22214  002006                     __ptext69:
 22215                           	opt callstack 0
 22216  002006                     _get_switch:
 22217                           	opt callstack 13
 22218                           
 22219                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 22220                           ;stkvar	_i @ sp[(0)+-1]
 22221                           
 22222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22223                           ;incstack = 0
 22224  002006  0EFF               	movlw	-1
 22225  002008  006F FF8C  F02A    	movff	plusw1,btemp
 22226  00200E  0E05               	movlw	5
 22227  002010  642A               	cpfsgt	btemp^0,c
 22228  002012  D002               	goto	l12820
 22229                           
 22230                           ;dio.c: 21:   return SW_OFF;
 22231  002014  0E00               	movlw	0
 22232  002016  D00A               	goto	L20
 22233  002018                     l12820:
 22234                           
 22235                           ;dio.c: 23:  return S.button[i].sw;
 22236                           ;stkvar	_i @ sp[(0)+-1]
 22237  002018  0EFF               	movlw	-1
 22238  00201A  50E3               	movf	plusw1,w,c
 22239  00201C  0D05               	mullw	5
 22240  00201E  0EA4               	movlw	low _S
 22241  002020  24F3               	addwf	243,w,c
 22242  002022  6ED9               	movwf	fsr2l,c
 22243  002024  0E01               	movlw	high _S
 22244  002026  20F4               	addwfc	prodh,w,c
 22245  002028  6EDA               	movwf	fsr2h,c
 22246  00202A  50DF               	movf	indf2,w,c
 22247  00202C                     L20:
 22248  00202C  6E2A               	movwf	btemp^0,c
 22249                           
 22250                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22251  00202E  52E5               	movf	postdec1,f,c
 22252  002030  0012               	return		;funcret
 22253  002032                     __end_of_get_switch:
 22254                           	opt callstack 0
 22255                           
 22256 ;; *************** function _clear_adc_scan *****************
 22257 ;; Defined at:
 22258 ;;		line 103 in file "daq.c"
 22259 ;; Parameters:    Size  Location     Type
 22260 ;;		None
 22261 ;; Auto vars:     Size  Location     Type
 22262 ;;		None
 22263 ;; Return value:  Size  Location     Type
 22264 ;;                  1  [STACK] void 
 22265 ;; Registers used:
 22266 ;;		None
 22267 ;; Tracked objects:
 22268 ;;		On entry : 0/0
 22269 ;;		On exit  : 3F/1
 22270 ;;		Unchanged: 0/0
 22271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22276 ;;Total ram usage:        0 bytes
 22277 ;; Hardware stack levels used:    1
 22278 ;; Hardware stack levels required when called:   15
 22279 ;; This function calls:
 22280 ;;		Nothing
 22281 ;; This function is called by:
 22282 ;;		_main
 22283 ;;		_current_sensor_cal
 22284 ;;		_update_adc_result
 22285 ;; This function uses a reentrant model
 22286 ;;
 22287                           
 22288                           	psect	text70
 22289  002722                     __ptext70:
 22290                           	opt callstack 0
 22291  002722                     _clear_adc_scan:
 22292                           	opt callstack 13
 22293                           
 22294                           ;daq.c: 105:  R.done = 0;
 22295                           
 22296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22297                           ;incstack = 0
 22298  002722  0101               	movlb	1	; () banked
 22299  002724  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 22300                           
 22301                           ; BSR set to: 1
 22302                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22303  002726  0012               	return		;funcret
 22304  002728                     __end_of_clear_adc_scan:
 22305                           	opt callstack 0
 22306                           
 22307 ;; *************** function _cal_current_zero *****************
 22308 ;; Defined at:
 22309 ;;		line 329 in file "daq.c"
 22310 ;; Parameters:    Size  Location     Type
 22311 ;;  mode            1  [STACK] const _Bool 
 22312 ;;  cb              2  [STACK] const short 
 22313 ;;  cp              2  [STACK] const short 
 22314 ;; Auto vars:     Size  Location     Type
 22315 ;;		None
 22316 ;; Return value:  Size  Location     Type
 22317 ;;                  1  [STACK] _Bool 
 22318 ;; Registers used:
 22319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22320 ;; Tracked objects:
 22321 ;;		On entry : 0/1
 22322 ;;		On exit  : 0/0
 22323 ;;		Unchanged: 0/0
 22324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;Total ram usage:        0 bytes
 22330 ;; Hardware stack levels used:    1
 22331 ;; Hardware stack levels required when called:   16
 22332 ;; This function calls:
 22333 ;;		_check_range
 22334 ;; This function is called by:
 22335 ;;		_current_sensor_cal
 22336 ;; This function uses a reentrant model
 22337 ;;
 22338                           
 22339                           	psect	text71
 22340  000A4E                     __ptext71:
 22341                           	opt callstack 0
 22342  000A4E                     _cal_current_zero:
 22343                           	opt callstack 13
 22344                           
 22345                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 22346                           
 22347                           ; BSR set to: 1
 22348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22349                           ;incstack = 0
 22350  000A4E  0EA0               	movlw	160
 22351  000A50  6EE6               	movwf	postinc1,c
 22352  000A52  0E0F               	movlw	15
 22353  000A54  6EE6               	movwf	postinc1,c
 22354  000A56  0E64               	movlw	100
 22355  000A58  6EE6               	movwf	postinc1,c
 22356  000A5A  0E00               	movlw	0
 22357  000A5C  6EE6               	movwf	postinc1,c
 22358                           
 22359                           ;stkvar	_cb @ sp[(-4)+-3]
 22360  000A5E  0EF9               	movlw	-7
 22361  000A60  006F FF8F FFE6     	movff	plusw1,postinc1
 22362  000A66  006F FF8F FFE6     	movff	plusw1,postinc1
 22363  000A6C  EC9D  F007         	call	_check_range	;wreg free
 22364  000A70  502A               	movf	btemp^0,w,c
 22365  000A72  A4D8               	btfss	status,2,c
 22366  000A74  D002               	goto	l13506
 22367  000A76                     u12590:
 22368                           
 22369                           ;daq.c: 333:   return 0;
 22370  000A76  0E00               	movlw	0
 22371  000A78  D019               	goto	L21
 22372  000A7A                     l13506:
 22373                           
 22374                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 22375  000A7A  0EA0               	movlw	160
 22376  000A7C  6EE6               	movwf	postinc1,c
 22377  000A7E  0E0F               	movlw	15
 22378  000A80  6EE6               	movwf	postinc1,c
 22379  000A82  0E64               	movlw	100
 22380  000A84  6EE6               	movwf	postinc1,c
 22381  000A86  0E00               	movlw	0
 22382  000A88  6EE6               	movwf	postinc1,c
 22383                           
 22384                           ;stkvar	_cp @ sp[(-4)+-5]
 22385  000A8A  0EF7               	movlw	-9
 22386  000A8C  006F FF8F FFE6     	movff	plusw1,postinc1
 22387  000A92  006F FF8F FFE6     	movff	plusw1,postinc1
 22388  000A98  EC9D  F007         	call	_check_range	;wreg free
 22389  000A9C  502A               	movf	btemp^0,w,c
 22390  000A9E  B4D8               	btfsc	status,2,c
 22391  000AA0  D7EA               	goto	u12590
 22392                           
 22393                           ;daq.c: 338:  if (!mode)
 22394                           ;stkvar	_mode @ sp[(0)+-1]
 22395  000AA2  0EFF               	movlw	-1
 22396  000AA4  50E3               	movf	plusw1,w,c
 22397  000AA6  A4D8               	btfss	status,2,c
 22398  000AA8  D003               	goto	l13518
 22399  000AAA                     u12610:
 22400                           
 22401                           ;daq.c: 339:   return 1;
 22402  000AAA  0E01               	movlw	1
 22403  000AAC                     L21:
 22404  000AAC  6E2A               	movwf	btemp^0,c
 22405  000AAE  D013               	goto	l2058
 22406  000AB0                     l13518:
 22407                           
 22408                           ;daq.c: 341:  R.n_offset[0] = cb;
 22409                           ;stkvar	_cb @ sp[(0)+-3]
 22410  000AB0  0EFD               	movlw	-3
 22411  000AB2  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 22412  000AB8  0EFE               	movlw	-2
 22413  000ABA  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 22414                           
 22415                           ;daq.c: 342:  R.n_offset[1] = cp;
 22416                           ;stkvar	_cp @ sp[(0)+-5]
 22417  000AC0  0EFB               	movlw	-5
 22418  000AC2  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 22419  000AC8  0EFC               	movlw	-4
 22420  000ACA  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 22421                           
 22422                           ;daq.c: 343:  R.c_zero_cal = 1;
 22423  000AD0  0101               	movlb	1	; () banked
 22424  000AD2  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 22425  000AD4  D7EA               	goto	u12610
 22426  000AD6                     l2058:
 22427                           
 22428                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 22429  000AD6  0EFB               	movlw	251
 22430  000AD8  26E1               	addwf	fsr1l,f,c
 22431  000ADA  0EFF               	movlw	255
 22432  000ADC  22E2               	addwfc	fsr1h,f,c
 22433  000ADE  0012               	return		;funcret
 22434  000AE0                     __end_of_cal_current_zero:
 22435                           	opt callstack 0
 22436                           
 22437 ;; *************** function _check_range *****************
 22438 ;; Defined at:
 22439 ;;		line 317 in file "daq.c"
 22440 ;; Parameters:    Size  Location     Type
 22441 ;;  value           2  [STACK] const short 
 22442 ;;  window          2  [STACK] const short 
 22443 ;;  standard        2  [STACK] const short 
 22444 ;; Auto vars:     Size  Location     Type
 22445 ;;		None
 22446 ;; Return value:  Size  Location     Type
 22447 ;;                  1  [STACK] _Bool 
 22448 ;; Registers used:
 22449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22450 ;; Tracked objects:
 22451 ;;		On entry : 0/1
 22452 ;;		On exit  : 0/0
 22453 ;;		Unchanged: 0/0
 22454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22459 ;;Total ram usage:        0 bytes
 22460 ;; Hardware stack levels used:    1
 22461 ;; Hardware stack levels required when called:   15
 22462 ;; This function calls:
 22463 ;;		Nothing
 22464 ;; This function is called by:
 22465 ;;		_cal_current_zero
 22466 ;; This function uses a reentrant model
 22467 ;;
 22468                           
 22469                           	psect	text72
 22470  000F3A                     __ptext72:
 22471                           	opt callstack 0
 22472  000F3A                     _check_range:
 22473                           	opt callstack 13
 22474                           
 22475                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 22476                           ;stkvar	_value @ sp[(0)+-2]
 22477                           ;stkvar	_window @ sp[(0)+-4]
 22478                           ;stkvar	_standard @ sp[(0)+-6]
 22479                           
 22480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22481                           ;incstack = 0
 22482  000F3A  0EFA               	movlw	-6
 22483  000F3C  006F FF8C  F034    	movff	plusw1,btemp+10
 22484  000F42  0EFB               	movlw	-5
 22485  000F44  006F FF8C  F035    	movff	plusw1,btemp+11
 22486  000F4A  0EFC               	movlw	-4
 22487  000F4C  50E3               	movf	plusw1,w,c
 22488  000F4E  2634               	addwf	(btemp+10)^0,f,c
 22489  000F50  0EFD               	movlw	-3
 22490  000F52  50E3               	movf	plusw1,w,c
 22491  000F54  2235               	addwfc	(btemp+11)^0,f,c
 22492  000F56  0EFE               	movlw	-2
 22493  000F58  50E3               	movf	plusw1,w,c
 22494  000F5A  5C34               	subwf	(btemp+10)^0,w,c
 22495  000F5C  5035               	movf	(btemp+11)^0,w,c
 22496  000F5E  0A80               	xorlw	128
 22497  000F60  6E2A               	movwf	btemp^0,c
 22498  000F62  0EFF               	movlw	-1
 22499  000F64  50E3               	movf	plusw1,w,c
 22500  000F66  0A80               	xorlw	128
 22501  000F68  582A               	subwfb	btemp^0,w,c
 22502  000F6A  B0D8               	btfsc	status,0,c
 22503  000F6C  D002               	goto	l12878
 22504  000F6E                     u12320:
 22505                           
 22506                           ;daq.c: 320:   return 0;
 22507  000F6E  0E00               	movlw	0
 22508  000F70  D01E               	goto	L22
 22509  000F72                     l12878:
 22510                           
 22511                           ;daq.c: 321:  if (value < (standard - window))
 22512                           ;stkvar	_window @ sp[(0)+-4]
 22513                           ;stkvar	_standard @ sp[(0)+-6]
 22514  000F72  0EFA               	movlw	-6
 22515  000F74  006F FF8C  F034    	movff	plusw1,btemp+10
 22516  000F7A  0EFB               	movlw	-5
 22517  000F7C  006F FF8C  F035    	movff	plusw1,btemp+11
 22518  000F82  0EFC               	movlw	-4
 22519  000F84  50E3               	movf	plusw1,w,c
 22520  000F86  5E34               	subwf	(btemp+10)^0,f,c
 22521  000F88  0EFD               	movlw	-3
 22522  000F8A  50E3               	movf	plusw1,w,c
 22523  000F8C  5A35               	subwfb	(btemp+11)^0,f,c
 22524                           
 22525                           ;stkvar	_value @ sp[(0)+-2]
 22526  000F8E  0EFE               	movlw	-2
 22527  000F90  006F FF8C  F02A    	movff	plusw1,btemp
 22528  000F96  5034               	movf	(btemp+10)^0,w,c
 22529  000F98  5C2A               	subwf	btemp^0,w,c
 22530  000F9A  0EFF               	movlw	-1
 22531  000F9C  50E3               	movf	plusw1,w,c
 22532  000F9E  0A80               	xorlw	128
 22533  000FA0  6E2A               	movwf	btemp^0,c
 22534  000FA2  5035               	movf	(btemp+11)^0,w,c
 22535  000FA4  0A80               	xorlw	128
 22536  000FA6  582A               	subwfb	btemp^0,w,c
 22537  000FA8  A0D8               	btfss	status,0,c
 22538  000FAA  D7E1               	goto	u12320
 22539                           
 22540                           ;daq.c: 323:  return 1;
 22541  000FAC  0E01               	movlw	1
 22542  000FAE                     L22:
 22543  000FAE  6E2A               	movwf	btemp^0,c
 22544                           
 22545                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 22546  000FB0  0EFA               	movlw	250
 22547  000FB2  26E1               	addwf	fsr1l,f,c
 22548  000FB4  0EFF               	movlw	255
 22549  000FB6  22E2               	addwfc	fsr1h,f,c
 22550  000FB8  0012               	return		;funcret
 22551  000FBA                     __end_of_check_range:
 22552                           	opt callstack 0
 22553                           
 22554 ;; *************** function _convert_adc_data *****************
 22555 ;; Defined at:
 22556 ;;		line 51 in file "mbmc.c"
 22557 ;; Parameters:    Size  Location     Type
 22558 ;;		None
 22559 ;; Auto vars:     Size  Location     Type
 22560 ;;  i               1  [STACK] unsigned char 
 22561 ;; Return value:  Size  Location     Type
 22562 ;;                  1  [STACK] void 
 22563 ;; Registers used:
 22564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22565 ;; Tracked objects:
 22566 ;;		On entry : 0/2
 22567 ;;		On exit  : 0/0
 22568 ;;		Unchanged: 0/0
 22569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22574 ;;Total ram usage:        0 bytes
 22575 ;; Hardware stack levels used:    1
 22576 ;; Hardware stack levels required when called:   18
 22577 ;; This function calls:
 22578 ;;		_conv_raw_result
 22579 ;;		_lp_filter
 22580 ;; This function is called by:
 22581 ;;		_main
 22582 ;; This function uses a reentrant model
 22583 ;;
 22584                           
 22585                           	psect	text73
 22586  0003BE                     __ptext73:
 22587                           	opt callstack 0
 22588  0003BE                     _convert_adc_data:
 22589                           	opt callstack 0
 22590                           
 22591                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22592  0003BE  52E6               	movf	postinc1,f,c
 22593                           
 22594                           ;mbmc.c: 53:  uint8_t i = 0;
 22595                           ;stkvar	_i @ sp[(-1)+0]
 22596                           
 22597                           ;incstack = 0
 22598  0003C0  0EFF               	movlw	-1
 22599  0003C2  6AE3               	clrf	plusw1,c
 22600  0003C4                     l14328:
 22601                           
 22602                           ;mbmc.c: 56:   if (V.calib) {
 22603  0003C4  0102               	movlb	2	; () banked
 22604  0003C6  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 22605  0003C8  B4D8               	btfsc	status,2,c
 22606  0003CA  D01B               	goto	l14332
 22607                           
 22608                           ; BSR set to: 2
 22609                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 22610  0003CC  0E01               	movlw	1
 22611  0003CE  6EE6               	movwf	postinc1,c
 22612                           
 22613                           ;stkvar	_i @ sp[(-2)+0]
 22614  0003D0  0EFE               	movlw	-2
 22615  0003D2  50E3               	movf	plusw1,w,c
 22616  0003D4  6EE6               	movwf	postinc1,c
 22617  0003D6  0E01               	movlw	1
 22618  0003D8  6EE6               	movwf	postinc1,c
 22619                           
 22620                           ;stkvar	_i @ sp[(-4)+0]
 22621  0003DA  0EFC               	movlw	-4
 22622  0003DC  50E3               	movf	plusw1,w,c
 22623  0003DE  6EE6               	movwf	postinc1,c
 22624  0003E0  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 22625  0003E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 22626  0003EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22627  0003F0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22628  0003F6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22629  0003FC  EC56  F0EB         	call	_lp_filter	;wreg free
 22630  000400  D01A               	goto	L23
 22631  000402                     l14332:
 22632                           
 22633                           ; BSR set to: 2
 22634                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 22635  000402  0E00               	movlw	0
 22636  000404  6EE6               	movwf	postinc1,c
 22637                           
 22638                           ;stkvar	_i @ sp[(-2)+0]
 22639  000406  0EFE               	movlw	-2
 22640  000408  50E3               	movf	plusw1,w,c
 22641  00040A  6EE6               	movwf	postinc1,c
 22642  00040C  0E00               	movlw	0
 22643  00040E  6EE6               	movwf	postinc1,c
 22644                           
 22645                           ;stkvar	_i @ sp[(-4)+0]
 22646  000410  0EFC               	movlw	-4
 22647  000412  50E3               	movf	plusw1,w,c
 22648  000414  6EE6               	movwf	postinc1,c
 22649  000416  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 22650  00041A  0060  F0AB  FFE6   	movff	btemp,postinc1
 22651  000420  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22652  000426  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22653  00042C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22654  000432  EC56  F0EB         	call	_lp_filter	;wreg free
 22655  000436                     L23:
 22656                           
 22657                           ;stkvar	_i @ sp[(-1)+0]
 22658  000436  0EFF               	movlw	-1
 22659  000438  50E3               	movf	plusw1,w,c
 22660  00043A  0D04               	mullw	4
 22661  00043C  0EFF               	movlw	low _C
 22662  00043E  24F3               	addwf	243,w,c
 22663  000440  6ED9               	movwf	fsr2l,c
 22664  000442  0E08               	movlw	high _C
 22665  000444  20F4               	addwfc	prodh,w,c
 22666  000446  6EDA               	movwf	fsr2h,c
 22667  000448  0060  F0AB  FFDE   	movff	btemp,postinc2
 22668  00044E  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 22669  000454  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 22670  00045A  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 22671                           
 22672                           ;mbmc.c: 61:  } while (++i < 16);
 22673                           ;stkvar	_i @ sp[(-1)+0]
 22674  000460  0EFF               	movlw	-1
 22675  000462  2AE3               	incf	plusw1,f,c
 22676  000464  0EFF               	movlw	-1
 22677  000466  006F FF8C  F02A    	movff	plusw1,btemp
 22678  00046C  0E0F               	movlw	15
 22679  00046E  642A               	cpfsgt	btemp^0,c
 22680  000470  D7A9               	goto	l14328
 22681                           
 22682                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22683  000472  52E5               	movf	postdec1,f,c
 22684  000474  0012               	return		;funcret
 22685  000476                     __end_of_convert_adc_data:
 22686                           	opt callstack 0
 22687                           
 22688 ;; *************** function _clear_hid_pflags *****************
 22689 ;; Defined at:
 22690 ;;		line 67 in file "hid.c"
 22691 ;; Parameters:    Size  Location     Type
 22692 ;;  h               2  [STACK] PTR struct H_data
 22693 ;;		 -> H(9), 
 22694 ;; Auto vars:     Size  Location     Type
 22695 ;;		None
 22696 ;; Return value:  Size  Location     Type
 22697 ;;                  1  [STACK] void 
 22698 ;; Registers used:
 22699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 22700 ;; Tracked objects:
 22701 ;;		On entry : 3E/0
 22702 ;;		On exit  : 0/0
 22703 ;;		Unchanged: 0/0
 22704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22709 ;;Total ram usage:        0 bytes
 22710 ;; Hardware stack levels used:    1
 22711 ;; Hardware stack levels required when called:   15
 22712 ;; This function calls:
 22713 ;;		Nothing
 22714 ;; This function is called by:
 22715 ;;		_main
 22716 ;; This function uses a reentrant model
 22717 ;;
 22718                           
 22719                           	psect	text74
 22720  001342                     __ptext74:
 22721                           	opt callstack 0
 22722  001342                     _clear_hid_pflags:
 22723                           	opt callstack 15
 22724                           
 22725                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 22726                           ;stkvar	_h @ sp[(0)+-2]
 22727                           
 22728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22729                           ;incstack = 0
 22730  001342  0EFE               	movlw	-2
 22731  001344  006F FF8C  F034    	movff	plusw1,btemp+10
 22732  00134A  0EFF               	movlw	-1
 22733  00134C  006F FF8C  F035    	movff	plusw1,btemp+11
 22734  001352  0E03               	movlw	3
 22735  001354  2434               	addwf	(btemp+10)^0,w,c
 22736  001356  6ED9               	movwf	fsr2l,c
 22737  001358  0E00               	movlw	0
 22738  00135A  2035               	addwfc	(btemp+11)^0,w,c
 22739  00135C  6EDA               	movwf	fsr2h,c
 22740  00135E  0E00               	movlw	0
 22741  001360  6EDF               	movwf	indf2,c
 22742                           
 22743                           ;hid.c: 70:  h->enter_p = SW_OFF;
 22744                           ;stkvar	_h @ sp[(0)+-2]
 22745  001362  0EFE               	movlw	-2
 22746  001364  006F FF8C  F034    	movff	plusw1,btemp+10
 22747  00136A  0EFF               	movlw	-1
 22748  00136C  006F FF8C  F035    	movff	plusw1,btemp+11
 22749  001372  0E05               	movlw	5
 22750  001374  2434               	addwf	(btemp+10)^0,w,c
 22751  001376  6ED9               	movwf	fsr2l,c
 22752  001378  0E00               	movlw	0
 22753  00137A  2035               	addwfc	(btemp+11)^0,w,c
 22754  00137C  6EDA               	movwf	fsr2h,c
 22755  00137E  0E00               	movlw	0
 22756  001380  6EDF               	movwf	indf2,c
 22757                           
 22758                           ;hid.c: 71:  h->calib_p = SW_OFF;
 22759                           ;stkvar	_h @ sp[(0)+-2]
 22760  001382  0EFE               	movlw	-2
 22761  001384  006F FF8C  F034    	movff	plusw1,btemp+10
 22762  00138A  0EFF               	movlw	-1
 22763  00138C  006F FF8C  F035    	movff	plusw1,btemp+11
 22764  001392  0E07               	movlw	7
 22765  001394  2434               	addwf	(btemp+10)^0,w,c
 22766  001396  6ED9               	movwf	fsr2l,c
 22767  001398  0E00               	movlw	0
 22768  00139A  2035               	addwfc	(btemp+11)^0,w,c
 22769  00139C  6EDA               	movwf	fsr2h,c
 22770  00139E  0E00               	movlw	0
 22771  0013A0  6EDF               	movwf	indf2,c
 22772                           
 22773                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22774  0013A2  52E5               	movf	postdec1,f,c
 22775  0013A4  52E5               	movf	postdec1,f,c
 22776  0013A6  0012               	return		;funcret
 22777  0013A8                     __end_of_clear_hid_pflags:
 22778                           	opt callstack 0
 22779                           
 22780 ;; *************** function _check_help *****************
 22781 ;; Defined at:
 22782 ;;		line 40 in file "mconfig.c"
 22783 ;; Parameters:    Size  Location     Type
 22784 ;;  flipper         1  [STACK] const _Bool 
 22785 ;; Auto vars:     Size  Location     Type
 22786 ;;  estatus         1    0        _Bool 
 22787 ;; Return value:  Size  Location     Type
 22788 ;;                  1  [STACK] _Bool 
 22789 ;; Registers used:
 22790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22791 ;; Tracked objects:
 22792 ;;		On entry : 3F/2
 22793 ;;		On exit  : 0/0
 22794 ;;		Unchanged: 0/0
 22795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22800 ;;Total ram usage:        0 bytes
 22801 ;; Hardware stack levels used:    1
 22802 ;; Hardware stack levels required when called:   27
 22803 ;; This function calls:
 22804 ;;		_StartTimer
 22805 ;;		_TimerDone
 22806 ;;		_display_help
 22807 ;;		_display_info
 22808 ;;		_get_vterm_ptr
 22809 ;;		_help_button
 22810 ;;		_mode_lamp_bright
 22811 ;;		_mode_lamp_dim
 22812 ;;		_set_display_info
 22813 ;;		_set_temp_display_help
 22814 ;;		_set_vterm
 22815 ;;		_sprintf
 22816 ;;		_update_lcd
 22817 ;;		_vterm_dump
 22818 ;; This function is called by:
 22819 ;;		_main
 22820 ;; This function uses a reentrant model
 22821 ;;
 22822                           
 22823                           	psect	text75
 22824  01D0CC                     __ptext75:
 22825                           	opt callstack 0
 22826  01D0CC                     _check_help:
 22827                           	opt callstack 3
 22828                           
 22829                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 22830                           
 22831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22832                           ;incstack = 0
 22833  01D0CC  ECB4  F00E         	call	_help_button	;wreg free
 22834  01D0D0  502A               	movf	btemp^0,w,c
 22835  01D0D2  B4D8               	btfsc	status,2,c
 22836  01D0D4  D0D0               	goto	l17318
 22837  01D0D6  EC7F  F013         	call	_display_info	;wreg free
 22838  01D0DA  042A               	decf	btemp^0,w,c
 22839  01D0DC  B4D8               	btfsc	status,2,c
 22840  01D0DE  D0CB               	goto	l17318
 22841                           
 22842                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 22843  01D0E0  0EDC               	movlw	220
 22844  01D0E2  6EE6               	movwf	postinc1,c
 22845  01D0E4  0E05               	movlw	5
 22846  01D0E6  6EE6               	movwf	postinc1,c
 22847  01D0E8  0E0B               	movlw	11
 22848  01D0EA  6EE6               	movwf	postinc1,c
 22849  01D0EC  ECFA  F00D         	call	_StartTimer	;wreg free
 22850                           
 22851                           ;mconfig.c: 48:   if (V.debug)
 22852  01D0F0  0102               	movlb	2	; () banked
 22853  01D0F2  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 22854                           
 22855                           ; BSR set to: 2
 22856                           ;mconfig.c: 49:    vterm_dump();
 22857  01D0F4  EC9A  F0EE         	call	_vterm_dump	;wreg free
 22858                           
 22859                           ;mconfig.c: 51:   set_vterm(1);
 22860  01D0F8  0E01               	movlw	1
 22861  01D0FA  6EE6               	movwf	postinc1,c
 22862  01D0FC  EC76  F012         	call	_set_vterm	;wreg free
 22863                           
 22864                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 22865  01D100  EC7F  F013         	call	_display_info	;wreg free
 22866  01D104  502A               	movf	btemp^0,w,c
 22867  01D106  6EE6               	movwf	postinc1,c
 22868  01D108  EC27  F013         	call	_set_temp_display_help	;wreg free
 22869                           
 22870                           ; BSR set to: 2
 22871                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 22872  01D10C  0E01               	movlw	1
 22873  01D10E  6EE6               	movwf	postinc1,c
 22874  01D110  EC85  F012         	call	_set_display_info	;wreg free
 22875                           
 22876                           ;mconfig.c: 54:   if (flipper) {
 22877                           ;stkvar	_flipper @ sp[(0)+-1]
 22878  01D114  0EFF               	movlw	-1
 22879  01D116  50E3               	movf	plusw1,w,c
 22880  01D118  B4D8               	btfsc	status,2,c
 22881  01D11A  D019               	goto	l17304
 22882                           
 22883                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 22884  01D11C  0EB6               	movlw	low STR_70
 22885  01D11E  6EE6               	movwf	postinc1,c
 22886  01D120  0EFF               	movlw	high STR_70
 22887  01D122  6EE6               	movwf	postinc1,c
 22888  01D124  0E73               	movlw	low STR_72
 22889  01D126  6EE6               	movwf	postinc1,c
 22890  01D128  0EFF               	movlw	high STR_72
 22891  01D12A  6EE6               	movwf	postinc1,c
 22892  01D12C  0E01               	movlw	1
 22893  01D12E  6EE6               	movwf	postinc1,c
 22894  01D130  0E00               	movlw	0
 22895  01D132  6EE6               	movwf	postinc1,c
 22896  01D134  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 22897  01D138  0060  F0AB  FFE6   	movff	btemp,postinc1
 22898  01D13E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22899  01D144  0E06               	movlw	6
 22900  01D146  6EE6               	movwf	postinc1,c
 22901  01D148  ECB9  F0FB         	call	_sprintf	;wreg free
 22902                           
 22903                           ;mconfig.c: 56:   } else {
 22904  01D14C  D018               	goto	l1829
 22905  01D14E                     l17304:
 22906                           
 22907                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 22908  01D14E  0ECC               	movlw	low STR_71
 22909  01D150  6EE6               	movwf	postinc1,c
 22910  01D152  0EFF               	movlw	high STR_71
 22911  01D154  6EE6               	movwf	postinc1,c
 22912  01D156  0E73               	movlw	low STR_72
 22913  01D158  6EE6               	movwf	postinc1,c
 22914  01D15A  0EFF               	movlw	high STR_72
 22915  01D15C  6EE6               	movwf	postinc1,c
 22916  01D15E  0E01               	movlw	1
 22917  01D160  6EE6               	movwf	postinc1,c
 22918  01D162  0E00               	movlw	0
 22919  01D164  6EE6               	movwf	postinc1,c
 22920  01D166  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 22921  01D16A  0060  F0AB  FFE6   	movff	btemp,postinc1
 22922  01D170  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22923  01D176  0E06               	movlw	6
 22924  01D178  6EE6               	movwf	postinc1,c
 22925  01D17A  ECB9  F0FB         	call	_sprintf	;wreg free
 22926  01D17E                     l1829:
 22927                           
 22928                           ; BSR set to: 0
 22929                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 22930  01D17E  0102               	movlb	2	; () banked
 22931  01D180  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 22932  01D182  32E8               	rrcf	wreg,f,c
 22933  01D184  32E8               	rrcf	wreg,f,c
 22934  01D186  0B03               	andlw	3
 22935  01D188  0D2C               	mullw	44
 22936  01D18A  0E16               	movlw	22
 22937  01D18C  26F3               	addwf	243,f,c
 22938  01D18E  0E00               	movlw	0
 22939  01D190  22F4               	addwfc	244,f,c
 22940  01D192  0EE3               	movlw	low _T
 22941  01D194  6E34               	movwf	(btemp+10)^0,c
 22942  01D196  0EF8               	movlw	high _T
 22943  01D198  6E35               	movwf	(btemp+11)^0,c
 22944  01D19A  50F3               	movf	243,w,c
 22945  01D19C  2634               	addwf	(btemp+10)^0,f,c
 22946  01D19E  50F4               	movf	244,w,c
 22947  01D1A0  2235               	addwfc	(btemp+11)^0,f,c
 22948  01D1A2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22949  01D1A8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22950  01D1AE  0EC2               	movlw	low STR_74
 22951  01D1B0  6EE6               	movwf	postinc1,c
 22952  01D1B2  0EFF               	movlw	high STR_74
 22953  01D1B4  6EE6               	movwf	postinc1,c
 22954  01D1B6  0E01               	movlw	1
 22955  01D1B8  6EE6               	movwf	postinc1,c
 22956  01D1BA  0E01               	movlw	1
 22957  01D1BC  6EE6               	movwf	postinc1,c
 22958  01D1BE  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 22959  01D1C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 22960  01D1C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22961  01D1CE  0E06               	movlw	6
 22962  01D1D0  6EE6               	movwf	postinc1,c
 22963  01D1D2  ECB9  F0FB         	call	_sprintf	;wreg free
 22964                           
 22965                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 22966  01D1D6  0102               	movlb	2	; () banked
 22967  01D1D8  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 22968  01D1DA  32E8               	rrcf	wreg,f,c
 22969  01D1DC  32E8               	rrcf	wreg,f,c
 22970  01D1DE  0B03               	andlw	3
 22971  01D1E0  0D2C               	mullw	44
 22972  01D1E2  0EE3               	movlw	low _T
 22973  01D1E4  6E34               	movwf	(btemp+10)^0,c
 22974  01D1E6  0EF8               	movlw	high _T
 22975  01D1E8  6E35               	movwf	(btemp+11)^0,c
 22976  01D1EA  50F3               	movf	243,w,c
 22977  01D1EC  2634               	addwf	(btemp+10)^0,f,c
 22978  01D1EE  50F4               	movf	244,w,c
 22979  01D1F0  2235               	addwfc	(btemp+11)^0,f,c
 22980  01D1F2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22981  01D1F8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22982  01D1FE  0EC2               	movlw	low STR_74
 22983  01D200  6EE6               	movwf	postinc1,c
 22984  01D202  0EFF               	movlw	high STR_74
 22985  01D204  6EE6               	movwf	postinc1,c
 22986  01D206  0E01               	movlw	1
 22987  01D208  6EE6               	movwf	postinc1,c
 22988  01D20A  0E02               	movlw	2
 22989  01D20C  6EE6               	movwf	postinc1,c
 22990  01D20E  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 22991  01D212  0060  F0AB  FFE6   	movff	btemp,postinc1
 22992  01D218  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22993  01D21E  0E06               	movlw	6
 22994  01D220  6EE6               	movwf	postinc1,c
 22995  01D222  ECB9  F0FB         	call	_sprintf	;wreg free
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;mconfig.c: 61:   V.help_id++;
 22999  01D226  EE20  F29F         	lfsr	2,_V+152	;volatile
 23000  01D22A  38DF               	swapf	223,w,c
 23001  01D22C  6E35               	movwf	(btemp+11)^0,c
 23002  01D22E  3235               	rrcf	(btemp+11)^0,f,c
 23003  01D230  3035               	rrcf	(btemp+11)^0,w,c
 23004  01D232  0B03               	andlw	3
 23005  01D234  6E35               	movwf	(btemp+11)^0,c
 23006  01D236  2A35               	incf	(btemp+11)^0,f,c
 23007  01D238  3A35               	swapf	(btemp+11)^0,f,c
 23008  01D23A  3635               	rlcf	(btemp+11)^0,f,c
 23009  01D23C  3635               	rlcf	(btemp+11)^0,f,c
 23010  01D23E  50DF               	movf	223,w,c
 23011  01D240  1835               	xorwf	(btemp+11)^0,w,c
 23012  01D242  0B3F               	andlw	-193
 23013  01D244  1835               	xorwf	(btemp+11)^0,w,c
 23014  01D246  6EDF               	movwf	223,c
 23015                           
 23016                           ; BSR set to: 0
 23017                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 23018  01D248  0EB8               	movlw	184
 23019  01D24A  6EE6               	movwf	postinc1,c
 23020  01D24C  0E0B               	movlw	11
 23021  01D24E  6EE6               	movwf	postinc1,c
 23022  01D250  0E09               	movlw	9
 23023  01D252  6EE6               	movwf	postinc1,c
 23024  01D254  ECFA  F00D         	call	_StartTimer	;wreg free
 23025                           
 23026                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 23027  01D258  0EB8               	movlw	184
 23028  01D25A  6EE6               	movwf	postinc1,c
 23029  01D25C  0E0B               	movlw	11
 23030  01D25E  6EE6               	movwf	postinc1,c
 23031  01D260  0E07               	movlw	7
 23032  01D262  6EE6               	movwf	postinc1,c
 23033  01D264  ECFA  F00D         	call	_StartTimer	;wreg free
 23034                           
 23035                           ;mconfig.c: 64:   mode_lamp_bright();
 23036  01D268  EC3E  F013         	call	_mode_lamp_bright	;wreg free
 23037                           
 23038                           ;mconfig.c: 65:   update_lcd(1);
 23039  01D26C  0E01               	movlw	1
 23040  01D26E  6EE6               	movwf	postinc1,c
 23041  01D270  EC6B  F0F4         	call	_update_lcd	;wreg free
 23042                           
 23043                           ;mconfig.c: 67:  } else {
 23044  01D274  D032               	goto	l1830
 23045  01D276                     l17318:
 23046                           
 23047                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 23048  01D276  0E09               	movlw	9
 23049  01D278  6EE6               	movwf	postinc1,c
 23050  01D27A  EC6F  F010         	call	_TimerDone	;wreg free
 23051  01D27E  502A               	movf	btemp^0,w,c
 23052  01D280  B4D8               	btfsc	status,2,c
 23053  01D282  D02B               	goto	l1830
 23054                           
 23055                           ;mconfig.c: 69:    set_vterm(0);
 23056  01D284  0E00               	movlw	0
 23057  01D286  6EE6               	movwf	postinc1,c
 23058  01D288  EC76  F012         	call	_set_vterm	;wreg free
 23059                           
 23060                           ;mconfig.c: 70:    V.help = 0;
 23061  01D28C  0102               	movlb	2	; () banked
 23062  01D28E  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 23063                           
 23064                           ; BSR set to: 2
 23065                           ;mconfig.c: 71:    set_display_info(display_help());
 23066  01D290  EC83  F013         	call	_display_help	;wreg free
 23067  01D294  502A               	movf	btemp^0,w,c
 23068  01D296  6EE6               	movwf	postinc1,c
 23069  01D298  EC85  F012         	call	_set_display_info	;wreg free
 23070                           
 23071                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 23072  01D29C  0060  FA67  FFE6   	movff	_V+146,postinc1
 23073  01D2A2  0060  FA6B  FFE6   	movff	_V+147,postinc1
 23074  01D2A8  ECAF  F012         	call	_mode_lamp_dim	;wreg free
 23075                           
 23076                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 23077  01D2AC  0E0B               	movlw	11
 23078  01D2AE  6EE6               	movwf	postinc1,c
 23079  01D2B0  EC6F  F010         	call	_TimerDone	;wreg free
 23080  01D2B4  502A               	movf	btemp^0,w,c
 23081  01D2B6  B4D8               	btfsc	status,2,c
 23082  01D2B8  D010               	goto	l1830
 23083                           
 23084                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 23085  01D2BA  0102               	movlb	2	; () banked
 23086  01D2BC  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 23087  01D2BE  A4D8               	btfss	status,2,c
 23088  01D2C0  D002               	goto	u16920
 23089  01D2C2  0E01               	movlw	1
 23090  01D2C4  D001               	goto	u16930
 23091  01D2C6                     u16920:
 23092  01D2C6  0E00               	movlw	0
 23093  01D2C8                     u16930:
 23094  01D2C8  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 23095                           
 23096                           ; BSR set to: 2
 23097                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 23098  01D2CA  0EDC               	movlw	220
 23099  01D2CC  6EE6               	movwf	postinc1,c
 23100  01D2CE  0E05               	movlw	5
 23101  01D2D0  6EE6               	movwf	postinc1,c
 23102  01D2D2  0E0B               	movlw	11
 23103  01D2D4  6EE6               	movwf	postinc1,c
 23104  01D2D6  ECFA  F00D         	call	_StartTimer	;wreg free
 23105  01D2DA                     l1830:
 23106                           
 23107                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23108  01D2DA  52E5               	movf	postdec1,f,c
 23109  01D2DC  0012               	return		;funcret
 23110  01D2DE                     __end_of_check_help:
 23111                           	opt callstack 0
 23112                           
 23113 ;; *************** function _vterm_dump *****************
 23114 ;; Defined at:
 23115 ;;		line 124 in file "mconfig.c"
 23116 ;; Parameters:    Size  Location     Type
 23117 ;;		None
 23118 ;; Auto vars:     Size  Location     Type
 23119 ;;		None
 23120 ;; Return value:  Size  Location     Type
 23121 ;;                  1  [STACK] void 
 23122 ;; Registers used:
 23123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23124 ;; Tracked objects:
 23125 ;;		On entry : 3F/2
 23126 ;;		On exit  : 0/0
 23127 ;;		Unchanged: 0/0
 23128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23133 ;;Total ram usage:        0 bytes
 23134 ;; Hardware stack levels used:    1
 23135 ;; Hardware stack levels required when called:   26
 23136 ;; This function calls:
 23137 ;;		_WaitMs
 23138 ;;		_eaDogM_WriteStringAtPos
 23139 ;;		_get_vterm_ptr
 23140 ;;		_sprintf
 23141 ;;		_wait_lcd_done
 23142 ;; This function is called by:
 23143 ;;		_check_help
 23144 ;; This function uses a reentrant model
 23145 ;;
 23146                           
 23147                           	psect	text76
 23148  01DD34                     __ptext76:
 23149                           	opt callstack 0
 23150  01DD34                     _vterm_dump:
 23151                           	opt callstack 3
 23152                           
 23153                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 23154                           
 23155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23156                           ;incstack = 0
 23157  01DD34  0E01               	movlw	1
 23158  01DD36  6EE6               	movwf	postinc1,c
 23159  01DD38  0E00               	movlw	0
 23160  01DD3A  6EE6               	movwf	postinc1,c
 23161  01DD3C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23162  01DD40  0060  F0AB  FFE6   	movff	btemp,postinc1
 23163  01DD46  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23164  01DD4C  0E00               	movlw	0
 23165  01DD4E  6EE6               	movwf	postinc1,c
 23166  01DD50  0E00               	movlw	0
 23167  01DD52  6EE6               	movwf	postinc1,c
 23168  01DD54  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23169  01DD58  0060  F0AB  FFE6   	movff	btemp,postinc1
 23170  01DD5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23171  01DD64  0EA7               	movlw	low STR_76
 23172  01DD66  6EE6               	movwf	postinc1,c
 23173  01DD68  0EFF               	movlw	high STR_76
 23174  01DD6A  6EE6               	movwf	postinc1,c
 23175  01DD6C  0E08               	movlw	low (_V+1)
 23176  01DD6E  6EE6               	movwf	postinc1,c
 23177  01DD70  0E02               	movlw	high (_V+1)
 23178  01DD72  6EE6               	movwf	postinc1,c
 23179  01DD74  0E08               	movlw	8
 23180  01DD76  6EE6               	movwf	postinc1,c
 23181  01DD78  ECB9  F0FB         	call	_sprintf	;wreg free
 23182                           
 23183                           ; BSR set to: 0
 23184                           ;mconfig.c: 127:  wait_lcd_done();
 23185  01DD7C  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23186                           
 23187                           ; BSR set to: 0
 23188                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 23189  01DD80  0E08               	movlw	low (_V+1)
 23190  01DD82  6EE6               	movwf	postinc1,c
 23191  01DD84  0E02               	movlw	high (_V+1)
 23192  01DD86  6EE6               	movwf	postinc1,c
 23193  01DD88  0E00               	movlw	0
 23194  01DD8A  6EE6               	movwf	postinc1,c
 23195  01DD8C  0E00               	movlw	0
 23196  01DD8E  6EE6               	movwf	postinc1,c
 23197  01DD90  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23198                           
 23199                           ; BSR set to: 59
 23200                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 23201  01DD94  0E01               	movlw	1
 23202  01DD96  6EE6               	movwf	postinc1,c
 23203  01DD98  0E01               	movlw	1
 23204  01DD9A  6EE6               	movwf	postinc1,c
 23205  01DD9C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23206  01DDA0  0060  F0AB  FFE6   	movff	btemp,postinc1
 23207  01DDA6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23208  01DDAC  0E00               	movlw	0
 23209  01DDAE  6EE6               	movwf	postinc1,c
 23210  01DDB0  0E01               	movlw	1
 23211  01DDB2  6EE6               	movwf	postinc1,c
 23212  01DDB4  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23213  01DDB8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23214  01DDBE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23215  01DDC4  0EA7               	movlw	low STR_76
 23216  01DDC6  6EE6               	movwf	postinc1,c
 23217  01DDC8  0EFF               	movlw	high STR_76
 23218  01DDCA  6EE6               	movwf	postinc1,c
 23219  01DDCC  0E08               	movlw	low (_V+1)
 23220  01DDCE  6EE6               	movwf	postinc1,c
 23221  01DDD0  0E02               	movlw	high (_V+1)
 23222  01DDD2  6EE6               	movwf	postinc1,c
 23223  01DDD4  0E08               	movlw	8
 23224  01DDD6  6EE6               	movwf	postinc1,c
 23225  01DDD8  ECB9  F0FB         	call	_sprintf	;wreg free
 23226                           
 23227                           ; BSR set to: 0
 23228                           ;mconfig.c: 130:  wait_lcd_done();
 23229  01DDDC  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23230                           
 23231                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 23232  01DDE0  0E08               	movlw	low (_V+1)
 23233  01DDE2  6EE6               	movwf	postinc1,c
 23234  01DDE4  0E02               	movlw	high (_V+1)
 23235  01DDE6  6EE6               	movwf	postinc1,c
 23236  01DDE8  0E00               	movlw	0
 23237  01DDEA  6EE6               	movwf	postinc1,c
 23238  01DDEC  0E01               	movlw	1
 23239  01DDEE  6EE6               	movwf	postinc1,c
 23240  01DDF0  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23241                           
 23242                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 23243  01DDF4  0E01               	movlw	1
 23244  01DDF6  6EE6               	movwf	postinc1,c
 23245  01DDF8  0E02               	movlw	2
 23246  01DDFA  6EE6               	movwf	postinc1,c
 23247  01DDFC  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23248  01DE00  0060  F0AB  FFE6   	movff	btemp,postinc1
 23249  01DE06  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23250  01DE0C  0E00               	movlw	0
 23251  01DE0E  6EE6               	movwf	postinc1,c
 23252  01DE10  0E02               	movlw	2
 23253  01DE12  6EE6               	movwf	postinc1,c
 23254  01DE14  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23255  01DE18  0060  F0AB  FFE6   	movff	btemp,postinc1
 23256  01DE1E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23257  01DE24  0EA7               	movlw	low STR_76
 23258  01DE26  6EE6               	movwf	postinc1,c
 23259  01DE28  0EFF               	movlw	high STR_76
 23260  01DE2A  6EE6               	movwf	postinc1,c
 23261  01DE2C  0E08               	movlw	low (_V+1)
 23262  01DE2E  6EE6               	movwf	postinc1,c
 23263  01DE30  0E02               	movlw	high (_V+1)
 23264  01DE32  6EE6               	movwf	postinc1,c
 23265  01DE34  0E08               	movlw	8
 23266  01DE36  6EE6               	movwf	postinc1,c
 23267  01DE38  ECB9  F0FB         	call	_sprintf	;wreg free
 23268                           
 23269                           ; BSR set to: 0
 23270                           ;mconfig.c: 133:  wait_lcd_done();
 23271  01DE3C  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23272                           
 23273                           ; BSR set to: 0
 23274                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 23275  01DE40  0E08               	movlw	low (_V+1)
 23276  01DE42  6EE6               	movwf	postinc1,c
 23277  01DE44  0E02               	movlw	high (_V+1)
 23278  01DE46  6EE6               	movwf	postinc1,c
 23279  01DE48  0E00               	movlw	0
 23280  01DE4A  6EE6               	movwf	postinc1,c
 23281  01DE4C  0E02               	movlw	2
 23282  01DE4E  6EE6               	movwf	postinc1,c
 23283  01DE50  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23284                           
 23285                           ; BSR set to: 59
 23286                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 23287  01DE54  0E01               	movlw	1
 23288  01DE56  6EE6               	movwf	postinc1,c
 23289  01DE58  0E03               	movlw	3
 23290  01DE5A  6EE6               	movwf	postinc1,c
 23291  01DE5C  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23292  01DE60  0060  F0AB  FFE6   	movff	btemp,postinc1
 23293  01DE66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23294  01DE6C  0E00               	movlw	0
 23295  01DE6E  6EE6               	movwf	postinc1,c
 23296  01DE70  0E03               	movlw	3
 23297  01DE72  6EE6               	movwf	postinc1,c
 23298  01DE74  ECE9  F0FF         	call	_get_vterm_ptr	;wreg free
 23299  01DE78  0060  F0AB  FFE6   	movff	btemp,postinc1
 23300  01DE7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23301  01DE84  0EA7               	movlw	low STR_76
 23302  01DE86  6EE6               	movwf	postinc1,c
 23303  01DE88  0EFF               	movlw	high STR_76
 23304  01DE8A  6EE6               	movwf	postinc1,c
 23305  01DE8C  0E08               	movlw	low (_V+1)
 23306  01DE8E  6EE6               	movwf	postinc1,c
 23307  01DE90  0E02               	movlw	high (_V+1)
 23308  01DE92  6EE6               	movwf	postinc1,c
 23309  01DE94  0E08               	movlw	8
 23310  01DE96  6EE6               	movwf	postinc1,c
 23311  01DE98  ECB9  F0FB         	call	_sprintf	;wreg free
 23312                           
 23313                           ; BSR set to: 0
 23314                           ;mconfig.c: 136:  wait_lcd_done();
 23315  01DE9C  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23316                           
 23317                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 23318  01DEA0  0E08               	movlw	low (_V+1)
 23319  01DEA2  6EE6               	movwf	postinc1,c
 23320  01DEA4  0E02               	movlw	high (_V+1)
 23321  01DEA6  6EE6               	movwf	postinc1,c
 23322  01DEA8  0E00               	movlw	0
 23323  01DEAA  6EE6               	movwf	postinc1,c
 23324  01DEAC  0E03               	movlw	3
 23325  01DEAE  6EE6               	movwf	postinc1,c
 23326  01DEB0  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23327                           
 23328                           ; BSR set to: 59
 23329                           ;mconfig.c: 138:  WaitMs(3000);
 23330  01DEB4  0EB8               	movlw	184
 23331  01DEB6  6EE6               	movwf	postinc1,c
 23332  01DEB8  0E0B               	movlw	11
 23333  01DEBA  6EE6               	movwf	postinc1,c
 23334  01DEBC  EC07  F00F         	call	_WaitMs	;wreg free
 23335                           
 23336                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23337  01DEC0  0012               	return		;funcret
 23338  01DEC2                     __end_of_vterm_dump:
 23339                           	opt callstack 0
 23340                           
 23341 ;; *************** function _sprintf *****************
 23342 ;; Defined at:
 23343 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 23344 ;; Parameters:    Size  Location     Type
 23345 ;;  s               2  [STACK] PTR unsigned char 
 23346 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 23347 ;;  fmt             2  [STACK] PTR const unsigned char 
 23348 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 23349 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 23350 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 23351 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 23352 ;;		 -> STR_73(19), STR_72(19), STR_68(14), STR_67(28), 
 23353 ;;		 -> STR_66(28), STR_65(28), STR_64(21), STR_63(21), 
 23354 ;;		 -> STR_62(21), STR_61(21), STR_60(21), STR_59(21), 
 23355 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(20), 
 23356 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(22), 
 23357 ;;		 -> STR_50(22), STR_49(22), STR_48(23), STR_47(23), 
 23358 ;;		 -> STR_46(23), STR_45(29), STR_44(23), STR_43(23), 
 23359 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(22), 
 23360 ;;		 -> STR_38(22), STR_37(22), STR_36(22), STR_35(22), 
 23361 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 23362 ;;		 -> STR_30(17), STR_29(16), STR_28(16), STR_27(21), 
 23363 ;;		 -> STR_26(21), STR_25(21), STR_24(14), STR_23(26), 
 23364 ;;		 -> STR_22(26), STR_21(22), STR_20(21), STR_19(21), 
 23365 ;;		 -> STR_18(21), STR_17(21), STR_16(22), STR_15(22), 
 23366 ;;		 -> STR_14(22), STR_13(26), STR_12(21), STR_11(21), 
 23367 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 23368 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 23369 ;;		 -> STR_1(21), 
 23370 ;; Auto vars:     Size  Location     Type
 23371 ;;  f               6  [STACK] struct _IO_FILE
 23372 ;;  ap              2  [STACK] PTR void [1]
 23373 ;;		 -> ?_printf(2), ?_sprintf(2), 
 23374 ;;  ret             2    0        int 
 23375 ;; Return value:  Size  Location     Type
 23376 ;;                  2  [STACK] int 
 23377 ;; Registers used:
 23378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23379 ;; Tracked objects:
 23380 ;;		On entry : 0/2
 23381 ;;		On exit  : 3F/0
 23382 ;;		Unchanged: 0/0
 23383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23388 ;;Total ram usage:        0 bytes
 23389 ;; Hardware stack levels used:    1
 23390 ;; Hardware stack levels required when called:   23
 23391 ;; This function calls:
 23392 ;;		_vfprintf
 23393 ;; This function is called by:
 23394 ;;		_main
 23395 ;;		_current_sensor_cal
 23396 ;;		_display_history
 23397 ;;		_check_help
 23398 ;;		_vterm_dump
 23399 ;;		_calc_bsoc
 23400 ;; This function uses a reentrant model
 23401 ;;
 23402                           
 23403                           	psect	text77
 23404  01F772                     __ptext77:
 23405                           	opt callstack 0
 23406  01F772                     _sprintf:
 23407                           	opt callstack 0
 23408                           
 23409                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23410  01F772  0E08               	movlw	8
 23411  01F774  26E1               	addwf	fsr1l,f,c
 23412  01F776  0E00               	movlw	0
 23413  01F778  22E2               	addwfc	fsr1h,f,c
 23414                           
 23415                           ;incstack = 0
 23416 ;; hardware stack exceeded
 23417  01F77A  0EFE               	movlw	254
 23418  01F77C  6E34               	movwf	(btemp+10)^0,c
 23419  01F77E  0EFF               	movlw	255
 23420  01F780  6E35               	movwf	(btemp+11)^0,c
 23421                           
 23422                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 23423  01F782  0EF5               	movlw	245
 23424  01F784  24E1               	addwf	fsr1l,w,c
 23425  01F786  6E32               	movwf	(btemp+8)^0,c
 23426  01F788  0EFF               	movlw	255
 23427  01F78A  20E2               	addwfc	fsr1h,w,c
 23428  01F78C  6E33               	movwf	(btemp+9)^0,c
 23429  01F78E  5034               	movf	(btemp+10)^0,w,c
 23430  01F790  2632               	addwf	(btemp+8)^0,f,c
 23431  01F792  5035               	movf	(btemp+11)^0,w,c
 23432  01F794  2233               	addwfc	(btemp+9)^0,f,c
 23433                           
 23434                           ;stkvar	_ap @ sp[(-8)+6]
 23435  01F796  0EFF               	movlw	-1
 23436  01F798  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 23437  01F79E  0EFE               	movlw	-2
 23438  01F7A0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 23439                           
 23440                           ;stkvar	_s @ sp[(-8)+-3]
 23441  01F7A6  0EF5               	movlw	-11
 23442  01F7A8  006F FF8C  F034    	movff	plusw1,btemp+10
 23443  01F7AE  0EF6               	movlw	-10
 23444  01F7B0  006F FF8C  F035    	movff	plusw1,btemp+11
 23445                           
 23446                           ;stkvar	_f @ sp[(-8)+0]
 23447  01F7B6  0EF9               	movlw	-7
 23448  01F7B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 23449  01F7BE  0EF8               	movlw	-8
 23450  01F7C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 23451                           
 23452                           ;stkvar	_f @ sp[(-8)+0]
 23453  01F7C6  0EFA               	movlw	250
 23454  01F7C8  24E1               	addwf	fsr1l,w,c
 23455  01F7CA  6ED9               	movwf	fsr2l,c
 23456  01F7CC  0EFF               	movlw	255
 23457  01F7CE  20E2               	addwfc	fsr1h,w,c
 23458  01F7D0  6EDA               	movwf	fsr2h,c
 23459  01F7D2  0E00               	movlw	0
 23460  01F7D4  6EDE               	movwf	postinc2,c
 23461  01F7D6  0E00               	movlw	0
 23462  01F7D8  6EDD               	movwf	postdec2,c
 23463                           
 23464                           ;stkvar	_f @ sp[(-8)+0]
 23465  01F7DA  0EFC               	movlw	252
 23466  01F7DC  24E1               	addwf	fsr1l,w,c
 23467  01F7DE  6ED9               	movwf	fsr2l,c
 23468  01F7E0  0EFF               	movlw	255
 23469  01F7E2  20E2               	addwfc	fsr1h,w,c
 23470  01F7E4  6EDA               	movwf	fsr2h,c
 23471  01F7E6  0E00               	movlw	0
 23472  01F7E8  6EDE               	movwf	postinc2,c
 23473  01F7EA  0E00               	movlw	0
 23474  01F7EC  6EDD               	movwf	postdec2,c
 23475                           
 23476                           ;stkvar	_ap @ sp[(-8)+6]
 23477  01F7EE  0EFE               	movlw	254
 23478  01F7F0  24E1               	addwf	fsr1l,w,c
 23479  01F7F2  6E2A               	movwf	btemp^0,c
 23480  01F7F4  0EFF               	movlw	255
 23481  01F7F6  20E2               	addwfc	fsr1h,w,c
 23482  01F7F8  6E2B               	movwf	(btemp+1)^0,c
 23483  01F7FA  0060  F0AB  FFE6   	movff	btemp,postinc1
 23484  01F800  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23485                           
 23486                           ;stkvar	_fmt @ sp[(-10)+-5]
 23487  01F806  0EF1               	movlw	-15
 23488  01F808  006F FF8F FFE6     	movff	plusw1,postinc1
 23489  01F80E  006F FF8F FFE6     	movff	plusw1,postinc1
 23490                           
 23491                           ;stkvar	_f @ sp[(-12)+0]
 23492  01F814  0EF4               	movlw	244
 23493  01F816  24E1               	addwf	fsr1l,w,c
 23494  01F818  6E2A               	movwf	btemp^0,c
 23495  01F81A  0EFF               	movlw	255
 23496  01F81C  20E2               	addwfc	fsr1h,w,c
 23497  01F81E  6E2B               	movwf	(btemp+1)^0,c
 23498  01F820  0060  F0AB  FFE6   	movff	btemp,postinc1
 23499  01F826  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23500  01F82C  ECED  F002         	call	_vfprintf	;wreg free
 23501                           
 23502                           ; BSR set to: 0
 23503                           ;stkvar	_f @ sp[(-8)+0]
 23504  01F830  0EFA               	movlw	250
 23505  01F832  24E1               	addwf	fsr1l,w,c
 23506  01F834  6ED9               	movwf	fsr2l,c
 23507  01F836  0EFF               	movlw	255
 23508  01F838  20E2               	addwfc	fsr1h,w,c
 23509  01F83A  6EDA               	movwf	fsr2h,c
 23510  01F83C  006F FF78  F034    	movff	postinc2,btemp+10
 23511  01F842  006F FF74  F035    	movff	postdec2,btemp+11
 23512                           
 23513                           ;stkvar	_s @ sp[(-8)+-3]
 23514  01F848  0EF5               	movlw	-11
 23515  01F84A  006F FF8C  F032    	movff	plusw1,btemp+8
 23516  01F850  0EF6               	movlw	-10
 23517  01F852  006F FF8C  F033    	movff	plusw1,btemp+9
 23518  01F858  5034               	movf	(btemp+10)^0,w,c
 23519  01F85A  2432               	addwf	(btemp+8)^0,w,c
 23520  01F85C  6ED9               	movwf	fsr2l,c
 23521  01F85E  5035               	movf	(btemp+11)^0,w,c
 23522  01F860  2033               	addwfc	(btemp+9)^0,w,c
 23523  01F862  6EDA               	movwf	fsr2h,c
 23524  01F864  0E00               	movlw	0
 23525  01F866  6EDF               	movwf	indf2,c
 23526                           
 23527                           ; BSR set to: 0
 23528                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 23529  01F868  0EF8               	movlw	248
 23530  01F86A  26E1               	addwf	fsr1l,f,c
 23531  01F86C  0EFF               	movlw	255
 23532  01F86E  22E2               	addwfc	fsr1h,f,c
 23533  01F870  52E5               	movf	postdec1,f,c
 23534  01F872  50E7               	movf	indf1,w,c
 23535  01F874  5EE1               	subwf	fsr1l,f,c
 23536  01F876  0E00               	movlw	0
 23537  01F878  5AE2               	subwfb	fsr1h,f,c
 23538  01F87A  0012               	return		;funcret
 23539  01F87C                     __end_of_sprintf:
 23540                           	opt callstack 0
 23541                           
 23542 ;; *************** function _get_vterm_ptr *****************
 23543 ;; Defined at:
 23544 ;;		line 119 in file "mconfig.c"
 23545 ;; Parameters:    Size  Location     Type
 23546 ;;  line            1  [STACK] const unsigned char 
 23547 ;;  vterm           1  [STACK] const unsigned char 
 23548 ;; Auto vars:     Size  Location     Type
 23549 ;;		None
 23550 ;; Return value:  Size  Location     Type
 23551 ;;                  2  [STACK] PTR unsigned char 
 23552 ;; Registers used:
 23553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23554 ;; Tracked objects:
 23555 ;;		On entry : 0/2
 23556 ;;		On exit  : 0/0
 23557 ;;		Unchanged: 0/0
 23558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23563 ;;Total ram usage:        0 bytes
 23564 ;; Hardware stack levels used:    1
 23565 ;; Hardware stack levels required when called:   15
 23566 ;; This function calls:
 23567 ;;		Nothing
 23568 ;; This function is called by:
 23569 ;;		_main
 23570 ;;		_current_sensor_cal
 23571 ;;		_display_history
 23572 ;;		_check_help
 23573 ;;		_vterm_dump
 23574 ;; This function uses a reentrant model
 23575 ;;
 23576                           
 23577                           	psect	text78
 23578  01FFD2                     __ptext78:
 23579                           	opt callstack 0
 23580  01FFD2                     _get_vterm_ptr:
 23581                           	opt callstack 15
 23582                           
 23583                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 23584                           ;stkvar	_vterm @ sp[(0)+-2]
 23585                           
 23586                           ; BSR set to: 0
 23587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23588                           ;incstack = 0
 23589  01FFD2  0EFE               	movlw	-2
 23590  01FFD4  50E3               	movf	plusw1,w,c
 23591  01FFD6  0B03               	andlw	3
 23592  01FFD8  0DA0               	mullw	160
 23593  01FFDA  0E3F               	movlw	low _D
 23594  01FFDC  6E2A               	movwf	btemp^0,c
 23595  01FFDE  0E0A               	movlw	high _D
 23596  01FFE0  6E2B               	movwf	(btemp+1)^0,c
 23597  01FFE2  50F3               	movf	243,w,c
 23598  01FFE4  262A               	addwf	btemp^0,f,c
 23599  01FFE6  50F4               	movf	244,w,c
 23600  01FFE8  222B               	addwfc	(btemp+1)^0,f,c
 23601                           
 23602                           ;stkvar	_line @ sp[(0)+-1]
 23603  01FFEA  0EFF               	movlw	-1
 23604  01FFEC  50E3               	movf	plusw1,w,c
 23605  01FFEE  0B03               	andlw	3
 23606  01FFF0  0D28               	mullw	40
 23607  01FFF2  50F3               	movf	243,w,c
 23608  01FFF4  262A               	addwf	btemp^0,f,c
 23609  01FFF6  50F4               	movf	244,w,c
 23610  01FFF8  222B               	addwfc	(btemp+1)^0,f,c
 23611                           
 23612                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23613  01FFFA  52E5               	movf	postdec1,f,c
 23614  01FFFC  52E5               	movf	postdec1,f,c
 23615  01FFFE  0012               	return		;funcret
 23616  020000                     __end_of_get_vterm_ptr:
 23617                           	opt callstack 0
 23618                           
 23619 ;; *************** function _WaitMs *****************
 23620 ;; Defined at:
 23621 ;;		line 32 in file "timers.c"
 23622 ;; Parameters:    Size  Location     Type
 23623 ;;  numMilliseco    2  [STACK] const unsigned short 
 23624 ;; Auto vars:     Size  Location     Type
 23625 ;;		None
 23626 ;; Return value:  Size  Location     Type
 23627 ;;                  1  [STACK] void 
 23628 ;; Registers used:
 23629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23630 ;; Tracked objects:
 23631 ;;		On entry : 0/2
 23632 ;;		On exit  : 0/0
 23633 ;;		Unchanged: 0/0
 23634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23639 ;;Total ram usage:        0 bytes
 23640 ;; Hardware stack levels used:    1
 23641 ;; Hardware stack levels required when called:   16
 23642 ;; This function calls:
 23643 ;;		_StartTimer
 23644 ;;		_TimerDone
 23645 ;; This function is called by:
 23646 ;;		_main
 23647 ;;		_current_sensor_cal
 23648 ;;		_display_history
 23649 ;;		_vterm_dump
 23650 ;; This function uses a reentrant model
 23651 ;;
 23652                           
 23653                           	psect	text79
 23654  001E0E                     __ptext79:
 23655                           	opt callstack 0
 23656  001E0E                     _WaitMs:
 23657                           	opt callstack 13
 23658                           
 23659                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 23660                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 23661                           
 23662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23663                           ;incstack = 0
 23664  001E0E  0EFE               	movlw	-2
 23665  001E10  006F FF8F FFE6     	movff	plusw1,postinc1
 23666  001E16  006F FF8F FFE6     	movff	plusw1,postinc1
 23667  001E1C  0E00               	movlw	0
 23668  001E1E  6EE6               	movwf	postinc1,c
 23669  001E20  ECFA  F00D         	call	_StartTimer	;wreg free
 23670                           
 23671                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23672  001E24  D005               	goto	l12766
 23673  001E26                     l1761:
 23674                           
 23675                           ;timers.c: 36:   __nop();
 23676  001E26  F000               	nop	
 23677                           
 23678                           ;timers.c: 37:   __nop();
 23679  001E28  F000               	nop	
 23680                           
 23681                           ;timers.c: 38:   __nop();
 23682  001E2A  F000               	nop	
 23683                           
 23684                           ;timers.c: 39:   __nop();
 23685  001E2C  F000               	nop	
 23686  001E2E  0004               	clrwdt		;# 
 23687  001E30                     l12766:
 23688                           
 23689                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23690  001E30  0E00               	movlw	0
 23691  001E32  6EE6               	movwf	postinc1,c
 23692  001E34  EC6F  F010         	call	_TimerDone	;wreg free
 23693  001E38  502A               	movf	btemp^0,w,c
 23694  001E3A  B4D8               	btfsc	status,2,c
 23695  001E3C  D7F4               	goto	l1761
 23696                           
 23697                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23698  001E3E  52E5               	movf	postdec1,f,c
 23699  001E40  52E5               	movf	postdec1,f,c
 23700  001E42  0012               	return		;funcret
 23701  001E44                     __end_of_WaitMs:
 23702                           	opt callstack 0
 23703                           
 23704 ;; *************** function _update_lcd *****************
 23705 ;; Defined at:
 23706 ;;		line 85 in file "mconfig.c"
 23707 ;; Parameters:    Size  Location     Type
 23708 ;;  vterm           1  [STACK] unsigned char 
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;		None
 23711 ;; Return value:  Size  Location     Type
 23712 ;;                  1  [STACK] unsigned char 
 23713 ;; Registers used:
 23714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23715 ;; Tracked objects:
 23716 ;;		On entry : 0/0
 23717 ;;		On exit  : 0/0
 23718 ;;		Unchanged: 0/0
 23719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23724 ;;Total ram usage:        0 bytes
 23725 ;; Hardware stack levels used:    1
 23726 ;; Hardware stack levels required when called:   26
 23727 ;; This function calls:
 23728 ;;		_eaDogM_WriteStringAtPos
 23729 ;;		_wait_lcd_done
 23730 ;; This function is called by:
 23731 ;;		_main
 23732 ;;		_current_sensor_cal
 23733 ;;		_display_history
 23734 ;;		_check_help
 23735 ;; This function uses a reentrant model
 23736 ;;
 23737                           
 23738                           	psect	text80
 23739  01E8D6                     __ptext80:
 23740                           	opt callstack 0
 23741  01E8D6                     _update_lcd:
 23742                           	opt callstack 4
 23743                           
 23744                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 23745                           ;stkvar	_vterm @ sp[(0)+-1]
 23746                           
 23747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23748                           ;incstack = 0
 23749  01E8D6  0EFF               	movlw	-1
 23750  01E8D8  006F FF8C  F02A    	movff	plusw1,btemp
 23751  01E8DE  0E03               	movlw	3
 23752  01E8E0  162A               	andwf	btemp^0,f,c
 23753  01E8E2  0EFF               	movlw	-1
 23754  01E8E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 23755                           
 23756                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 23757  01E8EA  EE23  F0BF         	lfsr	2,_D+640
 23758  01E8EE  A0DF               	btfss	indf2,0,c
 23759  01E8F0  D004               	goto	l16840
 23760                           
 23761                           ;stkvar	_vterm @ sp[(0)+-1]
 23762  01E8F2  0EFF               	movlw	-1
 23763  01E8F4  50E3               	movf	plusw1,w,c
 23764  01E8F6  B4D8               	btfsc	status,2,c
 23765  01E8F8  D09C               	goto	l1837
 23766  01E8FA                     l16840:
 23767                           
 23768                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 23769                           ;stkvar	_vterm @ sp[(0)+-1]
 23770  01E8FA  0EFF               	movlw	-1
 23771  01E8FC  50E3               	movf	plusw1,w,c
 23772  01E8FE  0DA0               	mullw	160
 23773  01E900  0E53               	movlw	low (_D+20)
 23774  01E902  24F3               	addwf	243,w,c
 23775  01E904  6ED9               	movwf	fsr2l,c
 23776  01E906  0E0A               	movlw	high (_D+20)
 23777  01E908  20F4               	addwfc	prodh,w,c
 23778  01E90A  6EDA               	movwf	fsr2h,c
 23779  01E90C  0E00               	movlw	0
 23780  01E90E  6EDF               	movwf	indf2,c
 23781                           
 23782                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 23783                           ;stkvar	_vterm @ sp[(0)+-1]
 23784  01E910  0EFF               	movlw	-1
 23785  01E912  50E3               	movf	plusw1,w,c
 23786  01E914  0DA0               	mullw	160
 23787  01E916  0E7B               	movlw	low (_D+60)
 23788  01E918  24F3               	addwf	243,w,c
 23789  01E91A  6ED9               	movwf	fsr2l,c
 23790  01E91C  0E0A               	movlw	high (_D+60)
 23791  01E91E  20F4               	addwfc	prodh,w,c
 23792  01E920  6EDA               	movwf	fsr2h,c
 23793  01E922  0E00               	movlw	0
 23794  01E924  6EDF               	movwf	indf2,c
 23795                           
 23796                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 23797                           ;stkvar	_vterm @ sp[(0)+-1]
 23798  01E926  0EFF               	movlw	-1
 23799  01E928  50E3               	movf	plusw1,w,c
 23800  01E92A  0DA0               	mullw	160
 23801  01E92C  0EA3               	movlw	low (_D+100)
 23802  01E92E  24F3               	addwf	243,w,c
 23803  01E930  6ED9               	movwf	fsr2l,c
 23804  01E932  0E0A               	movlw	high (_D+100)
 23805  01E934  20F4               	addwfc	prodh,w,c
 23806  01E936  6EDA               	movwf	fsr2h,c
 23807  01E938  0E00               	movlw	0
 23808  01E93A  6EDF               	movwf	indf2,c
 23809                           
 23810                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 23811                           ;stkvar	_vterm @ sp[(0)+-1]
 23812  01E93C  0EFF               	movlw	-1
 23813  01E93E  50E3               	movf	plusw1,w,c
 23814  01E940  0DA0               	mullw	160
 23815  01E942  0ECB               	movlw	low (_D+140)
 23816  01E944  24F3               	addwf	243,w,c
 23817  01E946  6ED9               	movwf	fsr2l,c
 23818  01E948  0E0A               	movlw	high (_D+140)
 23819  01E94A  20F4               	addwfc	prodh,w,c
 23820  01E94C  6EDA               	movwf	fsr2h,c
 23821  01E94E  0E00               	movlw	0
 23822  01E950  6EDF               	movwf	indf2,c
 23823                           
 23824                           ;mconfig.c: 96:  wait_lcd_done();
 23825  01E952  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23826                           
 23827                           ; BSR set to: 0
 23828                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 23829                           ;stkvar	_vterm @ sp[(0)+-1]
 23830  01E956  0EFF               	movlw	-1
 23831  01E958  50E3               	movf	plusw1,w,c
 23832  01E95A  0DA0               	mullw	160
 23833  01E95C  0E3F               	movlw	low _D
 23834  01E95E  6E34               	movwf	(btemp+10)^0,c
 23835  01E960  0E0A               	movlw	high _D
 23836  01E962  6E35               	movwf	(btemp+11)^0,c
 23837  01E964  50F3               	movf	243,w,c
 23838  01E966  2634               	addwf	(btemp+10)^0,f,c
 23839  01E968  50F4               	movf	244,w,c
 23840  01E96A  2235               	addwfc	(btemp+11)^0,f,c
 23841  01E96C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23842  01E972  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23843  01E978  0E00               	movlw	0
 23844  01E97A  6EE6               	movwf	postinc1,c
 23845  01E97C  0E00               	movlw	0
 23846  01E97E  6EE6               	movwf	postinc1,c
 23847  01E980  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23848                           
 23849                           ; BSR set to: 59
 23850                           ;mconfig.c: 98:  wait_lcd_done();
 23851  01E984  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23852                           
 23853                           ; BSR set to: 0
 23854                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 23855                           ;stkvar	_vterm @ sp[(0)+-1]
 23856  01E988  0EFF               	movlw	-1
 23857  01E98A  50E3               	movf	plusw1,w,c
 23858  01E98C  0DA0               	mullw	160
 23859  01E98E  0E3F               	movlw	low _D
 23860  01E990  6E34               	movwf	(btemp+10)^0,c
 23861  01E992  0E0A               	movlw	high _D
 23862  01E994  6E35               	movwf	(btemp+11)^0,c
 23863  01E996  0E28               	movlw	40
 23864  01E998  2634               	addwf	(btemp+10)^0,f,c
 23865  01E99A  0E00               	movlw	0
 23866  01E99C  2235               	addwfc	(btemp+11)^0,f,c
 23867  01E99E  50F3               	movf	243,w,c
 23868  01E9A0  2634               	addwf	(btemp+10)^0,f,c
 23869  01E9A2  50F4               	movf	244,w,c
 23870  01E9A4  2235               	addwfc	(btemp+11)^0,f,c
 23871  01E9A6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23872  01E9AC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23873  01E9B2  0E00               	movlw	0
 23874  01E9B4  6EE6               	movwf	postinc1,c
 23875  01E9B6  0E01               	movlw	1
 23876  01E9B8  6EE6               	movwf	postinc1,c
 23877  01E9BA  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23878                           
 23879                           ; BSR set to: 59
 23880                           ;mconfig.c: 100:  wait_lcd_done();
 23881  01E9BE  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23882                           
 23883                           ; BSR set to: 0
 23884                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 23885                           ;stkvar	_vterm @ sp[(0)+-1]
 23886  01E9C2  0EFF               	movlw	-1
 23887  01E9C4  50E3               	movf	plusw1,w,c
 23888  01E9C6  0DA0               	mullw	160
 23889  01E9C8  0E3F               	movlw	low _D
 23890  01E9CA  6E34               	movwf	(btemp+10)^0,c
 23891  01E9CC  0E0A               	movlw	high _D
 23892  01E9CE  6E35               	movwf	(btemp+11)^0,c
 23893  01E9D0  0E50               	movlw	80
 23894  01E9D2  2634               	addwf	(btemp+10)^0,f,c
 23895  01E9D4  0E00               	movlw	0
 23896  01E9D6  2235               	addwfc	(btemp+11)^0,f,c
 23897  01E9D8  50F3               	movf	243,w,c
 23898  01E9DA  2634               	addwf	(btemp+10)^0,f,c
 23899  01E9DC  50F4               	movf	244,w,c
 23900  01E9DE  2235               	addwfc	(btemp+11)^0,f,c
 23901  01E9E0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23902  01E9E6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23903  01E9EC  0E00               	movlw	0
 23904  01E9EE  6EE6               	movwf	postinc1,c
 23905  01E9F0  0E02               	movlw	2
 23906  01E9F2  6EE6               	movwf	postinc1,c
 23907  01E9F4  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23908                           
 23909                           ; BSR set to: 59
 23910                           ;mconfig.c: 102:  wait_lcd_done();
 23911  01E9F8  ECF4  F011         	call	_wait_lcd_done	;wreg free
 23912                           
 23913                           ; BSR set to: 0
 23914                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 23915                           ;stkvar	_vterm @ sp[(0)+-1]
 23916  01E9FC  0EFF               	movlw	-1
 23917  01E9FE  50E3               	movf	plusw1,w,c
 23918  01EA00  0DA0               	mullw	160
 23919  01EA02  0E3F               	movlw	low _D
 23920  01EA04  6E34               	movwf	(btemp+10)^0,c
 23921  01EA06  0E0A               	movlw	high _D
 23922  01EA08  6E35               	movwf	(btemp+11)^0,c
 23923  01EA0A  0E78               	movlw	120
 23924  01EA0C  2634               	addwf	(btemp+10)^0,f,c
 23925  01EA0E  0E00               	movlw	0
 23926  01EA10  2235               	addwfc	(btemp+11)^0,f,c
 23927  01EA12  50F3               	movf	243,w,c
 23928  01EA14  2634               	addwf	(btemp+10)^0,f,c
 23929  01EA16  50F4               	movf	244,w,c
 23930  01EA18  2235               	addwfc	(btemp+11)^0,f,c
 23931  01EA1A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23932  01EA20  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23933  01EA26  0E00               	movlw	0
 23934  01EA28  6EE6               	movwf	postinc1,c
 23935  01EA2A  0E03               	movlw	3
 23936  01EA2C  6EE6               	movwf	postinc1,c
 23937  01EA2E  EC70  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23938  01EA32                     l1837:
 23939                           
 23940                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23941  01EA32  52E5               	movf	postdec1,f,c
 23942  01EA34  0012               	return		;funcret
 23943  01EA36                     __end_of_update_lcd:
 23944                           	opt callstack 0
 23945                           
 23946 ;; *************** function _eaDogM_WriteStringAtPos *****************
 23947 ;; Defined at:
 23948 ;;		line 195 in file "eadog.c"
 23949 ;; Parameters:    Size  Location     Type
 23950 ;;  r               1  [STACK] const unsigned char 
 23951 ;;  c               1  [STACK] const unsigned char 
 23952 ;;  strPtr          2  [STACK] PTR unsigned char 
 23953 ;;		 -> D.lcd(640), D(642), V(181), 
 23954 ;; Auto vars:     Size  Location     Type
 23955 ;;  row             1  [STACK] unsigned char 
 23956 ;; Return value:  Size  Location     Type
 23957 ;;                  1  [STACK] void 
 23958 ;; Registers used:
 23959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23960 ;; Tracked objects:
 23961 ;;		On entry : 3F/0
 23962 ;;		On exit  : 3F/3B
 23963 ;;		Unchanged: 0/0
 23964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23969 ;;Total ram usage:        0 bytes
 23970 ;; Hardware stack levels used:    1
 23971 ;; Hardware stack levels required when called:   25
 23972 ;; This function calls:
 23973 ;;		_eaDogM_WriteString
 23974 ;;		_send_lcd_cmd_dma
 23975 ;;		_send_lcd_data_dma
 23976 ;;		_wait_lcd_done
 23977 ;; This function is called by:
 23978 ;;		_update_lcd
 23979 ;;		_vterm_dump
 23980 ;; This function uses a reentrant model
 23981 ;;
 23982                           
 23983                           	psect	text81
 23984  000AE0                     __ptext81:
 23985                           	opt callstack 0
 23986  000AE0                     _eaDogM_WriteStringAtPos:
 23987                           	opt callstack 0
 23988                           
 23989                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23990  000AE0  52E6               	movf	postinc1,f,c
 23991                           
 23992                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 23993                           
 23994                           ;incstack = 0
 23995  000AE2  D013               	goto	l16786
 23996  000AE4                     l16774:
 23997                           
 23998                           ;eadog.c: 201:   row = 0x40;
 23999                           ;stkvar	_row @ sp[(-1)+0]
 24000  000AE4  0EFF               	movlw	-1
 24001  000AE6  6AE3               	clrf	plusw1,c
 24002  000AE8  8CE3               	bsf	plusw1,6,c
 24003                           
 24004                           ;eadog.c: 202:   break;
 24005  000AEA  D025               	goto	l16788
 24006  000AEC                     l16776:
 24007                           
 24008                           ;eadog.c: 204:   row = 0x14;
 24009                           ;stkvar	_row @ sp[(-1)+0]
 24010  000AEC  0EFF               	movlw	-1
 24011  000AEE  6AE3               	clrf	plusw1,c
 24012  000AF0  84E3               	bsf	plusw1,2,c
 24013  000AF2  88E3               	bsf	plusw1,4,c	;indir
 24014                           
 24015                           ;eadog.c: 205:   break;
 24016  000AF4  D020               	goto	l16788
 24017  000AF6                     l16778:
 24018                           
 24019                           ;eadog.c: 207:   row = 0x54;
 24020  000AF6  0E54               	movlw	84
 24021  000AF8  6E35               	movwf	(btemp+11)^0,c
 24022                           
 24023                           ;stkvar	_row @ sp[(-1)+0]
 24024  000AFA  0EFF               	movlw	-1
 24025  000AFC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24026                           
 24027                           ;eadog.c: 208:   break;
 24028  000B02  D019               	goto	l16788
 24029  000B04                     l16780:
 24030                           
 24031                           ;eadog.c: 210:   row = 0x00;
 24032                           ;stkvar	_row @ sp[(-1)+0]
 24033  000B04  0EFF               	movlw	-1
 24034  000B06  6AE3               	clrf	plusw1,c
 24035                           
 24036                           ;eadog.c: 211:   break;
 24037  000B08  D016               	goto	l16788
 24038  000B0A                     l16786:
 24039                           
 24040                           ;stkvar	_r @ sp[(-1)+-1]
 24041  000B0A  0EFE               	movlw	-2
 24042  000B0C  50E3               	movf	plusw1,w,c
 24043  000B0E  6E34               	movwf	(btemp+10)^0,c
 24044  000B10  6A35               	clrf	(btemp+11)^0,c
 24045                           
 24046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24047                           ; Switch size 1, requested type "simple"
 24048                           ; Number of cases is 1, Range of values is 0 to 0
 24049                           ; switch strategies available:
 24050                           ; Name         Instructions Cycles
 24051                           ; simple_byte            4     3 (average)
 24052                           ;	Chosen strategy is simple_byte
 24053  000B12  5035               	movf	(btemp+11)^0,w,c
 24054  000B14  0A00               	xorlw	0	; case 0
 24055  000B16  A4D8               	btfss	status,2,c
 24056  000B18  D7E5               	goto	l16774
 24057                           
 24058                           ; Switch size 1, requested type "simple"
 24059                           ; Number of cases is 4, Range of values is 0 to 3
 24060                           ; switch strategies available:
 24061                           ; Name         Instructions Cycles
 24062                           ; simple_byte           13     7 (average)
 24063                           ;	Chosen strategy is simple_byte
 24064  000B1A  5034               	movf	(btemp+10)^0,w,c
 24065  000B1C  0A00               	xorlw	0	; case 0
 24066  000B1E  B4D8               	btfsc	status,2,c
 24067  000B20  D7E1               	goto	l16774
 24068  000B22  0A01               	xorlw	1	; case 1
 24069  000B24  B4D8               	btfsc	status,2,c
 24070  000B26  D7E2               	goto	l16776
 24071  000B28  0A03               	xorlw	3	; case 2
 24072  000B2A  B4D8               	btfsc	status,2,c
 24073  000B2C  D7E4               	goto	l16778
 24074  000B2E  0A01               	xorlw	1	; case 3
 24075  000B30  B4D8               	btfsc	status,2,c
 24076  000B32  D7E8               	goto	l16780
 24077  000B34  D7D7               	goto	l16774
 24078  000B36                     l16788:
 24079                           
 24080                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 24081  000B36  0E45               	movlw	69
 24082  000B38  6EE6               	movwf	postinc1,c
 24083  000B3A  EC67  F012         	call	_send_lcd_cmd_dma	;wreg free
 24084                           
 24085                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 24086                           ;stkvar	_c @ sp[(-1)+-2]
 24087  000B3E  0EFD               	movlw	-3
 24088  000B40  006F FF8C  F035    	movff	plusw1,btemp+11
 24089                           
 24090                           ;stkvar	_row @ sp[(-1)+0]
 24091  000B46  0EFF               	movlw	-1
 24092  000B48  50E3               	movf	plusw1,w,c
 24093  000B4A  2435               	addwf	(btemp+11)^0,w,c
 24094  000B4C  6EE6               	movwf	postinc1,c
 24095  000B4E  EC0E  F00D         	call	_send_lcd_data_dma	;wreg free
 24096                           
 24097                           ; BSR set to: 59
 24098                           ;eadog.c: 218:  wait_lcd_done();
 24099  000B52  ECF4  F011         	call	_wait_lcd_done	;wreg free
 24100                           
 24101                           ; BSR set to: 0
 24102                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 24103                           ;stkvar	_strPtr @ sp[(-1)+-4]
 24104  000B56  0EFB               	movlw	-5
 24105  000B58  006F FF8F FFE6     	movff	plusw1,postinc1
 24106  000B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 24107  000B64  EC98  F003         	call	_eaDogM_WriteString	;wreg free
 24108                           
 24109                           ; BSR set to: 59
 24110                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 24111  000B68  0EFB               	movlw	251
 24112  000B6A  26E1               	addwf	fsr1l,f,c
 24113  000B6C  0EFF               	movlw	255
 24114  000B6E  22E2               	addwfc	fsr1h,f,c
 24115  000B70  0012               	return		;funcret
 24116  000B72                     __end_of_eaDogM_WriteStringAtPos:
 24117                           	opt callstack 0
 24118                           
 24119 ;; *************** function _send_lcd_cmd_dma *****************
 24120 ;; Defined at:
 24121 ;;		line 171 in file "eadog.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;  strPtr          1  [STACK] const unsigned char 
 24124 ;; Auto vars:     Size  Location     Type
 24125 ;;		None
 24126 ;; Return value:  Size  Location     Type
 24127 ;;                  1  [STACK] void 
 24128 ;; Registers used:
 24129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24130 ;; Tracked objects:
 24131 ;;		On entry : 0/3D
 24132 ;;		On exit  : 3F/0
 24133 ;;		Unchanged: 0/0
 24134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24139 ;;Total ram usage:        0 bytes
 24140 ;; Hardware stack levels used:    1
 24141 ;; Hardware stack levels required when called:   18
 24142 ;; This function calls:
 24143 ;;		_send_lcd_data_dma
 24144 ;;		_wait_lcd_done
 24145 ;; This function is called by:
 24146 ;;		_eaDogM_WriteStringAtPos
 24147 ;;		_eaDogM_WriteCommand
 24148 ;; This function uses a reentrant model
 24149 ;;
 24150                           
 24151                           	psect	text82
 24152  0024CE                     __ptext82:
 24153                           	opt callstack 0
 24154  0024CE                     _send_lcd_cmd_dma:
 24155                           	opt callstack 10
 24156                           
 24157                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 24158                           
 24159                           ; BSR set to: 59
 24160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24161                           ;incstack = 0
 24162  0024CE  0EFE               	movlw	254
 24163  0024D0  6EE6               	movwf	postinc1,c
 24164  0024D2  EC0E  F00D         	call	_send_lcd_data_dma	;wreg free
 24165                           
 24166                           ; BSR set to: 59
 24167                           ;eadog.c: 174:  wait_lcd_done();
 24168  0024D6  ECF4  F011         	call	_wait_lcd_done	;wreg free
 24169                           
 24170                           ; BSR set to: 0
 24171                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 24172                           ;stkvar	_strPtr @ sp[(0)+-1]
 24173  0024DA  0EFF               	movlw	-1
 24174  0024DC  50E3               	movf	plusw1,w,c
 24175  0024DE  6EE6               	movwf	postinc1,c
 24176  0024E0  EC0E  F00D         	call	_send_lcd_data_dma	;wreg free
 24177                           
 24178                           ;eadog.c: 176:  wait_lcd_done();
 24179  0024E4  ECF4  F011         	call	_wait_lcd_done	;wreg free
 24180                           
 24181                           ; BSR set to: 0
 24182                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24183  0024E8  52E5               	movf	postdec1,f,c
 24184  0024EA  0012               	return		;funcret
 24185  0024EC                     __end_of_send_lcd_cmd_dma:
 24186                           	opt callstack 0
 24187                           
 24188 ;; *************** function _wait_lcd_done *****************
 24189 ;; Defined at:
 24190 ;;		line 443 in file "eadog.c"
 24191 ;; Parameters:    Size  Location     Type
 24192 ;;		None
 24193 ;; Auto vars:     Size  Location     Type
 24194 ;;		None
 24195 ;; Return value:  Size  Location     Type
 24196 ;;                  1  [STACK] void 
 24197 ;; Registers used:
 24198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 24199 ;; Tracked objects:
 24200 ;;		On entry : 0/2
 24201 ;;		On exit  : 3F/0
 24202 ;;		Unchanged: 0/0
 24203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24208 ;;Total ram usage:        0 bytes
 24209 ;; Hardware stack levels used:    1
 24210 ;; Hardware stack levels required when called:   16
 24211 ;; This function calls:
 24212 ;;		_wdtdelay
 24213 ;; This function is called by:
 24214 ;;		_main
 24215 ;;		_send_lcd_cmd_dma
 24216 ;;		_eaDogM_WriteStringAtPos
 24217 ;;		_update_lcd
 24218 ;;		_vterm_dump
 24219 ;; This function uses a reentrant model
 24220 ;;
 24221                           
 24222                           	psect	text83
 24223  0023E8                     __ptext83:
 24224                           	opt callstack 0
 24225  0023E8                     _wait_lcd_done:
 24226                           	opt callstack 14
 24227                           
 24228                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 24229                           
 24230                           ; BSR set to: 0
 24231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24232                           ;incstack = 0
 24233  0023E8  0100               	movlb	0	; () banked
 24234  0023EA  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 24235  0023EC  D7FD               	goto	_wait_lcd_done
 24236  0023EE                     u10840:
 24237  0023EE  013D               	movlb	61	; () banked
 24238  0023F0  AB17               	btfss	23,5,b	;volatile
 24239  0023F2  D7FD               	goto	u10840
 24240                           
 24241                           ; BSR set to: 61
 24242                           ;eadog.c: 447:  wdtdelay(50);
 24243  0023F4  0E32               	movlw	50
 24244  0023F6  6EE6               	movwf	postinc1,c
 24245  0023F8  0E00               	movlw	0
 24246  0023FA  6EE6               	movwf	postinc1,c
 24247  0023FC  0E00               	movlw	0
 24248  0023FE  6EE6               	movwf	postinc1,c
 24249  002400  0E00               	movlw	0
 24250  002402  6EE6               	movwf	postinc1,c
 24251  002404  EC59  F00B         	call	_wdtdelay	;wreg free
 24252                           
 24253                           ; BSR set to: 0
 24254                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24255  002408  0012               	return		;funcret
 24256  00240A                     __end_of_wait_lcd_done:
 24257                           	opt callstack 0
 24258                           
 24259 ;; *************** function _wdtdelay *****************
 24260 ;; Defined at:
 24261 ;;		line 23 in file "eadog.c"
 24262 ;; Parameters:    Size  Location     Type
 24263 ;;  delay           4  [STACK] const unsigned long 
 24264 ;; Auto vars:     Size  Location     Type
 24265 ;;		None
 24266 ;; Return value:  Size  Location     Type
 24267 ;;                  1  [STACK] void 
 24268 ;; Registers used:
 24269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 24270 ;; Tracked objects:
 24271 ;;		On entry : 2/3D
 24272 ;;		On exit  : 3F/0
 24273 ;;		Unchanged: 0/0
 24274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24279 ;;Total ram usage:        0 bytes
 24280 ;; Hardware stack levels used:    1
 24281 ;; Hardware stack levels required when called:   15
 24282 ;; This function calls:
 24283 ;;		Nothing
 24284 ;; This function is called by:
 24285 ;;		_init_display
 24286 ;;		_send_lcd_data
 24287 ;;		_send_lcd_cmd
 24288 ;;		_send_lcd_cmd_long
 24289 ;;		_wait_lcd_done
 24290 ;; This function uses a reentrant model
 24291 ;;
 24292                           
 24293                           	psect	text84
 24294  0016B2                     __ptext84:
 24295                           	opt callstack 0
 24296  0016B2                     _wdtdelay:
 24297                           	opt callstack 14
 24298                           
 24299                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 24300                           
 24301                           ; BSR set to: 0
 24302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24303                           ;incstack = 0
 24304  0016B2  0100               	movlb	0	; () banked
 24305  0016B4  6B90               	clrf	wdtdelay@dcount& (0+255),b
 24306  0016B6  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 24307  0016B8  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 24308  0016BA  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 24309  0016BC                     l1614:
 24310                           
 24311                           ; BSR set to: 0
 24312                           ;eadog.c: 28:   __nop();
 24313  0016BC  F000               	nop	
 24314  0016BE  0004               	clrwdt		;# 
 24315                           
 24316                           ;eadog.c: 30:  };
 24317  0016C0  0E01               	movlw	1
 24318  0016C2  0100               	movlb	0	; () banked
 24319  0016C4  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 24320  0016C6  0E00               	movlw	0
 24321  0016C8  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 24322  0016CA  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 24323  0016CC  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 24324                           
 24325                           ; BSR set to: 0
 24326                           ;stkvar	_delay @ sp[(0)+-4]
 24327  0016CE  0EFC               	movlw	-4
 24328  0016D0  006F FF8C  F02A    	movff	plusw1,btemp
 24329  0016D6  5190               	movf	wdtdelay@dcount& (0+255),w,b
 24330  0016D8  5C2A               	subwf	btemp^0,w,c
 24331  0016DA  0EFD               	movlw	-3
 24332  0016DC  006F FF8C  F02A    	movff	plusw1,btemp
 24333  0016E2  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 24334  0016E4  582A               	subwfb	btemp^0,w,c
 24335  0016E6  0EFE               	movlw	-2
 24336  0016E8  006F FF8C  F02A    	movff	plusw1,btemp
 24337  0016EE  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 24338  0016F0  582A               	subwfb	btemp^0,w,c
 24339  0016F2  0EFF               	movlw	-1
 24340  0016F4  006F FF8C  F02A    	movff	plusw1,btemp
 24341  0016FA  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 24342  0016FC  582A               	subwfb	btemp^0,w,c
 24343  0016FE  B0D8               	btfsc	status,0,c
 24344  001700  D7DD               	goto	l1614
 24345                           
 24346                           ; BSR set to: 0
 24347                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 24348  001702  52E5               	movf	postdec1,f,c
 24349  001704  52E5               	movf	postdec1,f,c
 24350  001706  52E5               	movf	postdec1,f,c
 24351  001708  52E5               	movf	postdec1,f,c
 24352  00170A  0012               	return		;funcret
 24353  00170C                     __end_of_wdtdelay:
 24354                           	opt callstack 0
 24355                           
 24356 ;; *************** function _send_lcd_data_dma *****************
 24357 ;; Defined at:
 24358 ;;		line 182 in file "eadog.c"
 24359 ;; Parameters:    Size  Location     Type
 24360 ;;  strPtr          1  [STACK] const unsigned char 
 24361 ;; Auto vars:     Size  Location     Type
 24362 ;;		None
 24363 ;; Return value:  Size  Location     Type
 24364 ;;                  1  [STACK] void 
 24365 ;; Registers used:
 24366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24367 ;; Tracked objects:
 24368 ;;		On entry : 0/0
 24369 ;;		On exit  : 3F/3B
 24370 ;;		Unchanged: 0/0
 24371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24376 ;;Total ram usage:        0 bytes
 24377 ;; Hardware stack levels used:    1
 24378 ;; Hardware stack levels required when called:   17
 24379 ;; This function calls:
 24380 ;;		_ringBufS_flush
 24381 ;;		_ringBufS_put_dma
 24382 ;;		_start_lcd
 24383 ;;		_wait_lcd_set
 24384 ;; This function is called by:
 24385 ;;		_send_lcd_cmd_dma
 24386 ;;		_eaDogM_WriteStringAtPos
 24387 ;; This function uses a reentrant model
 24388 ;;
 24389                           
 24390                           	psect	text85
 24391  001A1C                     __ptext85:
 24392                           	opt callstack 0
 24393  001A1C                     _send_lcd_data_dma:
 24394                           	opt callstack 11
 24395                           
 24396                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 24397                           
 24398                           ; BSR set to: 0
 24399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24400                           ;incstack = 0
 24401  001A1C  EC94  F013         	call	_wait_lcd_set	;wreg free
 24402                           
 24403                           ; BSR set to: 0
 24404                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 24405  001A20  0E00               	movlw	0
 24406  001A22  6EE6               	movwf	postinc1,c
 24407  001A24  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24408  001A2A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24409  001A30  ECB9  F005         	call	_ringBufS_flush	;wreg free
 24410  001A34  94BC               	bcf	188,2,c	;volatile
 24411                           
 24412                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 24413  001A36  013B               	movlb	59	; () banked
 24414  001A38  9FFC               	bcf	252,7,b	;volatile
 24415                           
 24416                           ; BSR set to: 59
 24417                           ;eadog.c: 189:  DMA1SSZ = 1;
 24418  001A3A  0E00               	movlw	0
 24419  001A3C  6FF8               	movwf	248,b	;volatile
 24420  001A3E  0E01               	movlw	1
 24421  001A40  6FF7               	movwf	247,b	;volatile
 24422                           
 24423                           ; BSR set to: 59
 24424                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 24425  001A42  8FFC               	bsf	252,7,b	;volatile
 24426                           
 24427                           ; BSR set to: 59
 24428                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 24429                           ;stkvar	_strPtr @ sp[(0)+-1]
 24430  001A44  0EFF               	movlw	-1
 24431  001A46  50E3               	movf	plusw1,w,c
 24432  001A48  6EE6               	movwf	postinc1,c
 24433  001A4A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24434  001A50  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24435  001A56  EC43  F003         	call	_ringBufS_put_dma	;wreg free
 24436                           
 24437                           ;eadog.c: 192:  start_lcd();
 24438  001A5A  EC97  F013         	call	_start_lcd	;wreg free
 24439                           
 24440                           ; BSR set to: 59
 24441                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 24442  001A5E  52E5               	movf	postdec1,f,c
 24443  001A60  0012               	return		;funcret
 24444  001A62                     __end_of_send_lcd_data_dma:
 24445                           	opt callstack 0
 24446                           
 24447 ;; *************** function _eaDogM_WriteString *****************
 24448 ;; Defined at:
 24449 ;;		line 151 in file "eadog.c"
 24450 ;; Parameters:    Size  Location     Type
 24451 ;;  strPtr          2  [STACK] PTR unsigned char 
 24452 ;;		 -> D.lcd(640), D(642), V(181), 
 24453 ;; Auto vars:     Size  Location     Type
 24454 ;;		None
 24455 ;; Return value:  Size  Location     Type
 24456 ;;                  1  [STACK] void 
 24457 ;; Registers used:
 24458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24459 ;; Tracked objects:
 24460 ;;		On entry : 3F/0
 24461 ;;		On exit  : 3F/3B
 24462 ;;		Unchanged: 0/0
 24463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24468 ;;Total ram usage:        0 bytes
 24469 ;; Hardware stack levels used:    1
 24470 ;; Hardware stack levels required when called:   24
 24471 ;; This function calls:
 24472 ;;		_printf
 24473 ;;		_ringBufS_flush
 24474 ;;		_start_lcd
 24475 ;;		_strlen
 24476 ;;		_wait_lcd_set
 24477 ;; This function is called by:
 24478 ;;		_eaDogM_WriteStringAtPos
 24479 ;; This function uses a reentrant model
 24480 ;;
 24481                           
 24482                           	psect	text86
 24483  000730                     __ptext86:
 24484                           	opt callstack 0
 24485  000730                     _eaDogM_WriteString:
 24486                           	opt callstack 4
 24487                           
 24488                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 24489                           
 24490                           ; BSR set to: 59
 24491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24492                           ;incstack = 0
 24493  000730  EC94  F013         	call	_wait_lcd_set	;wreg free
 24494                           
 24495                           ; BSR set to: 0
 24496                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 24497  000734  0E00               	movlw	0
 24498  000736  6EE6               	movwf	postinc1,c
 24499  000738  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24500  00073E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24501  000744  ECB9  F005         	call	_ringBufS_flush	;wreg free
 24502  000748  94BC               	bcf	188,2,c	;volatile
 24503                           
 24504                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 24505                           ;stkvar	_strPtr @ sp[(0)+-2]
 24506  00074A  0EFE               	movlw	-2
 24507  00074C  006F FF8F FFE6     	movff	plusw1,postinc1
 24508  000752  006F FF8F FFE6     	movff	plusw1,postinc1
 24509  000758  EC3D  F004         	call	_strlen	;wreg free
 24510  00075C  502B               	movf	(btemp+1)^0,w,c
 24511  00075E  E104               	bnz	u16070
 24512  000760  0E41               	movlw	65
 24513  000762  5C2A               	subwf	btemp^0,w,c
 24514  000764  A0D8               	btfss	status,0,c
 24515  000766  D010               	goto	l16518
 24516  000768                     u16070:
 24517                           
 24518                           ;stkvar	_strPtr @ sp[(0)+-2]
 24519  000768  0EFE               	movlw	-2
 24520  00076A  006F FF8C  F034    	movff	plusw1,btemp+10
 24521  000770  0EFF               	movlw	-1
 24522  000772  006F FF8C  F035    	movff	plusw1,btemp+11
 24523  000778  0E40               	movlw	64
 24524  00077A  2434               	addwf	(btemp+10)^0,w,c
 24525  00077C  6ED9               	movwf	fsr2l,c
 24526  00077E  0E00               	movlw	0
 24527  000780  2035               	addwfc	(btemp+11)^0,w,c
 24528  000782  6EDA               	movwf	fsr2h,c
 24529  000784  0E00               	movlw	0
 24530  000786  6EDF               	movwf	indf2,c
 24531  000788                     l16518:
 24532                           
 24533                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 24534  000788  013B               	movlb	59	; () banked
 24535  00078A  9FFC               	bcf	252,7,b	;volatile
 24536                           
 24537                           ; BSR set to: 59
 24538                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 24539                           ;stkvar	_strPtr @ sp[(0)+-2]
 24540  00078C  0EFE               	movlw	-2
 24541  00078E  006F FF8F FFE6     	movff	plusw1,postinc1
 24542  000794  006F FF8F FFE6     	movff	plusw1,postinc1
 24543  00079A  EC3D  F004         	call	_strlen	;wreg free
 24544  00079E  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 24545  0007A4  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 24546                           
 24547                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 24548  0007AA  013B               	movlb	59	; () banked
 24549  0007AC  8FFC               	bsf	252,7,b	;volatile
 24550                           
 24551                           ; BSR set to: 59
 24552                           ;eadog.c: 161:  printf("%s", strPtr);
 24553                           ;stkvar	_strPtr @ sp[(0)+-2]
 24554  0007AE  0EFE               	movlw	-2
 24555  0007B0  006F FF8F FFE6     	movff	plusw1,postinc1
 24556  0007B6  006F FF8F FFE6     	movff	plusw1,postinc1
 24557  0007BC  0EFC               	movlw	low STR_69
 24558  0007BE  6EE6               	movwf	postinc1,c
 24559  0007C0  0EFF               	movlw	high STR_69
 24560  0007C2  6EE6               	movwf	postinc1,c
 24561  0007C4  0E04               	movlw	4
 24562  0007C6  6EE6               	movwf	postinc1,c
 24563  0007C8  EC6B  F00A         	call	_printf	;wreg free
 24564                           
 24565                           ; BSR set to: 0
 24566                           ;eadog.c: 162:  start_lcd();
 24567  0007CC  EC97  F013         	call	_start_lcd	;wreg free
 24568                           
 24569                           ; BSR set to: 59
 24570                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24571  0007D0  52E5               	movf	postdec1,f,c
 24572  0007D2  52E5               	movf	postdec1,f,c
 24573  0007D4  0012               	return		;funcret
 24574  0007D6                     __end_of_eaDogM_WriteString:
 24575                           	opt callstack 0
 24576                           
 24577 ;; *************** function _wait_lcd_set *****************
 24578 ;; Defined at:
 24579 ;;		line 433 in file "eadog.c"
 24580 ;; Parameters:    Size  Location     Type
 24581 ;;		None
 24582 ;; Auto vars:     Size  Location     Type
 24583 ;;		None
 24584 ;; Return value:  Size  Location     Type
 24585 ;;                  1  [STACK] void 
 24586 ;; Registers used:
 24587 ;;		None
 24588 ;; Tracked objects:
 24589 ;;		On entry : 0/0
 24590 ;;		On exit  : 3F/0
 24591 ;;		Unchanged: 0/0
 24592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24597 ;;Total ram usage:        0 bytes
 24598 ;; Hardware stack levels used:    1
 24599 ;; Hardware stack levels required when called:   15
 24600 ;; This function calls:
 24601 ;;		Nothing
 24602 ;; This function is called by:
 24603 ;;		_eaDogM_WriteString
 24604 ;;		_send_lcd_data_dma
 24605 ;; This function uses a reentrant model
 24606 ;;
 24607                           
 24608                           	psect	text87
 24609  002728                     __ptext87:
 24610                           	opt callstack 0
 24611  002728                     _wait_lcd_set:
 24612                           	opt callstack 12
 24613                           
 24614                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 24615                           
 24616                           ; BSR set to: 59
 24617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24618                           ;incstack = 0
 24619  002728  0100               	movlb	0	; () banked
 24620  00272A  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 24621                           
 24622                           ; BSR set to: 0
 24623                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24624  00272C  0012               	return		;funcret
 24625  00272E                     __end_of_wait_lcd_set:
 24626                           	opt callstack 0
 24627                           
 24628 ;; *************** function _start_lcd *****************
 24629 ;; Defined at:
 24630 ;;		line 428 in file "eadog.c"
 24631 ;; Parameters:    Size  Location     Type
 24632 ;;		None
 24633 ;; Auto vars:     Size  Location     Type
 24634 ;;		None
 24635 ;; Return value:  Size  Location     Type
 24636 ;;                  1  [STACK] void 
 24637 ;; Registers used:
 24638 ;;		None
 24639 ;; Tracked objects:
 24640 ;;		On entry : 0/3B
 24641 ;;		On exit  : 3F/3B
 24642 ;;		Unchanged: 0/0
 24643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24648 ;;Total ram usage:        0 bytes
 24649 ;; Hardware stack levels used:    1
 24650 ;; Hardware stack levels required when called:   15
 24651 ;; This function calls:
 24652 ;;		Nothing
 24653 ;; This function is called by:
 24654 ;;		_eaDogM_WriteString
 24655 ;;		_send_lcd_data_dma
 24656 ;; This function uses a reentrant model
 24657 ;;
 24658                           
 24659                           	psect	text88
 24660  00272E                     __ptext88:
 24661                           	opt callstack 0
 24662  00272E                     _start_lcd:
 24663                           	opt callstack 12
 24664                           
 24665                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 24666                           
 24667                           ; BSR set to: 0
 24668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24669                           ;incstack = 0
 24670  00272E  013B               	movlb	59	; () banked
 24671  002730  8DFC               	bsf	252,6,b	;volatile
 24672                           
 24673                           ; BSR set to: 59
 24674                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24675  002732  0012               	return		;funcret
 24676  002734                     __end_of_start_lcd:
 24677                           	opt callstack 0
 24678                           
 24679 ;; *************** function _ringBufS_flush *****************
 24680 ;; Defined at:
 24681 ;;		line 76 in file "ringbufs.c"
 24682 ;; Parameters:    Size  Location     Type
 24683 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24684 ;;		 -> ring_buf1(67), 
 24685 ;;  clearBuffer     1  [STACK] const char 
 24686 ;; Auto vars:     Size  Location     Type
 24687 ;;		None
 24688 ;; Return value:  Size  Location     Type
 24689 ;;                  1  [STACK] void 
 24690 ;; Registers used:
 24691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24692 ;; Tracked objects:
 24693 ;;		On entry : 3F/0
 24694 ;;		On exit  : 0/0
 24695 ;;		Unchanged: 0/0
 24696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24701 ;;Total ram usage:        0 bytes
 24702 ;; Hardware stack levels used:    1
 24703 ;; Hardware stack levels required when called:   16
 24704 ;; This function calls:
 24705 ;;		_memset
 24706 ;; This function is called by:
 24707 ;;		_eaDogM_WriteString
 24708 ;;		_send_lcd_data_dma
 24709 ;; This function uses a reentrant model
 24710 ;;
 24711                           
 24712                           	psect	text89
 24713  000B72                     __ptext89:
 24714                           	opt callstack 0
 24715  000B72                     _ringBufS_flush:
 24716                           	opt callstack 11
 24717                           
 24718                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 24719                           ;stkvar	__this @ sp[(0)+-2]
 24720                           
 24721                           ; BSR set to: 59
 24722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24723                           ;incstack = 0
 24724  000B72  0EFE               	movlw	-2
 24725  000B74  006F FF8C  F034    	movff	plusw1,btemp+10
 24726  000B7A  0EFF               	movlw	-1
 24727  000B7C  006F FF8C  F035    	movff	plusw1,btemp+11
 24728  000B82  0E42               	movlw	66
 24729  000B84  2434               	addwf	(btemp+10)^0,w,c
 24730  000B86  6ED9               	movwf	fsr2l,c
 24731  000B88  0E00               	movlw	0
 24732  000B8A  2035               	addwfc	(btemp+11)^0,w,c
 24733  000B8C  6EDA               	movwf	fsr2h,c
 24734  000B8E  0E00               	movlw	0
 24735  000B90  6EDF               	movwf	indf2,c
 24736                           
 24737                           ;ringbufs.c: 79:  _this->head = 0;
 24738                           ;stkvar	__this @ sp[(0)+-2]
 24739  000B92  0EFE               	movlw	-2
 24740  000B94  006F FF8C  F034    	movff	plusw1,btemp+10
 24741  000B9A  0EFF               	movlw	-1
 24742  000B9C  006F FF8C  F035    	movff	plusw1,btemp+11
 24743  000BA2  0E40               	movlw	64
 24744  000BA4  2434               	addwf	(btemp+10)^0,w,c
 24745  000BA6  6ED9               	movwf	fsr2l,c
 24746  000BA8  0E00               	movlw	0
 24747  000BAA  2035               	addwfc	(btemp+11)^0,w,c
 24748  000BAC  6EDA               	movwf	fsr2h,c
 24749  000BAE  0E00               	movlw	0
 24750  000BB0  6EDF               	movwf	indf2,c
 24751                           
 24752                           ;ringbufs.c: 80:  _this->tail = 0;
 24753                           ;stkvar	__this @ sp[(0)+-2]
 24754  000BB2  0EFE               	movlw	-2
 24755  000BB4  006F FF8C  F034    	movff	plusw1,btemp+10
 24756  000BBA  0EFF               	movlw	-1
 24757  000BBC  006F FF8C  F035    	movff	plusw1,btemp+11
 24758  000BC2  0E41               	movlw	65
 24759  000BC4  2434               	addwf	(btemp+10)^0,w,c
 24760  000BC6  6ED9               	movwf	fsr2l,c
 24761  000BC8  0E00               	movlw	0
 24762  000BCA  2035               	addwfc	(btemp+11)^0,w,c
 24763  000BCC  6EDA               	movwf	fsr2h,c
 24764  000BCE  0E00               	movlw	0
 24765  000BD0  6EDF               	movwf	indf2,c
 24766                           
 24767                           ;ringbufs.c: 81:  if (clearBuffer) {
 24768                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 24769  000BD2  0EFD               	movlw	-3
 24770  000BD4  50E3               	movf	plusw1,w,c
 24771  000BD6  B4D8               	btfsc	status,2,c
 24772  000BD8  D011               	goto	l1746
 24773                           
 24774                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 24775  000BDA  0E40               	movlw	64
 24776  000BDC  6EE6               	movwf	postinc1,c
 24777  000BDE  0E00               	movlw	0
 24778  000BE0  6EE6               	movwf	postinc1,c
 24779  000BE2  0E00               	movlw	0
 24780  000BE4  6EE6               	movwf	postinc1,c
 24781  000BE6  0E00               	movlw	0
 24782  000BE8  6EE6               	movwf	postinc1,c
 24783                           
 24784                           ;stkvar	__this @ sp[(-4)+-2]
 24785  000BEA  0EFA               	movlw	-6
 24786  000BEC  006F FF8F FFE6     	movff	plusw1,postinc1
 24787  000BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 24788  000BF8  ECF6  F0D5         	call	_memset	;wreg free
 24789  000BFC                     l1746:
 24790                           
 24791                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 24792  000BFC  52E5               	movf	postdec1,f,c
 24793  000BFE  52E5               	movf	postdec1,f,c
 24794  000C00  52E5               	movf	postdec1,f,c
 24795  000C02  0012               	return		;funcret
 24796  000C04                     __end_of_ringBufS_flush:
 24797                           	opt callstack 0
 24798                           
 24799 ;; *************** function _memset *****************
 24800 ;; Defined at:
 24801 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 24802 ;; Parameters:    Size  Location     Type
 24803 ;;  dest            2  [STACK] PTR void 
 24804 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24805 ;;  c               2  [STACK] int 
 24806 ;;  n               2  [STACK] unsigned int 
 24807 ;; Auto vars:     Size  Location     Type
 24808 ;;  s               2  [STACK] PTR unsigned char 
 24809 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24810 ;;  k               2  [STACK] unsigned int 
 24811 ;; Return value:  Size  Location     Type
 24812 ;;                  2  [STACK] PTR void 
 24813 ;; Registers used:
 24814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24815 ;; Tracked objects:
 24816 ;;		On entry : 0/0
 24817 ;;		On exit  : 0/0
 24818 ;;		Unchanged: 0/0
 24819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24824 ;;Total ram usage:        0 bytes
 24825 ;; Hardware stack levels used:    1
 24826 ;; Hardware stack levels required when called:   15
 24827 ;; This function calls:
 24828 ;;		Nothing
 24829 ;; This function is called by:
 24830 ;;		_ringBufS_init
 24831 ;;		_ringBufS_flush
 24832 ;; This function uses a reentrant model
 24833 ;;
 24834                           
 24835                           	psect	text90
 24836  01ABEC                     __ptext90:
 24837                           	opt callstack 0
 24838  01ABEC                     _memset:
 24839                           	opt callstack 0
 24840                           
 24841                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24842  01ABEC  52E6               	movf	postinc1,f,c
 24843  01ABEE  52E6               	movf	postinc1,f,c
 24844  01ABF0  52E6               	movf	postinc1,f,c
 24845  01ABF2  52E6               	movf	postinc1,f,c
 24846                           
 24847                           ;stkvar	_dest @ sp[(-4)+-2]
 24848                           
 24849                           ;incstack = 0
 24850  01ABF4  0EFA               	movlw	-6
 24851  01ABF6  006F FF8C  F034    	movff	plusw1,btemp+10
 24852  01ABFC  0EFB               	movlw	-5
 24853  01ABFE  006F FF8C  F035    	movff	plusw1,btemp+11
 24854                           
 24855                           ;stkvar	_s @ sp[(-4)+0]
 24856  01AC04  0EFD               	movlw	-3
 24857  01AC06  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24858  01AC0C  0EFC               	movlw	-4
 24859  01AC0E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24860                           
 24861                           ;stkvar	_n @ sp[(-4)+-6]
 24862  01AC14  0EF6               	movlw	-10
 24863  01AC16  006F FF8C  F02A    	movff	plusw1,btemp
 24864  01AC1C  0EF7               	movlw	-9
 24865  01AC1E  50E3               	movf	plusw1,w,c
 24866  01AC20  102A               	iorwf	btemp^0,w,c
 24867  01AC22  B4D8               	btfsc	status,2,c
 24868  01AC24  D154               	goto	u14250
 24869                           
 24870                           ;stkvar	_c @ sp[(-4)+-4]
 24871                           ;stkvar	_s @ sp[(-4)+0]
 24872  01AC26  0EFC               	movlw	-4
 24873  01AC28  006F FF8F FFD9     	movff	plusw1,fsr2l
 24874  01AC2E  0EFD               	movlw	-3
 24875  01AC30  006F FF8F FFDA     	movff	plusw1,fsr2h
 24876  01AC36  0EF8               	movlw	-8
 24877  01AC38  006F FF8F FFDF     	movff	plusw1,indf2
 24878                           
 24879                           ;stkvar	_c @ sp[(-4)+-4]
 24880                           ;stkvar	_n @ sp[(-4)+-6]
 24881                           ;stkvar	_s @ sp[(-4)+0]
 24882  01AC3E  0EFC               	movlw	-4
 24883  01AC40  006F FF8C  F034    	movff	plusw1,btemp+10
 24884  01AC46  0EFD               	movlw	-3
 24885  01AC48  006F FF8C  F035    	movff	plusw1,btemp+11
 24886  01AC4E  0EF6               	movlw	-10
 24887  01AC50  50E3               	movf	plusw1,w,c
 24888  01AC52  2634               	addwf	(btemp+10)^0,f,c
 24889  01AC54  0EF7               	movlw	-9
 24890  01AC56  50E3               	movf	plusw1,w,c
 24891  01AC58  2235               	addwfc	(btemp+11)^0,f,c
 24892  01AC5A  0EFF               	movlw	255
 24893  01AC5C  2434               	addwf	(btemp+10)^0,w,c
 24894  01AC5E  6ED9               	movwf	fsr2l,c
 24895  01AC60  0EFF               	movlw	255
 24896  01AC62  2035               	addwfc	(btemp+11)^0,w,c
 24897  01AC64  6EDA               	movwf	fsr2h,c
 24898  01AC66  0EF8               	movlw	-8
 24899  01AC68  006F FF8F FFDF     	movff	plusw1,indf2
 24900                           
 24901                           ;stkvar	_n @ sp[(-4)+-6]
 24902  01AC6E  0EF7               	movlw	-9
 24903  01AC70  50E3               	movf	plusw1,w,c
 24904  01AC72  E108               	bnz	l15334
 24905  01AC74  0EF6               	movlw	-10
 24906  01AC76  006F FF8C  F02A    	movff	plusw1,btemp
 24907  01AC7C  0E03               	movlw	3
 24908  01AC7E  5E2A               	subwf	btemp^0,f,c
 24909  01AC80  A0D8               	btfss	status,0,c
 24910  01AC82  D125               	goto	u14250
 24911  01AC84                     l15334:
 24912                           
 24913                           ;stkvar	_c @ sp[(-4)+-4]
 24914                           ;stkvar	_s @ sp[(-4)+0]
 24915  01AC84  0EFC               	movlw	-4
 24916  01AC86  006F FF8C  F034    	movff	plusw1,btemp+10
 24917  01AC8C  0EFD               	movlw	-3
 24918  01AC8E  006F FF8C  F035    	movff	plusw1,btemp+11
 24919  01AC94  0E01               	movlw	1
 24920  01AC96  2434               	addwf	(btemp+10)^0,w,c
 24921  01AC98  6ED9               	movwf	fsr2l,c
 24922  01AC9A  0E00               	movlw	0
 24923  01AC9C  2035               	addwfc	(btemp+11)^0,w,c
 24924  01AC9E  6EDA               	movwf	fsr2h,c
 24925  01ACA0  0EF8               	movlw	-8
 24926  01ACA2  006F FF8F FFDF     	movff	plusw1,indf2
 24927                           
 24928                           ;stkvar	_c @ sp[(-4)+-4]
 24929                           ;stkvar	_s @ sp[(-4)+0]
 24930  01ACA8  0EFC               	movlw	-4
 24931  01ACAA  006F FF8C  F034    	movff	plusw1,btemp+10
 24932  01ACB0  0EFD               	movlw	-3
 24933  01ACB2  006F FF8C  F035    	movff	plusw1,btemp+11
 24934  01ACB8  0E02               	movlw	2
 24935  01ACBA  2434               	addwf	(btemp+10)^0,w,c
 24936  01ACBC  6ED9               	movwf	fsr2l,c
 24937  01ACBE  0E00               	movlw	0
 24938  01ACC0  2035               	addwfc	(btemp+11)^0,w,c
 24939  01ACC2  6EDA               	movwf	fsr2h,c
 24940  01ACC4  0EF8               	movlw	-8
 24941  01ACC6  006F FF8F FFDF     	movff	plusw1,indf2
 24942                           
 24943                           ;stkvar	_c @ sp[(-4)+-4]
 24944                           ;stkvar	_n @ sp[(-4)+-6]
 24945                           ;stkvar	_s @ sp[(-4)+0]
 24946  01ACCC  0EFC               	movlw	-4
 24947  01ACCE  006F FF8C  F034    	movff	plusw1,btemp+10
 24948  01ACD4  0EFD               	movlw	-3
 24949  01ACD6  006F FF8C  F035    	movff	plusw1,btemp+11
 24950  01ACDC  0EF6               	movlw	-10
 24951  01ACDE  50E3               	movf	plusw1,w,c
 24952  01ACE0  2634               	addwf	(btemp+10)^0,f,c
 24953  01ACE2  0EF7               	movlw	-9
 24954  01ACE4  50E3               	movf	plusw1,w,c
 24955  01ACE6  2235               	addwfc	(btemp+11)^0,f,c
 24956  01ACE8  0EFE               	movlw	254
 24957  01ACEA  2434               	addwf	(btemp+10)^0,w,c
 24958  01ACEC  6ED9               	movwf	fsr2l,c
 24959  01ACEE  0EFF               	movlw	255
 24960  01ACF0  2035               	addwfc	(btemp+11)^0,w,c
 24961  01ACF2  6EDA               	movwf	fsr2h,c
 24962  01ACF4  0EF8               	movlw	-8
 24963  01ACF6  006F FF8F FFDF     	movff	plusw1,indf2
 24964                           
 24965                           ;stkvar	_c @ sp[(-4)+-4]
 24966                           ;stkvar	_n @ sp[(-4)+-6]
 24967                           ;stkvar	_s @ sp[(-4)+0]
 24968  01ACFC  0EFC               	movlw	-4
 24969  01ACFE  006F FF8C  F034    	movff	plusw1,btemp+10
 24970  01AD04  0EFD               	movlw	-3
 24971  01AD06  006F FF8C  F035    	movff	plusw1,btemp+11
 24972  01AD0C  0EF6               	movlw	-10
 24973  01AD0E  50E3               	movf	plusw1,w,c
 24974  01AD10  2634               	addwf	(btemp+10)^0,f,c
 24975  01AD12  0EF7               	movlw	-9
 24976  01AD14  50E3               	movf	plusw1,w,c
 24977  01AD16  2235               	addwfc	(btemp+11)^0,f,c
 24978  01AD18  0EFD               	movlw	253
 24979  01AD1A  2434               	addwf	(btemp+10)^0,w,c
 24980  01AD1C  6ED9               	movwf	fsr2l,c
 24981  01AD1E  0EFF               	movlw	255
 24982  01AD20  2035               	addwfc	(btemp+11)^0,w,c
 24983  01AD22  6EDA               	movwf	fsr2h,c
 24984  01AD24  0EF8               	movlw	-8
 24985  01AD26  006F FF8F FFDF     	movff	plusw1,indf2
 24986                           
 24987                           ;stkvar	_n @ sp[(-4)+-6]
 24988  01AD2C  0EF7               	movlw	-9
 24989  01AD2E  50E3               	movf	plusw1,w,c
 24990  01AD30  E108               	bnz	l15340
 24991  01AD32  0EF6               	movlw	-10
 24992  01AD34  006F FF8C  F02A    	movff	plusw1,btemp
 24993  01AD3A  0E07               	movlw	7
 24994  01AD3C  5E2A               	subwf	btemp^0,f,c
 24995  01AD3E  A0D8               	btfss	status,0,c
 24996  01AD40  D0C6               	goto	u14250
 24997  01AD42                     l15340:
 24998                           
 24999                           ;stkvar	_c @ sp[(-4)+-4]
 25000                           ;stkvar	_s @ sp[(-4)+0]
 25001  01AD42  0EFC               	movlw	-4
 25002  01AD44  006F FF8C  F034    	movff	plusw1,btemp+10
 25003  01AD4A  0EFD               	movlw	-3
 25004  01AD4C  006F FF8C  F035    	movff	plusw1,btemp+11
 25005  01AD52  0E03               	movlw	3
 25006  01AD54  2434               	addwf	(btemp+10)^0,w,c
 25007  01AD56  6ED9               	movwf	fsr2l,c
 25008  01AD58  0E00               	movlw	0
 25009  01AD5A  2035               	addwfc	(btemp+11)^0,w,c
 25010  01AD5C  6EDA               	movwf	fsr2h,c
 25011  01AD5E  0EF8               	movlw	-8
 25012  01AD60  006F FF8F FFDF     	movff	plusw1,indf2
 25013                           
 25014                           ;stkvar	_c @ sp[(-4)+-4]
 25015                           ;stkvar	_n @ sp[(-4)+-6]
 25016                           ;stkvar	_s @ sp[(-4)+0]
 25017  01AD66  0EFC               	movlw	-4
 25018  01AD68  006F FF8C  F034    	movff	plusw1,btemp+10
 25019  01AD6E  0EFD               	movlw	-3
 25020  01AD70  006F FF8C  F035    	movff	plusw1,btemp+11
 25021  01AD76  0EF6               	movlw	-10
 25022  01AD78  50E3               	movf	plusw1,w,c
 25023  01AD7A  2634               	addwf	(btemp+10)^0,f,c
 25024  01AD7C  0EF7               	movlw	-9
 25025  01AD7E  50E3               	movf	plusw1,w,c
 25026  01AD80  2235               	addwfc	(btemp+11)^0,f,c
 25027  01AD82  0EFC               	movlw	252
 25028  01AD84  2434               	addwf	(btemp+10)^0,w,c
 25029  01AD86  6ED9               	movwf	fsr2l,c
 25030  01AD88  0EFF               	movlw	255
 25031  01AD8A  2035               	addwfc	(btemp+11)^0,w,c
 25032  01AD8C  6EDA               	movwf	fsr2h,c
 25033  01AD8E  0EF8               	movlw	-8
 25034  01AD90  006F FF8F FFDF     	movff	plusw1,indf2
 25035                           
 25036                           ;stkvar	_n @ sp[(-4)+-6]
 25037  01AD96  0EF7               	movlw	-9
 25038  01AD98  50E3               	movf	plusw1,w,c
 25039  01AD9A  E108               	bnz	l15346
 25040  01AD9C  0EF6               	movlw	-10
 25041  01AD9E  006F FF8C  F02A    	movff	plusw1,btemp
 25042  01ADA4  0E09               	movlw	9
 25043  01ADA6  5E2A               	subwf	btemp^0,f,c
 25044  01ADA8  A0D8               	btfss	status,0,c
 25045  01ADAA  D091               	goto	u14250
 25046  01ADAC                     l15346:
 25047                           
 25048                           ;stkvar	_s @ sp[(-4)+0]
 25049  01ADAC  0EFC               	movlw	-4
 25050  01ADAE  006F FF8C  F034    	movff	plusw1,btemp+10
 25051  01ADB4  1E34               	comf	(btemp+10)^0,f,c
 25052  01ADB6  0EFD               	movlw	-3
 25053  01ADB8  006F FF8C  F035    	movff	plusw1,btemp+11
 25054  01ADBE  1E35               	comf	(btemp+11)^0,f,c
 25055  01ADC0  2A34               	incf	(btemp+10)^0,f,c
 25056  01ADC2  B4D8               	btfsc	status,2,c
 25057  01ADC4  2A35               	incf	(btemp+11)^0,f,c
 25058  01ADC6  0E03               	movlw	3
 25059  01ADC8  1634               	andwf	(btemp+10)^0,f,c
 25060  01ADCA  0E00               	movlw	0
 25061  01ADCC  1635               	andwf	(btemp+11)^0,f,c
 25062                           
 25063                           ;stkvar	_k @ sp[(-4)+2]
 25064  01ADCE  0EFE               	movlw	-2
 25065  01ADD0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25066  01ADD6  0EFF               	movlw	-1
 25067  01ADD8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25068                           
 25069                           ;stkvar	_k @ sp[(-4)+2]
 25070                           ;stkvar	_s @ sp[(-4)+0]
 25071  01ADDE  0EFC               	movlw	-4
 25072  01ADE0  50E3               	movf	plusw1,w,c
 25073  01ADE2  6E2A               	movwf	btemp^0,c
 25074  01ADE4  0EFE               	movlw	-2
 25075  01ADE6  50E3               	movf	plusw1,w,c
 25076  01ADE8  262A               	addwf	btemp^0,f,c
 25077  01ADEA  0EFC               	movlw	-4
 25078  01ADEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 25079  01ADF2  0EFD               	movlw	-3
 25080  01ADF4  50E3               	movf	plusw1,w,c
 25081  01ADF6  6E2A               	movwf	btemp^0,c
 25082  01ADF8  0EFF               	movlw	-1
 25083  01ADFA  50E3               	movf	plusw1,w,c
 25084  01ADFC  222A               	addwfc	btemp^0,f,c
 25085  01ADFE  0EFD               	movlw	-3
 25086  01AE00  0060  F0AB  FFE3   	movff	btemp,plusw1
 25087                           
 25088                           ;stkvar	_k @ sp[(-4)+2]
 25089                           ;stkvar	_n @ sp[(-4)+-6]
 25090  01AE06  0EF6               	movlw	-10
 25091  01AE08  50E3               	movf	plusw1,w,c
 25092  01AE0A  6E2A               	movwf	btemp^0,c
 25093  01AE0C  0EFE               	movlw	-2
 25094  01AE0E  50E3               	movf	plusw1,w,c
 25095  01AE10  5E2A               	subwf	btemp^0,f,c
 25096  01AE12  0EF6               	movlw	-10
 25097  01AE14  0060  F0AB  FFE3   	movff	btemp,plusw1
 25098  01AE1A  0EF7               	movlw	-9
 25099  01AE1C  50E3               	movf	plusw1,w,c
 25100  01AE1E  6E2A               	movwf	btemp^0,c
 25101  01AE20  0EFF               	movlw	-1
 25102  01AE22  50E3               	movf	plusw1,w,c
 25103  01AE24  5A2A               	subwfb	btemp^0,f,c
 25104  01AE26  0EF7               	movlw	-9
 25105  01AE28  0060  F0AB  FFE3   	movff	btemp,plusw1
 25106  01AE2E  0EFC               	movlw	252
 25107  01AE30  6E34               	movwf	(btemp+10)^0,c
 25108  01AE32  0EFF               	movlw	255
 25109  01AE34  6E35               	movwf	(btemp+11)^0,c
 25110                           
 25111                           ;stkvar	_n @ sp[(-4)+-6]
 25112  01AE36  0EF6               	movlw	-10
 25113  01AE38  006F FF8C  F02A    	movff	plusw1,btemp
 25114  01AE3E  5034               	movf	(btemp+10)^0,w,c
 25115  01AE40  162A               	andwf	btemp^0,f,c
 25116  01AE42  0EF6               	movlw	-10
 25117  01AE44  0060  F0AB  FFE3   	movff	btemp,plusw1
 25118  01AE4A  0EF7               	movlw	-9
 25119  01AE4C  006F FF8C  F02A    	movff	plusw1,btemp
 25120  01AE52  5035               	movf	(btemp+11)^0,w,c
 25121  01AE54  162A               	andwf	btemp^0,f,c
 25122  01AE56  0EF7               	movlw	-9
 25123  01AE58  D02E               	goto	L24
 25124  01AE5A                     l15354:
 25125                           
 25126                           ;stkvar	_c @ sp[(-4)+-4]
 25127                           ;stkvar	_s @ sp[(-4)+0]
 25128  01AE5A  0EFC               	movlw	-4
 25129  01AE5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25130  01AE62  0EFD               	movlw	-3
 25131  01AE64  006F FF8F FFDA     	movff	plusw1,fsr2h
 25132  01AE6A  0EF8               	movlw	-8
 25133  01AE6C  006F FF8F FFDF     	movff	plusw1,indf2
 25134                           
 25135                           ;stkvar	_n @ sp[(-4)+-6]
 25136  01AE72  0EF6               	movlw	-10
 25137  01AE74  006F FF8C  F02A    	movff	plusw1,btemp
 25138  01AE7A  0E01               	movlw	1
 25139  01AE7C  5E2A               	subwf	btemp^0,f,c
 25140  01AE7E  0EF6               	movlw	-10
 25141  01AE80  0060  F0AB  FFE3   	movff	btemp,plusw1
 25142  01AE86  0EF7               	movlw	-9
 25143  01AE88  006F FF8C  F02A    	movff	plusw1,btemp
 25144  01AE8E  0E00               	movlw	0
 25145  01AE90  5A2A               	subwfb	btemp^0,f,c
 25146  01AE92  0EF7               	movlw	-9
 25147  01AE94  0060  F0AB  FFE3   	movff	btemp,plusw1
 25148                           
 25149                           ;stkvar	_s @ sp[(-4)+0]
 25150  01AE9A  0EFC               	movlw	-4
 25151  01AE9C  50E3               	movf	plusw1,w,c
 25152  01AE9E  0F01               	addlw	1
 25153  01AEA0  6E2A               	movwf	btemp^0,c
 25154  01AEA2  0EFC               	movlw	-4
 25155  01AEA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25156  01AEAA  6A2A               	clrf	btemp^0,c
 25157  01AEAC  0EFD               	movlw	-3
 25158  01AEAE  50E3               	movf	plusw1,w,c
 25159  01AEB0  202A               	addwfc	btemp^0,w,c
 25160  01AEB2  6E2A               	movwf	btemp^0,c
 25161  01AEB4  0EFD               	movlw	-3
 25162  01AEB6                     L24:
 25163  01AEB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 25164                           
 25165                           ;stkvar	_n @ sp[(-4)+-6]
 25166  01AEBC  0EF6               	movlw	-10
 25167  01AEBE  006F FF8C  F02A    	movff	plusw1,btemp
 25168  01AEC4  0EF7               	movlw	-9
 25169  01AEC6  50E3               	movf	plusw1,w,c
 25170  01AEC8  102A               	iorwf	btemp^0,w,c
 25171  01AECA  A4D8               	btfss	status,2,c
 25172  01AECC  D7C6               	goto	l15354
 25173  01AECE                     u14250:
 25174                           
 25175                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 25176  01AECE  0EF6               	movlw	246
 25177  01AED0  26E1               	addwf	fsr1l,f,c
 25178  01AED2  0EFF               	movlw	255
 25179  01AED4  22E2               	addwfc	fsr1h,f,c
 25180  01AED6  0012               	return		;funcret
 25181  01AED8                     __end_of_memset:
 25182                           	opt callstack 0
 25183                           
 25184 ;; *************** function _printf *****************
 25185 ;; Defined at:
 25186 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 25187 ;; Parameters:    Size  Location     Type
 25188 ;;  fmt             2  [STACK] PTR const unsigned char 
 25189 ;;		 -> STR_69(3), 
 25190 ;; Auto vars:     Size  Location     Type
 25191 ;;  ap              2  [STACK] PTR void [1]
 25192 ;;		 -> ?_printf(2), ?_sprintf(2), 
 25193 ;;  ret             2    0        int 
 25194 ;; Return value:  Size  Location     Type
 25195 ;;                  2  [STACK] int 
 25196 ;; Registers used:
 25197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25198 ;; Tracked objects:
 25199 ;;		On entry : 3F/3B
 25200 ;;		On exit  : 3F/0
 25201 ;;		Unchanged: 0/0
 25202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25207 ;;Total ram usage:        0 bytes
 25208 ;; Hardware stack levels used:    1
 25209 ;; Hardware stack levels required when called:   23
 25210 ;; This function calls:
 25211 ;;		_vfprintf
 25212 ;; This function is called by:
 25213 ;;		_eaDogM_WriteString
 25214 ;; This function uses a reentrant model
 25215 ;;
 25216                           
 25217                           	psect	text91
 25218  0014D6                     __ptext91:
 25219                           	opt callstack 0
 25220  0014D6                     _printf:
 25221                           	opt callstack 0
 25222                           
 25223                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25224  0014D6  52E6               	movf	postinc1,f,c
 25225  0014D8  52E6               	movf	postinc1,f,c
 25226                           
 25227                           ;stkvar	?_printf @ sp[(-2)+-3]
 25228                           
 25229                           ;incstack = 0
 25230  0014DA  0EFB               	movlw	251
 25231  0014DC  24E1               	addwf	fsr1l,w,c
 25232  0014DE  6E34               	movwf	(btemp+10)^0,c
 25233  0014E0  0EFF               	movlw	255
 25234  0014E2  20E2               	addwfc	fsr1h,w,c
 25235  0014E4  6E35               	movwf	(btemp+11)^0,c
 25236                           
 25237                           ;stkvar	_ap @ sp[(-2)+0]
 25238  0014E6  0EFF               	movlw	-1
 25239  0014E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25240  0014EE  0EFE               	movlw	-2
 25241  0014F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25242                           
 25243                           ;stkvar	_ap @ sp[(-2)+0]
 25244  0014F6  0EFE               	movlw	254
 25245  0014F8  24E1               	addwf	fsr1l,w,c
 25246  0014FA  6E2A               	movwf	btemp^0,c
 25247  0014FC  0EFF               	movlw	255
 25248  0014FE  20E2               	addwfc	fsr1h,w,c
 25249  001500  6E2B               	movwf	(btemp+1)^0,c
 25250  001502  0060  F0AB  FFE6   	movff	btemp,postinc1
 25251  001508  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25252                           
 25253                           ;stkvar	_fmt @ sp[(-4)+-3]
 25254  00150E  0EF9               	movlw	-7
 25255  001510  006F FF8F FFE6     	movff	plusw1,postinc1
 25256  001516  006F FF8F FFE6     	movff	plusw1,postinc1
 25257  00151C  0E00               	movlw	0
 25258  00151E  6EE6               	movwf	postinc1,c
 25259  001520  0E00               	movlw	0
 25260  001522  6EE6               	movwf	postinc1,c
 25261  001524  ECED  F002         	call	_vfprintf	;wreg free
 25262                           
 25263                           ; BSR set to: 0
 25264                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 25265  001528  52E5               	movf	postdec1,f,c
 25266  00152A  52E5               	movf	postdec1,f,c
 25267  00152C  52E5               	movf	postdec1,f,c
 25268  00152E  50E7               	movf	indf1,w,c
 25269  001530  5EE1               	subwf	fsr1l,f,c
 25270  001532  0E00               	movlw	0
 25271  001534  5AE2               	subwfb	fsr1h,f,c
 25272  001536  0012               	return		;funcret
 25273  001538                     __end_of_printf:
 25274                           	opt callstack 0
 25275                           
 25276 ;; *************** function _vfprintf *****************
 25277 ;; Defined at:
 25278 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25279 ;; Parameters:    Size  Location     Type
 25280 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25281 ;;		 -> f(6), NULL(0), 
 25282 ;;  fmt             2  [STACK] PTR const unsigned char 
 25283 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 25284 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 25285 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 25286 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 25287 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 25288 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(21), 
 25289 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 25290 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 25291 ;;		 -> STR_55(20), STR_54(21), STR_53(21), STR_52(21), 
 25292 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(23), 
 25293 ;;		 -> STR_47(23), STR_46(23), STR_45(29), STR_44(23), 
 25294 ;;		 -> STR_43(23), STR_42(22), STR_41(22), STR_40(22), 
 25295 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 25296 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 25297 ;;		 -> STR_31(22), STR_30(17), STR_29(16), STR_28(16), 
 25298 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(14), 
 25299 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 25300 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 25301 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 25302 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 25303 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 25304 ;;		 -> STR_2(21), STR_1(21), 
 25305 ;;  ap              2  [STACK] PTR PTR void 
 25306 ;;		 -> ap(2), ap(2), 
 25307 ;; Auto vars:     Size  Location     Type
 25308 ;;  cfmt            2  [STACK] PTR unsigned char 
 25309 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 25310 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 25311 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 25312 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 25313 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 25314 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(21), 
 25315 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 25316 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 25317 ;;		 -> STR_55(20), STR_54(21), STR_53(21), STR_52(21), 
 25318 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(23), 
 25319 ;;		 -> STR_47(23), STR_46(23), STR_45(29), STR_44(23), 
 25320 ;;		 -> STR_43(23), STR_42(22), STR_41(22), STR_40(22), 
 25321 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 25322 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 25323 ;;		 -> STR_31(22), STR_30(17), STR_29(16), STR_28(16), 
 25324 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(14), 
 25325 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 25326 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 25327 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 25328 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 25329 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 25330 ;;		 -> STR_2(21), STR_1(21), 
 25331 ;; Return value:  Size  Location     Type
 25332 ;;                  2  [STACK] int 
 25333 ;; Registers used:
 25334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25335 ;; Tracked objects:
 25336 ;;		On entry : 0/2
 25337 ;;		On exit  : 3F/0
 25338 ;;		Unchanged: 0/0
 25339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25344 ;;Total ram usage:        0 bytes
 25345 ;; Hardware stack levels used:    1
 25346 ;; Hardware stack levels required when called:   22
 25347 ;; This function calls:
 25348 ;;		_vfpfcnvrt
 25349 ;; This function is called by:
 25350 ;;		_sprintf
 25351 ;;		_printf
 25352 ;; This function uses a reentrant model
 25353 ;;
 25354                           
 25355                           	psect	text92
 25356  0005DA                     __ptext92:
 25357                           	opt callstack 0
 25358  0005DA                     _vfprintf:
 25359                           	opt callstack 0
 25360                           
 25361                           ; BSR set to: 0
 25362                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25363  0005DA  52E6               	movf	postinc1,f,c
 25364  0005DC  52E6               	movf	postinc1,f,c
 25365                           
 25366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 25367                           ;stkvar	_fmt @ sp[(-2)+-4]
 25368                           
 25369                           ;incstack = 0
 25370 ;; hardware stack exceeded
 25371  0005DE  0EFA               	movlw	-6
 25372  0005E0  006F FF8C  F034    	movff	plusw1,btemp+10
 25373  0005E6  0EFB               	movlw	-5
 25374  0005E8  006F FF8C  F035    	movff	plusw1,btemp+11
 25375                           
 25376                           ;stkvar	_cfmt @ sp[(-2)+0]
 25377  0005EE  0EFF               	movlw	-1
 25378  0005F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25379  0005F6  0EFE               	movlw	-2
 25380  0005F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25381                           
 25382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 25383  0005FE  0100               	movlb	0	; () banked
 25384  000600  6BBA               	clrf	_nout& (0+255),b
 25385  000602  6BBB               	clrf	(_nout+1)& (0+255),b
 25386                           
 25387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25388  000604  D021               	goto	l16540
 25389  000606                     l16538:
 25390                           
 25391                           ; BSR set to: 0
 25392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 25393                           ;stkvar	_ap @ sp[(-2)+-6]
 25394  000606  0EF8               	movlw	-8
 25395  000608  006F FF8F FFE6     	movff	plusw1,postinc1
 25396  00060E  006F FF8F FFE6     	movff	plusw1,postinc1
 25397                           
 25398                           ;stkvar	_cfmt @ sp[(-4)+0]
 25399  000614  0EFC               	movlw	252
 25400  000616  24E1               	addwf	fsr1l,w,c
 25401  000618  6E2A               	movwf	btemp^0,c
 25402  00061A  0EFF               	movlw	255
 25403  00061C  20E2               	addwfc	fsr1h,w,c
 25404  00061E  6E2B               	movwf	(btemp+1)^0,c
 25405  000620  0060  F0AB  FFE6   	movff	btemp,postinc1
 25406  000626  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25407                           
 25408                           ;stkvar	_fp @ sp[(-6)+-2]
 25409  00062C  0EF8               	movlw	-8
 25410  00062E  006F FF8F FFE6     	movff	plusw1,postinc1
 25411  000634  006F FF8F FFE6     	movff	plusw1,postinc1
 25412  00063A  EC36  F09C         	call	_vfpfcnvrt	;wreg free
 25413  00063E  502A               	movf	btemp^0,w,c
 25414  000640  0100               	movlb	0	; () banked
 25415  000642  27BA               	addwf	_nout& (0+255),f,b
 25416  000644  502B               	movf	(btemp+1)^0,w,c
 25417  000646  23BB               	addwfc	(_nout+1)& (0+255),f,b
 25418  000648                     l16540:
 25419                           
 25420                           ; BSR set to: 0
 25421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25422                           ;stkvar	_cfmt @ sp[(-2)+0]
 25423  000648  50E1               	movf	fsr1l,w,c
 25424  00064A  0FFE               	addlw	-2
 25425  00064C  6ED9               	movwf	fsr2l,c
 25426  00064E  50E2               	movf	fsr1h,w,c
 25427  000650  6EDA               	movwf	fsr2h,c
 25428  000652  0EFF               	movlw	255
 25429  000654  22DA               	addwfc	fsr2h,f,c
 25430  000656  006F FF7B FFF6     	movff	postinc2,tblptrl
 25431  00065C  006F FF77 FFF7     	movff	postdec2,tblptrh
 25432  000662                     	if	0	;tblptru may be non-zero
 25433  000662                     	endif
 25434  000662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25435  000662  0E00               	movlw	low (__mediumconst shr (0+16))
 25436  000664  6EF8               	movwf	tblptru,c
 25437  000666                     	endif
 25438  000666  0008               	tblrd		*
 25439  000668  50F5               	movf	tablat,w,c
 25440  00066A  0900               	iorlw	0
 25441  00066C  A4D8               	btfss	status,2,c
 25442  00066E  D7CB               	goto	l16538
 25443                           
 25444                           ; BSR set to: 0
 25445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 25446  000670  0060  F2E8  F02A   	movff	_nout,btemp
 25447  000676  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 25448                           
 25449                           ; BSR set to: 0
 25450                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 25451  00067C  0EF8               	movlw	248
 25452  00067E  26E1               	addwf	fsr1l,f,c
 25453  000680  0EFF               	movlw	255
 25454  000682  22E2               	addwfc	fsr1h,f,c
 25455  000684  0012               	return		;funcret
 25456  000686                     __end_of_vfprintf:
 25457                           	opt callstack 0
 25458                           
 25459 ;; *************** function _vfpfcnvrt *****************
 25460 ;; Defined at:
 25461 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25462 ;; Parameters:    Size  Location     Type
 25463 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25464 ;;		 -> f(6), NULL(0), 
 25465 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 25466 ;;		 -> cfmt(2), 
 25467 ;;  ap              2  [STACK] PTR PTR void 
 25468 ;;		 -> ap(2), ap(2), 
 25469 ;; Auto vars:     Size  Location     Type
 25470 ;;  llu             8  [STACK] unsigned long long 
 25471 ;;  ll              8  [STACK] long long 
 25472 ;;  f               4  [STACK] long long 
 25473 ;;  ct              3  [STACK] unsigned char [3]
 25474 ;;  vp              3    0        PTR void 
 25475 ;;  cp              2  [STACK] PTR unsigned char 
 25476 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 25477 ;;		 -> STR_70(12), D.lcd(640), D(642), T(176), 
 25478 ;;		 -> STR_3(5), V(181), 
 25479 ;;  i               2    0        int 
 25480 ;;  done            2    0        int 
 25481 ;;  c               1  [STACK] unsigned char 
 25482 ;; Return value:  Size  Location     Type
 25483 ;;                  2  [STACK] int 
 25484 ;; Registers used:
 25485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25486 ;; Tracked objects:
 25487 ;;		On entry : 0/0
 25488 ;;		On exit  : 0/0
 25489 ;;		Unchanged: 0/0
 25490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25495 ;;Total ram usage:        0 bytes
 25496 ;; Hardware stack levels used:    1
 25497 ;; Hardware stack levels required when called:   21
 25498 ;; This function calls:
 25499 ;;		_atoi
 25500 ;;		_ctoa
 25501 ;;		_dtoa
 25502 ;;		_efgtoa
 25503 ;;		_fputc
 25504 ;;		_isdigit
 25505 ;;		_isupper
 25506 ;;		_stoa
 25507 ;;		_strncmp
 25508 ;;		_tolower
 25509 ;;		_utoa
 25510 ;;		_xtoa
 25511 ;; This function is called by:
 25512 ;;		_vfprintf
 25513 ;; This function uses a reentrant model
 25514 ;;
 25515                           
 25516                           	psect	text93
 25517  01386C                     __ptext93:
 25518                           	opt callstack 0
 25519  01386C                     _vfpfcnvrt:
 25520                           	opt callstack 0
 25521                           
 25522                           ; BSR set to: 0
 25523                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25524  01386C  0E20               	movlw	32
 25525  01386E  26E1               	addwf	fsr1l,f,c
 25526  013870  0E00               	movlw	0
 25527  013872  22E2               	addwfc	fsr1h,f,c
 25528                           
 25529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 25530                           ;stkvar	_fmt @ sp[(-32)+-4]
 25531                           
 25532                           ;incstack = 0
 25533 ;; hardware stack exceeded
 25534  013874  0EDC               	movlw	-36
 25535  013876  006F FF8F FFD9     	movff	plusw1,fsr2l
 25536  01387C  0EDD               	movlw	-35
 25537  01387E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25538  013884  006F FF7B FFF6     	movff	postinc2,tblptrl
 25539  01388A  006F FF77 FFF7     	movff	postdec2,tblptrh
 25540  013890                     	if	0	;tblptru may be non-zero
 25541  013890                     	endif
 25542  013890                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25543  013890  0E00               	movlw	low (__mediumconst shr (0+16))
 25544  013892  6EF8               	movwf	tblptru,c
 25545  013894                     	endif
 25546  013894  0008               	tblrd		*
 25547  013896  50F5               	movf	tablat,w,c
 25548  013898  0A25               	xorlw	37
 25549  01389A  A4D8               	btfss	status,2,c
 25550  01389C  EFDD  F0A3         	goto	l16308
 25551                           
 25552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 25553                           ;stkvar	_fmt @ sp[(-32)+-4]
 25554  0138A0  0EDC               	movlw	-36
 25555  0138A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25556  0138A8  0EDD               	movlw	-35
 25557  0138AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25558  0138B0  2ADE               	incf	postinc2,f,c
 25559  0138B2  0E00               	movlw	0
 25560  0138B4  22DD               	addwfc	postdec2,f,c
 25561                           
 25562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 25563  0138B6  6A4A               	clrf	_width^0,c
 25564  0138B8  6A4B               	clrf	(_width+1)^0,c
 25565  0138BA  6A4E               	clrf	_flags^0,c
 25566  0138BC  6A4F               	clrf	(_flags+1)^0,c
 25567                           
 25568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 25569  0138BE  684C               	setf	_prec^0,c
 25570  0138C0  684D               	setf	(_prec+1)^0,c
 25571                           
 25572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 25573                           ;stkvar	_fmt @ sp[(-32)+-4]
 25574  0138C2  0EDC               	movlw	-36
 25575  0138C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 25576  0138CA  0EDD               	movlw	-35
 25577  0138CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 25578  0138D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 25579  0138D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 25580  0138DE                     	if	0	;tblptru may be non-zero
 25581  0138DE                     	endif
 25582  0138DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25583  0138DE  0E00               	movlw	low (__mediumconst shr (0+16))
 25584  0138E0  6EF8               	movwf	tblptru,c
 25585  0138E2                     	endif
 25586  0138E2  0008               	tblrd		*
 25587  0138E4  50F5               	movf	tablat,w,c
 25588  0138E6  0A2A               	xorlw	42
 25589  0138E8  A4D8               	btfss	status,2,c
 25590  0138EA  D031               	goto	l16126
 25591                           
 25592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 25593                           ;stkvar	_fmt @ sp[(-32)+-4]
 25594  0138EC  0EDC               	movlw	-36
 25595  0138EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25596  0138F4  0EDD               	movlw	-35
 25597  0138F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25598  0138FC  2ADE               	incf	postinc2,f,c
 25599  0138FE  0E00               	movlw	0
 25600  013900  22DD               	addwfc	postdec2,f,c
 25601                           
 25602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 25603                           ;stkvar	_ap @ sp[(-32)+-6]
 25604  013902  0EDA               	movlw	-38
 25605  013904  006F FF8F FFD9     	movff	plusw1,fsr2l
 25606  01390A  0EDB               	movlw	-37
 25607  01390C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25608  013912  0E02               	movlw	2
 25609  013914  5EDE               	subwf	postinc2,f,c
 25610  013916  0E00               	movlw	0
 25611  013918  5ADD               	subwfb	postdec2,f,c
 25612  01391A  006F FF78  F034    	movff	postinc2,btemp+10
 25613  013920  006F FF74  F035    	movff	postdec2,btemp+11
 25614  013926  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25615  01392C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25616  013932  006F FF78  F04A    	movff	postinc2,_width
 25617  013938  006F FF74  F04B    	movff	postdec2,_width+1
 25618                           
 25619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 25620  01393E  AE4B               	btfss	(_width+1)^0,7,c
 25621  013940  D066               	goto	u15660
 25622                           
 25623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 25624  013942  804E               	bsf	_flags^0,0,c
 25625                           
 25626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 25627  013944  6C4A               	negf	_width^0,c
 25628  013946  1E4B               	comf	(_width+1)^0,f,c
 25629  013948  B0D8               	btfsc	status,0,c
 25630  01394A  2A4B               	incf	(_width+1)^0,f,c
 25631  01394C  D060               	goto	u15660
 25632  01394E                     l16126:
 25633                           
 25634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 25635                           ;stkvar	_fmt @ sp[(-32)+-4]
 25636  01394E  0EDC               	movlw	-36
 25637  013950  006F FF8F FFD9     	movff	plusw1,fsr2l
 25638  013956  0EDD               	movlw	-35
 25639  013958  006F FF8F FFDA     	movff	plusw1,fsr2h
 25640  01395E  006F FF78  F034    	movff	postinc2,btemp+10
 25641  013964  006F FF74  F035    	movff	postdec2,btemp+11
 25642  01396A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25643  013970  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25644  013976  EC64  F0DF         	call	_atoi	;wreg free
 25645  01397A  0060  F0A8  F04A   	movff	btemp,_width
 25646  013980  0060  F0AC  F04B   	movff	btemp+1,_width+1
 25647                           
 25648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25649  013986  D00B               	goto	l16130
 25650  013988                     l16128:
 25651                           
 25652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 25653                           ;stkvar	_fmt @ sp[(-32)+-4]
 25654  013988  0EDC               	movlw	-36
 25655  01398A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25656  013990  0EDD               	movlw	-35
 25657  013992  006F FF8F FFDA     	movff	plusw1,fsr2h
 25658  013998  2ADE               	incf	postinc2,f,c
 25659  01399A  0E00               	movlw	0
 25660  01399C  22DD               	addwfc	postdec2,f,c
 25661  01399E                     l16130:
 25662  01399E  0ED0               	movlw	208
 25663  0139A0  6E34               	movwf	(btemp+10)^0,c
 25664  0139A2  0EFF               	movlw	255
 25665  0139A4  6E35               	movwf	(btemp+11)^0,c
 25666                           
 25667                           ;stkvar	_fmt @ sp[(-32)+-4]
 25668  0139A6  0EDC               	movlw	-36
 25669  0139A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25670  0139AE  0EDD               	movlw	-35
 25671  0139B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25672  0139B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 25673  0139BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 25674  0139C2                     	if	0	;tblptru may be non-zero
 25675  0139C2                     	endif
 25676  0139C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25677  0139C2  0E00               	movlw	low (__mediumconst shr (0+16))
 25678  0139C4  6EF8               	movwf	tblptru,c
 25679  0139C6                     	endif
 25680  0139C6  0008               	tblrd		*
 25681  0139C8  50F5               	movf	tablat,w,c
 25682  0139CA  6E32               	movwf	(btemp+8)^0,c
 25683  0139CC  6A33               	clrf	(btemp+9)^0,c
 25684  0139CE  5034               	movf	(btemp+10)^0,w,c
 25685  0139D0  2632               	addwf	(btemp+8)^0,f,c
 25686  0139D2  5035               	movf	(btemp+11)^0,w,c
 25687  0139D4  2233               	addwfc	(btemp+9)^0,f,c
 25688  0139D6  5033               	movf	(btemp+9)^0,w,c
 25689  0139D8  E106               	bnz	u15640
 25690  0139DA  0E0A               	movlw	10
 25691  0139DC  5C32               	subwf	(btemp+8)^0,w,c
 25692  0139DE  B0D8               	btfsc	status,0,c
 25693  0139E0  D002               	goto	u15640
 25694  0139E2  0E01               	movlw	1
 25695  0139E4  D001               	goto	u15650
 25696  0139E6                     u15640:
 25697  0139E6  0E00               	movlw	0
 25698  0139E8                     u15650:
 25699  0139E8  6E34               	movwf	(btemp+10)^0,c
 25700  0139EA  6A35               	clrf	(btemp+11)^0,c
 25701                           
 25702                           ;stkvar	_vfpfcnvrt$6661 @ sp[(-32)+4]
 25703  0139EC  0EE4               	movlw	-28
 25704  0139EE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25705  0139F4  0EE5               	movlw	-27
 25706  0139F6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25707                           
 25708                           ;stkvar	_vfpfcnvrt$6661 @ sp[(-32)+4]
 25709  0139FC  0EE4               	movlw	-28
 25710  0139FE  006F FF8C  F02A    	movff	plusw1,btemp
 25711  013A04  0EE5               	movlw	-27
 25712  013A06  50E3               	movf	plusw1,w,c
 25713  013A08  102A               	iorwf	btemp^0,w,c
 25714  013A0A  A4D8               	btfss	status,2,c
 25715  013A0C  D7BD               	goto	l16128
 25716  013A0E                     u15660:
 25717                           
 25718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 25719                           ;stkvar	_fmt @ sp[(-32)+-4]
 25720  013A0E  0EDC               	movlw	-36
 25721  013A10  006F FF8F FFD9     	movff	plusw1,fsr2l
 25722  013A16  0EDD               	movlw	-35
 25723  013A18  006F FF8F FFDA     	movff	plusw1,fsr2h
 25724  013A1E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25725  013A24  006F FF77 FFF7     	movff	postdec2,tblptrh
 25726  013A2A                     	if	0	;tblptru may be non-zero
 25727  013A2A                     	endif
 25728  013A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25729  013A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 25730  013A2C  6EF8               	movwf	tblptru,c
 25731  013A2E                     	endif
 25732  013A2E  0008               	tblrd		*
 25733  013A30  50F5               	movf	tablat,w,c
 25734  013A32  0A2E               	xorlw	46
 25735  013A34  A4D8               	btfss	status,2,c
 25736  013A36  D0AC               	goto	u15710
 25737                           
 25738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 25739  013A38  6A4C               	clrf	_prec^0,c
 25740  013A3A  6A4D               	clrf	(_prec+1)^0,c
 25741                           
 25742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 25743                           ;stkvar	_fmt @ sp[(-32)+-4]
 25744  013A3C  0EDC               	movlw	-36
 25745  013A3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25746  013A44  0EDD               	movlw	-35
 25747  013A46  006F FF8F FFDA     	movff	plusw1,fsr2h
 25748  013A4C  2ADE               	incf	postinc2,f,c
 25749  013A4E  0E00               	movlw	0
 25750  013A50  22DD               	addwfc	postdec2,f,c
 25751                           
 25752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 25753                           ;stkvar	_fmt @ sp[(-32)+-4]
 25754  013A52  0EDC               	movlw	-36
 25755  013A54  006F FF8F FFD9     	movff	plusw1,fsr2l
 25756  013A5A  0EDD               	movlw	-35
 25757  013A5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25758  013A62  006F FF7B FFF6     	movff	postinc2,tblptrl
 25759  013A68  006F FF77 FFF7     	movff	postdec2,tblptrh
 25760  013A6E                     	if	0	;tblptru may be non-zero
 25761  013A6E                     	endif
 25762  013A6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25763  013A6E  0E00               	movlw	low (__mediumconst shr (0+16))
 25764  013A70  6EF8               	movwf	tblptru,c
 25765  013A72                     	endif
 25766  013A72  0008               	tblrd		*
 25767  013A74  50F5               	movf	tablat,w,c
 25768  013A76  0A2A               	xorlw	42
 25769  013A78  A4D8               	btfss	status,2,c
 25770  013A7A  D02A               	goto	l16148
 25771                           
 25772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 25773                           ;stkvar	_fmt @ sp[(-32)+-4]
 25774  013A7C  0EDC               	movlw	-36
 25775  013A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25776  013A84  0EDD               	movlw	-35
 25777  013A86  006F FF8F FFDA     	movff	plusw1,fsr2h
 25778  013A8C  2ADE               	incf	postinc2,f,c
 25779  013A8E  0E00               	movlw	0
 25780  013A90  22DD               	addwfc	postdec2,f,c
 25781                           
 25782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 25783                           ;stkvar	_ap @ sp[(-32)+-6]
 25784  013A92  0EDA               	movlw	-38
 25785  013A94  006F FF8F FFD9     	movff	plusw1,fsr2l
 25786  013A9A  0EDB               	movlw	-37
 25787  013A9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25788  013AA2  0E02               	movlw	2
 25789  013AA4  5EDE               	subwf	postinc2,f,c
 25790  013AA6  0E00               	movlw	0
 25791  013AA8  5ADD               	subwfb	postdec2,f,c
 25792  013AAA  006F FF78  F034    	movff	postinc2,btemp+10
 25793  013AB0  006F FF74  F035    	movff	postdec2,btemp+11
 25794  013AB6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25795  013ABC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25796  013AC2  006F FF78  F04C    	movff	postinc2,_prec
 25797  013AC8  006F FF74  F04D    	movff	postdec2,_prec+1
 25798                           
 25799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 25800  013ACE  D060               	goto	u15710
 25801  013AD0                     l16148:
 25802                           
 25803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 25804                           ;stkvar	_fmt @ sp[(-32)+-4]
 25805  013AD0  0EDC               	movlw	-36
 25806  013AD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25807  013AD8  0EDD               	movlw	-35
 25808  013ADA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25809  013AE0  006F FF78  F034    	movff	postinc2,btemp+10
 25810  013AE6  006F FF74  F035    	movff	postdec2,btemp+11
 25811  013AEC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25812  013AF2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25813  013AF8  EC64  F0DF         	call	_atoi	;wreg free
 25814  013AFC  0060  F0A8  F04C   	movff	btemp,_prec
 25815  013B02  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 25816                           
 25817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25818  013B08  D00B               	goto	l16152
 25819  013B0A                     l16150:
 25820                           
 25821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 25822                           ;stkvar	_fmt @ sp[(-32)+-4]
 25823  013B0A  0EDC               	movlw	-36
 25824  013B0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25825  013B12  0EDD               	movlw	-35
 25826  013B14  006F FF8F FFDA     	movff	plusw1,fsr2h
 25827  013B1A  2ADE               	incf	postinc2,f,c
 25828  013B1C  0E00               	movlw	0
 25829  013B1E  22DD               	addwfc	postdec2,f,c
 25830  013B20                     l16152:
 25831  013B20  0ED0               	movlw	208
 25832  013B22  6E34               	movwf	(btemp+10)^0,c
 25833  013B24  0EFF               	movlw	255
 25834  013B26  6E35               	movwf	(btemp+11)^0,c
 25835                           
 25836                           ;stkvar	_fmt @ sp[(-32)+-4]
 25837  013B28  0EDC               	movlw	-36
 25838  013B2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25839  013B30  0EDD               	movlw	-35
 25840  013B32  006F FF8F FFDA     	movff	plusw1,fsr2h
 25841  013B38  006F FF7B FFF6     	movff	postinc2,tblptrl
 25842  013B3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 25843  013B44                     	if	0	;tblptru may be non-zero
 25844  013B44                     	endif
 25845  013B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25846  013B44  0E00               	movlw	low (__mediumconst shr (0+16))
 25847  013B46  6EF8               	movwf	tblptru,c
 25848  013B48                     	endif
 25849  013B48  0008               	tblrd		*
 25850  013B4A  50F5               	movf	tablat,w,c
 25851  013B4C  6E32               	movwf	(btemp+8)^0,c
 25852  013B4E  6A33               	clrf	(btemp+9)^0,c
 25853  013B50  5034               	movf	(btemp+10)^0,w,c
 25854  013B52  2632               	addwf	(btemp+8)^0,f,c
 25855  013B54  5035               	movf	(btemp+11)^0,w,c
 25856  013B56  2233               	addwfc	(btemp+9)^0,f,c
 25857  013B58  5033               	movf	(btemp+9)^0,w,c
 25858  013B5A  E106               	bnz	u15690
 25859  013B5C  0E0A               	movlw	10
 25860  013B5E  5C32               	subwf	(btemp+8)^0,w,c
 25861  013B60  B0D8               	btfsc	status,0,c
 25862  013B62  D002               	goto	u15690
 25863  013B64  0E01               	movlw	1
 25864  013B66  D001               	goto	u15700
 25865  013B68                     u15690:
 25866  013B68  0E00               	movlw	0
 25867  013B6A                     u15700:
 25868  013B6A  6E34               	movwf	(btemp+10)^0,c
 25869  013B6C  6A35               	clrf	(btemp+11)^0,c
 25870                           
 25871                           ;stkvar	_vfpfcnvrt$6662 @ sp[(-32)+0]
 25872  013B6E  0EE0               	movlw	-32
 25873  013B70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25874  013B76  0EE1               	movlw	-31
 25875  013B78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25876                           
 25877                           ;stkvar	_vfpfcnvrt$6662 @ sp[(-32)+0]
 25878  013B7E  0EE0               	movlw	-32
 25879  013B80  006F FF8C  F02A    	movff	plusw1,btemp
 25880  013B86  0EE1               	movlw	-31
 25881  013B88  50E3               	movf	plusw1,w,c
 25882  013B8A  102A               	iorwf	btemp^0,w,c
 25883  013B8C  A4D8               	btfss	status,2,c
 25884  013B8E  D7BD               	goto	l16150
 25885  013B90                     u15710:
 25886                           
 25887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 25888                           ;stkvar	_fmt @ sp[(-32)+-4]
 25889  013B90  0EDC               	movlw	-36
 25890  013B92  006F FF8F FFD9     	movff	plusw1,fsr2l
 25891  013B98  0EDD               	movlw	-35
 25892  013B9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25893  013BA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 25894  013BA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 25895  013BAC                     	if	0	;tblptru may be non-zero
 25896  013BAC                     	endif
 25897  013BAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25898  013BAC  0E00               	movlw	low (__mediumconst shr (0+16))
 25899  013BAE  6EF8               	movwf	tblptru,c
 25900  013BB0                     	endif
 25901  013BB0  0008               	tblrd		*
 25902  013BB2  50F5               	movf	tablat,w,c
 25903  013BB4  6EE6               	movwf	postinc1,c
 25904  013BB6  0E00               	movlw	0
 25905  013BB8  6EE6               	movwf	postinc1,c
 25906  013BBA  EC1A  F007         	call	_tolower	;wreg free
 25907                           
 25908                           ;stkvar	_ct @ sp[(-32)+26]
 25909  013BBE  0EFA               	movlw	-6
 25910  013BC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 25911                           
 25912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 25913                           ;stkvar	_ct @ sp[(-32)+26]
 25914  013BC6  0EFA               	movlw	-6
 25915  013BC8  50E3               	movf	plusw1,w,c
 25916  013BCA  B4D8               	btfsc	status,2,c
 25917  013BCC  D05B               	goto	l16168
 25918                           
 25919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 25920                           ;stkvar	_ct @ sp[(-32)+26]
 25921  013BCE  0EFB               	movlw	251
 25922  013BD0  24E1               	addwf	fsr1l,w,c
 25923  013BD2  6ED9               	movwf	fsr2l,c
 25924  013BD4  0EFF               	movlw	255
 25925  013BD6  20E2               	addwfc	fsr1h,w,c
 25926  013BD8  6EDA               	movwf	fsr2h,c
 25927                           
 25928                           ;stkvar	_fmt @ sp[(-32)+-4]
 25929  013BDA  0EDC               	movlw	-36
 25930  013BDC  006F FF8F FFE9     	movff	plusw1,fsr0l
 25931  013BE2  0EDD               	movlw	-35
 25932  013BE4  006F FF8F FFEA     	movff	plusw1,fsr0h
 25933  013BEA  006F FFB8  F034    	movff	postinc0,btemp+10
 25934  013BF0  006F FFB4  F035    	movff	postdec0,btemp+11
 25935  013BF6  0E01               	movlw	1
 25936  013BF8  2634               	addwf	(btemp+10)^0,f,c
 25937  013BFA  0E00               	movlw	0
 25938  013BFC  2235               	addwfc	(btemp+11)^0,f,c
 25939  013BFE  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 25940  013C04  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 25941  013C0A                     	if	0	;tblptru may be non-zero
 25942  013C0A                     	endif
 25943  013C0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25944  013C0A  0E00               	movlw	low (__mediumconst shr (0+16))
 25945  013C0C  6EF8               	movwf	tblptru,c
 25946  013C0E                     	endif
 25947  013C0E  0008               	tblrd		*
 25948  013C10  50F5               	movf	tablat,w,c
 25949  013C12  6EE6               	movwf	postinc1,c
 25950  013C14  0E00               	movlw	0
 25951  013C16  6EE6               	movwf	postinc1,c
 25952  013C18  EC1A  F007         	call	_tolower	;wreg free
 25953  013C1C  502A               	movf	btemp^0,w,c
 25954  013C1E  6EDF               	movwf	indf2,c
 25955                           
 25956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 25957                           ;stkvar	_ct @ sp[(-32)+26]
 25958  013C20  0EFB               	movlw	251
 25959  013C22  24E1               	addwf	fsr1l,w,c
 25960  013C24  6ED9               	movwf	fsr2l,c
 25961  013C26  0EFF               	movlw	255
 25962  013C28  20E2               	addwfc	fsr1h,w,c
 25963  013C2A  6EDA               	movwf	fsr2h,c
 25964  013C2C  50DF               	movf	indf2,w,c
 25965  013C2E  B4D8               	btfsc	status,2,c
 25966  013C30  D029               	goto	l16168
 25967                           
 25968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 25969                           ;stkvar	_ct @ sp[(-32)+26]
 25970  013C32  0EFC               	movlw	252
 25971  013C34  24E1               	addwf	fsr1l,w,c
 25972  013C36  6ED9               	movwf	fsr2l,c
 25973  013C38  0EFF               	movlw	255
 25974  013C3A  20E2               	addwfc	fsr1h,w,c
 25975  013C3C  6EDA               	movwf	fsr2h,c
 25976                           
 25977                           ;stkvar	_fmt @ sp[(-32)+-4]
 25978  013C3E  0EDC               	movlw	-36
 25979  013C40  006F FF8F FFE9     	movff	plusw1,fsr0l
 25980  013C46  0EDD               	movlw	-35
 25981  013C48  006F FF8F FFEA     	movff	plusw1,fsr0h
 25982  013C4E  006F FFB8  F034    	movff	postinc0,btemp+10
 25983  013C54  006F FFB4  F035    	movff	postdec0,btemp+11
 25984  013C5A  0E02               	movlw	2
 25985  013C5C  2634               	addwf	(btemp+10)^0,f,c
 25986  013C5E  0E00               	movlw	0
 25987  013C60  2235               	addwfc	(btemp+11)^0,f,c
 25988  013C62  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 25989  013C68  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 25990  013C6E                     	if	0	;tblptru may be non-zero
 25991  013C6E                     	endif
 25992  013C6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25993  013C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 25994  013C70  6EF8               	movwf	tblptru,c
 25995  013C72                     	endif
 25996  013C72  0008               	tblrd		*
 25997  013C74  50F5               	movf	tablat,w,c
 25998  013C76  6EE6               	movwf	postinc1,c
 25999  013C78  0E00               	movlw	0
 26000  013C7A  6EE6               	movwf	postinc1,c
 26001  013C7C  EC1A  F007         	call	_tolower	;wreg free
 26002  013C80  502A               	movf	btemp^0,w,c
 26003  013C82  6EDF               	movwf	indf2,c
 26004  013C84                     l16168:
 26005                           
 26006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26007                           ;stkvar	_fmt @ sp[(-32)+-4]
 26008  013C84  0EDC               	movlw	-36
 26009  013C86  006F FF8F FFD9     	movff	plusw1,fsr2l
 26010  013C8C  0EDD               	movlw	-35
 26011  013C8E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26012  013C94  006F FF7B FFF6     	movff	postinc2,tblptrl
 26013  013C9A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26014  013CA0                     	if	0	;tblptru may be non-zero
 26015  013CA0                     	endif
 26016  013CA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26017  013CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 26018  013CA2  6EF8               	movwf	tblptru,c
 26019  013CA4                     	endif
 26020  013CA4  0008               	tblrd		*
 26021  013CA6  50F5               	movf	tablat,w,c
 26022  013CA8  0A63               	xorlw	99
 26023  013CAA  A4D8               	btfss	status,2,c
 26024  013CAC  D037               	goto	l16178
 26025                           
 26026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26027                           ;stkvar	_fmt @ sp[(-32)+-4]
 26028  013CAE  0EDC               	movlw	-36
 26029  013CB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 26030  013CB6  0EDD               	movlw	-35
 26031  013CB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 26032  013CBE  2ADE               	incf	postinc2,f,c
 26033  013CC0  0E00               	movlw	0
 26034  013CC2  22DD               	addwfc	postdec2,f,c
 26035                           
 26036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 26037                           ;stkvar	_ap @ sp[(-32)+-6]
 26038  013CC4  0EDA               	movlw	-38
 26039  013CC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26040  013CCC  0EDB               	movlw	-37
 26041  013CCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26042  013CD4  0E02               	movlw	2
 26043  013CD6  5EDE               	subwf	postinc2,f,c
 26044  013CD8  0E00               	movlw	0
 26045  013CDA  5ADD               	subwfb	postdec2,f,c
 26046  013CDC  006F FF78  F034    	movff	postinc2,btemp+10
 26047  013CE2  006F FF74  F035    	movff	postdec2,btemp+11
 26048  013CE8  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26049  013CEE  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26050  013CF4  50DF               	movf	indf2,w,c
 26051  013CF6  6E35               	movwf	(btemp+11)^0,c
 26052                           
 26053                           ;stkvar	_c @ sp[(-32)+31]
 26054  013CF8  0EFF               	movlw	-1
 26055  013CFA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26056                           
 26057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 26058                           ;stkvar	_c @ sp[(-32)+31]
 26059  013D00  0EFF               	movlw	-1
 26060  013D02  50E3               	movf	plusw1,w,c
 26061  013D04  6EE6               	movwf	postinc1,c
 26062                           
 26063                           ;stkvar	_fp @ sp[(-33)+-2]
 26064  013D06  0EDD               	movlw	-35
 26065  013D08  006F FF8F FFE6     	movff	plusw1,postinc1
 26066  013D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 26067  013D14  EC94  F006         	call	_ctoa	;wreg free
 26068  013D18  EF07  F0A4         	goto	l2689
 26069  013D1C                     l16178:
 26070                           
 26071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 26072                           ;stkvar	_fmt @ sp[(-32)+-4]
 26073  013D1C  0EDC               	movlw	-36
 26074  013D1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26075  013D24  0EDD               	movlw	-35
 26076  013D26  006F FF8F FFDA     	movff	plusw1,fsr2h
 26077  013D2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26078  013D32  006F FF77 FFF7     	movff	postdec2,tblptrh
 26079  013D38                     	if	0	;tblptru may be non-zero
 26080  013D38                     	endif
 26081  013D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26082  013D38  0E00               	movlw	low (__mediumconst shr (0+16))
 26083  013D3A  6EF8               	movwf	tblptru,c
 26084  013D3C                     	endif
 26085  013D3C  0008               	tblrd		*
 26086  013D3E  50F5               	movf	tablat,w,c
 26087  013D40  0A64               	xorlw	100
 26088  013D42  B4D8               	btfsc	status,2,c
 26089  013D44  D015               	goto	u15760
 26090                           
 26091                           ;stkvar	_fmt @ sp[(-32)+-4]
 26092  013D46  0EDC               	movlw	-36
 26093  013D48  006F FF8F FFD9     	movff	plusw1,fsr2l
 26094  013D4E  0EDD               	movlw	-35
 26095  013D50  006F FF8F FFDA     	movff	plusw1,fsr2h
 26096  013D56  006F FF7B FFF6     	movff	postinc2,tblptrl
 26097  013D5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26098  013D62                     	if	0	;tblptru may be non-zero
 26099  013D62                     	endif
 26100  013D62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26101  013D62  0E00               	movlw	low (__mediumconst shr (0+16))
 26102  013D64  6EF8               	movwf	tblptru,c
 26103  013D66                     	endif
 26104  013D66  0008               	tblrd		*
 26105  013D68  50F5               	movf	tablat,w,c
 26106  013D6A  0A69               	xorlw	105
 26107  013D6C  A4D8               	btfss	status,2,c
 26108  013D6E  D076               	goto	l16190
 26109  013D70                     u15760:
 26110                           
 26111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 26112                           ;stkvar	_fmt @ sp[(-32)+-4]
 26113  013D70  0EDC               	movlw	-36
 26114  013D72  006F FF8F FFD9     	movff	plusw1,fsr2l
 26115  013D78  0EDD               	movlw	-35
 26116  013D7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26117  013D80  2ADE               	incf	postinc2,f,c
 26118  013D82  0E00               	movlw	0
 26119  013D84  22DD               	addwfc	postdec2,f,c
 26120                           
 26121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 26122                           ;stkvar	_ap @ sp[(-32)+-6]
 26123  013D86  0EDA               	movlw	-38
 26124  013D88  006F FF8F FFD9     	movff	plusw1,fsr2l
 26125  013D8E  0EDB               	movlw	-37
 26126  013D90  006F FF8F FFDA     	movff	plusw1,fsr2h
 26127  013D96  0E02               	movlw	2
 26128  013D98  5EDE               	subwf	postinc2,f,c
 26129  013D9A  0E00               	movlw	0
 26130  013D9C  5ADD               	subwfb	postdec2,f,c
 26131  013D9E  006F FF78  F034    	movff	postinc2,btemp+10
 26132  013DA4  006F FF74  F035    	movff	postdec2,btemp+11
 26133  013DAA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26134  013DB0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26135  013DB6  006F FF78  F034    	movff	postinc2,btemp+10
 26136  013DBC  006F FF74  F035    	movff	postdec2,btemp+11
 26137                           
 26138                           ;stkvar	_ll @ sp[(-32)+14]
 26139  013DC2  0EEE               	movlw	-18
 26140  013DC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26141  013DCA  0EEF               	movlw	-17
 26142  013DCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26143  013DD2  6A2A               	clrf	btemp^0,c
 26144  013DD4  BEE3               	btfsc	plusw1,7,c
 26145  013DD6  682A               	setf	btemp^0,c
 26146  013DD8  0EF0               	movlw	-16
 26147  013DDA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26148  013DE0  0EF1               	movlw	-15
 26149  013DE2  0060  F0AB  FFE3   	movff	btemp,plusw1
 26150  013DE8  0EF2               	movlw	-14
 26151  013DEA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26152  013DF0  0EF3               	movlw	-13
 26153  013DF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 26154  013DF8  0EF4               	movlw	-12
 26155  013DFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26156  013E00  0EF5               	movlw	-11
 26157  013E02  0060  F0AB  FFE3   	movff	btemp,plusw1
 26158  013E08                     l16186:
 26159                           
 26160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 26161                           ;stkvar	_ll @ sp[(-32)+14]
 26162  013E08  50E1               	movf	fsr1l,w,c
 26163  013E0A  0FEE               	addlw	-18
 26164  013E0C  6ED9               	movwf	fsr2l,c
 26165  013E0E  50E2               	movf	fsr1h,w,c
 26166  013E10  6EDA               	movwf	fsr2h,c
 26167  013E12  0EFF               	movlw	255
 26168  013E14  22DA               	addwfc	fsr2h,f,c
 26169  013E16  006F FF7B FFE6     	movff	postinc2,postinc1
 26170  013E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 26171  013E22  006F FF7B FFE6     	movff	postinc2,postinc1
 26172  013E28  006F FF7B FFE6     	movff	postinc2,postinc1
 26173  013E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 26174  013E34  006F FF7B FFE6     	movff	postinc2,postinc1
 26175  013E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 26176  013E40  006F FF7B FFE6     	movff	postinc2,postinc1
 26177                           
 26178                           ;stkvar	_fp @ sp[(-40)+-2]
 26179  013E46  0ED6               	movlw	-42
 26180  013E48  006F FF8F FFE6     	movff	plusw1,postinc1
 26181  013E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 26182  013E54  EC44  F0C5         	call	_dtoa	;wreg free
 26183  013E58  EF07  F0A4         	goto	l2689
 26184  013E5C                     l16190:
 26185                           
 26186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 26187  013E5C  0E02               	movlw	2
 26188  013E5E  6EE6               	movwf	postinc1,c
 26189  013E60  0E00               	movlw	0
 26190  013E62  6EE6               	movwf	postinc1,c
 26191  013E64  0EED               	movlw	low STR_99
 26192  013E66  6EE6               	movwf	postinc1,c
 26193  013E68  0EFF               	movlw	high STR_99
 26194  013E6A  6EE6               	movwf	postinc1,c
 26195                           
 26196                           ;stkvar	_fmt @ sp[(-36)+-4]
 26197  013E6C  0ED8               	movlw	-40
 26198  013E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26199  013E74  0ED9               	movlw	-39
 26200  013E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 26201  013E7C  006F FF78  F034    	movff	postinc2,btemp+10
 26202  013E82  006F FF74  F035    	movff	postdec2,btemp+11
 26203  013E88  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26204  013E8E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26205  013E94  EC48  F0E6         	call	_strncmp	;wreg free
 26206  013E98  502A               	movf	btemp^0,w,c
 26207  013E9A  102B               	iorwf	(btemp+1)^0,w,c
 26208  013E9C  B4D8               	btfsc	status,2,c
 26209  013E9E  D022               	goto	u15780
 26210  013EA0  0E02               	movlw	2
 26211  013EA2  6EE6               	movwf	postinc1,c
 26212  013EA4  0E00               	movlw	0
 26213  013EA6  6EE6               	movwf	postinc1,c
 26214  013EA8  0EF3               	movlw	low STR_103
 26215  013EAA  6EE6               	movwf	postinc1,c
 26216  013EAC  0EFF               	movlw	high STR_103
 26217  013EAE  6EE6               	movwf	postinc1,c
 26218                           
 26219                           ;stkvar	_fmt @ sp[(-36)+-4]
 26220  013EB0  0ED8               	movlw	-40
 26221  013EB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26222  013EB8  0ED9               	movlw	-39
 26223  013EBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26224  013EC0  006F FF78  F034    	movff	postinc2,btemp+10
 26225  013EC6  006F FF74  F035    	movff	postdec2,btemp+11
 26226  013ECC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26227  013ED2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26228  013ED8  EC48  F0E6         	call	_strncmp	;wreg free
 26229  013EDC  502A               	movf	btemp^0,w,c
 26230  013EDE  102B               	iorwf	(btemp+1)^0,w,c
 26231  013EE0  A4D8               	btfss	status,2,c
 26232  013EE2  D069               	goto	l16202
 26233  013EE4                     u15780:
 26234                           
 26235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 26236                           ;stkvar	_fmt @ sp[(-32)+-4]
 26237  013EE4  0EDC               	movlw	-36
 26238  013EE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26239  013EEC  0EDD               	movlw	-35
 26240  013EEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26241  013EF4  0E02               	movlw	2
 26242  013EF6  26DE               	addwf	postinc2,f,c
 26243  013EF8  0E00               	movlw	0
 26244  013EFA  22DD               	addwfc	postdec2,f,c
 26245                           
 26246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 26247                           ;stkvar	_ap @ sp[(-32)+-6]
 26248  013EFC  0EDA               	movlw	-38
 26249  013EFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26250  013F04  0EDB               	movlw	-37
 26251  013F06  006F FF8F FFDA     	movff	plusw1,fsr2h
 26252  013F0C  0E04               	movlw	4
 26253  013F0E  5EDE               	subwf	postinc2,f,c
 26254  013F10  0E00               	movlw	0
 26255  013F12  5ADD               	subwfb	postdec2,f,c
 26256  013F14  006F FF78  F034    	movff	postinc2,btemp+10
 26257  013F1A  006F FF74  F035    	movff	postdec2,btemp+11
 26258  013F20  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26259  013F26  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26260  013F2C  006F FF78  F032    	movff	postinc2,btemp+8
 26261  013F32  006F FF78  F033    	movff	postinc2,btemp+9
 26262  013F38  006F FF78  F034    	movff	postinc2,btemp+10
 26263  013F3E  006F FF78  F035    	movff	postinc2,btemp+11
 26264  013F44  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 26265  013F4A  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 26266  013F50  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 26267  013F56  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 26268  013F5C  6A3E               	clrf	(btemp+20)^0,c
 26269  013F5E  BE3D               	btfsc	(btemp+19)^0,7,c
 26270  013F60  683E               	setf	(btemp+20)^0,c
 26271  013F62  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 26272  013F68  0060  F0F8  F040   	movff	btemp+20,btemp+22
 26273  013F6E  0060  F0F8  F041   	movff	btemp+20,btemp+23
 26274                           
 26275                           ;stkvar	_ll @ sp[(-32)+14]
 26276  013F74  0EEE               	movlw	-18
 26277  013F76  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26278  013F7C  0EEF               	movlw	-17
 26279  013F7E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26280  013F84  0EF0               	movlw	-16
 26281  013F86  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26282  013F8C  0EF1               	movlw	-15
 26283  013F8E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26284  013F94  0EF2               	movlw	-14
 26285  013F96  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26286  013F9C  0EF3               	movlw	-13
 26287  013F9E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26288  013FA4  0EF4               	movlw	-12
 26289  013FA6  0060  F103  FFE3   	movff	btemp+22,plusw1
 26290  013FAC  0EF5               	movlw	-11
 26291  013FAE  0060  F107  FFE3   	movff	btemp+23,plusw1
 26292  013FB4  D729               	goto	l16186
 26293  013FB6                     l16202:
 26294                           
 26295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 26296                           ;stkvar	_ct @ sp[(-32)+26]
 26297  013FB6  0EFA               	movlw	-6
 26298  013FB8  006F FF8C  F02A    	movff	plusw1,btemp
 26299  013FBE  0E66               	movlw	102
 26300  013FC0  182A               	xorwf	btemp^0,w,c
 26301  013FC2  A4D8               	btfss	status,2,c
 26302  013FC4  D06E               	goto	l16214
 26303                           
 26304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 26305                           ;stkvar	_fmt @ sp[(-32)+-4]
 26306  013FC6  0EDC               	movlw	-36
 26307  013FC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26308  013FCE  0EDD               	movlw	-35
 26309  013FD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26310  013FD6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26311  013FDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26312  013FE2                     	if	0	;tblptru may be non-zero
 26313  013FE2                     	endif
 26314  013FE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26315  013FE2  0E00               	movlw	low (__mediumconst shr (0+16))
 26316  013FE4  6EF8               	movwf	tblptru,c
 26317  013FE6                     	endif
 26318                           
 26319                           ;stkvar	_c @ sp[(-32)+31]
 26320  013FE6  0008               	tblrd		*
 26321  013FE8  0EFF               	movlw	-1
 26322  013FEA  006F FFD7 FFE3     	movff	tablat,plusw1
 26323                           
 26324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 26325                           ;stkvar	_fmt @ sp[(-32)+-4]
 26326  013FF0  0EDC               	movlw	-36
 26327  013FF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26328  013FF8  0EDD               	movlw	-35
 26329  013FFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26330  014000  2ADE               	incf	postinc2,f,c
 26331  014002  0E00               	movlw	0
 26332  014004  22DD               	addwfc	postdec2,f,c
 26333                           
 26334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 26335                           ;stkvar	_ap @ sp[(-32)+-6]
 26336  014006  0EDA               	movlw	-38
 26337  014008  006F FF8F FFD9     	movff	plusw1,fsr2l
 26338  01400E  0EDB               	movlw	-37
 26339  014010  006F FF8F FFDA     	movff	plusw1,fsr2h
 26340  014016  0E04               	movlw	4
 26341  014018  5EDE               	subwf	postinc2,f,c
 26342  01401A  0E00               	movlw	0
 26343  01401C  5ADD               	subwfb	postdec2,f,c
 26344  01401E  006F FF78  F034    	movff	postinc2,btemp+10
 26345  014024  006F FF74  F035    	movff	postdec2,btemp+11
 26346  01402A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26347  014030  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26348  014036  006F FF78  F032    	movff	postinc2,btemp+8
 26349  01403C  006F FF78  F033    	movff	postinc2,btemp+9
 26350  014042  006F FF78  F034    	movff	postinc2,btemp+10
 26351  014048  006F FF78  F035    	movff	postinc2,btemp+11
 26352                           
 26353                           ;stkvar	_f @ sp[(-32)+22]
 26354  01404E  0EF6               	movlw	-10
 26355  014050  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26356  014056  0EF7               	movlw	-9
 26357  014058  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26358  01405E  0EF8               	movlw	-8
 26359  014060  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26360  014066  0EF9               	movlw	-7
 26361  014068  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26362  01406E                     l16210:
 26363                           
 26364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 26365                           ;stkvar	_c @ sp[(-32)+31]
 26366  01406E  0EFF               	movlw	-1
 26367  014070  50E3               	movf	plusw1,w,c
 26368  014072  6EE6               	movwf	postinc1,c
 26369                           
 26370                           ;stkvar	_f @ sp[(-33)+22]
 26371  014074  0EF5               	movlw	-11
 26372  014076  006F FF8F FFE6     	movff	plusw1,postinc1
 26373  01407C  006F FF8F FFE6     	movff	plusw1,postinc1
 26374  014082  006F FF8F FFE6     	movff	plusw1,postinc1
 26375  014088  006F FF8F FFE6     	movff	plusw1,postinc1
 26376                           
 26377                           ;stkvar	_fp @ sp[(-37)+-2]
 26378  01408E  0ED9               	movlw	-39
 26379  014090  006F FF8F FFE6     	movff	plusw1,postinc1
 26380  014096  006F FF8F FFE6     	movff	plusw1,postinc1
 26381  01409C  ECAB  F08A         	call	_efgtoa	;wreg free
 26382  0140A0  D3B6               	goto	l2689
 26383  0140A2                     l16214:
 26384                           
 26385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 26386  0140A2  0E02               	movlw	2
 26387  0140A4  6EE6               	movwf	postinc1,c
 26388  0140A6  0E00               	movlw	0
 26389  0140A8  6EE6               	movwf	postinc1,c
 26390  0140AA  0EF0               	movlw	low STR_108
 26391  0140AC  6EE6               	movwf	postinc1,c
 26392  0140AE  0EFF               	movlw	high STR_108
 26393  0140B0  6EE6               	movwf	postinc1,c
 26394                           
 26395                           ;stkvar	_ct @ sp[(-36)+26]
 26396  0140B2  0EF6               	movlw	246
 26397  0140B4  24E1               	addwf	fsr1l,w,c
 26398  0140B6  6E2A               	movwf	btemp^0,c
 26399  0140B8  0EFF               	movlw	255
 26400  0140BA  20E2               	addwfc	fsr1h,w,c
 26401  0140BC  6E2B               	movwf	(btemp+1)^0,c
 26402  0140BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 26403  0140C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26404  0140CA  EC48  F0E6         	call	_strncmp	;wreg free
 26405  0140CE  502A               	movf	btemp^0,w,c
 26406  0140D0  102B               	iorwf	(btemp+1)^0,w,c
 26407  0140D2  A4D8               	btfss	status,2,c
 26408  0140D4  D096               	goto	l16234
 26409                           
 26410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 26411                           ;stkvar	_fmt @ sp[(-32)+-4]
 26412  0140D6  0EDC               	movlw	-36
 26413  0140D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26414  0140DE  0EDD               	movlw	-35
 26415  0140E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26416  0140E6  006F FF78  F034    	movff	postinc2,btemp+10
 26417  0140EC  006F FF74  F035    	movff	postdec2,btemp+11
 26418  0140F2  0E01               	movlw	1
 26419  0140F4  2634               	addwf	(btemp+10)^0,f,c
 26420  0140F6  0E00               	movlw	0
 26421  0140F8  2235               	addwfc	(btemp+11)^0,f,c
 26422  0140FA  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26423  014100  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26424  014106                     	if	0	;tblptru may be non-zero
 26425  014106                     	endif
 26426  014106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26427  014106  0E00               	movlw	low (__mediumconst shr (0+16))
 26428  014108  6EF8               	movwf	tblptru,c
 26429  01410A                     	endif
 26430                           
 26431                           ;stkvar	_c @ sp[(-32)+31]
 26432  01410A  0008               	tblrd		*
 26433  01410C  0EFF               	movlw	-1
 26434  01410E  006F FFD7 FFE3     	movff	tablat,plusw1
 26435  014114  0EBF               	movlw	191
 26436  014116  6E34               	movwf	(btemp+10)^0,c
 26437  014118  0EFF               	movlw	255
 26438  01411A  6E35               	movwf	(btemp+11)^0,c
 26439                           
 26440                           ;stkvar	_fmt @ sp[(-32)+-4]
 26441  01411C  0EDC               	movlw	-36
 26442  01411E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26443  014124  0EDD               	movlw	-35
 26444  014126  006F FF8F FFDA     	movff	plusw1,fsr2h
 26445  01412C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26446  014132  006F FF77 FFF7     	movff	postdec2,tblptrh
 26447  014138                     	if	0	;tblptru may be non-zero
 26448  014138                     	endif
 26449  014138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26450  014138  0E00               	movlw	low (__mediumconst shr (0+16))
 26451  01413A  6EF8               	movwf	tblptru,c
 26452  01413C                     	endif
 26453  01413C  0008               	tblrd		*
 26454  01413E  50F5               	movf	tablat,w,c
 26455  014140  6E32               	movwf	(btemp+8)^0,c
 26456  014142  6A33               	clrf	(btemp+9)^0,c
 26457  014144  5034               	movf	(btemp+10)^0,w,c
 26458  014146  2632               	addwf	(btemp+8)^0,f,c
 26459  014148  5035               	movf	(btemp+11)^0,w,c
 26460  01414A  2233               	addwfc	(btemp+9)^0,f,c
 26461  01414C  5033               	movf	(btemp+9)^0,w,c
 26462  01414E  E106               	bnz	u15810
 26463  014150  0E1A               	movlw	26
 26464  014152  5C32               	subwf	(btemp+8)^0,w,c
 26465  014154  B0D8               	btfsc	status,0,c
 26466  014156  D002               	goto	u15810
 26467  014158  0E01               	movlw	1
 26468  01415A  D001               	goto	u15820
 26469  01415C                     u15810:
 26470  01415C  0E00               	movlw	0
 26471  01415E                     u15820:
 26472  01415E  6E34               	movwf	(btemp+10)^0,c
 26473  014160  6A35               	clrf	(btemp+11)^0,c
 26474                           
 26475                           ;stkvar	_vfpfcnvrt$6673 @ sp[(-32)+2]
 26476  014162  0EE2               	movlw	-30
 26477  014164  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26478  01416A  0EE3               	movlw	-29
 26479  01416C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26480                           
 26481                           ;stkvar	_vfpfcnvrt$6673 @ sp[(-32)+2]
 26482  014172  0EE2               	movlw	-30
 26483  014174  006F FF8C  F02A    	movff	plusw1,btemp
 26484  01417A  0EE3               	movlw	-29
 26485  01417C  50E3               	movf	plusw1,w,c
 26486  01417E  102A               	iorwf	btemp^0,w,c
 26487                           
 26488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 26489                           ;stkvar	_ap @ sp[(-32)+-6]
 26490                           
 26491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 26492                           
 26493                           ;stkvar	_f @ sp[(-32)+22]
 26494                           
 26495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 26496                           ;stkvar	_ap @ sp[(-32)+-6]
 26497  014180  0EDA               	movlw	-38
 26498  014182  006F FF8F FFD9     	movff	plusw1,fsr2l
 26499  014188  0EDB               	movlw	-37
 26500  01418A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26501  014190  0E04               	movlw	4
 26502  014192  5EDE               	subwf	postinc2,f,c
 26503  014194  0E00               	movlw	0
 26504  014196  5ADD               	subwfb	postdec2,f,c
 26505  014198  006F FF78  F034    	movff	postinc2,btemp+10
 26506  01419E  006F FF74  F035    	movff	postdec2,btemp+11
 26507  0141A4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26508  0141AA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26509  0141B0  006F FF78  F032    	movff	postinc2,btemp+8
 26510  0141B6  006F FF78  F033    	movff	postinc2,btemp+9
 26511  0141BC  006F FF78  F034    	movff	postinc2,btemp+10
 26512  0141C2  006F FF78  F035    	movff	postinc2,btemp+11
 26513                           
 26514                           ;stkvar	_f @ sp[(-32)+22]
 26515  0141C8  0EF6               	movlw	-10
 26516  0141CA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26517  0141D0  0EF7               	movlw	-9
 26518  0141D2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26519  0141D8  0EF8               	movlw	-8
 26520  0141DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26521  0141E0  0EF9               	movlw	-7
 26522  0141E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26523                           
 26524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 26525                           ;stkvar	_fmt @ sp[(-32)+-4]
 26526  0141E8  0EDC               	movlw	-36
 26527  0141EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 26528  0141F0  0EDD               	movlw	-35
 26529  0141F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 26530  0141F8  0E02               	movlw	2
 26531  0141FA  26DE               	addwf	postinc2,f,c
 26532  0141FC  0E00               	movlw	0
 26533  0141FE  22DD               	addwfc	postdec2,f,c
 26534  014200  D736               	goto	l16210
 26535  014202                     l16234:
 26536                           
 26537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 26538                           ;stkvar	_fmt @ sp[(-32)+-4]
 26539  014202  0EDC               	movlw	-36
 26540  014204  006F FF8F FFD9     	movff	plusw1,fsr2l
 26541  01420A  0EDD               	movlw	-35
 26542  01420C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26543  014212  006F FF7B FFF6     	movff	postinc2,tblptrl
 26544  014218  006F FF77 FFF7     	movff	postdec2,tblptrh
 26545  01421E                     	if	0	;tblptru may be non-zero
 26546  01421E                     	endif
 26547  01421E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26548  01421E  0E00               	movlw	low (__mediumconst shr (0+16))
 26549  014220  6EF8               	movwf	tblptru,c
 26550  014222                     	endif
 26551  014222  0008               	tblrd		*
 26552  014224  50F5               	movf	tablat,w,c
 26553  014226  0A73               	xorlw	115
 26554  014228  A4D8               	btfss	status,2,c
 26555  01422A  D042               	goto	l16244
 26556                           
 26557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 26558                           ;stkvar	_fmt @ sp[(-32)+-4]
 26559  01422C  0EDC               	movlw	-36
 26560  01422E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26561  014234  0EDD               	movlw	-35
 26562  014236  006F FF8F FFDA     	movff	plusw1,fsr2h
 26563  01423C  2ADE               	incf	postinc2,f,c
 26564  01423E  0E00               	movlw	0
 26565  014240  22DD               	addwfc	postdec2,f,c
 26566                           
 26567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 26568                           ;stkvar	_ap @ sp[(-32)+-6]
 26569  014242  0EDA               	movlw	-38
 26570  014244  006F FF8F FFD9     	movff	plusw1,fsr2l
 26571  01424A  0EDB               	movlw	-37
 26572  01424C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26573  014252  0E02               	movlw	2
 26574  014254  5EDE               	subwf	postinc2,f,c
 26575  014256  0E00               	movlw	0
 26576  014258  5ADD               	subwfb	postdec2,f,c
 26577  01425A  006F FF78  F034    	movff	postinc2,btemp+10
 26578  014260  006F FF74  F035    	movff	postdec2,btemp+11
 26579  014266  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26580  01426C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26581  014272  006F FF78  F034    	movff	postinc2,btemp+10
 26582  014278  006F FF74  F035    	movff	postdec2,btemp+11
 26583                           
 26584                           ;stkvar	_cp @ sp[(-32)+29]
 26585  01427E  0EFE               	movlw	-2
 26586  014280  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26587  014286  0EFD               	movlw	-3
 26588  014288  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26589                           
 26590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 26591                           ;stkvar	_cp @ sp[(-32)+29]
 26592  01428E  0EFD               	movlw	-3
 26593  014290  006F FF8F FFE6     	movff	plusw1,postinc1
 26594  014296  006F FF8F FFE6     	movff	plusw1,postinc1
 26595                           
 26596                           ;stkvar	_fp @ sp[(-34)+-2]
 26597  01429C  0EDC               	movlw	-36
 26598  01429E  006F FF8F FFE6     	movff	plusw1,postinc1
 26599  0142A4  006F FF8F FFE6     	movff	plusw1,postinc1
 26600  0142AA  EC45  F0DA         	call	_stoa	;wreg free
 26601  0142AE  D2AF               	goto	l2689
 26602  0142B0                     l16244:
 26603                           
 26604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 26605                           ;stkvar	_fmt @ sp[(-32)+-4]
 26606  0142B0  0EDC               	movlw	-36
 26607  0142B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26608  0142B8  0EDD               	movlw	-35
 26609  0142BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26610  0142C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 26611  0142C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 26612  0142CC                     	if	0	;tblptru may be non-zero
 26613  0142CC                     	endif
 26614  0142CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26615  0142CC  0E00               	movlw	low (__mediumconst shr (0+16))
 26616  0142CE  6EF8               	movwf	tblptru,c
 26617  0142D0                     	endif
 26618  0142D0  0008               	tblrd		*
 26619  0142D2  50F5               	movf	tablat,w,c
 26620  0142D4  0A75               	xorlw	117
 26621  0142D6  A4D8               	btfss	status,2,c
 26622  0142D8  D07C               	goto	l16254
 26623                           
 26624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 26625                           ;stkvar	_fmt @ sp[(-32)+-4]
 26626  0142DA  0EDC               	movlw	-36
 26627  0142DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26628  0142E2  0EDD               	movlw	-35
 26629  0142E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26630  0142EA  2ADE               	incf	postinc2,f,c
 26631  0142EC  0E00               	movlw	0
 26632  0142EE  22DD               	addwfc	postdec2,f,c
 26633                           
 26634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26635                           ;stkvar	_ap @ sp[(-32)+-6]
 26636  0142F0  0EDA               	movlw	-38
 26637  0142F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26638  0142F8  0EDB               	movlw	-37
 26639  0142FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26640  014300  0E02               	movlw	2
 26641  014302  5EDE               	subwf	postinc2,f,c
 26642  014304  0E00               	movlw	0
 26643  014306  5ADD               	subwfb	postdec2,f,c
 26644  014308  006F FF78  F034    	movff	postinc2,btemp+10
 26645  01430E  006F FF74  F035    	movff	postdec2,btemp+11
 26646  014314  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26647  01431A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26648  014320  006F FF78  F034    	movff	postinc2,btemp+10
 26649  014326  006F FF74  F035    	movff	postdec2,btemp+11
 26650  01432C  5034               	movf	(btemp+10)^0,w,c
 26651  01432E  6E3A               	movwf	(btemp+16)^0,c
 26652  014330  5035               	movf	(btemp+11)^0,w,c
 26653  014332  6E3B               	movwf	(btemp+17)^0,c
 26654  014334  6A3C               	clrf	(btemp+18)^0,c
 26655  014336  6A3D               	clrf	(btemp+19)^0,c
 26656  014338  6A3E               	clrf	(btemp+20)^0,c
 26657  01433A  6A3F               	clrf	(btemp+21)^0,c
 26658  01433C  6A40               	clrf	(btemp+22)^0,c
 26659  01433E  6A41               	clrf	(btemp+23)^0,c
 26660                           
 26661                           ;stkvar	_llu @ sp[(-32)+6]
 26662  014340  0EE6               	movlw	-26
 26663  014342  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26664  014348  0EE7               	movlw	-25
 26665  01434A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26666  014350  0EE8               	movlw	-24
 26667  014352  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26668  014358  0EE9               	movlw	-23
 26669  01435A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26670  014360  0EEA               	movlw	-22
 26671  014362  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26672  014368  0EEB               	movlw	-21
 26673  01436A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26674  014370  0EEC               	movlw	-20
 26675  014372  0060  F103  FFE3   	movff	btemp+22,plusw1
 26676  014378  0EED               	movlw	-19
 26677  01437A  0060  F107  FFE3   	movff	btemp+23,plusw1
 26678                           
 26679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 26680                           ;stkvar	_llu @ sp[(-32)+6]
 26681  014380  50E1               	movf	fsr1l,w,c
 26682  014382  0FE6               	addlw	-26
 26683  014384  6ED9               	movwf	fsr2l,c
 26684  014386  50E2               	movf	fsr1h,w,c
 26685  014388  6EDA               	movwf	fsr2h,c
 26686  01438A  0EFF               	movlw	255
 26687  01438C  22DA               	addwfc	fsr2h,f,c
 26688  01438E  006F FF7B FFE6     	movff	postinc2,postinc1
 26689  014394  006F FF7B FFE6     	movff	postinc2,postinc1
 26690  01439A  006F FF7B FFE6     	movff	postinc2,postinc1
 26691  0143A0  006F FF7B FFE6     	movff	postinc2,postinc1
 26692  0143A6  006F FF7B FFE6     	movff	postinc2,postinc1
 26693  0143AC  006F FF7B FFE6     	movff	postinc2,postinc1
 26694  0143B2  006F FF7B FFE6     	movff	postinc2,postinc1
 26695  0143B8  006F FF7B FFE6     	movff	postinc2,postinc1
 26696                           
 26697                           ;stkvar	_fp @ sp[(-40)+-2]
 26698  0143BE  0ED6               	movlw	-42
 26699  0143C0  006F FF8F FFE6     	movff	plusw1,postinc1
 26700  0143C6  006F FF8F FFE6     	movff	plusw1,postinc1
 26701  0143CC  ECD8  F0D2         	call	_utoa	;wreg free
 26702  0143D0  D21E               	goto	l2689
 26703  0143D2                     l16254:
 26704                           
 26705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 26706  0143D2  0E02               	movlw	2
 26707  0143D4  6EE6               	movwf	postinc1,c
 26708  0143D6  0E00               	movlw	0
 26709  0143D8  6EE6               	movwf	postinc1,c
 26710  0143DA  0EF6               	movlw	low STR_113
 26711  0143DC  6EE6               	movwf	postinc1,c
 26712  0143DE  0EFF               	movlw	high STR_113
 26713  0143E0  6EE6               	movwf	postinc1,c
 26714                           
 26715                           ;stkvar	_fmt @ sp[(-36)+-4]
 26716  0143E2  0ED8               	movlw	-40
 26717  0143E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26718  0143EA  0ED9               	movlw	-39
 26719  0143EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26720  0143F2  006F FF78  F034    	movff	postinc2,btemp+10
 26721  0143F8  006F FF74  F035    	movff	postdec2,btemp+11
 26722  0143FE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26723  014404  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26724  01440A  EC48  F0E6         	call	_strncmp	;wreg free
 26725  01440E  502A               	movf	btemp^0,w,c
 26726  014410  102B               	iorwf	(btemp+1)^0,w,c
 26727  014412  A4D8               	btfss	status,2,c
 26728  014414  D039               	goto	l16264
 26729                           
 26730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 26731                           ;stkvar	_fmt @ sp[(-32)+-4]
 26732  014416  0EDC               	movlw	-36
 26733  014418  006F FF8F FFD9     	movff	plusw1,fsr2l
 26734  01441E  0EDD               	movlw	-35
 26735  014420  006F FF8F FFDA     	movff	plusw1,fsr2h
 26736  014426  0E02               	movlw	2
 26737  014428  26DE               	addwf	postinc2,f,c
 26738  01442A  0E00               	movlw	0
 26739  01442C  22DD               	addwfc	postdec2,f,c
 26740                           
 26741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26742                           ;stkvar	_ap @ sp[(-32)+-6]
 26743  01442E  0EDA               	movlw	-38
 26744  014430  006F FF8F FFD9     	movff	plusw1,fsr2l
 26745  014436  0EDB               	movlw	-37
 26746  014438  006F FF8F FFDA     	movff	plusw1,fsr2h
 26747  01443E  0E04               	movlw	4
 26748  014440  5EDE               	subwf	postinc2,f,c
 26749  014442  0E00               	movlw	0
 26750  014444  5ADD               	subwfb	postdec2,f,c
 26751  014446  006F FF78  F034    	movff	postinc2,btemp+10
 26752  01444C  006F FF74  F035    	movff	postdec2,btemp+11
 26753  014452  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26754  014458  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26755  01445E  006F FF78  F032    	movff	postinc2,btemp+8
 26756  014464  006F FF78  F033    	movff	postinc2,btemp+9
 26757  01446A  006F FF78  F034    	movff	postinc2,btemp+10
 26758  014470  006F FF78  F035    	movff	postinc2,btemp+11
 26759  014476  5032               	movf	(btemp+8)^0,w,c
 26760  014478  6E3A               	movwf	(btemp+16)^0,c
 26761  01447A  5033               	movf	(btemp+9)^0,w,c
 26762  01447C  6E3B               	movwf	(btemp+17)^0,c
 26763  01447E  5034               	movf	(btemp+10)^0,w,c
 26764  014480  6E3C               	movwf	(btemp+18)^0,c
 26765  014482  5035               	movf	(btemp+11)^0,w,c
 26766  014484  6E3D               	movwf	(btemp+19)^0,c
 26767  014486  D758               	goto	L25
 26768  014488                     l16264:
 26769                           
 26770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 26771                           ;stkvar	_fmt @ sp[(-32)+-4]
 26772  014488  0EDC               	movlw	-36
 26773  01448A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26774  014490  0EDD               	movlw	-35
 26775  014492  006F FF8F FFDA     	movff	plusw1,fsr2h
 26776  014498  006F FF7B FFF6     	movff	postinc2,tblptrl
 26777  01449E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26778  0144A4                     	if	0	;tblptru may be non-zero
 26779  0144A4                     	endif
 26780  0144A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26781  0144A4  0E00               	movlw	low (__mediumconst shr (0+16))
 26782  0144A6  6EF8               	movwf	tblptru,c
 26783  0144A8                     	endif
 26784  0144A8  0008               	tblrd		*
 26785  0144AA  50F5               	movf	tablat,w,c
 26786  0144AC  0A78               	xorlw	120
 26787  0144AE  B4D8               	btfsc	status,2,c
 26788  0144B0  D015               	goto	u15880
 26789                           
 26790                           ;stkvar	_fmt @ sp[(-32)+-4]
 26791  0144B2  0EDC               	movlw	-36
 26792  0144B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26793  0144BA  0EDD               	movlw	-35
 26794  0144BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26795  0144C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 26796  0144C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 26797  0144CE                     	if	0	;tblptru may be non-zero
 26798  0144CE                     	endif
 26799  0144CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26800  0144CE  0E00               	movlw	low (__mediumconst shr (0+16))
 26801  0144D0  6EF8               	movwf	tblptru,c
 26802  0144D2                     	endif
 26803  0144D2  0008               	tblrd		*
 26804  0144D4  50F5               	movf	tablat,w,c
 26805  0144D6  0A58               	xorlw	88
 26806  0144D8  A4D8               	btfss	status,2,c
 26807  0144DA  D094               	goto	l16278
 26808  0144DC                     u15880:
 26809                           
 26810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 26811                           ;stkvar	_fmt @ sp[(-32)+-4]
 26812  0144DC  0EDC               	movlw	-36
 26813  0144DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26814  0144E4  0EDD               	movlw	-35
 26815  0144E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26816  0144EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26817  0144F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26818  0144F8                     	if	0	;tblptru may be non-zero
 26819  0144F8                     	endif
 26820  0144F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26821  0144F8  0E00               	movlw	low (__mediumconst shr (0+16))
 26822  0144FA  6EF8               	movwf	tblptru,c
 26823  0144FC                     	endif
 26824                           
 26825                           ;stkvar	_c @ sp[(-32)+31]
 26826  0144FC  0008               	tblrd		*
 26827  0144FE  0EFF               	movlw	-1
 26828  014500  006F FFD7 FFE3     	movff	tablat,plusw1
 26829                           
 26830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 26831                           ;stkvar	_fmt @ sp[(-32)+-4]
 26832  014506  0EDC               	movlw	-36
 26833  014508  006F FF8F FFD9     	movff	plusw1,fsr2l
 26834  01450E  0EDD               	movlw	-35
 26835  014510  006F FF8F FFDA     	movff	plusw1,fsr2h
 26836  014516  2ADE               	incf	postinc2,f,c
 26837  014518  0E00               	movlw	0
 26838  01451A  22DD               	addwfc	postdec2,f,c
 26839                           
 26840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26841                           ;stkvar	_ap @ sp[(-32)+-6]
 26842  01451C  0EDA               	movlw	-38
 26843  01451E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26844  014524  0EDB               	movlw	-37
 26845  014526  006F FF8F FFDA     	movff	plusw1,fsr2h
 26846  01452C  0E02               	movlw	2
 26847  01452E  5EDE               	subwf	postinc2,f,c
 26848  014530  0E00               	movlw	0
 26849  014532  5ADD               	subwfb	postdec2,f,c
 26850  014534  006F FF78  F034    	movff	postinc2,btemp+10
 26851  01453A  006F FF74  F035    	movff	postdec2,btemp+11
 26852  014540  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26853  014546  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26854  01454C  006F FF78  F034    	movff	postinc2,btemp+10
 26855  014552  006F FF74  F035    	movff	postdec2,btemp+11
 26856  014558  5034               	movf	(btemp+10)^0,w,c
 26857  01455A  6E3A               	movwf	(btemp+16)^0,c
 26858  01455C  5035               	movf	(btemp+11)^0,w,c
 26859  01455E  6E3B               	movwf	(btemp+17)^0,c
 26860  014560  6A3C               	clrf	(btemp+18)^0,c
 26861  014562  6A3D               	clrf	(btemp+19)^0,c
 26862  014564  6A3E               	clrf	(btemp+20)^0,c
 26863  014566  6A3F               	clrf	(btemp+21)^0,c
 26864  014568  6A40               	clrf	(btemp+22)^0,c
 26865  01456A  6A41               	clrf	(btemp+23)^0,c
 26866                           
 26867                           ;stkvar	_llu @ sp[(-32)+6]
 26868  01456C  0EE6               	movlw	-26
 26869  01456E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26870  014574  0EE7               	movlw	-25
 26871  014576  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26872  01457C  0EE8               	movlw	-24
 26873  01457E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26874  014584  0EE9               	movlw	-23
 26875  014586  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26876  01458C  0EEA               	movlw	-22
 26877  01458E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26878  014594  0EEB               	movlw	-21
 26879  014596  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26880  01459C  0EEC               	movlw	-20
 26881  01459E  0060  F103  FFE3   	movff	btemp+22,plusw1
 26882  0145A4  0EED               	movlw	-19
 26883  0145A6  0060  F107  FFE3   	movff	btemp+23,plusw1
 26884                           
 26885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 26886                           ;stkvar	_c @ sp[(-32)+31]
 26887  0145AC  0EFF               	movlw	-1
 26888  0145AE  50E3               	movf	plusw1,w,c
 26889  0145B0  6EE6               	movwf	postinc1,c
 26890                           
 26891                           ;stkvar	_llu @ sp[(-33)+6]
 26892  0145B2  50E1               	movf	fsr1l,w,c
 26893  0145B4  0FE5               	addlw	-27
 26894  0145B6  6ED9               	movwf	fsr2l,c
 26895  0145B8  50E2               	movf	fsr1h,w,c
 26896  0145BA  6EDA               	movwf	fsr2h,c
 26897  0145BC  0EFF               	movlw	255
 26898  0145BE  22DA               	addwfc	fsr2h,f,c
 26899  0145C0  006F FF7B FFE6     	movff	postinc2,postinc1
 26900  0145C6  006F FF7B FFE6     	movff	postinc2,postinc1
 26901  0145CC  006F FF7B FFE6     	movff	postinc2,postinc1
 26902  0145D2  006F FF7B FFE6     	movff	postinc2,postinc1
 26903  0145D8  006F FF7B FFE6     	movff	postinc2,postinc1
 26904  0145DE  006F FF7B FFE6     	movff	postinc2,postinc1
 26905  0145E4  006F FF7B FFE6     	movff	postinc2,postinc1
 26906  0145EA  006F FF7B FFE6     	movff	postinc2,postinc1
 26907                           
 26908                           ;stkvar	_fp @ sp[(-41)+-2]
 26909  0145F0  0ED5               	movlw	-43
 26910  0145F2  006F FF8F FFE6     	movff	plusw1,postinc1
 26911  0145F8  006F FF8F FFE6     	movff	plusw1,postinc1
 26912  0145FE  ECEB  F0CB         	call	_xtoa	;wreg free
 26913  014602  D105               	goto	l2689
 26914  014604                     l16278:
 26915                           
 26916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 26917  014604  0E02               	movlw	2
 26918  014606  6EE6               	movwf	postinc1,c
 26919  014608  0E00               	movlw	0
 26920  01460A  6EE6               	movwf	postinc1,c
 26921  01460C  0EF9               	movlw	low STR_118
 26922  01460E  6EE6               	movwf	postinc1,c
 26923  014610  0EFF               	movlw	high STR_118
 26924  014612  6EE6               	movwf	postinc1,c
 26925                           
 26926                           ;stkvar	_fmt @ sp[(-36)+-4]
 26927  014614  0ED8               	movlw	-40
 26928  014616  006F FF8F FFD9     	movff	plusw1,fsr2l
 26929  01461C  0ED9               	movlw	-39
 26930  01461E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26931  014624  006F FF78  F034    	movff	postinc2,btemp+10
 26932  01462A  006F FF74  F035    	movff	postdec2,btemp+11
 26933  014630  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26934  014636  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26935  01463C  EC48  F0E6         	call	_strncmp	;wreg free
 26936  014640  502A               	movf	btemp^0,w,c
 26937  014642  102B               	iorwf	(btemp+1)^0,w,c
 26938  014644  B4D8               	btfsc	status,2,c
 26939  014646  D022               	goto	u15900
 26940  014648  0E02               	movlw	2
 26941  01464A  6EE6               	movwf	postinc1,c
 26942  01464C  0E00               	movlw	0
 26943  01464E  6EE6               	movwf	postinc1,c
 26944  014650  0EEA               	movlw	low STR_122
 26945  014652  6EE6               	movwf	postinc1,c
 26946  014654  0EFF               	movlw	high STR_122
 26947  014656  6EE6               	movwf	postinc1,c
 26948                           
 26949                           ;stkvar	_fmt @ sp[(-36)+-4]
 26950  014658  0ED8               	movlw	-40
 26951  01465A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26952  014660  0ED9               	movlw	-39
 26953  014662  006F FF8F FFDA     	movff	plusw1,fsr2h
 26954  014668  006F FF78  F034    	movff	postinc2,btemp+10
 26955  01466E  006F FF74  F035    	movff	postdec2,btemp+11
 26956  014674  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26957  01467A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26958  014680  EC48  F0E6         	call	_strncmp	;wreg free
 26959  014684  502A               	movf	btemp^0,w,c
 26960  014686  102B               	iorwf	(btemp+1)^0,w,c
 26961  014688  A4D8               	btfss	status,2,c
 26962  01468A  D058               	goto	l16292
 26963  01468C                     u15900:
 26964                           
 26965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 26966                           ;stkvar	_fmt @ sp[(-32)+-4]
 26967  01468C  0EDC               	movlw	-36
 26968  01468E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26969  014694  0EDD               	movlw	-35
 26970  014696  006F FF8F FFDA     	movff	plusw1,fsr2h
 26971  01469C  006F FF78  F034    	movff	postinc2,btemp+10
 26972  0146A2  006F FF74  F035    	movff	postdec2,btemp+11
 26973  0146A8  0E01               	movlw	1
 26974  0146AA  2634               	addwf	(btemp+10)^0,f,c
 26975  0146AC  0E00               	movlw	0
 26976  0146AE  2235               	addwfc	(btemp+11)^0,f,c
 26977  0146B0  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26978  0146B6  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26979  0146BC                     	if	0	;tblptru may be non-zero
 26980  0146BC                     	endif
 26981  0146BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26982  0146BC  0E00               	movlw	low (__mediumconst shr (0+16))
 26983  0146BE  6EF8               	movwf	tblptru,c
 26984  0146C0                     	endif
 26985                           
 26986                           ;stkvar	_c @ sp[(-32)+31]
 26987  0146C0  0008               	tblrd		*
 26988  0146C2  0EFF               	movlw	-1
 26989  0146C4  006F FFD7 FFE3     	movff	tablat,plusw1
 26990                           
 26991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 26992                           ;stkvar	_fmt @ sp[(-32)+-4]
 26993  0146CA  0EDC               	movlw	-36
 26994  0146CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26995  0146D2  0EDD               	movlw	-35
 26996  0146D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26997  0146DA  0E02               	movlw	2
 26998  0146DC  26DE               	addwf	postinc2,f,c
 26999  0146DE  0E00               	movlw	0
 27000  0146E0  22DD               	addwfc	postdec2,f,c
 27001                           
 27002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27003                           ;stkvar	_ap @ sp[(-32)+-6]
 27004  0146E2  0EDA               	movlw	-38
 27005  0146E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27006  0146EA  0EDB               	movlw	-37
 27007  0146EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27008  0146F2  0E04               	movlw	4
 27009  0146F4  5EDE               	subwf	postinc2,f,c
 27010  0146F6  0E00               	movlw	0
 27011  0146F8  5ADD               	subwfb	postdec2,f,c
 27012  0146FA  006F FF78  F034    	movff	postinc2,btemp+10
 27013  014700  006F FF74  F035    	movff	postdec2,btemp+11
 27014  014706  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27015  01470C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27016  014712  006F FF78  F032    	movff	postinc2,btemp+8
 27017  014718  006F FF78  F033    	movff	postinc2,btemp+9
 27018  01471E  006F FF78  F034    	movff	postinc2,btemp+10
 27019  014724  006F FF78  F035    	movff	postinc2,btemp+11
 27020  01472A  5032               	movf	(btemp+8)^0,w,c
 27021  01472C  6E3A               	movwf	(btemp+16)^0,c
 27022  01472E  5033               	movf	(btemp+9)^0,w,c
 27023  014730  6E3B               	movwf	(btemp+17)^0,c
 27024  014732  5034               	movf	(btemp+10)^0,w,c
 27025  014734  6E3C               	movwf	(btemp+18)^0,c
 27026  014736  5035               	movf	(btemp+11)^0,w,c
 27027  014738  6E3D               	movwf	(btemp+19)^0,c
 27028  01473A  D714               	goto	L26
 27029  01473C                     l16292:
 27030                           
 27031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 27032                           ;stkvar	_fmt @ sp[(-32)+-4]
 27033  01473C  0EDC               	movlw	-36
 27034  01473E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27035  014744  0EDD               	movlw	-35
 27036  014746  006F FF8F FFDA     	movff	plusw1,fsr2h
 27037  01474C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27038  014752  006F FF77 FFF7     	movff	postdec2,tblptrh
 27039  014758                     	if	0	;tblptru may be non-zero
 27040  014758                     	endif
 27041  014758                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27042  014758  0E00               	movlw	low (__mediumconst shr (0+16))
 27043  01475A  6EF8               	movwf	tblptru,c
 27044  01475C                     	endif
 27045  01475C  0008               	tblrd		*
 27046  01475E  50F5               	movf	tablat,w,c
 27047  014760  0A25               	xorlw	37
 27048  014762  A4D8               	btfss	status,2,c
 27049  014764  D01A               	goto	l16302
 27050                           
 27051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 27052                           ;stkvar	_fmt @ sp[(-32)+-4]
 27053  014766  0EDC               	movlw	-36
 27054  014768  006F FF8F FFD9     	movff	plusw1,fsr2l
 27055  01476E  0EDD               	movlw	-35
 27056  014770  006F FF8F FFDA     	movff	plusw1,fsr2h
 27057  014776  2ADE               	incf	postinc2,f,c
 27058  014778  0E00               	movlw	0
 27059  01477A  22DD               	addwfc	postdec2,f,c
 27060                           
 27061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 27062                           ;stkvar	_fp @ sp[(-32)+-2]
 27063  01477C  0EDE               	movlw	-34
 27064  01477E  006F FF8F FFE6     	movff	plusw1,postinc1
 27065  014784  006F FF8F FFE6     	movff	plusw1,postinc1
 27066  01478A  0E25               	movlw	37
 27067  01478C  6EE6               	movwf	postinc1,c
 27068  01478E  0E00               	movlw	0
 27069  014790  6EE6               	movwf	postinc1,c
 27070  014792  ECF8  F0F8         	call	_fputc	;wreg free
 27071  014796                     l16298:
 27072                           
 27073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 27074  014796  0E01               	movlw	1
 27075  014798  D00C               	goto	L27
 27076  01479A                     l16302:
 27077                           
 27078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 27079                           ;stkvar	_fmt @ sp[(-32)+-4]
 27080  01479A  0EDC               	movlw	-36
 27081  01479C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27082  0147A2  0EDD               	movlw	-35
 27083  0147A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27084  0147AA  2ADE               	incf	postinc2,f,c
 27085  0147AC  0E00               	movlw	0
 27086  0147AE  22DD               	addwfc	postdec2,f,c
 27087                           
 27088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 27089  0147B0  0E00               	movlw	0
 27090  0147B2                     L27:
 27091  0147B2  6E2A               	movwf	btemp^0,c
 27092  0147B4  0E00               	movlw	0
 27093  0147B6  6E2B               	movwf	(btemp+1)^0,c
 27094  0147B8  D02A               	goto	l2689
 27095  0147BA                     l16308:
 27096                           
 27097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 27098                           ;stkvar	_fp @ sp[(-32)+-2]
 27099  0147BA  0EDE               	movlw	-34
 27100  0147BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27101  0147C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27102                           
 27103                           ;stkvar	_fmt @ sp[(-34)+-4]
 27104  0147C8  0EDA               	movlw	-38
 27105  0147CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27106  0147D0  0EDB               	movlw	-37
 27107  0147D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27108  0147D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 27109  0147DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 27110  0147E4                     	if	0	;tblptru may be non-zero
 27111  0147E4                     	endif
 27112  0147E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27113  0147E4  0E00               	movlw	low (__mediumconst shr (0+16))
 27114  0147E6  6EF8               	movwf	tblptru,c
 27115  0147E8                     	endif
 27116  0147E8  0008               	tblrd		*
 27117  0147EA  50F5               	movf	tablat,w,c
 27118  0147EC  6EE6               	movwf	postinc1,c
 27119  0147EE  0E00               	movlw	0
 27120  0147F0  6EE6               	movwf	postinc1,c
 27121  0147F2  ECF8  F0F8         	call	_fputc	;wreg free
 27122                           
 27123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 27124                           ;stkvar	_fmt @ sp[(-32)+-4]
 27125  0147F6  0EDC               	movlw	-36
 27126  0147F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27127  0147FE  0EDD               	movlw	-35
 27128  014800  006F FF8F FFDA     	movff	plusw1,fsr2h
 27129  014806  2ADE               	incf	postinc2,f,c
 27130  014808  0E00               	movlw	0
 27131  01480A  22DD               	addwfc	postdec2,f,c
 27132  01480C  D7C4               	goto	l16298
 27133  01480E                     l2689:
 27134                           
 27135                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 27136  01480E  0EDA               	movlw	218
 27137  014810  26E1               	addwf	fsr1l,f,c
 27138  014812  0EFF               	movlw	255
 27139  014814  22E2               	addwfc	fsr1h,f,c
 27140  014816  0012               	return		;funcret
 27141  014818                     __end_of_vfpfcnvrt:
 27142                           	opt callstack 0
 27143                           
 27144 ;; *************** function _xtoa *****************
 27145 ;; Defined at:
 27146 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27147 ;; Parameters:    Size  Location     Type
 27148 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27149 ;;		 -> f(6), NULL(0), 
 27150 ;;  d               8  [STACK] unsigned long long 
 27151 ;;  x               1  [STACK] unsigned char 
 27152 ;; Auto vars:     Size  Location     Type
 27153 ;;  n               8  [STACK] unsigned long long 
 27154 ;;  c               2  [STACK] int 
 27155 ;;  i               2  [STACK] int 
 27156 ;;  w               2  [STACK] int 
 27157 ;;  p               2  [STACK] int 
 27158 ;; Return value:  Size  Location     Type
 27159 ;;                  2  [STACK] int 
 27160 ;; Registers used:
 27161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 27162 ;; Tracked objects:
 27163 ;;		On entry : 0/0
 27164 ;;		On exit  : 0/0
 27165 ;;		Unchanged: 0/0
 27166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27171 ;;Total ram usage:        0 bytes
 27172 ;; Hardware stack levels used:    1
 27173 ;; Hardware stack levels required when called:   20
 27174 ;; This function calls:
 27175 ;;		_isalpha
 27176 ;;		_isupper
 27177 ;;		_pad
 27178 ;;		_toupper
 27179 ;; This function is called by:
 27180 ;;		_vfpfcnvrt
 27181 ;; This function uses a reentrant model
 27182 ;;
 27183                           
 27184                           	psect	text94
 27185  0197D6                     __ptext94:
 27186                           	opt callstack 0
 27187  0197D6                     _xtoa:
 27188                           	opt callstack 0
 27189                           
 27190                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27191  0197D6  0E14               	movlw	20
 27192  0197D8  26E1               	addwf	fsr1l,f,c
 27193  0197DA  0E00               	movlw	0
 27194  0197DC  22E2               	addwfc	fsr1h,f,c
 27195                           
 27196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 27197                           
 27198                           ;incstack = 0
 27199 ;; hardware stack exceeded
 27200  0197DE  AE4D               	btfss	(_prec+1)^0,7,c
 27201                           
 27202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 27203  0197E0  924E               	bcf	_flags^0,1,c
 27204                           
 27205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 27206  0197E2  BE4D               	btfsc	(_prec+1)^0,7,c
 27207  0197E4  D005               	goto	u15360
 27208  0197E6  504D               	movf	(_prec+1)^0,w,c
 27209  0197E8  E110               	bnz	l15962
 27210  0197EA  044C               	decf	_prec^0,w,c
 27211  0197EC  B0D8               	btfsc	status,0,c
 27212  0197EE  D00D               	goto	l15962
 27213  0197F0                     u15360:
 27214  0197F0  0E01               	movlw	1
 27215  0197F2  6E34               	movwf	(btemp+10)^0,c
 27216  0197F4  0E00               	movlw	0
 27217  0197F6  6E35               	movwf	(btemp+11)^0,c
 27218                           
 27219                           ;stkvar	_p @ sp[(-20)+18]
 27220  0197F8  0EFE               	movlw	-2
 27221  0197FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27222  019800  0EFF               	movlw	-1
 27223  019802  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27224  019808  D008               	goto	l2639
 27225  01980A                     l15962:
 27226                           
 27227                           ;stkvar	_p @ sp[(-20)+18]
 27228  01980A  0EFE               	movlw	-2
 27229  01980C  0060  F133  FFE3   	movff	_prec,plusw1
 27230  019812  0EFF               	movlw	-1
 27231  019814  0060  F137  FFE3   	movff	_prec+1,plusw1
 27232  01981A                     l2639:
 27233                           
 27234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 27235                           ;stkvar	_w @ sp[(-20)+16]
 27236  01981A  0EFC               	movlw	-4
 27237  01981C  0060  F12B  FFE3   	movff	_width,plusw1
 27238  019822  0EFD               	movlw	-3
 27239  019824  0060  F12F  FFE3   	movff	_width+1,plusw1
 27240                           
 27241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 27242  01982A  A84E               	btfss	_flags^0,4,c
 27243  01982C  D00B               	goto	l15968
 27244                           
 27245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 27246                           ;stkvar	_w @ sp[(-20)+16]
 27247  01982E  50E1               	movf	fsr1l,w,c
 27248  019830  0FFC               	addlw	-4
 27249  019832  6ED9               	movwf	fsr2l,c
 27250  019834  50E2               	movf	fsr1h,w,c
 27251  019836  6EDA               	movwf	fsr2h,c
 27252  019838  0EFF               	movlw	255
 27253  01983A  22DA               	addwfc	fsr2h,f,c
 27254  01983C  0EFE               	movlw	254
 27255  01983E  26DE               	addwf	postinc2,f,c
 27256  019840  0EFF               	movlw	255
 27257  019842  22DD               	addwfc	postdec2,f,c
 27258  019844                     l15968:
 27259                           
 27260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 27261                           ;stkvar	_d @ sp[(-20)+-10]
 27262  019844  0EE2               	movlw	226
 27263  019846  24E1               	addwf	fsr1l,w,c
 27264  019848  6ED9               	movwf	fsr2l,c
 27265  01984A  0EFF               	movlw	255
 27266  01984C  20E2               	addwfc	fsr1h,w,c
 27267  01984E  6EDA               	movwf	fsr2h,c
 27268                           
 27269                           ;stkvar	_n @ sp[(-20)+4]
 27270  019850  0E08               	movlw	8
 27271  019852  6E2A               	movwf	btemp^0,c
 27272  019854  0EF0               	movlw	-16
 27273  019856                     us1538999:
 27274  019856  006F FF7B FFE3     	movff	postinc2,plusw1
 27275  01985C  28E8               	incf	wreg,w,c
 27276  01985E  2E2A               	decfsz	btemp^0,f,c
 27277  019860  D7FA               	bra	us1538999
 27278                           
 27279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 27280  019862  0E4F               	movlw	79
 27281  019864  6E34               	movwf	(btemp+10)^0,c
 27282  019866  0E00               	movlw	0
 27283  019868  6E35               	movwf	(btemp+11)^0,c
 27284                           
 27285                           ;stkvar	_i @ sp[(-20)+14]
 27286  01986A  0EFA               	movlw	-6
 27287  01986C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27288  019872  0EFB               	movlw	-5
 27289  019874  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27290                           
 27291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 27292  01987A  0103               	movlb	3	; () banked
 27293  01987C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27294                           
 27295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27296  01987E  D0EE               	goto	l16006
 27297  019880                     l15974:
 27298                           
 27299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 27300                           ;stkvar	_i @ sp[(-20)+14]
 27301  019880  50E1               	movf	fsr1l,w,c
 27302  019882  0FFA               	addlw	-6
 27303  019884  6ED9               	movwf	fsr2l,c
 27304  019886  50E2               	movf	fsr1h,w,c
 27305  019888  6EDA               	movwf	fsr2h,c
 27306  01988A  0EFF               	movlw	255
 27307  01988C  22DA               	addwfc	fsr2h,f,c
 27308  01988E  06DE               	decf	postinc2,f,c
 27309  019890  0E00               	movlw	0
 27310  019892  5ADD               	subwfb	postdec2,f,c
 27311                           
 27312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 27313                           ;stkvar	_n @ sp[(-20)+4]
 27314  019894  0EF0               	movlw	-16
 27315  019896  006F FF8C  F034    	movff	plusw1,btemp+10
 27316  01989C  0EF1               	movlw	-15
 27317  01989E  006F FF8C  F035    	movff	plusw1,btemp+11
 27318  0198A4  0E0F               	movlw	15
 27319  0198A6  1634               	andwf	(btemp+10)^0,f,c
 27320  0198A8  0E00               	movlw	0
 27321  0198AA  1635               	andwf	(btemp+11)^0,f,c
 27322                           
 27323                           ;stkvar	_c @ sp[(-20)+12]
 27324  0198AC  0EF8               	movlw	-8
 27325  0198AE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27326  0198B4  0EF9               	movlw	-7
 27327  0198B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27328                           
 27329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 27330                           ;stkvar	_c @ sp[(-20)+12]
 27331  0198BC  0EF9               	movlw	-7
 27332  0198BE  BEE3               	btfsc	plusw1,7,c
 27333  0198C0  D00F               	goto	l15982
 27334  0198C2  0EF9               	movlw	-7
 27335  0198C4  50E3               	movf	plusw1,w,c
 27336  0198C6  E108               	bnz	u15390
 27337  0198C8  0EF8               	movlw	-8
 27338  0198CA  006F FF8C  F02A    	movff	plusw1,btemp
 27339  0198D0  0E0A               	movlw	10
 27340  0198D2  5E2A               	subwf	btemp^0,f,c
 27341  0198D4  A0D8               	btfss	status,0,c
 27342  0198D6  D004               	goto	l15982
 27343  0198D8                     u15390:
 27344                           
 27345                           ;stkvar	_c @ sp[(-20)+12]
 27346  0198D8  0EF8               	movlw	-8
 27347  0198DA  50E3               	movf	plusw1,w,c
 27348  0198DC  0F57               	addlw	87
 27349  0198DE  D003               	goto	L28
 27350  0198E0                     l15982:
 27351                           
 27352                           ;stkvar	_c @ sp[(-20)+12]
 27353  0198E0  0EF8               	movlw	-8
 27354  0198E2  50E3               	movf	plusw1,w,c
 27355  0198E4  0F30               	addlw	48
 27356  0198E6                     L28:
 27357  0198E6  6E34               	movwf	(btemp+10)^0,c
 27358  0198E8  0EF9               	movlw	-7
 27359  0198EA  006F FF8C  F035    	movff	plusw1,btemp+11
 27360  0198F0  0E00               	movlw	0
 27361  0198F2  2235               	addwfc	(btemp+11)^0,f,c
 27362                           
 27363                           ;stkvar	_c @ sp[(-20)+12]
 27364  0198F4  0EF8               	movlw	-8
 27365  0198F6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27366  0198FC  0EF9               	movlw	-7
 27367  0198FE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27368  019904  0EBF               	movlw	191
 27369  019906  6E34               	movwf	(btemp+10)^0,c
 27370  019908  0EFF               	movlw	255
 27371  01990A  6E35               	movwf	(btemp+11)^0,c
 27372                           
 27373                           ;stkvar	_x @ sp[(-20)+-11]
 27374  01990C  0EE1               	movlw	-31
 27375  01990E  50E3               	movf	plusw1,w,c
 27376  019910  6E32               	movwf	(btemp+8)^0,c
 27377  019912  6A33               	clrf	(btemp+9)^0,c
 27378  019914  5034               	movf	(btemp+10)^0,w,c
 27379  019916  2632               	addwf	(btemp+8)^0,f,c
 27380  019918  5035               	movf	(btemp+11)^0,w,c
 27381  01991A  2233               	addwfc	(btemp+9)^0,f,c
 27382  01991C  5033               	movf	(btemp+9)^0,w,c
 27383  01991E  E106               	bnz	u15400
 27384  019920  0E1A               	movlw	26
 27385  019922  5C32               	subwf	(btemp+8)^0,w,c
 27386  019924  B0D8               	btfsc	status,0,c
 27387  019926  D002               	goto	u15400
 27388  019928  0E01               	movlw	1
 27389  01992A  D001               	goto	u15410
 27390  01992C                     u15400:
 27391  01992C  0E00               	movlw	0
 27392  01992E                     u15410:
 27393  01992E  6E34               	movwf	(btemp+10)^0,c
 27394  019930  6A35               	clrf	(btemp+11)^0,c
 27395                           
 27396                           ;stkvar	_xtoa$6646 @ sp[(-20)+2]
 27397  019932  0EEE               	movlw	-18
 27398  019934  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27399  01993A  0EEF               	movlw	-17
 27400  01993C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27401                           
 27402                           ;stkvar	_xtoa$6646 @ sp[(-20)+2]
 27403  019942  0EEE               	movlw	-18
 27404  019944  006F FF8C  F02A    	movff	plusw1,btemp
 27405  01994A  0EEF               	movlw	-17
 27406  01994C  50E3               	movf	plusw1,w,c
 27407  01994E  102A               	iorwf	btemp^0,w,c
 27408  019950  B4D8               	btfsc	status,2,c
 27409  019952  D041               	goto	l15998
 27410  019954  0E9F               	movlw	159
 27411  019956  6E34               	movwf	(btemp+10)^0,c
 27412  019958  0EFF               	movlw	255
 27413  01995A  6E35               	movwf	(btemp+11)^0,c
 27414                           
 27415                           ;stkvar	_c @ sp[(-20)+12]
 27416  01995C  0EF8               	movlw	-8
 27417  01995E  006F FF8C  F032    	movff	plusw1,btemp+8
 27418  019964  0EF9               	movlw	-7
 27419  019966  006F FF8C  F033    	movff	plusw1,btemp+9
 27420  01996C  0E20               	movlw	32
 27421  01996E  1232               	iorwf	(btemp+8)^0,f,c
 27422  019970  0E00               	movlw	0
 27423  019972  1233               	iorwf	(btemp+9)^0,f,c
 27424  019974  5034               	movf	(btemp+10)^0,w,c
 27425  019976  2632               	addwf	(btemp+8)^0,f,c
 27426  019978  5035               	movf	(btemp+11)^0,w,c
 27427  01997A  2233               	addwfc	(btemp+9)^0,f,c
 27428  01997C  5033               	movf	(btemp+9)^0,w,c
 27429  01997E  E106               	bnz	u15430
 27430  019980  0E1A               	movlw	26
 27431  019982  5C32               	subwf	(btemp+8)^0,w,c
 27432  019984  B0D8               	btfsc	status,0,c
 27433  019986  D002               	goto	u15430
 27434  019988  0E01               	movlw	1
 27435  01998A  D001               	goto	u15440
 27436  01998C                     u15430:
 27437  01998C  0E00               	movlw	0
 27438  01998E                     u15440:
 27439  01998E  6E34               	movwf	(btemp+10)^0,c
 27440  019990  6A35               	clrf	(btemp+11)^0,c
 27441                           
 27442                           ;stkvar	_xtoa$6647 @ sp[(-20)+0]
 27443  019992  0EEC               	movlw	-20
 27444  019994  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27445  01999A  0EED               	movlw	-19
 27446  01999C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27447                           
 27448                           ;stkvar	_xtoa$6647 @ sp[(-20)+0]
 27449  0199A2  0EEC               	movlw	-20
 27450  0199A4  006F FF8C  F02A    	movff	plusw1,btemp
 27451  0199AA  0EED               	movlw	-19
 27452  0199AC  50E3               	movf	plusw1,w,c
 27453  0199AE  102A               	iorwf	btemp^0,w,c
 27454  0199B0  B4D8               	btfsc	status,2,c
 27455  0199B2  D011               	goto	l15998
 27456                           
 27457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 27458                           ;stkvar	_c @ sp[(-20)+12]
 27459  0199B4  0EF8               	movlw	-8
 27460  0199B6  006F FF8F FFE6     	movff	plusw1,postinc1
 27461  0199BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27462  0199C2  ECD8  F006         	call	_toupper	;wreg free
 27463                           
 27464                           ;stkvar	_c @ sp[(-20)+12]
 27465  0199C6  0EF8               	movlw	-8
 27466  0199C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 27467  0199CE  0EF9               	movlw	-7
 27468  0199D0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 27469  0199D6                     l15998:
 27470                           
 27471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 27472                           ;stkvar	_c @ sp[(-20)+12]
 27473                           ;stkvar	_i @ sp[(-20)+14]
 27474  0199D6  0EFA               	movlw	-6
 27475  0199D8  006F FF8C  F034    	movff	plusw1,btemp+10
 27476  0199DE  0EFB               	movlw	-5
 27477  0199E0  006F FF8C  F035    	movff	plusw1,btemp+11
 27478  0199E6  0E54               	movlw	low _dbuf
 27479  0199E8  2434               	addwf	(btemp+10)^0,w,c
 27480  0199EA  6ED9               	movwf	fsr2l,c
 27481  0199EC  0E03               	movlw	high _dbuf
 27482  0199EE  2035               	addwfc	(btemp+11)^0,w,c
 27483  0199F0  6EDA               	movwf	fsr2h,c
 27484  0199F2  0EF8               	movlw	-8
 27485  0199F4  006F FF8F FFDF     	movff	plusw1,indf2
 27486                           
 27487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 27488                           ;stkvar	_p @ sp[(-20)+18]
 27489  0199FA  50E1               	movf	fsr1l,w,c
 27490  0199FC  0FFE               	addlw	-2
 27491  0199FE  6ED9               	movwf	fsr2l,c
 27492  019A00  50E2               	movf	fsr1h,w,c
 27493  019A02  6EDA               	movwf	fsr2h,c
 27494  019A04  0EFF               	movlw	255
 27495  019A06  22DA               	addwfc	fsr2h,f,c
 27496  019A08  06DE               	decf	postinc2,f,c
 27497  019A0A  0E00               	movlw	0
 27498  019A0C  5ADD               	subwfb	postdec2,f,c
 27499                           
 27500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 27501                           ;stkvar	_w @ sp[(-20)+16]
 27502  019A0E  50E1               	movf	fsr1l,w,c
 27503  019A10  0FFC               	addlw	-4
 27504  019A12  6ED9               	movwf	fsr2l,c
 27505  019A14  50E2               	movf	fsr1h,w,c
 27506  019A16  6EDA               	movwf	fsr2h,c
 27507  019A18  0EFF               	movlw	255
 27508  019A1A  22DA               	addwfc	fsr2h,f,c
 27509  019A1C  06DE               	decf	postinc2,f,c
 27510  019A1E  0E00               	movlw	0
 27511  019A20  5ADD               	subwfb	postdec2,f,c
 27512                           
 27513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 27514  019A22  0E04               	movlw	4
 27515  019A24  6E35               	movwf	(btemp+11)^0,c
 27516                           
 27517                           ;stkvar	_n @ sp[(-20)+4]
 27518  019A26  50E1               	movf	fsr1l,w,c
 27519  019A28  0FF0               	addlw	-16
 27520  019A2A  6ED9               	movwf	fsr2l,c
 27521  019A2C  50E2               	movf	fsr1h,w,c
 27522  019A2E  6EDA               	movwf	fsr2h,c
 27523  019A30  0EFF               	movlw	255
 27524  019A32  22DA               	addwfc	fsr2h,f,c
 27525  019A34  2835               	incf	(btemp+11)^0,w,c
 27526  019A36  52DE               	movf	postinc2,f,c
 27527  019A38  D00F               	goto	u15460
 27528  019A3A                     u15465:
 27529  019A3A  52DE               	movf	postinc2,f,c
 27530  019A3C  52DE               	movf	postinc2,f,c
 27531  019A3E  52DE               	movf	postinc2,f,c
 27532  019A40  52DE               	movf	postinc2,f,c
 27533  019A42  52DE               	movf	postinc2,f,c
 27534  019A44  52DE               	movf	postinc2,f,c
 27535  019A46  90D8               	bcf	status,0,c
 27536  019A48  32DD               	rrcf	postdec2,f,c
 27537  019A4A  32DD               	rrcf	postdec2,f,c
 27538  019A4C  32DD               	rrcf	postdec2,f,c
 27539  019A4E  32DD               	rrcf	postdec2,f,c
 27540  019A50  32DD               	rrcf	postdec2,f,c
 27541  019A52  32DD               	rrcf	postdec2,f,c
 27542  019A54  32DD               	rrcf	postdec2,f,c
 27543  019A56  32DE               	rrcf	postinc2,f,c
 27544  019A58                     u15460:
 27545  019A58  2EE8               	decfsz	wreg,f,c
 27546  019A5A  D7EF               	goto	u15465
 27547  019A5C                     l16006:
 27548                           
 27549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27550                           ;stkvar	_i @ sp[(-20)+14]
 27551  019A5C  0EFB               	movlw	-5
 27552  019A5E  BEE3               	btfsc	plusw1,7,c
 27553  019A60  D03A               	goto	u15510
 27554  019A62  0EFB               	movlw	-5
 27555  019A64  50E3               	movf	plusw1,w,c
 27556  019A66  E108               	bnz	u15470
 27557  019A68  0EFA               	movlw	-6
 27558  019A6A  006F FF8C  F02A    	movff	plusw1,btemp
 27559  019A70  0E02               	movlw	2
 27560  019A72  5E2A               	subwf	btemp^0,f,c
 27561  019A74  A0D8               	btfss	status,0,c
 27562  019A76  D02F               	goto	u15510
 27563  019A78                     u15470:
 27564                           
 27565                           ;stkvar	_n @ sp[(-20)+4]
 27566  019A78  0EF0               	movlw	-16
 27567  019A7A  50E3               	movf	plusw1,w,c
 27568  019A7C  E115               	bnz	u15481
 27569  019A7E  0EF1               	movlw	-15
 27570  019A80  50E3               	movf	plusw1,w,c
 27571  019A82  E112               	bnz	u15481
 27572  019A84  0EF2               	movlw	-14
 27573  019A86  50E3               	movf	plusw1,w,c
 27574  019A88  E10F               	bnz	u15481
 27575  019A8A  0EF3               	movlw	-13
 27576  019A8C  50E3               	movf	plusw1,w,c
 27577  019A8E  E10C               	bnz	u15481
 27578  019A90  0EF4               	movlw	-12
 27579  019A92  50E3               	movf	plusw1,w,c
 27580  019A94  E109               	bnz	u15481
 27581  019A96  0EF5               	movlw	-11
 27582  019A98  50E3               	movf	plusw1,w,c
 27583  019A9A  E106               	bnz	u15481
 27584  019A9C  0EF6               	movlw	-10
 27585  019A9E  50E3               	movf	plusw1,w,c
 27586  019AA0  E103               	bnz	u15481
 27587  019AA2  0EF7               	movlw	-9
 27588  019AA4  50E3               	movf	plusw1,w,c
 27589  019AA6  A4D8               	btfss	status,2,c
 27590  019AA8                     u15481:
 27591  019AA8  D6EB               	goto	l15974
 27592                           
 27593                           ;stkvar	_p @ sp[(-20)+18]
 27594  019AAA  0EFF               	movlw	-1
 27595  019AAC  BEE3               	btfsc	plusw1,7,c
 27596  019AAE  D007               	goto	u15490
 27597  019AB0  0EFF               	movlw	-1
 27598  019AB2  50E3               	movf	plusw1,w,c
 27599  019AB4  E103               	bnz	u15491
 27600  019AB6  0EFE               	movlw	-2
 27601  019AB8  04E3               	decf	plusw1,w,c
 27602  019ABA  B0D8               	btfsc	status,0,c
 27603  019ABC                     u15491:
 27604  019ABC  D6E1               	goto	l15974
 27605  019ABE                     u15490:
 27606                           
 27607                           ;stkvar	_w @ sp[(-20)+16]
 27608  019ABE  0EFD               	movlw	-3
 27609  019AC0  BEE3               	btfsc	plusw1,7,c
 27610  019AC2  D009               	goto	u15510
 27611  019AC4  0EFD               	movlw	-3
 27612  019AC6  50E3               	movf	plusw1,w,c
 27613  019AC8  E104               	bnz	u15500
 27614  019ACA  0EFC               	movlw	-4
 27615  019ACC  04E3               	decf	plusw1,w,c
 27616  019ACE  A0D8               	btfss	status,0,c
 27617  019AD0  D002               	goto	u15510
 27618  019AD2                     u15500:
 27619  019AD2  B24E               	btfsc	_flags^0,1,c
 27620  019AD4  D6D5               	goto	l15974
 27621  019AD6                     u15510:
 27622                           
 27623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 27624  019AD6  A84E               	btfss	_flags^0,4,c
 27625  019AD8  D036               	goto	l16022
 27626                           
 27627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 27628                           ;stkvar	_i @ sp[(-20)+14]
 27629  019ADA  50E1               	movf	fsr1l,w,c
 27630  019ADC  0FFA               	addlw	-6
 27631  019ADE  6ED9               	movwf	fsr2l,c
 27632  019AE0  50E2               	movf	fsr1h,w,c
 27633  019AE2  6EDA               	movwf	fsr2h,c
 27634  019AE4  0EFF               	movlw	255
 27635  019AE6  22DA               	addwfc	fsr2h,f,c
 27636  019AE8  06DE               	decf	postinc2,f,c
 27637  019AEA  0E00               	movlw	0
 27638  019AEC  5ADD               	subwfb	postdec2,f,c
 27639                           
 27640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 27641                           ;stkvar	_x @ sp[(-20)+-11]
 27642                           ;stkvar	_i @ sp[(-20)+14]
 27643  019AEE  0EFA               	movlw	-6
 27644  019AF0  006F FF8C  F034    	movff	plusw1,btemp+10
 27645  019AF6  0EFB               	movlw	-5
 27646  019AF8  006F FF8C  F035    	movff	plusw1,btemp+11
 27647  019AFE  0E54               	movlw	low _dbuf
 27648  019B00  2434               	addwf	(btemp+10)^0,w,c
 27649  019B02  6ED9               	movwf	fsr2l,c
 27650  019B04  0E03               	movlw	high _dbuf
 27651  019B06  2035               	addwfc	(btemp+11)^0,w,c
 27652  019B08  6EDA               	movwf	fsr2h,c
 27653  019B0A  0EE1               	movlw	-31
 27654  019B0C  006F FF8F FFDF     	movff	plusw1,indf2
 27655                           
 27656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 27657                           ;stkvar	_i @ sp[(-20)+14]
 27658  019B12  50E1               	movf	fsr1l,w,c
 27659  019B14  0FFA               	addlw	-6
 27660  019B16  6ED9               	movwf	fsr2l,c
 27661  019B18  50E2               	movf	fsr1h,w,c
 27662  019B1A  6EDA               	movwf	fsr2h,c
 27663  019B1C  0EFF               	movlw	255
 27664  019B1E  22DA               	addwfc	fsr2h,f,c
 27665  019B20  06DE               	decf	postinc2,f,c
 27666  019B22  0E00               	movlw	0
 27667  019B24  5ADD               	subwfb	postdec2,f,c
 27668                           
 27669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 27670                           ;stkvar	_i @ sp[(-20)+14]
 27671  019B26  0EFA               	movlw	-6
 27672  019B28  006F FF8C  F034    	movff	plusw1,btemp+10
 27673  019B2E  0EFB               	movlw	-5
 27674  019B30  006F FF8C  F035    	movff	plusw1,btemp+11
 27675  019B36  0E54               	movlw	low _dbuf
 27676  019B38  2434               	addwf	(btemp+10)^0,w,c
 27677  019B3A  6ED9               	movwf	fsr2l,c
 27678  019B3C  0E03               	movlw	high _dbuf
 27679  019B3E  2035               	addwfc	(btemp+11)^0,w,c
 27680  019B40  6EDA               	movwf	fsr2h,c
 27681  019B42  0E30               	movlw	48
 27682  019B44  6EDF               	movwf	indf2,c
 27683  019B46                     l16022:
 27684                           
 27685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 27686                           ;stkvar	_w @ sp[(-20)+16]
 27687  019B46  0EFC               	movlw	-4
 27688  019B48  006F FF8F FFE6     	movff	plusw1,postinc1
 27689  019B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 27690                           
 27691                           ;stkvar	_i @ sp[(-22)+14]
 27692  019B54  0E54               	movlw	low _dbuf
 27693  019B56  6E34               	movwf	(btemp+10)^0,c
 27694  019B58  0E03               	movlw	high _dbuf
 27695  019B5A  6E35               	movwf	(btemp+11)^0,c
 27696  019B5C  0EF8               	movlw	-8
 27697  019B5E  50E3               	movf	plusw1,w,c
 27698  019B60  2634               	addwf	(btemp+10)^0,f,c
 27699  019B62  0EF9               	movlw	-7
 27700  019B64  50E3               	movf	plusw1,w,c
 27701  019B66  2235               	addwfc	(btemp+11)^0,f,c
 27702  019B68  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27703  019B6E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27704                           
 27705                           ;stkvar	_fp @ sp[(-24)+-2]
 27706  019B74  0EE6               	movlw	-26
 27707  019B76  006F FF8F FFE6     	movff	plusw1,postinc1
 27708  019B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 27709  019B82  EC2F  F0FB         	call	_pad	;wreg free
 27710                           
 27711                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 27712  019B86  0EE1               	movlw	225
 27713  019B88  26E1               	addwf	fsr1l,f,c
 27714  019B8A  0EFF               	movlw	255
 27715  019B8C  22E2               	addwfc	fsr1h,f,c
 27716  019B8E  0012               	return		;funcret
 27717  019B90                     __end_of_xtoa:
 27718                           	opt callstack 0
 27719                           
 27720 ;; *************** function _toupper *****************
 27721 ;; Defined at:
 27722 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 27723 ;; Parameters:    Size  Location     Type
 27724 ;;  c               2  [STACK] int 
 27725 ;; Auto vars:     Size  Location     Type
 27726 ;;		None
 27727 ;; Return value:  Size  Location     Type
 27728 ;;                  2  [STACK] int 
 27729 ;; Registers used:
 27730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 27731 ;; Tracked objects:
 27732 ;;		On entry : 0/3
 27733 ;;		On exit  : 0/0
 27734 ;;		Unchanged: 0/0
 27735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27740 ;;Total ram usage:        0 bytes
 27741 ;; Hardware stack levels used:    1
 27742 ;; Hardware stack levels required when called:   16
 27743 ;; This function calls:
 27744 ;;		_islower
 27745 ;; This function is called by:
 27746 ;;		_xtoa
 27747 ;; This function uses a reentrant model
 27748 ;;
 27749                           
 27750                           	psect	text95
 27751  000DB0                     __ptext95:
 27752                           	opt callstack 0
 27753  000DB0                     _toupper:
 27754                           	opt callstack 0
 27755                           
 27756                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27757  000DB0  52E6               	movf	postinc1,f,c
 27758  000DB2  52E6               	movf	postinc1,f,c
 27759                           
 27760                           ;stkvar	_c @ sp[(-2)+-2]
 27761                           
 27762                           ;incstack = 0
 27763 ;; hardware stack exceeded
 27764  000DB4  0EFC               	movlw	-4
 27765  000DB6  50E3               	movf	plusw1,w,c
 27766  000DB8  0F9F               	addlw	159
 27767  000DBA  6E34               	movwf	(btemp+10)^0,c
 27768  000DBC  0EFD               	movlw	-3
 27769  000DBE  006F FF8C  F035    	movff	plusw1,btemp+11
 27770  000DC4  0EFF               	movlw	255
 27771  000DC6  2235               	addwfc	(btemp+11)^0,f,c
 27772  000DC8  5035               	movf	(btemp+11)^0,w,c
 27773  000DCA  E106               	bnz	u7960
 27774  000DCC  0E1A               	movlw	26
 27775  000DCE  5C34               	subwf	(btemp+10)^0,w,c
 27776  000DD0  B0D8               	btfsc	status,0,c
 27777  000DD2  D002               	goto	u7960
 27778  000DD4  0E01               	movlw	1
 27779  000DD6  D001               	goto	u7970
 27780  000DD8                     u7960:
 27781  000DD8  0E00               	movlw	0
 27782  000DDA                     u7970:
 27783  000DDA  6E34               	movwf	(btemp+10)^0,c
 27784  000DDC  6A35               	clrf	(btemp+11)^0,c
 27785                           
 27786                           ;stkvar	_toupper$7588 @ sp[(-2)+0]
 27787  000DDE  0EFE               	movlw	-2
 27788  000DE0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27789  000DE6  0EFF               	movlw	-1
 27790  000DE8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27791                           
 27792                           ;stkvar	_toupper$7588 @ sp[(-2)+0]
 27793  000DEE  0EFE               	movlw	-2
 27794  000DF0  006F FF8C  F02A    	movff	plusw1,btemp
 27795  000DF6  0EFF               	movlw	-1
 27796  000DF8  50E3               	movf	plusw1,w,c
 27797  000DFA  102A               	iorwf	btemp^0,w,c
 27798  000DFC  B4D8               	btfsc	status,2,c
 27799  000DFE  D00D               	goto	l10142
 27800                           
 27801                           ;stkvar	_c @ sp[(-2)+-2]
 27802  000E00  0EFC               	movlw	-4
 27803  000E02  006F FF8C  F02A    	movff	plusw1,btemp
 27804  000E08  0EFD               	movlw	-3
 27805  000E0A  006F FF8C  F02B    	movff	plusw1,btemp+1
 27806  000E10  0E5F               	movlw	95
 27807  000E12  162A               	andwf	btemp^0,f,c
 27808  000E14  0E00               	movlw	0
 27809  000E16  162B               	andwf	(btemp+1)^0,f,c
 27810  000E18  D008               	goto	l3836
 27811  000E1A                     l10142:
 27812                           
 27813                           ;stkvar	_c @ sp[(-2)+-2]
 27814  000E1A  0EFC               	movlw	-4
 27815  000E1C  006F FF8C  F02A    	movff	plusw1,btemp
 27816  000E22  0EFD               	movlw	-3
 27817  000E24  006F FF8C  F02B    	movff	plusw1,btemp+1
 27818  000E2A                     l3836:
 27819                           
 27820                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27821  000E2A  52E5               	movf	postdec1,f,c
 27822  000E2C  52E5               	movf	postdec1,f,c
 27823  000E2E  52E5               	movf	postdec1,f,c
 27824  000E30  52E5               	movf	postdec1,f,c
 27825  000E32  0012               	return		;funcret
 27826  000E34                     __end_of_toupper:
 27827                           	opt callstack 0
 27828                           
 27829 ;; *************** function _islower *****************
 27830 ;; Defined at:
 27831 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 27832 ;; Parameters:    Size  Location     Type
 27833 ;;  c               2  [STACK] int 
 27834 ;; Auto vars:     Size  Location     Type
 27835 ;;		None
 27836 ;; Return value:  Size  Location     Type
 27837 ;;                  2  [STACK] int 
 27838 ;; Registers used:
 27839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27840 ;; Tracked objects:
 27841 ;;		On entry : 0/0
 27842 ;;		On exit  : 0/0
 27843 ;;		Unchanged: 0/0
 27844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27849 ;;Total ram usage:        0 bytes
 27850 ;; Hardware stack levels used:    1
 27851 ;; Hardware stack levels required when called:   15
 27852 ;; This function calls:
 27853 ;;		Nothing
 27854 ;; This function is called by:
 27855 ;;		_toupper
 27856 ;; This function uses a reentrant model
 27857 ;;
 27858                           
 27859                           	psect	text96
 27860  001F76                     __ptext96:
 27861                           	opt callstack 0
 27862  001F76                     _islower:
 27863                           	opt callstack 0
 27864                           
 27865                           ;stkvar	_c @ sp[(0)+-2]
 27866                           
 27867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27868                           ;incstack = 0
 27869 ;; hardware stack exceeded
 27870  001F76  0EFE               	movlw	-2
 27871  001F78  50E3               	movf	plusw1,w,c
 27872  001F7A  0F9F               	addlw	159
 27873  001F7C  6E34               	movwf	(btemp+10)^0,c
 27874  001F7E  0EFF               	movlw	-1
 27875  001F80  006F FF8C  F035    	movff	plusw1,btemp+11
 27876  001F86  0EFF               	movlw	255
 27877  001F88  2235               	addwfc	(btemp+11)^0,f,c
 27878  001F8A  5035               	movf	(btemp+11)^0,w,c
 27879  001F8C  E106               	bnz	u7590
 27880  001F8E  0E1A               	movlw	26
 27881  001F90  5C34               	subwf	(btemp+10)^0,w,c
 27882  001F92  B0D8               	btfsc	status,0,c
 27883  001F94  D002               	goto	u7590
 27884  001F96  0E01               	movlw	1
 27885  001F98  D001               	goto	u7600
 27886  001F9A                     u7590:
 27887  001F9A  0E00               	movlw	0
 27888  001F9C                     u7600:
 27889  001F9C  6E2A               	movwf	btemp^0,c
 27890  001F9E  6A2B               	clrf	(btemp+1)^0,c
 27891                           
 27892                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27893  001FA0  52E5               	movf	postdec1,f,c
 27894  001FA2  52E5               	movf	postdec1,f,c
 27895  001FA4  0012               	return		;funcret
 27896  001FA6                     __end_of_islower:
 27897                           	opt callstack 0
 27898                           
 27899 ;; *************** function _isalpha *****************
 27900 ;; Defined at:
 27901 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 27902 ;; Parameters:    Size  Location     Type
 27903 ;;  c               2  [STACK] int 
 27904 ;; Auto vars:     Size  Location     Type
 27905 ;;		None
 27906 ;; Return value:  Size  Location     Type
 27907 ;;                  2  [STACK] int 
 27908 ;; Registers used:
 27909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 27910 ;; Tracked objects:
 27911 ;;		On entry : 0/0
 27912 ;;		On exit  : 0/0
 27913 ;;		Unchanged: 0/0
 27914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27919 ;;Total ram usage:        0 bytes
 27920 ;; Hardware stack levels used:    1
 27921 ;; Hardware stack levels required when called:   15
 27922 ;; This function calls:
 27923 ;;		Nothing
 27924 ;; This function is called by:
 27925 ;;		_xtoa
 27926 ;; This function uses a reentrant model
 27927 ;;
 27928                           
 27929                           	psect	text97
 27930  001AEE                     __ptext97:
 27931                           	opt callstack 0
 27932  001AEE                     _isalpha:
 27933                           	opt callstack 0
 27934                           
 27935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27936                           ;incstack = 0
 27937 ;; hardware stack exceeded
 27938  001AEE  0E9F               	movlw	159
 27939  001AF0  6E34               	movwf	(btemp+10)^0,c
 27940  001AF2  0EFF               	movlw	255
 27941  001AF4  6E35               	movwf	(btemp+11)^0,c
 27942                           
 27943                           ;stkvar	_c @ sp[(0)+-2]
 27944  001AF6  0EFE               	movlw	-2
 27945  001AF8  006F FF8C  F032    	movff	plusw1,btemp+8
 27946  001AFE  0EFF               	movlw	-1
 27947  001B00  006F FF8C  F033    	movff	plusw1,btemp+9
 27948  001B06  0E20               	movlw	32
 27949  001B08  1232               	iorwf	(btemp+8)^0,f,c
 27950  001B0A  0E00               	movlw	0
 27951  001B0C  1233               	iorwf	(btemp+9)^0,f,c
 27952  001B0E  5034               	movf	(btemp+10)^0,w,c
 27953  001B10  2632               	addwf	(btemp+8)^0,f,c
 27954  001B12  5035               	movf	(btemp+11)^0,w,c
 27955  001B14  2233               	addwfc	(btemp+9)^0,f,c
 27956  001B16  5033               	movf	(btemp+9)^0,w,c
 27957  001B18  E106               	bnz	u7940
 27958  001B1A  0E1A               	movlw	26
 27959  001B1C  5C32               	subwf	(btemp+8)^0,w,c
 27960  001B1E  B0D8               	btfsc	status,0,c
 27961  001B20  D002               	goto	u7940
 27962  001B22  0E01               	movlw	1
 27963  001B24  D001               	goto	u7950
 27964  001B26                     u7940:
 27965  001B26  0E00               	movlw	0
 27966  001B28                     u7950:
 27967  001B28  6E2A               	movwf	btemp^0,c
 27968  001B2A  6A2B               	clrf	(btemp+1)^0,c
 27969                           
 27970                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27971  001B2C  52E5               	movf	postdec1,f,c
 27972  001B2E  52E5               	movf	postdec1,f,c
 27973  001B30  0012               	return		;funcret
 27974  001B32                     __end_of_isalpha:
 27975                           	opt callstack 0
 27976                           
 27977 ;; *************** function _utoa *****************
 27978 ;; Defined at:
 27979 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27980 ;; Parameters:    Size  Location     Type
 27981 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27982 ;;		 -> f(6), NULL(0), 
 27983 ;;  d               8  [STACK] unsigned long long 
 27984 ;; Auto vars:     Size  Location     Type
 27985 ;;  n               8  [STACK] unsigned long long 
 27986 ;;  i               2  [STACK] int 
 27987 ;;  w               2  [STACK] int 
 27988 ;;  p               2  [STACK] int 
 27989 ;; Return value:  Size  Location     Type
 27990 ;;                  2  [STACK] int 
 27991 ;; Registers used:
 27992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 27993 ;; Tracked objects:
 27994 ;;		On entry : 0/0
 27995 ;;		On exit  : 0/0
 27996 ;;		Unchanged: 0/0
 27997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28002 ;;Total ram usage:        0 bytes
 28003 ;; Hardware stack levels used:    1
 28004 ;; Hardware stack levels required when called:   20
 28005 ;; This function calls:
 28006 ;;		___lodiv
 28007 ;;		___lomod
 28008 ;;		_pad
 28009 ;; This function is called by:
 28010 ;;		_vfpfcnvrt
 28011 ;; This function uses a reentrant model
 28012 ;;
 28013                           
 28014                           	psect	text98
 28015  01A5B0                     __ptext98:
 28016                           	opt callstack 0
 28017  01A5B0                     _utoa:
 28018                           	opt callstack 0
 28019                           
 28020                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28021  01A5B0  0E0E               	movlw	14
 28022  01A5B2  26E1               	addwf	fsr1l,f,c
 28023  01A5B4  0E00               	movlw	0
 28024  01A5B6  22E2               	addwfc	fsr1h,f,c
 28025                           
 28026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28027                           
 28028                           ;incstack = 0
 28029 ;; hardware stack exceeded
 28030  01A5B8  AE4D               	btfss	(_prec+1)^0,7,c
 28031                           
 28032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 28033  01A5BA  924E               	bcf	_flags^0,1,c
 28034                           
 28035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 28036  01A5BC  BE4D               	btfsc	(_prec+1)^0,7,c
 28037  01A5BE  D005               	goto	u15280
 28038  01A5C0  504D               	movf	(_prec+1)^0,w,c
 28039  01A5C2  E110               	bnz	l15922
 28040  01A5C4  044C               	decf	_prec^0,w,c
 28041  01A5C6  B0D8               	btfsc	status,0,c
 28042  01A5C8  D00D               	goto	l15922
 28043  01A5CA                     u15280:
 28044  01A5CA  0E01               	movlw	1
 28045  01A5CC  6E34               	movwf	(btemp+10)^0,c
 28046  01A5CE  0E00               	movlw	0
 28047  01A5D0  6E35               	movwf	(btemp+11)^0,c
 28048                           
 28049                           ;stkvar	_p @ sp[(-14)+12]
 28050  01A5D2  0EFE               	movlw	-2
 28051  01A5D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28052  01A5DA  0EFF               	movlw	-1
 28053  01A5DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28054  01A5E2  D008               	goto	l2624
 28055  01A5E4                     l15922:
 28056                           
 28057                           ;stkvar	_p @ sp[(-14)+12]
 28058  01A5E4  0EFE               	movlw	-2
 28059  01A5E6  0060  F133  FFE3   	movff	_prec,plusw1
 28060  01A5EC  0EFF               	movlw	-1
 28061  01A5EE  0060  F137  FFE3   	movff	_prec+1,plusw1
 28062  01A5F4                     l2624:
 28063                           
 28064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 28065                           ;stkvar	_w @ sp[(-14)+10]
 28066  01A5F4  0EFC               	movlw	-4
 28067  01A5F6  0060  F12B  FFE3   	movff	_width,plusw1
 28068  01A5FC  0EFD               	movlw	-3
 28069  01A5FE  0060  F12F  FFE3   	movff	_width+1,plusw1
 28070                           
 28071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 28072                           ;stkvar	_d @ sp[(-14)+-10]
 28073  01A604  0EE8               	movlw	232
 28074  01A606  24E1               	addwf	fsr1l,w,c
 28075  01A608  6ED9               	movwf	fsr2l,c
 28076  01A60A  0EFF               	movlw	255
 28077  01A60C  20E2               	addwfc	fsr1h,w,c
 28078  01A60E  6EDA               	movwf	fsr2h,c
 28079                           
 28080                           ;stkvar	_n @ sp[(-14)+0]
 28081  01A610  0E08               	movlw	8
 28082  01A612  6E2A               	movwf	btemp^0,c
 28083  01A614  0EF2               	movlw	-14
 28084  01A616                     us1529999:
 28085  01A616  006F FF7B FFE3     	movff	postinc2,plusw1
 28086  01A61C  28E8               	incf	wreg,w,c
 28087  01A61E  2E2A               	decfsz	btemp^0,f,c
 28088  01A620  D7FA               	bra	us1529999
 28089                           
 28090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 28091  01A622  0E4F               	movlw	79
 28092  01A624  6E34               	movwf	(btemp+10)^0,c
 28093  01A626  0E00               	movlw	0
 28094  01A628  6E35               	movwf	(btemp+11)^0,c
 28095                           
 28096                           ;stkvar	_i @ sp[(-14)+8]
 28097  01A62A  0EFA               	movlw	-6
 28098  01A62C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28099  01A632  0EFB               	movlw	-5
 28100  01A634  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28101                           
 28102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 28103  01A63A  0103               	movlb	3	; () banked
 28104  01A63C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28105                           
 28106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28107  01A63E  D0FB               	goto	l15940
 28108  01A640                     l15930:
 28109                           
 28110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 28111                           ;stkvar	_i @ sp[(-14)+8]
 28112  01A640  50E1               	movf	fsr1l,w,c
 28113  01A642  0FFA               	addlw	-6
 28114  01A644  6ED9               	movwf	fsr2l,c
 28115  01A646  50E2               	movf	fsr1h,w,c
 28116  01A648  6EDA               	movwf	fsr2h,c
 28117  01A64A  0EFF               	movlw	255
 28118  01A64C  22DA               	addwfc	fsr2h,f,c
 28119  01A64E  06DE               	decf	postinc2,f,c
 28120  01A650  0E00               	movlw	0
 28121  01A652  5ADD               	subwfb	postdec2,f,c
 28122                           
 28123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 28124  01A654  0E0A               	movlw	10
 28125  01A656  6EE6               	movwf	postinc1,c
 28126  01A658  0E00               	movlw	0
 28127  01A65A  6EE6               	movwf	postinc1,c
 28128  01A65C  0E00               	movlw	0
 28129  01A65E  6EE6               	movwf	postinc1,c
 28130  01A660  0E00               	movlw	0
 28131  01A662  6EE6               	movwf	postinc1,c
 28132  01A664  0E00               	movlw	0
 28133  01A666  6EE6               	movwf	postinc1,c
 28134  01A668  0E00               	movlw	0
 28135  01A66A  6EE6               	movwf	postinc1,c
 28136  01A66C  0E00               	movlw	0
 28137  01A66E  6EE6               	movwf	postinc1,c
 28138  01A670  0E00               	movlw	0
 28139  01A672  6EE6               	movwf	postinc1,c
 28140                           
 28141                           ;stkvar	_n @ sp[(-22)+0]
 28142  01A674  50E1               	movf	fsr1l,w,c
 28143  01A676  0FEA               	addlw	-22
 28144  01A678  6ED9               	movwf	fsr2l,c
 28145  01A67A  50E2               	movf	fsr1h,w,c
 28146  01A67C  6EDA               	movwf	fsr2h,c
 28147  01A67E  0EFF               	movlw	255
 28148  01A680  22DA               	addwfc	fsr2h,f,c
 28149  01A682  006F FF7B FFE6     	movff	postinc2,postinc1
 28150  01A688  006F FF7B FFE6     	movff	postinc2,postinc1
 28151  01A68E  006F FF7B FFE6     	movff	postinc2,postinc1
 28152  01A694  006F FF7B FFE6     	movff	postinc2,postinc1
 28153  01A69A  006F FF7B FFE6     	movff	postinc2,postinc1
 28154  01A6A0  006F FF7B FFE6     	movff	postinc2,postinc1
 28155  01A6A6  006F FF7B FFE6     	movff	postinc2,postinc1
 28156  01A6AC  006F FF7B FFE6     	movff	postinc2,postinc1
 28157  01A6B2  ECBC  F0F7         	call	___lomod	;wreg free
 28158  01A6B6  52E5               	movf	postdec1,f,c
 28159  01A6B8  006F FF9C  F041    	movff	indf1,btemp+23
 28160  01A6BE  52E5               	movf	postdec1,f,c
 28161  01A6C0  006F FF9C  F040    	movff	indf1,btemp+22
 28162  01A6C6  52E5               	movf	postdec1,f,c
 28163  01A6C8  006F FF9C  F03F    	movff	indf1,btemp+21
 28164  01A6CE  52E5               	movf	postdec1,f,c
 28165  01A6D0  006F FF9C  F03E    	movff	indf1,btemp+20
 28166  01A6D6  52E5               	movf	postdec1,f,c
 28167  01A6D8  006F FF9C  F03D    	movff	indf1,btemp+19
 28168  01A6DE  52E5               	movf	postdec1,f,c
 28169  01A6E0  006F FF9C  F03C    	movff	indf1,btemp+18
 28170  01A6E6  52E5               	movf	postdec1,f,c
 28171  01A6E8  006F FF9C  F03B    	movff	indf1,btemp+17
 28172  01A6EE  52E5               	movf	postdec1,f,c
 28173  01A6F0  006F FF9C  F03A    	movff	indf1,btemp+16
 28174  01A6F6  0EF8               	movlw	248
 28175  01A6F8  26E1               	addwf	fsr1l,f,c
 28176  01A6FA  0EFF               	movlw	255
 28177  01A6FC  22E2               	addwfc	fsr1h,f,c
 28178  01A6FE  0E30               	movlw	48
 28179  01A700  263A               	addwf	(btemp+16)^0,f,c
 28180                           
 28181                           ;stkvar	_i @ sp[(-14)+8]
 28182  01A702  0EFA               	movlw	-6
 28183  01A704  006F FF8C  F034    	movff	plusw1,btemp+10
 28184  01A70A  0EFB               	movlw	-5
 28185  01A70C  006F FF8C  F035    	movff	plusw1,btemp+11
 28186  01A712  0E54               	movlw	low _dbuf
 28187  01A714  2434               	addwf	(btemp+10)^0,w,c
 28188  01A716  6ED9               	movwf	fsr2l,c
 28189  01A718  0E03               	movlw	high _dbuf
 28190  01A71A  2035               	addwfc	(btemp+11)^0,w,c
 28191  01A71C  6EDA               	movwf	fsr2h,c
 28192  01A71E  0060  F0EB  FFDF   	movff	btemp+16,indf2
 28193                           
 28194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 28195                           ;stkvar	_p @ sp[(-14)+12]
 28196  01A724  50E1               	movf	fsr1l,w,c
 28197  01A726  0FFE               	addlw	-2
 28198  01A728  6ED9               	movwf	fsr2l,c
 28199  01A72A  50E2               	movf	fsr1h,w,c
 28200  01A72C  6EDA               	movwf	fsr2h,c
 28201  01A72E  0EFF               	movlw	255
 28202  01A730  22DA               	addwfc	fsr2h,f,c
 28203  01A732  06DE               	decf	postinc2,f,c
 28204  01A734  0E00               	movlw	0
 28205  01A736  5ADD               	subwfb	postdec2,f,c
 28206                           
 28207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 28208                           ;stkvar	_w @ sp[(-14)+10]
 28209  01A738  50E1               	movf	fsr1l,w,c
 28210  01A73A  0FFC               	addlw	-4
 28211  01A73C  6ED9               	movwf	fsr2l,c
 28212  01A73E  50E2               	movf	fsr1h,w,c
 28213  01A740  6EDA               	movwf	fsr2h,c
 28214  01A742  0EFF               	movlw	255
 28215  01A744  22DA               	addwfc	fsr2h,f,c
 28216  01A746  06DE               	decf	postinc2,f,c
 28217  01A748  0E00               	movlw	0
 28218  01A74A  5ADD               	subwfb	postdec2,f,c
 28219                           
 28220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 28221  01A74C  0E0A               	movlw	10
 28222  01A74E  6EE6               	movwf	postinc1,c
 28223  01A750  0E00               	movlw	0
 28224  01A752  6EE6               	movwf	postinc1,c
 28225  01A754  0E00               	movlw	0
 28226  01A756  6EE6               	movwf	postinc1,c
 28227  01A758  0E00               	movlw	0
 28228  01A75A  6EE6               	movwf	postinc1,c
 28229  01A75C  0E00               	movlw	0
 28230  01A75E  6EE6               	movwf	postinc1,c
 28231  01A760  0E00               	movlw	0
 28232  01A762  6EE6               	movwf	postinc1,c
 28233  01A764  0E00               	movlw	0
 28234  01A766  6EE6               	movwf	postinc1,c
 28235  01A768  0E00               	movlw	0
 28236  01A76A  6EE6               	movwf	postinc1,c
 28237                           
 28238                           ;stkvar	_n @ sp[(-22)+0]
 28239  01A76C  50E1               	movf	fsr1l,w,c
 28240  01A76E  0FEA               	addlw	-22
 28241  01A770  6ED9               	movwf	fsr2l,c
 28242  01A772  50E2               	movf	fsr1h,w,c
 28243  01A774  6EDA               	movwf	fsr2h,c
 28244  01A776  0EFF               	movlw	255
 28245  01A778  22DA               	addwfc	fsr2h,f,c
 28246  01A77A  006F FF7B FFE6     	movff	postinc2,postinc1
 28247  01A780  006F FF7B FFE6     	movff	postinc2,postinc1
 28248  01A786  006F FF7B FFE6     	movff	postinc2,postinc1
 28249  01A78C  006F FF7B FFE6     	movff	postinc2,postinc1
 28250  01A792  006F FF7B FFE6     	movff	postinc2,postinc1
 28251  01A798  006F FF7B FFE6     	movff	postinc2,postinc1
 28252  01A79E  006F FF7B FFE6     	movff	postinc2,postinc1
 28253  01A7A4  006F FF7B FFE6     	movff	postinc2,postinc1
 28254  01A7AA  EC24  F0F0         	call	___lodiv	;wreg free
 28255  01A7AE  52E5               	movf	postdec1,f,c
 28256  01A7B0  006F FF9C  F041    	movff	indf1,btemp+23
 28257  01A7B6  52E5               	movf	postdec1,f,c
 28258  01A7B8  006F FF9C  F040    	movff	indf1,btemp+22
 28259  01A7BE  52E5               	movf	postdec1,f,c
 28260  01A7C0  006F FF9C  F03F    	movff	indf1,btemp+21
 28261  01A7C6  52E5               	movf	postdec1,f,c
 28262  01A7C8  006F FF9C  F03E    	movff	indf1,btemp+20
 28263  01A7CE  52E5               	movf	postdec1,f,c
 28264  01A7D0  006F FF9C  F03D    	movff	indf1,btemp+19
 28265  01A7D6  52E5               	movf	postdec1,f,c
 28266  01A7D8  006F FF9C  F03C    	movff	indf1,btemp+18
 28267  01A7DE  52E5               	movf	postdec1,f,c
 28268  01A7E0  006F FF9C  F03B    	movff	indf1,btemp+17
 28269  01A7E6  52E5               	movf	postdec1,f,c
 28270  01A7E8  006F FF9C  F03A    	movff	indf1,btemp+16
 28271  01A7EE  0EF8               	movlw	248
 28272  01A7F0  26E1               	addwf	fsr1l,f,c
 28273  01A7F2  0EFF               	movlw	255
 28274  01A7F4  22E2               	addwfc	fsr1h,f,c
 28275                           
 28276                           ;stkvar	_n @ sp[(-14)+0]
 28277  01A7F6  0EF2               	movlw	-14
 28278  01A7F8  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28279  01A7FE  0EF3               	movlw	-13
 28280  01A800  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28281  01A806  0EF4               	movlw	-12
 28282  01A808  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28283  01A80E  0EF5               	movlw	-11
 28284  01A810  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28285  01A816  0EF6               	movlw	-10
 28286  01A818  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28287  01A81E  0EF7               	movlw	-9
 28288  01A820  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28289  01A826  0EF8               	movlw	-8
 28290  01A828  0060  F103  FFE3   	movff	btemp+22,plusw1
 28291  01A82E  0EF9               	movlw	-7
 28292  01A830  0060  F107  FFE3   	movff	btemp+23,plusw1
 28293  01A836                     l15940:
 28294                           
 28295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28296                           ;stkvar	_i @ sp[(-14)+8]
 28297  01A836  0EFA               	movlw	-6
 28298  01A838  006F FF8C  F02A    	movff	plusw1,btemp
 28299  01A83E  0EFB               	movlw	-5
 28300  01A840  50E3               	movf	plusw1,w,c
 28301  01A842  102A               	iorwf	btemp^0,w,c
 28302  01A844  B4D8               	btfsc	status,2,c
 28303  01A846  D02F               	goto	u15340
 28304                           
 28305                           ;stkvar	_n @ sp[(-14)+0]
 28306  01A848  0EF2               	movlw	-14
 28307  01A84A  50E3               	movf	plusw1,w,c
 28308  01A84C  E115               	bnz	u15311
 28309  01A84E  0EF3               	movlw	-13
 28310  01A850  50E3               	movf	plusw1,w,c
 28311  01A852  E112               	bnz	u15311
 28312  01A854  0EF4               	movlw	-12
 28313  01A856  50E3               	movf	plusw1,w,c
 28314  01A858  E10F               	bnz	u15311
 28315  01A85A  0EF5               	movlw	-11
 28316  01A85C  50E3               	movf	plusw1,w,c
 28317  01A85E  E10C               	bnz	u15311
 28318  01A860  0EF6               	movlw	-10
 28319  01A862  50E3               	movf	plusw1,w,c
 28320  01A864  E109               	bnz	u15311
 28321  01A866  0EF7               	movlw	-9
 28322  01A868  50E3               	movf	plusw1,w,c
 28323  01A86A  E106               	bnz	u15311
 28324  01A86C  0EF8               	movlw	-8
 28325  01A86E  50E3               	movf	plusw1,w,c
 28326  01A870  E103               	bnz	u15311
 28327  01A872  0EF9               	movlw	-7
 28328  01A874  50E3               	movf	plusw1,w,c
 28329  01A876  A4D8               	btfss	status,2,c
 28330  01A878                     u15311:
 28331  01A878  D6E3               	goto	l15930
 28332                           
 28333                           ;stkvar	_p @ sp[(-14)+12]
 28334  01A87A  0EFF               	movlw	-1
 28335  01A87C  BEE3               	btfsc	plusw1,7,c
 28336  01A87E  D007               	goto	u15320
 28337  01A880  0EFF               	movlw	-1
 28338  01A882  50E3               	movf	plusw1,w,c
 28339  01A884  E103               	bnz	u15321
 28340  01A886  0EFE               	movlw	-2
 28341  01A888  04E3               	decf	plusw1,w,c
 28342  01A88A  B0D8               	btfsc	status,0,c
 28343  01A88C                     u15321:
 28344  01A88C  D6D9               	goto	l15930
 28345  01A88E                     u15320:
 28346                           
 28347                           ;stkvar	_w @ sp[(-14)+10]
 28348  01A88E  0EFD               	movlw	-3
 28349  01A890  BEE3               	btfsc	plusw1,7,c
 28350  01A892  D009               	goto	u15340
 28351  01A894  0EFD               	movlw	-3
 28352  01A896  50E3               	movf	plusw1,w,c
 28353  01A898  E104               	bnz	u15330
 28354  01A89A  0EFC               	movlw	-4
 28355  01A89C  04E3               	decf	plusw1,w,c
 28356  01A89E  A0D8               	btfss	status,0,c
 28357  01A8A0  D002               	goto	u15340
 28358  01A8A2                     u15330:
 28359  01A8A2  B24E               	btfsc	_flags^0,1,c
 28360  01A8A4  D6CD               	goto	l15930
 28361  01A8A6                     u15340:
 28362                           
 28363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 28364                           ;stkvar	_w @ sp[(-14)+10]
 28365  01A8A6  0EFC               	movlw	-4
 28366  01A8A8  006F FF8F FFE6     	movff	plusw1,postinc1
 28367  01A8AE  006F FF8F FFE6     	movff	plusw1,postinc1
 28368                           
 28369                           ;stkvar	_i @ sp[(-16)+8]
 28370  01A8B4  0E54               	movlw	low _dbuf
 28371  01A8B6  6E34               	movwf	(btemp+10)^0,c
 28372  01A8B8  0E03               	movlw	high _dbuf
 28373  01A8BA  6E35               	movwf	(btemp+11)^0,c
 28374  01A8BC  0EF8               	movlw	-8
 28375  01A8BE  50E3               	movf	plusw1,w,c
 28376  01A8C0  2634               	addwf	(btemp+10)^0,f,c
 28377  01A8C2  0EF9               	movlw	-7
 28378  01A8C4  50E3               	movf	plusw1,w,c
 28379  01A8C6  2235               	addwfc	(btemp+11)^0,f,c
 28380  01A8C8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28381  01A8CE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28382                           
 28383                           ;stkvar	_fp @ sp[(-18)+-2]
 28384  01A8D4  0EEC               	movlw	-20
 28385  01A8D6  006F FF8F FFE6     	movff	plusw1,postinc1
 28386  01A8DC  006F FF8F FFE6     	movff	plusw1,postinc1
 28387  01A8E2  EC2F  F0FB         	call	_pad	;wreg free
 28388                           
 28389                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 28390  01A8E6  0EE8               	movlw	232
 28391  01A8E8  26E1               	addwf	fsr1l,f,c
 28392  01A8EA  0EFF               	movlw	255
 28393  01A8EC  22E2               	addwfc	fsr1h,f,c
 28394  01A8EE  0012               	return		;funcret
 28395  01A8F0                     __end_of_utoa:
 28396                           	opt callstack 0
 28397                           
 28398 ;; *************** function ___lomod *****************
 28399 ;; Defined at:
 28400 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 28401 ;; Parameters:    Size  Location     Type
 28402 ;;  dividend        8  [STACK] unsigned long long 
 28403 ;;  divisor         8  [STACK] unsigned long long 
 28404 ;; Auto vars:     Size  Location     Type
 28405 ;;  counter         1  [STACK] unsigned char 
 28406 ;; Return value:  Size  Location     Type
 28407 ;;                  8  [STACK] unsigned long long 
 28408 ;; Registers used:
 28409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28410 ;; Tracked objects:
 28411 ;;		On entry : 0/3
 28412 ;;		On exit  : 0/0
 28413 ;;		Unchanged: 0/0
 28414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28419 ;;Total ram usage:        0 bytes
 28420 ;; Hardware stack levels used:    1
 28421 ;; Hardware stack levels required when called:   15
 28422 ;; This function calls:
 28423 ;;		Nothing
 28424 ;; This function is called by:
 28425 ;;		_utoa
 28426 ;; This function uses a reentrant model
 28427 ;;
 28428                           
 28429                           	psect	text99
 28430  01EF78                     __ptext99:
 28431                           	opt callstack 0
 28432  01EF78                     ___lomod:
 28433                           	opt callstack 0
 28434                           
 28435                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28436  01EF78  52E6               	movf	postinc1,f,c
 28437                           
 28438                           ;stkvar	_divisor @ sp[(-1)+-16]
 28439                           
 28440                           ;incstack = 0
 28441 ;; hardware stack exceeded
 28442  01EF7A  0EEF               	movlw	-17
 28443  01EF7C  50E3               	movf	plusw1,w,c
 28444  01EF7E  E116               	bnz	u9150
 28445  01EF80  0EF0               	movlw	-16
 28446  01EF82  50E3               	movf	plusw1,w,c
 28447  01EF84  E113               	bnz	u9150
 28448  01EF86  0EF1               	movlw	-15
 28449  01EF88  50E3               	movf	plusw1,w,c
 28450  01EF8A  E110               	bnz	u9150
 28451  01EF8C  0EF2               	movlw	-14
 28452  01EF8E  50E3               	movf	plusw1,w,c
 28453  01EF90  E10D               	bnz	u9150
 28454  01EF92  0EF3               	movlw	-13
 28455  01EF94  50E3               	movf	plusw1,w,c
 28456  01EF96  E10A               	bnz	u9150
 28457  01EF98  0EF4               	movlw	-12
 28458  01EF9A  50E3               	movf	plusw1,w,c
 28459  01EF9C  E107               	bnz	u9150
 28460  01EF9E  0EF5               	movlw	-11
 28461  01EFA0  50E3               	movf	plusw1,w,c
 28462  01EFA2  E104               	bnz	u9150
 28463  01EFA4  0EF6               	movlw	-10
 28464  01EFA6  50E3               	movf	plusw1,w,c
 28465  01EFA8  B4D8               	btfsc	status,2,c
 28466  01EFAA  D075               	goto	u9180
 28467  01EFAC                     u9150:
 28468                           
 28469                           ;stkvar	_counter @ sp[(-1)+0]
 28470  01EFAC  0EFF               	movlw	-1
 28471  01EFAE  6AE3               	clrf	plusw1,c
 28472  01EFB0  D012               	goto	L29
 28473  01EFB2                     l10778:
 28474                           
 28475                           ;stkvar	_divisor @ sp[(-1)+-16]
 28476  01EFB2  90D8               	bcf	status,0,c
 28477  01EFB4  0EEF               	movlw	-17
 28478  01EFB6  36E3               	rlcf	plusw1,f,c
 28479  01EFB8  0EF0               	movlw	-16
 28480  01EFBA  36E3               	rlcf	plusw1,f,c
 28481  01EFBC  0EF1               	movlw	-15
 28482  01EFBE  36E3               	rlcf	plusw1,f,c
 28483  01EFC0  0EF2               	movlw	-14
 28484  01EFC2  36E3               	rlcf	plusw1,f,c
 28485  01EFC4  0EF3               	movlw	-13
 28486  01EFC6  36E3               	rlcf	plusw1,f,c
 28487  01EFC8  0EF4               	movlw	-12
 28488  01EFCA  36E3               	rlcf	plusw1,f,c
 28489  01EFCC  0EF5               	movlw	-11
 28490  01EFCE  36E3               	rlcf	plusw1,f,c
 28491  01EFD0  0EF6               	movlw	-10
 28492  01EFD2  36E3               	rlcf	plusw1,f,c
 28493                           
 28494                           ;stkvar	_counter @ sp[(-1)+0]
 28495  01EFD4  0EFF               	movlw	-1
 28496  01EFD6                     L29:
 28497  01EFD6  2AE3               	incf	plusw1,f,c
 28498                           
 28499                           ;stkvar	_divisor @ sp[(-1)+-16]
 28500  01EFD8  0EF6               	movlw	-10
 28501  01EFDA  AEE3               	btfss	plusw1,7,c
 28502  01EFDC  D7EA               	goto	l10778
 28503  01EFDE                     u9160:
 28504                           
 28505                           ;stkvar	_divisor @ sp[(-1)+-16]
 28506                           ;stkvar	_dividend @ sp[(-1)+-8]
 28507  01EFDE  50E1               	movf	fsr1l,w,c
 28508  01EFE0  0FF7               	addlw	-9
 28509  01EFE2  6ED9               	movwf	fsr2l,c
 28510  01EFE4  50E2               	movf	fsr1h,w,c
 28511  01EFE6  6EDA               	movwf	fsr2h,c
 28512  01EFE8  0EFF               	movlw	255
 28513  01EFEA  22DA               	addwfc	fsr2h,f,c
 28514  01EFEC  0EEF               	movlw	-17
 28515  01EFEE  50E3               	movf	plusw1,w,c
 28516  01EFF0  5CDE               	subwf	postinc2,w,c
 28517  01EFF2  0EF0               	movlw	-16
 28518  01EFF4  50E3               	movf	plusw1,w,c
 28519  01EFF6  58DE               	subwfb	postinc2,w,c
 28520  01EFF8  0EF1               	movlw	-15
 28521  01EFFA  50E3               	movf	plusw1,w,c
 28522  01EFFC  58DE               	subwfb	postinc2,w,c
 28523  01EFFE  0EF2               	movlw	-14
 28524  01F000  50E3               	movf	plusw1,w,c
 28525  01F002  58DE               	subwfb	postinc2,w,c
 28526  01F004  0EF3               	movlw	-13
 28527  01F006  50E3               	movf	plusw1,w,c
 28528  01F008  58DE               	subwfb	postinc2,w,c
 28529  01F00A  0EF4               	movlw	-12
 28530  01F00C  50E3               	movf	plusw1,w,c
 28531  01F00E  58DE               	subwfb	postinc2,w,c
 28532  01F010  0EF5               	movlw	-11
 28533  01F012  50E3               	movf	plusw1,w,c
 28534  01F014  58DE               	subwfb	postinc2,w,c
 28535  01F016  0EF6               	movlw	-10
 28536  01F018  50E3               	movf	plusw1,w,c
 28537  01F01A  58DE               	subwfb	postinc2,w,c
 28538  01F01C  A0D8               	btfss	status,0,c
 28539  01F01E  D01F               	goto	l10786
 28540                           
 28541                           ;stkvar	_divisor @ sp[(-1)+-16]
 28542                           ;stkvar	_dividend @ sp[(-1)+-8]
 28543  01F020  50E1               	movf	fsr1l,w,c
 28544  01F022  0FF7               	addlw	-9
 28545  01F024  6ED9               	movwf	fsr2l,c
 28546  01F026  50E2               	movf	fsr1h,w,c
 28547  01F028  6EDA               	movwf	fsr2h,c
 28548  01F02A  0EFF               	movlw	255
 28549  01F02C  22DA               	addwfc	fsr2h,f,c
 28550  01F02E  0EEF               	movlw	-17
 28551  01F030  50E3               	movf	plusw1,w,c
 28552  01F032  5EDE               	subwf	postinc2,f,c
 28553  01F034  0EF0               	movlw	-16
 28554  01F036  50E3               	movf	plusw1,w,c
 28555  01F038  5ADE               	subwfb	postinc2,f,c
 28556  01F03A  0EF1               	movlw	-15
 28557  01F03C  50E3               	movf	plusw1,w,c
 28558  01F03E  5ADE               	subwfb	postinc2,f,c
 28559  01F040  0EF2               	movlw	-14
 28560  01F042  50E3               	movf	plusw1,w,c
 28561  01F044  5ADE               	subwfb	postinc2,f,c
 28562  01F046  0EF3               	movlw	-13
 28563  01F048  50E3               	movf	plusw1,w,c
 28564  01F04A  5ADE               	subwfb	postinc2,f,c
 28565  01F04C  0EF4               	movlw	-12
 28566  01F04E  50E3               	movf	plusw1,w,c
 28567  01F050  5ADE               	subwfb	postinc2,f,c
 28568  01F052  0EF5               	movlw	-11
 28569  01F054  50E3               	movf	plusw1,w,c
 28570  01F056  5ADE               	subwfb	postinc2,f,c
 28571  01F058  0EF6               	movlw	-10
 28572  01F05A  50E3               	movf	plusw1,w,c
 28573  01F05C  5ADE               	subwfb	postinc2,f,c
 28574  01F05E                     l10786:
 28575                           
 28576                           ;stkvar	_divisor @ sp[(-1)+-16]
 28577  01F05E  90D8               	bcf	status,0,c
 28578  01F060  0EF6               	movlw	-10
 28579  01F062  32E3               	rrcf	plusw1,f,c
 28580  01F064  0EF5               	movlw	-11
 28581  01F066  32E3               	rrcf	plusw1,f,c
 28582  01F068  0EF4               	movlw	-12
 28583  01F06A  32E3               	rrcf	plusw1,f,c
 28584  01F06C  0EF3               	movlw	-13
 28585  01F06E  32E3               	rrcf	plusw1,f,c
 28586  01F070  0EF2               	movlw	-14
 28587  01F072  32E3               	rrcf	plusw1,f,c
 28588  01F074  0EF1               	movlw	-15
 28589  01F076  32E3               	rrcf	plusw1,f,c
 28590  01F078  0EF0               	movlw	-16
 28591  01F07A  32E3               	rrcf	plusw1,f,c
 28592  01F07C  0EEF               	movlw	-17
 28593  01F07E  32E3               	rrcf	plusw1,f,c
 28594                           
 28595                           ;stkvar	_counter @ sp[(-1)+0]
 28596  01F080  0EFF               	movlw	-1
 28597  01F082  50E3               	movf	plusw1,w,c
 28598  01F084  6E2A               	movwf	btemp^0,c
 28599  01F086  0E01               	movlw	1
 28600  01F088  5E2A               	subwf	btemp^0,f,c
 28601  01F08A  0EFF               	movlw	-1
 28602  01F08C  0060  F0AB  FFE3   	movff	btemp,plusw1
 28603  01F092  A4D8               	btfss	status,2,c
 28604  01F094  D7A4               	goto	u9160
 28605  01F096                     u9180:
 28606                           
 28607                           ;stkvar	_dividend @ sp[(-1)+-8]
 28608  01F096  0EF7               	movlw	247
 28609  01F098  24E1               	addwf	fsr1l,w,c
 28610  01F09A  6ED9               	movwf	fsr2l,c
 28611  01F09C  0EFF               	movlw	255
 28612  01F09E  20E2               	addwfc	fsr1h,w,c
 28613  01F0A0  6EDA               	movwf	fsr2h,c
 28614                           
 28615                           ;stkvar	?___lomod @ sp[(-1)+-8]
 28616  01F0A2  0E08               	movlw	8
 28617  01F0A4  6E2A               	movwf	btemp^0,c
 28618  01F0A6  0EF7               	movlw	-9
 28619  01F0A8                     us919999:
 28620  01F0A8  006F FF7B FFE3     	movff	postinc2,plusw1
 28621  01F0AE  28E8               	incf	wreg,w,c
 28622  01F0B0  2E2A               	decfsz	btemp^0,f,c
 28623  01F0B2  D7FA               	bra	us919999
 28624                           
 28625                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28626  01F0B4  52E5               	movf	postdec1,f,c
 28627  01F0B6  0012               	return		;funcret
 28628  01F0B8                     __end_of___lomod:
 28629                           	opt callstack 0
 28630                           
 28631 ;; *************** function ___lodiv *****************
 28632 ;; Defined at:
 28633 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 28634 ;; Parameters:    Size  Location     Type
 28635 ;;  dividend        8  [STACK] unsigned long long 
 28636 ;;  divisor         8  [STACK] unsigned long long 
 28637 ;; Auto vars:     Size  Location     Type
 28638 ;;  quotient        8  [STACK] unsigned long long 
 28639 ;;  counter         1  [STACK] unsigned char 
 28640 ;; Return value:  Size  Location     Type
 28641 ;;                  8  [STACK] unsigned long long 
 28642 ;; Registers used:
 28643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28644 ;; Tracked objects:
 28645 ;;		On entry : 0/3
 28646 ;;		On exit  : 0/0
 28647 ;;		Unchanged: 0/0
 28648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28653 ;;Total ram usage:        0 bytes
 28654 ;; Hardware stack levels used:    1
 28655 ;; Hardware stack levels required when called:   15
 28656 ;; This function calls:
 28657 ;;		Nothing
 28658 ;; This function is called by:
 28659 ;;		_utoa
 28660 ;; This function uses a reentrant model
 28661 ;;
 28662                           
 28663                           	psect	text100
 28664  01E048                     __ptext100:
 28665                           	opt callstack 0
 28666  01E048                     ___lodiv:
 28667                           	opt callstack 0
 28668                           
 28669                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28670  01E048  0E09               	movlw	9
 28671  01E04A  26E1               	addwf	fsr1l,f,c
 28672  01E04C  0E00               	movlw	0
 28673  01E04E  22E2               	addwfc	fsr1h,f,c
 28674                           
 28675                           ;stkvar	_quotient @ sp[(-9)+0]
 28676                           
 28677                           ;incstack = 0
 28678 ;; hardware stack exceeded
 28679  01E050  0E07               	movlw	7
 28680  01E052  6E2A               	movwf	btemp^0,c
 28681  01E054  0EF7               	movlw	-9
 28682  01E056                     u9091:
 28683  01E056  6AE3               	clrf	plusw1,c
 28684  01E058  2AE8               	incf	wreg,f,c
 28685  01E05A  062A               	decf	btemp^0,f,c
 28686  01E05C  E2FC               	bc	u9091
 28687                           
 28688                           ;stkvar	_divisor @ sp[(-9)+-16]
 28689  01E05E  0EE7               	movlw	-25
 28690  01E060  50E3               	movf	plusw1,w,c
 28691  01E062  E116               	bnz	u9100
 28692  01E064  0EE8               	movlw	-24
 28693  01E066  50E3               	movf	plusw1,w,c
 28694  01E068  E113               	bnz	u9100
 28695  01E06A  0EE9               	movlw	-23
 28696  01E06C  50E3               	movf	plusw1,w,c
 28697  01E06E  E110               	bnz	u9100
 28698  01E070  0EEA               	movlw	-22
 28699  01E072  50E3               	movf	plusw1,w,c
 28700  01E074  E10D               	bnz	u9100
 28701  01E076  0EEB               	movlw	-21
 28702  01E078  50E3               	movf	plusw1,w,c
 28703  01E07A  E10A               	bnz	u9100
 28704  01E07C  0EEC               	movlw	-20
 28705  01E07E  50E3               	movf	plusw1,w,c
 28706  01E080  E107               	bnz	u9100
 28707  01E082  0EED               	movlw	-19
 28708  01E084  50E3               	movf	plusw1,w,c
 28709  01E086  E104               	bnz	u9100
 28710  01E088  0EEE               	movlw	-18
 28711  01E08A  50E3               	movf	plusw1,w,c
 28712  01E08C  B4D8               	btfsc	status,2,c
 28713  01E08E  D088               	goto	u9130
 28714  01E090                     u9100:
 28715                           
 28716                           ;stkvar	_counter @ sp[(-9)+8]
 28717  01E090  0EFF               	movlw	-1
 28718  01E092  6AE3               	clrf	plusw1,c
 28719  01E094  D012               	goto	L30
 28720  01E096                     l10754:
 28721                           
 28722                           ;stkvar	_divisor @ sp[(-9)+-16]
 28723  01E096  90D8               	bcf	status,0,c
 28724  01E098  0EE7               	movlw	-25
 28725  01E09A  36E3               	rlcf	plusw1,f,c
 28726  01E09C  0EE8               	movlw	-24
 28727  01E09E  36E3               	rlcf	plusw1,f,c
 28728  01E0A0  0EE9               	movlw	-23
 28729  01E0A2  36E3               	rlcf	plusw1,f,c
 28730  01E0A4  0EEA               	movlw	-22
 28731  01E0A6  36E3               	rlcf	plusw1,f,c
 28732  01E0A8  0EEB               	movlw	-21
 28733  01E0AA  36E3               	rlcf	plusw1,f,c
 28734  01E0AC  0EEC               	movlw	-20
 28735  01E0AE  36E3               	rlcf	plusw1,f,c
 28736  01E0B0  0EED               	movlw	-19
 28737  01E0B2  36E3               	rlcf	plusw1,f,c
 28738  01E0B4  0EEE               	movlw	-18
 28739  01E0B6  36E3               	rlcf	plusw1,f,c
 28740                           
 28741                           ;stkvar	_counter @ sp[(-9)+8]
 28742  01E0B8  0EFF               	movlw	-1
 28743  01E0BA                     L30:
 28744  01E0BA  2AE3               	incf	plusw1,f,c
 28745                           
 28746                           ;stkvar	_divisor @ sp[(-9)+-16]
 28747  01E0BC  0EEE               	movlw	-18
 28748  01E0BE  AEE3               	btfss	plusw1,7,c
 28749  01E0C0  D7EA               	goto	l10754
 28750  01E0C2                     u9110:
 28751                           
 28752                           ;stkvar	_quotient @ sp[(-9)+0]
 28753  01E0C2  90D8               	bcf	status,0,c
 28754  01E0C4  0EF7               	movlw	-9
 28755  01E0C6  36E3               	rlcf	plusw1,f,c
 28756  01E0C8  0EF8               	movlw	-8
 28757  01E0CA  36E3               	rlcf	plusw1,f,c
 28758  01E0CC  0EF9               	movlw	-7
 28759  01E0CE  36E3               	rlcf	plusw1,f,c
 28760  01E0D0  0EFA               	movlw	-6
 28761  01E0D2  36E3               	rlcf	plusw1,f,c
 28762  01E0D4  0EFB               	movlw	-5
 28763  01E0D6  36E3               	rlcf	plusw1,f,c
 28764  01E0D8  0EFC               	movlw	-4
 28765  01E0DA  36E3               	rlcf	plusw1,f,c
 28766  01E0DC  0EFD               	movlw	-3
 28767  01E0DE  36E3               	rlcf	plusw1,f,c
 28768  01E0E0  0EFE               	movlw	-2
 28769  01E0E2  36E3               	rlcf	plusw1,f,c
 28770                           
 28771                           ;stkvar	_divisor @ sp[(-9)+-16]
 28772                           ;stkvar	_dividend @ sp[(-9)+-8]
 28773  01E0E4  50E1               	movf	fsr1l,w,c
 28774  01E0E6  0FEF               	addlw	-17
 28775  01E0E8  6ED9               	movwf	fsr2l,c
 28776  01E0EA  50E2               	movf	fsr1h,w,c
 28777  01E0EC  6EDA               	movwf	fsr2h,c
 28778  01E0EE  0EFF               	movlw	255
 28779  01E0F0  22DA               	addwfc	fsr2h,f,c
 28780  01E0F2  0EE7               	movlw	-25
 28781  01E0F4  50E3               	movf	plusw1,w,c
 28782  01E0F6  5CDE               	subwf	postinc2,w,c
 28783  01E0F8  0EE8               	movlw	-24
 28784  01E0FA  50E3               	movf	plusw1,w,c
 28785  01E0FC  58DE               	subwfb	postinc2,w,c
 28786  01E0FE  0EE9               	movlw	-23
 28787  01E100  50E3               	movf	plusw1,w,c
 28788  01E102  58DE               	subwfb	postinc2,w,c
 28789  01E104  0EEA               	movlw	-22
 28790  01E106  50E3               	movf	plusw1,w,c
 28791  01E108  58DE               	subwfb	postinc2,w,c
 28792  01E10A  0EEB               	movlw	-21
 28793  01E10C  50E3               	movf	plusw1,w,c
 28794  01E10E  58DE               	subwfb	postinc2,w,c
 28795  01E110  0EEC               	movlw	-20
 28796  01E112  50E3               	movf	plusw1,w,c
 28797  01E114  58DE               	subwfb	postinc2,w,c
 28798  01E116  0EED               	movlw	-19
 28799  01E118  50E3               	movf	plusw1,w,c
 28800  01E11A  58DE               	subwfb	postinc2,w,c
 28801  01E11C  0EEE               	movlw	-18
 28802  01E11E  50E3               	movf	plusw1,w,c
 28803  01E120  58DE               	subwfb	postinc2,w,c
 28804  01E122  A0D8               	btfss	status,0,c
 28805  01E124  D021               	goto	l10766
 28806                           
 28807                           ;stkvar	_divisor @ sp[(-9)+-16]
 28808                           ;stkvar	_dividend @ sp[(-9)+-8]
 28809  01E126  50E1               	movf	fsr1l,w,c
 28810  01E128  0FEF               	addlw	-17
 28811  01E12A  6ED9               	movwf	fsr2l,c
 28812  01E12C  50E2               	movf	fsr1h,w,c
 28813  01E12E  6EDA               	movwf	fsr2h,c
 28814  01E130  0EFF               	movlw	255
 28815  01E132  22DA               	addwfc	fsr2h,f,c
 28816  01E134  0EE7               	movlw	-25
 28817  01E136  50E3               	movf	plusw1,w,c
 28818  01E138  5EDE               	subwf	postinc2,f,c
 28819  01E13A  0EE8               	movlw	-24
 28820  01E13C  50E3               	movf	plusw1,w,c
 28821  01E13E  5ADE               	subwfb	postinc2,f,c
 28822  01E140  0EE9               	movlw	-23
 28823  01E142  50E3               	movf	plusw1,w,c
 28824  01E144  5ADE               	subwfb	postinc2,f,c
 28825  01E146  0EEA               	movlw	-22
 28826  01E148  50E3               	movf	plusw1,w,c
 28827  01E14A  5ADE               	subwfb	postinc2,f,c
 28828  01E14C  0EEB               	movlw	-21
 28829  01E14E  50E3               	movf	plusw1,w,c
 28830  01E150  5ADE               	subwfb	postinc2,f,c
 28831  01E152  0EEC               	movlw	-20
 28832  01E154  50E3               	movf	plusw1,w,c
 28833  01E156  5ADE               	subwfb	postinc2,f,c
 28834  01E158  0EED               	movlw	-19
 28835  01E15A  50E3               	movf	plusw1,w,c
 28836  01E15C  5ADE               	subwfb	postinc2,f,c
 28837  01E15E  0EEE               	movlw	-18
 28838  01E160  50E3               	movf	plusw1,w,c
 28839  01E162  5ADE               	subwfb	postinc2,f,c
 28840                           
 28841                           ;stkvar	_quotient @ sp[(-9)+0]
 28842  01E164  0EF7               	movlw	-9
 28843  01E166  80E3               	bsf	plusw1,0,c
 28844  01E168                     l10766:
 28845                           
 28846                           ;stkvar	_divisor @ sp[(-9)+-16]
 28847  01E168  90D8               	bcf	status,0,c
 28848  01E16A  0EEE               	movlw	-18
 28849  01E16C  32E3               	rrcf	plusw1,f,c
 28850  01E16E  0EED               	movlw	-19
 28851  01E170  32E3               	rrcf	plusw1,f,c
 28852  01E172  0EEC               	movlw	-20
 28853  01E174  32E3               	rrcf	plusw1,f,c
 28854  01E176  0EEB               	movlw	-21
 28855  01E178  32E3               	rrcf	plusw1,f,c
 28856  01E17A  0EEA               	movlw	-22
 28857  01E17C  32E3               	rrcf	plusw1,f,c
 28858  01E17E  0EE9               	movlw	-23
 28859  01E180  32E3               	rrcf	plusw1,f,c
 28860  01E182  0EE8               	movlw	-24
 28861  01E184  32E3               	rrcf	plusw1,f,c
 28862  01E186  0EE7               	movlw	-25
 28863  01E188  32E3               	rrcf	plusw1,f,c
 28864                           
 28865                           ;stkvar	_counter @ sp[(-9)+8]
 28866  01E18A  0EFF               	movlw	-1
 28867  01E18C  50E3               	movf	plusw1,w,c
 28868  01E18E  6E2A               	movwf	btemp^0,c
 28869  01E190  0E01               	movlw	1
 28870  01E192  5E2A               	subwf	btemp^0,f,c
 28871  01E194  0EFF               	movlw	-1
 28872  01E196  0060  F0AB  FFE3   	movff	btemp,plusw1
 28873  01E19C  A4D8               	btfss	status,2,c
 28874  01E19E  D791               	goto	u9110
 28875  01E1A0                     u9130:
 28876                           
 28877                           ;stkvar	_quotient @ sp[(-9)+0]
 28878  01E1A0  0EF7               	movlw	247
 28879  01E1A2  24E1               	addwf	fsr1l,w,c
 28880  01E1A4  6ED9               	movwf	fsr2l,c
 28881  01E1A6  0EFF               	movlw	255
 28882  01E1A8  20E2               	addwfc	fsr1h,w,c
 28883  01E1AA  6EDA               	movwf	fsr2h,c
 28884                           
 28885                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 28886  01E1AC  0E08               	movlw	8
 28887  01E1AE  6E2A               	movwf	btemp^0,c
 28888  01E1B0  0EEF               	movlw	-17
 28889  01E1B2                     us914999:
 28890  01E1B2  006F FF7B FFE3     	movff	postinc2,plusw1
 28891  01E1B8  28E8               	incf	wreg,w,c
 28892  01E1BA  2E2A               	decfsz	btemp^0,f,c
 28893  01E1BC  D7FA               	bra	us914999
 28894                           
 28895                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28896  01E1BE  0EF7               	movlw	247
 28897  01E1C0  26E1               	addwf	fsr1l,f,c
 28898  01E1C2  0EFF               	movlw	255
 28899  01E1C4  22E2               	addwfc	fsr1h,f,c
 28900  01E1C6  0012               	return		;funcret
 28901  01E1C8                     __end_of___lodiv:
 28902                           	opt callstack 0
 28903                           
 28904 ;; *************** function _strncmp *****************
 28905 ;; Defined at:
 28906 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 28907 ;; Parameters:    Size  Location     Type
 28908 ;;  _l              2  [STACK] PTR const unsigned char 
 28909 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28910 ;;		 -> STR_86(21), STR_85(21), STR_84(21), STR_83(21), 
 28911 ;;		 -> STR_82(21), STR_81(21), STR_80(26), STR_79(15), 
 28912 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28913 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28914 ;;		 -> STR_68(14), STR_67(28), STR_66(28), STR_65(28), 
 28915 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 28916 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 28917 ;;		 -> STR_56(21), STR_55(20), STR_54(21), STR_53(21), 
 28918 ;;		 -> STR_52(21), STR_51(22), STR_50(22), STR_49(22), 
 28919 ;;		 -> STR_48(23), STR_47(23), STR_46(23), STR_45(29), 
 28920 ;;		 -> STR_44(23), STR_43(23), STR_42(22), STR_41(22), 
 28921 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 28922 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 28923 ;;		 -> STR_32(22), STR_31(22), STR_30(17), STR_29(16), 
 28924 ;;		 -> STR_28(16), STR_27(21), STR_26(21), STR_25(21), 
 28925 ;;		 -> STR_24(14), STR_23(26), STR_22(26), STR_21(22), 
 28926 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 28927 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 28928 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 28929 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 28930 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 28931 ;;  _r              2  [STACK] PTR const unsigned char 
 28932 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 28933 ;;		 -> STR_105(3), STR_101(3), 
 28934 ;;  n               2  [STACK] unsigned int 
 28935 ;; Auto vars:     Size  Location     Type
 28936 ;;  r               2  [STACK] PTR const unsigned char 
 28937 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 28938 ;;		 -> STR_105(3), STR_101(3), 
 28939 ;;  l               2  [STACK] PTR const unsigned char 
 28940 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28941 ;;		 -> STR_86(21), STR_85(21), STR_84(21), STR_83(21), 
 28942 ;;		 -> STR_82(21), STR_81(21), STR_80(26), STR_79(15), 
 28943 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28944 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28945 ;;		 -> STR_68(14), STR_67(28), STR_66(28), STR_65(28), 
 28946 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 28947 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 28948 ;;		 -> STR_56(21), STR_55(20), STR_54(21), STR_53(21), 
 28949 ;;		 -> STR_52(21), STR_51(22), STR_50(22), STR_49(22), 
 28950 ;;		 -> STR_48(23), STR_47(23), STR_46(23), STR_45(29), 
 28951 ;;		 -> STR_44(23), STR_43(23), STR_42(22), STR_41(22), 
 28952 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 28953 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 28954 ;;		 -> STR_32(22), STR_31(22), STR_30(17), STR_29(16), 
 28955 ;;		 -> STR_28(16), STR_27(21), STR_26(21), STR_25(21), 
 28956 ;;		 -> STR_24(14), STR_23(26), STR_22(26), STR_21(22), 
 28957 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 28958 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 28959 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 28960 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 28961 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 28962 ;; Return value:  Size  Location     Type
 28963 ;;                  2  [STACK] int 
 28964 ;; Registers used:
 28965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 28966 ;; Tracked objects:
 28967 ;;		On entry : 0/0
 28968 ;;		On exit  : 0/0
 28969 ;;		Unchanged: 0/0
 28970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28975 ;;Total ram usage:        0 bytes
 28976 ;; Hardware stack levels used:    1
 28977 ;; Hardware stack levels required when called:   15
 28978 ;; This function calls:
 28979 ;;		Nothing
 28980 ;; This function is called by:
 28981 ;;		_vfpfcnvrt
 28982 ;; This function uses a reentrant model
 28983 ;;
 28984                           
 28985                           	psect	text101
 28986  01CC90                     __ptext101:
 28987                           	opt callstack 0
 28988  01CC90                     _strncmp:
 28989                           	opt callstack 0
 28990                           
 28991                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28992  01CC90  52E6               	movf	postinc1,f,c
 28993  01CC92  52E6               	movf	postinc1,f,c
 28994  01CC94  52E6               	movf	postinc1,f,c
 28995  01CC96  52E6               	movf	postinc1,f,c
 28996                           
 28997                           ;stkvar	__l @ sp[(-4)+-2]
 28998                           
 28999                           ;incstack = 0
 29000 ;; hardware stack exceeded
 29001  01CC98  0EFA               	movlw	-6
 29002  01CC9A  006F FF8C  F034    	movff	plusw1,btemp+10
 29003  01CCA0  0EFB               	movlw	-5
 29004  01CCA2  006F FF8C  F035    	movff	plusw1,btemp+11
 29005                           
 29006                           ;stkvar	_l @ sp[(-4)+2]
 29007  01CCA8  0EFF               	movlw	-1
 29008  01CCAA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29009  01CCB0  0EFE               	movlw	-2
 29010  01CCB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29011                           
 29012                           ;stkvar	__r @ sp[(-4)+-4]
 29013  01CCB8  0EF8               	movlw	-8
 29014  01CCBA  006F FF8C  F034    	movff	plusw1,btemp+10
 29015  01CCC0  0EF9               	movlw	-7
 29016  01CCC2  006F FF8C  F035    	movff	plusw1,btemp+11
 29017                           
 29018                           ;stkvar	_r @ sp[(-4)+0]
 29019  01CCC8  0EFD               	movlw	-3
 29020  01CCCA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29021  01CCD0  0EFC               	movlw	-4
 29022  01CCD2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29023                           
 29024                           ;stkvar	_n @ sp[(-4)+-6]
 29025  01CCD8  0EF6               	movlw	-10
 29026  01CCDA  006F FF8C  F02A    	movff	plusw1,btemp
 29027  01CCE0  0E01               	movlw	1
 29028  01CCE2  5E2A               	subwf	btemp^0,f,c
 29029  01CCE4  0EF6               	movlw	-10
 29030  01CCE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 29031  01CCEC  0EF7               	movlw	-9
 29032  01CCEE  006F FF8C  F02A    	movff	plusw1,btemp
 29033  01CCF4  0E00               	movlw	0
 29034  01CCF6  5A2A               	subwfb	btemp^0,f,c
 29035  01CCF8  0EF7               	movlw	-9
 29036  01CCFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29037  01CD00  0EF6               	movlw	-10
 29038  01CD02  28E3               	incf	plusw1,w,c
 29039  01CD04  E13F               	bnz	l11464
 29040  01CD06  0EF7               	movlw	-9
 29041  01CD08  28E3               	incf	plusw1,w,c
 29042  01CD0A  A4D8               	btfss	status,2,c
 29043  01CD0C  D03B               	goto	l11464
 29044  01CD0E  0E00               	movlw	0
 29045  01CD10  6E2A               	movwf	btemp^0,c
 29046  01CD12  0E00               	movlw	0
 29047  01CD14  6E2B               	movwf	(btemp+1)^0,c
 29048  01CD16  D0C7               	goto	l3808
 29049  01CD18                     l11462:
 29050                           
 29051                           ;stkvar	_l @ sp[(-4)+2]
 29052  01CD18  0EFE               	movlw	-2
 29053  01CD1A  50E3               	movf	plusw1,w,c
 29054  01CD1C  0F01               	addlw	1
 29055  01CD1E  6E2A               	movwf	btemp^0,c
 29056  01CD20  0EFE               	movlw	-2
 29057  01CD22  0060  F0AB  FFE3   	movff	btemp,plusw1
 29058  01CD28  6A2A               	clrf	btemp^0,c
 29059  01CD2A  0EFF               	movlw	-1
 29060  01CD2C  50E3               	movf	plusw1,w,c
 29061  01CD2E  202A               	addwfc	btemp^0,w,c
 29062  01CD30  6E2A               	movwf	btemp^0,c
 29063  01CD32  0EFF               	movlw	-1
 29064  01CD34  0060  F0AB  FFE3   	movff	btemp,plusw1
 29065                           
 29066                           ;stkvar	_r @ sp[(-4)+0]
 29067  01CD3A  0EFC               	movlw	-4
 29068  01CD3C  50E3               	movf	plusw1,w,c
 29069  01CD3E  0F01               	addlw	1
 29070  01CD40  6E2A               	movwf	btemp^0,c
 29071  01CD42  0EFC               	movlw	-4
 29072  01CD44  0060  F0AB  FFE3   	movff	btemp,plusw1
 29073  01CD4A  6A2A               	clrf	btemp^0,c
 29074  01CD4C  0EFD               	movlw	-3
 29075  01CD4E  50E3               	movf	plusw1,w,c
 29076  01CD50  202A               	addwfc	btemp^0,w,c
 29077  01CD52  6E2A               	movwf	btemp^0,c
 29078  01CD54  0EFD               	movlw	-3
 29079  01CD56  0060  F0AB  FFE3   	movff	btemp,plusw1
 29080                           
 29081                           ;stkvar	_n @ sp[(-4)+-6]
 29082  01CD5C  0EF6               	movlw	-10
 29083  01CD5E  006F FF8C  F02A    	movff	plusw1,btemp
 29084  01CD64  0E01               	movlw	1
 29085  01CD66  5E2A               	subwf	btemp^0,f,c
 29086  01CD68  0EF6               	movlw	-10
 29087  01CD6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29088  01CD70  0EF7               	movlw	-9
 29089  01CD72  006F FF8C  F02A    	movff	plusw1,btemp
 29090  01CD78  0E00               	movlw	0
 29091  01CD7A  5A2A               	subwfb	btemp^0,f,c
 29092  01CD7C  0EF7               	movlw	-9
 29093  01CD7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29094  01CD84                     l11464:
 29095                           
 29096                           ;stkvar	_l @ sp[(-4)+2]
 29097  01CD84  0EFE               	movlw	-2
 29098  01CD86  006F FF8F FFF6     	movff	plusw1,tblptrl
 29099  01CD8C  0EFF               	movlw	-1
 29100  01CD8E  006F FF8F FFF7     	movff	plusw1,tblptrh
 29101  01CD94  0E00               	movlw	low (__mediumconst shr (0+16))
 29102  01CD96  6EF8               	movwf	tblptru,c
 29103  01CD98  0E1F               	movlw	(high __ramtop+-1)
 29104  01CD9A  64F7               	cpfsgt	tblptrh,c
 29105  01CD9C  D003               	bra	u10437
 29106  01CD9E  0008               	tblrd		*
 29107  01CDA0  50F5               	movf	tablat,w,c
 29108  01CDA2  D007               	bra	u10430
 29109  01CDA4                     u10437:
 29110  01CDA4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29111  01CDAA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29112  01CDB0  50EF               	movf	indf0,w,c
 29113  01CDB2                     u10430:
 29114  01CDB2  0900               	iorlw	0
 29115  01CDB4  B4D8               	btfsc	status,2,c
 29116  01CDB6  D04A               	goto	u10470
 29117                           
 29118                           ;stkvar	_r @ sp[(-4)+0]
 29119  01CDB8  50E1               	movf	fsr1l,w,c
 29120  01CDBA  0FFC               	addlw	-4
 29121  01CDBC  6ED9               	movwf	fsr2l,c
 29122  01CDBE  50E2               	movf	fsr1h,w,c
 29123  01CDC0  6EDA               	movwf	fsr2h,c
 29124  01CDC2  0EFF               	movlw	255
 29125  01CDC4  22DA               	addwfc	fsr2h,f,c
 29126  01CDC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 29127  01CDCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 29128  01CDD2                     	if	0	;tblptru may be non-zero
 29129  01CDD2                     	endif
 29130  01CDD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29131  01CDD2  0E00               	movlw	low (__mediumconst shr (0+16))
 29132  01CDD4  6EF8               	movwf	tblptru,c
 29133  01CDD6                     	endif
 29134  01CDD6  0008               	tblrd		*
 29135  01CDD8  50F5               	movf	tablat,w,c
 29136  01CDDA  0900               	iorlw	0
 29137  01CDDC  B4D8               	btfsc	status,2,c
 29138  01CDDE  D036               	goto	u10470
 29139                           
 29140                           ;stkvar	_n @ sp[(-4)+-6]
 29141  01CDE0  0EF6               	movlw	-10
 29142  01CDE2  006F FF8C  F02A    	movff	plusw1,btemp
 29143  01CDE8  0EF7               	movlw	-9
 29144  01CDEA  50E3               	movf	plusw1,w,c
 29145  01CDEC  102A               	iorwf	btemp^0,w,c
 29146  01CDEE  B4D8               	btfsc	status,2,c
 29147  01CDF0  D02D               	goto	u10470
 29148                           
 29149                           ;stkvar	_r @ sp[(-4)+0]
 29150  01CDF2  50E1               	movf	fsr1l,w,c
 29151  01CDF4  0FFC               	addlw	-4
 29152  01CDF6  6ED9               	movwf	fsr2l,c
 29153  01CDF8  50E2               	movf	fsr1h,w,c
 29154  01CDFA  6EDA               	movwf	fsr2h,c
 29155  01CDFC  0EFF               	movlw	255
 29156  01CDFE  22DA               	addwfc	fsr2h,f,c
 29157  01CE00  006F FF7B FFF6     	movff	postinc2,tblptrl
 29158  01CE06  006F FF77 FFF7     	movff	postdec2,tblptrh
 29159  01CE0C                     	if	0	;tblptru may be non-zero
 29160  01CE0C                     	endif
 29161  01CE0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29162  01CE0C  0E00               	movlw	low (__mediumconst shr (0+16))
 29163  01CE0E  6EF8               	movwf	tblptru,c
 29164  01CE10                     	endif
 29165  01CE10  0008               	tblrd		*
 29166  01CE12  006F FFD4  F035    	movff	tablat,btemp+11
 29167                           
 29168                           ;stkvar	_l @ sp[(-4)+2]
 29169  01CE18  0EFE               	movlw	-2
 29170  01CE1A  006F FF8F FFF6     	movff	plusw1,tblptrl
 29171  01CE20  0EFF               	movlw	-1
 29172  01CE22  006F FF8F FFF7     	movff	plusw1,tblptrh
 29173  01CE28  0E00               	movlw	low (__mediumconst shr (0+16))
 29174  01CE2A  6EF8               	movwf	tblptru,c
 29175  01CE2C  0E1F               	movlw	(high __ramtop+-1)
 29176  01CE2E  64F7               	cpfsgt	tblptrh,c
 29177  01CE30  D003               	bra	u10477
 29178  01CE32  0008               	tblrd		*
 29179  01CE34  50F5               	movf	tablat,w,c
 29180  01CE36  D007               	bra	u10475
 29181  01CE38                     u10477:
 29182  01CE38  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29183  01CE3E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29184  01CE44  50EF               	movf	indf0,w,c
 29185  01CE46                     u10475:
 29186  01CE46  1835               	xorwf	(btemp+11)^0,w,c
 29187  01CE48  B4D8               	btfsc	status,2,c
 29188  01CE4A  D766               	goto	l11462
 29189  01CE4C                     u10470:
 29190                           
 29191                           ;stkvar	_l @ sp[(-4)+2]
 29192  01CE4C  0EFE               	movlw	-2
 29193  01CE4E  006F FF8F FFF6     	movff	plusw1,tblptrl
 29194  01CE54  0EFF               	movlw	-1
 29195  01CE56  006F FF8F FFF7     	movff	plusw1,tblptrh
 29196  01CE5C  0E00               	movlw	low (__mediumconst shr (0+16))
 29197  01CE5E  6EF8               	movwf	tblptru,c
 29198  01CE60  0E1F               	movlw	(high __ramtop+-1)
 29199  01CE62  64F7               	cpfsgt	tblptrh,c
 29200  01CE64  D003               	bra	u10487
 29201  01CE66  0008               	tblrd		*
 29202  01CE68  50F5               	movf	tablat,w,c
 29203  01CE6A  D007               	bra	u10480
 29204  01CE6C                     u10487:
 29205  01CE6C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29206  01CE72  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29207  01CE78  50EF               	movf	indf0,w,c
 29208  01CE7A                     u10480:
 29209  01CE7A  6E2A               	movwf	btemp^0,c
 29210  01CE7C  6A2B               	clrf	(btemp+1)^0,c
 29211                           
 29212                           ;stkvar	_r @ sp[(-4)+0]
 29213  01CE7E  50E1               	movf	fsr1l,w,c
 29214  01CE80  0FFC               	addlw	-4
 29215  01CE82  6ED9               	movwf	fsr2l,c
 29216  01CE84  50E2               	movf	fsr1h,w,c
 29217  01CE86  6EDA               	movwf	fsr2h,c
 29218  01CE88  0EFF               	movlw	255
 29219  01CE8A  22DA               	addwfc	fsr2h,f,c
 29220  01CE8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 29221  01CE92  006F FF77 FFF7     	movff	postdec2,tblptrh
 29222  01CE98                     	if	0	;tblptru may be non-zero
 29223  01CE98                     	endif
 29224  01CE98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29225  01CE98  0E00               	movlw	low (__mediumconst shr (0+16))
 29226  01CE9A  6EF8               	movwf	tblptru,c
 29227  01CE9C                     	endif
 29228  01CE9C  0008               	tblrd		*
 29229  01CE9E  50F5               	movf	tablat,w,c
 29230  01CEA0  5E2A               	subwf	btemp^0,f,c
 29231  01CEA2  0E00               	movlw	0
 29232  01CEA4  5A2B               	subwfb	(btemp+1)^0,f,c
 29233  01CEA6                     l3808:
 29234                           
 29235                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 29236  01CEA6  0EF6               	movlw	246
 29237  01CEA8  26E1               	addwf	fsr1l,f,c
 29238  01CEAA  0EFF               	movlw	255
 29239  01CEAC  22E2               	addwfc	fsr1h,f,c
 29240  01CEAE  0012               	return		;funcret
 29241  01CEB0                     __end_of_strncmp:
 29242                           	opt callstack 0
 29243                           
 29244 ;; *************** function _stoa *****************
 29245 ;; Defined at:
 29246 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29247 ;; Parameters:    Size  Location     Type
 29248 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29249 ;;		 -> f(6), NULL(0), 
 29250 ;;  s               2  [STACK] PTR unsigned char 
 29251 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 29252 ;;		 -> STR_70(12), D.lcd(640), D(642), T(176), 
 29253 ;;		 -> STR_3(5), V(181), 
 29254 ;; Auto vars:     Size  Location     Type
 29255 ;;  nuls            7  [STACK] unsigned char [7]
 29256 ;;  l               2  [STACK] int 
 29257 ;;  p               2  [STACK] int 
 29258 ;;  cp              2  [STACK] PTR unsigned char 
 29259 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 29260 ;;		 -> STR_71(9), STR_70(12), D.lcd(640), D(642), 
 29261 ;;		 -> T(176), STR_3(5), V(181), 
 29262 ;;  w               2  [STACK] int 
 29263 ;;  i               2  [STACK] int 
 29264 ;; Return value:  Size  Location     Type
 29265 ;;                  2  [STACK] int 
 29266 ;; Registers used:
 29267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 29268 ;; Tracked objects:
 29269 ;;		On entry : 0/0
 29270 ;;		On exit  : 0/0
 29271 ;;		Unchanged: 0/0
 29272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29277 ;;Total ram usage:        0 bytes
 29278 ;; Hardware stack levels used:    1
 29279 ;; Hardware stack levels required when called:   18
 29280 ;; This function calls:
 29281 ;;		_fputc
 29282 ;;		_strlen
 29283 ;; This function is called by:
 29284 ;;		_vfpfcnvrt
 29285 ;; This function uses a reentrant model
 29286 ;;
 29287                           
 29288                           	psect	text102
 29289  01B48A                     __ptext102:
 29290                           	opt callstack 0
 29291  01B48A                     _stoa:
 29292                           	opt callstack 0
 29293                           
 29294                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29295  01B48A  0E11               	movlw	17
 29296  01B48C  26E1               	addwf	fsr1l,f,c
 29297  01B48E  0E00               	movlw	0
 29298  01B490  22E2               	addwfc	fsr1h,f,c
 29299                           
 29300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 29301                           
 29302                           ;incstack = 0
 29303 ;; hardware stack exceeded
 29304  01B492  EE20  F200         	lfsr	2,stoa@F1166
 29305                           
 29306                           ;stkvar	_nuls @ sp[(-17)+0]
 29307  01B496  0E07               	movlw	7
 29308  01B498  6E2A               	movwf	btemp^0,c
 29309  01B49A  0EEF               	movlw	-17
 29310  01B49C                     us1517999:
 29311  01B49C  006F FF7B FFE3     	movff	postinc2,plusw1
 29312  01B4A2  28E8               	incf	wreg,w,c
 29313  01B4A4  2E2A               	decfsz	btemp^0,f,c
 29314  01B4A6  D7FA               	bra	us1517999
 29315                           
 29316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 29317                           ;stkvar	_s @ sp[(-17)+-4]
 29318  01B4A8  0EEB               	movlw	-21
 29319  01B4AA  006F FF8C  F034    	movff	plusw1,btemp+10
 29320  01B4B0  0EEC               	movlw	-20
 29321  01B4B2  006F FF8C  F035    	movff	plusw1,btemp+11
 29322                           
 29323                           ;stkvar	_cp @ sp[(-17)+11]
 29324  01B4B8  0EFB               	movlw	-5
 29325  01B4BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29326  01B4C0  0EFA               	movlw	-6
 29327  01B4C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29328                           
 29329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 29330                           ;stkvar	_cp @ sp[(-17)+11]
 29331  01B4C8  0EFA               	movlw	-6
 29332  01B4CA  006F FF8C  F02A    	movff	plusw1,btemp
 29333  01B4D0  0EFB               	movlw	-5
 29334  01B4D2  50E3               	movf	plusw1,w,c
 29335  01B4D4  102A               	iorwf	btemp^0,w,c
 29336  01B4D6  A4D8               	btfss	status,2,c
 29337  01B4D8  D00E               	goto	l15870
 29338                           
 29339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 29340                           ;stkvar	_nuls @ sp[(-17)+0]
 29341  01B4DA  0EEF               	movlw	239
 29342  01B4DC  24E1               	addwf	fsr1l,w,c
 29343  01B4DE  6E34               	movwf	(btemp+10)^0,c
 29344  01B4E0  0EFF               	movlw	255
 29345  01B4E2  20E2               	addwfc	fsr1h,w,c
 29346  01B4E4  6E35               	movwf	(btemp+11)^0,c
 29347                           
 29348                           ;stkvar	_cp @ sp[(-17)+11]
 29349  01B4E6  0EFB               	movlw	-5
 29350  01B4E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29351  01B4EE  0EFA               	movlw	-6
 29352  01B4F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29353  01B4F6                     l15870:
 29354                           
 29355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 29356                           ;stkvar	_cp @ sp[(-17)+11]
 29357  01B4F6  0EFA               	movlw	-6
 29358  01B4F8  006F FF8F FFE6     	movff	plusw1,postinc1
 29359  01B4FE  006F FF8F FFE6     	movff	plusw1,postinc1
 29360  01B504  EC3D  F004         	call	_strlen	;wreg free
 29361                           
 29362                           ;stkvar	_l @ sp[(-17)+7]
 29363  01B508  0EF6               	movlw	-10
 29364  01B50A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29365  01B510  0EF7               	movlw	-9
 29366  01B512  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29367                           
 29368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 29369                           ;stkvar	_p @ sp[(-17)+9]
 29370  01B518  0EF8               	movlw	-8
 29371  01B51A  0060  F133  FFE3   	movff	_prec,plusw1
 29372  01B520  0EF9               	movlw	-7
 29373  01B522  0060  F137  FFE3   	movff	_prec+1,plusw1
 29374                           
 29375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 29376                           ;stkvar	_p @ sp[(-17)+9]
 29377  01B528  0EF9               	movlw	-7
 29378  01B52A  BEE3               	btfsc	plusw1,7,c
 29379  01B52C  D023               	goto	l2603
 29380                           
 29381                           ;stkvar	_l @ sp[(-17)+7]
 29382                           ;stkvar	_p @ sp[(-17)+9]
 29383  01B52E  50E1               	movf	fsr1l,w,c
 29384  01B530  0FF8               	addlw	-8
 29385  01B532  6ED9               	movwf	fsr2l,c
 29386  01B534  50E2               	movf	fsr1h,w,c
 29387  01B536  6EDA               	movwf	fsr2h,c
 29388  01B538  0EFF               	movlw	255
 29389  01B53A  22DA               	addwfc	fsr2h,f,c
 29390  01B53C  0EF6               	movlw	-10
 29391  01B53E  50E3               	movf	plusw1,w,c
 29392  01B540  5CDE               	subwf	postinc2,w,c
 29393  01B542  50DE               	movf	postinc2,w,c
 29394  01B544  0A80               	xorlw	128
 29395  01B546  6E2A               	movwf	btemp^0,c
 29396  01B548  0EF7               	movlw	-9
 29397  01B54A  50E3               	movf	plusw1,w,c
 29398  01B54C  0A80               	xorlw	128
 29399  01B54E  582A               	subwfb	btemp^0,w,c
 29400  01B550  B0D8               	btfsc	status,0,c
 29401  01B552  D010               	goto	l2603
 29402                           
 29403                           ;stkvar	_p @ sp[(-17)+9]
 29404                           ;stkvar	_l @ sp[(-17)+7]
 29405  01B554  0EF8               	movlw	-8
 29406  01B556  006F FF8C  F02A    	movff	plusw1,btemp
 29407  01B55C  0EF6               	movlw	-10
 29408  01B55E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29409  01B564  0EF9               	movlw	-7
 29410  01B566  006F FF8C  F02A    	movff	plusw1,btemp
 29411  01B56C  0EF7               	movlw	-9
 29412  01B56E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29413  01B574                     l2603:
 29414                           
 29415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 29416                           ;stkvar	_l @ sp[(-17)+7]
 29417                           ;stkvar	_p @ sp[(-17)+9]
 29418  01B574  0EF6               	movlw	-10
 29419  01B576  006F FF8C  F02A    	movff	plusw1,btemp
 29420  01B57C  0EF8               	movlw	-8
 29421  01B57E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29422  01B584  0EF7               	movlw	-9
 29423  01B586  006F FF8C  F02A    	movff	plusw1,btemp
 29424  01B58C  0EF9               	movlw	-7
 29425  01B58E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29426                           
 29427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 29428                           ;stkvar	_w @ sp[(-17)+13]
 29429  01B594  0EFC               	movlw	-4
 29430  01B596  0060  F12B  FFE3   	movff	_width,plusw1
 29431  01B59C  0EFD               	movlw	-3
 29432  01B59E  0060  F12F  FFE3   	movff	_width+1,plusw1
 29433                           
 29434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 29435  01B5A4  A04E               	btfss	_flags^0,0,c
 29436  01B5A6  D01F               	goto	l15890
 29437  01B5A8  D031               	goto	u15220
 29438  01B5AA                     l15886:
 29439                           
 29440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 29441                           ;stkvar	_fp @ sp[(-17)+-2]
 29442  01B5AA  0EED               	movlw	-19
 29443  01B5AC  006F FF8F FFE6     	movff	plusw1,postinc1
 29444  01B5B2  006F FF8F FFE6     	movff	plusw1,postinc1
 29445  01B5B8  0E20               	movlw	32
 29446  01B5BA  6EE6               	movwf	postinc1,c
 29447  01B5BC  0E00               	movlw	0
 29448  01B5BE  6EE6               	movwf	postinc1,c
 29449  01B5C0  ECF8  F0F8         	call	_fputc	;wreg free
 29450                           
 29451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 29452                           ;stkvar	_l @ sp[(-17)+7]
 29453  01B5C4  0EF6               	movlw	-10
 29454  01B5C6  50E3               	movf	plusw1,w,c
 29455  01B5C8  0F01               	addlw	1
 29456  01B5CA  6E2A               	movwf	btemp^0,c
 29457  01B5CC  0EF6               	movlw	-10
 29458  01B5CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29459  01B5D4  6A2A               	clrf	btemp^0,c
 29460  01B5D6  0EF7               	movlw	-9
 29461  01B5D8  50E3               	movf	plusw1,w,c
 29462  01B5DA  202A               	addwfc	btemp^0,w,c
 29463  01B5DC  6E2A               	movwf	btemp^0,c
 29464  01B5DE  0EF7               	movlw	-9
 29465  01B5E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 29466  01B5E6                     l15890:
 29467                           
 29468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 29469                           ;stkvar	_w @ sp[(-17)+13]
 29470                           ;stkvar	_l @ sp[(-17)+7]
 29471  01B5E6  50E1               	movf	fsr1l,w,c
 29472  01B5E8  0FF6               	addlw	-10
 29473  01B5EA  6ED9               	movwf	fsr2l,c
 29474  01B5EC  50E2               	movf	fsr1h,w,c
 29475  01B5EE  6EDA               	movwf	fsr2h,c
 29476  01B5F0  0EFF               	movlw	255
 29477  01B5F2  22DA               	addwfc	fsr2h,f,c
 29478  01B5F4  0EFC               	movlw	-4
 29479  01B5F6  50E3               	movf	plusw1,w,c
 29480  01B5F8  5CDE               	subwf	postinc2,w,c
 29481  01B5FA  50DE               	movf	postinc2,w,c
 29482  01B5FC  0A80               	xorlw	128
 29483  01B5FE  6E2A               	movwf	btemp^0,c
 29484  01B600  0EFD               	movlw	-3
 29485  01B602  50E3               	movf	plusw1,w,c
 29486  01B604  0A80               	xorlw	128
 29487  01B606  582A               	subwfb	btemp^0,w,c
 29488  01B608  A0D8               	btfss	status,0,c
 29489  01B60A  D7CF               	goto	l15886
 29490  01B60C                     u15220:
 29491                           
 29492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 29493                           ;stkvar	_i @ sp[(-17)+15]
 29494  01B60C  0EFE               	movlw	-2
 29495  01B60E  6AE3               	clrf	plusw1,c
 29496  01B610  0EFF               	movlw	-1
 29497  01B612  6AE3               	clrf	plusw1,c
 29498                           
 29499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29500  01B614  D045               	goto	l15900
 29501  01B616                     l15894:
 29502                           
 29503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 29504                           ;stkvar	_fp @ sp[(-17)+-2]
 29505  01B616  0EED               	movlw	-19
 29506  01B618  006F FF8F FFE6     	movff	plusw1,postinc1
 29507  01B61E  006F FF8F FFE6     	movff	plusw1,postinc1
 29508                           
 29509                           ;stkvar	_cp @ sp[(-19)+11]
 29510  01B624  0EF8               	movlw	-8
 29511  01B626  006F FF8F FFF6     	movff	plusw1,tblptrl
 29512  01B62C  0EF9               	movlw	-7
 29513  01B62E  006F FF8F FFF7     	movff	plusw1,tblptrh
 29514  01B634  0E00               	movlw	low (__mediumconst shr (0+16))
 29515  01B636  6EF8               	movwf	tblptru,c
 29516  01B638  0E1F               	movlw	(high __ramtop+-1)
 29517  01B63A  64F7               	cpfsgt	tblptrh,c
 29518  01B63C  D003               	bra	u15237
 29519  01B63E  0008               	tblrd		*
 29520  01B640  50F5               	movf	tablat,w,c
 29521  01B642  D007               	bra	u15230
 29522  01B644                     u15237:
 29523  01B644  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29524  01B64A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29525  01B650  50EF               	movf	indf0,w,c
 29526  01B652                     u15230:
 29527  01B652  6EE6               	movwf	postinc1,c
 29528  01B654  0E00               	movlw	0
 29529  01B656  6EE6               	movwf	postinc1,c
 29530  01B658  ECF8  F0F8         	call	_fputc	;wreg free
 29531                           
 29532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 29533                           ;stkvar	_cp @ sp[(-17)+11]
 29534  01B65C  0EFA               	movlw	-6
 29535  01B65E  50E3               	movf	plusw1,w,c
 29536  01B660  0F01               	addlw	1
 29537  01B662  6E2A               	movwf	btemp^0,c
 29538  01B664  0EFA               	movlw	-6
 29539  01B666  0060  F0AB  FFE3   	movff	btemp,plusw1
 29540  01B66C  6A2A               	clrf	btemp^0,c
 29541  01B66E  0EFB               	movlw	-5
 29542  01B670  50E3               	movf	plusw1,w,c
 29543  01B672  202A               	addwfc	btemp^0,w,c
 29544  01B674  6E2A               	movwf	btemp^0,c
 29545  01B676  0EFB               	movlw	-5
 29546  01B678  0060  F0AB  FFE3   	movff	btemp,plusw1
 29547                           
 29548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 29549                           ;stkvar	_i @ sp[(-17)+15]
 29550  01B67E  0EFE               	movlw	-2
 29551  01B680  50E3               	movf	plusw1,w,c
 29552  01B682  0F01               	addlw	1
 29553  01B684  6E2A               	movwf	btemp^0,c
 29554  01B686  0EFE               	movlw	-2
 29555  01B688  0060  F0AB  FFE3   	movff	btemp,plusw1
 29556  01B68E  6A2A               	clrf	btemp^0,c
 29557  01B690  0EFF               	movlw	-1
 29558  01B692  50E3               	movf	plusw1,w,c
 29559  01B694  202A               	addwfc	btemp^0,w,c
 29560  01B696  6E2A               	movwf	btemp^0,c
 29561  01B698  0EFF               	movlw	-1
 29562  01B69A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29563  01B6A0                     l15900:
 29564                           
 29565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29566                           ;stkvar	_p @ sp[(-17)+9]
 29567                           ;stkvar	_i @ sp[(-17)+15]
 29568  01B6A0  50E1               	movf	fsr1l,w,c
 29569  01B6A2  0FFE               	addlw	-2
 29570  01B6A4  6ED9               	movwf	fsr2l,c
 29571  01B6A6  50E2               	movf	fsr1h,w,c
 29572  01B6A8  6EDA               	movwf	fsr2h,c
 29573  01B6AA  0EFF               	movlw	255
 29574  01B6AC  22DA               	addwfc	fsr2h,f,c
 29575  01B6AE  0EF8               	movlw	-8
 29576  01B6B0  50E3               	movf	plusw1,w,c
 29577  01B6B2  5CDE               	subwf	postinc2,w,c
 29578  01B6B4  50DE               	movf	postinc2,w,c
 29579  01B6B6  0A80               	xorlw	128
 29580  01B6B8  6E2A               	movwf	btemp^0,c
 29581  01B6BA  0EF9               	movlw	-7
 29582  01B6BC  50E3               	movf	plusw1,w,c
 29583  01B6BE  0A80               	xorlw	128
 29584  01B6C0  582A               	subwfb	btemp^0,w,c
 29585  01B6C2  A0D8               	btfss	status,0,c
 29586  01B6C4  D7A8               	goto	l15894
 29587                           
 29588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 29589  01B6C6  B04E               	btfsc	_flags^0,0,c
 29590  01B6C8  D01F               	goto	l15908
 29591  01B6CA  D031               	goto	u15260
 29592  01B6CC                     l15904:
 29593                           
 29594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 29595                           ;stkvar	_fp @ sp[(-17)+-2]
 29596  01B6CC  0EED               	movlw	-19
 29597  01B6CE  006F FF8F FFE6     	movff	plusw1,postinc1
 29598  01B6D4  006F FF8F FFE6     	movff	plusw1,postinc1
 29599  01B6DA  0E20               	movlw	32
 29600  01B6DC  6EE6               	movwf	postinc1,c
 29601  01B6DE  0E00               	movlw	0
 29602  01B6E0  6EE6               	movwf	postinc1,c
 29603  01B6E2  ECF8  F0F8         	call	_fputc	;wreg free
 29604                           
 29605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 29606                           ;stkvar	_l @ sp[(-17)+7]
 29607  01B6E6  0EF6               	movlw	-10
 29608  01B6E8  50E3               	movf	plusw1,w,c
 29609  01B6EA  0F01               	addlw	1
 29610  01B6EC  6E2A               	movwf	btemp^0,c
 29611  01B6EE  0EF6               	movlw	-10
 29612  01B6F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 29613  01B6F6  6A2A               	clrf	btemp^0,c
 29614  01B6F8  0EF7               	movlw	-9
 29615  01B6FA  50E3               	movf	plusw1,w,c
 29616  01B6FC  202A               	addwfc	btemp^0,w,c
 29617  01B6FE  6E2A               	movwf	btemp^0,c
 29618  01B700  0EF7               	movlw	-9
 29619  01B702  0060  F0AB  FFE3   	movff	btemp,plusw1
 29620  01B708                     l15908:
 29621                           
 29622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 29623                           ;stkvar	_w @ sp[(-17)+13]
 29624                           ;stkvar	_l @ sp[(-17)+7]
 29625  01B708  50E1               	movf	fsr1l,w,c
 29626  01B70A  0FF6               	addlw	-10
 29627  01B70C  6ED9               	movwf	fsr2l,c
 29628  01B70E  50E2               	movf	fsr1h,w,c
 29629  01B710  6EDA               	movwf	fsr2h,c
 29630  01B712  0EFF               	movlw	255
 29631  01B714  22DA               	addwfc	fsr2h,f,c
 29632  01B716  0EFC               	movlw	-4
 29633  01B718  50E3               	movf	plusw1,w,c
 29634  01B71A  5CDE               	subwf	postinc2,w,c
 29635  01B71C  50DE               	movf	postinc2,w,c
 29636  01B71E  0A80               	xorlw	128
 29637  01B720  6E2A               	movwf	btemp^0,c
 29638  01B722  0EFD               	movlw	-3
 29639  01B724  50E3               	movf	plusw1,w,c
 29640  01B726  0A80               	xorlw	128
 29641  01B728  582A               	subwfb	btemp^0,w,c
 29642  01B72A  A0D8               	btfss	status,0,c
 29643  01B72C  D7CF               	goto	l15904
 29644  01B72E                     u15260:
 29645                           
 29646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 29647                           ;stkvar	_l @ sp[(-17)+7]
 29648  01B72E  0EF6               	movlw	-10
 29649  01B730  006F FF8C  F02A    	movff	plusw1,btemp
 29650  01B736  0EF7               	movlw	-9
 29651  01B738  006F FF8C  F02B    	movff	plusw1,btemp+1
 29652                           
 29653                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 29654  01B73E  0EEB               	movlw	235
 29655  01B740  26E1               	addwf	fsr1l,f,c
 29656  01B742  0EFF               	movlw	255
 29657  01B744  22E2               	addwfc	fsr1h,f,c
 29658  01B746  0012               	return		;funcret
 29659  01B748                     __end_of_stoa:
 29660                           	opt callstack 0
 29661                           
 29662 ;; *************** function _efgtoa *****************
 29663 ;; Defined at:
 29664 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29665 ;; Parameters:    Size  Location     Type
 29666 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29667 ;;		 -> f(6), NULL(0), 
 29668 ;;  f               4  [STACK] PTR struct _IO_FILE
 29669 ;;  c               1  [STACK] unsigned char 
 29670 ;; Auto vars:     Size  Location     Type
 29671 ;;  u               4  [STACK] unsigned char 
 29672 ;;  g               4  [STACK] unsigned char 
 29673 ;;  l               4  [STACK] unsigned char 
 29674 ;;  h               4  [STACK] unsigned char 
 29675 ;;  ou              4  [STACK] unsigned char 
 29676 ;;  n               2  [STACK] int 
 29677 ;;  e               2  [STACK] int 
 29678 ;;  i               2  [STACK] int 
 29679 ;;  w               2  [STACK] int 
 29680 ;;  p               2  [STACK] int 
 29681 ;;  sign            2  [STACK] int 
 29682 ;;  d               2  [STACK] int 
 29683 ;;  ne              2  [STACK] int 
 29684 ;;  m               2  [STACK] int 
 29685 ;;  pp              2  [STACK] int 
 29686 ;;  t               2  [STACK] int 
 29687 ;;  mode            1  [STACK] unsigned char 
 29688 ;;  nmode           1  [STACK] unsigned char 
 29689 ;; Return value:  Size  Location     Type
 29690 ;;                  2  [STACK] int 
 29691 ;; Registers used:
 29692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29693 ;; Tracked objects:
 29694 ;;		On entry : 0/0
 29695 ;;		On exit  : 0/0
 29696 ;;		Unchanged: 0/0
 29697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29702 ;;Total ram usage:        0 bytes
 29703 ;; Hardware stack levels used:    1
 29704 ;; Hardware stack levels required when called:   20
 29705 ;; This function calls:
 29706 ;;		___awdiv
 29707 ;;		___awmod
 29708 ;;		___fladd
 29709 ;;		___fldiv
 29710 ;;		___fleq
 29711 ;;		___flge
 29712 ;;		___flmul
 29713 ;;		___flneg
 29714 ;;		___flsub
 29715 ;;		___fltol
 29716 ;;		___fpclassifyf
 29717 ;;		_floorf
 29718 ;;		_isupper
 29719 ;;		_pad
 29720 ;;		_strcpy
 29721 ;;		_tolower
 29722 ;; This function is called by:
 29723 ;;		_vfpfcnvrt
 29724 ;; This function uses a reentrant model
 29725 ;;
 29726                           
 29727                           	psect	text103
 29728  011556                     __ptext103:
 29729                           	opt callstack 0
 29730  011556                     _efgtoa:
 29731                           	opt callstack 0
 29732                           
 29733                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29734  011556  0E38               	movlw	56
 29735  011558  26E1               	addwf	fsr1l,f,c
 29736  01155A  0E00               	movlw	0
 29737  01155C  22E2               	addwfc	fsr1h,f,c
 29738                           
 29739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 29740                           ;stkvar	_sign @ sp[(-56)+42]
 29741                           
 29742                           ;incstack = 0
 29743 ;; hardware stack exceeded
 29744  01155E  0EF2               	movlw	-14
 29745  011560  6AE3               	clrf	plusw1,c
 29746  011562  0EF3               	movlw	-13
 29747  011564  6AE3               	clrf	plusw1,c
 29748                           
 29749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 29750                           ;stkvar	_f @ sp[(-56)+-6]
 29751  011566  0EC2               	movlw	-62
 29752  011568  006F FF8C  F032    	movff	plusw1,btemp+8
 29753  01156E  0EC3               	movlw	-61
 29754  011570  006F FF8C  F033    	movff	plusw1,btemp+9
 29755  011576  0EC4               	movlw	-60
 29756  011578  006F FF8C  F034    	movff	plusw1,btemp+10
 29757  01157E  0EC5               	movlw	-59
 29758  011580  006F FF8C  F035    	movff	plusw1,btemp+11
 29759                           
 29760                           ;stkvar	_g @ sp[(-56)+16]
 29761  011586  0ED8               	movlw	-40
 29762  011588  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 29763  01158E  0ED9               	movlw	-39
 29764  011590  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 29765  011596  0EDA               	movlw	-38
 29766  011598  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29767  01159E  0EDB               	movlw	-37
 29768  0115A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29769                           
 29770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 29771                           ;stkvar	_g @ sp[(-56)+16]
 29772  0115A6  0EDB               	movlw	-37
 29773  0115A8  AEE3               	btfss	plusw1,7,c
 29774  0115AA  D02B               	goto	l15568
 29775                           
 29776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 29777  0115AC  0E01               	movlw	1
 29778  0115AE  6E34               	movwf	(btemp+10)^0,c
 29779  0115B0  0E00               	movlw	0
 29780  0115B2  6E35               	movwf	(btemp+11)^0,c
 29781                           
 29782                           ;stkvar	_sign @ sp[(-56)+42]
 29783  0115B4  0EF2               	movlw	-14
 29784  0115B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29785  0115BC  0EF3               	movlw	-13
 29786  0115BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29787                           
 29788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 29789                           ;stkvar	_g @ sp[(-56)+16]
 29790  0115C4  0ED8               	movlw	-40
 29791  0115C6  006F FF8F FFE6     	movff	plusw1,postinc1
 29792  0115CC  006F FF8F FFE6     	movff	plusw1,postinc1
 29793  0115D2  006F FF8F FFE6     	movff	plusw1,postinc1
 29794  0115D8  006F FF8F FFE6     	movff	plusw1,postinc1
 29795  0115DE  EC7E  F00C         	call	___flneg	;wreg free
 29796                           
 29797                           ;stkvar	_g @ sp[(-56)+16]
 29798  0115E2  0ED8               	movlw	-40
 29799  0115E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29800  0115EA  0ED9               	movlw	-39
 29801  0115EC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29802  0115F2  0EDA               	movlw	-38
 29803  0115F4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 29804  0115FA  0EDB               	movlw	-37
 29805  0115FC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 29806  011602                     l15568:
 29807                           
 29808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 29809                           ;stkvar	_n @ sp[(-56)+32]
 29810  011602  0EE8               	movlw	-24
 29811  011604  6AE3               	clrf	plusw1,c
 29812  011606  0EE9               	movlw	-23
 29813  011608  6AE3               	clrf	plusw1,c
 29814                           
 29815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 29816                           ;stkvar	_w @ sp[(-56)+38]
 29817  01160A  0EEE               	movlw	-18
 29818  01160C  0060  F12B  FFE3   	movff	_width,plusw1
 29819  011612  0EEF               	movlw	-17
 29820  011614  0060  F12F  FFE3   	movff	_width+1,plusw1
 29821                           
 29822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 29823                           ;stkvar	_sign @ sp[(-56)+42]
 29824  01161A  0EF2               	movlw	-14
 29825  01161C  006F FF8C  F02A    	movff	plusw1,btemp
 29826  011622  0EF3               	movlw	-13
 29827  011624  50E3               	movf	plusw1,w,c
 29828  011626  102A               	iorwf	btemp^0,w,c
 29829  011628  A4D8               	btfss	status,2,c
 29830  01162A  D002               	goto	u14670
 29831  01162C  A44E               	btfss	_flags^0,2,c
 29832  01162E  D036               	goto	l15588
 29833  011630                     u14670:
 29834                           
 29835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 29836                           ;stkvar	_sign @ sp[(-56)+42]
 29837  011630  0EF2               	movlw	-14
 29838  011632  006F FF8C  F02A    	movff	plusw1,btemp
 29839  011638  0EF3               	movlw	-13
 29840  01163A  50E3               	movf	plusw1,w,c
 29841  01163C  102A               	iorwf	btemp^0,w,c
 29842  01163E  A4D8               	btfss	status,2,c
 29843  011640  D002               	goto	l15580
 29844  011642  0E2B               	movlw	43
 29845  011644  D001               	goto	L31
 29846  011646                     l15580:
 29847  011646  0E2D               	movlw	45
 29848  011648                     L31:
 29849  011648  6E34               	movwf	(btemp+10)^0,c
 29850  01164A  0E00               	movlw	0
 29851  01164C  6E35               	movwf	(btemp+11)^0,c
 29852                           
 29853                           ;stkvar	_efgtoa$6608 @ sp[(-56)+10]
 29854  01164E  0ED2               	movlw	-46
 29855  011650  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29856  011656  0ED3               	movlw	-45
 29857  011658  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29858                           
 29859                           ;stkvar	_efgtoa$6608 @ sp[(-56)+10]
 29860  01165E  0ED2               	movlw	-46
 29861  011660  006F FF8C  F354    	movff	plusw1,_dbuf
 29862                           
 29863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 29864                           ;stkvar	_n @ sp[(-56)+32]
 29865  011666  0EE8               	movlw	-24
 29866  011668  50E3               	movf	plusw1,w,c
 29867  01166A  0F01               	addlw	1
 29868  01166C  6E2A               	movwf	btemp^0,c
 29869  01166E  0EE8               	movlw	-24
 29870  011670  0060  F0AB  FFE3   	movff	btemp,plusw1
 29871  011676  6A2A               	clrf	btemp^0,c
 29872  011678  0EE9               	movlw	-23
 29873  01167A  50E3               	movf	plusw1,w,c
 29874  01167C  202A               	addwfc	btemp^0,w,c
 29875  01167E  6E2A               	movwf	btemp^0,c
 29876  011680  0EE9               	movlw	-23
 29877  011682  0060  F0AB  FFE3   	movff	btemp,plusw1
 29878                           
 29879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 29880                           ;stkvar	_w @ sp[(-56)+38]
 29881  011688  50E1               	movf	fsr1l,w,c
 29882  01168A  0FEE               	addlw	-18
 29883  01168C  6ED9               	movwf	fsr2l,c
 29884  01168E  50E2               	movf	fsr1h,w,c
 29885  011690  6EDA               	movwf	fsr2h,c
 29886  011692  0EFF               	movlw	255
 29887  011694  22DA               	addwfc	fsr2h,f,c
 29888  011696  06DE               	decf	postinc2,f,c
 29889  011698  0E00               	movlw	0
 29890  01169A  5ADD               	subwfb	postdec2,f,c
 29891  01169C                     l15588:
 29892                           
 29893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29894                           ;stkvar	_g @ sp[(-56)+16]
 29895  01169C  0ED8               	movlw	-40
 29896  01169E  006F FF8F FFE6     	movff	plusw1,postinc1
 29897  0116A4  006F FF8F FFE6     	movff	plusw1,postinc1
 29898  0116AA  006F FF8F FFE6     	movff	plusw1,postinc1
 29899  0116B0  006F FF8F FFE6     	movff	plusw1,postinc1
 29900  0116B6  EC05  F0ED         	call	___fpclassifyf	;wreg free
 29901  0116BA  042A               	decf	btemp^0,w,c
 29902  0116BC  102B               	iorwf	(btemp+1)^0,w,c
 29903  0116BE  A4D8               	btfss	status,2,c
 29904  0116C0  D076               	goto	l15606
 29905  0116C2  0EBF               	movlw	191
 29906  0116C4  6E34               	movwf	(btemp+10)^0,c
 29907  0116C6  0EFF               	movlw	255
 29908  0116C8  6E35               	movwf	(btemp+11)^0,c
 29909                           
 29910                           ;stkvar	_c @ sp[(-56)+-7]
 29911  0116CA  0EC1               	movlw	-63
 29912  0116CC  50E3               	movf	plusw1,w,c
 29913  0116CE  6E32               	movwf	(btemp+8)^0,c
 29914  0116D0  6A33               	clrf	(btemp+9)^0,c
 29915  0116D2  5034               	movf	(btemp+10)^0,w,c
 29916  0116D4  2632               	addwf	(btemp+8)^0,f,c
 29917  0116D6  5035               	movf	(btemp+11)^0,w,c
 29918  0116D8  2233               	addwfc	(btemp+9)^0,f,c
 29919  0116DA  5033               	movf	(btemp+9)^0,w,c
 29920  0116DC  E106               	bnz	u14700
 29921  0116DE  0E1A               	movlw	26
 29922  0116E0  5C32               	subwf	(btemp+8)^0,w,c
 29923  0116E2  B0D8               	btfsc	status,0,c
 29924  0116E4  D002               	goto	u14700
 29925  0116E6  0E01               	movlw	1
 29926  0116E8  D001               	goto	u14710
 29927  0116EA                     u14700:
 29928  0116EA  0E00               	movlw	0
 29929  0116EC                     u14710:
 29930  0116EC  6E34               	movwf	(btemp+10)^0,c
 29931  0116EE  6A35               	clrf	(btemp+11)^0,c
 29932                           
 29933                           ;stkvar	_efgtoa$6609 @ sp[(-56)+8]
 29934  0116F0  0ED0               	movlw	-48
 29935  0116F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29936  0116F8  0ED1               	movlw	-47
 29937  0116FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29938                           
 29939                           ;stkvar	_efgtoa$6609 @ sp[(-56)+8]
 29940  011700  0ED0               	movlw	-48
 29941  011702  006F FF8C  F02A    	movff	plusw1,btemp
 29942  011708  0ED1               	movlw	-47
 29943  01170A  50E3               	movf	plusw1,w,c
 29944  01170C  102A               	iorwf	btemp^0,w,c
 29945  01170E  B4D8               	btfsc	status,2,c
 29946  011710  D017               	goto	l15598
 29947                           
 29948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 29949  011712  0EDA               	movlw	low STR_91
 29950  011714  6EE6               	movwf	postinc1,c
 29951  011716  0EFF               	movlw	high STR_91
 29952  011718  6EE6               	movwf	postinc1,c
 29953                           
 29954                           ;stkvar	_n @ sp[(-58)+32]
 29955  01171A  0E54               	movlw	low _dbuf
 29956  01171C  6E34               	movwf	(btemp+10)^0,c
 29957  01171E  0E03               	movlw	high _dbuf
 29958  011720  6E35               	movwf	(btemp+11)^0,c
 29959  011722  0EE6               	movlw	-26
 29960  011724  50E3               	movf	plusw1,w,c
 29961  011726  2634               	addwf	(btemp+10)^0,f,c
 29962  011728  0EE7               	movlw	-25
 29963  01172A  50E3               	movf	plusw1,w,c
 29964  01172C  2235               	addwfc	(btemp+11)^0,f,c
 29965  01172E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29966  011734  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29967  01173A  EC7F  F0FF         	call	_strcpy	;wreg free
 29968                           
 29969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 29970  01173E  D016               	goto	l15600
 29971  011740                     l15598:
 29972                           
 29973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 29974  011740  0EE2               	movlw	low STR_92
 29975  011742  6EE6               	movwf	postinc1,c
 29976  011744  0EFF               	movlw	high STR_92
 29977  011746  6EE6               	movwf	postinc1,c
 29978                           
 29979                           ;stkvar	_n @ sp[(-58)+32]
 29980  011748  0E54               	movlw	low _dbuf
 29981  01174A  6E34               	movwf	(btemp+10)^0,c
 29982  01174C  0E03               	movlw	high _dbuf
 29983  01174E  6E35               	movwf	(btemp+11)^0,c
 29984  011750  0EE6               	movlw	-26
 29985  011752  50E3               	movf	plusw1,w,c
 29986  011754  2634               	addwf	(btemp+10)^0,f,c
 29987  011756  0EE7               	movlw	-25
 29988  011758  50E3               	movf	plusw1,w,c
 29989  01175A  2235               	addwfc	(btemp+11)^0,f,c
 29990  01175C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29991  011762  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29992  011768  EC7F  F0FF         	call	_strcpy	;wreg free
 29993  01176C                     l15600:
 29994                           
 29995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 29996                           ;stkvar	_w @ sp[(-56)+38]
 29997  01176C  50E1               	movf	fsr1l,w,c
 29998  01176E  0FEE               	addlw	-18
 29999  011770  6ED9               	movwf	fsr2l,c
 30000  011772  50E2               	movf	fsr1h,w,c
 30001  011774  6EDA               	movwf	fsr2h,c
 30002  011776  0EFF               	movlw	255
 30003  011778  22DA               	addwfc	fsr2h,f,c
 30004  01177A  0EFD               	movlw	253
 30005  01177C  26DE               	addwf	postinc2,f,c
 30006  01177E  0EFF               	movlw	255
 30007  011780  22DD               	addwfc	postdec2,f,c
 30008  011782                     l15602:
 30009                           
 30010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30011                           ;stkvar	_w @ sp[(-56)+38]
 30012  011782  0EEE               	movlw	-18
 30013  011784  006F FF8F FFE6     	movff	plusw1,postinc1
 30014  01178A  006F FF8F FFE6     	movff	plusw1,postinc1
 30015  011790  0E54               	movlw	low _dbuf
 30016  011792  6EE6               	movwf	postinc1,c
 30017  011794  0E03               	movlw	high _dbuf
 30018  011796  6EE6               	movwf	postinc1,c
 30019                           
 30020                           ;stkvar	_fp @ sp[(-60)+-2]
 30021  011798  0EC2               	movlw	-62
 30022  01179A  006F FF8F FFE6     	movff	plusw1,postinc1
 30023  0117A0  006F FF8F FFE6     	movff	plusw1,postinc1
 30024  0117A6  EC2F  F0FB         	call	_pad	;wreg free
 30025  0117AA  EFC8  F093         	goto	l2521
 30026  0117AE                     l15606:
 30027                           
 30028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30029                           ;stkvar	_g @ sp[(-56)+16]
 30030  0117AE  0ED8               	movlw	-40
 30031  0117B0  006F FF8F FFE6     	movff	plusw1,postinc1
 30032  0117B6  006F FF8F FFE6     	movff	plusw1,postinc1
 30033  0117BC  006F FF8F FFE6     	movff	plusw1,postinc1
 30034  0117C2  006F FF8F FFE6     	movff	plusw1,postinc1
 30035  0117C8  EC05  F0ED         	call	___fpclassifyf	;wreg free
 30036  0117CC  502A               	movf	btemp^0,w,c
 30037  0117CE  102B               	iorwf	(btemp+1)^0,w,c
 30038  0117D0  A4D8               	btfss	status,2,c
 30039  0117D2  D056               	goto	l15624
 30040  0117D4  0EBF               	movlw	191
 30041  0117D6  6E34               	movwf	(btemp+10)^0,c
 30042  0117D8  0EFF               	movlw	255
 30043  0117DA  6E35               	movwf	(btemp+11)^0,c
 30044                           
 30045                           ;stkvar	_c @ sp[(-56)+-7]
 30046  0117DC  0EC1               	movlw	-63
 30047  0117DE  50E3               	movf	plusw1,w,c
 30048  0117E0  6E32               	movwf	(btemp+8)^0,c
 30049  0117E2  6A33               	clrf	(btemp+9)^0,c
 30050  0117E4  5034               	movf	(btemp+10)^0,w,c
 30051  0117E6  2632               	addwf	(btemp+8)^0,f,c
 30052  0117E8  5035               	movf	(btemp+11)^0,w,c
 30053  0117EA  2233               	addwfc	(btemp+9)^0,f,c
 30054  0117EC  5033               	movf	(btemp+9)^0,w,c
 30055  0117EE  E106               	bnz	u14740
 30056  0117F0  0E1A               	movlw	26
 30057  0117F2  5C32               	subwf	(btemp+8)^0,w,c
 30058  0117F4  B0D8               	btfsc	status,0,c
 30059  0117F6  D002               	goto	u14740
 30060  0117F8  0E01               	movlw	1
 30061  0117FA  D001               	goto	u14750
 30062  0117FC                     u14740:
 30063  0117FC  0E00               	movlw	0
 30064  0117FE                     u14750:
 30065  0117FE  6E34               	movwf	(btemp+10)^0,c
 30066  011800  6A35               	clrf	(btemp+11)^0,c
 30067                           
 30068                           ;stkvar	_efgtoa$6613 @ sp[(-56)+6]
 30069  011802  0ECE               	movlw	-50
 30070  011804  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30071  01180A  0ECF               	movlw	-49
 30072  01180C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30073                           
 30074                           ;stkvar	_efgtoa$6613 @ sp[(-56)+6]
 30075  011812  0ECE               	movlw	-50
 30076  011814  006F FF8C  F02A    	movff	plusw1,btemp
 30077  01181A  0ECF               	movlw	-49
 30078  01181C  50E3               	movf	plusw1,w,c
 30079  01181E  102A               	iorwf	btemp^0,w,c
 30080  011820  B4D8               	btfsc	status,2,c
 30081  011822  D017               	goto	l15616
 30082                           
 30083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 30084  011824  0EDE               	movlw	low STR_95
 30085  011826  6EE6               	movwf	postinc1,c
 30086  011828  0EFF               	movlw	high STR_95
 30087  01182A  6EE6               	movwf	postinc1,c
 30088                           
 30089                           ;stkvar	_n @ sp[(-58)+32]
 30090  01182C  0E54               	movlw	low _dbuf
 30091  01182E  6E34               	movwf	(btemp+10)^0,c
 30092  011830  0E03               	movlw	high _dbuf
 30093  011832  6E35               	movwf	(btemp+11)^0,c
 30094  011834  0EE6               	movlw	-26
 30095  011836  50E3               	movf	plusw1,w,c
 30096  011838  2634               	addwf	(btemp+10)^0,f,c
 30097  01183A  0EE7               	movlw	-25
 30098  01183C  50E3               	movf	plusw1,w,c
 30099  01183E  2235               	addwfc	(btemp+11)^0,f,c
 30100  011840  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30101  011846  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30102  01184C  EC7F  F0FF         	call	_strcpy	;wreg free
 30103                           
 30104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 30105  011850  D78D               	goto	l15600
 30106  011852                     l15616:
 30107                           
 30108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 30109  011852  0EE6               	movlw	low STR_96
 30110  011854  6EE6               	movwf	postinc1,c
 30111  011856  0EFF               	movlw	high STR_96
 30112  011858  6EE6               	movwf	postinc1,c
 30113                           
 30114                           ;stkvar	_n @ sp[(-58)+32]
 30115  01185A  0E54               	movlw	low _dbuf
 30116  01185C  6E34               	movwf	(btemp+10)^0,c
 30117  01185E  0E03               	movlw	high _dbuf
 30118  011860  6E35               	movwf	(btemp+11)^0,c
 30119  011862  0EE6               	movlw	-26
 30120  011864  50E3               	movf	plusw1,w,c
 30121  011866  2634               	addwf	(btemp+10)^0,f,c
 30122  011868  0EE7               	movlw	-25
 30123  01186A  50E3               	movf	plusw1,w,c
 30124  01186C  2235               	addwfc	(btemp+11)^0,f,c
 30125  01186E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30126  011874  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30127  01187A  EC7F  F0FF         	call	_strcpy	;wreg free
 30128  01187E  D776               	goto	l15600
 30129  011880                     l15624:
 30130                           
 30131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 30132  011880  0E00               	movlw	0
 30133  011882  6E32               	movwf	(btemp+8)^0,c
 30134  011884  0E00               	movlw	0
 30135  011886  6E33               	movwf	(btemp+9)^0,c
 30136  011888  0E80               	movlw	128
 30137  01188A  6E34               	movwf	(btemp+10)^0,c
 30138  01188C  0E3F               	movlw	63
 30139  01188E  6E35               	movwf	(btemp+11)^0,c
 30140                           
 30141                           ;stkvar	_u @ sp[(-56)+12]
 30142  011890  0ED4               	movlw	-44
 30143  011892  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30144  011898  0ED5               	movlw	-43
 30145  01189A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30146  0118A0  0ED6               	movlw	-42
 30147  0118A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30148  0118A8  0ED7               	movlw	-41
 30149  0118AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30150                           
 30151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 30152                           ;stkvar	_e @ sp[(-56)+34]
 30153  0118B0  0EEA               	movlw	-22
 30154  0118B2  6AE3               	clrf	plusw1,c
 30155  0118B4  0EEB               	movlw	-21
 30156  0118B6  6AE3               	clrf	plusw1,c
 30157                           
 30158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 30159  0118B8  0E00               	movlw	0
 30160  0118BA  6EE6               	movwf	postinc1,c
 30161  0118BC  0E00               	movlw	0
 30162  0118BE  6EE6               	movwf	postinc1,c
 30163  0118C0  0E00               	movlw	0
 30164  0118C2  6EE6               	movwf	postinc1,c
 30165  0118C4  0E00               	movlw	0
 30166  0118C6  6EE6               	movwf	postinc1,c
 30167                           
 30168                           ;stkvar	_g @ sp[(-60)+16]
 30169  0118C8  0ED4               	movlw	-44
 30170  0118CA  006F FF8F FFE6     	movff	plusw1,postinc1
 30171  0118D0  006F FF8F FFE6     	movff	plusw1,postinc1
 30172  0118D6  006F FF8F FFE6     	movff	plusw1,postinc1
 30173  0118DC  006F FF8F FFE6     	movff	plusw1,postinc1
 30174  0118E2  ECC2  F000         	call	___fleq	;wreg free
 30175  0118E6  A02A               	btfss	btemp& (0+255),0,c
 30176  0118E8  D039               	goto	l15636
 30177  0118EA  D0BC               	goto	u14790
 30178  0118EC                     l15632:
 30179                           
 30180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 30181  0118EC  0E00               	movlw	0
 30182  0118EE  6EE6               	movwf	postinc1,c
 30183  0118F0  0E00               	movlw	0
 30184  0118F2  6EE6               	movwf	postinc1,c
 30185  0118F4  0E20               	movlw	32
 30186  0118F6  6EE6               	movwf	postinc1,c
 30187  0118F8  0E41               	movlw	65
 30188  0118FA  6EE6               	movwf	postinc1,c
 30189                           
 30190                           ;stkvar	_u @ sp[(-60)+12]
 30191  0118FC  0ED0               	movlw	-48
 30192  0118FE  006F FF8F FFE6     	movff	plusw1,postinc1
 30193  011904  006F FF8F FFE6     	movff	plusw1,postinc1
 30194  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
 30195  011910  006F FF8F FFE6     	movff	plusw1,postinc1
 30196  011916  EC4D  F0B2         	call	___flmul	;wreg free
 30197                           
 30198                           ;stkvar	_u @ sp[(-56)+12]
 30199  01191A  0ED4               	movlw	-44
 30200  01191C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30201  011922  0ED5               	movlw	-43
 30202  011924  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30203  01192A  0ED6               	movlw	-42
 30204  01192C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30205  011932  0ED7               	movlw	-41
 30206  011934  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30207                           
 30208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 30209                           ;stkvar	_e @ sp[(-56)+34]
 30210  01193A  0EEA               	movlw	-22
 30211  01193C  50E3               	movf	plusw1,w,c
 30212  01193E  0F01               	addlw	1
 30213  011940  6E2A               	movwf	btemp^0,c
 30214  011942  0EEA               	movlw	-22
 30215  011944  0060  F0AB  FFE3   	movff	btemp,plusw1
 30216  01194A  6A2A               	clrf	btemp^0,c
 30217  01194C  0EEB               	movlw	-21
 30218  01194E  50E3               	movf	plusw1,w,c
 30219  011950  202A               	addwfc	btemp^0,w,c
 30220  011952  6E2A               	movwf	btemp^0,c
 30221  011954  0EEB               	movlw	-21
 30222  011956  0060  F0AB  FFE3   	movff	btemp,plusw1
 30223  01195C                     l15636:
 30224                           
 30225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 30226  01195C  0E00               	movlw	0
 30227  01195E  6EE6               	movwf	postinc1,c
 30228  011960  0E00               	movlw	0
 30229  011962  6EE6               	movwf	postinc1,c
 30230  011964  0E20               	movlw	32
 30231  011966  6EE6               	movwf	postinc1,c
 30232  011968  0E41               	movlw	65
 30233  01196A  6EE6               	movwf	postinc1,c
 30234                           
 30235                           ;stkvar	_u @ sp[(-60)+12]
 30236  01196C  0ED0               	movlw	-48
 30237  01196E  006F FF8F FFE6     	movff	plusw1,postinc1
 30238  011974  006F FF8F FFE6     	movff	plusw1,postinc1
 30239  01197A  006F FF8F FFE6     	movff	plusw1,postinc1
 30240  011980  006F FF8F FFE6     	movff	plusw1,postinc1
 30241  011986  EC4D  F0B2         	call	___flmul	;wreg free
 30242  01198A  0060  F0AB  FFE6   	movff	btemp,postinc1
 30243  011990  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30244  011996  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30245  01199C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30246                           
 30247                           ;stkvar	_g @ sp[(-60)+16]
 30248  0119A2  0ED4               	movlw	-44
 30249  0119A4  006F FF8F FFE6     	movff	plusw1,postinc1
 30250  0119AA  006F FF8F FFE6     	movff	plusw1,postinc1
 30251  0119B0  006F FF8F FFE6     	movff	plusw1,postinc1
 30252  0119B6  006F FF8F FFE6     	movff	plusw1,postinc1
 30253  0119BC  EC09  F0F3         	call	___flge	;wreg free
 30254  0119C0  A02A               	btfss	btemp& (0+255),0,c
 30255  0119C2  D032               	goto	l15642
 30256  0119C4  D793               	goto	l15632
 30257  0119C6                     l15638:
 30258                           
 30259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 30260  0119C6  0E00               	movlw	0
 30261  0119C8  6EE6               	movwf	postinc1,c
 30262  0119CA  0E00               	movlw	0
 30263  0119CC  6EE6               	movwf	postinc1,c
 30264  0119CE  0E20               	movlw	32
 30265  0119D0  6EE6               	movwf	postinc1,c
 30266  0119D2  0E41               	movlw	65
 30267  0119D4  6EE6               	movwf	postinc1,c
 30268                           
 30269                           ;stkvar	_u @ sp[(-60)+12]
 30270  0119D6  0ED0               	movlw	-48
 30271  0119D8  006F FF8F FFE6     	movff	plusw1,postinc1
 30272  0119DE  006F FF8F FFE6     	movff	plusw1,postinc1
 30273  0119E4  006F FF8F FFE6     	movff	plusw1,postinc1
 30274  0119EA  006F FF8F FFE6     	movff	plusw1,postinc1
 30275  0119F0  EC9E  F0BD         	call	___fldiv	;wreg free
 30276                           
 30277                           ;stkvar	_u @ sp[(-56)+12]
 30278  0119F4  0ED4               	movlw	-44
 30279  0119F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30280  0119FC  0ED5               	movlw	-43
 30281  0119FE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30282  011A04  0ED6               	movlw	-42
 30283  011A06  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30284  011A0C  0ED7               	movlw	-41
 30285  011A0E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30286                           
 30287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 30288                           ;stkvar	_e @ sp[(-56)+34]
 30289  011A14  50E1               	movf	fsr1l,w,c
 30290  011A16  0FEA               	addlw	-22
 30291  011A18  6ED9               	movwf	fsr2l,c
 30292  011A1A  50E2               	movf	fsr1h,w,c
 30293  011A1C  6EDA               	movwf	fsr2h,c
 30294  011A1E  0EFF               	movlw	255
 30295  011A20  22DA               	addwfc	fsr2h,f,c
 30296  011A22  06DE               	decf	postinc2,f,c
 30297  011A24  0E00               	movlw	0
 30298  011A26  5ADD               	subwfb	postdec2,f,c
 30299  011A28                     l15642:
 30300                           
 30301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 30302                           ;stkvar	_u @ sp[(-56)+12]
 30303  011A28  0ED4               	movlw	-44
 30304  011A2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30305  011A30  006F FF8F FFE6     	movff	plusw1,postinc1
 30306  011A36  006F FF8F FFE6     	movff	plusw1,postinc1
 30307  011A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 30308                           
 30309                           ;stkvar	_g @ sp[(-60)+16]
 30310  011A42  0ED4               	movlw	-44
 30311  011A44  006F FF8F FFE6     	movff	plusw1,postinc1
 30312  011A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 30313  011A50  006F FF8F FFE6     	movff	plusw1,postinc1
 30314  011A56  006F FF8F FFE6     	movff	plusw1,postinc1
 30315  011A5C  EC09  F0F3         	call	___flge	;wreg free
 30316  011A60  A02A               	btfss	btemp& (0+255),0,c
 30317  011A62  D7B1               	goto	l15638
 30318  011A64                     u14790:
 30319                           
 30320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 30321                           ;stkvar	_c @ sp[(-56)+-7]
 30322  011A64  0EC1               	movlw	-63
 30323  011A66  50E3               	movf	plusw1,w,c
 30324  011A68  6EE6               	movwf	postinc1,c
 30325  011A6A  0E00               	movlw	0
 30326  011A6C  6EE6               	movwf	postinc1,c
 30327  011A6E  EC1A  F007         	call	_tolower	;wreg free
 30328                           
 30329                           ;stkvar	_mode @ sp[(-56)+54]
 30330  011A72  0EFE               	movlw	-2
 30331  011A74  0060  F0AB  FFE3   	movff	btemp,plusw1
 30332                           
 30333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 30334                           ;stkvar	_mode @ sp[(-56)+54]
 30335                           ;stkvar	_nmode @ sp[(-56)+55]
 30336  011A7A  0EFE               	movlw	-2
 30337  011A7C  006F FF8C  F02A    	movff	plusw1,btemp
 30338  011A82  0EFF               	movlw	-1
 30339  011A84  0060  F0AB  FFE3   	movff	btemp,plusw1
 30340                           
 30341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 30342                           ;stkvar	_mode @ sp[(-56)+54]
 30343  011A8A  0EFE               	movlw	-2
 30344  011A8C  006F FF8C  F02A    	movff	plusw1,btemp
 30345  011A92  0E67               	movlw	103
 30346  011A94  182A               	xorwf	btemp^0,w,c
 30347  011A96  A4D8               	btfss	status,2,c
 30348  011A98  D025               	goto	l15660
 30349                           
 30350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 30351  011A9A  504C               	movf	_prec^0,w,c
 30352  011A9C  104D               	iorwf	(_prec+1)^0,w,c
 30353  011A9E  A4D8               	btfss	status,2,c
 30354  011AA0  D004               	goto	l15654
 30355                           
 30356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 30357  011AA2  0E00               	movlw	0
 30358  011AA4  6E4D               	movwf	(_prec+1)^0,c
 30359  011AA6  0E01               	movlw	1
 30360  011AA8  6E4C               	movwf	_prec^0,c
 30361  011AAA                     l15654:
 30362                           
 30363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 30364  011AAA  BE4D               	btfsc	(_prec+1)^0,7,c
 30365  011AAC  D005               	goto	u14820
 30366  011AAE  504D               	movf	(_prec+1)^0,w,c
 30367  011AB0  E110               	bnz	l15658
 30368  011AB2  044C               	decf	_prec^0,w,c
 30369  011AB4  B0D8               	btfsc	status,0,c
 30370  011AB6  D00D               	goto	l15658
 30371  011AB8                     u14820:
 30372  011AB8  0E06               	movlw	6
 30373  011ABA  6E34               	movwf	(btemp+10)^0,c
 30374  011ABC  0E00               	movlw	0
 30375  011ABE  6E35               	movwf	(btemp+11)^0,c
 30376                           
 30377                           ;stkvar	_p @ sp[(-56)+40]
 30378  011AC0  0EF0               	movlw	-16
 30379  011AC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30380  011AC8  0EF1               	movlw	-15
 30381  011ACA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30382  011AD0  D00C               	goto	l15666
 30383  011AD2                     l15658:
 30384                           
 30385                           ;stkvar	_p @ sp[(-56)+40]
 30386  011AD2  0EF0               	movlw	-16
 30387  011AD4  0060  F133  FFE3   	movff	_prec,plusw1
 30388  011ADA  0EF1               	movlw	-15
 30389  011ADC  0060  F137  FFE3   	movff	_prec+1,plusw1
 30390  011AE2  D003               	goto	l15666
 30391  011AE4                     l15660:
 30392                           
 30393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 30394  011AE4  AE4D               	btfss	(_prec+1)^0,7,c
 30395  011AE6  D7F5               	goto	l15658
 30396  011AE8  D7E7               	goto	u14820
 30397  011AEA                     l15666:
 30398                           
 30399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 30400                           ;stkvar	_mode @ sp[(-56)+54]
 30401  011AEA  0EFE               	movlw	-2
 30402  011AEC  006F FF8C  F02A    	movff	plusw1,btemp
 30403  011AF2  0E67               	movlw	103
 30404  011AF4  182A               	xorwf	btemp^0,w,c
 30405  011AF6  A4D8               	btfss	status,2,c
 30406  011AF8  D02F               	goto	l15676
 30407                           
 30408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 30409                           ;stkvar	_e @ sp[(-56)+34]
 30410  011AFA  0EEB               	movlw	-21
 30411  011AFC  AEE3               	btfss	plusw1,7,c
 30412  011AFE  D00E               	goto	u14850
 30413  011B00  0EEA               	movlw	-22
 30414  011B02  006F FF8C  F02A    	movff	plusw1,btemp
 30415  011B08  0EFC               	movlw	252
 30416  011B0A  5E2A               	subwf	btemp^0,f,c
 30417  011B0C  0EEB               	movlw	-21
 30418  011B0E  006F FF8C  F02A    	movff	plusw1,btemp
 30419  011B14  0EFF               	movlw	255
 30420  011B16  5A2A               	subwfb	btemp^0,f,c
 30421  011B18  A0D8               	btfss	status,0,c
 30422  011B1A  D018               	goto	l15674
 30423  011B1C                     u14850:
 30424                           
 30425                           ;stkvar	_e @ sp[(-56)+34]
 30426                           ;stkvar	_p @ sp[(-56)+40]
 30427  011B1C  0EF0               	movlw	-16
 30428  011B1E  50E3               	movf	plusw1,w,c
 30429  011B20  0FFF               	addlw	255
 30430  011B22  6E34               	movwf	(btemp+10)^0,c
 30431  011B24  0EF1               	movlw	-15
 30432  011B26  006F FF8C  F035    	movff	plusw1,btemp+11
 30433  011B2C  0EFF               	movlw	255
 30434  011B2E  2235               	addwfc	(btemp+11)^0,f,c
 30435  011B30  0EEA               	movlw	-22
 30436  011B32  50E3               	movf	plusw1,w,c
 30437  011B34  5C34               	subwf	(btemp+10)^0,w,c
 30438  011B36  5035               	movf	(btemp+11)^0,w,c
 30439  011B38  0A80               	xorlw	128
 30440  011B3A  6E2A               	movwf	btemp^0,c
 30441  011B3C  0EEB               	movlw	-21
 30442  011B3E  50E3               	movf	plusw1,w,c
 30443  011B40  0A80               	xorlw	128
 30444  011B42  582A               	subwfb	btemp^0,w,c
 30445  011B44  A0D8               	btfss	status,0,c
 30446  011B46  D002               	goto	l15674
 30447                           
 30448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 30449  011B48  0E66               	movlw	102
 30450  011B4A  D001               	goto	L32
 30451  011B4C                     l15674:
 30452                           
 30453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 30454  011B4C  0E65               	movlw	101
 30455  011B4E                     L32:
 30456  011B4E  6E35               	movwf	(btemp+11)^0,c
 30457                           
 30458                           ;stkvar	_nmode @ sp[(-56)+55]
 30459  011B50  0EFF               	movlw	-1
 30460  011B52  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30461  011B58                     l15676:
 30462                           
 30463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 30464                           ;stkvar	_p @ sp[(-56)+40]
 30465                           ;stkvar	_m @ sp[(-56)+48]
 30466  011B58  0EF0               	movlw	-16
 30467  011B5A  006F FF8C  F02A    	movff	plusw1,btemp
 30468  011B60  0EF8               	movlw	-8
 30469  011B62  0060  F0AB  FFE3   	movff	btemp,plusw1
 30470  011B68  0EF1               	movlw	-15
 30471  011B6A  006F FF8C  F02A    	movff	plusw1,btemp
 30472  011B70  0EF9               	movlw	-7
 30473  011B72  0060  F0AB  FFE3   	movff	btemp,plusw1
 30474                           
 30475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 30476                           ;stkvar	_mode @ sp[(-56)+54]
 30477  011B78  0EFE               	movlw	-2
 30478  011B7A  006F FF8C  F02A    	movff	plusw1,btemp
 30479  011B80  0E67               	movlw	103
 30480  011B82  182A               	xorwf	btemp^0,w,c
 30481  011B84  A4D8               	btfss	status,2,c
 30482  011B86  D00B               	goto	u14890
 30483                           
 30484                           ;stkvar	_nmode @ sp[(-56)+55]
 30485  011B88  0EFF               	movlw	-1
 30486  011B8A  006F FF8C  F02A    	movff	plusw1,btemp
 30487  011B90  0E66               	movlw	102
 30488  011B92  182A               	xorwf	btemp^0,w,c
 30489  011B94  A4D8               	btfss	status,2,c
 30490  011B96  D014               	goto	l2550
 30491                           
 30492                           ;stkvar	_e @ sp[(-56)+34]
 30493  011B98  0EEB               	movlw	-21
 30494  011B9A  AEE3               	btfss	plusw1,7,c
 30495  011B9C  D011               	goto	l2550
 30496  011B9E                     u14890:
 30497                           
 30498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 30499                           ;stkvar	_m @ sp[(-56)+48]
 30500  011B9E  0EF8               	movlw	-8
 30501  011BA0  50E3               	movf	plusw1,w,c
 30502  011BA2  0F01               	addlw	1
 30503  011BA4  6E2A               	movwf	btemp^0,c
 30504  011BA6  0EF8               	movlw	-8
 30505  011BA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30506  011BAE  6A2A               	clrf	btemp^0,c
 30507  011BB0  0EF9               	movlw	-7
 30508  011BB2  50E3               	movf	plusw1,w,c
 30509  011BB4  202A               	addwfc	btemp^0,w,c
 30510  011BB6  6E2A               	movwf	btemp^0,c
 30511  011BB8  0EF9               	movlw	-7
 30512  011BBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30513  011BC0                     l2550:
 30514                           
 30515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 30516                           ;stkvar	_nmode @ sp[(-56)+55]
 30517  011BC0  0EFF               	movlw	-1
 30518  011BC2  006F FF8C  F02A    	movff	plusw1,btemp
 30519  011BC8  0E66               	movlw	102
 30520  011BCA  182A               	xorwf	btemp^0,w,c
 30521  011BCC  A4D8               	btfss	status,2,c
 30522  011BCE  D03B               	goto	l15696
 30523                           
 30524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 30525                           ;stkvar	_e @ sp[(-56)+34]
 30526  011BD0  0EEB               	movlw	-21
 30527  011BD2  AEE3               	btfss	plusw1,7,c
 30528  011BD4  D01C               	goto	l15692
 30529                           
 30530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 30531  011BD6  0E00               	movlw	0
 30532  011BD8  6E32               	movwf	(btemp+8)^0,c
 30533  011BDA  0E00               	movlw	0
 30534  011BDC  6E33               	movwf	(btemp+9)^0,c
 30535  011BDE  0E80               	movlw	128
 30536  011BE0  6E34               	movwf	(btemp+10)^0,c
 30537  011BE2  0E3F               	movlw	63
 30538  011BE4  6E35               	movwf	(btemp+11)^0,c
 30539                           
 30540                           ;stkvar	_u @ sp[(-56)+12]
 30541  011BE6  0ED4               	movlw	-44
 30542  011BE8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30543  011BEE  0ED5               	movlw	-43
 30544  011BF0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30545  011BF6  0ED6               	movlw	-42
 30546  011BF8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30547  011BFE  0ED7               	movlw	-41
 30548  011C00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30549                           
 30550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 30551                           ;stkvar	_e @ sp[(-56)+34]
 30552  011C06  0EEA               	movlw	-22
 30553  011C08  6AE3               	clrf	plusw1,c
 30554  011C0A  0EEB               	movlw	-21
 30555  011C0C  6AE3               	clrf	plusw1,c
 30556  011C0E                     l15692:
 30557                           
 30558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 30559                           ;stkvar	_mode @ sp[(-56)+54]
 30560  011C0E  0EFE               	movlw	-2
 30561  011C10  006F FF8C  F02A    	movff	plusw1,btemp
 30562  011C16  0E67               	movlw	103
 30563  011C18  182A               	xorwf	btemp^0,w,c
 30564  011C1A  B4D8               	btfsc	status,2,c
 30565  011C1C  D014               	goto	l15696
 30566                           
 30567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 30568                           ;stkvar	_e @ sp[(-56)+34]
 30569                           ;stkvar	_m @ sp[(-56)+48]
 30570  011C1E  0EF8               	movlw	-8
 30571  011C20  50E3               	movf	plusw1,w,c
 30572  011C22  6E2A               	movwf	btemp^0,c
 30573  011C24  0EEA               	movlw	-22
 30574  011C26  50E3               	movf	plusw1,w,c
 30575  011C28  262A               	addwf	btemp^0,f,c
 30576  011C2A  0EF8               	movlw	-8
 30577  011C2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30578  011C32  0EF9               	movlw	-7
 30579  011C34  50E3               	movf	plusw1,w,c
 30580  011C36  6E2A               	movwf	btemp^0,c
 30581  011C38  0EEB               	movlw	-21
 30582  011C3A  50E3               	movf	plusw1,w,c
 30583  011C3C  222A               	addwfc	btemp^0,f,c
 30584  011C3E  0EF9               	movlw	-7
 30585  011C40  0060  F0AB  FFE3   	movff	btemp,plusw1
 30586  011C46                     l15696:
 30587                           
 30588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 30589                           ;stkvar	_i @ sp[(-56)+36]
 30590  011C46  0EEC               	movlw	-20
 30591  011C48  6AE3               	clrf	plusw1,c
 30592  011C4A  0EED               	movlw	-19
 30593  011C4C  6AE3               	clrf	plusw1,c
 30594                           
 30595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 30596                           ;stkvar	_g @ sp[(-56)+16]
 30597  011C4E  0ED8               	movlw	-40
 30598  011C50  006F FF8C  F032    	movff	plusw1,btemp+8
 30599  011C56  0ED9               	movlw	-39
 30600  011C58  006F FF8C  F033    	movff	plusw1,btemp+9
 30601  011C5E  0EDA               	movlw	-38
 30602  011C60  006F FF8C  F034    	movff	plusw1,btemp+10
 30603  011C66  0EDB               	movlw	-37
 30604  011C68  006F FF8C  F035    	movff	plusw1,btemp+11
 30605                           
 30606                           ;stkvar	_h @ sp[(-56)+24]
 30607  011C6E  0EE0               	movlw	-32
 30608  011C70  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30609  011C76  0EE1               	movlw	-31
 30610  011C78  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30611  011C7E  0EE2               	movlw	-30
 30612  011C80  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30613  011C86  0EE3               	movlw	-29
 30614  011C88  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30615                           
 30616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 30617                           ;stkvar	_u @ sp[(-56)+12]
 30618  011C8E  0ED4               	movlw	-44
 30619  011C90  006F FF8C  F032    	movff	plusw1,btemp+8
 30620  011C96  0ED5               	movlw	-43
 30621  011C98  006F FF8C  F033    	movff	plusw1,btemp+9
 30622  011C9E  0ED6               	movlw	-42
 30623  011CA0  006F FF8C  F034    	movff	plusw1,btemp+10
 30624  011CA6  0ED7               	movlw	-41
 30625  011CA8  006F FF8C  F035    	movff	plusw1,btemp+11
 30626                           
 30627                           ;stkvar	_ou @ sp[(-56)+28]
 30628  011CAE  0EE4               	movlw	-28
 30629  011CB0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30630  011CB6  0EE5               	movlw	-27
 30631  011CB8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30632  011CBE  0EE6               	movlw	-26
 30633  011CC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30634  011CC6  0EE7               	movlw	-25
 30635  011CC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30636                           
 30637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30638  011CCE  D0D6               	goto	l15712
 30639  011CD0                     l15702:
 30640                           
 30641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 30642                           ;stkvar	_u @ sp[(-56)+12]
 30643  011CD0  0ED4               	movlw	-44
 30644  011CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 30645  011CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 30646  011CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 30647  011CE4  006F FF8F FFE6     	movff	plusw1,postinc1
 30648                           
 30649                           ;stkvar	_h @ sp[(-60)+24]
 30650  011CEA  0EDC               	movlw	-36
 30651  011CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 30652  011CF2  006F FF8F FFE6     	movff	plusw1,postinc1
 30653  011CF8  006F FF8F FFE6     	movff	plusw1,postinc1
 30654  011CFE  006F FF8F FFE6     	movff	plusw1,postinc1
 30655  011D04  EC9E  F0BD         	call	___fldiv	;wreg free
 30656  011D08  0060  F0AB  FFE6   	movff	btemp,postinc1
 30657  011D0E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30658  011D14  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30659  011D1A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30660  011D20  EC82  F0CF         	call	_floorf	;wreg free
 30661                           
 30662                           ;stkvar	_l @ sp[(-56)+20]
 30663  011D24  0EDC               	movlw	-36
 30664  011D26  0060  F0AB  FFE3   	movff	btemp,plusw1
 30665  011D2C  0EDD               	movlw	-35
 30666  011D2E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30667  011D34  0EDE               	movlw	-34
 30668  011D36  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30669  011D3C  0EDF               	movlw	-33
 30670  011D3E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30671                           
 30672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 30673                           ;stkvar	_l @ sp[(-56)+20]
 30674  011D44  0EDC               	movlw	-36
 30675  011D46  006F FF8F FFE6     	movff	plusw1,postinc1
 30676  011D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 30677  011D52  006F FF8F FFE6     	movff	plusw1,postinc1
 30678  011D58  006F FF8F FFE6     	movff	plusw1,postinc1
 30679  011D5E  EC9D  F0F1         	call	___fltol	;wreg free
 30680  011D62  0060  F0A8  F034   	movff	btemp,btemp+10
 30681  011D68  0060  F0AC  F035   	movff	btemp+1,btemp+11
 30682                           
 30683                           ;stkvar	_d @ sp[(-56)+44]
 30684  011D6E  0EF4               	movlw	-12
 30685  011D70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30686  011D76  0EF5               	movlw	-11
 30687  011D78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30688                           
 30689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 30690                           ;stkvar	_u @ sp[(-56)+12]
 30691  011D7E  0ED4               	movlw	-44
 30692  011D80  006F FF8F FFE6     	movff	plusw1,postinc1
 30693  011D86  006F FF8F FFE6     	movff	plusw1,postinc1
 30694  011D8C  006F FF8F FFE6     	movff	plusw1,postinc1
 30695  011D92  006F FF8F FFE6     	movff	plusw1,postinc1
 30696                           
 30697                           ;stkvar	_l @ sp[(-60)+20]
 30698  011D98  0ED8               	movlw	-40
 30699  011D9A  006F FF8F FFE6     	movff	plusw1,postinc1
 30700  011DA0  006F FF8F FFE6     	movff	plusw1,postinc1
 30701  011DA6  006F FF8F FFE6     	movff	plusw1,postinc1
 30702  011DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 30703  011DB2  EC4D  F0B2         	call	___flmul	;wreg free
 30704  011DB6  0060  F0AB  FFE6   	movff	btemp,postinc1
 30705  011DBC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30706  011DC2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30707  011DC8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30708                           
 30709                           ;stkvar	_h @ sp[(-60)+24]
 30710  011DCE  0EDC               	movlw	-36
 30711  011DD0  006F FF8F FFE6     	movff	plusw1,postinc1
 30712  011DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 30713  011DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 30714  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 30715  011DE8  EC54  F00D         	call	___flsub	;wreg free
 30716                           
 30717                           ;stkvar	_h @ sp[(-56)+24]
 30718  011DEC  0EE0               	movlw	-32
 30719  011DEE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30720  011DF4  0EE1               	movlw	-31
 30721  011DF6  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30722  011DFC  0EE2               	movlw	-30
 30723  011DFE  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30724  011E04  0EE3               	movlw	-29
 30725  011E06  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30726                           
 30727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 30728  011E0C  0E00               	movlw	0
 30729  011E0E  6EE6               	movwf	postinc1,c
 30730  011E10  0E00               	movlw	0
 30731  011E12  6EE6               	movwf	postinc1,c
 30732  011E14  0E20               	movlw	32
 30733  011E16  6EE6               	movwf	postinc1,c
 30734  011E18  0E41               	movlw	65
 30735  011E1A  6EE6               	movwf	postinc1,c
 30736                           
 30737                           ;stkvar	_u @ sp[(-60)+12]
 30738  011E1C  0ED0               	movlw	-48
 30739  011E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30740  011E24  006F FF8F FFE6     	movff	plusw1,postinc1
 30741  011E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30742  011E30  006F FF8F FFE6     	movff	plusw1,postinc1
 30743  011E36  EC9E  F0BD         	call	___fldiv	;wreg free
 30744                           
 30745                           ;stkvar	_u @ sp[(-56)+12]
 30746  011E3A  0ED4               	movlw	-44
 30747  011E3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30748  011E42  0ED5               	movlw	-43
 30749  011E44  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30750  011E4A  0ED6               	movlw	-42
 30751  011E4C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30752  011E52  0ED7               	movlw	-41
 30753  011E54  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30754                           
 30755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 30756                           ;stkvar	_i @ sp[(-56)+36]
 30757  011E5A  0EEC               	movlw	-20
 30758  011E5C  50E3               	movf	plusw1,w,c
 30759  011E5E  0F01               	addlw	1
 30760  011E60  6E2A               	movwf	btemp^0,c
 30761  011E62  0EEC               	movlw	-20
 30762  011E64  0060  F0AB  FFE3   	movff	btemp,plusw1
 30763  011E6A  6A2A               	clrf	btemp^0,c
 30764  011E6C  0EED               	movlw	-19
 30765  011E6E  50E3               	movf	plusw1,w,c
 30766  011E70  202A               	addwfc	btemp^0,w,c
 30767  011E72  6E2A               	movwf	btemp^0,c
 30768  011E74  0EED               	movlw	-19
 30769  011E76  0060  F0AB  FFE3   	movff	btemp,plusw1
 30770  011E7C                     l15712:
 30771                           
 30772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30773                           ;stkvar	_m @ sp[(-56)+48]
 30774                           ;stkvar	_i @ sp[(-56)+36]
 30775  011E7C  50E1               	movf	fsr1l,w,c
 30776  011E7E  0FEC               	addlw	-20
 30777  011E80  6ED9               	movwf	fsr2l,c
 30778  011E82  50E2               	movf	fsr1h,w,c
 30779  011E84  6EDA               	movwf	fsr2h,c
 30780  011E86  0EFF               	movlw	255
 30781  011E88  22DA               	addwfc	fsr2h,f,c
 30782  011E8A  0EF8               	movlw	-8
 30783  011E8C  50E3               	movf	plusw1,w,c
 30784  011E8E  5CDE               	subwf	postinc2,w,c
 30785  011E90  50DE               	movf	postinc2,w,c
 30786  011E92  0A80               	xorlw	128
 30787  011E94  6E2A               	movwf	btemp^0,c
 30788  011E96  0EF9               	movlw	-7
 30789  011E98  50E3               	movf	plusw1,w,c
 30790  011E9A  0A80               	xorlw	128
 30791  011E9C  582A               	subwfb	btemp^0,w,c
 30792  011E9E  A0D8               	btfss	status,0,c
 30793  011EA0  D717               	goto	l15702
 30794                           
 30795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 30796  011EA2  0E00               	movlw	0
 30797  011EA4  6EE6               	movwf	postinc1,c
 30798  011EA6  0E00               	movlw	0
 30799  011EA8  6EE6               	movwf	postinc1,c
 30800  011EAA  0EA0               	movlw	160
 30801  011EAC  6EE6               	movwf	postinc1,c
 30802  011EAE  0E40               	movlw	64
 30803  011EB0  6EE6               	movwf	postinc1,c
 30804                           
 30805                           ;stkvar	_u @ sp[(-60)+12]
 30806  011EB2  0ED0               	movlw	-48
 30807  011EB4  006F FF8F FFE6     	movff	plusw1,postinc1
 30808  011EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30809  011EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30810  011EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30811  011ECC  EC4D  F0B2         	call	___flmul	;wreg free
 30812                           
 30813                           ;stkvar	_l @ sp[(-56)+20]
 30814  011ED0  0EDC               	movlw	-36
 30815  011ED2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30816  011ED8  0EDD               	movlw	-35
 30817  011EDA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30818  011EE0  0EDE               	movlw	-34
 30819  011EE2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30820  011EE8  0EDF               	movlw	-33
 30821  011EEA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30822                           
 30823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 30824                           ;stkvar	_l @ sp[(-56)+20]
 30825  011EF0  0EDC               	movlw	-36
 30826  011EF2  006F FF8F FFE6     	movff	plusw1,postinc1
 30827  011EF8  006F FF8F FFE6     	movff	plusw1,postinc1
 30828  011EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 30829  011F04  006F FF8F FFE6     	movff	plusw1,postinc1
 30830                           
 30831                           ;stkvar	_h @ sp[(-60)+24]
 30832  011F0A  0EDC               	movlw	-36
 30833  011F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 30834  011F12  006F FF8F FFE6     	movff	plusw1,postinc1
 30835  011F18  006F FF8F FFE6     	movff	plusw1,postinc1
 30836  011F1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30837  011F24  EC09  F0F3         	call	___flge	;wreg free
 30838  011F28  A02A               	btfss	btemp& (0+255),0,c
 30839  011F2A  D021               	goto	u14960
 30840                           
 30841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 30842                           ;stkvar	_l @ sp[(-56)+20]
 30843                           
 30844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 30845                           
 30846                           ;stkvar	_l @ sp[(-56)+20]
 30847                           
 30848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 30849  011F2C  0EDC               	movlw	-36
 30850  011F2E  006F FF8F FFE6     	movff	plusw1,postinc1
 30851  011F34  006F FF8F FFE6     	movff	plusw1,postinc1
 30852  011F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 30853  011F40  006F FF8F FFE6     	movff	plusw1,postinc1
 30854                           
 30855                           ;stkvar	_h @ sp[(-60)+24]
 30856  011F46  0EDC               	movlw	-36
 30857  011F48  006F FF8F FFE6     	movff	plusw1,postinc1
 30858  011F4E  006F FF8F FFE6     	movff	plusw1,postinc1
 30859  011F54  006F FF8F FFE6     	movff	plusw1,postinc1
 30860  011F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 30861  011F60  ECC2  F000         	call	___fleq	;wreg free
 30862  011F64  A02A               	btfss	btemp& (0+255),0,c
 30863  011F66  D01B               	goto	l15726
 30864                           
 30865                           ;stkvar	_d @ sp[(-56)+44]
 30866  011F68  0EF4               	movlw	-12
 30867  011F6A  B0E3               	btfsc	plusw1,0,c
 30868  011F6C  D018               	goto	l15726
 30869  011F6E                     u14960:
 30870                           
 30871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 30872  011F6E  0E00               	movlw	0
 30873  011F70  6E32               	movwf	(btemp+8)^0,c
 30874  011F72  0E00               	movlw	0
 30875  011F74  6E33               	movwf	(btemp+9)^0,c
 30876  011F76  0E00               	movlw	0
 30877  011F78  6E34               	movwf	(btemp+10)^0,c
 30878  011F7A  0E00               	movlw	0
 30879  011F7C  6E35               	movwf	(btemp+11)^0,c
 30880                           
 30881                           ;stkvar	_l @ sp[(-56)+20]
 30882  011F7E  0EDC               	movlw	-36
 30883  011F80  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30884  011F86  0EDD               	movlw	-35
 30885  011F88  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30886  011F8E  0EDE               	movlw	-34
 30887  011F90  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30888  011F96  0EDF               	movlw	-33
 30889  011F98  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30890  011F9E                     l15726:
 30891                           
 30892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 30893                           ;stkvar	_l @ sp[(-56)+20]
 30894  011F9E  0EDC               	movlw	-36
 30895  011FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 30896  011FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 30897  011FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 30898  011FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 30899                           
 30900                           ;stkvar	_g @ sp[(-60)+16]
 30901  011FB8  0ED4               	movlw	-44
 30902  011FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30903  011FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30904  011FC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30905  011FCC  006F FF8F FFE6     	movff	plusw1,postinc1
 30906  011FD2  EC62  F0B6         	call	___fladd	;wreg free
 30907                           
 30908                           ;stkvar	_h @ sp[(-56)+24]
 30909  011FD6  0EE0               	movlw	-32
 30910  011FD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30911  011FDE  0EE1               	movlw	-31
 30912  011FE0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30913  011FE6  0EE2               	movlw	-30
 30914  011FE8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30915  011FEE  0EE3               	movlw	-29
 30916  011FF0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30917                           
 30918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 30919                           ;stkvar	_ou @ sp[(-56)+28]
 30920  011FF6  0EE4               	movlw	-28
 30921  011FF8  006F FF8C  F032    	movff	plusw1,btemp+8
 30922  011FFE  0EE5               	movlw	-27
 30923  012000  006F FF8C  F033    	movff	plusw1,btemp+9
 30924  012006  0EE6               	movlw	-26
 30925  012008  006F FF8C  F034    	movff	plusw1,btemp+10
 30926  01200E  0EE7               	movlw	-25
 30927  012010  006F FF8C  F035    	movff	plusw1,btemp+11
 30928                           
 30929                           ;stkvar	_u @ sp[(-56)+12]
 30930  012016  0ED4               	movlw	-44
 30931  012018  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30932  01201E  0ED5               	movlw	-43
 30933  012020  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30934  012026  0ED6               	movlw	-42
 30935  012028  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30936  01202E  0ED7               	movlw	-41
 30937  012030  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30938                           
 30939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 30940                           ;stkvar	_nmode @ sp[(-56)+55]
 30941  012036  0EFF               	movlw	-1
 30942  012038  006F FF8C  F02A    	movff	plusw1,btemp
 30943  01203E  0E65               	movlw	101
 30944  012040  182A               	xorwf	btemp^0,w,c
 30945  012042  B4D8               	btfsc	status,2,c
 30946  012044  D011               	goto	l15734
 30947                           
 30948                           ;stkvar	_e @ sp[(-56)+34]
 30949                           ;stkvar	_ne @ sp[(-56)+46]
 30950  012046  0EEA               	movlw	-22
 30951  012048  006F FF8C  F02A    	movff	plusw1,btemp
 30952  01204E  0EF6               	movlw	-10
 30953  012050  0060  F0AB  FFE3   	movff	btemp,plusw1
 30954  012056  0EEB               	movlw	-21
 30955  012058  006F FF8C  F02A    	movff	plusw1,btemp
 30956  01205E  0EF7               	movlw	-9
 30957  012060  0060  F0AB  FFE3   	movff	btemp,plusw1
 30958  012066  D004               	goto	l2565
 30959  012068                     l15734:
 30960                           
 30961                           ;stkvar	_ne @ sp[(-56)+46]
 30962  012068  0EF6               	movlw	-10
 30963  01206A  6AE3               	clrf	plusw1,c
 30964  01206C  0EF7               	movlw	-9
 30965  01206E  6AE3               	clrf	plusw1,c
 30966  012070                     l2565:
 30967                           
 30968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 30969                           ;stkvar	_pp @ sp[(-56)+50]
 30970  012070  0EFA               	movlw	-6
 30971  012072  6AE3               	clrf	plusw1,c
 30972  012074  0EFB               	movlw	-5
 30973  012076  6AE3               	clrf	plusw1,c
 30974                           
 30975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 30976                           ;stkvar	_t @ sp[(-56)+52]
 30977  012078  0EFC               	movlw	-4
 30978  01207A  6AE3               	clrf	plusw1,c
 30979  01207C  0EFD               	movlw	-3
 30980  01207E  6AE3               	clrf	plusw1,c
 30981                           
 30982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 30983                           ;stkvar	_i @ sp[(-56)+36]
 30984  012080  0EEC               	movlw	-20
 30985  012082  6AE3               	clrf	plusw1,c
 30986  012084  0EED               	movlw	-19
 30987  012086  6AE3               	clrf	plusw1,c
 30988                           
 30989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 30990  012088  D1B7               	goto	l15786
 30991  01208A                     l15736:
 30992                           
 30993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 30994                           ;stkvar	_u @ sp[(-56)+12]
 30995  01208A  0ED4               	movlw	-44
 30996  01208C  006F FF8F FFE6     	movff	plusw1,postinc1
 30997  012092  006F FF8F FFE6     	movff	plusw1,postinc1
 30998  012098  006F FF8F FFE6     	movff	plusw1,postinc1
 30999  01209E  006F FF8F FFE6     	movff	plusw1,postinc1
 31000                           
 31001                           ;stkvar	_h @ sp[(-60)+24]
 31002  0120A4  0EDC               	movlw	-36
 31003  0120A6  006F FF8F FFE6     	movff	plusw1,postinc1
 31004  0120AC  006F FF8F FFE6     	movff	plusw1,postinc1
 31005  0120B2  006F FF8F FFE6     	movff	plusw1,postinc1
 31006  0120B8  006F FF8F FFE6     	movff	plusw1,postinc1
 31007  0120BE  EC9E  F0BD         	call	___fldiv	;wreg free
 31008  0120C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 31009  0120C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31010  0120CE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31011  0120D4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31012  0120DA  EC82  F0CF         	call	_floorf	;wreg free
 31013                           
 31014                           ;stkvar	_l @ sp[(-56)+20]
 31015  0120DE  0EDC               	movlw	-36
 31016  0120E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31017  0120E6  0EDD               	movlw	-35
 31018  0120E8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31019  0120EE  0EDE               	movlw	-34
 31020  0120F0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31021  0120F6  0EDF               	movlw	-33
 31022  0120F8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31023                           
 31024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31025                           ;stkvar	_l @ sp[(-56)+20]
 31026  0120FE  0EDC               	movlw	-36
 31027  012100  006F FF8F FFE6     	movff	plusw1,postinc1
 31028  012106  006F FF8F FFE6     	movff	plusw1,postinc1
 31029  01210C  006F FF8F FFE6     	movff	plusw1,postinc1
 31030  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 31031  012118  EC9D  F0F1         	call	___fltol	;wreg free
 31032  01211C  0060  F0A8  F034   	movff	btemp,btemp+10
 31033  012122  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31034                           
 31035                           ;stkvar	_d @ sp[(-56)+44]
 31036  012128  0EF4               	movlw	-12
 31037  01212A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31038  012130  0EF5               	movlw	-11
 31039  012132  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31040                           
 31041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 31042  012138  B84E               	btfsc	_flags^0,4,c
 31043  01213A  D026               	goto	l15750
 31044                           
 31045                           ;stkvar	_d @ sp[(-56)+44]
 31046  01213C  0EF4               	movlw	-12
 31047  01213E  006F FF8C  F02A    	movff	plusw1,btemp
 31048  012144  0EF5               	movlw	-11
 31049  012146  50E3               	movf	plusw1,w,c
 31050  012148  102A               	iorwf	btemp^0,w,c
 31051  01214A  A4D8               	btfss	status,2,c
 31052  01214C  D01D               	goto	l15750
 31053                           
 31054                           ;stkvar	_mode @ sp[(-56)+54]
 31055  01214E  0EFE               	movlw	-2
 31056  012150  006F FF8C  F02A    	movff	plusw1,btemp
 31057  012156  0E67               	movlw	103
 31058  012158  182A               	xorwf	btemp^0,w,c
 31059  01215A  A4D8               	btfss	status,2,c
 31060  01215C  D015               	goto	l15750
 31061                           
 31062                           ;stkvar	_ne @ sp[(-56)+46]
 31063  01215E  0EF7               	movlw	-9
 31064  012160  AEE3               	btfss	plusw1,7,c
 31065  012162  D012               	goto	l15750
 31066                           
 31067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 31068                           ;stkvar	_t @ sp[(-56)+52]
 31069  012164  0EFC               	movlw	-4
 31070  012166  50E3               	movf	plusw1,w,c
 31071  012168  0F01               	addlw	1
 31072  01216A  6E2A               	movwf	btemp^0,c
 31073  01216C  0EFC               	movlw	-4
 31074  01216E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31075  012174  6A2A               	clrf	btemp^0,c
 31076  012176  0EFD               	movlw	-3
 31077  012178  50E3               	movf	plusw1,w,c
 31078  01217A  202A               	addwfc	btemp^0,w,c
 31079  01217C  6E2A               	movwf	btemp^0,c
 31080  01217E  0EFD               	movlw	-3
 31081  012180  0060  F0AB  FFE3   	movff	btemp,plusw1
 31082                           
 31083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 31084  012186  D0AF               	goto	l15778
 31085  012188                     l15750:
 31086                           
 31087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 31088                           ;stkvar	_pp @ sp[(-56)+50]
 31089  012188  0EFA               	movlw	-6
 31090  01218A  006F FF8C  F02A    	movff	plusw1,btemp
 31091  012190  0EFB               	movlw	-5
 31092  012192  50E3               	movf	plusw1,w,c
 31093  012194  102A               	iorwf	btemp^0,w,c
 31094  012196  A4D8               	btfss	status,2,c
 31095  012198  D070               	goto	l15770
 31096                           
 31097                           ;stkvar	_ne @ sp[(-56)+46]
 31098  01219A  0EF7               	movlw	-9
 31099  01219C  AEE3               	btfss	plusw1,7,c
 31100  01219E  D06D               	goto	l15770
 31101                           
 31102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 31103                           ;stkvar	_n @ sp[(-56)+32]
 31104  0121A0  0EE8               	movlw	-24
 31105  0121A2  006F FF8C  F034    	movff	plusw1,btemp+10
 31106  0121A8  0EE9               	movlw	-23
 31107  0121AA  006F FF8C  F035    	movff	plusw1,btemp+11
 31108  0121B0  0E54               	movlw	low _dbuf
 31109  0121B2  2434               	addwf	(btemp+10)^0,w,c
 31110  0121B4  6ED9               	movwf	fsr2l,c
 31111  0121B6  0E03               	movlw	high _dbuf
 31112  0121B8  2035               	addwfc	(btemp+11)^0,w,c
 31113  0121BA  6EDA               	movwf	fsr2h,c
 31114  0121BC  0E2E               	movlw	46
 31115  0121BE  6EDF               	movwf	indf2,c
 31116                           
 31117                           ;stkvar	_n @ sp[(-56)+32]
 31118  0121C0  0EE8               	movlw	-24
 31119  0121C2  50E3               	movf	plusw1,w,c
 31120  0121C4  0F01               	addlw	1
 31121  0121C6  6E2A               	movwf	btemp^0,c
 31122  0121C8  0EE8               	movlw	-24
 31123  0121CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31124  0121D0  6A2A               	clrf	btemp^0,c
 31125  0121D2  0EE9               	movlw	-23
 31126  0121D4  50E3               	movf	plusw1,w,c
 31127  0121D6  202A               	addwfc	btemp^0,w,c
 31128  0121D8  6E2A               	movwf	btemp^0,c
 31129  0121DA  0EE9               	movlw	-23
 31130  0121DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31131                           
 31132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 31133                           ;stkvar	_w @ sp[(-56)+38]
 31134  0121E2  50E1               	movf	fsr1l,w,c
 31135  0121E4  0FEE               	addlw	-18
 31136  0121E6  6ED9               	movwf	fsr2l,c
 31137  0121E8  50E2               	movf	fsr1h,w,c
 31138  0121EA  6EDA               	movwf	fsr2h,c
 31139  0121EC  0EFF               	movlw	255
 31140  0121EE  22DA               	addwfc	fsr2h,f,c
 31141  0121F0  06DE               	decf	postinc2,f,c
 31142  0121F2  0E00               	movlw	0
 31143  0121F4  5ADD               	subwfb	postdec2,f,c
 31144                           
 31145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 31146  0121F6  0E01               	movlw	1
 31147  0121F8  6E34               	movwf	(btemp+10)^0,c
 31148  0121FA  0E00               	movlw	0
 31149  0121FC  6E35               	movwf	(btemp+11)^0,c
 31150                           
 31151                           ;stkvar	_pp @ sp[(-56)+50]
 31152  0121FE  0EFA               	movlw	-6
 31153  012200  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31154  012206  0EFB               	movlw	-5
 31155  012208  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31156  01220E  D035               	goto	l15770
 31157  012210                     l15762:
 31158                           
 31159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 31160                           ;stkvar	_n @ sp[(-56)+32]
 31161  012210  0EE8               	movlw	-24
 31162  012212  006F FF8C  F034    	movff	plusw1,btemp+10
 31163  012218  0EE9               	movlw	-23
 31164  01221A  006F FF8C  F035    	movff	plusw1,btemp+11
 31165  012220  0E54               	movlw	low _dbuf
 31166  012222  2434               	addwf	(btemp+10)^0,w,c
 31167  012224  6ED9               	movwf	fsr2l,c
 31168  012226  0E03               	movlw	high _dbuf
 31169  012228  2035               	addwfc	(btemp+11)^0,w,c
 31170  01222A  6EDA               	movwf	fsr2h,c
 31171  01222C  0E30               	movlw	48
 31172  01222E  6EDF               	movwf	indf2,c
 31173                           
 31174                           ;stkvar	_n @ sp[(-56)+32]
 31175  012230  0EE8               	movlw	-24
 31176  012232  50E3               	movf	plusw1,w,c
 31177  012234  0F01               	addlw	1
 31178  012236  6E2A               	movwf	btemp^0,c
 31179  012238  0EE8               	movlw	-24
 31180  01223A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31181  012240  6A2A               	clrf	btemp^0,c
 31182  012242  0EE9               	movlw	-23
 31183  012244  50E3               	movf	plusw1,w,c
 31184  012246  202A               	addwfc	btemp^0,w,c
 31185  012248  6E2A               	movwf	btemp^0,c
 31186  01224A  0EE9               	movlw	-23
 31187  01224C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31188                           
 31189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 31190                           ;stkvar	_w @ sp[(-56)+38]
 31191  012252  50E1               	movf	fsr1l,w,c
 31192  012254  0FEE               	addlw	-18
 31193  012256  6ED9               	movwf	fsr2l,c
 31194  012258  50E2               	movf	fsr1h,w,c
 31195  01225A  6EDA               	movwf	fsr2h,c
 31196  01225C  0EFF               	movlw	255
 31197  01225E  22DA               	addwfc	fsr2h,f,c
 31198  012260  06DE               	decf	postinc2,f,c
 31199  012262  0E00               	movlw	0
 31200  012264  5ADD               	subwfb	postdec2,f,c
 31201                           
 31202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 31203                           ;stkvar	_t @ sp[(-56)+52]
 31204  012266  50E1               	movf	fsr1l,w,c
 31205  012268  0FFC               	addlw	-4
 31206  01226A  6ED9               	movwf	fsr2l,c
 31207  01226C  50E2               	movf	fsr1h,w,c
 31208  01226E  6EDA               	movwf	fsr2h,c
 31209  012270  0EFF               	movlw	255
 31210  012272  22DA               	addwfc	fsr2h,f,c
 31211  012274  06DE               	decf	postinc2,f,c
 31212  012276  0E00               	movlw	0
 31213  012278  5ADD               	subwfb	postdec2,f,c
 31214  01227A                     l15770:
 31215                           
 31216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 31217                           ;stkvar	_t @ sp[(-56)+52]
 31218  01227A  0EFC               	movlw	-4
 31219  01227C  006F FF8C  F02A    	movff	plusw1,btemp
 31220  012282  0EFD               	movlw	-3
 31221  012284  50E3               	movf	plusw1,w,c
 31222  012286  102A               	iorwf	btemp^0,w,c
 31223  012288  A4D8               	btfss	status,2,c
 31224  01228A  D7C2               	goto	l15762
 31225                           
 31226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 31227                           ;stkvar	_n @ sp[(-56)+32]
 31228  01228C  0EE8               	movlw	-24
 31229  01228E  006F FF8C  F034    	movff	plusw1,btemp+10
 31230  012294  0EE9               	movlw	-23
 31231  012296  006F FF8C  F035    	movff	plusw1,btemp+11
 31232  01229C  0E54               	movlw	low _dbuf
 31233  01229E  2434               	addwf	(btemp+10)^0,w,c
 31234  0122A0  6ED9               	movwf	fsr2l,c
 31235  0122A2  0E03               	movlw	high _dbuf
 31236  0122A4  2035               	addwfc	(btemp+11)^0,w,c
 31237  0122A6  6EDA               	movwf	fsr2h,c
 31238                           
 31239                           ;stkvar	_d @ sp[(-56)+44]
 31240  0122A8  0EF4               	movlw	-12
 31241  0122AA  50E3               	movf	plusw1,w,c
 31242  0122AC  0F30               	addlw	48
 31243  0122AE  6EDF               	movwf	indf2,c
 31244                           
 31245                           ;stkvar	_n @ sp[(-56)+32]
 31246  0122B0  0EE8               	movlw	-24
 31247  0122B2  50E3               	movf	plusw1,w,c
 31248  0122B4  0F01               	addlw	1
 31249  0122B6  6E2A               	movwf	btemp^0,c
 31250  0122B8  0EE8               	movlw	-24
 31251  0122BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31252  0122C0  6A2A               	clrf	btemp^0,c
 31253  0122C2  0EE9               	movlw	-23
 31254  0122C4  50E3               	movf	plusw1,w,c
 31255  0122C6  202A               	addwfc	btemp^0,w,c
 31256  0122C8  6E2A               	movwf	btemp^0,c
 31257  0122CA  0EE9               	movlw	-23
 31258  0122CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31259                           
 31260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 31261                           ;stkvar	_w @ sp[(-56)+38]
 31262  0122D2  50E1               	movf	fsr1l,w,c
 31263  0122D4  0FEE               	addlw	-18
 31264  0122D6  6ED9               	movwf	fsr2l,c
 31265  0122D8  50E2               	movf	fsr1h,w,c
 31266  0122DA  6EDA               	movwf	fsr2h,c
 31267  0122DC  0EFF               	movlw	255
 31268  0122DE  22DA               	addwfc	fsr2h,f,c
 31269  0122E0  06DE               	decf	postinc2,f,c
 31270  0122E2  0E00               	movlw	0
 31271  0122E4  5ADD               	subwfb	postdec2,f,c
 31272  0122E6                     l15778:
 31273                           
 31274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 31275                           ;stkvar	_u @ sp[(-56)+12]
 31276  0122E6  0ED4               	movlw	-44
 31277  0122E8  006F FF8F FFE6     	movff	plusw1,postinc1
 31278  0122EE  006F FF8F FFE6     	movff	plusw1,postinc1
 31279  0122F4  006F FF8F FFE6     	movff	plusw1,postinc1
 31280  0122FA  006F FF8F FFE6     	movff	plusw1,postinc1
 31281                           
 31282                           ;stkvar	_l @ sp[(-60)+20]
 31283  012300  0ED8               	movlw	-40
 31284  012302  006F FF8F FFE6     	movff	plusw1,postinc1
 31285  012308  006F FF8F FFE6     	movff	plusw1,postinc1
 31286  01230E  006F FF8F FFE6     	movff	plusw1,postinc1
 31287  012314  006F FF8F FFE6     	movff	plusw1,postinc1
 31288  01231A  EC4D  F0B2         	call	___flmul	;wreg free
 31289  01231E  0060  F0AB  FFE6   	movff	btemp,postinc1
 31290  012324  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31291  01232A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31292  012330  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31293                           
 31294                           ;stkvar	_h @ sp[(-60)+24]
 31295  012336  0EDC               	movlw	-36
 31296  012338  006F FF8F FFE6     	movff	plusw1,postinc1
 31297  01233E  006F FF8F FFE6     	movff	plusw1,postinc1
 31298  012344  006F FF8F FFE6     	movff	plusw1,postinc1
 31299  01234A  006F FF8F FFE6     	movff	plusw1,postinc1
 31300  012350  EC54  F00D         	call	___flsub	;wreg free
 31301                           
 31302                           ;stkvar	_h @ sp[(-56)+24]
 31303  012354  0EE0               	movlw	-32
 31304  012356  0060  F0AB  FFE3   	movff	btemp,plusw1
 31305  01235C  0EE1               	movlw	-31
 31306  01235E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31307  012364  0EE2               	movlw	-30
 31308  012366  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31309  01236C  0EE3               	movlw	-29
 31310  01236E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31311                           
 31312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 31313  012374  0E00               	movlw	0
 31314  012376  6EE6               	movwf	postinc1,c
 31315  012378  0E00               	movlw	0
 31316  01237A  6EE6               	movwf	postinc1,c
 31317  01237C  0E20               	movlw	32
 31318  01237E  6EE6               	movwf	postinc1,c
 31319  012380  0E41               	movlw	65
 31320  012382  6EE6               	movwf	postinc1,c
 31321                           
 31322                           ;stkvar	_u @ sp[(-60)+12]
 31323  012384  0ED0               	movlw	-48
 31324  012386  006F FF8F FFE6     	movff	plusw1,postinc1
 31325  01238C  006F FF8F FFE6     	movff	plusw1,postinc1
 31326  012392  006F FF8F FFE6     	movff	plusw1,postinc1
 31327  012398  006F FF8F FFE6     	movff	plusw1,postinc1
 31328  01239E  EC9E  F0BD         	call	___fldiv	;wreg free
 31329                           
 31330                           ;stkvar	_u @ sp[(-56)+12]
 31331  0123A2  0ED4               	movlw	-44
 31332  0123A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31333  0123AA  0ED5               	movlw	-43
 31334  0123AC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31335  0123B2  0ED6               	movlw	-42
 31336  0123B4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31337  0123BA  0ED7               	movlw	-41
 31338  0123BC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31339                           
 31340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 31341                           ;stkvar	_ne @ sp[(-56)+46]
 31342  0123C2  50E1               	movf	fsr1l,w,c
 31343  0123C4  0FF6               	addlw	-10
 31344  0123C6  6ED9               	movwf	fsr2l,c
 31345  0123C8  50E2               	movf	fsr1h,w,c
 31346  0123CA  6EDA               	movwf	fsr2h,c
 31347  0123CC  0EFF               	movlw	255
 31348  0123CE  22DA               	addwfc	fsr2h,f,c
 31349  0123D0  06DE               	decf	postinc2,f,c
 31350  0123D2  0E00               	movlw	0
 31351  0123D4  5ADD               	subwfb	postdec2,f,c
 31352                           
 31353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 31354                           ;stkvar	_i @ sp[(-56)+36]
 31355  0123D6  0EEC               	movlw	-20
 31356  0123D8  50E3               	movf	plusw1,w,c
 31357  0123DA  0F01               	addlw	1
 31358  0123DC  6E2A               	movwf	btemp^0,c
 31359  0123DE  0EEC               	movlw	-20
 31360  0123E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31361  0123E6  6A2A               	clrf	btemp^0,c
 31362  0123E8  0EED               	movlw	-19
 31363  0123EA  50E3               	movf	plusw1,w,c
 31364  0123EC  202A               	addwfc	btemp^0,w,c
 31365  0123EE  6E2A               	movwf	btemp^0,c
 31366  0123F0  0EED               	movlw	-19
 31367  0123F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31368  0123F8                     l15786:
 31369                           
 31370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31371                           ;stkvar	_m @ sp[(-56)+48]
 31372                           ;stkvar	_i @ sp[(-56)+36]
 31373  0123F8  50E1               	movf	fsr1l,w,c
 31374  0123FA  0FEC               	addlw	-20
 31375  0123FC  6ED9               	movwf	fsr2l,c
 31376  0123FE  50E2               	movf	fsr1h,w,c
 31377  012400  6EDA               	movwf	fsr2h,c
 31378  012402  0EFF               	movlw	255
 31379  012404  22DA               	addwfc	fsr2h,f,c
 31380  012406  0EF8               	movlw	-8
 31381  012408  50E3               	movf	plusw1,w,c
 31382  01240A  5CDE               	subwf	postinc2,w,c
 31383  01240C  50DE               	movf	postinc2,w,c
 31384  01240E  0A80               	xorlw	128
 31385  012410  6E2A               	movwf	btemp^0,c
 31386  012412  0EF9               	movlw	-7
 31387  012414  50E3               	movf	plusw1,w,c
 31388  012416  0A80               	xorlw	128
 31389  012418  582A               	subwfb	btemp^0,w,c
 31390  01241A  B0D8               	btfsc	status,0,c
 31391  01241C  D00E               	goto	u15060
 31392                           
 31393                           ;stkvar	_n @ sp[(-56)+32]
 31394  01241E  0EE9               	movlw	-23
 31395  012420  BEE3               	btfsc	plusw1,7,c
 31396  012422  D633               	goto	l15736
 31397  012424  0EE9               	movlw	-23
 31398  012426  50E3               	movf	plusw1,w,c
 31399  012428  E108               	bnz	u15060
 31400  01242A  0EE8               	movlw	-24
 31401  01242C  006F FF8C  F02A    	movff	plusw1,btemp
 31402  012432  0E4B               	movlw	75
 31403  012434  5E2A               	subwf	btemp^0,f,c
 31404  012436  A0D8               	btfss	status,0,c
 31405  012438  D628               	goto	l15736
 31406  01243A                     u15060:
 31407                           
 31408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 31409                           ;stkvar	_pp @ sp[(-56)+50]
 31410  01243A  0EFA               	movlw	-6
 31411  01243C  006F FF8C  F02A    	movff	plusw1,btemp
 31412  012442  0EFB               	movlw	-5
 31413  012444  50E3               	movf	plusw1,w,c
 31414  012446  102A               	iorwf	btemp^0,w,c
 31415  012448  B4D8               	btfsc	status,2,c
 31416  01244A  A84E               	btfss	_flags^0,4,c
 31417  01244C  D021               	goto	l15798
 31418                           
 31419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 31420                           ;stkvar	_n @ sp[(-56)+32]
 31421  01244E  0EE8               	movlw	-24
 31422  012450  006F FF8C  F034    	movff	plusw1,btemp+10
 31423  012456  0EE9               	movlw	-23
 31424  012458  006F FF8C  F035    	movff	plusw1,btemp+11
 31425  01245E  0E54               	movlw	low _dbuf
 31426  012460  2434               	addwf	(btemp+10)^0,w,c
 31427  012462  6ED9               	movwf	fsr2l,c
 31428  012464  0E03               	movlw	high _dbuf
 31429  012466  2035               	addwfc	(btemp+11)^0,w,c
 31430  012468  6EDA               	movwf	fsr2h,c
 31431  01246A  0E2E               	movlw	46
 31432  01246C  6EDF               	movwf	indf2,c
 31433                           
 31434                           ;stkvar	_n @ sp[(-56)+32]
 31435  01246E  0EE8               	movlw	-24
 31436  012470  50E3               	movf	plusw1,w,c
 31437  012472  0F01               	addlw	1
 31438  012474  6E2A               	movwf	btemp^0,c
 31439  012476  0EE8               	movlw	-24
 31440  012478  0060  F0AB  FFE3   	movff	btemp,plusw1
 31441  01247E  6A2A               	clrf	btemp^0,c
 31442  012480  0EE9               	movlw	-23
 31443  012482  50E3               	movf	plusw1,w,c
 31444  012484  202A               	addwfc	btemp^0,w,c
 31445  012486  6E2A               	movwf	btemp^0,c
 31446  012488  0EE9               	movlw	-23
 31447  01248A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31448  012490                     l15798:
 31449                           
 31450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 31451                           ;stkvar	_n @ sp[(-56)+32]
 31452  012490  0EE8               	movlw	-24
 31453  012492  006F FF8C  F034    	movff	plusw1,btemp+10
 31454  012498  0EE9               	movlw	-23
 31455  01249A  006F FF8C  F035    	movff	plusw1,btemp+11
 31456  0124A0  0E54               	movlw	low _dbuf
 31457  0124A2  2434               	addwf	(btemp+10)^0,w,c
 31458  0124A4  6ED9               	movwf	fsr2l,c
 31459  0124A6  0E03               	movlw	high _dbuf
 31460  0124A8  2035               	addwfc	(btemp+11)^0,w,c
 31461  0124AA  6EDA               	movwf	fsr2h,c
 31462  0124AC  0E00               	movlw	0
 31463  0124AE  6EDF               	movwf	indf2,c
 31464                           
 31465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 31466                           ;stkvar	_nmode @ sp[(-56)+55]
 31467  0124B0  0EFF               	movlw	-1
 31468  0124B2  006F FF8C  F02A    	movff	plusw1,btemp
 31469  0124B8  0E65               	movlw	101
 31470  0124BA  182A               	xorwf	btemp^0,w,c
 31471  0124BC  A4D8               	btfss	status,2,c
 31472  0124BE  EFC1  F08B         	goto	l15602
 31473                           
 31474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 31475  0124C2  0E4F               	movlw	79
 31476  0124C4  6E34               	movwf	(btemp+10)^0,c
 31477  0124C6  0E00               	movlw	0
 31478  0124C8  6E35               	movwf	(btemp+11)^0,c
 31479                           
 31480                           ;stkvar	_i @ sp[(-56)+36]
 31481  0124CA  0EEC               	movlw	-20
 31482  0124CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31483  0124D2  0EED               	movlw	-19
 31484  0124D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31485                           
 31486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 31487                           ;stkvar	_i @ sp[(-56)+36]
 31488  0124DA  0EEC               	movlw	-20
 31489  0124DC  006F FF8C  F034    	movff	plusw1,btemp+10
 31490  0124E2  0EED               	movlw	-19
 31491  0124E4  006F FF8C  F035    	movff	plusw1,btemp+11
 31492  0124EA  0E54               	movlw	low _dbuf
 31493  0124EC  2434               	addwf	(btemp+10)^0,w,c
 31494  0124EE  6ED9               	movwf	fsr2l,c
 31495  0124F0  0E03               	movlw	high _dbuf
 31496  0124F2  2035               	addwfc	(btemp+11)^0,w,c
 31497  0124F4  6EDA               	movwf	fsr2h,c
 31498  0124F6  0E00               	movlw	0
 31499  0124F8  6EDF               	movwf	indf2,c
 31500                           
 31501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 31502                           ;stkvar	_sign @ sp[(-56)+42]
 31503  0124FA  0EF2               	movlw	-14
 31504  0124FC  6AE3               	clrf	plusw1,c
 31505  0124FE  0EF3               	movlw	-13
 31506  012500  6AE3               	clrf	plusw1,c
 31507                           
 31508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 31509                           ;stkvar	_e @ sp[(-56)+34]
 31510  012502  0EEB               	movlw	-21
 31511  012504  AEE3               	btfss	plusw1,7,c
 31512  012506  D012               	goto	l15812
 31513                           
 31514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 31515  012508  0E01               	movlw	1
 31516  01250A  6E34               	movwf	(btemp+10)^0,c
 31517  01250C  0E00               	movlw	0
 31518  01250E  6E35               	movwf	(btemp+11)^0,c
 31519                           
 31520                           ;stkvar	_sign @ sp[(-56)+42]
 31521  012510  0EF2               	movlw	-14
 31522  012512  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31523  012518  0EF3               	movlw	-13
 31524  01251A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31525                           
 31526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 31527                           ;stkvar	_e @ sp[(-56)+34]
 31528                           ;stkvar	_e @ sp[(-56)+34]
 31529  012520  0EEA               	movlw	-22
 31530  012522  6CE3               	negf	plusw1,c
 31531  012524  0EEB               	movlw	-21
 31532  012526  1EE3               	comf	plusw1,f,c
 31533  012528  B0D8               	btfsc	status,0,c
 31534  01252A  2AE3               	incf	plusw1,f,c
 31535  01252C                     l15812:
 31536                           
 31537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 31538  01252C  0E02               	movlw	2
 31539  01252E  6E34               	movwf	(btemp+10)^0,c
 31540  012530  0E00               	movlw	0
 31541  012532  6E35               	movwf	(btemp+11)^0,c
 31542                           
 31543                           ;stkvar	_p @ sp[(-56)+40]
 31544  012534  0EF0               	movlw	-16
 31545  012536  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31546  01253C  0EF1               	movlw	-15
 31547  01253E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31548                           
 31549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31550  012544  D051               	goto	l15824
 31551  012546                     l15814:
 31552                           
 31553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 31554                           ;stkvar	_i @ sp[(-56)+36]
 31555  012546  50E1               	movf	fsr1l,w,c
 31556  012548  0FEC               	addlw	-20
 31557  01254A  6ED9               	movwf	fsr2l,c
 31558  01254C  50E2               	movf	fsr1h,w,c
 31559  01254E  6EDA               	movwf	fsr2h,c
 31560  012550  0EFF               	movlw	255
 31561  012552  22DA               	addwfc	fsr2h,f,c
 31562  012554  06DE               	decf	postinc2,f,c
 31563  012556  0E00               	movlw	0
 31564  012558  5ADD               	subwfb	postdec2,f,c
 31565                           
 31566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 31567                           ;stkvar	_i @ sp[(-56)+36]
 31568  01255A  0EEC               	movlw	-20
 31569  01255C  006F FF8C  F034    	movff	plusw1,btemp+10
 31570  012562  0EED               	movlw	-19
 31571  012564  006F FF8C  F035    	movff	plusw1,btemp+11
 31572  01256A  0E54               	movlw	low _dbuf
 31573  01256C  2434               	addwf	(btemp+10)^0,w,c
 31574  01256E  6ED9               	movwf	fsr2l,c
 31575  012570  0E03               	movlw	high _dbuf
 31576  012572  2035               	addwfc	(btemp+11)^0,w,c
 31577  012574  6EDA               	movwf	fsr2h,c
 31578  012576  0E0A               	movlw	10
 31579  012578  6EE6               	movwf	postinc1,c
 31580  01257A  0E00               	movlw	0
 31581  01257C  6EE6               	movwf	postinc1,c
 31582                           
 31583                           ;stkvar	_e @ sp[(-58)+34]
 31584  01257E  0EE8               	movlw	-24
 31585  012580  006F FF8F FFE6     	movff	plusw1,postinc1
 31586  012586  006F FF8F FFE6     	movff	plusw1,postinc1
 31587  01258C  ECA3  F0FA         	call	___awmod	;wreg free
 31588  012590  502A               	movf	btemp^0,w,c
 31589  012592  0F30               	addlw	48
 31590  012594  6EDF               	movwf	indf2,c
 31591                           
 31592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 31593  012596  0E0A               	movlw	10
 31594  012598  6EE6               	movwf	postinc1,c
 31595  01259A  0E00               	movlw	0
 31596  01259C  6EE6               	movwf	postinc1,c
 31597                           
 31598                           ;stkvar	_e @ sp[(-58)+34]
 31599  01259E  0EE8               	movlw	-24
 31600  0125A0  006F FF8F FFE6     	movff	plusw1,postinc1
 31601  0125A6  006F FF8F FFE6     	movff	plusw1,postinc1
 31602  0125AC  EC74  F0F6         	call	___awdiv	;wreg free
 31603                           
 31604                           ;stkvar	_e @ sp[(-56)+34]
 31605  0125B0  0EEA               	movlw	-22
 31606  0125B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31607  0125B8  0EEB               	movlw	-21
 31608  0125BA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31609                           
 31610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 31611                           ;stkvar	_p @ sp[(-56)+40]
 31612  0125C0  50E1               	movf	fsr1l,w,c
 31613  0125C2  0FF0               	addlw	-16
 31614  0125C4  6ED9               	movwf	fsr2l,c
 31615  0125C6  50E2               	movf	fsr1h,w,c
 31616  0125C8  6EDA               	movwf	fsr2h,c
 31617  0125CA  0EFF               	movlw	255
 31618  0125CC  22DA               	addwfc	fsr2h,f,c
 31619  0125CE  06DE               	decf	postinc2,f,c
 31620  0125D0  0E00               	movlw	0
 31621  0125D2  5ADD               	subwfb	postdec2,f,c
 31622                           
 31623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 31624                           ;stkvar	_w @ sp[(-56)+38]
 31625  0125D4  50E1               	movf	fsr1l,w,c
 31626  0125D6  0FEE               	addlw	-18
 31627  0125D8  6ED9               	movwf	fsr2l,c
 31628  0125DA  50E2               	movf	fsr1h,w,c
 31629  0125DC  6EDA               	movwf	fsr2h,c
 31630  0125DE  0EFF               	movlw	255
 31631  0125E0  22DA               	addwfc	fsr2h,f,c
 31632  0125E2  06DE               	decf	postinc2,f,c
 31633  0125E4  0E00               	movlw	0
 31634  0125E6  5ADD               	subwfb	postdec2,f,c
 31635  0125E8                     l15824:
 31636                           
 31637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31638                           ;stkvar	_e @ sp[(-56)+34]
 31639  0125E8  0EEA               	movlw	-22
 31640  0125EA  006F FF8C  F02A    	movff	plusw1,btemp
 31641  0125F0  0EEB               	movlw	-21
 31642  0125F2  50E3               	movf	plusw1,w,c
 31643  0125F4  102A               	iorwf	btemp^0,w,c
 31644  0125F6  A4D8               	btfss	status,2,c
 31645  0125F8  D7A6               	goto	l15814
 31646                           
 31647                           ;stkvar	_p @ sp[(-56)+40]
 31648  0125FA  0EF1               	movlw	-15
 31649  0125FC  BEE3               	btfsc	plusw1,7,c
 31650  0125FE  D007               	goto	u15120
 31651  012600  0EF1               	movlw	-15
 31652  012602  50E3               	movf	plusw1,w,c
 31653  012604  E1A0               	bnz	l15814
 31654  012606  0EF0               	movlw	-16
 31655  012608  04E3               	decf	plusw1,w,c
 31656  01260A  B0D8               	btfsc	status,0,c
 31657  01260C  D79C               	goto	l15814
 31658  01260E                     u15120:
 31659                           
 31660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 31661                           ;stkvar	_i @ sp[(-56)+36]
 31662  01260E  50E1               	movf	fsr1l,w,c
 31663  012610  0FEC               	addlw	-20
 31664  012612  6ED9               	movwf	fsr2l,c
 31665  012614  50E2               	movf	fsr1h,w,c
 31666  012616  6EDA               	movwf	fsr2h,c
 31667  012618  0EFF               	movlw	255
 31668  01261A  22DA               	addwfc	fsr2h,f,c
 31669  01261C  06DE               	decf	postinc2,f,c
 31670  01261E  0E00               	movlw	0
 31671  012620  5ADD               	subwfb	postdec2,f,c
 31672                           
 31673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 31674                           ;stkvar	_sign @ sp[(-56)+42]
 31675  012622  0EF2               	movlw	-14
 31676  012624  006F FF8C  F02A    	movff	plusw1,btemp
 31677  01262A  0EF3               	movlw	-13
 31678  01262C  50E3               	movf	plusw1,w,c
 31679  01262E  102A               	iorwf	btemp^0,w,c
 31680  012630  A4D8               	btfss	status,2,c
 31681  012632  D002               	goto	l15834
 31682  012634  0E2B               	movlw	43
 31683  012636  D001               	goto	L33
 31684  012638                     l15834:
 31685  012638  0E2D               	movlw	45
 31686  01263A                     L33:
 31687  01263A  6E34               	movwf	(btemp+10)^0,c
 31688  01263C  0E00               	movlw	0
 31689  01263E  6E35               	movwf	(btemp+11)^0,c
 31690                           
 31691                           ;stkvar	_efgtoa$6617 @ sp[(-56)+4]
 31692  012640  0ECC               	movlw	-52
 31693  012642  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31694  012648  0ECD               	movlw	-51
 31695  01264A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31696                           
 31697                           ;stkvar	_efgtoa$6617 @ sp[(-56)+4]
 31698                           ;stkvar	_i @ sp[(-56)+36]
 31699  012650  0EEC               	movlw	-20
 31700  012652  006F FF8C  F034    	movff	plusw1,btemp+10
 31701  012658  0EED               	movlw	-19
 31702  01265A  006F FF8C  F035    	movff	plusw1,btemp+11
 31703  012660  0E54               	movlw	low _dbuf
 31704  012662  2434               	addwf	(btemp+10)^0,w,c
 31705  012664  6ED9               	movwf	fsr2l,c
 31706  012666  0E03               	movlw	high _dbuf
 31707  012668  2035               	addwfc	(btemp+11)^0,w,c
 31708  01266A  6EDA               	movwf	fsr2h,c
 31709  01266C  0ECC               	movlw	-52
 31710  01266E  006F FF8F FFDF     	movff	plusw1,indf2
 31711                           
 31712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 31713                           ;stkvar	_w @ sp[(-56)+38]
 31714  012674  50E1               	movf	fsr1l,w,c
 31715  012676  0FEE               	addlw	-18
 31716  012678  6ED9               	movwf	fsr2l,c
 31717  01267A  50E2               	movf	fsr1h,w,c
 31718  01267C  6EDA               	movwf	fsr2h,c
 31719  01267E  0EFF               	movlw	255
 31720  012680  22DA               	addwfc	fsr2h,f,c
 31721  012682  06DE               	decf	postinc2,f,c
 31722  012684  0E00               	movlw	0
 31723  012686  5ADD               	subwfb	postdec2,f,c
 31724                           
 31725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 31726                           ;stkvar	_i @ sp[(-56)+36]
 31727  012688  50E1               	movf	fsr1l,w,c
 31728  01268A  0FEC               	addlw	-20
 31729  01268C  6ED9               	movwf	fsr2l,c
 31730  01268E  50E2               	movf	fsr1h,w,c
 31731  012690  6EDA               	movwf	fsr2h,c
 31732  012692  0EFF               	movlw	255
 31733  012694  22DA               	addwfc	fsr2h,f,c
 31734  012696  06DE               	decf	postinc2,f,c
 31735  012698  0E00               	movlw	0
 31736  01269A  5ADD               	subwfb	postdec2,f,c
 31737  01269C  0EBF               	movlw	191
 31738  01269E  6E34               	movwf	(btemp+10)^0,c
 31739  0126A0  0EFF               	movlw	255
 31740  0126A2  6E35               	movwf	(btemp+11)^0,c
 31741                           
 31742                           ;stkvar	_c @ sp[(-56)+-7]
 31743  0126A4  0EC1               	movlw	-63
 31744  0126A6  50E3               	movf	plusw1,w,c
 31745  0126A8  6E32               	movwf	(btemp+8)^0,c
 31746  0126AA  6A33               	clrf	(btemp+9)^0,c
 31747  0126AC  5034               	movf	(btemp+10)^0,w,c
 31748  0126AE  2632               	addwf	(btemp+8)^0,f,c
 31749  0126B0  5035               	movf	(btemp+11)^0,w,c
 31750  0126B2  2233               	addwfc	(btemp+9)^0,f,c
 31751  0126B4  5033               	movf	(btemp+9)^0,w,c
 31752  0126B6  E106               	bnz	u15140
 31753  0126B8  0E1A               	movlw	26
 31754  0126BA  5C32               	subwf	(btemp+8)^0,w,c
 31755  0126BC  B0D8               	btfsc	status,0,c
 31756  0126BE  D002               	goto	u15140
 31757  0126C0  0E01               	movlw	1
 31758  0126C2  D001               	goto	u15150
 31759  0126C4                     u15140:
 31760  0126C4  0E00               	movlw	0
 31761  0126C6                     u15150:
 31762  0126C6  6E34               	movwf	(btemp+10)^0,c
 31763  0126C8  6A35               	clrf	(btemp+11)^0,c
 31764                           
 31765                           ;stkvar	_efgtoa$6619 @ sp[(-56)+0]
 31766  0126CA  0EC8               	movlw	-56
 31767  0126CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31768  0126D2  0EC9               	movlw	-55
 31769  0126D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31770                           
 31771                           ;stkvar	_efgtoa$6619 @ sp[(-56)+0]
 31772  0126DA  0EC8               	movlw	-56
 31773  0126DC  006F FF8C  F02A    	movff	plusw1,btemp
 31774  0126E2  0EC9               	movlw	-55
 31775  0126E4  50E3               	movf	plusw1,w,c
 31776  0126E6  102A               	iorwf	btemp^0,w,c
 31777  0126E8  A4D8               	btfss	status,2,c
 31778  0126EA  D002               	goto	l15850
 31779  0126EC  0E65               	movlw	101
 31780  0126EE  D001               	goto	L34
 31781  0126F0                     l15850:
 31782  0126F0  0E45               	movlw	69
 31783  0126F2                     L34:
 31784  0126F2  6E34               	movwf	(btemp+10)^0,c
 31785  0126F4  0E00               	movlw	0
 31786  0126F6  6E35               	movwf	(btemp+11)^0,c
 31787                           
 31788                           ;stkvar	_efgtoa$6618 @ sp[(-56)+2]
 31789  0126F8  0ECA               	movlw	-54
 31790  0126FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31791  012700  0ECB               	movlw	-53
 31792  012702  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31793                           
 31794                           ;stkvar	_efgtoa$6618 @ sp[(-56)+2]
 31795                           ;stkvar	_i @ sp[(-56)+36]
 31796  012708  0EEC               	movlw	-20
 31797  01270A  006F FF8C  F034    	movff	plusw1,btemp+10
 31798  012710  0EED               	movlw	-19
 31799  012712  006F FF8C  F035    	movff	plusw1,btemp+11
 31800  012718  0E54               	movlw	low _dbuf
 31801  01271A  2434               	addwf	(btemp+10)^0,w,c
 31802  01271C  6ED9               	movwf	fsr2l,c
 31803  01271E  0E03               	movlw	high _dbuf
 31804  012720  2035               	addwfc	(btemp+11)^0,w,c
 31805  012722  6EDA               	movwf	fsr2h,c
 31806  012724  0ECA               	movlw	-54
 31807  012726  006F FF8F FFDF     	movff	plusw1,indf2
 31808                           
 31809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 31810                           ;stkvar	_w @ sp[(-56)+38]
 31811  01272C  50E1               	movf	fsr1l,w,c
 31812  01272E  0FEE               	addlw	-18
 31813  012730  6ED9               	movwf	fsr2l,c
 31814  012732  50E2               	movf	fsr1h,w,c
 31815  012734  6EDA               	movwf	fsr2h,c
 31816  012736  0EFF               	movlw	255
 31817  012738  22DA               	addwfc	fsr2h,f,c
 31818  01273A  06DE               	decf	postinc2,f,c
 31819  01273C  0E00               	movlw	0
 31820  01273E  5ADD               	subwfb	postdec2,f,c
 31821                           
 31822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 31823                           ;stkvar	_i @ sp[(-56)+36]
 31824  012740  0EEC               	movlw	-20
 31825  012742  006F FF8C  F034    	movff	plusw1,btemp+10
 31826  012748  0EED               	movlw	-19
 31827  01274A  006F FF8C  F035    	movff	plusw1,btemp+11
 31828  012750  0E54               	movlw	low _dbuf
 31829  012752  2434               	addwf	(btemp+10)^0,w,c
 31830  012754  6E32               	movwf	(btemp+8)^0,c
 31831  012756  0E03               	movlw	high _dbuf
 31832  012758  2035               	addwfc	(btemp+11)^0,w,c
 31833  01275A  6E33               	movwf	(btemp+9)^0,c
 31834  01275C  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 31835  012762  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 31836                           
 31837                           ;stkvar	_n @ sp[(-58)+32]
 31838  012768  0E54               	movlw	low _dbuf
 31839  01276A  6E34               	movwf	(btemp+10)^0,c
 31840  01276C  0E03               	movlw	high _dbuf
 31841  01276E  6E35               	movwf	(btemp+11)^0,c
 31842  012770  0EE6               	movlw	-26
 31843  012772  50E3               	movf	plusw1,w,c
 31844  012774  2634               	addwf	(btemp+10)^0,f,c
 31845  012776  0EE7               	movlw	-25
 31846  012778  50E3               	movf	plusw1,w,c
 31847  01277A  2235               	addwfc	(btemp+11)^0,f,c
 31848  01277C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31849  012782  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31850  012788  EC7F  F0FF         	call	_strcpy	;wreg free
 31851  01278C  EFC1  F08B         	goto	l15602
 31852  012790                     l2521:
 31853                           
 31854                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 31855  012790  0EC1               	movlw	193
 31856  012792  26E1               	addwf	fsr1l,f,c
 31857  012794  0EFF               	movlw	255
 31858  012796  22E2               	addwfc	fsr1h,f,c
 31859  012798  0012               	return		;funcret
 31860  01279A                     __end_of_efgtoa:
 31861                           	opt callstack 0
 31862                           
 31863 ;; *************** function _tolower *****************
 31864 ;; Defined at:
 31865 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 31866 ;; Parameters:    Size  Location     Type
 31867 ;;  c               2  [STACK] int 
 31868 ;; Auto vars:     Size  Location     Type
 31869 ;;		None
 31870 ;; Return value:  Size  Location     Type
 31871 ;;                  2  [STACK] int 
 31872 ;; Registers used:
 31873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 31874 ;; Tracked objects:
 31875 ;;		On entry : 0/0
 31876 ;;		On exit  : 0/0
 31877 ;;		Unchanged: 0/0
 31878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31883 ;;Total ram usage:        0 bytes
 31884 ;; Hardware stack levels used:    1
 31885 ;; Hardware stack levels required when called:   16
 31886 ;; This function calls:
 31887 ;;		_isupper
 31888 ;; This function is called by:
 31889 ;;		_efgtoa
 31890 ;;		_vfpfcnvrt
 31891 ;; This function uses a reentrant model
 31892 ;;
 31893                           
 31894                           	psect	text104
 31895  000E34                     __ptext104:
 31896                           	opt callstack 0
 31897  000E34                     _tolower:
 31898                           	opt callstack 0
 31899                           
 31900                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31901  000E34  52E6               	movf	postinc1,f,c
 31902  000E36  52E6               	movf	postinc1,f,c
 31903                           
 31904                           ;stkvar	_c @ sp[(-2)+-2]
 31905                           
 31906                           ;incstack = 0
 31907 ;; hardware stack exceeded
 31908  000E38  0EFC               	movlw	-4
 31909  000E3A  50E3               	movf	plusw1,w,c
 31910  000E3C  0FBF               	addlw	191
 31911  000E3E  6E34               	movwf	(btemp+10)^0,c
 31912  000E40  0EFD               	movlw	-3
 31913  000E42  006F FF8C  F035    	movff	plusw1,btemp+11
 31914  000E48  0EFF               	movlw	255
 31915  000E4A  2235               	addwfc	(btemp+11)^0,f,c
 31916  000E4C  5035               	movf	(btemp+11)^0,w,c
 31917  000E4E  E106               	bnz	u7810
 31918  000E50  0E1A               	movlw	26
 31919  000E52  5C34               	subwf	(btemp+10)^0,w,c
 31920  000E54  B0D8               	btfsc	status,0,c
 31921  000E56  D002               	goto	u7810
 31922  000E58  0E01               	movlw	1
 31923  000E5A  D001               	goto	u7820
 31924  000E5C                     u7810:
 31925  000E5C  0E00               	movlw	0
 31926  000E5E                     u7820:
 31927  000E5E  6E34               	movwf	(btemp+10)^0,c
 31928  000E60  6A35               	clrf	(btemp+11)^0,c
 31929                           
 31930                           ;stkvar	_tolower$7573 @ sp[(-2)+0]
 31931  000E62  0EFE               	movlw	-2
 31932  000E64  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31933  000E6A  0EFF               	movlw	-1
 31934  000E6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31935                           
 31936                           ;stkvar	_tolower$7573 @ sp[(-2)+0]
 31937  000E72  0EFE               	movlw	-2
 31938  000E74  006F FF8C  F02A    	movff	plusw1,btemp
 31939  000E7A  0EFF               	movlw	-1
 31940  000E7C  50E3               	movf	plusw1,w,c
 31941  000E7E  102A               	iorwf	btemp^0,w,c
 31942  000E80  B4D8               	btfsc	status,2,c
 31943  000E82  D00D               	goto	l10086
 31944                           
 31945                           ;stkvar	_c @ sp[(-2)+-2]
 31946  000E84  0EFC               	movlw	-4
 31947  000E86  006F FF8C  F02A    	movff	plusw1,btemp
 31948  000E8C  0EFD               	movlw	-3
 31949  000E8E  006F FF8C  F02B    	movff	plusw1,btemp+1
 31950  000E94  0E20               	movlw	32
 31951  000E96  122A               	iorwf	btemp^0,f,c
 31952  000E98  0E00               	movlw	0
 31953  000E9A  122B               	iorwf	(btemp+1)^0,f,c
 31954  000E9C  D008               	goto	l3823
 31955  000E9E                     l10086:
 31956                           
 31957                           ;stkvar	_c @ sp[(-2)+-2]
 31958  000E9E  0EFC               	movlw	-4
 31959  000EA0  006F FF8C  F02A    	movff	plusw1,btemp
 31960  000EA6  0EFD               	movlw	-3
 31961  000EA8  006F FF8C  F02B    	movff	plusw1,btemp+1
 31962  000EAE                     l3823:
 31963                           
 31964                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 31965  000EAE  52E5               	movf	postdec1,f,c
 31966  000EB0  52E5               	movf	postdec1,f,c
 31967  000EB2  52E5               	movf	postdec1,f,c
 31968  000EB4  52E5               	movf	postdec1,f,c
 31969  000EB6  0012               	return		;funcret
 31970  000EB8                     __end_of_tolower:
 31971                           	opt callstack 0
 31972                           
 31973 ;; *************** function _isupper *****************
 31974 ;; Defined at:
 31975 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 31976 ;; Parameters:    Size  Location     Type
 31977 ;;  c               2  [STACK] int 
 31978 ;; Auto vars:     Size  Location     Type
 31979 ;;		None
 31980 ;; Return value:  Size  Location     Type
 31981 ;;                  2  [STACK] int 
 31982 ;; Registers used:
 31983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 31984 ;; Tracked objects:
 31985 ;;		On entry : 0/0
 31986 ;;		On exit  : 0/0
 31987 ;;		Unchanged: 0/0
 31988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31993 ;;Total ram usage:        0 bytes
 31994 ;; Hardware stack levels used:    1
 31995 ;; Hardware stack levels required when called:   15
 31996 ;; This function calls:
 31997 ;;		Nothing
 31998 ;; This function is called by:
 31999 ;;		_efgtoa
 32000 ;;		_xtoa
 32001 ;;		_vfpfcnvrt
 32002 ;;		_tolower
 32003 ;; This function uses a reentrant model
 32004 ;;
 32005                           
 32006                           	psect	text105
 32007  001FA6                     __ptext105:
 32008                           	opt callstack 0
 32009  001FA6                     _isupper:
 32010                           	opt callstack 0
 32011                           
 32012                           ;stkvar	_c @ sp[(0)+-2]
 32013                           
 32014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32015                           ;incstack = 0
 32016 ;; hardware stack exceeded
 32017  001FA6  0EFE               	movlw	-2
 32018  001FA8  50E3               	movf	plusw1,w,c
 32019  001FAA  0FBF               	addlw	191
 32020  001FAC  6E34               	movwf	(btemp+10)^0,c
 32021  001FAE  0EFF               	movlw	-1
 32022  001FB0  006F FF8C  F035    	movff	plusw1,btemp+11
 32023  001FB6  0EFF               	movlw	255
 32024  001FB8  2235               	addwfc	(btemp+11)^0,f,c
 32025  001FBA  5035               	movf	(btemp+11)^0,w,c
 32026  001FBC  E106               	bnz	u7150
 32027  001FBE  0E1A               	movlw	26
 32028  001FC0  5C34               	subwf	(btemp+10)^0,w,c
 32029  001FC2  B0D8               	btfsc	status,0,c
 32030  001FC4  D002               	goto	u7150
 32031  001FC6  0E01               	movlw	1
 32032  001FC8  D001               	goto	u7160
 32033  001FCA                     u7150:
 32034  001FCA  0E00               	movlw	0
 32035  001FCC                     u7160:
 32036  001FCC  6E2A               	movwf	btemp^0,c
 32037  001FCE  6A2B               	clrf	(btemp+1)^0,c
 32038                           
 32039                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32040  001FD0  52E5               	movf	postdec1,f,c
 32041  001FD2  52E5               	movf	postdec1,f,c
 32042  001FD4  0012               	return		;funcret
 32043  001FD6                     __end_of_isupper:
 32044                           	opt callstack 0
 32045                           
 32046 ;; *************** function _strcpy *****************
 32047 ;; Defined at:
 32048 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 32049 ;; Parameters:    Size  Location     Type
 32050 ;;  dest            2  [STACK] PTR unsigned char 
 32051 ;;		 -> dbuf(80), 
 32052 ;;  src             2  [STACK] PTR const unsigned char 
 32053 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 32054 ;;		 -> dbuf(80), 
 32055 ;; Auto vars:     Size  Location     Type
 32056 ;;  d               2  [STACK] PTR unsigned char 
 32057 ;;		 -> dbuf(80), 
 32058 ;;  s               2  [STACK] PTR const unsigned char 
 32059 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 32060 ;;		 -> dbuf(80), 
 32061 ;; Return value:  Size  Location     Type
 32062 ;;                  2  [STACK] PTR unsigned char 
 32063 ;; Registers used:
 32064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 32065 ;; Tracked objects:
 32066 ;;		On entry : 0/0
 32067 ;;		On exit  : 0/0
 32068 ;;		Unchanged: 0/0
 32069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32074 ;;Total ram usage:        0 bytes
 32075 ;; Hardware stack levels used:    1
 32076 ;; Hardware stack levels required when called:   15
 32077 ;; This function calls:
 32078 ;;		Nothing
 32079 ;; This function is called by:
 32080 ;;		_efgtoa
 32081 ;; This function uses a reentrant model
 32082 ;;
 32083                           
 32084                           	psect	text106
 32085  01FEFE                     __ptext106:
 32086                           	opt callstack 0
 32087  01FEFE                     _strcpy:
 32088                           	opt callstack 0
 32089                           
 32090                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32091  01FEFE  52E6               	movf	postinc1,f,c
 32092  01FF00  52E6               	movf	postinc1,f,c
 32093  01FF02  52E6               	movf	postinc1,f,c
 32094  01FF04  52E6               	movf	postinc1,f,c
 32095                           
 32096                           ;stkvar	_src @ sp[(-4)+-4]
 32097                           
 32098                           ;incstack = 0
 32099 ;; hardware stack exceeded
 32100  01FF06  0EF8               	movlw	-8
 32101  01FF08  006F FF8C  F034    	movff	plusw1,btemp+10
 32102  01FF0E  0EF9               	movlw	-7
 32103  01FF10  006F FF8C  F035    	movff	plusw1,btemp+11
 32104                           
 32105                           ;stkvar	_s @ sp[(-4)+2]
 32106  01FF16  0EFF               	movlw	-1
 32107  01FF18  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32108  01FF1E  0EFE               	movlw	-2
 32109  01FF20  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32110                           
 32111                           ;stkvar	_dest @ sp[(-4)+-2]
 32112  01FF26  0EFA               	movlw	-6
 32113  01FF28  006F FF8C  F034    	movff	plusw1,btemp+10
 32114  01FF2E  0EFB               	movlw	-5
 32115  01FF30  006F FF8C  F035    	movff	plusw1,btemp+11
 32116                           
 32117                           ;stkvar	_d @ sp[(-4)+0]
 32118  01FF36  0EFD               	movlw	-3
 32119  01FF38  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32120  01FF3E  0EFC               	movlw	-4
 32121  01FF40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32122  01FF46                     l15386:
 32123                           
 32124                           ;stkvar	_s @ sp[(-4)+2]
 32125  01FF46  50E1               	movf	fsr1l,w,c
 32126  01FF48  0FFE               	addlw	-2
 32127  01FF4A  6ED9               	movwf	fsr2l,c
 32128  01FF4C  50E2               	movf	fsr1h,w,c
 32129  01FF4E  6EDA               	movwf	fsr2h,c
 32130  01FF50  0EFF               	movlw	255
 32131  01FF52  22DA               	addwfc	fsr2h,f,c
 32132  01FF54  006F FF7C  F034    	movff	indf2,btemp+10
 32133  01FF5A  0E01               	movlw	1
 32134  01FF5C  26DE               	addwf	postinc2,f,c
 32135  01FF5E  006F FF7C  F035    	movff	indf2,btemp+11
 32136  01FF64  0E00               	movlw	0
 32137  01FF66  22DD               	addwfc	postdec2,f,c
 32138  01FF68  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 32139  01FF6E  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 32140  01FF74  0E00               	movlw	low (__mediumconst shr (0+16))
 32141  01FF76  6EF8               	movwf	tblptru,c
 32142                           
 32143                           ;stkvar	_d @ sp[(-4)+0]
 32144  01FF78  50E1               	movf	fsr1l,w,c
 32145  01FF7A  0FFC               	addlw	-4
 32146  01FF7C  6ED9               	movwf	fsr2l,c
 32147  01FF7E  50E2               	movf	fsr1h,w,c
 32148  01FF80  6EDA               	movwf	fsr2h,c
 32149  01FF82  0EFF               	movlw	255
 32150  01FF84  22DA               	addwfc	fsr2h,f,c
 32151  01FF86  006F FF7C  F034    	movff	indf2,btemp+10
 32152  01FF8C  0E01               	movlw	1
 32153  01FF8E  26DE               	addwf	postinc2,f,c
 32154  01FF90  006F FF7C  F035    	movff	indf2,btemp+11
 32155  01FF96  0E00               	movlw	0
 32156  01FF98  22DD               	addwfc	postdec2,f,c
 32157  01FF9A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 32158  01FFA0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 32159  01FFA6  0E1F               	movlw	(high __ramtop+-1)
 32160  01FFA8  64F7               	cpfsgt	tblptrh,c
 32161  01FFAA  D003               	bra	u14307
 32162  01FFAC  0008               	tblrd		*
 32163  01FFAE  50F5               	movf	tablat,w,c
 32164  01FFB0  D007               	bra	u14300
 32165  01FFB2                     u14307:
 32166  01FFB2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 32167  01FFB8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 32168  01FFBE  50EF               	movf	indf0,w,c
 32169  01FFC0                     u14300:
 32170  01FFC0  6EDF               	movwf	indf2,c
 32171  01FFC2  50DF               	movf	indf2,w,c
 32172  01FFC4  A4D8               	btfss	status,2,c
 32173  01FFC6  D7BF               	goto	l15386
 32174                           
 32175                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 32176  01FFC8  0EF8               	movlw	248
 32177  01FFCA  26E1               	addwf	fsr1l,f,c
 32178  01FFCC  0EFF               	movlw	255
 32179  01FFCE  22E2               	addwfc	fsr1h,f,c
 32180  01FFD0  0012               	return		;funcret
 32181  01FFD2                     __end_of_strcpy:
 32182                           	opt callstack 0
 32183                           
 32184 ;; *************** function _floorf *****************
 32185 ;; Defined at:
 32186 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 32187 ;; Parameters:    Size  Location     Type
 32188 ;;  x               4  [STACK] float 
 32189 ;; Auto vars:     Size  Location     Type
 32190 ;;  u               4  [STACK] struct .
 32191 ;;  m               4  [STACK] unsigned long 
 32192 ;;  e               2  [STACK] int 
 32193 ;; Return value:  Size  Location     Type
 32194 ;;                  4  [STACK] float 
 32195 ;; Registers used:
 32196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 32197 ;; Tracked objects:
 32198 ;;		On entry : 0/0
 32199 ;;		On exit  : 0/0
 32200 ;;		Unchanged: 0/0
 32201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32206 ;;Total ram usage:        0 bytes
 32207 ;; Hardware stack levels used:    1
 32208 ;; Hardware stack levels required when called:   15
 32209 ;; This function calls:
 32210 ;;		Nothing
 32211 ;; This function is called by:
 32212 ;;		_efgtoa
 32213 ;; This function uses a reentrant model
 32214 ;;
 32215                           
 32216                           	psect	text107
 32217  019F04                     __ptext107:
 32218                           	opt callstack 0
 32219  019F04                     _floorf:
 32220                           	opt callstack 0
 32221                           
 32222                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32223  019F04  0E0A               	movlw	10
 32224  019F06  26E1               	addwf	fsr1l,f,c
 32225  019F08  0E00               	movlw	0
 32226  019F0A  22E2               	addwfc	fsr1h,f,c
 32227                           
 32228                           ;incstack = 0
 32229 ;; hardware stack exceeded
 32230  019F0C  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 32231  019F12  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 32232  019F18  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 32233  019F1E  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 32234                           
 32235                           ;stkvar	_u @ sp[(-10)+0]
 32236  019F24  0EF6               	movlw	-10
 32237  019F26  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32238  019F2C  0EF7               	movlw	-9
 32239  019F2E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32240  019F34  0EF8               	movlw	-8
 32241  019F36  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32242  019F3C  0EF9               	movlw	-7
 32243  019F3E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32244                           
 32245                           ;stkvar	_x @ sp[(-10)+-4]
 32246  019F44  0EF2               	movlw	-14
 32247  019F46  006F FF8C  F032    	movff	plusw1,btemp+8
 32248  019F4C  0EF3               	movlw	-13
 32249  019F4E  006F FF8C  F033    	movff	plusw1,btemp+9
 32250  019F54  0EF4               	movlw	-12
 32251  019F56  006F FF8C  F034    	movff	plusw1,btemp+10
 32252  019F5C  0EF5               	movlw	-11
 32253  019F5E  006F FF8C  F035    	movff	plusw1,btemp+11
 32254                           
 32255                           ;stkvar	_u @ sp[(-10)+0]
 32256  019F64  0EF6               	movlw	-10
 32257  019F66  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32258  019F6C  0EF7               	movlw	-9
 32259  019F6E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32260  019F74  0EF8               	movlw	-8
 32261  019F76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32262  019F7C  0EF9               	movlw	-7
 32263  019F7E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32264  019F84  0E81               	movlw	129
 32265  019F86  6E34               	movwf	(btemp+10)^0,c
 32266  019F88  0EFF               	movlw	255
 32267  019F8A  6E35               	movwf	(btemp+11)^0,c
 32268                           
 32269                           ;stkvar	_u @ sp[(-10)+0]
 32270  019F8C  0EF6               	movlw	-10
 32271  019F8E  006F FF8C  F02E    	movff	plusw1,btemp+4
 32272  019F94  0EF7               	movlw	-9
 32273  019F96  006F FF8C  F02F    	movff	plusw1,btemp+5
 32274  019F9C  0EF8               	movlw	-8
 32275  019F9E  006F FF8C  F030    	movff	plusw1,btemp+6
 32276  019FA4  0EF9               	movlw	-7
 32277  019FA6  006F FF8C  F031    	movff	plusw1,btemp+7
 32278  019FAC  0E18               	movlw	24
 32279  019FAE  D005               	goto	u7840
 32280  019FB0                     u7845:
 32281  019FB0  90D8               	bcf	status,0,c
 32282  019FB2  3231               	rrcf	(btemp+7)^0,f,c
 32283  019FB4  3230               	rrcf	(btemp+6)^0,f,c
 32284  019FB6  322F               	rrcf	(btemp+5)^0,f,c
 32285  019FB8  322E               	rrcf	(btemp+4)^0,f,c
 32286  019FBA                     u7840:
 32287  019FBA  2EE8               	decfsz	wreg,f,c
 32288  019FBC  D7F9               	goto	u7845
 32289  019FBE  0060  F0B8  F032   	movff	btemp+4,btemp+8
 32290  019FC4  0060  F0BC  F033   	movff	btemp+5,btemp+9
 32291  019FCA  0EFF               	movlw	255
 32292  019FCC  1632               	andwf	(btemp+8)^0,f,c
 32293  019FCE  0E00               	movlw	0
 32294  019FD0  1633               	andwf	(btemp+9)^0,f,c
 32295  019FD2  5034               	movf	(btemp+10)^0,w,c
 32296  019FD4  2632               	addwf	(btemp+8)^0,f,c
 32297  019FD6  5035               	movf	(btemp+11)^0,w,c
 32298  019FD8  2233               	addwfc	(btemp+9)^0,f,c
 32299                           
 32300                           ;stkvar	_e @ sp[(-10)+8]
 32301  019FDA  0EFE               	movlw	-2
 32302  019FDC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32303  019FE2  0EFF               	movlw	-1
 32304  019FE4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32305                           
 32306                           ;stkvar	_e @ sp[(-10)+8]
 32307  019FEA  0EFF               	movlw	-1
 32308  019FEC  BEE3               	btfsc	plusw1,7,c
 32309  019FEE  D019               	goto	l10100
 32310  019FF0  0EFF               	movlw	-1
 32311  019FF2  50E3               	movf	plusw1,w,c
 32312  019FF4  E108               	bnz	u7850
 32313  019FF6  0EFE               	movlw	-2
 32314  019FF8  006F FF8C  F02A    	movff	plusw1,btemp
 32315  019FFE  0E17               	movlw	23
 32316  01A000  5E2A               	subwf	btemp^0,f,c
 32317  01A002  A0D8               	btfss	status,0,c
 32318  01A004  D00E               	goto	l10100
 32319  01A006                     u7850:
 32320                           
 32321                           ;stkvar	_x @ sp[(-10)+-4]
 32322  01A006  0EF2               	movlw	-14
 32323  01A008  006F FF8C  F02A    	movff	plusw1,btemp
 32324  01A00E  0EF3               	movlw	-13
 32325  01A010  006F FF8C  F02B    	movff	plusw1,btemp+1
 32326  01A016  0EF4               	movlw	-12
 32327  01A018  006F FF8C  F02C    	movff	plusw1,btemp+2
 32328  01A01E  0EF5               	movlw	-11
 32329  01A020  D11F               	goto	L35
 32330  01A022                     l10100:
 32331                           
 32332                           ;stkvar	_e @ sp[(-10)+8]
 32333  01A022  0EFF               	movlw	-1
 32334  01A024  BEE3               	btfsc	plusw1,7,c
 32335  01A026  D0B4               	goto	l10116
 32336                           
 32337                           ;stkvar	_e @ sp[(-10)+8]
 32338  01A028  0EFE               	movlw	-2
 32339  01A02A  006F FF8C  F035    	movff	plusw1,btemp+11
 32340  01A030  0EFF               	movlw	255
 32341  01A032  6E2E               	movwf	(btemp+4)^0,c
 32342  01A034  0EFF               	movlw	255
 32343  01A036  6E2F               	movwf	(btemp+5)^0,c
 32344  01A038  0E7F               	movlw	127
 32345  01A03A  6E30               	movwf	(btemp+6)^0,c
 32346  01A03C  0E00               	movlw	0
 32347  01A03E  6E31               	movwf	(btemp+7)^0,c
 32348  01A040                     u7875:
 32349  01A040  6635               	tstfsz	(btemp+11)^0,c
 32350  01A042  D001               	goto	u7876
 32351  01A044  D007               	goto	u7877
 32352  01A046                     u7876:
 32353  01A046  3431               	rlcf	(btemp+7)^0,w,c
 32354  01A048  3231               	rrcf	(btemp+7)^0,f,c
 32355  01A04A  3230               	rrcf	(btemp+6)^0,f,c
 32356  01A04C  322F               	rrcf	(btemp+5)^0,f,c
 32357  01A04E  322E               	rrcf	(btemp+4)^0,f,c
 32358  01A050  2E35               	decfsz	(btemp+11)^0,f,c
 32359  01A052  D7F6               	goto	u7875
 32360  01A054                     u7877:
 32361                           
 32362                           ;stkvar	_m @ sp[(-10)+4]
 32363  01A054  0EFA               	movlw	-6
 32364  01A056  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 32365  01A05C  0EFB               	movlw	-5
 32366  01A05E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 32367  01A064  0EFC               	movlw	-4
 32368  01A066  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32369  01A06C  0EFD               	movlw	-3
 32370  01A06E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32371                           
 32372                           ;stkvar	_m @ sp[(-10)+4]
 32373                           ;stkvar	_u @ sp[(-10)+0]
 32374  01A074  0EF6               	movlw	-10
 32375  01A076  006F FF8C  F032    	movff	plusw1,btemp+8
 32376  01A07C  0EF7               	movlw	-9
 32377  01A07E  006F FF8C  F033    	movff	plusw1,btemp+9
 32378  01A084  0EF8               	movlw	-8
 32379  01A086  006F FF8C  F034    	movff	plusw1,btemp+10
 32380  01A08C  0EF9               	movlw	-7
 32381  01A08E  006F FF8C  F035    	movff	plusw1,btemp+11
 32382  01A094  0EFA               	movlw	-6
 32383  01A096  50E3               	movf	plusw1,w,c
 32384  01A098  1632               	andwf	(btemp+8)^0,f,c
 32385  01A09A  0EFB               	movlw	-5
 32386  01A09C  50E3               	movf	plusw1,w,c
 32387  01A09E  1633               	andwf	(btemp+9)^0,f,c
 32388  01A0A0  0EFC               	movlw	-4
 32389  01A0A2  50E3               	movf	plusw1,w,c
 32390  01A0A4  1634               	andwf	(btemp+10)^0,f,c
 32391  01A0A6  0EFD               	movlw	-3
 32392  01A0A8  50E3               	movf	plusw1,w,c
 32393  01A0AA  1635               	andwf	(btemp+11)^0,f,c
 32394  01A0AC  5032               	movf	(btemp+8)^0,w,c
 32395  01A0AE  1033               	iorwf	(btemp+9)^0,w,c
 32396  01A0B0  1034               	iorwf	(btemp+10)^0,w,c
 32397  01A0B2  1035               	iorwf	(btemp+11)^0,w,c
 32398  01A0B4  B4D8               	btfsc	status,2,c
 32399  01A0B6  D7A7               	goto	u7850
 32400                           
 32401                           ;stkvar	_u @ sp[(-10)+0]
 32402  01A0B8  0EF6               	movlw	-10
 32403  01A0BA  006F FF8C  F032    	movff	plusw1,btemp+8
 32404  01A0C0  0EF7               	movlw	-9
 32405  01A0C2  006F FF8C  F033    	movff	plusw1,btemp+9
 32406  01A0C8  0EF8               	movlw	-8
 32407  01A0CA  006F FF8C  F034    	movff	plusw1,btemp+10
 32408  01A0D0  0EF9               	movlw	-7
 32409  01A0D2  006F FF8C  F035    	movff	plusw1,btemp+11
 32410  01A0D8  0E20               	movlw	32
 32411  01A0DA  D005               	goto	u7890
 32412  01A0DC                     u7895:
 32413  01A0DC  90D8               	bcf	status,0,c
 32414  01A0DE  3235               	rrcf	(btemp+11)^0,f,c
 32415  01A0E0  3234               	rrcf	(btemp+10)^0,f,c
 32416  01A0E2  3233               	rrcf	(btemp+9)^0,f,c
 32417  01A0E4  3232               	rrcf	(btemp+8)^0,f,c
 32418  01A0E6                     u7890:
 32419  01A0E6  2EE8               	decfsz	wreg,f,c
 32420  01A0E8  D7F9               	goto	u7895
 32421  01A0EA  5032               	movf	(btemp+8)^0,w,c
 32422  01A0EC  B4D8               	btfsc	status,2,c
 32423  01A0EE  D028               	goto	l10114
 32424                           
 32425                           ;stkvar	_m @ sp[(-10)+4]
 32426                           ;stkvar	_u @ sp[(-10)+0]
 32427  01A0F0  0EF6               	movlw	-10
 32428  01A0F2  50E3               	movf	plusw1,w,c
 32429  01A0F4  6E2A               	movwf	btemp^0,c
 32430  01A0F6  0EFA               	movlw	-6
 32431  01A0F8  50E3               	movf	plusw1,w,c
 32432  01A0FA  262A               	addwf	btemp^0,f,c
 32433  01A0FC  0EF6               	movlw	-10
 32434  01A0FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 32435  01A104  0EF7               	movlw	-9
 32436  01A106  50E3               	movf	plusw1,w,c
 32437  01A108  6E2A               	movwf	btemp^0,c
 32438  01A10A  0EFB               	movlw	-5
 32439  01A10C  50E3               	movf	plusw1,w,c
 32440  01A10E  222A               	addwfc	btemp^0,f,c
 32441  01A110  0EF7               	movlw	-9
 32442  01A112  0060  F0AB  FFE3   	movff	btemp,plusw1
 32443  01A118  0EF8               	movlw	-8
 32444  01A11A  50E3               	movf	plusw1,w,c
 32445  01A11C  6E2A               	movwf	btemp^0,c
 32446  01A11E  0EFC               	movlw	-4
 32447  01A120  50E3               	movf	plusw1,w,c
 32448  01A122  222A               	addwfc	btemp^0,f,c
 32449  01A124  0EF8               	movlw	-8
 32450  01A126  0060  F0AB  FFE3   	movff	btemp,plusw1
 32451  01A12C  0EF9               	movlw	-7
 32452  01A12E  50E3               	movf	plusw1,w,c
 32453  01A130  6E2A               	movwf	btemp^0,c
 32454  01A132  0EFD               	movlw	-3
 32455  01A134  50E3               	movf	plusw1,w,c
 32456  01A136  222A               	addwfc	btemp^0,f,c
 32457  01A138  0EF9               	movlw	-7
 32458  01A13A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32459  01A140                     l10114:
 32460                           
 32461                           ;stkvar	_m @ sp[(-10)+4]
 32462  01A140  0EFA               	movlw	-6
 32463  01A142  006F FF8C  F032    	movff	plusw1,btemp+8
 32464  01A148  0EFB               	movlw	-5
 32465  01A14A  006F FF8C  F033    	movff	plusw1,btemp+9
 32466  01A150  0EFC               	movlw	-4
 32467  01A152  006F FF8C  F034    	movff	plusw1,btemp+10
 32468  01A158  0EFD               	movlw	-3
 32469  01A15A  006F FF8C  F035    	movff	plusw1,btemp+11
 32470  01A160  1C32               	comf	(btemp+8)^0,w,c
 32471  01A162  6E2E               	movwf	(btemp+4)^0,c
 32472  01A164  1C33               	comf	(btemp+9)^0,w,c
 32473  01A166  6E2F               	movwf	(btemp+5)^0,c
 32474  01A168  1C34               	comf	(btemp+10)^0,w,c
 32475  01A16A  6E30               	movwf	(btemp+6)^0,c
 32476  01A16C  1C35               	comf	(btemp+11)^0,w,c
 32477  01A16E  6E31               	movwf	(btemp+7)^0,c
 32478                           
 32479                           ;stkvar	_u @ sp[(-10)+0]
 32480  01A170  50E1               	movf	fsr1l,w,c
 32481  01A172  0FF6               	addlw	-10
 32482  01A174  6ED9               	movwf	fsr2l,c
 32483  01A176  50E2               	movf	fsr1h,w,c
 32484  01A178  6EDA               	movwf	fsr2h,c
 32485  01A17A  0EFF               	movlw	255
 32486  01A17C  22DA               	addwfc	fsr2h,f,c
 32487  01A17E  502E               	movf	(btemp+4)^0,w,c
 32488  01A180  16DE               	andwf	postinc2,f,c
 32489  01A182  502F               	movf	(btemp+5)^0,w,c
 32490  01A184  16DE               	andwf	postinc2,f,c
 32491  01A186  5030               	movf	(btemp+6)^0,w,c
 32492  01A188  16DE               	andwf	postinc2,f,c
 32493  01A18A  5031               	movf	(btemp+7)^0,w,c
 32494  01A18C  16DE               	andwf	postinc2,f,c
 32495  01A18E  D05B               	goto	l10124
 32496  01A190                     l10116:
 32497                           
 32498                           ;stkvar	_u @ sp[(-10)+0]
 32499  01A190  0EF6               	movlw	-10
 32500  01A192  006F FF8C  F032    	movff	plusw1,btemp+8
 32501  01A198  0EF7               	movlw	-9
 32502  01A19A  006F FF8C  F033    	movff	plusw1,btemp+9
 32503  01A1A0  0EF8               	movlw	-8
 32504  01A1A2  006F FF8C  F034    	movff	plusw1,btemp+10
 32505  01A1A8  0EF9               	movlw	-7
 32506  01A1AA  006F FF8C  F035    	movff	plusw1,btemp+11
 32507  01A1B0  0E20               	movlw	32
 32508  01A1B2  D005               	goto	u7910
 32509  01A1B4                     u7915:
 32510  01A1B4  90D8               	bcf	status,0,c
 32511  01A1B6  3235               	rrcf	(btemp+11)^0,f,c
 32512  01A1B8  3234               	rrcf	(btemp+10)^0,f,c
 32513  01A1BA  3233               	rrcf	(btemp+9)^0,f,c
 32514  01A1BC  3232               	rrcf	(btemp+8)^0,f,c
 32515  01A1BE                     u7910:
 32516  01A1BE  2EE8               	decfsz	wreg,f,c
 32517  01A1C0  D7F9               	goto	u7915
 32518  01A1C2  6632               	tstfsz	(btemp+8)^0,c
 32519  01A1C4  D009               	goto	l10120
 32520                           
 32521                           ;stkvar	_u @ sp[(-10)+0]
 32522  01A1C6  0EF6               	movlw	-10
 32523  01A1C8  6AE3               	clrf	plusw1,c
 32524  01A1CA  0EF7               	movlw	-9
 32525  01A1CC  6AE3               	clrf	plusw1,c
 32526  01A1CE  0EF8               	movlw	-8
 32527  01A1D0  6AE3               	clrf	plusw1,c
 32528  01A1D2  0EF9               	movlw	-7
 32529  01A1D4  6AE3               	clrf	plusw1,c
 32530  01A1D6  D037               	goto	l10124
 32531  01A1D8                     l10120:
 32532                           
 32533                           ;stkvar	_u @ sp[(-10)+0]
 32534  01A1D8  0EF6               	movlw	-10
 32535  01A1DA  006F FF8C  F032    	movff	plusw1,btemp+8
 32536  01A1E0  0EF7               	movlw	-9
 32537  01A1E2  006F FF8C  F033    	movff	plusw1,btemp+9
 32538  01A1E8  0EF8               	movlw	-8
 32539  01A1EA  006F FF8C  F034    	movff	plusw1,btemp+10
 32540  01A1F0  0EF9               	movlw	-7
 32541  01A1F2  006F FF8C  F035    	movff	plusw1,btemp+11
 32542  01A1F8  90D8               	bcf	status,0,c
 32543  01A1FA  3432               	rlcf	(btemp+8)^0,w,c
 32544  01A1FC  6E2E               	movwf	(btemp+4)^0,c
 32545  01A1FE  3433               	rlcf	(btemp+9)^0,w,c
 32546  01A200  6E2F               	movwf	(btemp+5)^0,c
 32547  01A202  3434               	rlcf	(btemp+10)^0,w,c
 32548  01A204  6E30               	movwf	(btemp+6)^0,c
 32549  01A206  3435               	rlcf	(btemp+11)^0,w,c
 32550  01A208  6E31               	movwf	(btemp+7)^0,c
 32551  01A20A  502E               	movf	(btemp+4)^0,w,c
 32552  01A20C  102F               	iorwf	(btemp+5)^0,w,c
 32553  01A20E  1030               	iorwf	(btemp+6)^0,w,c
 32554  01A210  1031               	iorwf	(btemp+7)^0,w,c
 32555  01A212  B4D8               	btfsc	status,2,c
 32556  01A214  D018               	goto	l10124
 32557  01A216  0E00               	movlw	0
 32558  01A218  6E32               	movwf	(btemp+8)^0,c
 32559  01A21A  0E00               	movlw	0
 32560  01A21C  6E33               	movwf	(btemp+9)^0,c
 32561  01A21E  0E80               	movlw	128
 32562  01A220  6E34               	movwf	(btemp+10)^0,c
 32563  01A222  0EBF               	movlw	191
 32564  01A224  6E35               	movwf	(btemp+11)^0,c
 32565                           
 32566                           ;stkvar	_u @ sp[(-10)+0]
 32567  01A226  0EF6               	movlw	-10
 32568  01A228  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32569  01A22E  0EF7               	movlw	-9
 32570  01A230  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32571  01A236  0EF8               	movlw	-8
 32572  01A238  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32573  01A23E  0EF9               	movlw	-7
 32574  01A240  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32575  01A246                     l10124:
 32576                           
 32577                           ;stkvar	_u @ sp[(-10)+0]
 32578  01A246  0EF6               	movlw	-10
 32579  01A248  006F FF8C  F02A    	movff	plusw1,btemp
 32580  01A24E  0EF7               	movlw	-9
 32581  01A250  006F FF8C  F02B    	movff	plusw1,btemp+1
 32582  01A256  0EF8               	movlw	-8
 32583  01A258  006F FF8C  F02C    	movff	plusw1,btemp+2
 32584  01A25E  0EF9               	movlw	-7
 32585  01A260                     L35:
 32586  01A260  006F FF8C  F02D    	movff	plusw1,btemp+3
 32587                           
 32588                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32589  01A266  0EF2               	movlw	242
 32590  01A268  26E1               	addwf	fsr1l,f,c
 32591  01A26A  0EFF               	movlw	255
 32592  01A26C  22E2               	addwfc	fsr1h,f,c
 32593  01A26E  0012               	return		;funcret
 32594  01A270                     __end_of_floorf:
 32595                           	opt callstack 0
 32596                           
 32597 ;; *************** function ___fpclassifyf *****************
 32598 ;; Defined at:
 32599 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 32600 ;; Parameters:    Size  Location     Type
 32601 ;;  x               4  [STACK] float 
 32602 ;; Auto vars:     Size  Location     Type
 32603 ;;  u               4  [STACK] struct .
 32604 ;;  e               2  [STACK] int 
 32605 ;; Return value:  Size  Location     Type
 32606 ;;                  2  [STACK] int 
 32607 ;; Registers used:
 32608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 32609 ;; Tracked objects:
 32610 ;;		On entry : 0/0
 32611 ;;		On exit  : 0/0
 32612 ;;		Unchanged: 0/0
 32613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32618 ;;Total ram usage:        0 bytes
 32619 ;; Hardware stack levels used:    1
 32620 ;; Hardware stack levels required when called:   15
 32621 ;; This function calls:
 32622 ;;		Nothing
 32623 ;; This function is called by:
 32624 ;;		_efgtoa
 32625 ;; This function uses a reentrant model
 32626 ;;
 32627                           
 32628                           	psect	text108
 32629  01DA0A                     __ptext108:
 32630                           	opt callstack 0
 32631  01DA0A                     ___fpclassifyf:
 32632                           	opt callstack 0
 32633                           
 32634                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32635  01DA0A  0E06               	movlw	6
 32636  01DA0C  26E1               	addwf	fsr1l,f,c
 32637  01DA0E  0E00               	movlw	0
 32638  01DA10  22E2               	addwfc	fsr1h,f,c
 32639                           
 32640                           ;incstack = 0
 32641 ;; hardware stack exceeded
 32642  01DA12  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 32643  01DA18  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 32644  01DA1E  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 32645  01DA24  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 32646                           
 32647                           ;stkvar	_u @ sp[(-6)+0]
 32648  01DA2A  0EFA               	movlw	-6
 32649  01DA2C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32650  01DA32  0EFB               	movlw	-5
 32651  01DA34  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32652  01DA3A  0EFC               	movlw	-4
 32653  01DA3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32654  01DA42  0EFD               	movlw	-3
 32655  01DA44  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32656                           
 32657                           ;stkvar	_x @ sp[(-6)+-4]
 32658  01DA4A  0EF6               	movlw	-10
 32659  01DA4C  006F FF8C  F032    	movff	plusw1,btemp+8
 32660  01DA52  0EF7               	movlw	-9
 32661  01DA54  006F FF8C  F033    	movff	plusw1,btemp+9
 32662  01DA5A  0EF8               	movlw	-8
 32663  01DA5C  006F FF8C  F034    	movff	plusw1,btemp+10
 32664  01DA62  0EF9               	movlw	-7
 32665  01DA64  006F FF8C  F035    	movff	plusw1,btemp+11
 32666                           
 32667                           ;stkvar	_u @ sp[(-6)+0]
 32668  01DA6A  0EFA               	movlw	-6
 32669  01DA6C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32670  01DA72  0EFB               	movlw	-5
 32671  01DA74  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32672  01DA7A  0EFC               	movlw	-4
 32673  01DA7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32674  01DA82  0EFD               	movlw	-3
 32675  01DA84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32676                           
 32677                           ;stkvar	_u @ sp[(-6)+0]
 32678  01DA8A  0EFA               	movlw	-6
 32679  01DA8C  006F FF8C  F032    	movff	plusw1,btemp+8
 32680  01DA92  0EFB               	movlw	-5
 32681  01DA94  006F FF8C  F033    	movff	plusw1,btemp+9
 32682  01DA9A  0EFC               	movlw	-4
 32683  01DA9C  006F FF8C  F034    	movff	plusw1,btemp+10
 32684  01DAA2  0EFD               	movlw	-3
 32685  01DAA4  006F FF8C  F035    	movff	plusw1,btemp+11
 32686  01DAAA  0E18               	movlw	24
 32687  01DAAC  D005               	goto	u7720
 32688  01DAAE                     u7725:
 32689  01DAAE  90D8               	bcf	status,0,c
 32690  01DAB0  3235               	rrcf	(btemp+11)^0,f,c
 32691  01DAB2  3234               	rrcf	(btemp+10)^0,f,c
 32692  01DAB4  3233               	rrcf	(btemp+9)^0,f,c
 32693  01DAB6  3232               	rrcf	(btemp+8)^0,f,c
 32694  01DAB8                     u7720:
 32695  01DAB8  2EE8               	decfsz	wreg,f,c
 32696  01DABA  D7F9               	goto	u7725
 32697  01DABC  0060  F0C8  F030   	movff	btemp+8,btemp+6
 32698  01DAC2  0060  F0CC  F031   	movff	btemp+9,btemp+7
 32699  01DAC8  0EFF               	movlw	255
 32700  01DACA  1630               	andwf	(btemp+6)^0,f,c
 32701  01DACC  0E00               	movlw	0
 32702  01DACE  1631               	andwf	(btemp+7)^0,f,c
 32703                           
 32704                           ;stkvar	_e @ sp[(-6)+4]
 32705  01DAD0  0EFE               	movlw	-2
 32706  01DAD2  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32707  01DAD8  0EFF               	movlw	-1
 32708  01DADA  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32709                           
 32710                           ;stkvar	_e @ sp[(-6)+4]
 32711  01DAE0  0EFE               	movlw	-2
 32712  01DAE2  006F FF8C  F02A    	movff	plusw1,btemp
 32713  01DAE8  0EFF               	movlw	-1
 32714  01DAEA  50E3               	movf	plusw1,w,c
 32715  01DAEC  102A               	iorwf	btemp^0,w,c
 32716  01DAEE  A4D8               	btfss	status,2,c
 32717  01DAF0  D023               	goto	l10062
 32718                           
 32719                           ;stkvar	_u @ sp[(-6)+0]
 32720  01DAF2  0EFA               	movlw	-6
 32721  01DAF4  006F FF8C  F032    	movff	plusw1,btemp+8
 32722  01DAFA  0EFB               	movlw	-5
 32723  01DAFC  006F FF8C  F033    	movff	plusw1,btemp+9
 32724  01DB02  0EFC               	movlw	-4
 32725  01DB04  006F FF8C  F034    	movff	plusw1,btemp+10
 32726  01DB0A  0EFD               	movlw	-3
 32727  01DB0C  006F FF8C  F035    	movff	plusw1,btemp+11
 32728  01DB12  90D8               	bcf	status,0,c
 32729  01DB14  3432               	rlcf	(btemp+8)^0,w,c
 32730  01DB16  6E2E               	movwf	(btemp+4)^0,c
 32731  01DB18  3433               	rlcf	(btemp+9)^0,w,c
 32732  01DB1A  6E2F               	movwf	(btemp+5)^0,c
 32733  01DB1C  3434               	rlcf	(btemp+10)^0,w,c
 32734  01DB1E  6E30               	movwf	(btemp+6)^0,c
 32735  01DB20  3435               	rlcf	(btemp+11)^0,w,c
 32736  01DB22  6E31               	movwf	(btemp+7)^0,c
 32737  01DB24  502E               	movf	(btemp+4)^0,w,c
 32738  01DB26  102F               	iorwf	(btemp+5)^0,w,c
 32739  01DB28  1030               	iorwf	(btemp+6)^0,w,c
 32740  01DB2A  1031               	iorwf	(btemp+7)^0,w,c
 32741  01DB2C  A4D8               	btfss	status,2,c
 32742  01DB2E  D002               	goto	l10058
 32743  01DB30  0E02               	movlw	2
 32744  01DB32  D02E               	goto	L36
 32745  01DB34                     l10058:
 32746  01DB34  0E03               	movlw	3
 32747  01DB36  D02C               	goto	L36
 32748  01DB38                     l10062:
 32749                           
 32750                           ;stkvar	_e @ sp[(-6)+4]
 32751  01DB38  0EFE               	movlw	-2
 32752  01DB3A  28E3               	incf	plusw1,w,c
 32753  01DB3C  E128               	bnz	l10068
 32754  01DB3E  0EFF               	movlw	-1
 32755  01DB40  50E3               	movf	plusw1,w,c
 32756  01DB42  A4D8               	btfss	status,2,c
 32757  01DB44  D024               	goto	l10068
 32758                           
 32759                           ;stkvar	_u @ sp[(-6)+0]
 32760  01DB46  0EFA               	movlw	-6
 32761  01DB48  006F FF8C  F032    	movff	plusw1,btemp+8
 32762  01DB4E  0EFB               	movlw	-5
 32763  01DB50  006F FF8C  F033    	movff	plusw1,btemp+9
 32764  01DB56  0EFC               	movlw	-4
 32765  01DB58  006F FF8C  F034    	movff	plusw1,btemp+10
 32766  01DB5E  0EFD               	movlw	-3
 32767  01DB60  006F FF8C  F035    	movff	plusw1,btemp+11
 32768  01DB66  0E09               	movlw	9
 32769  01DB68                     u7765:
 32770  01DB68  90D8               	bcf	status,0,c
 32771  01DB6A  3632               	rlcf	(btemp+8)^0,f,c
 32772  01DB6C  3633               	rlcf	(btemp+9)^0,f,c
 32773  01DB6E  3634               	rlcf	(btemp+10)^0,f,c
 32774  01DB70  3635               	rlcf	(btemp+11)^0,f,c
 32775  01DB72  2EE8               	decfsz	wreg,f,c
 32776  01DB74  D7F9               	goto	u7765
 32777  01DB76  5032               	movf	(btemp+8)^0,w,c
 32778  01DB78  1033               	iorwf	(btemp+9)^0,w,c
 32779  01DB7A  1034               	iorwf	(btemp+10)^0,w,c
 32780  01DB7C  1035               	iorwf	(btemp+11)^0,w,c
 32781  01DB7E  A4D8               	btfss	status,2,c
 32782  01DB80  D002               	goto	u7770
 32783  01DB82  0E01               	movlw	1
 32784  01DB84  D001               	goto	u7780
 32785  01DB86                     u7770:
 32786  01DB86  0E00               	movlw	0
 32787  01DB88                     u7780:
 32788  01DB88  6E2A               	movwf	btemp^0,c
 32789  01DB8A  6A2B               	clrf	(btemp+1)^0,c
 32790  01DB8C  D004               	goto	l3403
 32791  01DB8E                     l10068:
 32792  01DB8E  0E04               	movlw	4
 32793  01DB90                     L36:
 32794  01DB90  6E2A               	movwf	btemp^0,c
 32795  01DB92  0E00               	movlw	0
 32796  01DB94  6E2B               	movwf	(btemp+1)^0,c
 32797  01DB96                     l3403:
 32798                           
 32799                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 32800  01DB96  0EF6               	movlw	246
 32801  01DB98  26E1               	addwf	fsr1l,f,c
 32802  01DB9A  0EFF               	movlw	255
 32803  01DB9C  22E2               	addwfc	fsr1h,f,c
 32804  01DB9E  0012               	return		;funcret
 32805  01DBA0                     __end_of___fpclassifyf:
 32806                           	opt callstack 0
 32807                           
 32808 ;; *************** function ___fltol *****************
 32809 ;; Defined at:
 32810 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 32811 ;; Parameters:    Size  Location     Type
 32812 ;;  f1              4  [STACK] int 
 32813 ;; Auto vars:     Size  Location     Type
 32814 ;;  exp1            1  [STACK] unsigned char 
 32815 ;;  sign1           1  [STACK] unsigned char 
 32816 ;; Return value:  Size  Location     Type
 32817 ;;                  4  [STACK] long 
 32818 ;; Registers used:
 32819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 32820 ;; Tracked objects:
 32821 ;;		On entry : 0/0
 32822 ;;		On exit  : 0/0
 32823 ;;		Unchanged: 0/0
 32824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32829 ;;Total ram usage:        0 bytes
 32830 ;; Hardware stack levels used:    1
 32831 ;; Hardware stack levels required when called:   15
 32832 ;; This function calls:
 32833 ;;		Nothing
 32834 ;; This function is called by:
 32835 ;;		_main
 32836 ;;		_convert_dac_raw
 32837 ;;		_load_hist_data
 32838 ;;		_calc_bsoc
 32839 ;;		_init_bsoc
 32840 ;;		_efgtoa
 32841 ;; This function uses a reentrant model
 32842 ;;
 32843                           
 32844                           	psect	text109
 32845  01E33A                     __ptext109:
 32846                           	opt callstack 0
 32847  01E33A                     ___fltol:
 32848                           	opt callstack 0
 32849                           
 32850                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32851  01E33A  52E6               	movf	postinc1,f,c
 32852  01E33C  52E6               	movf	postinc1,f,c
 32853                           
 32854                           ;stkvar	_f1 @ sp[(-2)+-4]
 32855                           
 32856                           ;incstack = 0
 32857 ;; hardware stack exceeded
 32858  01E33E  0EFA               	movlw	-6
 32859  01E340  006F FF8C  F032    	movff	plusw1,btemp+8
 32860  01E346  0EFB               	movlw	-5
 32861  01E348  006F FF8C  F033    	movff	plusw1,btemp+9
 32862  01E34E  0EFC               	movlw	-4
 32863  01E350  006F FF8C  F034    	movff	plusw1,btemp+10
 32864  01E356  0EFD               	movlw	-3
 32865  01E358  006F FF8C  F035    	movff	plusw1,btemp+11
 32866  01E35E  0E18               	movlw	24
 32867  01E360  D005               	goto	u8990
 32868  01E362                     u8995:
 32869  01E362  90D8               	bcf	status,0,c
 32870  01E364  3235               	rrcf	(btemp+11)^0,f,c
 32871  01E366  3234               	rrcf	(btemp+10)^0,f,c
 32872  01E368  3233               	rrcf	(btemp+9)^0,f,c
 32873  01E36A  3232               	rrcf	(btemp+8)^0,f,c
 32874  01E36C                     u8990:
 32875  01E36C  2EE8               	decfsz	wreg,f,c
 32876  01E36E  D7F9               	goto	u8995
 32877                           
 32878                           ;stkvar	_exp1 @ sp[(-2)+0]
 32879  01E370  0EFE               	movlw	-2
 32880  01E372  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32881  01E378  0EFE               	movlw	-2
 32882  01E37A  50E3               	movf	plusw1,w,c
 32883  01E37C  A4D8               	btfss	status,2,c
 32884  01E37E  D006               	goto	l10714
 32885  01E380                     u9000:
 32886  01E380  0E00               	movlw	0
 32887  01E382  6E2A               	movwf	btemp^0,c
 32888  01E384  6A2B               	clrf	(btemp+1)^0,c
 32889  01E386  6A2C               	clrf	(btemp+2)^0,c
 32890  01E388  6A2D               	clrf	(btemp+3)^0,c
 32891  01E38A  D08B               	goto	l3019
 32892  01E38C                     l10714:
 32893                           
 32894                           ;stkvar	_f1 @ sp[(-2)+-4]
 32895  01E38C  0EFA               	movlw	-6
 32896  01E38E  006F FF8C  F032    	movff	plusw1,btemp+8
 32897  01E394  0EFB               	movlw	-5
 32898  01E396  006F FF8C  F033    	movff	plusw1,btemp+9
 32899  01E39C  0EFC               	movlw	-4
 32900  01E39E  006F FF8C  F034    	movff	plusw1,btemp+10
 32901  01E3A4  0EFD               	movlw	-3
 32902  01E3A6  006F FF8C  F035    	movff	plusw1,btemp+11
 32903  01E3AC  0E20               	movlw	32
 32904  01E3AE  D005               	goto	u9010
 32905  01E3B0                     u9015:
 32906  01E3B0  90D8               	bcf	status,0,c
 32907  01E3B2  3235               	rrcf	(btemp+11)^0,f,c
 32908  01E3B4  3234               	rrcf	(btemp+10)^0,f,c
 32909  01E3B6  3233               	rrcf	(btemp+9)^0,f,c
 32910  01E3B8  3232               	rrcf	(btemp+8)^0,f,c
 32911  01E3BA                     u9010:
 32912  01E3BA  2EE8               	decfsz	wreg,f,c
 32913  01E3BC  D7F9               	goto	u9015
 32914                           
 32915                           ;stkvar	_sign1 @ sp[(-2)+1]
 32916  01E3BE  0EFF               	movlw	-1
 32917  01E3C0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32918                           
 32919                           ;stkvar	_f1 @ sp[(-2)+-4]
 32920  01E3C6  0EFC               	movlw	-4
 32921  01E3C8  8EE3               	bsf	plusw1,7,c
 32922                           
 32923                           ;stkvar	_f1 @ sp[(-2)+-4]
 32924  01E3CA  50E1               	movf	fsr1l,w,c
 32925  01E3CC  0FFA               	addlw	-6
 32926  01E3CE  6ED9               	movwf	fsr2l,c
 32927  01E3D0  50E2               	movf	fsr1h,w,c
 32928  01E3D2  6EDA               	movwf	fsr2h,c
 32929  01E3D4  0EFF               	movlw	255
 32930  01E3D6  22DA               	addwfc	fsr2h,f,c
 32931  01E3D8  0EFF               	movlw	255
 32932  01E3DA  16DE               	andwf	postinc2,f,c
 32933  01E3DC  0EFF               	movlw	255
 32934  01E3DE  16DE               	andwf	postinc2,f,c
 32935  01E3E0  0EFF               	movlw	255
 32936  01E3E2  16DE               	andwf	postinc2,f,c
 32937  01E3E4  0E00               	movlw	0
 32938  01E3E6  16DE               	andwf	postinc2,f,c
 32939                           
 32940                           ;stkvar	_exp1 @ sp[(-2)+0]
 32941  01E3E8  0EFE               	movlw	-2
 32942  01E3EA  006F FF8C  F02A    	movff	plusw1,btemp
 32943  01E3F0  0E96               	movlw	150
 32944  01E3F2  5E2A               	subwf	btemp^0,f,c
 32945  01E3F4  0EFE               	movlw	-2
 32946  01E3F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32947                           
 32948                           ;stkvar	_exp1 @ sp[(-2)+0]
 32949  01E3FC  0EFE               	movlw	-2
 32950  01E3FE  AEE3               	btfss	plusw1,7,c
 32951  01E400  D014               	goto	l10732
 32952                           
 32953                           ;stkvar	_exp1 @ sp[(-2)+0]
 32954  01E402  0EFE               	movlw	-2
 32955  01E404  50E3               	movf	plusw1,w,c
 32956  01E406  0A80               	xorlw	128
 32957  01E408  0F97               	addlw	151
 32958  01E40A  A0D8               	btfss	status,0,c
 32959  01E40C  D7B9               	goto	u9000
 32960  01E40E                     l10730:
 32961                           
 32962                           ;stkvar	_f1 @ sp[(-2)+-4]
 32963  01E40E  90D8               	bcf	status,0,c
 32964  01E410  0EFD               	movlw	-3
 32965  01E412  32E3               	rrcf	plusw1,f,c
 32966  01E414  0EFC               	movlw	-4
 32967  01E416  32E3               	rrcf	plusw1,f,c
 32968  01E418  0EFB               	movlw	-5
 32969  01E41A  32E3               	rrcf	plusw1,f,c
 32970  01E41C  0EFA               	movlw	-6
 32971  01E41E  32E3               	rrcf	plusw1,f,c
 32972                           
 32973                           ;stkvar	_exp1 @ sp[(-2)+0]
 32974  01E420  0EFE               	movlw	-2
 32975  01E422  2AE3               	incf	plusw1,f,c
 32976  01E424  B4D8               	btfsc	status,2,c
 32977  01E426  D018               	goto	u9060
 32978  01E428  D7F2               	goto	l10730
 32979  01E42A                     l10732:
 32980                           
 32981                           ;stkvar	_exp1 @ sp[(-2)+0]
 32982  01E42A  0EFE               	movlw	-2
 32983  01E42C  006F FF8C  F02A    	movff	plusw1,btemp
 32984  01E432  0E1F               	movlw	31
 32985  01E434  642A               	cpfsgt	btemp^0,c
 32986  01E436  D00C               	goto	l10740
 32987  01E438  D7A3               	goto	u9000
 32988  01E43A                     l10738:
 32989                           
 32990                           ;stkvar	_f1 @ sp[(-2)+-4]
 32991  01E43A  90D8               	bcf	status,0,c
 32992  01E43C  0EFA               	movlw	-6
 32993  01E43E  36E3               	rlcf	plusw1,f,c
 32994  01E440  0EFB               	movlw	-5
 32995  01E442  36E3               	rlcf	plusw1,f,c
 32996  01E444  0EFC               	movlw	-4
 32997  01E446  36E3               	rlcf	plusw1,f,c
 32998  01E448  0EFD               	movlw	-3
 32999  01E44A  36E3               	rlcf	plusw1,f,c
 33000                           
 33001                           ;stkvar	_exp1 @ sp[(-2)+0]
 33002  01E44C  0EFE               	movlw	-2
 33003  01E44E  06E3               	decf	plusw1,f,c
 33004  01E450                     l10740:
 33005                           
 33006                           ;stkvar	_exp1 @ sp[(-2)+0]
 33007  01E450  0EFE               	movlw	-2
 33008  01E452  50E3               	movf	plusw1,w,c
 33009  01E454  A4D8               	btfss	status,2,c
 33010  01E456  D7F1               	goto	l10738
 33011  01E458                     u9060:
 33012                           
 33013                           ;stkvar	_sign1 @ sp[(-2)+1]
 33014  01E458  0EFF               	movlw	-1
 33015  01E45A  50E3               	movf	plusw1,w,c
 33016  01E45C  B4D8               	btfsc	status,2,c
 33017  01E45E  D011               	goto	u9080
 33018                           
 33019                           ;stkvar	_f1 @ sp[(-2)+-4]
 33020                           ;stkvar	_f1 @ sp[(-2)+-4]
 33021  01E460  0EFA               	movlw	-6
 33022  01E462  6CE3               	negf	plusw1,c
 33023  01E464  0EFB               	movlw	-5
 33024  01E466  1EE3               	comf	plusw1,f,c
 33025  01E468  0EFC               	movlw	-4
 33026  01E46A  1EE3               	comf	plusw1,f,c
 33027  01E46C  0EFD               	movlw	-3
 33028  01E46E  1EE3               	comf	plusw1,f,c
 33029  01E470  E308               	bnc	u9080
 33030  01E472  0EFB               	movlw	-5
 33031  01E474  2AE3               	incf	plusw1,f,c
 33032  01E476  E305               	bnc	u9080
 33033  01E478  0EFC               	movlw	-4
 33034  01E47A  2AE3               	incf	plusw1,f,c
 33035  01E47C  E302               	bnc	u9080
 33036  01E47E  0EFD               	movlw	-3
 33037  01E480  2AE3               	incf	plusw1,f,c
 33038  01E482                     u9080:
 33039                           
 33040                           ;stkvar	_f1 @ sp[(-2)+-4]
 33041  01E482  0EFA               	movlw	-6
 33042  01E484  006F FF8C  F02A    	movff	plusw1,btemp
 33043  01E48A  0EFB               	movlw	-5
 33044  01E48C  006F FF8C  F02B    	movff	plusw1,btemp+1
 33045  01E492  0EFC               	movlw	-4
 33046  01E494  006F FF8C  F02C    	movff	plusw1,btemp+2
 33047  01E49A  0EFD               	movlw	-3
 33048  01E49C  006F FF8C  F02D    	movff	plusw1,btemp+3
 33049  01E4A2                     l3019:
 33050                           
 33051                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33052  01E4A2  0EFA               	movlw	250
 33053  01E4A4  26E1               	addwf	fsr1l,f,c
 33054  01E4A6  0EFF               	movlw	255
 33055  01E4A8  22E2               	addwfc	fsr1h,f,c
 33056  01E4AA  0012               	return		;funcret
 33057  01E4AC                     __end_of___fltol:
 33058                           	opt callstack 0
 33059                           
 33060 ;; *************** function ___flneg *****************
 33061 ;; Defined at:
 33062 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 33063 ;; Parameters:    Size  Location     Type
 33064 ;;  f1              4  [STACK] long 
 33065 ;; Auto vars:     Size  Location     Type
 33066 ;;		None
 33067 ;; Return value:  Size  Location     Type
 33068 ;;                  4  [STACK] long 
 33069 ;; Registers used:
 33070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 33071 ;; Tracked objects:
 33072 ;;		On entry : 0/0
 33073 ;;		On exit  : 0/0
 33074 ;;		Unchanged: 0/0
 33075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33080 ;;Total ram usage:        0 bytes
 33081 ;; Hardware stack levels used:    1
 33082 ;; Hardware stack levels required when called:   15
 33083 ;; This function calls:
 33084 ;;		Nothing
 33085 ;; This function is called by:
 33086 ;;		_calc_bsoc
 33087 ;;		_efgtoa
 33088 ;; This function uses a reentrant model
 33089 ;;
 33090                           
 33091                           	psect	text110
 33092  0018FC                     __ptext110:
 33093                           	opt callstack 0
 33094  0018FC                     ___flneg:
 33095                           	opt callstack 0
 33096                           
 33097                           ;stkvar	_f1 @ sp[(0)+-4]
 33098                           
 33099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33100                           ;incstack = 0
 33101 ;; hardware stack exceeded
 33102  0018FC  0EFC               	movlw	-4
 33103  0018FE  50E3               	movf	plusw1,w,c
 33104  001900  E10A               	bnz	u8980
 33105  001902  0EFD               	movlw	-3
 33106  001904  50E3               	movf	plusw1,w,c
 33107  001906  E107               	bnz	u8980
 33108  001908  0EFE               	movlw	-2
 33109  00190A  50E3               	movf	plusw1,w,c
 33110  00190C  E104               	bnz	u8980
 33111  00190E  0EFF               	movlw	-1
 33112  001910  50E3               	movf	plusw1,w,c
 33113  001912  B4D8               	btfsc	status,2,c
 33114  001914  D002               	goto	l10704
 33115  001916                     u8980:
 33116                           
 33117                           ;stkvar	_f1 @ sp[(0)+-4]
 33118  001916  0EFF               	movlw	-1
 33119  001918  7EE3               	btg	plusw1,7,c
 33120  00191A                     l10704:
 33121                           
 33122                           ;stkvar	_f1 @ sp[(0)+-4]
 33123  00191A  0EFC               	movlw	-4
 33124  00191C  006F FF8C  F02A    	movff	plusw1,btemp
 33125  001922  0EFD               	movlw	-3
 33126  001924  006F FF8C  F02B    	movff	plusw1,btemp+1
 33127  00192A  0EFE               	movlw	-2
 33128  00192C  006F FF8C  F02C    	movff	plusw1,btemp+2
 33129  001932  0EFF               	movlw	-1
 33130  001934  006F FF8C  F02D    	movff	plusw1,btemp+3
 33131                           
 33132                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33133  00193A  52E5               	movf	postdec1,f,c
 33134  00193C  52E5               	movf	postdec1,f,c
 33135  00193E  52E5               	movf	postdec1,f,c
 33136  001940  52E5               	movf	postdec1,f,c
 33137  001942  0012               	return		;funcret
 33138  001944                     __end_of___flneg:
 33139                           	opt callstack 0
 33140                           
 33141 ;; *************** function ___fleq *****************
 33142 ;; Defined at:
 33143 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 33144 ;; Parameters:    Size  Location     Type
 33145 ;;  ff1             4  [STACK] long 
 33146 ;;  ff2             4  [STACK] long 
 33147 ;; Auto vars:     Size  Location     Type
 33148 ;;		None
 33149 ;; Return value:  Size  Location     Type
 33150 ;;		None               void
 33151 ;; Registers used:
 33152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 33153 ;; Tracked objects:
 33154 ;;		On entry : 0/0
 33155 ;;		On exit  : 0/0
 33156 ;;		Unchanged: 0/0
 33157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33162 ;;Total ram usage:        0 bytes
 33163 ;; Hardware stack levels used:    1
 33164 ;; Hardware stack levels required when called:   15
 33165 ;; This function calls:
 33166 ;;		Nothing
 33167 ;; This function is called by:
 33168 ;;		_efgtoa
 33169 ;; This function uses a reentrant model
 33170 ;;
 33171                           
 33172                           	psect	text111
 33173  000184                     __ptext111:
 33174                           	opt callstack 0
 33175  000184                     ___fleq:
 33176                           	opt callstack 0
 33177                           
 33178                           ;stkvar	_ff1 @ sp[(0)+-4]
 33179                           
 33180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33181                           ;incstack = 0
 33182 ;; hardware stack exceeded
 33183  000184  50E1               	movf	fsr1l,w,c
 33184  000186  0FFC               	addlw	-4
 33185  000188  6ED9               	movwf	fsr2l,c
 33186  00018A  50E2               	movf	fsr1h,w,c
 33187  00018C  6EDA               	movwf	fsr2h,c
 33188  00018E  0EFF               	movlw	255
 33189  000190  22DA               	addwfc	fsr2h,f,c
 33190  000192  0E00               	movlw	0
 33191  000194  14DE               	andwf	postinc2,w,c
 33192  000196  6E32               	movwf	(btemp+8)^0,c
 33193  000198  0E00               	movlw	0
 33194  00019A  14DE               	andwf	postinc2,w,c
 33195  00019C  6E33               	movwf	(btemp+9)^0,c
 33196  00019E  0E80               	movlw	128
 33197  0001A0  14DE               	andwf	postinc2,w,c
 33198  0001A2  6E34               	movwf	(btemp+10)^0,c
 33199  0001A4  0E7F               	movlw	127
 33200  0001A6  14DE               	andwf	postinc2,w,c
 33201  0001A8  6E35               	movwf	(btemp+11)^0,c
 33202  0001AA  5032               	movf	(btemp+8)^0,w,c
 33203  0001AC  1033               	iorwf	(btemp+9)^0,w,c
 33204  0001AE  1034               	iorwf	(btemp+10)^0,w,c
 33205  0001B0  1035               	iorwf	(btemp+11)^0,w,c
 33206  0001B2  A4D8               	btfss	status,2,c
 33207  0001B4  D008               	goto	l10662
 33208                           
 33209                           ;stkvar	_ff1 @ sp[(0)+-4]
 33210  0001B6  0EFC               	movlw	-4
 33211  0001B8  6AE3               	clrf	plusw1,c
 33212  0001BA  0EFD               	movlw	-3
 33213  0001BC  6AE3               	clrf	plusw1,c
 33214  0001BE  0EFE               	movlw	-2
 33215  0001C0  6AE3               	clrf	plusw1,c
 33216  0001C2  0EFF               	movlw	-1
 33217  0001C4  6AE3               	clrf	plusw1,c
 33218  0001C6                     l10662:
 33219                           
 33220                           ;stkvar	_ff2 @ sp[(0)+-8]
 33221  0001C6  50E1               	movf	fsr1l,w,c
 33222  0001C8  0FF8               	addlw	-8
 33223  0001CA  6ED9               	movwf	fsr2l,c
 33224  0001CC  50E2               	movf	fsr1h,w,c
 33225  0001CE  6EDA               	movwf	fsr2h,c
 33226  0001D0  0EFF               	movlw	255
 33227  0001D2  22DA               	addwfc	fsr2h,f,c
 33228  0001D4  0E00               	movlw	0
 33229  0001D6  14DE               	andwf	postinc2,w,c
 33230  0001D8  6E32               	movwf	(btemp+8)^0,c
 33231  0001DA  0E00               	movlw	0
 33232  0001DC  14DE               	andwf	postinc2,w,c
 33233  0001DE  6E33               	movwf	(btemp+9)^0,c
 33234  0001E0  0E80               	movlw	128
 33235  0001E2  14DE               	andwf	postinc2,w,c
 33236  0001E4  6E34               	movwf	(btemp+10)^0,c
 33237  0001E6  0E7F               	movlw	127
 33238  0001E8  14DE               	andwf	postinc2,w,c
 33239  0001EA  6E35               	movwf	(btemp+11)^0,c
 33240  0001EC  5032               	movf	(btemp+8)^0,w,c
 33241  0001EE  1033               	iorwf	(btemp+9)^0,w,c
 33242  0001F0  1034               	iorwf	(btemp+10)^0,w,c
 33243  0001F2  1035               	iorwf	(btemp+11)^0,w,c
 33244  0001F4  A4D8               	btfss	status,2,c
 33245  0001F6  D008               	goto	l10666
 33246                           
 33247                           ;stkvar	_ff2 @ sp[(0)+-8]
 33248  0001F8  0EF8               	movlw	-8
 33249  0001FA  6AE3               	clrf	plusw1,c
 33250  0001FC  0EF9               	movlw	-7
 33251  0001FE  6AE3               	clrf	plusw1,c
 33252  000200  0EFA               	movlw	-6
 33253  000202  6AE3               	clrf	plusw1,c
 33254  000204  0EFB               	movlw	-5
 33255  000206  6AE3               	clrf	plusw1,c
 33256  000208                     l10666:
 33257                           
 33258                           ;stkvar	_ff2 @ sp[(0)+-8]
 33259                           ;stkvar	_ff1 @ sp[(0)+-4]
 33260  000208  50E1               	movf	fsr1l,w,c
 33261  00020A  0FFC               	addlw	-4
 33262  00020C  6ED9               	movwf	fsr2l,c
 33263  00020E  50E2               	movf	fsr1h,w,c
 33264  000210  6EDA               	movwf	fsr2h,c
 33265  000212  0EFF               	movlw	255
 33266  000214  22DA               	addwfc	fsr2h,f,c
 33267  000216  0EF8               	movlw	-8
 33268  000218  50E3               	movf	plusw1,w,c
 33269  00021A  18DE               	xorwf	postinc2,w,c
 33270  00021C  E10D               	bnz	u8920
 33271  00021E  0EF9               	movlw	-7
 33272  000220  50E3               	movf	plusw1,w,c
 33273  000222  18DE               	xorwf	postinc2,w,c
 33274  000224  E109               	bnz	u8920
 33275  000226  0EFA               	movlw	-6
 33276  000228  50E3               	movf	plusw1,w,c
 33277  00022A  18DE               	xorwf	postinc2,w,c
 33278  00022C  E105               	bnz	u8920
 33279  00022E  0EFB               	movlw	-5
 33280  000230  50E3               	movf	plusw1,w,c
 33281  000232  18DE               	xorwf	postinc2,w,c
 33282  000234  B4D8               	btfsc	status,2,c
 33283  000236  D002               	goto	l10670
 33284  000238                     u8920:
 33285  000238  902A               	bcf	btemp& (0+255),0,c
 33286  00023A  D001               	goto	l2981
 33287  00023C                     l10670:
 33288  00023C  802A               	bsf	btemp& (0+255),0,c
 33289  00023E                     l2981:
 33290                           
 33291                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 33292  00023E  0EF8               	movlw	248
 33293  000240  26E1               	addwf	fsr1l,f,c
 33294  000242  0EFF               	movlw	255
 33295  000244  22E2               	addwfc	fsr1h,f,c
 33296  000246  0012               	return		;funcret
 33297  000248                     __end_of___fleq:
 33298                           	opt callstack 0
 33299                           
 33300 ;; *************** function ___awmod *****************
 33301 ;; Defined at:
 33302 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 33303 ;; Parameters:    Size  Location     Type
 33304 ;;  dividend        2  [STACK] int 
 33305 ;;  divisor         2  [STACK] int 
 33306 ;; Auto vars:     Size  Location     Type
 33307 ;;  sign            1  [STACK] unsigned char 
 33308 ;;  counter         1  [STACK] unsigned char 
 33309 ;; Return value:  Size  Location     Type
 33310 ;;                  2  [STACK] int 
 33311 ;; Registers used:
 33312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33313 ;; Tracked objects:
 33314 ;;		On entry : 0/3
 33315 ;;		On exit  : 0/0
 33316 ;;		Unchanged: 0/0
 33317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33322 ;;Total ram usage:        0 bytes
 33323 ;; Hardware stack levels used:    1
 33324 ;; Hardware stack levels required when called:   15
 33325 ;; This function calls:
 33326 ;;		Nothing
 33327 ;; This function is called by:
 33328 ;;		_efgtoa
 33329 ;;		_asctime
 33330 ;; This function uses a reentrant model
 33331 ;;
 33332                           
 33333                           	psect	text112
 33334  01F546                     __ptext112:
 33335                           	opt callstack 0
 33336  01F546                     ___awmod:
 33337                           	opt callstack 0
 33338                           
 33339                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33340  01F546  52E6               	movf	postinc1,f,c
 33341  01F548  52E6               	movf	postinc1,f,c
 33342                           
 33343                           ;stkvar	_sign @ sp[(-2)+0]
 33344                           
 33345                           ;incstack = 0
 33346 ;; hardware stack exceeded
 33347  01F54A  0EFE               	movlw	-2
 33348  01F54C  6AE3               	clrf	plusw1,c
 33349                           
 33350                           ;stkvar	_dividend @ sp[(-2)+-2]
 33351  01F54E  0EFD               	movlw	-3
 33352  01F550  AEE3               	btfss	plusw1,7,c
 33353  01F552  D009               	goto	l15442
 33354                           
 33355                           ;stkvar	_dividend @ sp[(-2)+-2]
 33356                           ;stkvar	_dividend @ sp[(-2)+-2]
 33357  01F554  0EFC               	movlw	-4
 33358  01F556  6CE3               	negf	plusw1,c
 33359  01F558  0EFD               	movlw	-3
 33360  01F55A  1EE3               	comf	plusw1,f,c
 33361  01F55C  B0D8               	btfsc	status,0,c
 33362  01F55E  2AE3               	incf	plusw1,f,c
 33363                           
 33364                           ;stkvar	_sign @ sp[(-2)+0]
 33365  01F560  0EFE               	movlw	-2
 33366  01F562  6AE3               	clrf	plusw1,c
 33367  01F564  2AE3               	incf	plusw1,f,c
 33368  01F566                     l15442:
 33369                           
 33370                           ;stkvar	_divisor @ sp[(-2)+-4]
 33371  01F566  0EFB               	movlw	-5
 33372  01F568  AEE3               	btfss	plusw1,7,c
 33373  01F56A  D006               	goto	l15446
 33374                           
 33375                           ;stkvar	_divisor @ sp[(-2)+-4]
 33376                           ;stkvar	_divisor @ sp[(-2)+-4]
 33377  01F56C  0EFA               	movlw	-6
 33378  01F56E  6CE3               	negf	plusw1,c
 33379  01F570  0EFB               	movlw	-5
 33380  01F572  1EE3               	comf	plusw1,f,c
 33381  01F574  B0D8               	btfsc	status,0,c
 33382  01F576  2AE3               	incf	plusw1,f,c
 33383  01F578                     l15446:
 33384                           
 33385                           ;stkvar	_divisor @ sp[(-2)+-4]
 33386  01F578  0EFA               	movlw	-6
 33387  01F57A  006F FF8C  F02A    	movff	plusw1,btemp
 33388  01F580  0EFB               	movlw	-5
 33389  01F582  50E3               	movf	plusw1,w,c
 33390  01F584  102A               	iorwf	btemp^0,w,c
 33391  01F586  B4D8               	btfsc	status,2,c
 33392  01F588  D053               	goto	u14440
 33393                           
 33394                           ;stkvar	_counter @ sp[(-2)+1]
 33395  01F58A  0EFF               	movlw	-1
 33396  01F58C  6AE3               	clrf	plusw1,c
 33397  01F58E  D012               	goto	L37
 33398  01F590                     l15450:
 33399                           
 33400                           ;stkvar	_divisor @ sp[(-2)+-4]
 33401  01F590  0EFA               	movlw	-6
 33402  01F592  50E3               	movf	plusw1,w,c
 33403  01F594  90D8               	bcf	status,0,c
 33404  01F596  34E8               	rlcf	wreg,w,c
 33405  01F598  6E2A               	movwf	btemp^0,c
 33406  01F59A  0EFA               	movlw	-6
 33407  01F59C  0060  F0AB  FFE3   	movff	btemp,plusw1
 33408  01F5A2  0EFB               	movlw	-5
 33409  01F5A4  50E3               	movf	plusw1,w,c
 33410  01F5A6  34E8               	rlcf	wreg,w,c
 33411  01F5A8  6E2A               	movwf	btemp^0,c
 33412  01F5AA  0EFB               	movlw	-5
 33413  01F5AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 33414                           
 33415                           ;stkvar	_counter @ sp[(-2)+1]
 33416  01F5B2  0EFF               	movlw	-1
 33417  01F5B4                     L37:
 33418  01F5B4  2AE3               	incf	plusw1,f,c
 33419                           
 33420                           ;stkvar	_divisor @ sp[(-2)+-4]
 33421  01F5B6  0EFB               	movlw	-5
 33422  01F5B8  AEE3               	btfss	plusw1,7,c
 33423  01F5BA  D7EA               	goto	l15450
 33424  01F5BC                     u14420:
 33425                           
 33426                           ;stkvar	_divisor @ sp[(-2)+-4]
 33427  01F5BC  0EFA               	movlw	-6
 33428  01F5BE  006F FF8C  F034    	movff	plusw1,btemp+10
 33429  01F5C4  0EFB               	movlw	-5
 33430  01F5C6  006F FF8C  F035    	movff	plusw1,btemp+11
 33431                           
 33432                           ;stkvar	_dividend @ sp[(-2)+-2]
 33433  01F5CC  0EFC               	movlw	-4
 33434  01F5CE  006F FF8C  F032    	movff	plusw1,btemp+8
 33435  01F5D4  0EFD               	movlw	-3
 33436  01F5D6  006F FF8C  F033    	movff	plusw1,btemp+9
 33437  01F5DC  5034               	movf	(btemp+10)^0,w,c
 33438  01F5DE  5C32               	subwf	(btemp+8)^0,w,c
 33439  01F5E0  5035               	movf	(btemp+11)^0,w,c
 33440  01F5E2  5833               	subwfb	(btemp+9)^0,w,c
 33441  01F5E4  A0D8               	btfss	status,0,c
 33442  01F5E6  D014               	goto	l15460
 33443                           
 33444                           ;stkvar	_divisor @ sp[(-2)+-4]
 33445                           ;stkvar	_dividend @ sp[(-2)+-2]
 33446  01F5E8  0EFC               	movlw	-4
 33447  01F5EA  50E3               	movf	plusw1,w,c
 33448  01F5EC  6E2A               	movwf	btemp^0,c
 33449  01F5EE  0EFA               	movlw	-6
 33450  01F5F0  50E3               	movf	plusw1,w,c
 33451  01F5F2  5E2A               	subwf	btemp^0,f,c
 33452  01F5F4  0EFC               	movlw	-4
 33453  01F5F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33454  01F5FC  0EFD               	movlw	-3
 33455  01F5FE  50E3               	movf	plusw1,w,c
 33456  01F600  6E2A               	movwf	btemp^0,c
 33457  01F602  0EFB               	movlw	-5
 33458  01F604  50E3               	movf	plusw1,w,c
 33459  01F606  5A2A               	subwfb	btemp^0,f,c
 33460  01F608  0EFD               	movlw	-3
 33461  01F60A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33462  01F610                     l15460:
 33463                           
 33464                           ;stkvar	_divisor @ sp[(-2)+-4]
 33465  01F610  90D8               	bcf	status,0,c
 33466  01F612  0EFB               	movlw	-5
 33467  01F614  32E3               	rrcf	plusw1,f,c
 33468  01F616  0EFA               	movlw	-6
 33469  01F618  32E3               	rrcf	plusw1,f,c
 33470                           
 33471                           ;stkvar	_counter @ sp[(-2)+1]
 33472  01F61A  0EFF               	movlw	-1
 33473  01F61C  50E3               	movf	plusw1,w,c
 33474  01F61E  6E2A               	movwf	btemp^0,c
 33475  01F620  0E01               	movlw	1
 33476  01F622  5E2A               	subwf	btemp^0,f,c
 33477  01F624  0EFF               	movlw	-1
 33478  01F626  0060  F0AB  FFE3   	movff	btemp,plusw1
 33479  01F62C  A4D8               	btfss	status,2,c
 33480  01F62E  D7C6               	goto	u14420
 33481  01F630                     u14440:
 33482                           
 33483                           ;stkvar	_sign @ sp[(-2)+0]
 33484  01F630  0EFE               	movlw	-2
 33485  01F632  50E3               	movf	plusw1,w,c
 33486  01F634  B4D8               	btfsc	status,2,c
 33487  01F636  D006               	goto	l15468
 33488                           
 33489                           ;stkvar	_dividend @ sp[(-2)+-2]
 33490                           ;stkvar	_dividend @ sp[(-2)+-2]
 33491  01F638  0EFC               	movlw	-4
 33492  01F63A  6CE3               	negf	plusw1,c
 33493  01F63C  0EFD               	movlw	-3
 33494  01F63E  1EE3               	comf	plusw1,f,c
 33495  01F640  B0D8               	btfsc	status,0,c
 33496  01F642  2AE3               	incf	plusw1,f,c
 33497  01F644                     l15468:
 33498                           
 33499                           ;stkvar	_dividend @ sp[(-2)+-2]
 33500  01F644  0EFC               	movlw	-4
 33501  01F646  006F FF8C  F02A    	movff	plusw1,btemp
 33502  01F64C  0EFD               	movlw	-3
 33503  01F64E  006F FF8C  F02B    	movff	plusw1,btemp+1
 33504                           
 33505                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33506  01F654  0EFA               	movlw	250
 33507  01F656  26E1               	addwf	fsr1l,f,c
 33508  01F658  0EFF               	movlw	255
 33509  01F65A  22E2               	addwfc	fsr1h,f,c
 33510  01F65C  0012               	return		;funcret
 33511  01F65E                     __end_of___awmod:
 33512                           	opt callstack 0
 33513                           
 33514 ;; *************** function ___awdiv *****************
 33515 ;; Defined at:
 33516 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 33517 ;; Parameters:    Size  Location     Type
 33518 ;;  dividend        2  [STACK] int 
 33519 ;;  divisor         2  [STACK] int 
 33520 ;; Auto vars:     Size  Location     Type
 33521 ;;  quotient        2  [STACK] int 
 33522 ;;  sign            1  [STACK] unsigned char 
 33523 ;;  counter         1  [STACK] unsigned char 
 33524 ;; Return value:  Size  Location     Type
 33525 ;;                  2  [STACK] int 
 33526 ;; Registers used:
 33527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33528 ;; Tracked objects:
 33529 ;;		On entry : 0/3
 33530 ;;		On exit  : 0/0
 33531 ;;		Unchanged: 0/0
 33532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33537 ;;Total ram usage:        0 bytes
 33538 ;; Hardware stack levels used:    1
 33539 ;; Hardware stack levels required when called:   15
 33540 ;; This function calls:
 33541 ;;		Nothing
 33542 ;; This function is called by:
 33543 ;;		_efgtoa
 33544 ;;		_put2d
 33545 ;;		_asctime
 33546 ;;		_scan_trans
 33547 ;; This function uses a reentrant model
 33548 ;;
 33549                           
 33550                           	psect	text113
 33551  01ECE8                     __ptext113:
 33552                           	opt callstack 0
 33553  01ECE8                     ___awdiv:
 33554                           	opt callstack 0
 33555                           
 33556                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33557  01ECE8  52E6               	movf	postinc1,f,c
 33558  01ECEA  52E6               	movf	postinc1,f,c
 33559  01ECEC  52E6               	movf	postinc1,f,c
 33560  01ECEE  52E6               	movf	postinc1,f,c
 33561                           
 33562                           ;stkvar	_sign @ sp[(-4)+2]
 33563                           
 33564                           ;incstack = 0
 33565 ;; hardware stack exceeded
 33566  01ECF0  0EFE               	movlw	-2
 33567  01ECF2  6AE3               	clrf	plusw1,c
 33568                           
 33569                           ;stkvar	_divisor @ sp[(-4)+-4]
 33570  01ECF4  0EF9               	movlw	-7
 33571  01ECF6  AEE3               	btfss	plusw1,7,c
 33572  01ECF8  D009               	goto	l15396
 33573                           
 33574                           ;stkvar	_divisor @ sp[(-4)+-4]
 33575                           ;stkvar	_divisor @ sp[(-4)+-4]
 33576  01ECFA  0EF8               	movlw	-8
 33577  01ECFC  6CE3               	negf	plusw1,c
 33578  01ECFE  0EF9               	movlw	-7
 33579  01ED00  1EE3               	comf	plusw1,f,c
 33580  01ED02  B0D8               	btfsc	status,0,c
 33581  01ED04  2AE3               	incf	plusw1,f,c
 33582                           
 33583                           ;stkvar	_sign @ sp[(-4)+2]
 33584  01ED06  0EFE               	movlw	-2
 33585  01ED08  6AE3               	clrf	plusw1,c
 33586  01ED0A  2AE3               	incf	plusw1,f,c
 33587  01ED0C                     l15396:
 33588                           
 33589                           ;stkvar	_dividend @ sp[(-4)+-2]
 33590  01ED0C  0EFB               	movlw	-5
 33591  01ED0E  AEE3               	btfss	plusw1,7,c
 33592  01ED10  D008               	goto	l15402
 33593                           
 33594                           ;stkvar	_dividend @ sp[(-4)+-2]
 33595                           ;stkvar	_dividend @ sp[(-4)+-2]
 33596  01ED12  0EFA               	movlw	-6
 33597  01ED14  6CE3               	negf	plusw1,c
 33598  01ED16  0EFB               	movlw	-5
 33599  01ED18  1EE3               	comf	plusw1,f,c
 33600  01ED1A  B0D8               	btfsc	status,0,c
 33601  01ED1C  2AE3               	incf	plusw1,f,c
 33602                           
 33603                           ;stkvar	_sign @ sp[(-4)+2]
 33604  01ED1E  0EFE               	movlw	-2
 33605  01ED20  70E3               	btg	plusw1,0,c
 33606  01ED22                     l15402:
 33607                           
 33608                           ;stkvar	_quotient @ sp[(-4)+0]
 33609  01ED22  0EFC               	movlw	-4
 33610  01ED24  6AE3               	clrf	plusw1,c
 33611  01ED26  0EFD               	movlw	-3
 33612  01ED28  6AE3               	clrf	plusw1,c
 33613                           
 33614                           ;stkvar	_divisor @ sp[(-4)+-4]
 33615  01ED2A  0EF8               	movlw	-8
 33616  01ED2C  006F FF8C  F02A    	movff	plusw1,btemp
 33617  01ED32  0EF9               	movlw	-7
 33618  01ED34  50E3               	movf	plusw1,w,c
 33619  01ED36  102A               	iorwf	btemp^0,w,c
 33620  01ED38  B4D8               	btfsc	status,2,c
 33621  01ED3A  D066               	goto	u14370
 33622                           
 33623                           ;stkvar	_counter @ sp[(-4)+3]
 33624  01ED3C  0EFF               	movlw	-1
 33625  01ED3E  6AE3               	clrf	plusw1,c
 33626  01ED40  D012               	goto	L38
 33627  01ED42                     l15408:
 33628                           
 33629                           ;stkvar	_divisor @ sp[(-4)+-4]
 33630  01ED42  0EF8               	movlw	-8
 33631  01ED44  50E3               	movf	plusw1,w,c
 33632  01ED46  90D8               	bcf	status,0,c
 33633  01ED48  34E8               	rlcf	wreg,w,c
 33634  01ED4A  6E2A               	movwf	btemp^0,c
 33635  01ED4C  0EF8               	movlw	-8
 33636  01ED4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33637  01ED54  0EF9               	movlw	-7
 33638  01ED56  50E3               	movf	plusw1,w,c
 33639  01ED58  34E8               	rlcf	wreg,w,c
 33640  01ED5A  6E2A               	movwf	btemp^0,c
 33641  01ED5C  0EF9               	movlw	-7
 33642  01ED5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33643                           
 33644                           ;stkvar	_counter @ sp[(-4)+3]
 33645  01ED64  0EFF               	movlw	-1
 33646  01ED66                     L38:
 33647  01ED66  2AE3               	incf	plusw1,f,c
 33648                           
 33649                           ;stkvar	_divisor @ sp[(-4)+-4]
 33650  01ED68  0EF9               	movlw	-7
 33651  01ED6A  AEE3               	btfss	plusw1,7,c
 33652  01ED6C  D7EA               	goto	l15408
 33653  01ED6E                     u14350:
 33654                           
 33655                           ;stkvar	_quotient @ sp[(-4)+0]
 33656  01ED6E  0EFC               	movlw	-4
 33657  01ED70  50E3               	movf	plusw1,w,c
 33658  01ED72  90D8               	bcf	status,0,c
 33659  01ED74  34E8               	rlcf	wreg,w,c
 33660  01ED76  6E2A               	movwf	btemp^0,c
 33661  01ED78  0EFC               	movlw	-4
 33662  01ED7A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33663  01ED80  0EFD               	movlw	-3
 33664  01ED82  50E3               	movf	plusw1,w,c
 33665  01ED84  34E8               	rlcf	wreg,w,c
 33666  01ED86  6E2A               	movwf	btemp^0,c
 33667  01ED88  0EFD               	movlw	-3
 33668  01ED8A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33669                           
 33670                           ;stkvar	_divisor @ sp[(-4)+-4]
 33671  01ED90  0EF8               	movlw	-8
 33672  01ED92  006F FF8C  F034    	movff	plusw1,btemp+10
 33673  01ED98  0EF9               	movlw	-7
 33674  01ED9A  006F FF8C  F035    	movff	plusw1,btemp+11
 33675                           
 33676                           ;stkvar	_dividend @ sp[(-4)+-2]
 33677  01EDA0  0EFA               	movlw	-6
 33678  01EDA2  006F FF8C  F032    	movff	plusw1,btemp+8
 33679  01EDA8  0EFB               	movlw	-5
 33680  01EDAA  006F FF8C  F033    	movff	plusw1,btemp+9
 33681  01EDB0  5034               	movf	(btemp+10)^0,w,c
 33682  01EDB2  5C32               	subwf	(btemp+8)^0,w,c
 33683  01EDB4  5035               	movf	(btemp+11)^0,w,c
 33684  01EDB6  5833               	subwfb	(btemp+9)^0,w,c
 33685  01EDB8  A0D8               	btfss	status,0,c
 33686  01EDBA  D016               	goto	l15422
 33687                           
 33688                           ;stkvar	_divisor @ sp[(-4)+-4]
 33689                           ;stkvar	_dividend @ sp[(-4)+-2]
 33690  01EDBC  0EFA               	movlw	-6
 33691  01EDBE  50E3               	movf	plusw1,w,c
 33692  01EDC0  6E2A               	movwf	btemp^0,c
 33693  01EDC2  0EF8               	movlw	-8
 33694  01EDC4  50E3               	movf	plusw1,w,c
 33695  01EDC6  5E2A               	subwf	btemp^0,f,c
 33696  01EDC8  0EFA               	movlw	-6
 33697  01EDCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 33698  01EDD0  0EFB               	movlw	-5
 33699  01EDD2  50E3               	movf	plusw1,w,c
 33700  01EDD4  6E2A               	movwf	btemp^0,c
 33701  01EDD6  0EF9               	movlw	-7
 33702  01EDD8  50E3               	movf	plusw1,w,c
 33703  01EDDA  5A2A               	subwfb	btemp^0,f,c
 33704  01EDDC  0EFB               	movlw	-5
 33705  01EDDE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33706                           
 33707                           ;stkvar	_quotient @ sp[(-4)+0]
 33708  01EDE4  0EFC               	movlw	-4
 33709  01EDE6  80E3               	bsf	plusw1,0,c
 33710  01EDE8                     l15422:
 33711                           
 33712                           ;stkvar	_divisor @ sp[(-4)+-4]
 33713  01EDE8  90D8               	bcf	status,0,c
 33714  01EDEA  0EF9               	movlw	-7
 33715  01EDEC  32E3               	rrcf	plusw1,f,c
 33716  01EDEE  0EF8               	movlw	-8
 33717  01EDF0  32E3               	rrcf	plusw1,f,c
 33718                           
 33719                           ;stkvar	_counter @ sp[(-4)+3]
 33720  01EDF2  0EFF               	movlw	-1
 33721  01EDF4  50E3               	movf	plusw1,w,c
 33722  01EDF6  6E2A               	movwf	btemp^0,c
 33723  01EDF8  0E01               	movlw	1
 33724  01EDFA  5E2A               	subwf	btemp^0,f,c
 33725  01EDFC  0EFF               	movlw	-1
 33726  01EDFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33727  01EE04  A4D8               	btfss	status,2,c
 33728  01EE06  D7B3               	goto	u14350
 33729  01EE08                     u14370:
 33730                           
 33731                           ;stkvar	_sign @ sp[(-4)+2]
 33732  01EE08  0EFE               	movlw	-2
 33733  01EE0A  50E3               	movf	plusw1,w,c
 33734  01EE0C  B4D8               	btfsc	status,2,c
 33735  01EE0E  D006               	goto	l15430
 33736                           
 33737                           ;stkvar	_quotient @ sp[(-4)+0]
 33738                           ;stkvar	_quotient @ sp[(-4)+0]
 33739  01EE10  0EFC               	movlw	-4
 33740  01EE12  6CE3               	negf	plusw1,c
 33741  01EE14  0EFD               	movlw	-3
 33742  01EE16  1EE3               	comf	plusw1,f,c
 33743  01EE18  B0D8               	btfsc	status,0,c
 33744  01EE1A  2AE3               	incf	plusw1,f,c
 33745  01EE1C                     l15430:
 33746                           
 33747                           ;stkvar	_quotient @ sp[(-4)+0]
 33748  01EE1C  0EFC               	movlw	-4
 33749  01EE1E  006F FF8C  F02A    	movff	plusw1,btemp
 33750  01EE24  0EFD               	movlw	-3
 33751  01EE26  006F FF8C  F02B    	movff	plusw1,btemp+1
 33752                           
 33753                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33754  01EE2C  0EF8               	movlw	248
 33755  01EE2E  26E1               	addwf	fsr1l,f,c
 33756  01EE30  0EFF               	movlw	255
 33757  01EE32  22E2               	addwfc	fsr1h,f,c
 33758  01EE34  0012               	return		;funcret
 33759  01EE36                     __end_of___awdiv:
 33760                           	opt callstack 0
 33761                           
 33762 ;; *************** function _dtoa *****************
 33763 ;; Defined at:
 33764 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 33765 ;; Parameters:    Size  Location     Type
 33766 ;;  fp              2  [STACK] PTR struct _IO_FILE
 33767 ;;		 -> f(6), NULL(0), 
 33768 ;;  d               8  [STACK] long long 
 33769 ;; Auto vars:     Size  Location     Type
 33770 ;;  n               8  [STACK] long long 
 33771 ;;  i               2  [STACK] int 
 33772 ;;  s               2  [STACK] int 
 33773 ;;  w               2  [STACK] int 
 33774 ;;  p               2  [STACK] int 
 33775 ;; Return value:  Size  Location     Type
 33776 ;;                  2  [STACK] int 
 33777 ;; Registers used:
 33778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 33779 ;; Tracked objects:
 33780 ;;		On entry : 0/0
 33781 ;;		On exit  : 0/0
 33782 ;;		Unchanged: 0/0
 33783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33788 ;;Total ram usage:        0 bytes
 33789 ;; Hardware stack levels used:    1
 33790 ;; Hardware stack levels required when called:   20
 33791 ;; This function calls:
 33792 ;;		___aodiv
 33793 ;;		___aomod
 33794 ;;		_abs
 33795 ;;		_pad
 33796 ;; This function is called by:
 33797 ;;		_vfpfcnvrt
 33798 ;; This function uses a reentrant model
 33799 ;;
 33800                           
 33801                           	psect	text114
 33802  018A88                     __ptext114:
 33803                           	opt callstack 0
 33804  018A88                     _dtoa:
 33805                           	opt callstack 0
 33806                           
 33807                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 33808  018A88  0E12               	movlw	18
 33809  018A8A  26E1               	addwf	fsr1l,f,c
 33810  018A8C  0E00               	movlw	0
 33811  018A8E  22E2               	addwfc	fsr1h,f,c
 33812                           
 33813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 33814                           ;stkvar	_d @ sp[(-18)+-10]
 33815                           
 33816                           ;incstack = 0
 33817 ;; hardware stack exceeded
 33818  018A90  0EE4               	movlw	228
 33819  018A92  24E1               	addwf	fsr1l,w,c
 33820  018A94  6ED9               	movwf	fsr2l,c
 33821  018A96  0EFF               	movlw	255
 33822  018A98  20E2               	addwfc	fsr1h,w,c
 33823  018A9A  6EDA               	movwf	fsr2h,c
 33824                           
 33825                           ;stkvar	_n @ sp[(-18)+2]
 33826  018A9C  0E08               	movlw	8
 33827  018A9E  6E2A               	movwf	btemp^0,c
 33828  018AA0  0EF0               	movlw	-16
 33829  018AA2                     us1448999:
 33830  018AA2  006F FF7B FFE3     	movff	postinc2,plusw1
 33831  018AA8  28E8               	incf	wreg,w,c
 33832  018AAA  2E2A               	decfsz	btemp^0,f,c
 33833  018AAC  D7FA               	bra	us1448999
 33834                           
 33835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 33836                           ;stkvar	_n @ sp[(-18)+2]
 33837  018AAE  0EF7               	movlw	-9
 33838  018AB0  AEE3               	btfss	plusw1,7,c
 33839  018AB2  D002               	goto	u14490
 33840  018AB4  0E01               	movlw	1
 33841  018AB6  D001               	goto	u14500
 33842  018AB8                     u14490:
 33843  018AB8  0E00               	movlw	0
 33844  018ABA                     u14500:
 33845  018ABA  6E34               	movwf	(btemp+10)^0,c
 33846  018ABC  6A35               	clrf	(btemp+11)^0,c
 33847                           
 33848                           ;stkvar	_s @ sp[(-18)+12]
 33849  018ABE  0EFA               	movlw	-6
 33850  018AC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33851  018AC6  0EFB               	movlw	-5
 33852  018AC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33853                           
 33854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 33855                           ;stkvar	_s @ sp[(-18)+12]
 33856  018ACE  0EFA               	movlw	-6
 33857  018AD0  006F FF8C  F02A    	movff	plusw1,btemp
 33858  018AD6  0EFB               	movlw	-5
 33859  018AD8  50E3               	movf	plusw1,w,c
 33860  018ADA  102A               	iorwf	btemp^0,w,c
 33861  018ADC  B4D8               	btfsc	status,2,c
 33862  018ADE  D025               	goto	u14520
 33863                           
 33864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 33865                           ;stkvar	_n @ sp[(-18)+2]
 33866                           ;stkvar	_n @ sp[(-18)+2]
 33867  018AE0  0EF0               	movlw	-16
 33868  018AE2  6CE3               	negf	plusw1,c
 33869  018AE4  0EF1               	movlw	-15
 33870  018AE6  1EE3               	comf	plusw1,f,c
 33871  018AE8  0EF2               	movlw	-14
 33872  018AEA  1EE3               	comf	plusw1,f,c
 33873  018AEC  0EF3               	movlw	-13
 33874  018AEE  1EE3               	comf	plusw1,f,c
 33875  018AF0  0EF4               	movlw	-12
 33876  018AF2  1EE3               	comf	plusw1,f,c
 33877  018AF4  0EF5               	movlw	-11
 33878  018AF6  1EE3               	comf	plusw1,f,c
 33879  018AF8  0EF6               	movlw	-10
 33880  018AFA  1EE3               	comf	plusw1,f,c
 33881  018AFC  0EF7               	movlw	-9
 33882  018AFE  1EE3               	comf	plusw1,f,c
 33883  018B00  E314               	bnc	u14520
 33884  018B02  0EF1               	movlw	-15
 33885  018B04  2AE3               	incf	plusw1,f,c
 33886  018B06  E311               	bnc	u14520
 33887  018B08  0EF2               	movlw	-14
 33888  018B0A  2AE3               	incf	plusw1,f,c
 33889  018B0C  E30E               	bnc	u14520
 33890  018B0E  0EF3               	movlw	-13
 33891  018B10  2AE3               	incf	plusw1,f,c
 33892  018B12  E30B               	bnc	u14520
 33893  018B14  0EF4               	movlw	-12
 33894  018B16  2AE3               	incf	plusw1,f,c
 33895  018B18  E308               	bnc	u14520
 33896  018B1A  0EF5               	movlw	-11
 33897  018B1C  2AE3               	incf	plusw1,f,c
 33898  018B1E  E305               	bnc	u14520
 33899  018B20  0EF6               	movlw	-10
 33900  018B22  2AE3               	incf	plusw1,f,c
 33901  018B24  E302               	bnc	u14520
 33902  018B26  0EF7               	movlw	-9
 33903  018B28  2AE3               	incf	plusw1,f,c
 33904  018B2A                     u14520:
 33905                           
 33906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 33907  018B2A  AE4D               	btfss	(_prec+1)^0,7,c
 33908                           
 33909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 33910  018B2C  924E               	bcf	_flags^0,1,c
 33911                           
 33912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 33913  018B2E  BE4D               	btfsc	(_prec+1)^0,7,c
 33914  018B30  D005               	goto	u14540
 33915  018B32  504D               	movf	(_prec+1)^0,w,c
 33916  018B34  E110               	bnz	l15508
 33917  018B36  044C               	decf	_prec^0,w,c
 33918  018B38  B0D8               	btfsc	status,0,c
 33919  018B3A  D00D               	goto	l15508
 33920  018B3C                     u14540:
 33921  018B3C  0E01               	movlw	1
 33922  018B3E  6E34               	movwf	(btemp+10)^0,c
 33923  018B40  0E00               	movlw	0
 33924  018B42  6E35               	movwf	(btemp+11)^0,c
 33925                           
 33926                           ;stkvar	_p @ sp[(-18)+16]
 33927  018B44  0EFE               	movlw	-2
 33928  018B46  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33929  018B4C  0EFF               	movlw	-1
 33930  018B4E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33931  018B54  D008               	goto	l2485
 33932  018B56                     l15508:
 33933                           
 33934                           ;stkvar	_p @ sp[(-18)+16]
 33935  018B56  0EFE               	movlw	-2
 33936  018B58  0060  F133  FFE3   	movff	_prec,plusw1
 33937  018B5E  0EFF               	movlw	-1
 33938  018B60  0060  F137  FFE3   	movff	_prec+1,plusw1
 33939  018B66                     l2485:
 33940                           
 33941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 33942                           ;stkvar	_w @ sp[(-18)+14]
 33943  018B66  0EFC               	movlw	-4
 33944  018B68  0060  F12B  FFE3   	movff	_width,plusw1
 33945  018B6E  0EFD               	movlw	-3
 33946  018B70  0060  F12F  FFE3   	movff	_width+1,plusw1
 33947                           
 33948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 33949                           ;stkvar	_s @ sp[(-18)+12]
 33950  018B76  0EFA               	movlw	-6
 33951  018B78  006F FF8C  F02A    	movff	plusw1,btemp
 33952  018B7E  0EFB               	movlw	-5
 33953  018B80  50E3               	movf	plusw1,w,c
 33954  018B82  102A               	iorwf	btemp^0,w,c
 33955  018B84  A4D8               	btfss	status,2,c
 33956  018B86  D002               	goto	u14560
 33957  018B88  A44E               	btfss	_flags^0,2,c
 33958  018B8A  D00A               	goto	l15516
 33959  018B8C                     u14560:
 33960                           
 33961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 33962                           ;stkvar	_w @ sp[(-18)+14]
 33963  018B8C  50E1               	movf	fsr1l,w,c
 33964  018B8E  0FFC               	addlw	-4
 33965  018B90  6ED9               	movwf	fsr2l,c
 33966  018B92  50E2               	movf	fsr1h,w,c
 33967  018B94  6EDA               	movwf	fsr2h,c
 33968  018B96  0EFF               	movlw	255
 33969  018B98  22DA               	addwfc	fsr2h,f,c
 33970  018B9A  06DE               	decf	postinc2,f,c
 33971  018B9C  0E00               	movlw	0
 33972  018B9E  5ADD               	subwfb	postdec2,f,c
 33973  018BA0                     l15516:
 33974                           
 33975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 33976  018BA0  0E4F               	movlw	79
 33977  018BA2  6E34               	movwf	(btemp+10)^0,c
 33978  018BA4  0E00               	movlw	0
 33979  018BA6  6E35               	movwf	(btemp+11)^0,c
 33980                           
 33981                           ;stkvar	_i @ sp[(-18)+10]
 33982  018BA8  0EF8               	movlw	-8
 33983  018BAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33984  018BB0  0EF9               	movlw	-7
 33985  018BB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33986                           
 33987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 33988  018BB8  0103               	movlb	3	; () banked
 33989  018BBA  6BA3               	clrf	(_dbuf+79)& (0+255),b
 33990                           
 33991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 33992  018BBC  D109               	goto	l15530
 33993  018BBE                     l15520:
 33994                           
 33995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 33996                           ;stkvar	_i @ sp[(-18)+10]
 33997  018BBE  50E1               	movf	fsr1l,w,c
 33998  018BC0  0FF8               	addlw	-8
 33999  018BC2  6ED9               	movwf	fsr2l,c
 34000  018BC4  50E2               	movf	fsr1h,w,c
 34001  018BC6  6EDA               	movwf	fsr2h,c
 34002  018BC8  0EFF               	movlw	255
 34003  018BCA  22DA               	addwfc	fsr2h,f,c
 34004  018BCC  06DE               	decf	postinc2,f,c
 34005  018BCE  0E00               	movlw	0
 34006  018BD0  5ADD               	subwfb	postdec2,f,c
 34007                           
 34008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34009  018BD2  0E0A               	movlw	10
 34010  018BD4  6EE6               	movwf	postinc1,c
 34011  018BD6  0E00               	movlw	0
 34012  018BD8  6EE6               	movwf	postinc1,c
 34013  018BDA  0E00               	movlw	0
 34014  018BDC  6EE6               	movwf	postinc1,c
 34015  018BDE  0E00               	movlw	0
 34016  018BE0  6EE6               	movwf	postinc1,c
 34017  018BE2  0E00               	movlw	0
 34018  018BE4  6EE6               	movwf	postinc1,c
 34019  018BE6  0E00               	movlw	0
 34020  018BE8  6EE6               	movwf	postinc1,c
 34021  018BEA  0E00               	movlw	0
 34022  018BEC  6EE6               	movwf	postinc1,c
 34023  018BEE  0E00               	movlw	0
 34024  018BF0  6EE6               	movwf	postinc1,c
 34025                           
 34026                           ;stkvar	_n @ sp[(-26)+2]
 34027  018BF2  50E1               	movf	fsr1l,w,c
 34028  018BF4  0FE8               	addlw	-24
 34029  018BF6  6ED9               	movwf	fsr2l,c
 34030  018BF8  50E2               	movf	fsr1h,w,c
 34031  018BFA  6EDA               	movwf	fsr2h,c
 34032  018BFC  0EFF               	movlw	255
 34033  018BFE  22DA               	addwfc	fsr2h,f,c
 34034  018C00  006F FF7B FFE6     	movff	postinc2,postinc1
 34035  018C06  006F FF7B FFE6     	movff	postinc2,postinc1
 34036  018C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 34037  018C12  006F FF7B FFE6     	movff	postinc2,postinc1
 34038  018C18  006F FF7B FFE6     	movff	postinc2,postinc1
 34039  018C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 34040  018C24  006F FF7B FFE6     	movff	postinc2,postinc1
 34041  018C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34042  018C30  EC10  F0E4         	call	___aomod	;wreg free
 34043  018C34  52E5               	movf	postdec1,f,c
 34044  018C36  006F FF9C  F041    	movff	indf1,btemp+23
 34045  018C3C  52E5               	movf	postdec1,f,c
 34046  018C3E  006F FF9C  F040    	movff	indf1,btemp+22
 34047  018C44  52E5               	movf	postdec1,f,c
 34048  018C46  006F FF9C  F03F    	movff	indf1,btemp+21
 34049  018C4C  52E5               	movf	postdec1,f,c
 34050  018C4E  006F FF9C  F03E    	movff	indf1,btemp+20
 34051  018C54  52E5               	movf	postdec1,f,c
 34052  018C56  006F FF9C  F03D    	movff	indf1,btemp+19
 34053  018C5C  52E5               	movf	postdec1,f,c
 34054  018C5E  006F FF9C  F03C    	movff	indf1,btemp+18
 34055  018C64  52E5               	movf	postdec1,f,c
 34056  018C66  006F FF9C  F03B    	movff	indf1,btemp+17
 34057  018C6C  52E5               	movf	postdec1,f,c
 34058  018C6E  006F FF9C  F03A    	movff	indf1,btemp+16
 34059  018C74  0EF8               	movlw	248
 34060  018C76  26E1               	addwf	fsr1l,f,c
 34061  018C78  0EFF               	movlw	255
 34062  018C7A  22E2               	addwfc	fsr1h,f,c
 34063  018C7C  0060  F0E8  F034   	movff	btemp+16,btemp+10
 34064  018C82  0060  F0EC  F035   	movff	btemp+17,btemp+11
 34065  018C88  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34066  018C8E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34067  018C94  EC31  F00D         	call	_abs	;wreg free
 34068  018C98  0E30               	movlw	48
 34069  018C9A  262A               	addwf	btemp^0,f,c
 34070                           
 34071                           ;stkvar	_i @ sp[(-18)+10]
 34072  018C9C  0EF8               	movlw	-8
 34073  018C9E  006F FF8C  F034    	movff	plusw1,btemp+10
 34074  018CA4  0EF9               	movlw	-7
 34075  018CA6  006F FF8C  F035    	movff	plusw1,btemp+11
 34076  018CAC  0E54               	movlw	low _dbuf
 34077  018CAE  2434               	addwf	(btemp+10)^0,w,c
 34078  018CB0  6ED9               	movwf	fsr2l,c
 34079  018CB2  0E03               	movlw	high _dbuf
 34080  018CB4  2035               	addwfc	(btemp+11)^0,w,c
 34081  018CB6  6EDA               	movwf	fsr2h,c
 34082  018CB8  0060  F0AB  FFDF   	movff	btemp,indf2
 34083                           
 34084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 34085                           ;stkvar	_p @ sp[(-18)+16]
 34086  018CBE  50E1               	movf	fsr1l,w,c
 34087  018CC0  0FFE               	addlw	-2
 34088  018CC2  6ED9               	movwf	fsr2l,c
 34089  018CC4  50E2               	movf	fsr1h,w,c
 34090  018CC6  6EDA               	movwf	fsr2h,c
 34091  018CC8  0EFF               	movlw	255
 34092  018CCA  22DA               	addwfc	fsr2h,f,c
 34093  018CCC  06DE               	decf	postinc2,f,c
 34094  018CCE  0E00               	movlw	0
 34095  018CD0  5ADD               	subwfb	postdec2,f,c
 34096                           
 34097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 34098                           ;stkvar	_w @ sp[(-18)+14]
 34099  018CD2  50E1               	movf	fsr1l,w,c
 34100  018CD4  0FFC               	addlw	-4
 34101  018CD6  6ED9               	movwf	fsr2l,c
 34102  018CD8  50E2               	movf	fsr1h,w,c
 34103  018CDA  6EDA               	movwf	fsr2h,c
 34104  018CDC  0EFF               	movlw	255
 34105  018CDE  22DA               	addwfc	fsr2h,f,c
 34106  018CE0  06DE               	decf	postinc2,f,c
 34107  018CE2  0E00               	movlw	0
 34108  018CE4  5ADD               	subwfb	postdec2,f,c
 34109                           
 34110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 34111  018CE6  0E0A               	movlw	10
 34112  018CE8  6EE6               	movwf	postinc1,c
 34113  018CEA  0E00               	movlw	0
 34114  018CEC  6EE6               	movwf	postinc1,c
 34115  018CEE  0E00               	movlw	0
 34116  018CF0  6EE6               	movwf	postinc1,c
 34117  018CF2  0E00               	movlw	0
 34118  018CF4  6EE6               	movwf	postinc1,c
 34119  018CF6  0E00               	movlw	0
 34120  018CF8  6EE6               	movwf	postinc1,c
 34121  018CFA  0E00               	movlw	0
 34122  018CFC  6EE6               	movwf	postinc1,c
 34123  018CFE  0E00               	movlw	0
 34124  018D00  6EE6               	movwf	postinc1,c
 34125  018D02  0E00               	movlw	0
 34126  018D04  6EE6               	movwf	postinc1,c
 34127                           
 34128                           ;stkvar	_n @ sp[(-26)+2]
 34129  018D06  50E1               	movf	fsr1l,w,c
 34130  018D08  0FE8               	addlw	-24
 34131  018D0A  6ED9               	movwf	fsr2l,c
 34132  018D0C  50E2               	movf	fsr1h,w,c
 34133  018D0E  6EDA               	movwf	fsr2h,c
 34134  018D10  0EFF               	movlw	255
 34135  018D12  22DA               	addwfc	fsr2h,f,c
 34136  018D14  006F FF7B FFE6     	movff	postinc2,postinc1
 34137  018D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34138  018D20  006F FF7B FFE6     	movff	postinc2,postinc1
 34139  018D26  006F FF7B FFE6     	movff	postinc2,postinc1
 34140  018D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34141  018D32  006F FF7B FFE6     	movff	postinc2,postinc1
 34142  018D38  006F FF7B FFE6     	movff	postinc2,postinc1
 34143  018D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34144  018D44  EC24  F0DE         	call	___aodiv	;wreg free
 34145  018D48  52E5               	movf	postdec1,f,c
 34146  018D4A  006F FF9C  F041    	movff	indf1,btemp+23
 34147  018D50  52E5               	movf	postdec1,f,c
 34148  018D52  006F FF9C  F040    	movff	indf1,btemp+22
 34149  018D58  52E5               	movf	postdec1,f,c
 34150  018D5A  006F FF9C  F03F    	movff	indf1,btemp+21
 34151  018D60  52E5               	movf	postdec1,f,c
 34152  018D62  006F FF9C  F03E    	movff	indf1,btemp+20
 34153  018D68  52E5               	movf	postdec1,f,c
 34154  018D6A  006F FF9C  F03D    	movff	indf1,btemp+19
 34155  018D70  52E5               	movf	postdec1,f,c
 34156  018D72  006F FF9C  F03C    	movff	indf1,btemp+18
 34157  018D78  52E5               	movf	postdec1,f,c
 34158  018D7A  006F FF9C  F03B    	movff	indf1,btemp+17
 34159  018D80  52E5               	movf	postdec1,f,c
 34160  018D82  006F FF9C  F03A    	movff	indf1,btemp+16
 34161  018D88  0EF8               	movlw	248
 34162  018D8A  26E1               	addwf	fsr1l,f,c
 34163  018D8C  0EFF               	movlw	255
 34164  018D8E  22E2               	addwfc	fsr1h,f,c
 34165                           
 34166                           ;stkvar	_n @ sp[(-18)+2]
 34167  018D90  0EF0               	movlw	-16
 34168  018D92  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 34169  018D98  0EF1               	movlw	-15
 34170  018D9A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 34171  018DA0  0EF2               	movlw	-14
 34172  018DA2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 34173  018DA8  0EF3               	movlw	-13
 34174  018DAA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 34175  018DB0  0EF4               	movlw	-12
 34176  018DB2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 34177  018DB8  0EF5               	movlw	-11
 34178  018DBA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 34179  018DC0  0EF6               	movlw	-10
 34180  018DC2  0060  F103  FFE3   	movff	btemp+22,plusw1
 34181  018DC8  0EF7               	movlw	-9
 34182  018DCA  0060  F107  FFE3   	movff	btemp+23,plusw1
 34183  018DD0                     l15530:
 34184                           
 34185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34186                           ;stkvar	_i @ sp[(-18)+10]
 34187  018DD0  0EF9               	movlw	-7
 34188  018DD2  BEE3               	btfsc	plusw1,7,c
 34189  018DD4  D036               	goto	u14610
 34190  018DD6  0EF9               	movlw	-7
 34191  018DD8  50E3               	movf	plusw1,w,c
 34192  018DDA  E104               	bnz	u14570
 34193  018DDC  0EF8               	movlw	-8
 34194  018DDE  04E3               	decf	plusw1,w,c
 34195  018DE0  A0D8               	btfss	status,0,c
 34196  018DE2  D02F               	goto	u14610
 34197  018DE4                     u14570:
 34198                           
 34199                           ;stkvar	_n @ sp[(-18)+2]
 34200  018DE4  0EF0               	movlw	-16
 34201  018DE6  50E3               	movf	plusw1,w,c
 34202  018DE8  E115               	bnz	u14581
 34203  018DEA  0EF1               	movlw	-15
 34204  018DEC  50E3               	movf	plusw1,w,c
 34205  018DEE  E112               	bnz	u14581
 34206  018DF0  0EF2               	movlw	-14
 34207  018DF2  50E3               	movf	plusw1,w,c
 34208  018DF4  E10F               	bnz	u14581
 34209  018DF6  0EF3               	movlw	-13
 34210  018DF8  50E3               	movf	plusw1,w,c
 34211  018DFA  E10C               	bnz	u14581
 34212  018DFC  0EF4               	movlw	-12
 34213  018DFE  50E3               	movf	plusw1,w,c
 34214  018E00  E109               	bnz	u14581
 34215  018E02  0EF5               	movlw	-11
 34216  018E04  50E3               	movf	plusw1,w,c
 34217  018E06  E106               	bnz	u14581
 34218  018E08  0EF6               	movlw	-10
 34219  018E0A  50E3               	movf	plusw1,w,c
 34220  018E0C  E103               	bnz	u14581
 34221  018E0E  0EF7               	movlw	-9
 34222  018E10  50E3               	movf	plusw1,w,c
 34223  018E12  A4D8               	btfss	status,2,c
 34224  018E14                     u14581:
 34225  018E14  D6D4               	goto	l15520
 34226                           
 34227                           ;stkvar	_p @ sp[(-18)+16]
 34228  018E16  0EFF               	movlw	-1
 34229  018E18  BEE3               	btfsc	plusw1,7,c
 34230  018E1A  D007               	goto	u14590
 34231  018E1C  0EFF               	movlw	-1
 34232  018E1E  50E3               	movf	plusw1,w,c
 34233  018E20  E103               	bnz	u14591
 34234  018E22  0EFE               	movlw	-2
 34235  018E24  04E3               	decf	plusw1,w,c
 34236  018E26  B0D8               	btfsc	status,0,c
 34237  018E28                     u14591:
 34238  018E28  D6CA               	goto	l15520
 34239  018E2A                     u14590:
 34240                           
 34241                           ;stkvar	_w @ sp[(-18)+14]
 34242  018E2A  0EFD               	movlw	-3
 34243  018E2C  BEE3               	btfsc	plusw1,7,c
 34244  018E2E  D009               	goto	u14610
 34245  018E30  0EFD               	movlw	-3
 34246  018E32  50E3               	movf	plusw1,w,c
 34247  018E34  E104               	bnz	u14600
 34248  018E36  0EFC               	movlw	-4
 34249  018E38  04E3               	decf	plusw1,w,c
 34250  018E3A  A0D8               	btfss	status,0,c
 34251  018E3C  D002               	goto	u14610
 34252  018E3E                     u14600:
 34253  018E3E  B24E               	btfsc	_flags^0,1,c
 34254  018E40  D6BE               	goto	l15520
 34255  018E42                     u14610:
 34256                           
 34257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 34258                           ;stkvar	_s @ sp[(-18)+12]
 34259  018E42  0EFA               	movlw	-6
 34260  018E44  006F FF8C  F02A    	movff	plusw1,btemp
 34261  018E4A  0EFB               	movlw	-5
 34262  018E4C  50E3               	movf	plusw1,w,c
 34263  018E4E  102A               	iorwf	btemp^0,w,c
 34264  018E50  A4D8               	btfss	status,2,c
 34265  018E52  D002               	goto	u14630
 34266  018E54  A44E               	btfss	_flags^0,2,c
 34267  018E56  D033               	goto	l15554
 34268  018E58                     u14630:
 34269                           
 34270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 34271                           ;stkvar	_i @ sp[(-18)+10]
 34272  018E58  50E1               	movf	fsr1l,w,c
 34273  018E5A  0FF8               	addlw	-8
 34274  018E5C  6ED9               	movwf	fsr2l,c
 34275  018E5E  50E2               	movf	fsr1h,w,c
 34276  018E60  6EDA               	movwf	fsr2h,c
 34277  018E62  0EFF               	movlw	255
 34278  018E64  22DA               	addwfc	fsr2h,f,c
 34279  018E66  06DE               	decf	postinc2,f,c
 34280  018E68  0E00               	movlw	0
 34281  018E6A  5ADD               	subwfb	postdec2,f,c
 34282                           
 34283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 34284                           ;stkvar	_s @ sp[(-18)+12]
 34285  018E6C  0EFA               	movlw	-6
 34286  018E6E  006F FF8C  F02A    	movff	plusw1,btemp
 34287  018E74  0EFB               	movlw	-5
 34288  018E76  50E3               	movf	plusw1,w,c
 34289  018E78  102A               	iorwf	btemp^0,w,c
 34290  018E7A  A4D8               	btfss	status,2,c
 34291  018E7C  D002               	goto	l15550
 34292  018E7E  0E2B               	movlw	43
 34293  018E80  D001               	goto	L39
 34294  018E82                     l15550:
 34295  018E82  0E2D               	movlw	45
 34296  018E84                     L39:
 34297  018E84  6E34               	movwf	(btemp+10)^0,c
 34298  018E86  0E00               	movlw	0
 34299  018E88  6E35               	movwf	(btemp+11)^0,c
 34300                           
 34301                           ;stkvar	_dtoa$6585 @ sp[(-18)+0]
 34302  018E8A  0EEE               	movlw	-18
 34303  018E8C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34304  018E92  0EEF               	movlw	-17
 34305  018E94  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34306                           
 34307                           ;stkvar	_dtoa$6585 @ sp[(-18)+0]
 34308                           ;stkvar	_i @ sp[(-18)+10]
 34309  018E9A  0EF8               	movlw	-8
 34310  018E9C  006F FF8C  F034    	movff	plusw1,btemp+10
 34311  018EA2  0EF9               	movlw	-7
 34312  018EA4  006F FF8C  F035    	movff	plusw1,btemp+11
 34313  018EAA  0E54               	movlw	low _dbuf
 34314  018EAC  2434               	addwf	(btemp+10)^0,w,c
 34315  018EAE  6ED9               	movwf	fsr2l,c
 34316  018EB0  0E03               	movlw	high _dbuf
 34317  018EB2  2035               	addwfc	(btemp+11)^0,w,c
 34318  018EB4  6EDA               	movwf	fsr2h,c
 34319  018EB6  0EEE               	movlw	-18
 34320  018EB8  006F FF8F FFDF     	movff	plusw1,indf2
 34321  018EBE                     l15554:
 34322                           
 34323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 34324                           ;stkvar	_w @ sp[(-18)+14]
 34325  018EBE  0EFC               	movlw	-4
 34326  018EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 34327  018EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 34328                           
 34329                           ;stkvar	_i @ sp[(-20)+10]
 34330  018ECC  0E54               	movlw	low _dbuf
 34331  018ECE  6E34               	movwf	(btemp+10)^0,c
 34332  018ED0  0E03               	movlw	high _dbuf
 34333  018ED2  6E35               	movwf	(btemp+11)^0,c
 34334  018ED4  0EF6               	movlw	-10
 34335  018ED6  50E3               	movf	plusw1,w,c
 34336  018ED8  2634               	addwf	(btemp+10)^0,f,c
 34337  018EDA  0EF7               	movlw	-9
 34338  018EDC  50E3               	movf	plusw1,w,c
 34339  018EDE  2235               	addwfc	(btemp+11)^0,f,c
 34340  018EE0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34341  018EE6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34342                           
 34343                           ;stkvar	_fp @ sp[(-22)+-2]
 34344  018EEC  0EE8               	movlw	-24
 34345  018EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 34346  018EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 34347  018EFA  EC2F  F0FB         	call	_pad	;wreg free
 34348                           
 34349                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 34350  018EFE  0EE4               	movlw	228
 34351  018F00  26E1               	addwf	fsr1l,f,c
 34352  018F02  0EFF               	movlw	255
 34353  018F04  22E2               	addwfc	fsr1h,f,c
 34354  018F06  0012               	return		;funcret
 34355  018F08                     __end_of_dtoa:
 34356                           	opt callstack 0
 34357                           
 34358 ;; *************** function _abs *****************
 34359 ;; Defined at:
 34360 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 34361 ;; Parameters:    Size  Location     Type
 34362 ;;  a               2  [STACK] int 
 34363 ;; Auto vars:     Size  Location     Type
 34364 ;;		None
 34365 ;; Return value:  Size  Location     Type
 34366 ;;                  2  [STACK] int 
 34367 ;; Registers used:
 34368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 34369 ;; Tracked objects:
 34370 ;;		On entry : 0/3
 34371 ;;		On exit  : 0/0
 34372 ;;		Unchanged: 0/0
 34373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34378 ;;Total ram usage:        0 bytes
 34379 ;; Hardware stack levels used:    1
 34380 ;; Hardware stack levels required when called:   15
 34381 ;; This function calls:
 34382 ;;		Nothing
 34383 ;; This function is called by:
 34384 ;;		_dtoa
 34385 ;; This function uses a reentrant model
 34386 ;;
 34387                           
 34388                           	psect	text115
 34389  001A62                     __ptext115:
 34390                           	opt callstack 0
 34391  001A62                     _abs:
 34392                           	opt callstack 0
 34393                           
 34394                           ;stkvar	_a @ sp[(0)+-2]
 34395                           
 34396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34397                           ;incstack = 0
 34398 ;; hardware stack exceeded
 34399  001A62  0EFF               	movlw	-1
 34400  001A64  BEE3               	btfsc	plusw1,7,c
 34401  001A66  D007               	goto	u7710
 34402  001A68  0EFF               	movlw	-1
 34403  001A6A  50E3               	movf	plusw1,w,c
 34404  001A6C  E112               	bnz	l10044
 34405  001A6E  0EFE               	movlw	-2
 34406  001A70  04E3               	decf	plusw1,w,c
 34407  001A72  B0D8               	btfsc	status,0,c
 34408  001A74  D00E               	goto	l10044
 34409  001A76                     u7710:
 34410                           
 34411                           ;stkvar	_a @ sp[(0)+-2]
 34412  001A76  0EFE               	movlw	-2
 34413  001A78  006F FF8C  F02A    	movff	plusw1,btemp
 34414  001A7E  1E2A               	comf	btemp^0,f,c
 34415  001A80  0EFF               	movlw	-1
 34416  001A82  006F FF8C  F02B    	movff	plusw1,btemp+1
 34417  001A88  1E2B               	comf	(btemp+1)^0,f,c
 34418  001A8A  2A2A               	incf	btemp^0,f,c
 34419  001A8C  B4D8               	btfsc	status,2,c
 34420  001A8E  2A2B               	incf	(btemp+1)^0,f,c
 34421  001A90  D008               	goto	l3411
 34422  001A92                     l10044:
 34423                           
 34424                           ;stkvar	_a @ sp[(0)+-2]
 34425  001A92  0EFE               	movlw	-2
 34426  001A94  006F FF8C  F02A    	movff	plusw1,btemp
 34427  001A9A  0EFF               	movlw	-1
 34428  001A9C  006F FF8C  F02B    	movff	plusw1,btemp+1
 34429  001AA2                     l3411:
 34430                           
 34431                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 34432  001AA2  52E5               	movf	postdec1,f,c
 34433  001AA4  52E5               	movf	postdec1,f,c
 34434  001AA6  0012               	return		;funcret
 34435  001AA8                     __end_of_abs:
 34436                           	opt callstack 0
 34437                           
 34438 ;; *************** function ___aomod *****************
 34439 ;; Defined at:
 34440 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 34441 ;; Parameters:    Size  Location     Type
 34442 ;;  dividend        8  [STACK] long long 
 34443 ;;  divisor         8  [STACK] long long 
 34444 ;; Auto vars:     Size  Location     Type
 34445 ;;  sign            1  [STACK] unsigned char 
 34446 ;;  counter         1  [STACK] unsigned char 
 34447 ;; Return value:  Size  Location     Type
 34448 ;;                  8  [STACK] long long 
 34449 ;; Registers used:
 34450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34451 ;; Tracked objects:
 34452 ;;		On entry : 0/0
 34453 ;;		On exit  : 0/0
 34454 ;;		Unchanged: 0/0
 34455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34460 ;;Total ram usage:        0 bytes
 34461 ;; Hardware stack levels used:    1
 34462 ;; Hardware stack levels required when called:   15
 34463 ;; This function calls:
 34464 ;;		Nothing
 34465 ;; This function is called by:
 34466 ;;		_dtoa
 34467 ;;		___secs_to_tm
 34468 ;;		_rule_to_secs
 34469 ;;		___year_to_secs
 34470 ;; This function uses a reentrant model
 34471 ;;
 34472                           
 34473                           	psect	text116
 34474  01C820                     __ptext116:
 34475                           	opt callstack 0
 34476  01C820                     ___aomod:
 34477                           	opt callstack 0
 34478                           
 34479                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 34480  01C820  52E6               	movf	postinc1,f,c
 34481  01C822  52E6               	movf	postinc1,f,c
 34482                           
 34483                           ;stkvar	_sign @ sp[(-2)+0]
 34484                           
 34485                           ;incstack = 0
 34486 ;; hardware stack exceeded
 34487  01C824  0EFE               	movlw	-2
 34488  01C826  6AE3               	clrf	plusw1,c
 34489                           
 34490                           ;stkvar	_dividend @ sp[(-2)+-8]
 34491  01C828  0EFD               	movlw	-3
 34492  01C82A  AEE3               	btfss	plusw1,7,c
 34493  01C82C  D028               	goto	l10228
 34494                           
 34495                           ;stkvar	_dividend @ sp[(-2)+-8]
 34496                           ;stkvar	_dividend @ sp[(-2)+-8]
 34497  01C82E  0EF6               	movlw	-10
 34498  01C830  6CE3               	negf	plusw1,c
 34499  01C832  0EF7               	movlw	-9
 34500  01C834  1EE3               	comf	plusw1,f,c
 34501  01C836  0EF8               	movlw	-8
 34502  01C838  1EE3               	comf	plusw1,f,c
 34503  01C83A  0EF9               	movlw	-7
 34504  01C83C  1EE3               	comf	plusw1,f,c
 34505  01C83E  0EFA               	movlw	-6
 34506  01C840  1EE3               	comf	plusw1,f,c
 34507  01C842  0EFB               	movlw	-5
 34508  01C844  1EE3               	comf	plusw1,f,c
 34509  01C846  0EFC               	movlw	-4
 34510  01C848  1EE3               	comf	plusw1,f,c
 34511  01C84A  0EFD               	movlw	-3
 34512  01C84C  1EE3               	comf	plusw1,f,c
 34513  01C84E  E314               	bnc	u8200
 34514  01C850  0EF7               	movlw	-9
 34515  01C852  2AE3               	incf	plusw1,f,c
 34516  01C854  E311               	bnc	u8200
 34517  01C856  0EF8               	movlw	-8
 34518  01C858  2AE3               	incf	plusw1,f,c
 34519  01C85A  E30E               	bnc	u8200
 34520  01C85C  0EF9               	movlw	-7
 34521  01C85E  2AE3               	incf	plusw1,f,c
 34522  01C860  E30B               	bnc	u8200
 34523  01C862  0EFA               	movlw	-6
 34524  01C864  2AE3               	incf	plusw1,f,c
 34525  01C866  E308               	bnc	u8200
 34526  01C868  0EFB               	movlw	-5
 34527  01C86A  2AE3               	incf	plusw1,f,c
 34528  01C86C  E305               	bnc	u8200
 34529  01C86E  0EFC               	movlw	-4
 34530  01C870  2AE3               	incf	plusw1,f,c
 34531  01C872  E302               	bnc	u8200
 34532  01C874  0EFD               	movlw	-3
 34533  01C876  2AE3               	incf	plusw1,f,c
 34534  01C878                     u8200:
 34535                           
 34536                           ;stkvar	_sign @ sp[(-2)+0]
 34537  01C878  0EFE               	movlw	-2
 34538  01C87A  6AE3               	clrf	plusw1,c
 34539  01C87C  2AE3               	incf	plusw1,f,c
 34540  01C87E                     l10228:
 34541                           
 34542                           ;stkvar	_divisor @ sp[(-2)+-16]
 34543  01C87E  0EF5               	movlw	-11
 34544  01C880  AEE3               	btfss	plusw1,7,c
 34545  01C882  D025               	goto	u8220
 34546                           
 34547                           ;stkvar	_divisor @ sp[(-2)+-16]
 34548                           ;stkvar	_divisor @ sp[(-2)+-16]
 34549  01C884  0EEE               	movlw	-18
 34550  01C886  6CE3               	negf	plusw1,c
 34551  01C888  0EEF               	movlw	-17
 34552  01C88A  1EE3               	comf	plusw1,f,c
 34553  01C88C  0EF0               	movlw	-16
 34554  01C88E  1EE3               	comf	plusw1,f,c
 34555  01C890  0EF1               	movlw	-15
 34556  01C892  1EE3               	comf	plusw1,f,c
 34557  01C894  0EF2               	movlw	-14
 34558  01C896  1EE3               	comf	plusw1,f,c
 34559  01C898  0EF3               	movlw	-13
 34560  01C89A  1EE3               	comf	plusw1,f,c
 34561  01C89C  0EF4               	movlw	-12
 34562  01C89E  1EE3               	comf	plusw1,f,c
 34563  01C8A0  0EF5               	movlw	-11
 34564  01C8A2  1EE3               	comf	plusw1,f,c
 34565  01C8A4  E314               	bnc	u8220
 34566  01C8A6  0EEF               	movlw	-17
 34567  01C8A8  2AE3               	incf	plusw1,f,c
 34568  01C8AA  E311               	bnc	u8220
 34569  01C8AC  0EF0               	movlw	-16
 34570  01C8AE  2AE3               	incf	plusw1,f,c
 34571  01C8B0  E30E               	bnc	u8220
 34572  01C8B2  0EF1               	movlw	-15
 34573  01C8B4  2AE3               	incf	plusw1,f,c
 34574  01C8B6  E30B               	bnc	u8220
 34575  01C8B8  0EF2               	movlw	-14
 34576  01C8BA  2AE3               	incf	plusw1,f,c
 34577  01C8BC  E308               	bnc	u8220
 34578  01C8BE  0EF3               	movlw	-13
 34579  01C8C0  2AE3               	incf	plusw1,f,c
 34580  01C8C2  E305               	bnc	u8220
 34581  01C8C4  0EF4               	movlw	-12
 34582  01C8C6  2AE3               	incf	plusw1,f,c
 34583  01C8C8  E302               	bnc	u8220
 34584  01C8CA  0EF5               	movlw	-11
 34585  01C8CC  2AE3               	incf	plusw1,f,c
 34586  01C8CE                     u8220:
 34587                           
 34588                           ;stkvar	_divisor @ sp[(-2)+-16]
 34589  01C8CE  0EEE               	movlw	-18
 34590  01C8D0  50E3               	movf	plusw1,w,c
 34591  01C8D2  E116               	bnz	u8230
 34592  01C8D4  0EEF               	movlw	-17
 34593  01C8D6  50E3               	movf	plusw1,w,c
 34594  01C8D8  E113               	bnz	u8230
 34595  01C8DA  0EF0               	movlw	-16
 34596  01C8DC  50E3               	movf	plusw1,w,c
 34597  01C8DE  E110               	bnz	u8230
 34598  01C8E0  0EF1               	movlw	-15
 34599  01C8E2  50E3               	movf	plusw1,w,c
 34600  01C8E4  E10D               	bnz	u8230
 34601  01C8E6  0EF2               	movlw	-14
 34602  01C8E8  50E3               	movf	plusw1,w,c
 34603  01C8EA  E10A               	bnz	u8230
 34604  01C8EC  0EF3               	movlw	-13
 34605  01C8EE  50E3               	movf	plusw1,w,c
 34606  01C8F0  E107               	bnz	u8230
 34607  01C8F2  0EF4               	movlw	-12
 34608  01C8F4  50E3               	movf	plusw1,w,c
 34609  01C8F6  E104               	bnz	u8230
 34610  01C8F8  0EF5               	movlw	-11
 34611  01C8FA  50E3               	movf	plusw1,w,c
 34612  01C8FC  B4D8               	btfsc	status,2,c
 34613  01C8FE  D075               	goto	u8260
 34614  01C900                     u8230:
 34615                           
 34616                           ;stkvar	_counter @ sp[(-2)+1]
 34617  01C900  0EFF               	movlw	-1
 34618  01C902  6AE3               	clrf	plusw1,c
 34619  01C904  D012               	goto	L40
 34620  01C906                     l10236:
 34621                           
 34622                           ;stkvar	_divisor @ sp[(-2)+-16]
 34623  01C906  90D8               	bcf	status,0,c
 34624  01C908  0EEE               	movlw	-18
 34625  01C90A  36E3               	rlcf	plusw1,f,c
 34626  01C90C  0EEF               	movlw	-17
 34627  01C90E  36E3               	rlcf	plusw1,f,c
 34628  01C910  0EF0               	movlw	-16
 34629  01C912  36E3               	rlcf	plusw1,f,c
 34630  01C914  0EF1               	movlw	-15
 34631  01C916  36E3               	rlcf	plusw1,f,c
 34632  01C918  0EF2               	movlw	-14
 34633  01C91A  36E3               	rlcf	plusw1,f,c
 34634  01C91C  0EF3               	movlw	-13
 34635  01C91E  36E3               	rlcf	plusw1,f,c
 34636  01C920  0EF4               	movlw	-12
 34637  01C922  36E3               	rlcf	plusw1,f,c
 34638  01C924  0EF5               	movlw	-11
 34639  01C926  36E3               	rlcf	plusw1,f,c
 34640                           
 34641                           ;stkvar	_counter @ sp[(-2)+1]
 34642  01C928  0EFF               	movlw	-1
 34643  01C92A                     L40:
 34644  01C92A  2AE3               	incf	plusw1,f,c
 34645                           
 34646                           ;stkvar	_divisor @ sp[(-2)+-16]
 34647  01C92C  0EF5               	movlw	-11
 34648  01C92E  AEE3               	btfss	plusw1,7,c
 34649  01C930  D7EA               	goto	l10236
 34650  01C932                     u8240:
 34651                           
 34652                           ;stkvar	_divisor @ sp[(-2)+-16]
 34653                           ;stkvar	_dividend @ sp[(-2)+-8]
 34654  01C932  50E1               	movf	fsr1l,w,c
 34655  01C934  0FF6               	addlw	-10
 34656  01C936  6ED9               	movwf	fsr2l,c
 34657  01C938  50E2               	movf	fsr1h,w,c
 34658  01C93A  6EDA               	movwf	fsr2h,c
 34659  01C93C  0EFF               	movlw	255
 34660  01C93E  22DA               	addwfc	fsr2h,f,c
 34661  01C940  0EEE               	movlw	-18
 34662  01C942  50E3               	movf	plusw1,w,c
 34663  01C944  5CDE               	subwf	postinc2,w,c
 34664  01C946  0EEF               	movlw	-17
 34665  01C948  50E3               	movf	plusw1,w,c
 34666  01C94A  58DE               	subwfb	postinc2,w,c
 34667  01C94C  0EF0               	movlw	-16
 34668  01C94E  50E3               	movf	plusw1,w,c
 34669  01C950  58DE               	subwfb	postinc2,w,c
 34670  01C952  0EF1               	movlw	-15
 34671  01C954  50E3               	movf	plusw1,w,c
 34672  01C956  58DE               	subwfb	postinc2,w,c
 34673  01C958  0EF2               	movlw	-14
 34674  01C95A  50E3               	movf	plusw1,w,c
 34675  01C95C  58DE               	subwfb	postinc2,w,c
 34676  01C95E  0EF3               	movlw	-13
 34677  01C960  50E3               	movf	plusw1,w,c
 34678  01C962  58DE               	subwfb	postinc2,w,c
 34679  01C964  0EF4               	movlw	-12
 34680  01C966  50E3               	movf	plusw1,w,c
 34681  01C968  58DE               	subwfb	postinc2,w,c
 34682  01C96A  0EF5               	movlw	-11
 34683  01C96C  50E3               	movf	plusw1,w,c
 34684  01C96E  58DE               	subwfb	postinc2,w,c
 34685  01C970  A0D8               	btfss	status,0,c
 34686  01C972  D01F               	goto	l10244
 34687                           
 34688                           ;stkvar	_divisor @ sp[(-2)+-16]
 34689                           ;stkvar	_dividend @ sp[(-2)+-8]
 34690  01C974  50E1               	movf	fsr1l,w,c
 34691  01C976  0FF6               	addlw	-10
 34692  01C978  6ED9               	movwf	fsr2l,c
 34693  01C97A  50E2               	movf	fsr1h,w,c
 34694  01C97C  6EDA               	movwf	fsr2h,c
 34695  01C97E  0EFF               	movlw	255
 34696  01C980  22DA               	addwfc	fsr2h,f,c
 34697  01C982  0EEE               	movlw	-18
 34698  01C984  50E3               	movf	plusw1,w,c
 34699  01C986  5EDE               	subwf	postinc2,f,c
 34700  01C988  0EEF               	movlw	-17
 34701  01C98A  50E3               	movf	plusw1,w,c
 34702  01C98C  5ADE               	subwfb	postinc2,f,c
 34703  01C98E  0EF0               	movlw	-16
 34704  01C990  50E3               	movf	plusw1,w,c
 34705  01C992  5ADE               	subwfb	postinc2,f,c
 34706  01C994  0EF1               	movlw	-15
 34707  01C996  50E3               	movf	plusw1,w,c
 34708  01C998  5ADE               	subwfb	postinc2,f,c
 34709  01C99A  0EF2               	movlw	-14
 34710  01C99C  50E3               	movf	plusw1,w,c
 34711  01C99E  5ADE               	subwfb	postinc2,f,c
 34712  01C9A0  0EF3               	movlw	-13
 34713  01C9A2  50E3               	movf	plusw1,w,c
 34714  01C9A4  5ADE               	subwfb	postinc2,f,c
 34715  01C9A6  0EF4               	movlw	-12
 34716  01C9A8  50E3               	movf	plusw1,w,c
 34717  01C9AA  5ADE               	subwfb	postinc2,f,c
 34718  01C9AC  0EF5               	movlw	-11
 34719  01C9AE  50E3               	movf	plusw1,w,c
 34720  01C9B0  5ADE               	subwfb	postinc2,f,c
 34721  01C9B2                     l10244:
 34722                           
 34723                           ;stkvar	_divisor @ sp[(-2)+-16]
 34724  01C9B2  90D8               	bcf	status,0,c
 34725  01C9B4  0EF5               	movlw	-11
 34726  01C9B6  32E3               	rrcf	plusw1,f,c
 34727  01C9B8  0EF4               	movlw	-12
 34728  01C9BA  32E3               	rrcf	plusw1,f,c
 34729  01C9BC  0EF3               	movlw	-13
 34730  01C9BE  32E3               	rrcf	plusw1,f,c
 34731  01C9C0  0EF2               	movlw	-14
 34732  01C9C2  32E3               	rrcf	plusw1,f,c
 34733  01C9C4  0EF1               	movlw	-15
 34734  01C9C6  32E3               	rrcf	plusw1,f,c
 34735  01C9C8  0EF0               	movlw	-16
 34736  01C9CA  32E3               	rrcf	plusw1,f,c
 34737  01C9CC  0EEF               	movlw	-17
 34738  01C9CE  32E3               	rrcf	plusw1,f,c
 34739  01C9D0  0EEE               	movlw	-18
 34740  01C9D2  32E3               	rrcf	plusw1,f,c
 34741                           
 34742                           ;stkvar	_counter @ sp[(-2)+1]
 34743  01C9D4  0EFF               	movlw	-1
 34744  01C9D6  50E3               	movf	plusw1,w,c
 34745  01C9D8  6E2A               	movwf	btemp^0,c
 34746  01C9DA  0E01               	movlw	1
 34747  01C9DC  5E2A               	subwf	btemp^0,f,c
 34748  01C9DE  0EFF               	movlw	-1
 34749  01C9E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 34750  01C9E6  A4D8               	btfss	status,2,c
 34751  01C9E8  D7A4               	goto	u8240
 34752  01C9EA                     u8260:
 34753                           
 34754                           ;stkvar	_sign @ sp[(-2)+0]
 34755  01C9EA  0EFE               	movlw	-2
 34756  01C9EC  50E3               	movf	plusw1,w,c
 34757  01C9EE  B4D8               	btfsc	status,2,c
 34758  01C9F0  D025               	goto	u8280
 34759                           
 34760                           ;stkvar	_dividend @ sp[(-2)+-8]
 34761                           ;stkvar	_dividend @ sp[(-2)+-8]
 34762  01C9F2  0EF6               	movlw	-10
 34763  01C9F4  6CE3               	negf	plusw1,c
 34764  01C9F6  0EF7               	movlw	-9
 34765  01C9F8  1EE3               	comf	plusw1,f,c
 34766  01C9FA  0EF8               	movlw	-8
 34767  01C9FC  1EE3               	comf	plusw1,f,c
 34768  01C9FE  0EF9               	movlw	-7
 34769  01CA00  1EE3               	comf	plusw1,f,c
 34770  01CA02  0EFA               	movlw	-6
 34771  01CA04  1EE3               	comf	plusw1,f,c
 34772  01CA06  0EFB               	movlw	-5
 34773  01CA08  1EE3               	comf	plusw1,f,c
 34774  01CA0A  0EFC               	movlw	-4
 34775  01CA0C  1EE3               	comf	plusw1,f,c
 34776  01CA0E  0EFD               	movlw	-3
 34777  01CA10  1EE3               	comf	plusw1,f,c
 34778  01CA12  E314               	bnc	u8280
 34779  01CA14  0EF7               	movlw	-9
 34780  01CA16  2AE3               	incf	plusw1,f,c
 34781  01CA18  E311               	bnc	u8280
 34782  01CA1A  0EF8               	movlw	-8
 34783  01CA1C  2AE3               	incf	plusw1,f,c
 34784  01CA1E  E30E               	bnc	u8280
 34785  01CA20  0EF9               	movlw	-7
 34786  01CA22  2AE3               	incf	plusw1,f,c
 34787  01CA24  E30B               	bnc	u8280
 34788  01CA26  0EFA               	movlw	-6
 34789  01CA28  2AE3               	incf	plusw1,f,c
 34790  01CA2A  E308               	bnc	u8280
 34791  01CA2C  0EFB               	movlw	-5
 34792  01CA2E  2AE3               	incf	plusw1,f,c
 34793  01CA30  E305               	bnc	u8280
 34794  01CA32  0EFC               	movlw	-4
 34795  01CA34  2AE3               	incf	plusw1,f,c
 34796  01CA36  E302               	bnc	u8280
 34797  01CA38  0EFD               	movlw	-3
 34798  01CA3A  2AE3               	incf	plusw1,f,c
 34799  01CA3C                     u8280:
 34800                           
 34801                           ;stkvar	_dividend @ sp[(-2)+-8]
 34802  01CA3C  0EF6               	movlw	246
 34803  01CA3E  24E1               	addwf	fsr1l,w,c
 34804  01CA40  6ED9               	movwf	fsr2l,c
 34805  01CA42  0EFF               	movlw	255
 34806  01CA44  20E2               	addwfc	fsr1h,w,c
 34807  01CA46  6EDA               	movwf	fsr2h,c
 34808                           
 34809                           ;stkvar	?___aomod @ sp[(-2)+-8]
 34810  01CA48  0E08               	movlw	8
 34811  01CA4A  6E2A               	movwf	btemp^0,c
 34812  01CA4C  0EF6               	movlw	-10
 34813  01CA4E                     us829999:
 34814  01CA4E  006F FF7B FFE3     	movff	postinc2,plusw1
 34815  01CA54  28E8               	incf	wreg,w,c
 34816  01CA56  2E2A               	decfsz	btemp^0,f,c
 34817  01CA58  D7FA               	bra	us829999
 34818                           
 34819                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 34820  01CA5A  52E5               	movf	postdec1,f,c
 34821  01CA5C  52E5               	movf	postdec1,f,c
 34822  01CA5E  0012               	return		;funcret
 34823  01CA60                     __end_of___aomod:
 34824                           	opt callstack 0
 34825                           
 34826 ;; *************** function ___aodiv *****************
 34827 ;; Defined at:
 34828 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 34829 ;; Parameters:    Size  Location     Type
 34830 ;;  dividend        8  [STACK] long long 
 34831 ;;  divisor         8  [STACK] long long 
 34832 ;; Auto vars:     Size  Location     Type
 34833 ;;  quotient        8  [STACK] long long 
 34834 ;;  sign            1  [STACK] unsigned char 
 34835 ;;  counter         1  [STACK] unsigned char 
 34836 ;; Return value:  Size  Location     Type
 34837 ;;                  8  [STACK] long long 
 34838 ;; Registers used:
 34839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34840 ;; Tracked objects:
 34841 ;;		On entry : 0/0
 34842 ;;		On exit  : 0/0
 34843 ;;		Unchanged: 0/0
 34844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34849 ;;Total ram usage:        0 bytes
 34850 ;; Hardware stack levels used:    1
 34851 ;; Hardware stack levels required when called:   15
 34852 ;; This function calls:
 34853 ;;		Nothing
 34854 ;; This function is called by:
 34855 ;;		_dtoa
 34856 ;;		___secs_to_tm
 34857 ;;		___secs_to_zone
 34858 ;;		___year_to_secs
 34859 ;; This function uses a reentrant model
 34860 ;;
 34861                           
 34862                           	psect	text117
 34863  01BC48                     __ptext117:
 34864                           	opt callstack 0
 34865  01BC48                     ___aodiv:
 34866                           	opt callstack 0
 34867                           
 34868                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 34869  01BC48  0E0A               	movlw	10
 34870  01BC4A  26E1               	addwf	fsr1l,f,c
 34871  01BC4C  0E00               	movlw	0
 34872  01BC4E  22E2               	addwfc	fsr1h,f,c
 34873                           
 34874                           ;stkvar	_sign @ sp[(-10)+8]
 34875                           
 34876                           ;incstack = 0
 34877 ;; hardware stack exceeded
 34878  01BC50  0EFE               	movlw	-2
 34879  01BC52  6AE3               	clrf	plusw1,c
 34880                           
 34881                           ;stkvar	_divisor @ sp[(-10)+-16]
 34882  01BC54  0EED               	movlw	-19
 34883  01BC56  AEE3               	btfss	plusw1,7,c
 34884  01BC58  D028               	goto	l10184
 34885                           
 34886                           ;stkvar	_divisor @ sp[(-10)+-16]
 34887                           ;stkvar	_divisor @ sp[(-10)+-16]
 34888  01BC5A  0EE6               	movlw	-26
 34889  01BC5C  6CE3               	negf	plusw1,c
 34890  01BC5E  0EE7               	movlw	-25
 34891  01BC60  1EE3               	comf	plusw1,f,c
 34892  01BC62  0EE8               	movlw	-24
 34893  01BC64  1EE3               	comf	plusw1,f,c
 34894  01BC66  0EE9               	movlw	-23
 34895  01BC68  1EE3               	comf	plusw1,f,c
 34896  01BC6A  0EEA               	movlw	-22
 34897  01BC6C  1EE3               	comf	plusw1,f,c
 34898  01BC6E  0EEB               	movlw	-21
 34899  01BC70  1EE3               	comf	plusw1,f,c
 34900  01BC72  0EEC               	movlw	-20
 34901  01BC74  1EE3               	comf	plusw1,f,c
 34902  01BC76  0EED               	movlw	-19
 34903  01BC78  1EE3               	comf	plusw1,f,c
 34904  01BC7A  E314               	bnc	u8080
 34905  01BC7C  0EE7               	movlw	-25
 34906  01BC7E  2AE3               	incf	plusw1,f,c
 34907  01BC80  E311               	bnc	u8080
 34908  01BC82  0EE8               	movlw	-24
 34909  01BC84  2AE3               	incf	plusw1,f,c
 34910  01BC86  E30E               	bnc	u8080
 34911  01BC88  0EE9               	movlw	-23
 34912  01BC8A  2AE3               	incf	plusw1,f,c
 34913  01BC8C  E30B               	bnc	u8080
 34914  01BC8E  0EEA               	movlw	-22
 34915  01BC90  2AE3               	incf	plusw1,f,c
 34916  01BC92  E308               	bnc	u8080
 34917  01BC94  0EEB               	movlw	-21
 34918  01BC96  2AE3               	incf	plusw1,f,c
 34919  01BC98  E305               	bnc	u8080
 34920  01BC9A  0EEC               	movlw	-20
 34921  01BC9C  2AE3               	incf	plusw1,f,c
 34922  01BC9E  E302               	bnc	u8080
 34923  01BCA0  0EED               	movlw	-19
 34924  01BCA2  2AE3               	incf	plusw1,f,c
 34925  01BCA4                     u8080:
 34926                           
 34927                           ;stkvar	_sign @ sp[(-10)+8]
 34928  01BCA4  0EFE               	movlw	-2
 34929  01BCA6  6AE3               	clrf	plusw1,c
 34930  01BCA8  2AE3               	incf	plusw1,f,c
 34931  01BCAA                     l10184:
 34932                           
 34933                           ;stkvar	_dividend @ sp[(-10)+-8]
 34934  01BCAA  0EF5               	movlw	-11
 34935  01BCAC  AEE3               	btfss	plusw1,7,c
 34936  01BCAE  D027               	goto	l10190
 34937                           
 34938                           ;stkvar	_dividend @ sp[(-10)+-8]
 34939                           ;stkvar	_dividend @ sp[(-10)+-8]
 34940  01BCB0  0EEE               	movlw	-18
 34941  01BCB2  6CE3               	negf	plusw1,c
 34942  01BCB4  0EEF               	movlw	-17
 34943  01BCB6  1EE3               	comf	plusw1,f,c
 34944  01BCB8  0EF0               	movlw	-16
 34945  01BCBA  1EE3               	comf	plusw1,f,c
 34946  01BCBC  0EF1               	movlw	-15
 34947  01BCBE  1EE3               	comf	plusw1,f,c
 34948  01BCC0  0EF2               	movlw	-14
 34949  01BCC2  1EE3               	comf	plusw1,f,c
 34950  01BCC4  0EF3               	movlw	-13
 34951  01BCC6  1EE3               	comf	plusw1,f,c
 34952  01BCC8  0EF4               	movlw	-12
 34953  01BCCA  1EE3               	comf	plusw1,f,c
 34954  01BCCC  0EF5               	movlw	-11
 34955  01BCCE  1EE3               	comf	plusw1,f,c
 34956  01BCD0  E314               	bnc	u8100
 34957  01BCD2  0EEF               	movlw	-17
 34958  01BCD4  2AE3               	incf	plusw1,f,c
 34959  01BCD6  E311               	bnc	u8100
 34960  01BCD8  0EF0               	movlw	-16
 34961  01BCDA  2AE3               	incf	plusw1,f,c
 34962  01BCDC  E30E               	bnc	u8100
 34963  01BCDE  0EF1               	movlw	-15
 34964  01BCE0  2AE3               	incf	plusw1,f,c
 34965  01BCE2  E30B               	bnc	u8100
 34966  01BCE4  0EF2               	movlw	-14
 34967  01BCE6  2AE3               	incf	plusw1,f,c
 34968  01BCE8  E308               	bnc	u8100
 34969  01BCEA  0EF3               	movlw	-13
 34970  01BCEC  2AE3               	incf	plusw1,f,c
 34971  01BCEE  E305               	bnc	u8100
 34972  01BCF0  0EF4               	movlw	-12
 34973  01BCF2  2AE3               	incf	plusw1,f,c
 34974  01BCF4  E302               	bnc	u8100
 34975  01BCF6  0EF5               	movlw	-11
 34976  01BCF8  2AE3               	incf	plusw1,f,c
 34977  01BCFA                     u8100:
 34978                           
 34979                           ;stkvar	_sign @ sp[(-10)+8]
 34980  01BCFA  0EFE               	movlw	-2
 34981  01BCFC  70E3               	btg	plusw1,0,c
 34982  01BCFE                     l10190:
 34983                           
 34984                           ;stkvar	_quotient @ sp[(-10)+0]
 34985  01BCFE  0E07               	movlw	7
 34986  01BD00  6E2A               	movwf	btemp^0,c
 34987  01BD02  0EF6               	movlw	-10
 34988  01BD04                     u8111:
 34989  01BD04  6AE3               	clrf	plusw1,c
 34990  01BD06  2AE8               	incf	wreg,f,c
 34991  01BD08  062A               	decf	btemp^0,f,c
 34992  01BD0A  E2FC               	bc	u8111
 34993                           
 34994                           ;stkvar	_divisor @ sp[(-10)+-16]
 34995  01BD0C  0EE6               	movlw	-26
 34996  01BD0E  50E3               	movf	plusw1,w,c
 34997  01BD10  E116               	bnz	u8120
 34998  01BD12  0EE7               	movlw	-25
 34999  01BD14  50E3               	movf	plusw1,w,c
 35000  01BD16  E113               	bnz	u8120
 35001  01BD18  0EE8               	movlw	-24
 35002  01BD1A  50E3               	movf	plusw1,w,c
 35003  01BD1C  E110               	bnz	u8120
 35004  01BD1E  0EE9               	movlw	-23
 35005  01BD20  50E3               	movf	plusw1,w,c
 35006  01BD22  E10D               	bnz	u8120
 35007  01BD24  0EEA               	movlw	-22
 35008  01BD26  50E3               	movf	plusw1,w,c
 35009  01BD28  E10A               	bnz	u8120
 35010  01BD2A  0EEB               	movlw	-21
 35011  01BD2C  50E3               	movf	plusw1,w,c
 35012  01BD2E  E107               	bnz	u8120
 35013  01BD30  0EEC               	movlw	-20
 35014  01BD32  50E3               	movf	plusw1,w,c
 35015  01BD34  E104               	bnz	u8120
 35016  01BD36  0EED               	movlw	-19
 35017  01BD38  50E3               	movf	plusw1,w,c
 35018  01BD3A  B4D8               	btfsc	status,2,c
 35019  01BD3C  D088               	goto	u8150
 35020  01BD3E                     u8120:
 35021                           
 35022                           ;stkvar	_counter @ sp[(-10)+9]
 35023  01BD3E  0EFF               	movlw	-1
 35024  01BD40  6AE3               	clrf	plusw1,c
 35025  01BD42  D012               	goto	L41
 35026  01BD44                     l10196:
 35027                           
 35028                           ;stkvar	_divisor @ sp[(-10)+-16]
 35029  01BD44  90D8               	bcf	status,0,c
 35030  01BD46  0EE6               	movlw	-26
 35031  01BD48  36E3               	rlcf	plusw1,f,c
 35032  01BD4A  0EE7               	movlw	-25
 35033  01BD4C  36E3               	rlcf	plusw1,f,c
 35034  01BD4E  0EE8               	movlw	-24
 35035  01BD50  36E3               	rlcf	plusw1,f,c
 35036  01BD52  0EE9               	movlw	-23
 35037  01BD54  36E3               	rlcf	plusw1,f,c
 35038  01BD56  0EEA               	movlw	-22
 35039  01BD58  36E3               	rlcf	plusw1,f,c
 35040  01BD5A  0EEB               	movlw	-21
 35041  01BD5C  36E3               	rlcf	plusw1,f,c
 35042  01BD5E  0EEC               	movlw	-20
 35043  01BD60  36E3               	rlcf	plusw1,f,c
 35044  01BD62  0EED               	movlw	-19
 35045  01BD64  36E3               	rlcf	plusw1,f,c
 35046                           
 35047                           ;stkvar	_counter @ sp[(-10)+9]
 35048  01BD66  0EFF               	movlw	-1
 35049  01BD68                     L41:
 35050  01BD68  2AE3               	incf	plusw1,f,c
 35051                           
 35052                           ;stkvar	_divisor @ sp[(-10)+-16]
 35053  01BD6A  0EED               	movlw	-19
 35054  01BD6C  AEE3               	btfss	plusw1,7,c
 35055  01BD6E  D7EA               	goto	l10196
 35056  01BD70                     u8130:
 35057                           
 35058                           ;stkvar	_quotient @ sp[(-10)+0]
 35059  01BD70  90D8               	bcf	status,0,c
 35060  01BD72  0EF6               	movlw	-10
 35061  01BD74  36E3               	rlcf	plusw1,f,c
 35062  01BD76  0EF7               	movlw	-9
 35063  01BD78  36E3               	rlcf	plusw1,f,c
 35064  01BD7A  0EF8               	movlw	-8
 35065  01BD7C  36E3               	rlcf	plusw1,f,c
 35066  01BD7E  0EF9               	movlw	-7
 35067  01BD80  36E3               	rlcf	plusw1,f,c
 35068  01BD82  0EFA               	movlw	-6
 35069  01BD84  36E3               	rlcf	plusw1,f,c
 35070  01BD86  0EFB               	movlw	-5
 35071  01BD88  36E3               	rlcf	plusw1,f,c
 35072  01BD8A  0EFC               	movlw	-4
 35073  01BD8C  36E3               	rlcf	plusw1,f,c
 35074  01BD8E  0EFD               	movlw	-3
 35075  01BD90  36E3               	rlcf	plusw1,f,c
 35076                           
 35077                           ;stkvar	_divisor @ sp[(-10)+-16]
 35078                           ;stkvar	_dividend @ sp[(-10)+-8]
 35079  01BD92  50E1               	movf	fsr1l,w,c
 35080  01BD94  0FEE               	addlw	-18
 35081  01BD96  6ED9               	movwf	fsr2l,c
 35082  01BD98  50E2               	movf	fsr1h,w,c
 35083  01BD9A  6EDA               	movwf	fsr2h,c
 35084  01BD9C  0EFF               	movlw	255
 35085  01BD9E  22DA               	addwfc	fsr2h,f,c
 35086  01BDA0  0EE6               	movlw	-26
 35087  01BDA2  50E3               	movf	plusw1,w,c
 35088  01BDA4  5CDE               	subwf	postinc2,w,c
 35089  01BDA6  0EE7               	movlw	-25
 35090  01BDA8  50E3               	movf	plusw1,w,c
 35091  01BDAA  58DE               	subwfb	postinc2,w,c
 35092  01BDAC  0EE8               	movlw	-24
 35093  01BDAE  50E3               	movf	plusw1,w,c
 35094  01BDB0  58DE               	subwfb	postinc2,w,c
 35095  01BDB2  0EE9               	movlw	-23
 35096  01BDB4  50E3               	movf	plusw1,w,c
 35097  01BDB6  58DE               	subwfb	postinc2,w,c
 35098  01BDB8  0EEA               	movlw	-22
 35099  01BDBA  50E3               	movf	plusw1,w,c
 35100  01BDBC  58DE               	subwfb	postinc2,w,c
 35101  01BDBE  0EEB               	movlw	-21
 35102  01BDC0  50E3               	movf	plusw1,w,c
 35103  01BDC2  58DE               	subwfb	postinc2,w,c
 35104  01BDC4  0EEC               	movlw	-20
 35105  01BDC6  50E3               	movf	plusw1,w,c
 35106  01BDC8  58DE               	subwfb	postinc2,w,c
 35107  01BDCA  0EED               	movlw	-19
 35108  01BDCC  50E3               	movf	plusw1,w,c
 35109  01BDCE  58DE               	subwfb	postinc2,w,c
 35110  01BDD0  A0D8               	btfss	status,0,c
 35111  01BDD2  D021               	goto	l10208
 35112                           
 35113                           ;stkvar	_divisor @ sp[(-10)+-16]
 35114                           ;stkvar	_dividend @ sp[(-10)+-8]
 35115  01BDD4  50E1               	movf	fsr1l,w,c
 35116  01BDD6  0FEE               	addlw	-18
 35117  01BDD8  6ED9               	movwf	fsr2l,c
 35118  01BDDA  50E2               	movf	fsr1h,w,c
 35119  01BDDC  6EDA               	movwf	fsr2h,c
 35120  01BDDE  0EFF               	movlw	255
 35121  01BDE0  22DA               	addwfc	fsr2h,f,c
 35122  01BDE2  0EE6               	movlw	-26
 35123  01BDE4  50E3               	movf	plusw1,w,c
 35124  01BDE6  5EDE               	subwf	postinc2,f,c
 35125  01BDE8  0EE7               	movlw	-25
 35126  01BDEA  50E3               	movf	plusw1,w,c
 35127  01BDEC  5ADE               	subwfb	postinc2,f,c
 35128  01BDEE  0EE8               	movlw	-24
 35129  01BDF0  50E3               	movf	plusw1,w,c
 35130  01BDF2  5ADE               	subwfb	postinc2,f,c
 35131  01BDF4  0EE9               	movlw	-23
 35132  01BDF6  50E3               	movf	plusw1,w,c
 35133  01BDF8  5ADE               	subwfb	postinc2,f,c
 35134  01BDFA  0EEA               	movlw	-22
 35135  01BDFC  50E3               	movf	plusw1,w,c
 35136  01BDFE  5ADE               	subwfb	postinc2,f,c
 35137  01BE00  0EEB               	movlw	-21
 35138  01BE02  50E3               	movf	plusw1,w,c
 35139  01BE04  5ADE               	subwfb	postinc2,f,c
 35140  01BE06  0EEC               	movlw	-20
 35141  01BE08  50E3               	movf	plusw1,w,c
 35142  01BE0A  5ADE               	subwfb	postinc2,f,c
 35143  01BE0C  0EED               	movlw	-19
 35144  01BE0E  50E3               	movf	plusw1,w,c
 35145  01BE10  5ADE               	subwfb	postinc2,f,c
 35146                           
 35147                           ;stkvar	_quotient @ sp[(-10)+0]
 35148  01BE12  0EF6               	movlw	-10
 35149  01BE14  80E3               	bsf	plusw1,0,c
 35150  01BE16                     l10208:
 35151                           
 35152                           ;stkvar	_divisor @ sp[(-10)+-16]
 35153  01BE16  90D8               	bcf	status,0,c
 35154  01BE18  0EED               	movlw	-19
 35155  01BE1A  32E3               	rrcf	plusw1,f,c
 35156  01BE1C  0EEC               	movlw	-20
 35157  01BE1E  32E3               	rrcf	plusw1,f,c
 35158  01BE20  0EEB               	movlw	-21
 35159  01BE22  32E3               	rrcf	plusw1,f,c
 35160  01BE24  0EEA               	movlw	-22
 35161  01BE26  32E3               	rrcf	plusw1,f,c
 35162  01BE28  0EE9               	movlw	-23
 35163  01BE2A  32E3               	rrcf	plusw1,f,c
 35164  01BE2C  0EE8               	movlw	-24
 35165  01BE2E  32E3               	rrcf	plusw1,f,c
 35166  01BE30  0EE7               	movlw	-25
 35167  01BE32  32E3               	rrcf	plusw1,f,c
 35168  01BE34  0EE6               	movlw	-26
 35169  01BE36  32E3               	rrcf	plusw1,f,c
 35170                           
 35171                           ;stkvar	_counter @ sp[(-10)+9]
 35172  01BE38  0EFF               	movlw	-1
 35173  01BE3A  50E3               	movf	plusw1,w,c
 35174  01BE3C  6E2A               	movwf	btemp^0,c
 35175  01BE3E  0E01               	movlw	1
 35176  01BE40  5E2A               	subwf	btemp^0,f,c
 35177  01BE42  0EFF               	movlw	-1
 35178  01BE44  0060  F0AB  FFE3   	movff	btemp,plusw1
 35179  01BE4A  A4D8               	btfss	status,2,c
 35180  01BE4C  D791               	goto	u8130
 35181  01BE4E                     u8150:
 35182                           
 35183                           ;stkvar	_sign @ sp[(-10)+8]
 35184  01BE4E  0EFE               	movlw	-2
 35185  01BE50  50E3               	movf	plusw1,w,c
 35186  01BE52  B4D8               	btfsc	status,2,c
 35187  01BE54  D025               	goto	u8170
 35188                           
 35189                           ;stkvar	_quotient @ sp[(-10)+0]
 35190                           ;stkvar	_quotient @ sp[(-10)+0]
 35191  01BE56  0EF6               	movlw	-10
 35192  01BE58  6CE3               	negf	plusw1,c
 35193  01BE5A  0EF7               	movlw	-9
 35194  01BE5C  1EE3               	comf	plusw1,f,c
 35195  01BE5E  0EF8               	movlw	-8
 35196  01BE60  1EE3               	comf	plusw1,f,c
 35197  01BE62  0EF9               	movlw	-7
 35198  01BE64  1EE3               	comf	plusw1,f,c
 35199  01BE66  0EFA               	movlw	-6
 35200  01BE68  1EE3               	comf	plusw1,f,c
 35201  01BE6A  0EFB               	movlw	-5
 35202  01BE6C  1EE3               	comf	plusw1,f,c
 35203  01BE6E  0EFC               	movlw	-4
 35204  01BE70  1EE3               	comf	plusw1,f,c
 35205  01BE72  0EFD               	movlw	-3
 35206  01BE74  1EE3               	comf	plusw1,f,c
 35207  01BE76  E314               	bnc	u8170
 35208  01BE78  0EF7               	movlw	-9
 35209  01BE7A  2AE3               	incf	plusw1,f,c
 35210  01BE7C  E311               	bnc	u8170
 35211  01BE7E  0EF8               	movlw	-8
 35212  01BE80  2AE3               	incf	plusw1,f,c
 35213  01BE82  E30E               	bnc	u8170
 35214  01BE84  0EF9               	movlw	-7
 35215  01BE86  2AE3               	incf	plusw1,f,c
 35216  01BE88  E30B               	bnc	u8170
 35217  01BE8A  0EFA               	movlw	-6
 35218  01BE8C  2AE3               	incf	plusw1,f,c
 35219  01BE8E  E308               	bnc	u8170
 35220  01BE90  0EFB               	movlw	-5
 35221  01BE92  2AE3               	incf	plusw1,f,c
 35222  01BE94  E305               	bnc	u8170
 35223  01BE96  0EFC               	movlw	-4
 35224  01BE98  2AE3               	incf	plusw1,f,c
 35225  01BE9A  E302               	bnc	u8170
 35226  01BE9C  0EFD               	movlw	-3
 35227  01BE9E  2AE3               	incf	plusw1,f,c
 35228  01BEA0                     u8170:
 35229                           
 35230                           ;stkvar	_quotient @ sp[(-10)+0]
 35231  01BEA0  0EF6               	movlw	246
 35232  01BEA2  24E1               	addwf	fsr1l,w,c
 35233  01BEA4  6ED9               	movwf	fsr2l,c
 35234  01BEA6  0EFF               	movlw	255
 35235  01BEA8  20E2               	addwfc	fsr1h,w,c
 35236  01BEAA  6EDA               	movwf	fsr2h,c
 35237                           
 35238                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 35239  01BEAC  0E08               	movlw	8
 35240  01BEAE  6E2A               	movwf	btemp^0,c
 35241  01BEB0  0EEE               	movlw	-18
 35242  01BEB2                     us818999:
 35243  01BEB2  006F FF7B FFE3     	movff	postinc2,plusw1
 35244  01BEB8  28E8               	incf	wreg,w,c
 35245  01BEBA  2E2A               	decfsz	btemp^0,f,c
 35246  01BEBC  D7FA               	bra	us818999
 35247                           
 35248                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 35249  01BEBE  0EF6               	movlw	246
 35250  01BEC0  26E1               	addwf	fsr1l,f,c
 35251  01BEC2  0EFF               	movlw	255
 35252  01BEC4  22E2               	addwfc	fsr1h,f,c
 35253  01BEC6  0012               	return		;funcret
 35254  01BEC8                     __end_of___aodiv:
 35255                           	opt callstack 0
 35256                           
 35257 ;; *************** function _ctoa *****************
 35258 ;; Defined at:
 35259 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35260 ;; Parameters:    Size  Location     Type
 35261 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35262 ;;		 -> f(6), NULL(0), 
 35263 ;;  c               1  [STACK] unsigned char 
 35264 ;; Auto vars:     Size  Location     Type
 35265 ;;  w               2  [STACK] int 
 35266 ;;  l               2    0        int 
 35267 ;; Return value:  Size  Location     Type
 35268 ;;                  2  [STACK] int 
 35269 ;; Registers used:
 35270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35271 ;; Tracked objects:
 35272 ;;		On entry : 0/0
 35273 ;;		On exit  : 0/0
 35274 ;;		Unchanged: 0/0
 35275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35280 ;;Total ram usage:        0 bytes
 35281 ;; Hardware stack levels used:    1
 35282 ;; Hardware stack levels required when called:   20
 35283 ;; This function calls:
 35284 ;;		_pad
 35285 ;; This function is called by:
 35286 ;;		_vfpfcnvrt
 35287 ;; This function uses a reentrant model
 35288 ;;
 35289                           
 35290                           	psect	text118
 35291  000D28                     __ptext118:
 35292                           	opt callstack 0
 35293  000D28                     _ctoa:
 35294                           	opt callstack 0
 35295                           
 35296                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35297  000D28  52E6               	movf	postinc1,f,c
 35298  000D2A  52E6               	movf	postinc1,f,c
 35299                           
 35300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 35301                           
 35302                           ;incstack = 0
 35303 ;; hardware stack exceeded
 35304  000D2C  504A               	movf	_width^0,w,c
 35305  000D2E  104B               	iorwf	(_width+1)^0,w,c
 35306  000D30  A4D8               	btfss	status,2,c
 35307  000D32  D009               	goto	l15482
 35308                           
 35309                           ;stkvar	_w @ sp[(-2)+0]
 35310  000D34  0EFE               	movlw	-2
 35311  000D36  0060  F12B  FFE3   	movff	_width,plusw1
 35312  000D3C  0EFF               	movlw	-1
 35313  000D3E  0060  F12F  FFE3   	movff	_width+1,plusw1
 35314  000D44  D016               	goto	l15484
 35315  000D46                     l15482:
 35316  000D46  0EFF               	movlw	255
 35317  000D48  6E34               	movwf	(btemp+10)^0,c
 35318  000D4A  0EFF               	movlw	255
 35319  000D4C  6E35               	movwf	(btemp+11)^0,c
 35320  000D4E  0060  F128  F032   	movff	_width,btemp+8
 35321  000D54  0060  F12C  F033   	movff	_width+1,btemp+9
 35322  000D5A  5034               	movf	(btemp+10)^0,w,c
 35323  000D5C  2632               	addwf	(btemp+8)^0,f,c
 35324  000D5E  5035               	movf	(btemp+11)^0,w,c
 35325  000D60  2233               	addwfc	(btemp+9)^0,f,c
 35326                           
 35327                           ;stkvar	_w @ sp[(-2)+0]
 35328  000D62  0EFE               	movlw	-2
 35329  000D64  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 35330  000D6A  0EFF               	movlw	-1
 35331  000D6C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 35332  000D72                     l15484:
 35333                           
 35334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 35335                           ;stkvar	_c @ sp[(-2)+-3]
 35336  000D72  0EFB               	movlw	-5
 35337  000D74  006F FF8C  F354    	movff	plusw1,_dbuf
 35338                           
 35339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 35340  000D7A  0103               	movlb	3	; () banked
 35341  000D7C  6B55               	clrf	(_dbuf+1)& (0+255),b
 35342                           
 35343                           ; BSR set to: 3
 35344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 35345                           ;stkvar	_w @ sp[(-2)+0]
 35346  000D7E  0EFE               	movlw	-2
 35347  000D80  006F FF8F FFE6     	movff	plusw1,postinc1
 35348  000D86  006F FF8F FFE6     	movff	plusw1,postinc1
 35349  000D8C  0E54               	movlw	low _dbuf
 35350  000D8E  6EE6               	movwf	postinc1,c
 35351  000D90  0E03               	movlw	high _dbuf
 35352  000D92  6EE6               	movwf	postinc1,c
 35353                           
 35354                           ;stkvar	_fp @ sp[(-6)+-2]
 35355  000D94  0EF8               	movlw	-8
 35356  000D96  006F FF8F FFE6     	movff	plusw1,postinc1
 35357  000D9C  006F FF8F FFE6     	movff	plusw1,postinc1
 35358  000DA2  EC2F  F0FB         	call	_pad	;wreg free
 35359                           
 35360                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 35361  000DA6  0EFB               	movlw	251
 35362  000DA8  26E1               	addwf	fsr1l,f,c
 35363  000DAA  0EFF               	movlw	255
 35364  000DAC  22E2               	addwfc	fsr1h,f,c
 35365  000DAE  0012               	return		;funcret
 35366  000DB0                     __end_of_ctoa:
 35367                           	opt callstack 0
 35368                           
 35369 ;; *************** function _pad *****************
 35370 ;; Defined at:
 35371 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35372 ;; Parameters:    Size  Location     Type
 35373 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35374 ;;		 -> f(6), NULL(0), 
 35375 ;;  buf             2  [STACK] PTR unsigned char 
 35376 ;;		 -> dbuf(80), 
 35377 ;;  p               2  [STACK] int 
 35378 ;; Auto vars:     Size  Location     Type
 35379 ;;  w               2  [STACK] int 
 35380 ;;  i               2  [STACK] int 
 35381 ;; Return value:  Size  Location     Type
 35382 ;;                  2  [STACK] int 
 35383 ;; Registers used:
 35384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35385 ;; Tracked objects:
 35386 ;;		On entry : 0/3
 35387 ;;		On exit  : 0/0
 35388 ;;		Unchanged: 0/0
 35389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35394 ;;Total ram usage:        0 bytes
 35395 ;; Hardware stack levels used:    1
 35396 ;; Hardware stack levels required when called:   19
 35397 ;; This function calls:
 35398 ;;		_fputc
 35399 ;;		_fputs
 35400 ;;		_strlen
 35401 ;; This function is called by:
 35402 ;;		_ctoa
 35403 ;;		_dtoa
 35404 ;;		_efgtoa
 35405 ;;		_utoa
 35406 ;;		_xtoa
 35407 ;; This function uses a reentrant model
 35408 ;;
 35409                           
 35410                           	psect	text119
 35411  01F65E                     __ptext119:
 35412                           	opt callstack 0
 35413  01F65E                     _pad:
 35414                           	opt callstack 0
 35415                           
 35416                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35417  01F65E  52E6               	movf	postinc1,f,c
 35418  01F660  52E6               	movf	postinc1,f,c
 35419  01F662  52E6               	movf	postinc1,f,c
 35420  01F664  52E6               	movf	postinc1,f,c
 35421                           
 35422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 35423                           
 35424                           ;incstack = 0
 35425 ;; hardware stack exceeded
 35426  01F666  A04E               	btfss	_flags^0,0,c
 35427  01F668  D010               	goto	l15366
 35428                           
 35429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 35430                           ;stkvar	_fp @ sp[(-4)+-2]
 35431  01F66A  0EFA               	movlw	-6
 35432  01F66C  006F FF8F FFE6     	movff	plusw1,postinc1
 35433  01F672  006F FF8F FFE6     	movff	plusw1,postinc1
 35434                           
 35435                           ;stkvar	_buf @ sp[(-6)+-4]
 35436  01F678  0EF6               	movlw	-10
 35437  01F67A  006F FF8F FFE6     	movff	plusw1,postinc1
 35438  01F680  006F FF8F FFE6     	movff	plusw1,postinc1
 35439  01F686  ECDB  F004         	call	_fputs	;wreg free
 35440  01F68A                     l15366:
 35441                           
 35442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 35443                           ;stkvar	_p @ sp[(-4)+-6]
 35444  01F68A  0EF7               	movlw	-9
 35445  01F68C  BEE3               	btfsc	plusw1,7,c
 35446  01F68E  D011               	goto	l15370
 35447                           
 35448                           ;stkvar	_p @ sp[(-4)+-6]
 35449                           ;stkvar	_w @ sp[(-4)+0]
 35450  01F690  0EF6               	movlw	-10
 35451  01F692  006F FF8C  F02A    	movff	plusw1,btemp
 35452  01F698  0EFC               	movlw	-4
 35453  01F69A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35454  01F6A0  0EF7               	movlw	-9
 35455  01F6A2  006F FF8C  F02A    	movff	plusw1,btemp
 35456  01F6A8  0EFD               	movlw	-3
 35457  01F6AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 35458  01F6B0  D004               	goto	l2465
 35459  01F6B2                     l15370:
 35460                           
 35461                           ;stkvar	_w @ sp[(-4)+0]
 35462  01F6B2  0EFC               	movlw	-4
 35463  01F6B4  6AE3               	clrf	plusw1,c
 35464  01F6B6  0EFD               	movlw	-3
 35465  01F6B8  6AE3               	clrf	plusw1,c
 35466  01F6BA                     l2465:
 35467                           
 35468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 35469                           ;stkvar	_i @ sp[(-4)+2]
 35470  01F6BA  0EFE               	movlw	-2
 35471  01F6BC  6AE3               	clrf	plusw1,c
 35472  01F6BE  0EFF               	movlw	-1
 35473  01F6C0  6AE3               	clrf	plusw1,c
 35474                           
 35475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35476  01F6C2  D01E               	goto	l15376
 35477  01F6C4                     l15372:
 35478                           
 35479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 35480                           ;stkvar	_fp @ sp[(-4)+-2]
 35481  01F6C4  0EFA               	movlw	-6
 35482  01F6C6  006F FF8F FFE6     	movff	plusw1,postinc1
 35483  01F6CC  006F FF8F FFE6     	movff	plusw1,postinc1
 35484  01F6D2  0E20               	movlw	32
 35485  01F6D4  6EE6               	movwf	postinc1,c
 35486  01F6D6  0E00               	movlw	0
 35487  01F6D8  6EE6               	movwf	postinc1,c
 35488  01F6DA  ECF8  F0F8         	call	_fputc	;wreg free
 35489                           
 35490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 35491                           ;stkvar	_i @ sp[(-4)+2]
 35492  01F6DE  0EFE               	movlw	-2
 35493  01F6E0  50E3               	movf	plusw1,w,c
 35494  01F6E2  0F01               	addlw	1
 35495  01F6E4  6E2A               	movwf	btemp^0,c
 35496  01F6E6  0EFE               	movlw	-2
 35497  01F6E8  0060  F0AB  FFE3   	movff	btemp,plusw1
 35498  01F6EE  6A2A               	clrf	btemp^0,c
 35499  01F6F0  0EFF               	movlw	-1
 35500  01F6F2  50E3               	movf	plusw1,w,c
 35501  01F6F4  202A               	addwfc	btemp^0,w,c
 35502  01F6F6  6E2A               	movwf	btemp^0,c
 35503  01F6F8  0EFF               	movlw	-1
 35504  01F6FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 35505  01F700                     l15376:
 35506                           
 35507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35508                           ;stkvar	_w @ sp[(-4)+0]
 35509                           ;stkvar	_i @ sp[(-4)+2]
 35510  01F700  50E1               	movf	fsr1l,w,c
 35511  01F702  0FFE               	addlw	-2
 35512  01F704  6ED9               	movwf	fsr2l,c
 35513  01F706  50E2               	movf	fsr1h,w,c
 35514  01F708  6EDA               	movwf	fsr2h,c
 35515  01F70A  0EFF               	movlw	255
 35516  01F70C  22DA               	addwfc	fsr2h,f,c
 35517  01F70E  0EFC               	movlw	-4
 35518  01F710  50E3               	movf	plusw1,w,c
 35519  01F712  5CDE               	subwf	postinc2,w,c
 35520  01F714  50DE               	movf	postinc2,w,c
 35521  01F716  0A80               	xorlw	128
 35522  01F718  6E2A               	movwf	btemp^0,c
 35523  01F71A  0EFD               	movlw	-3
 35524  01F71C  50E3               	movf	plusw1,w,c
 35525  01F71E  0A80               	xorlw	128
 35526  01F720  582A               	subwfb	btemp^0,w,c
 35527  01F722  A0D8               	btfss	status,0,c
 35528  01F724  D7CF               	goto	l15372
 35529                           
 35530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 35531  01F726  B04E               	btfsc	_flags^0,0,c
 35532  01F728  D010               	goto	l15380
 35533                           
 35534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 35535                           ;stkvar	_fp @ sp[(-4)+-2]
 35536  01F72A  0EFA               	movlw	-6
 35537  01F72C  006F FF8F FFE6     	movff	plusw1,postinc1
 35538  01F732  006F FF8F FFE6     	movff	plusw1,postinc1
 35539                           
 35540                           ;stkvar	_buf @ sp[(-6)+-4]
 35541  01F738  0EF6               	movlw	-10
 35542  01F73A  006F FF8F FFE6     	movff	plusw1,postinc1
 35543  01F740  006F FF8F FFE6     	movff	plusw1,postinc1
 35544  01F746  ECDB  F004         	call	_fputs	;wreg free
 35545  01F74A                     l15380:
 35546                           
 35547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 35548                           ;stkvar	_w @ sp[(-4)+0]
 35549                           ;stkvar	_buf @ sp[(-4)+-4]
 35550  01F74A  0EF8               	movlw	-8
 35551  01F74C  006F FF8F FFE6     	movff	plusw1,postinc1
 35552  01F752  006F FF8F FFE6     	movff	plusw1,postinc1
 35553  01F758  EC3D  F004         	call	_strlen	;wreg free
 35554  01F75C  0EFC               	movlw	-4
 35555  01F75E  50E3               	movf	plusw1,w,c
 35556  01F760  262A               	addwf	btemp^0,f,c
 35557  01F762  0EFD               	movlw	-3
 35558  01F764  50E3               	movf	plusw1,w,c
 35559  01F766  222B               	addwfc	(btemp+1)^0,f,c
 35560                           
 35561                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 35562  01F768  0EF6               	movlw	246
 35563  01F76A  26E1               	addwf	fsr1l,f,c
 35564  01F76C  0EFF               	movlw	255
 35565  01F76E  22E2               	addwfc	fsr1h,f,c
 35566  01F770  0012               	return		;funcret
 35567  01F772                     __end_of_pad:
 35568                           	opt callstack 0
 35569                           
 35570 ;; *************** function _strlen *****************
 35571 ;; Defined at:
 35572 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 35573 ;; Parameters:    Size  Location     Type
 35574 ;;  s               2  [STACK] PTR const unsigned char 
 35575 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35576 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35577 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35578 ;;		 -> STR_3(5), V(181), 
 35579 ;; Auto vars:     Size  Location     Type
 35580 ;;  a               2  [STACK] PTR const unsigned char 
 35581 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35582 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35583 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35584 ;;		 -> STR_3(5), V(181), 
 35585 ;; Return value:  Size  Location     Type
 35586 ;;                  2  [STACK] unsigned int 
 35587 ;; Registers used:
 35588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 35589 ;; Tracked objects:
 35590 ;;		On entry : 0/0
 35591 ;;		On exit  : 0/0
 35592 ;;		Unchanged: 0/0
 35593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35598 ;;Total ram usage:        0 bytes
 35599 ;; Hardware stack levels used:    1
 35600 ;; Hardware stack levels required when called:   15
 35601 ;; This function calls:
 35602 ;;		Nothing
 35603 ;; This function is called by:
 35604 ;;		_eaDogM_WriteString
 35605 ;;		_spinners
 35606 ;;		_calc_bsoc
 35607 ;;		_pad
 35608 ;;		_stoa
 35609 ;; This function uses a reentrant model
 35610 ;;
 35611                           
 35612                           	psect	text120
 35613  00087A                     __ptext120:
 35614                           	opt callstack 0
 35615  00087A                     _strlen:
 35616                           	opt callstack 0
 35617                           
 35618                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35619  00087A  52E6               	movf	postinc1,f,c
 35620  00087C  52E6               	movf	postinc1,f,c
 35621                           
 35622                           ;stkvar	_s @ sp[(-2)+-2]
 35623                           
 35624                           ;incstack = 0
 35625 ;; hardware stack exceeded
 35626  00087E  0EFC               	movlw	-4
 35627  000880  006F FF8C  F034    	movff	plusw1,btemp+10
 35628  000886  0EFD               	movlw	-3
 35629  000888  006F FF8C  F035    	movff	plusw1,btemp+11
 35630                           
 35631                           ;stkvar	_a @ sp[(-2)+0]
 35632  00088E  0EFF               	movlw	-1
 35633  000890  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35634  000896  0EFE               	movlw	-2
 35635  000898  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35636  00089E  D011               	goto	l15306
 35637  0008A0                     l15304:
 35638                           
 35639                           ;stkvar	_s @ sp[(-2)+-2]
 35640  0008A0  0EFC               	movlw	-4
 35641  0008A2  50E3               	movf	plusw1,w,c
 35642  0008A4  0F01               	addlw	1
 35643  0008A6  6E2A               	movwf	btemp^0,c
 35644  0008A8  0EFC               	movlw	-4
 35645  0008AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 35646  0008B0  6A2A               	clrf	btemp^0,c
 35647  0008B2  0EFD               	movlw	-3
 35648  0008B4  50E3               	movf	plusw1,w,c
 35649  0008B6  202A               	addwfc	btemp^0,w,c
 35650  0008B8  6E2A               	movwf	btemp^0,c
 35651  0008BA  0EFD               	movlw	-3
 35652  0008BC  0060  F0AB  FFE3   	movff	btemp,plusw1
 35653  0008C2                     l15306:
 35654                           
 35655                           ;stkvar	_s @ sp[(-2)+-2]
 35656  0008C2  0EFC               	movlw	-4
 35657  0008C4  006F FF8F FFF6     	movff	plusw1,tblptrl
 35658  0008CA  0EFD               	movlw	-3
 35659  0008CC  006F FF8F FFF7     	movff	plusw1,tblptrh
 35660  0008D2  0E00               	movlw	low (__mediumconst shr (0+16))
 35661  0008D4  6EF8               	movwf	tblptru,c
 35662  0008D6  0E1F               	movlw	(high __ramtop+-1)
 35663  0008D8  64F7               	cpfsgt	tblptrh,c
 35664  0008DA  D003               	bra	u14187
 35665  0008DC  0008               	tblrd		*
 35666  0008DE  50F5               	movf	tablat,w,c
 35667  0008E0  D007               	bra	u14180
 35668  0008E2                     u14187:
 35669  0008E2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 35670  0008E8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 35671  0008EE  50EF               	movf	indf0,w,c
 35672  0008F0                     u14180:
 35673  0008F0  0900               	iorlw	0
 35674  0008F2  A4D8               	btfss	status,2,c
 35675  0008F4  D7D5               	goto	l15304
 35676                           
 35677                           ;stkvar	_a @ sp[(-2)+0]
 35678                           ;stkvar	_s @ sp[(-2)+-2]
 35679  0008F6  0EFC               	movlw	-4
 35680  0008F8  006F FF8C  F02A    	movff	plusw1,btemp
 35681  0008FE  0EFD               	movlw	-3
 35682  000900  006F FF8C  F02B    	movff	plusw1,btemp+1
 35683  000906  0EFE               	movlw	-2
 35684  000908  50E3               	movf	plusw1,w,c
 35685  00090A  5E2A               	subwf	btemp^0,f,c
 35686  00090C  0EFF               	movlw	-1
 35687  00090E  50E3               	movf	plusw1,w,c
 35688  000910  5A2B               	subwfb	(btemp+1)^0,f,c
 35689                           
 35690                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 35691  000912  52E5               	movf	postdec1,f,c
 35692  000914  52E5               	movf	postdec1,f,c
 35693  000916  52E5               	movf	postdec1,f,c
 35694  000918  52E5               	movf	postdec1,f,c
 35695  00091A  0012               	return		;funcret
 35696  00091C                     __end_of_strlen:
 35697                           	opt callstack 0
 35698                           
 35699 ;; *************** function _fputs *****************
 35700 ;; Defined at:
 35701 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 35702 ;; Parameters:    Size  Location     Type
 35703 ;;  s               2  [STACK] PTR const unsigned char 
 35704 ;;		 -> dbuf(80), 
 35705 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35706 ;;		 -> f(6), NULL(0), 
 35707 ;; Auto vars:     Size  Location     Type
 35708 ;;  i               2  [STACK] int 
 35709 ;;  c               1  [STACK] unsigned char 
 35710 ;; Return value:  Size  Location     Type
 35711 ;;                  2  [STACK] int 
 35712 ;; Registers used:
 35713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35714 ;; Tracked objects:
 35715 ;;		On entry : 0/3
 35716 ;;		On exit  : 0/0
 35717 ;;		Unchanged: 0/0
 35718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35723 ;;Total ram usage:        0 bytes
 35724 ;; Hardware stack levels used:    1
 35725 ;; Hardware stack levels required when called:   18
 35726 ;; This function calls:
 35727 ;;		_fputc
 35728 ;; This function is called by:
 35729 ;;		_pad
 35730 ;; This function uses a reentrant model
 35731 ;;
 35732                           
 35733                           	psect	text121
 35734  0009B6                     __ptext121:
 35735                           	opt callstack 0
 35736  0009B6                     _fputs:
 35737                           	opt callstack 0
 35738                           
 35739                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35740  0009B6  52E6               	movf	postinc1,f,c
 35741  0009B8  52E6               	movf	postinc1,f,c
 35742  0009BA  52E6               	movf	postinc1,f,c
 35743                           
 35744                           ;stkvar	_i @ sp[(-3)+0]
 35745                           
 35746                           ;incstack = 0
 35747 ;; hardware stack exceeded
 35748  0009BC  0EFD               	movlw	-3
 35749  0009BE  6AE3               	clrf	plusw1,c
 35750  0009C0  0EFE               	movlw	-2
 35751  0009C2  6AE3               	clrf	plusw1,c
 35752  0009C4  D01F               	goto	l15318
 35753  0009C6                     l15314:
 35754                           
 35755                           ;stkvar	_fp @ sp[(-3)+-4]
 35756  0009C6  0EF9               	movlw	-7
 35757  0009C8  006F FF8F FFE6     	movff	plusw1,postinc1
 35758  0009CE  006F FF8F FFE6     	movff	plusw1,postinc1
 35759                           
 35760                           ;stkvar	_c @ sp[(-5)+2]
 35761  0009D4  0EFD               	movlw	-3
 35762  0009D6  50E3               	movf	plusw1,w,c
 35763  0009D8  6EE6               	movwf	postinc1,c
 35764  0009DA  0E00               	movlw	0
 35765  0009DC  6EE6               	movwf	postinc1,c
 35766  0009DE  ECF8  F0F8         	call	_fputc	;wreg free
 35767                           
 35768                           ;stkvar	_i @ sp[(-3)+0]
 35769  0009E2  0EFD               	movlw	-3
 35770  0009E4  50E3               	movf	plusw1,w,c
 35771  0009E6  0F01               	addlw	1
 35772  0009E8  6E2A               	movwf	btemp^0,c
 35773  0009EA  0EFD               	movlw	-3
 35774  0009EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 35775  0009F2  6A2A               	clrf	btemp^0,c
 35776  0009F4  0EFE               	movlw	-2
 35777  0009F6  50E3               	movf	plusw1,w,c
 35778  0009F8  202A               	addwfc	btemp^0,w,c
 35779  0009FA  6E2A               	movwf	btemp^0,c
 35780  0009FC  0EFE               	movlw	-2
 35781  0009FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 35782  000A04                     l15318:
 35783                           
 35784                           ;stkvar	_i @ sp[(-3)+0]
 35785  000A04  0EFD               	movlw	-3
 35786  000A06  006F FF8C  F034    	movff	plusw1,btemp+10
 35787  000A0C  0EFE               	movlw	-2
 35788  000A0E  006F FF8C  F035    	movff	plusw1,btemp+11
 35789                           
 35790                           ;stkvar	_s @ sp[(-3)+-2]
 35791  000A14  0EFB               	movlw	-5
 35792  000A16  006F FF8C  F032    	movff	plusw1,btemp+8
 35793  000A1C  0EFC               	movlw	-4
 35794  000A1E  006F FF8C  F033    	movff	plusw1,btemp+9
 35795  000A24  5034               	movf	(btemp+10)^0,w,c
 35796  000A26  2432               	addwf	(btemp+8)^0,w,c
 35797  000A28  6ED9               	movwf	fsr2l,c
 35798  000A2A  5035               	movf	(btemp+11)^0,w,c
 35799  000A2C  2033               	addwfc	(btemp+9)^0,w,c
 35800  000A2E  6EDA               	movwf	fsr2h,c
 35801  000A30  50DF               	movf	indf2,w,c
 35802  000A32  6E35               	movwf	(btemp+11)^0,c
 35803                           
 35804                           ;stkvar	_c @ sp[(-3)+2]
 35805  000A34  0EFF               	movlw	-1
 35806  000A36  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35807  000A3C  0EFF               	movlw	-1
 35808  000A3E  50E3               	movf	plusw1,w,c
 35809  000A40  A4D8               	btfss	status,2,c
 35810  000A42  D7C1               	goto	l15314
 35811                           
 35812                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35813  000A44  0EF9               	movlw	249
 35814  000A46  26E1               	addwf	fsr1l,f,c
 35815  000A48  0EFF               	movlw	255
 35816  000A4A  22E2               	addwfc	fsr1h,f,c
 35817  000A4C  0012               	return		;funcret
 35818  000A4E                     __end_of_fputs:
 35819                           	opt callstack 0
 35820                           
 35821 ;; *************** function _fputc *****************
 35822 ;; Defined at:
 35823 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 35824 ;; Parameters:    Size  Location     Type
 35825 ;;  c               2  [STACK] int 
 35826 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35827 ;;		 -> f(6), NULL(0), 
 35828 ;; Auto vars:     Size  Location     Type
 35829 ;;		None
 35830 ;; Return value:  Size  Location     Type
 35831 ;;                  2  [STACK] int 
 35832 ;; Registers used:
 35833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35834 ;; Tracked objects:
 35835 ;;		On entry : 0/0
 35836 ;;		On exit  : 0/0
 35837 ;;		Unchanged: 0/0
 35838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35843 ;;Total ram usage:        0 bytes
 35844 ;; Hardware stack levels used:    1
 35845 ;; Hardware stack levels required when called:   17
 35846 ;; This function calls:
 35847 ;;		_putch
 35848 ;; This function is called by:
 35849 ;;		_pad
 35850 ;;		_stoa
 35851 ;;		_vfpfcnvrt
 35852 ;;		_fputs
 35853 ;; This function uses a reentrant model
 35854 ;;
 35855                           
 35856                           	psect	text122
 35857  01F1F0                     __ptext122:
 35858                           	opt callstack 0
 35859  01F1F0                     _fputc:
 35860                           	opt callstack 0
 35861                           
 35862                           ;stkvar	_fp @ sp[(0)+-4]
 35863                           
 35864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35865                           ;incstack = 0
 35866 ;; hardware stack exceeded
 35867  01F1F0  0EFC               	movlw	-4
 35868  01F1F2  006F FF8C  F02A    	movff	plusw1,btemp
 35869  01F1F8  0EFD               	movlw	-3
 35870  01F1FA  50E3               	movf	plusw1,w,c
 35871  01F1FC  102A               	iorwf	btemp^0,w,c
 35872  01F1FE  B4D8               	btfsc	status,2,c
 35873  01F200  D009               	goto	u14150
 35874                           
 35875                           ;stkvar	_fp @ sp[(0)+-4]
 35876  01F202  0EFC               	movlw	-4
 35877  01F204  006F FF8C  F02A    	movff	plusw1,btemp
 35878  01F20A  0EFD               	movlw	-3
 35879  01F20C  50E3               	movf	plusw1,w,c
 35880  01F20E  102A               	iorwf	btemp^0,w,c
 35881  01F210  A4D8               	btfss	status,2,c
 35882  01F212  D006               	goto	l15292
 35883  01F214                     u14150:
 35884                           
 35885                           ;stkvar	_c @ sp[(0)+-2]
 35886  01F214  0EFE               	movlw	-2
 35887  01F216  50E3               	movf	plusw1,w,c
 35888  01F218  6EE6               	movwf	postinc1,c
 35889  01F21A  EC94  F012         	call	_putch	;wreg free
 35890  01F21E  D075               	goto	l3541
 35891  01F220                     l15292:
 35892                           
 35893                           ;stkvar	_fp @ sp[(0)+-4]
 35894  01F220  0EFC               	movlw	-4
 35895  01F222  006F FF8C  F034    	movff	plusw1,btemp+10
 35896  01F228  0EFD               	movlw	-3
 35897  01F22A  006F FF8C  F035    	movff	plusw1,btemp+11
 35898  01F230  0E04               	movlw	4
 35899  01F232  2434               	addwf	(btemp+10)^0,w,c
 35900  01F234  6ED9               	movwf	fsr2l,c
 35901  01F236  0E00               	movlw	0
 35902  01F238  2035               	addwfc	(btemp+11)^0,w,c
 35903  01F23A  6EDA               	movwf	fsr2h,c
 35904  01F23C  50DE               	movf	postinc2,w,c
 35905  01F23E  10DE               	iorwf	postinc2,w,c
 35906  01F240  B4D8               	btfsc	status,2,c
 35907  01F242  D026               	goto	u14170
 35908                           
 35909                           ;stkvar	_fp @ sp[(0)+-4]
 35910  01F244  0EFC               	movlw	-4
 35911  01F246  006F FF8C  F034    	movff	plusw1,btemp+10
 35912  01F24C  0EFD               	movlw	-3
 35913  01F24E  006F FF8C  F035    	movff	plusw1,btemp+11
 35914  01F254  0E04               	movlw	4
 35915  01F256  2434               	addwf	(btemp+10)^0,w,c
 35916  01F258  6ED9               	movwf	fsr2l,c
 35917  01F25A  0E00               	movlw	0
 35918  01F25C  2035               	addwfc	(btemp+11)^0,w,c
 35919  01F25E  6EDA               	movwf	fsr2h,c
 35920                           
 35921                           ;stkvar	_fp @ sp[(0)+-4]
 35922  01F260  0EFC               	movlw	-4
 35923  01F262  006F FF8C  F034    	movff	plusw1,btemp+10
 35924  01F268  0EFD               	movlw	-3
 35925  01F26A  006F FF8C  F035    	movff	plusw1,btemp+11
 35926  01F270  0E02               	movlw	2
 35927  01F272  2434               	addwf	(btemp+10)^0,w,c
 35928  01F274  6EE9               	movwf	fsr0l,c
 35929  01F276  0E00               	movlw	0
 35930  01F278  2035               	addwfc	(btemp+11)^0,w,c
 35931  01F27A  6EEA               	movwf	fsr0h,c
 35932  01F27C  50DE               	movf	postinc2,w,c
 35933  01F27E  5CEE               	subwf	postinc0,w,c
 35934  01F280  50EE               	movf	postinc0,w,c
 35935  01F282  0A80               	xorlw	128
 35936  01F284  6E2A               	movwf	btemp^0,c
 35937  01F286  50DE               	movf	postinc2,w,c
 35938  01F288  0A80               	xorlw	128
 35939  01F28A  582A               	subwfb	btemp^0,w,c
 35940  01F28C  B0D8               	btfsc	status,0,c
 35941  01F28E  D03D               	goto	l3541
 35942  01F290                     u14170:
 35943                           
 35944                           ;stkvar	_c @ sp[(0)+-2]
 35945                           ;stkvar	_fp @ sp[(0)+-4]
 35946  01F290  0EFC               	movlw	-4
 35947  01F292  006F FF8C  F034    	movff	plusw1,btemp+10
 35948  01F298  0EFD               	movlw	-3
 35949  01F29A  006F FF8C  F035    	movff	plusw1,btemp+11
 35950  01F2A0  0E02               	movlw	2
 35951  01F2A2  2434               	addwf	(btemp+10)^0,w,c
 35952  01F2A4  6ED9               	movwf	fsr2l,c
 35953  01F2A6  0E00               	movlw	0
 35954  01F2A8  2035               	addwfc	(btemp+11)^0,w,c
 35955  01F2AA  6EDA               	movwf	fsr2h,c
 35956  01F2AC  006F FF78  F034    	movff	postinc2,btemp+10
 35957  01F2B2  006F FF74  F035    	movff	postdec2,btemp+11
 35958                           
 35959                           ;stkvar	_fp @ sp[(0)+-4]
 35960  01F2B8  0EFC               	movlw	-4
 35961  01F2BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 35962  01F2C0  0EFD               	movlw	-3
 35963  01F2C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 35964  01F2C8  006F FF78  F032    	movff	postinc2,btemp+8
 35965  01F2CE  006F FF74  F033    	movff	postdec2,btemp+9
 35966  01F2D4  5034               	movf	(btemp+10)^0,w,c
 35967  01F2D6  2432               	addwf	(btemp+8)^0,w,c
 35968  01F2D8  6ED9               	movwf	fsr2l,c
 35969  01F2DA  5035               	movf	(btemp+11)^0,w,c
 35970  01F2DC  2033               	addwfc	(btemp+9)^0,w,c
 35971  01F2DE  6EDA               	movwf	fsr2h,c
 35972  01F2E0  0EFE               	movlw	-2
 35973  01F2E2  006F FF8F FFDF     	movff	plusw1,indf2
 35974                           
 35975                           ;stkvar	_fp @ sp[(0)+-4]
 35976  01F2E8  0EFC               	movlw	-4
 35977  01F2EA  006F FF8C  F034    	movff	plusw1,btemp+10
 35978  01F2F0  0EFD               	movlw	-3
 35979  01F2F2  006F FF8C  F035    	movff	plusw1,btemp+11
 35980  01F2F8  0E02               	movlw	2
 35981  01F2FA  2434               	addwf	(btemp+10)^0,w,c
 35982  01F2FC  6ED9               	movwf	fsr2l,c
 35983  01F2FE  0E00               	movlw	0
 35984  01F300  2035               	addwfc	(btemp+11)^0,w,c
 35985  01F302  6EDA               	movwf	fsr2h,c
 35986  01F304  2ADE               	incf	postinc2,f,c
 35987  01F306  0E00               	movlw	0
 35988  01F308  22DD               	addwfc	postdec2,f,c
 35989  01F30A                     l3541:
 35990                           
 35991                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35992  01F30A  52E5               	movf	postdec1,f,c
 35993  01F30C  52E5               	movf	postdec1,f,c
 35994  01F30E  52E5               	movf	postdec1,f,c
 35995  01F310  52E5               	movf	postdec1,f,c
 35996  01F312  0012               	return		;funcret
 35997  01F314                     __end_of_fputc:
 35998                           	opt callstack 0
 35999                           
 36000 ;; *************** function _putch *****************
 36001 ;; Defined at:
 36002 ;;		line 420 in file "eadog.c"
 36003 ;; Parameters:    Size  Location     Type
 36004 ;;  c               1  [STACK] unsigned char 
 36005 ;; Auto vars:     Size  Location     Type
 36006 ;;		None
 36007 ;; Return value:  Size  Location     Type
 36008 ;;                  1  [STACK] void 
 36009 ;; Registers used:
 36010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36011 ;; Tracked objects:
 36012 ;;		On entry : 0/0
 36013 ;;		On exit  : 0/0
 36014 ;;		Unchanged: 0/0
 36015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36020 ;;Total ram usage:        0 bytes
 36021 ;; Hardware stack levels used:    1
 36022 ;; Hardware stack levels required when called:   16
 36023 ;; This function calls:
 36024 ;;		_ringBufS_put_dma
 36025 ;; This function is called by:
 36026 ;;		_fputc
 36027 ;; This function uses a reentrant model
 36028 ;;
 36029                           
 36030                           	psect	text123
 36031  002528                     __ptext123:
 36032                           	opt callstack 0
 36033  002528                     _putch:
 36034                           	opt callstack 0
 36035                           
 36036                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 36037                           ;stkvar	_c @ sp[(0)+-1]
 36038                           
 36039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36040                           ;incstack = 0
 36041 ;; hardware stack exceeded
 36042  002528  0EFF               	movlw	-1
 36043  00252A  50E3               	movf	plusw1,w,c
 36044  00252C  6EE6               	movwf	postinc1,c
 36045  00252E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 36046  002534  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 36047  00253A  EC43  F003         	call	_ringBufS_put_dma	;wreg free
 36048                           
 36049                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 36050  00253E  52E5               	movf	postdec1,f,c
 36051  002540  0012               	return		;funcret
 36052  002542                     __end_of_putch:
 36053                           	opt callstack 0
 36054                           
 36055 ;; *************** function _ringBufS_put_dma *****************
 36056 ;; Defined at:
 36057 ;;		line 67 in file "ringbufs.c"
 36058 ;; Parameters:    Size  Location     Type
 36059 ;;  _this           2  [STACK] PTR struct ringBufS_t
 36060 ;;		 -> ring_buf1(67), 
 36061 ;;  c               1  [STACK] const unsigned char 
 36062 ;; Auto vars:     Size  Location     Type
 36063 ;;		None
 36064 ;; Return value:  Size  Location     Type
 36065 ;;                  1  [STACK] void 
 36066 ;; Registers used:
 36067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36068 ;; Tracked objects:
 36069 ;;		On entry : 0/3B
 36070 ;;		On exit  : 0/0
 36071 ;;		Unchanged: 0/0
 36072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36077 ;;Total ram usage:        0 bytes
 36078 ;; Hardware stack levels used:    1
 36079 ;; Hardware stack levels required when called:   15
 36080 ;; This function calls:
 36081 ;;		Nothing
 36082 ;; This function is called by:
 36083 ;;		_send_lcd_data_dma
 36084 ;;		_putch
 36085 ;; This function uses a reentrant model
 36086 ;;
 36087                           
 36088                           	psect	text124
 36089  000686                     __ptext124:
 36090                           	opt callstack 0
 36091  000686                     _ringBufS_put_dma:
 36092                           	opt callstack 0
 36093                           
 36094                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 36095                           ;stkvar	__this @ sp[(0)+-2]
 36096                           
 36097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36098                           ;incstack = 0
 36099 ;; hardware stack exceeded
 36100  000686  0EFE               	movlw	-2
 36101  000688  006F FF8C  F034    	movff	plusw1,btemp+10
 36102  00068E  0EFF               	movlw	-1
 36103  000690  006F FF8C  F035    	movff	plusw1,btemp+11
 36104  000696  0E42               	movlw	66
 36105  000698  2434               	addwf	(btemp+10)^0,w,c
 36106  00069A  6ED9               	movwf	fsr2l,c
 36107  00069C  0E00               	movlw	0
 36108  00069E  2035               	addwfc	(btemp+11)^0,w,c
 36109  0006A0  6EDA               	movwf	fsr2h,c
 36110  0006A2  0E40               	movlw	64
 36111  0006A4  60DF               	cpfslt	indf2,c
 36112  0006A6  D040               	goto	l1742
 36113                           
 36114                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 36115                           ;stkvar	_c @ sp[(0)+-3]
 36116                           ;stkvar	__this @ sp[(0)+-2]
 36117  0006A8  0EFE               	movlw	-2
 36118  0006AA  006F FF8C  F034    	movff	plusw1,btemp+10
 36119  0006B0  0EFF               	movlw	-1
 36120  0006B2  006F FF8C  F035    	movff	plusw1,btemp+11
 36121  0006B8  0E40               	movlw	64
 36122  0006BA  2434               	addwf	(btemp+10)^0,w,c
 36123  0006BC  6ED9               	movwf	fsr2l,c
 36124  0006BE  0E00               	movlw	0
 36125  0006C0  2035               	addwfc	(btemp+11)^0,w,c
 36126  0006C2  6EDA               	movwf	fsr2h,c
 36127  0006C4  50DF               	movf	indf2,w,c
 36128  0006C6  6E35               	movwf	(btemp+11)^0,c
 36129                           
 36130                           ;stkvar	__this @ sp[(0)+-2]
 36131  0006C8  0EFE               	movlw	-2
 36132  0006CA  006F FF8C  F032    	movff	plusw1,btemp+8
 36133  0006D0  0EFF               	movlw	-1
 36134  0006D2  006F FF8C  F033    	movff	plusw1,btemp+9
 36135  0006D8  5035               	movf	(btemp+11)^0,w,c
 36136  0006DA  2432               	addwf	(btemp+8)^0,w,c
 36137  0006DC  6ED9               	movwf	fsr2l,c
 36138  0006DE  0E00               	movlw	0
 36139  0006E0  2033               	addwfc	(btemp+9)^0,w,c
 36140  0006E2  6EDA               	movwf	fsr2h,c
 36141  0006E4  0EFD               	movlw	-3
 36142  0006E6  006F FF8F FFDF     	movff	plusw1,indf2
 36143                           
 36144                           ;ringbufs.c: 71:   ++_this->head;
 36145                           ;stkvar	__this @ sp[(0)+-2]
 36146  0006EC  0EFE               	movlw	-2
 36147  0006EE  006F FF8C  F034    	movff	plusw1,btemp+10
 36148  0006F4  0EFF               	movlw	-1
 36149  0006F6  006F FF8C  F035    	movff	plusw1,btemp+11
 36150  0006FC  0E40               	movlw	64
 36151  0006FE  2434               	addwf	(btemp+10)^0,w,c
 36152  000700  6ED9               	movwf	fsr2l,c
 36153  000702  0E00               	movlw	0
 36154  000704  2035               	addwfc	(btemp+11)^0,w,c
 36155  000706  6EDA               	movwf	fsr2h,c
 36156  000708  2ADF               	incf	indf2,f,c
 36157                           
 36158                           ;ringbufs.c: 72:   ++_this->count;
 36159                           ;stkvar	__this @ sp[(0)+-2]
 36160  00070A  0EFE               	movlw	-2
 36161  00070C  006F FF8C  F034    	movff	plusw1,btemp+10
 36162  000712  0EFF               	movlw	-1
 36163  000714  006F FF8C  F035    	movff	plusw1,btemp+11
 36164  00071A  0E42               	movlw	66
 36165  00071C  2434               	addwf	(btemp+10)^0,w,c
 36166  00071E  6ED9               	movwf	fsr2l,c
 36167  000720  0E00               	movlw	0
 36168  000722  2035               	addwfc	(btemp+11)^0,w,c
 36169  000724  6EDA               	movwf	fsr2h,c
 36170  000726  2ADF               	incf	indf2,f,c
 36171  000728                     l1742:
 36172                           
 36173                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 36174  000728  52E5               	movf	postdec1,f,c
 36175  00072A  52E5               	movf	postdec1,f,c
 36176  00072C  52E5               	movf	postdec1,f,c
 36177  00072E  0012               	return		;funcret
 36178  000730                     __end_of_ringBufS_put_dma:
 36179                           	opt callstack 0
 36180                           
 36181 ;; *************** function _atoi *****************
 36182 ;; Defined at:
 36183 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 36184 ;; Parameters:    Size  Location     Type
 36185 ;;  s               2  [STACK] PTR const unsigned char 
 36186 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 36187 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 36188 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 36189 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 36190 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 36191 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(21), 
 36192 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 36193 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 36194 ;;		 -> STR_55(20), STR_54(21), STR_53(21), STR_52(21), 
 36195 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(23), 
 36196 ;;		 -> STR_47(23), STR_46(23), STR_45(29), STR_44(23), 
 36197 ;;		 -> STR_43(23), STR_42(22), STR_41(22), STR_40(22), 
 36198 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 36199 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 36200 ;;		 -> STR_31(22), STR_30(17), STR_29(16), STR_28(16), 
 36201 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(14), 
 36202 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 36203 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 36204 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 36205 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 36206 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 36207 ;;		 -> STR_2(21), STR_1(21), 
 36208 ;; Auto vars:     Size  Location     Type
 36209 ;;  n               2  [STACK] int 
 36210 ;;  neg             2  [STACK] int 
 36211 ;; Return value:  Size  Location     Type
 36212 ;;                  2  [STACK] int 
 36213 ;; Registers used:
 36214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 36215 ;; Tracked objects:
 36216 ;;		On entry : 0/0
 36217 ;;		On exit  : 0/0
 36218 ;;		Unchanged: 0/0
 36219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36224 ;;Total ram usage:        0 bytes
 36225 ;; Hardware stack levels used:    1
 36226 ;; Hardware stack levels required when called:   16
 36227 ;; This function calls:
 36228 ;;		_isdigit
 36229 ;;		_isspace
 36230 ;; This function is called by:
 36231 ;;		_vfpfcnvrt
 36232 ;; This function uses a reentrant model
 36233 ;;
 36234                           
 36235                           	psect	text125
 36236  01BEC8                     __ptext125:
 36237                           	opt callstack 0
 36238  01BEC8                     _atoi:
 36239                           	opt callstack 0
 36240                           
 36241                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36242  01BEC8  0E09               	movlw	9
 36243  01BECA  26E1               	addwf	fsr1l,f,c
 36244  01BECC  0E00               	movlw	0
 36245  01BECE  22E2               	addwfc	fsr1h,f,c
 36246                           
 36247                           ;stkvar	_n @ sp[(-9)+5]
 36248                           
 36249                           ;incstack = 0
 36250 ;; hardware stack exceeded
 36251  01BED0  0EFC               	movlw	-4
 36252  01BED2  6AE3               	clrf	plusw1,c
 36253  01BED4  0EFD               	movlw	-3
 36254  01BED6  6AE3               	clrf	plusw1,c
 36255                           
 36256                           ;stkvar	_neg @ sp[(-9)+7]
 36257  01BED8  0EFE               	movlw	-2
 36258  01BEDA  6AE3               	clrf	plusw1,c
 36259  01BEDC  0EFF               	movlw	-1
 36260  01BEDE  6AE3               	clrf	plusw1,c
 36261  01BEE0  D011               	goto	l11412
 36262  01BEE2                     l11410:
 36263                           
 36264                           ;stkvar	_s @ sp[(-9)+-2]
 36265  01BEE2  0EF5               	movlw	-11
 36266  01BEE4  50E3               	movf	plusw1,w,c
 36267  01BEE6  0F01               	addlw	1
 36268  01BEE8  6E2A               	movwf	btemp^0,c
 36269  01BEEA  0EF5               	movlw	-11
 36270  01BEEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 36271  01BEF2  6A2A               	clrf	btemp^0,c
 36272  01BEF4  0EF6               	movlw	-10
 36273  01BEF6  50E3               	movf	plusw1,w,c
 36274  01BEF8  202A               	addwfc	btemp^0,w,c
 36275  01BEFA  6E2A               	movwf	btemp^0,c
 36276  01BEFC  0EF6               	movlw	-10
 36277  01BEFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 36278  01BF04                     l11412:
 36279                           
 36280                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36281  01BF04  0EFB               	movlw	-5
 36282  01BF06  6AE3               	clrf	plusw1,c
 36283  01BF08  2AE3               	incf	plusw1,f,c
 36284                           
 36285                           ;stkvar	_s @ sp[(-9)+-2]
 36286  01BF0A  50E1               	movf	fsr1l,w,c
 36287  01BF0C  0FF5               	addlw	-11
 36288  01BF0E  6ED9               	movwf	fsr2l,c
 36289  01BF10  50E2               	movf	fsr1h,w,c
 36290  01BF12  6EDA               	movwf	fsr2h,c
 36291  01BF14  0EFF               	movlw	255
 36292  01BF16  22DA               	addwfc	fsr2h,f,c
 36293  01BF18  006F FF7B FFF6     	movff	postinc2,tblptrl
 36294  01BF1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 36295  01BF24                     	if	0	;tblptru may be non-zero
 36296  01BF24                     	endif
 36297  01BF24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36298  01BF24  0E00               	movlw	low (__mediumconst shr (0+16))
 36299  01BF26  6EF8               	movwf	tblptru,c
 36300  01BF28                     	endif
 36301  01BF28  0008               	tblrd		*
 36302  01BF2A  50F5               	movf	tablat,w,c
 36303  01BF2C  0A20               	xorlw	32
 36304  01BF2E  B4D8               	btfsc	status,2,c
 36305  01BF30  D023               	goto	l11420
 36306  01BF32  0EF7               	movlw	247
 36307  01BF34  6E34               	movwf	(btemp+10)^0,c
 36308  01BF36  0EFF               	movlw	255
 36309  01BF38  6E35               	movwf	(btemp+11)^0,c
 36310                           
 36311                           ;stkvar	_s @ sp[(-9)+-2]
 36312  01BF3A  50E1               	movf	fsr1l,w,c
 36313  01BF3C  0FF5               	addlw	-11
 36314  01BF3E  6ED9               	movwf	fsr2l,c
 36315  01BF40  50E2               	movf	fsr1h,w,c
 36316  01BF42  6EDA               	movwf	fsr2h,c
 36317  01BF44  0EFF               	movlw	255
 36318  01BF46  22DA               	addwfc	fsr2h,f,c
 36319  01BF48  006F FF7B FFF6     	movff	postinc2,tblptrl
 36320  01BF4E  006F FF77 FFF7     	movff	postdec2,tblptrh
 36321  01BF54                     	if	0	;tblptru may be non-zero
 36322  01BF54                     	endif
 36323  01BF54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36324  01BF54  0E00               	movlw	low (__mediumconst shr (0+16))
 36325  01BF56  6EF8               	movwf	tblptru,c
 36326  01BF58                     	endif
 36327  01BF58  0008               	tblrd		*
 36328  01BF5A  50F5               	movf	tablat,w,c
 36329  01BF5C  6E32               	movwf	(btemp+8)^0,c
 36330  01BF5E  6A33               	clrf	(btemp+9)^0,c
 36331  01BF60  5034               	movf	(btemp+10)^0,w,c
 36332  01BF62  2632               	addwf	(btemp+8)^0,f,c
 36333  01BF64  5035               	movf	(btemp+11)^0,w,c
 36334  01BF66  2233               	addwfc	(btemp+9)^0,f,c
 36335  01BF68  5033               	movf	(btemp+9)^0,w,c
 36336  01BF6A  E104               	bnz	u10360
 36337  01BF6C  0E05               	movlw	5
 36338  01BF6E  5C32               	subwf	(btemp+8)^0,w,c
 36339  01BF70  A0D8               	btfss	status,0,c
 36340  01BF72  D002               	goto	l11420
 36341  01BF74                     u10360:
 36342                           
 36343                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36344  01BF74  0EFB               	movlw	-5
 36345  01BF76  6AE3               	clrf	plusw1,c
 36346  01BF78                     l11420:
 36347                           
 36348                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36349  01BF78  0EFB               	movlw	-5
 36350  01BF7A  50E3               	movf	plusw1,w,c
 36351  01BF7C  6E34               	movwf	(btemp+10)^0,c
 36352  01BF7E  6A35               	clrf	(btemp+11)^0,c
 36353                           
 36354                           ;stkvar	_atoi$7203 @ sp[(-9)+2]
 36355  01BF80  0EF9               	movlw	-7
 36356  01BF82  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36357  01BF88  0EFA               	movlw	-6
 36358  01BF8A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36359                           
 36360                           ;stkvar	_atoi$7203 @ sp[(-9)+2]
 36361  01BF90  0EF9               	movlw	-7
 36362  01BF92  006F FF8C  F02A    	movff	plusw1,btemp
 36363  01BF98  0EFA               	movlw	-6
 36364  01BF9A  50E3               	movf	plusw1,w,c
 36365  01BF9C  102A               	iorwf	btemp^0,w,c
 36366  01BF9E  B4D8               	btfsc	status,2,c
 36367  01BFA0  D01F               	goto	l11430
 36368  01BFA2  D79F               	goto	l11410
 36369  01BFA4                     l11426:
 36370  01BFA4  0E01               	movlw	1
 36371  01BFA6  6E34               	movwf	(btemp+10)^0,c
 36372  01BFA8  0E00               	movlw	0
 36373  01BFAA  6E35               	movwf	(btemp+11)^0,c
 36374                           
 36375                           ;stkvar	_neg @ sp[(-9)+7]
 36376  01BFAC  0EFE               	movlw	-2
 36377  01BFAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36378  01BFB4  0EFF               	movlw	-1
 36379  01BFB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36380  01BFBC                     l11428:
 36381                           
 36382                           ;stkvar	_s @ sp[(-9)+-2]
 36383  01BFBC  0EF5               	movlw	-11
 36384  01BFBE  50E3               	movf	plusw1,w,c
 36385  01BFC0  0F01               	addlw	1
 36386  01BFC2  6E2A               	movwf	btemp^0,c
 36387  01BFC4  0EF5               	movlw	-11
 36388  01BFC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 36389  01BFCC  6A2A               	clrf	btemp^0,c
 36390  01BFCE  0EF6               	movlw	-10
 36391  01BFD0  50E3               	movf	plusw1,w,c
 36392  01BFD2  202A               	addwfc	btemp^0,w,c
 36393  01BFD4  6E2A               	movwf	btemp^0,c
 36394  01BFD6  0EF6               	movlw	-10
 36395  01BFD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 36396  01BFDE  D053               	goto	l11436
 36397  01BFE0                     l11430:
 36398                           
 36399                           ;stkvar	_s @ sp[(-9)+-2]
 36400  01BFE0  50E1               	movf	fsr1l,w,c
 36401  01BFE2  0FF5               	addlw	-11
 36402  01BFE4  6ED9               	movwf	fsr2l,c
 36403  01BFE6  50E2               	movf	fsr1h,w,c
 36404  01BFE8  6EDA               	movwf	fsr2h,c
 36405  01BFEA  0EFF               	movlw	255
 36406  01BFEC  22DA               	addwfc	fsr2h,f,c
 36407  01BFEE  006F FF7B FFF6     	movff	postinc2,tblptrl
 36408  01BFF4  006F FF77 FFF7     	movff	postdec2,tblptrh
 36409  01BFFA                     	if	0	;tblptru may be non-zero
 36410  01BFFA                     	endif
 36411  01BFFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36412  01BFFA  0E00               	movlw	low (__mediumconst shr (0+16))
 36413  01BFFC  6EF8               	movwf	tblptru,c
 36414  01BFFE                     	endif
 36415  01BFFE  0008               	tblrd		*
 36416  01C000  50F5               	movf	tablat,w,c
 36417  01C002  6E34               	movwf	(btemp+10)^0,c
 36418  01C004  6A35               	clrf	(btemp+11)^0,c
 36419                           
 36420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36421                           ; Switch size 1, requested type "simple"
 36422                           ; Number of cases is 1, Range of values is 0 to 0
 36423                           ; switch strategies available:
 36424                           ; Name         Instructions Cycles
 36425                           ; simple_byte            4     3 (average)
 36426                           ;	Chosen strategy is simple_byte
 36427  01C006  5035               	movf	(btemp+11)^0,w,c
 36428  01C008  0A00               	xorlw	0	; case 0
 36429  01C00A  A4D8               	btfss	status,2,c
 36430  01C00C  D03C               	goto	l11436
 36431                           
 36432                           ; Switch size 1, requested type "simple"
 36433                           ; Number of cases is 2, Range of values is 43 to 45
 36434                           ; switch strategies available:
 36435                           ; Name         Instructions Cycles
 36436                           ; simple_byte            7     4 (average)
 36437                           ;	Chosen strategy is simple_byte
 36438  01C00E  5034               	movf	(btemp+10)^0,w,c
 36439  01C010  0A2B               	xorlw	43	; case 43
 36440  01C012  B4D8               	btfsc	status,2,c
 36441  01C014  D7D3               	goto	l11428
 36442  01C016  0A06               	xorlw	6	; case 45
 36443  01C018  B4D8               	btfsc	status,2,c
 36444  01C01A  D7C4               	goto	l11426
 36445  01C01C  D034               	goto	l11436
 36446  01C01E                     l11432:
 36447                           
 36448                           ;stkvar	_n @ sp[(-9)+5]
 36449  01C01E  0EFC               	movlw	-4
 36450  01C020  006F FF8C  F034    	movff	plusw1,btemp+10
 36451  01C026  0EFD               	movlw	-3
 36452  01C028  006F FF8C  F035    	movff	plusw1,btemp+11
 36453  01C02E  0E0A               	movlw	10
 36454  01C030  0234               	mulwf	(btemp+10)^0,c
 36455  01C032  006F FFCC  F032    	movff	prodl,btemp+8
 36456  01C038  006F FFD0  F033    	movff	prodh,btemp+9
 36457  01C03E  0235               	mulwf	(btemp+11)^0,c
 36458  01C040  50F3               	movf	prodl,w,c
 36459  01C042  2633               	addwf	(btemp+9)^0,f,c
 36460                           
 36461                           ;stkvar	_s @ sp[(-9)+-2]
 36462  01C044  50E1               	movf	fsr1l,w,c
 36463  01C046  0FF5               	addlw	-11
 36464  01C048  6ED9               	movwf	fsr2l,c
 36465  01C04A  50E2               	movf	fsr1h,w,c
 36466  01C04C  6EDA               	movwf	fsr2h,c
 36467  01C04E  0EFF               	movlw	255
 36468  01C050  22DA               	addwfc	fsr2h,f,c
 36469  01C052  006F FF7B FFF6     	movff	postinc2,tblptrl
 36470  01C058  006F FF77 FFF7     	movff	postdec2,tblptrh
 36471  01C05E                     	if	0	;tblptru may be non-zero
 36472  01C05E                     	endif
 36473  01C05E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36474  01C05E  0E00               	movlw	low (__mediumconst shr (0+16))
 36475  01C060  6EF8               	movwf	tblptru,c
 36476  01C062                     	endif
 36477  01C062  0008               	tblrd		*
 36478  01C064  50F5               	movf	tablat,w,c
 36479  01C066  5E32               	subwf	(btemp+8)^0,f,c
 36480  01C068  0E00               	movlw	0
 36481  01C06A  5A33               	subwfb	(btemp+9)^0,f,c
 36482  01C06C  0E30               	movlw	48
 36483  01C06E  2632               	addwf	(btemp+8)^0,f,c
 36484  01C070  0E00               	movlw	0
 36485  01C072  2233               	addwfc	(btemp+9)^0,f,c
 36486                           
 36487                           ;stkvar	_n @ sp[(-9)+5]
 36488  01C074  0EFC               	movlw	-4
 36489  01C076  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36490  01C07C  0EFD               	movlw	-3
 36491  01C07E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36492  01C084  D79B               	goto	l11428
 36493  01C086                     l11436:
 36494  01C086  0ED0               	movlw	208
 36495  01C088  6E34               	movwf	(btemp+10)^0,c
 36496  01C08A  0EFF               	movlw	255
 36497  01C08C  6E35               	movwf	(btemp+11)^0,c
 36498                           
 36499                           ;stkvar	_s @ sp[(-9)+-2]
 36500  01C08E  50E1               	movf	fsr1l,w,c
 36501  01C090  0FF5               	addlw	-11
 36502  01C092  6ED9               	movwf	fsr2l,c
 36503  01C094  50E2               	movf	fsr1h,w,c
 36504  01C096  6EDA               	movwf	fsr2h,c
 36505  01C098  0EFF               	movlw	255
 36506  01C09A  22DA               	addwfc	fsr2h,f,c
 36507  01C09C  006F FF7B FFF6     	movff	postinc2,tblptrl
 36508  01C0A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 36509  01C0A8                     	if	0	;tblptru may be non-zero
 36510  01C0A8                     	endif
 36511  01C0A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36512  01C0A8  0E00               	movlw	low (__mediumconst shr (0+16))
 36513  01C0AA  6EF8               	movwf	tblptru,c
 36514  01C0AC                     	endif
 36515  01C0AC  0008               	tblrd		*
 36516  01C0AE  50F5               	movf	tablat,w,c
 36517  01C0B0  6E32               	movwf	(btemp+8)^0,c
 36518  01C0B2  6A33               	clrf	(btemp+9)^0,c
 36519  01C0B4  5034               	movf	(btemp+10)^0,w,c
 36520  01C0B6  2632               	addwf	(btemp+8)^0,f,c
 36521  01C0B8  5035               	movf	(btemp+11)^0,w,c
 36522  01C0BA  2233               	addwfc	(btemp+9)^0,f,c
 36523  01C0BC  5033               	movf	(btemp+9)^0,w,c
 36524  01C0BE  E106               	bnz	u10380
 36525  01C0C0  0E0A               	movlw	10
 36526  01C0C2  5C32               	subwf	(btemp+8)^0,w,c
 36527  01C0C4  B0D8               	btfsc	status,0,c
 36528  01C0C6  D002               	goto	u10380
 36529  01C0C8  0E01               	movlw	1
 36530  01C0CA  D001               	goto	u10390
 36531  01C0CC                     u10380:
 36532  01C0CC  0E00               	movlw	0
 36533  01C0CE                     u10390:
 36534  01C0CE  6E34               	movwf	(btemp+10)^0,c
 36535  01C0D0  6A35               	clrf	(btemp+11)^0,c
 36536                           
 36537                           ;stkvar	_atoi$7205 @ sp[(-9)+0]
 36538  01C0D2  0EF7               	movlw	-9
 36539  01C0D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36540  01C0DA  0EF8               	movlw	-8
 36541  01C0DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36542                           
 36543                           ;stkvar	_atoi$7205 @ sp[(-9)+0]
 36544  01C0E2  0EF7               	movlw	-9
 36545  01C0E4  006F FF8C  F02A    	movff	plusw1,btemp
 36546  01C0EA  0EF8               	movlw	-8
 36547  01C0EC  50E3               	movf	plusw1,w,c
 36548  01C0EE  102A               	iorwf	btemp^0,w,c
 36549  01C0F0  A4D8               	btfss	status,2,c
 36550  01C0F2  D795               	goto	l11432
 36551                           
 36552                           ;stkvar	_neg @ sp[(-9)+7]
 36553  01C0F4  0EFE               	movlw	-2
 36554  01C0F6  006F FF8C  F02A    	movff	plusw1,btemp
 36555  01C0FC  0EFF               	movlw	-1
 36556  01C0FE  50E3               	movf	plusw1,w,c
 36557  01C100  102A               	iorwf	btemp^0,w,c
 36558  01C102  A4D8               	btfss	status,2,c
 36559  01C104  D00E               	goto	l11446
 36560                           
 36561                           ;stkvar	_n @ sp[(-9)+5]
 36562  01C106  0EFC               	movlw	-4
 36563  01C108  006F FF8C  F02A    	movff	plusw1,btemp
 36564  01C10E  1E2A               	comf	btemp^0,f,c
 36565  01C110  0EFD               	movlw	-3
 36566  01C112  006F FF8C  F02B    	movff	plusw1,btemp+1
 36567  01C118  1E2B               	comf	(btemp+1)^0,f,c
 36568  01C11A  2A2A               	incf	btemp^0,f,c
 36569  01C11C  B4D8               	btfsc	status,2,c
 36570  01C11E  2A2B               	incf	(btemp+1)^0,f,c
 36571  01C120  D008               	goto	l3452
 36572  01C122                     l11446:
 36573                           
 36574                           ;stkvar	_n @ sp[(-9)+5]
 36575  01C122  0EFC               	movlw	-4
 36576  01C124  006F FF8C  F02A    	movff	plusw1,btemp
 36577  01C12A  0EFD               	movlw	-3
 36578  01C12C  006F FF8C  F02B    	movff	plusw1,btemp+1
 36579  01C132                     l3452:
 36580                           
 36581                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 36582  01C132  0EF5               	movlw	245
 36583  01C134  26E1               	addwf	fsr1l,f,c
 36584  01C136  0EFF               	movlw	255
 36585  01C138  22E2               	addwfc	fsr1h,f,c
 36586  01C13A  0012               	return		;funcret
 36587  01C13C                     __end_of_atoi:
 36588                           	opt callstack 0
 36589                           
 36590 ;; *************** function _isspace *****************
 36591 ;; Defined at:
 36592 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 36593 ;; Parameters:    Size  Location     Type
 36594 ;;  c               2  [STACK] int 
 36595 ;; Auto vars:     Size  Location     Type
 36596 ;;		None
 36597 ;; Return value:  Size  Location     Type
 36598 ;;                  2  [STACK] int 
 36599 ;; Registers used:
 36600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36601 ;; Tracked objects:
 36602 ;;		On entry : 0/0
 36603 ;;		On exit  : 0/0
 36604 ;;		Unchanged: 0/0
 36605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36610 ;;Total ram usage:        0 bytes
 36611 ;; Hardware stack levels used:    1
 36612 ;; Hardware stack levels required when called:   15
 36613 ;; This function calls:
 36614 ;;		Nothing
 36615 ;; This function is called by:
 36616 ;;		_atoi
 36617 ;; This function uses a reentrant model
 36618 ;;
 36619                           
 36620                           	psect	text126
 36621  0017BC                     __ptext126:
 36622                           	opt callstack 0
 36623  0017BC                     _isspace:
 36624                           	opt callstack 0
 36625                           
 36626                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36627  0017BC  52E6               	movf	postinc1,f,c
 36628                           
 36629                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36630                           
 36631                           ;incstack = 0
 36632 ;; hardware stack exceeded
 36633  0017BE  0EFF               	movlw	-1
 36634  0017C0  6AE3               	clrf	plusw1,c
 36635  0017C2  2AE3               	incf	plusw1,f,c
 36636                           
 36637                           ;stkvar	_c @ sp[(-1)+-2]
 36638  0017C4  0EFD               	movlw	-3
 36639  0017C6  006F FF8C  F02A    	movff	plusw1,btemp
 36640  0017CC  0E20               	movlw	32
 36641  0017CE  182A               	xorwf	btemp^0,w,c
 36642  0017D0  E104               	bnz	u9200
 36643  0017D2  0EFE               	movlw	-2
 36644  0017D4  50E3               	movf	plusw1,w,c
 36645  0017D6  B4D8               	btfsc	status,2,c
 36646  0017D8  D012               	goto	l10802
 36647  0017DA                     u9200:
 36648                           
 36649                           ;stkvar	_c @ sp[(-1)+-2]
 36650  0017DA  0EFD               	movlw	-3
 36651  0017DC  50E3               	movf	plusw1,w,c
 36652  0017DE  0FF7               	addlw	247
 36653  0017E0  6E34               	movwf	(btemp+10)^0,c
 36654  0017E2  0EFE               	movlw	-2
 36655  0017E4  006F FF8C  F035    	movff	plusw1,btemp+11
 36656  0017EA  0EFF               	movlw	255
 36657  0017EC  2235               	addwfc	(btemp+11)^0,f,c
 36658  0017EE  5035               	movf	(btemp+11)^0,w,c
 36659  0017F0  E104               	bnz	u9210
 36660  0017F2  0E05               	movlw	5
 36661  0017F4  5C34               	subwf	(btemp+10)^0,w,c
 36662  0017F6  A0D8               	btfss	status,0,c
 36663  0017F8  D002               	goto	l10802
 36664  0017FA                     u9210:
 36665                           
 36666                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36667  0017FA  0EFF               	movlw	-1
 36668  0017FC  6AE3               	clrf	plusw1,c
 36669  0017FE                     l10802:
 36670                           
 36671                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36672  0017FE  0EFF               	movlw	-1
 36673  001800  50E3               	movf	plusw1,w,c
 36674  001802  6E2A               	movwf	btemp^0,c
 36675  001804  6A2B               	clrf	(btemp+1)^0,c
 36676                           
 36677                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36678  001806  52E5               	movf	postdec1,f,c
 36679  001808  52E5               	movf	postdec1,f,c
 36680  00180A  52E5               	movf	postdec1,f,c
 36681  00180C  0012               	return		;funcret
 36682  00180E                     __end_of_isspace:
 36683                           	opt callstack 0
 36684                           
 36685 ;; *************** function _isdigit *****************
 36686 ;; Defined at:
 36687 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 36688 ;; Parameters:    Size  Location     Type
 36689 ;;  c               2  [STACK] int 
 36690 ;; Auto vars:     Size  Location     Type
 36691 ;;		None
 36692 ;; Return value:  Size  Location     Type
 36693 ;;                  2  [STACK] int 
 36694 ;; Registers used:
 36695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36696 ;; Tracked objects:
 36697 ;;		On entry : 0/0
 36698 ;;		On exit  : 0/0
 36699 ;;		Unchanged: 0/0
 36700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36705 ;;Total ram usage:        0 bytes
 36706 ;; Hardware stack levels used:    1
 36707 ;; Hardware stack levels required when called:   15
 36708 ;; This function calls:
 36709 ;;		Nothing
 36710 ;; This function is called by:
 36711 ;;		_vfpfcnvrt
 36712 ;;		_atoi
 36713 ;; This function uses a reentrant model
 36714 ;;
 36715                           
 36716                           	psect	text127
 36717  001FD6                     __ptext127:
 36718                           	opt callstack 0
 36719  001FD6                     _isdigit:
 36720                           	opt callstack 0
 36721                           
 36722                           ;stkvar	_c @ sp[(0)+-2]
 36723                           
 36724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36725                           ;incstack = 0
 36726 ;; hardware stack exceeded
 36727  001FD6  0EFE               	movlw	-2
 36728  001FD8  50E3               	movf	plusw1,w,c
 36729  001FDA  0FD0               	addlw	208
 36730  001FDC  6E34               	movwf	(btemp+10)^0,c
 36731  001FDE  0EFF               	movlw	-1
 36732  001FE0  006F FF8C  F035    	movff	plusw1,btemp+11
 36733  001FE6  0EFF               	movlw	255
 36734  001FE8  2235               	addwfc	(btemp+11)^0,f,c
 36735  001FEA  5035               	movf	(btemp+11)^0,w,c
 36736  001FEC  E106               	bnz	u7990
 36737  001FEE  0E0A               	movlw	10
 36738  001FF0  5C34               	subwf	(btemp+10)^0,w,c
 36739  001FF2  B0D8               	btfsc	status,0,c
 36740  001FF4  D002               	goto	u7990
 36741  001FF6  0E01               	movlw	1
 36742  001FF8  D001               	goto	u8000
 36743  001FFA                     u7990:
 36744  001FFA  0E00               	movlw	0
 36745  001FFC                     u8000:
 36746  001FFC  6E2A               	movwf	btemp^0,c
 36747  001FFE  6A2B               	clrf	(btemp+1)^0,c
 36748                           
 36749                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36750  002000  52E5               	movf	postdec1,f,c
 36751  002002  52E5               	movf	postdec1,f,c
 36752  002004  0012               	return		;funcret
 36753  002006                     __end_of_isdigit:
 36754                           	opt callstack 0
 36755                           
 36756 ;; *************** function _set_vterm *****************
 36757 ;; Defined at:
 36758 ;;		line 110 in file "mconfig.c"
 36759 ;; Parameters:    Size  Location     Type
 36760 ;;  vterm           1  [STACK] const unsigned char 
 36761 ;; Auto vars:     Size  Location     Type
 36762 ;;		None
 36763 ;; Return value:  Size  Location     Type
 36764 ;;                  1  [STACK] unsigned char 
 36765 ;; Registers used:
 36766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 36767 ;; Tracked objects:
 36768 ;;		On entry : 0/2
 36769 ;;		On exit  : 0/0
 36770 ;;		Unchanged: 0/0
 36771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36776 ;;Total ram usage:        0 bytes
 36777 ;; Hardware stack levels used:    1
 36778 ;; Hardware stack levels required when called:   15
 36779 ;; This function calls:
 36780 ;;		Nothing
 36781 ;; This function is called by:
 36782 ;;		_main
 36783 ;;		_check_help
 36784 ;; This function uses a reentrant model
 36785 ;;
 36786                           
 36787                           	psect	text128
 36788  0024EC                     __ptext128:
 36789                           	opt callstack 0
 36790  0024EC                     _set_vterm:
 36791                           	opt callstack 15
 36792                           
 36793                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 36794                           ;stkvar	_vterm @ sp[(0)+-1]
 36795                           
 36796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36797                           ;incstack = 0
 36798  0024EC  0EFF               	movlw	-1
 36799  0024EE  006F FF8C  F035    	movff	plusw1,btemp+11
 36800  0024F4  0E03               	movlw	3
 36801  0024F6  1635               	andwf	(btemp+11)^0,f,c
 36802  0024F8  EE23  F0BF         	lfsr	2,_D+640
 36803  0024FC  50DF               	movf	223,w,c
 36804  0024FE  1835               	xorwf	(btemp+11)^0,w,c
 36805  002500  0BFE               	andlw	-2
 36806  002502  1835               	xorwf	(btemp+11)^0,w,c
 36807  002504  6EDF               	movwf	223,c
 36808                           
 36809                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36810  002506  52E5               	movf	postdec1,f,c
 36811  002508  0012               	return		;funcret
 36812  00250A                     __end_of_set_vterm:
 36813                           	opt callstack 0
 36814                           
 36815 ;; *************** function _set_temp_display_help *****************
 36816 ;; Defined at:
 36817 ;;		line 217 in file "mconfig.c"
 36818 ;; Parameters:    Size  Location     Type
 36819 ;;  new_response    1  [STACK] const enum E16677
 36820 ;; Auto vars:     Size  Location     Type
 36821 ;;		None
 36822 ;; Return value:  Size  Location     Type
 36823 ;;                  1  [STACK] enum E16677
 36824 ;; Registers used:
 36825 ;;		wreg, fsr1l, fsr1h
 36826 ;; Tracked objects:
 36827 ;;		On entry : 0/2
 36828 ;;		On exit  : 3F/2
 36829 ;;		Unchanged: 0/0
 36830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36835 ;;Total ram usage:        0 bytes
 36836 ;; Hardware stack levels used:    1
 36837 ;; Hardware stack levels required when called:   15
 36838 ;; This function calls:
 36839 ;;		Nothing
 36840 ;; This function is called by:
 36841 ;;		_check_help
 36842 ;; This function uses a reentrant model
 36843 ;;
 36844                           
 36845                           	psect	text129
 36846  00264E                     __ptext129:
 36847                           	opt callstack 0
 36848  00264E                     _set_temp_display_help:
 36849                           	opt callstack 14
 36850                           
 36851                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 36852                           
 36853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36854                           ;incstack = 0
 36855  00264E  0102               	movlb	2	; () banked
 36856  002650  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 36857                           
 36858                           ; BSR set to: 2
 36859                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 36860                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36861  002652  0EFF               	movlw	-1
 36862  002654  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 36863                           
 36864                           ; BSR set to: 2
 36865                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 36866  00265A  52E5               	movf	postdec1,f,c
 36867  00265C  0012               	return		;funcret
 36868  00265E                     __end_of_set_temp_display_help:
 36869                           	opt callstack 0
 36870                           
 36871 ;; *************** function _set_display_info *****************
 36872 ;; Defined at:
 36873 ;;		line 206 in file "mconfig.c"
 36874 ;; Parameters:    Size  Location     Type
 36875 ;;  new_response    1  [STACK] const enum E16677
 36876 ;; Auto vars:     Size  Location     Type
 36877 ;;		None
 36878 ;; Return value:  Size  Location     Type
 36879 ;;                  1  [STACK] enum E17160
 36880 ;; Registers used:
 36881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36882 ;; Tracked objects:
 36883 ;;		On entry : 0/2
 36884 ;;		On exit  : 0/0
 36885 ;;		Unchanged: 0/0
 36886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36891 ;;Total ram usage:        0 bytes
 36892 ;; Hardware stack levels used:    1
 36893 ;; Hardware stack levels required when called:   16
 36894 ;; This function calls:
 36895 ;;		_TimerDone
 36896 ;; This function is called by:
 36897 ;;		_main
 36898 ;;		_check_help
 36899 ;; This function uses a reentrant model
 36900 ;;
 36901                           
 36902                           	psect	text130
 36903  00250A                     __ptext130:
 36904                           	opt callstack 0
 36905  00250A                     _set_display_info:
 36906                           	opt callstack 14
 36907                           
 36908                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 36909                           
 36910                           ; BSR set to: 2
 36911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36912                           ;incstack = 0
 36913  00250A  0E07               	movlw	7
 36914  00250C  6EE6               	movwf	postinc1,c
 36915  00250E  EC6F  F010         	call	_TimerDone	;wreg free
 36916  002512  502A               	movf	btemp^0,w,c
 36917  002514  B4D8               	btfsc	status,2,c
 36918  002516  D006               	goto	l1877
 36919                           
 36920                           ;mconfig.c: 211:   old_info = V.response.info;
 36921  002518  0102               	movlb	2	; () banked
 36922  00251A  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 36923                           
 36924                           ; BSR set to: 2
 36925                           ;mconfig.c: 212:   V.response.info = new_response_info;
 36926                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36927  00251C  0EFF               	movlw	-1
 36928  00251E  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 36929  002524                     l1877:
 36930                           
 36931                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 36932  002524  52E5               	movf	postdec1,f,c
 36933  002526  0012               	return		;funcret
 36934  002528                     __end_of_set_display_info:
 36935                           	opt callstack 0
 36936                           
 36937 ;; *************** function _mode_lamp_dim *****************
 36938 ;; Defined at:
 36939 ;;		line 13 in file "mconfig.c"
 36940 ;; Parameters:    Size  Location     Type
 36941 ;;  level           2  [STACK] const unsigned short 
 36942 ;; Auto vars:     Size  Location     Type
 36943 ;;		None
 36944 ;; Return value:  Size  Location     Type
 36945 ;;                  1  [STACK] void 
 36946 ;; Registers used:
 36947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36948 ;; Tracked objects:
 36949 ;;		On entry : 0/2
 36950 ;;		On exit  : 0/0
 36951 ;;		Unchanged: 0/0
 36952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36957 ;;Total ram usage:        0 bytes
 36958 ;; Hardware stack levels used:    1
 36959 ;; Hardware stack levels required when called:   16
 36960 ;; This function calls:
 36961 ;;		_PWM8_LoadDutyValue
 36962 ;; This function is called by:
 36963 ;;		_main
 36964 ;;		_check_help
 36965 ;; This function uses a reentrant model
 36966 ;;
 36967                           
 36968                           	psect	text131
 36969  00255E                     __ptext131:
 36970                           	opt callstack 0
 36971  00255E                     _mode_lamp_dim:
 36972                           	opt callstack 14
 36973                           
 36974                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 36975                           ;stkvar	_level @ sp[(0)+-2]
 36976                           
 36977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36978                           ;incstack = 0
 36979  00255E  0EFE               	movlw	-2
 36980  002560  006F FF8F FFE6     	movff	plusw1,postinc1
 36981  002566  006F FF8F FFE6     	movff	plusw1,postinc1
 36982  00256C  EC99  F00D         	call	_PWM8_LoadDutyValue	;wreg free
 36983                           
 36984                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 36985  002570  52E5               	movf	postdec1,f,c
 36986  002572  52E5               	movf	postdec1,f,c
 36987  002574  0012               	return		;funcret
 36988  002576                     __end_of_mode_lamp_dim:
 36989                           	opt callstack 0
 36990                           
 36991 ;; *************** function _mode_lamp_bright *****************
 36992 ;; Defined at:
 36993 ;;		line 18 in file "mconfig.c"
 36994 ;; Parameters:    Size  Location     Type
 36995 ;;		None
 36996 ;; Auto vars:     Size  Location     Type
 36997 ;;		None
 36998 ;; Return value:  Size  Location     Type
 36999 ;;                  1  [STACK] void 
 37000 ;; Registers used:
 37001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37002 ;; Tracked objects:
 37003 ;;		On entry : 0/0
 37004 ;;		On exit  : 0/0
 37005 ;;		Unchanged: 0/0
 37006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37011 ;;Total ram usage:        0 bytes
 37012 ;; Hardware stack levels used:    1
 37013 ;; Hardware stack levels required when called:   16
 37014 ;; This function calls:
 37015 ;;		_PWM8_LoadDutyValue
 37016 ;; This function is called by:
 37017 ;;		_check_help
 37018 ;; This function uses a reentrant model
 37019 ;;
 37020                           
 37021                           	psect	text132
 37022  00267C                     __ptext132:
 37023                           	opt callstack 0
 37024  00267C                     _mode_lamp_bright:
 37025                           	opt callstack 13
 37026                           
 37027                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 37028                           
 37029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37030                           ;incstack = 0
 37031  00267C  0E2C               	movlw	44
 37032  00267E  6EE6               	movwf	postinc1,c
 37033  002680  0E01               	movlw	1
 37034  002682  6EE6               	movwf	postinc1,c
 37035  002684  EC99  F00D         	call	_PWM8_LoadDutyValue	;wreg free
 37036                           
 37037                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 37038  002688  0012               	return		;funcret
 37039  00268A                     __end_of_mode_lamp_bright:
 37040                           	opt callstack 0
 37041                           
 37042 ;; *************** function _PWM8_LoadDutyValue *****************
 37043 ;; Defined at:
 37044 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 37045 ;; Parameters:    Size  Location     Type
 37046 ;;  dutyValue       2  [STACK] unsigned short 
 37047 ;; Auto vars:     Size  Location     Type
 37048 ;;		None
 37049 ;; Return value:  Size  Location     Type
 37050 ;;                  1  [STACK] void 
 37051 ;; Registers used:
 37052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37053 ;; Tracked objects:
 37054 ;;		On entry : 0/2
 37055 ;;		On exit  : 0/0
 37056 ;;		Unchanged: 0/0
 37057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37062 ;;Total ram usage:        0 bytes
 37063 ;; Hardware stack levels used:    1
 37064 ;; Hardware stack levels required when called:   15
 37065 ;; This function calls:
 37066 ;;		Nothing
 37067 ;; This function is called by:
 37068 ;;		_mode_lamp_dim
 37069 ;;		_mode_lamp_bright
 37070 ;; This function uses a reentrant model
 37071 ;;
 37072                           
 37073                           	psect	text133
 37074  001B32                     __ptext133:
 37075                           	opt callstack 0
 37076  001B32                     _PWM8_LoadDutyValue:
 37077                           	opt callstack 14
 37078                           
 37079                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 37080                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37081                           
 37082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37083                           ;incstack = 0
 37084  001B32  0EFE               	movlw	-2
 37085  001B34  006F FF8C  F034    	movff	plusw1,btemp+10
 37086  001B3A  0EFF               	movlw	-1
 37087  001B3C  006F FF8C  F035    	movff	plusw1,btemp+11
 37088  001B42  90D8               	bcf	status,0,c
 37089  001B44  3235               	rrcf	(btemp+11)^0,f,c
 37090  001B46  3234               	rrcf	(btemp+10)^0,f,c
 37091  001B48  90D8               	bcf	status,0,c
 37092  001B4A  3235               	rrcf	(btemp+11)^0,f,c
 37093  001B4C  3234               	rrcf	(btemp+10)^0,f,c
 37094  001B4E  5034               	movf	(btemp+10)^0,w,c
 37095  001B50  6E61               	movwf	97,c	;volatile
 37096                           
 37097                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 37098                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37099  001B52  0EFE               	movlw	-2
 37100  001B54  006F FF8C  F035    	movff	plusw1,btemp+11
 37101  001B5A  0E03               	movlw	3
 37102  001B5C  1635               	andwf	(btemp+11)^0,f,c
 37103  001B5E  0E06               	movlw	6
 37104  001B60  6E2A               	movwf	btemp^0,c
 37105  001B62                     u12205:
 37106  001B62  90D8               	bcf	status,0,c
 37107  001B64  3635               	rlcf	(btemp+11)^0,f,c
 37108  001B66  2E2A               	decfsz	btemp^0,f,c
 37109  001B68  D7FC               	goto	u12205
 37110  001B6A  5035               	movf	(btemp+11)^0,w,c
 37111  001B6C  6E60               	movwf	96,c	;volatile
 37112                           
 37113                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37114  001B6E  52E5               	movf	postdec1,f,c
 37115  001B70  52E5               	movf	postdec1,f,c
 37116  001B72  0012               	return		;funcret
 37117  001B74                     __end_of_PWM8_LoadDutyValue:
 37118                           	opt callstack 0
 37119                           
 37120 ;; *************** function _help_button *****************
 37121 ;; Defined at:
 37122 ;;		line 26 in file "mconfig.c"
 37123 ;; Parameters:    Size  Location     Type
 37124 ;;		None
 37125 ;; Auto vars:     Size  Location     Type
 37126 ;;		None
 37127 ;; Return value:  Size  Location     Type
 37128 ;;                  1  [STACK] _Bool 
 37129 ;; Registers used:
 37130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37131 ;; Tracked objects:
 37132 ;;		On entry : 0/2
 37133 ;;		On exit  : 0/0
 37134 ;;		Unchanged: 0/0
 37135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37140 ;;Total ram usage:        0 bytes
 37141 ;; Hardware stack levels used:    1
 37142 ;; Hardware stack levels required when called:   16
 37143 ;; This function calls:
 37144 ;;		_StartTimer
 37145 ;;		_TimerDone
 37146 ;; This function is called by:
 37147 ;;		_check_help
 37148 ;; This function uses a reentrant model
 37149 ;;
 37150                           
 37151                           	psect	text134
 37152  001D68                     __ptext134:
 37153                           	opt callstack 0
 37154  001D68                     _help_button:
 37155                           	opt callstack 13
 37156                           
 37157                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 37158                           
 37159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37160                           ;incstack = 0
 37161  001D68  B0CB               	btfsc	203,0,c	;volatile
 37162  001D6A  D00C               	goto	l1820
 37163                           
 37164                           ;mconfig.c: 29:   V.help = 1;
 37165  001D6C  0102               	movlb	2	; () banked
 37166  001D6E  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 37167                           
 37168                           ; BSR set to: 2
 37169                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 37170  001D70  0E08               	movlw	8
 37171  001D72  6EE6               	movwf	postinc1,c
 37172  001D74  EC6F  F010         	call	_TimerDone	;wreg free
 37173  001D78  502A               	movf	btemp^0,w,c
 37174  001D7A  B4D8               	btfsc	status,2,c
 37175  001D7C  D003               	goto	l1820
 37176                           
 37177                           ;mconfig.c: 31:    return 1;
 37178  001D7E  0E01               	movlw	1
 37179  001D80  6E2A               	movwf	btemp^0,c
 37180  001D82  0012               	return	
 37181  001D84                     l1820:
 37182                           
 37183                           ;mconfig.c: 34:  if (!V.help)
 37184  001D84  0102               	movlb	2	; () banked
 37185  001D86  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 37186  001D88  D008               	goto	l13558
 37187                           
 37188                           ; BSR set to: 2
 37189                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 37190  001D8A  0E2C               	movlw	44
 37191  001D8C  6EE6               	movwf	postinc1,c
 37192  001D8E  0E01               	movlw	1
 37193  001D90  6EE6               	movwf	postinc1,c
 37194  001D92  0E08               	movlw	8
 37195  001D94  6EE6               	movwf	postinc1,c
 37196  001D96  ECFA  F00D         	call	_StartTimer	;wreg free
 37197  001D9A                     l13558:
 37198                           
 37199                           ;mconfig.c: 37:  return 0;
 37200  001D9A  0E00               	movlw	0
 37201  001D9C  6E2A               	movwf	btemp^0,c
 37202                           
 37203                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 37204  001D9E  0012               	return		;funcret
 37205  001DA0                     __end_of_help_button:
 37206                           	opt callstack 0
 37207                           
 37208 ;; *************** function _TimerDone *****************
 37209 ;; Defined at:
 37210 ;;		line 20 in file "timers.c"
 37211 ;; Parameters:    Size  Location     Type
 37212 ;;  timer           1  [STACK] const unsigned char 
 37213 ;; Auto vars:     Size  Location     Type
 37214 ;;		None
 37215 ;; Return value:  Size  Location     Type
 37216 ;;                  1  [STACK] _Bool 
 37217 ;; Registers used:
 37218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37219 ;; Tracked objects:
 37220 ;;		On entry : 0/2
 37221 ;;		On exit  : 0/0
 37222 ;;		Unchanged: 0/0
 37223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37228 ;;Total ram usage:        0 bytes
 37229 ;; Hardware stack levels used:    1
 37230 ;; Hardware stack levels required when called:   15
 37231 ;; This function calls:
 37232 ;;		Nothing
 37233 ;; This function is called by:
 37234 ;;		_main
 37235 ;;		_WaitMs
 37236 ;;		_help_button
 37237 ;;		_check_help
 37238 ;;		_set_display_info
 37239 ;;		_update_adc_result
 37240 ;;		_esr_check
 37241 ;; This function uses a reentrant model
 37242 ;;
 37243                           
 37244                           	psect	text135
 37245  0020DE                     __ptext135:
 37246                           	opt callstack 0
 37247  0020DE                     _TimerDone:
 37248                           	opt callstack 14
 37249                           
 37250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37251                           ;incstack = 0
 37252  0020DE  0004               	clrwdt		;# 
 37253                           
 37254                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 37255                           ;stkvar	_timer @ sp[(0)+-1]
 37256  0020E0  0EFF               	movlw	-1
 37257  0020E2  50E3               	movf	plusw1,w,c
 37258  0020E4  0D02               	mullw	2
 37259  0020E6  0EBC               	movlw	low _tickCount
 37260  0020E8  24F3               	addwf	243,w,c
 37261  0020EA  6ED9               	movwf	fsr2l,c
 37262  0020EC  0E02               	movlw	high _tickCount
 37263  0020EE  20F4               	addwfc	prodh,w,c
 37264  0020F0  6EDA               	movwf	fsr2h,c
 37265  0020F2  50DE               	movf	postinc2,w,c
 37266  0020F4  10DE               	iorwf	postinc2,w,c
 37267  0020F6  A4D8               	btfss	status,2,c
 37268  0020F8  D002               	goto	l12314
 37269                           
 37270                           ;timers.c: 24:   return 1;
 37271  0020FA  0E01               	movlw	1
 37272  0020FC  D001               	goto	L42
 37273  0020FE                     l12314:
 37274                           
 37275                           ;timers.c: 26:  return 0;
 37276  0020FE  0E00               	movlw	0
 37277  002100                     L42:
 37278  002100  6E2A               	movwf	btemp^0,c
 37279                           
 37280                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37281  002102  52E5               	movf	postdec1,f,c
 37282  002104  0012               	return		;funcret
 37283  002106                     __end_of_TimerDone:
 37284                           	opt callstack 0
 37285                           
 37286 ;; *************** function _StartTimer *****************
 37287 ;; Defined at:
 37288 ;;		line 12 in file "timers.c"
 37289 ;; Parameters:    Size  Location     Type
 37290 ;;  timer           1  [STACK] const unsigned char 
 37291 ;;  count           2  [STACK] const unsigned short 
 37292 ;; Auto vars:     Size  Location     Type
 37293 ;;		None
 37294 ;; Return value:  Size  Location     Type
 37295 ;;                  1  [STACK] void 
 37296 ;; Registers used:
 37297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37298 ;; Tracked objects:
 37299 ;;		On entry : 0/0
 37300 ;;		On exit  : 0/0
 37301 ;;		Unchanged: 0/0
 37302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37307 ;;Total ram usage:        0 bytes
 37308 ;; Hardware stack levels used:    1
 37309 ;; Hardware stack levels required when called:   15
 37310 ;; This function calls:
 37311 ;;		Nothing
 37312 ;; This function is called by:
 37313 ;;		_main
 37314 ;;		_WaitMs
 37315 ;;		_help_button
 37316 ;;		_check_help
 37317 ;;		_update_adc_result
 37318 ;;		_calc_bsoc
 37319 ;;		_esr_check
 37320 ;; This function uses a reentrant model
 37321 ;;
 37322                           
 37323                           	psect	text136
 37324  001BF4                     __ptext136:
 37325                           	opt callstack 0
 37326  001BF4                     _StartTimer:
 37327                           	opt callstack 0
 37328                           
 37329                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 37330                           ;stkvar	_count @ sp[(0)+-3]
 37331                           
 37332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37333                           ;incstack = 0
 37334 ;; hardware stack exceeded
 37335  001BF4  0EFD               	movlw	-3
 37336  001BF6  006F FF8C  F034    	movff	plusw1,btemp+10
 37337  001BFC  0EFE               	movlw	-2
 37338  001BFE  006F FF8C  F035    	movff	plusw1,btemp+11
 37339  001C04  90D8               	bcf	status,0,c
 37340  001C06  3434               	rlcf	(btemp+10)^0,w,c
 37341  001C08  6E32               	movwf	(btemp+8)^0,c
 37342  001C0A  3435               	rlcf	(btemp+11)^0,w,c
 37343  001C0C  6E33               	movwf	(btemp+9)^0,c
 37344                           
 37345                           ;stkvar	_timer @ sp[(0)+-1]
 37346  001C0E  0EFF               	movlw	-1
 37347  001C10  50E3               	movf	plusw1,w,c
 37348  001C12  0D02               	mullw	2
 37349  001C14  0EBC               	movlw	low _tickCount
 37350  001C16  24F3               	addwf	243,w,c
 37351  001C18  6ED9               	movwf	fsr2l,c
 37352  001C1A  0E02               	movlw	high _tickCount
 37353  001C1C  20F4               	addwfc	prodh,w,c
 37354  001C1E  6EDA               	movwf	fsr2h,c
 37355  001C20  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 37356  001C26  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 37357                           
 37358                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 37359  001C2C  52E5               	movf	postdec1,f,c
 37360  001C2E  52E5               	movf	postdec1,f,c
 37361  001C30  52E5               	movf	postdec1,f,c
 37362  001C32  0012               	return		;funcret
 37363  001C34                     __end_of_StartTimer:
 37364                           	opt callstack 0
 37365                           
 37366 ;; *************** function _display_info *****************
 37367 ;; Defined at:
 37368 ;;		line 196 in file "mconfig.c"
 37369 ;; Parameters:    Size  Location     Type
 37370 ;;		None
 37371 ;; Auto vars:     Size  Location     Type
 37372 ;;		None
 37373 ;; Return value:  Size  Location     Type
 37374 ;;                  1  [STACK] enum E16677
 37375 ;; Registers used:
 37376 ;;		btemp
 37377 ;; Tracked objects:
 37378 ;;		On entry : 0/2
 37379 ;;		On exit  : 0/0
 37380 ;;		Unchanged: 0/0
 37381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37386 ;;Total ram usage:        0 bytes
 37387 ;; Hardware stack levels used:    1
 37388 ;; Hardware stack levels required when called:   15
 37389 ;; This function calls:
 37390 ;;		Nothing
 37391 ;; This function is called by:
 37392 ;;		_check_help
 37393 ;; This function uses a reentrant model
 37394 ;;
 37395                           
 37396                           	psect	text137
 37397  0026FE                     __ptext137:
 37398                           	opt callstack 0
 37399  0026FE                     _display_info:
 37400                           	opt callstack 14
 37401                           
 37402                           ;mconfig.c: 198:  return V.response.info;
 37403                           
 37404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37405                           ;incstack = 0
 37406  0026FE  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 37407                           
 37408                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37409  002704  0012               	return		;funcret
 37410  002706                     __end_of_display_info:
 37411                           	opt callstack 0
 37412                           
 37413 ;; *************** function _display_help *****************
 37414 ;; Defined at:
 37415 ;;		line 201 in file "mconfig.c"
 37416 ;; Parameters:    Size  Location     Type
 37417 ;;		None
 37418 ;; Auto vars:     Size  Location     Type
 37419 ;;		None
 37420 ;; Return value:  Size  Location     Type
 37421 ;;                  1  [STACK] enum E16677
 37422 ;; Registers used:
 37423 ;;		btemp
 37424 ;; Tracked objects:
 37425 ;;		On entry : 3F/2
 37426 ;;		On exit  : 0/0
 37427 ;;		Unchanged: 0/0
 37428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37433 ;;Total ram usage:        0 bytes
 37434 ;; Hardware stack levels used:    1
 37435 ;; Hardware stack levels required when called:   15
 37436 ;; This function calls:
 37437 ;;		Nothing
 37438 ;; This function is called by:
 37439 ;;		_check_help
 37440 ;; This function uses a reentrant model
 37441 ;;
 37442                           
 37443                           	psect	text138
 37444  002706                     __ptext138:
 37445                           	opt callstack 0
 37446  002706                     _display_help:
 37447                           	opt callstack 14
 37448                           
 37449                           ;mconfig.c: 203:  return V.response.help_temp;
 37450                           
 37451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37452                           ;incstack = 0
 37453  002706  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 37454                           
 37455                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37456  00270C  0012               	return		;funcret
 37457  00270E                     __end_of_display_help:
 37458                           	opt callstack 0
 37459                           
 37460 ;; *************** function _check_enter_button *****************
 37461 ;; Defined at:
 37462 ;;		line 49 in file "hid.c"
 37463 ;; Parameters:    Size  Location     Type
 37464 ;;  h               2  [STACK] PTR struct H_data
 37465 ;;		 -> H(9), 
 37466 ;; Auto vars:     Size  Location     Type
 37467 ;;		None
 37468 ;; Return value:  Size  Location     Type
 37469 ;;                  1  [STACK] _Bool 
 37470 ;; Registers used:
 37471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 37472 ;; Tracked objects:
 37473 ;;		On entry : 0/0
 37474 ;;		On exit  : 0/0
 37475 ;;		Unchanged: 0/0
 37476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37481 ;;Total ram usage:        0 bytes
 37482 ;; Hardware stack levels used:    1
 37483 ;; Hardware stack levels required when called:   15
 37484 ;; This function calls:
 37485 ;;		Nothing
 37486 ;; This function is called by:
 37487 ;;		_main
 37488 ;; This function uses a reentrant model
 37489 ;;
 37490                           
 37491                           	psect	text139
 37492  001128                     __ptext139:
 37493                           	opt callstack 0
 37494  001128                     _check_enter_button:
 37495                           	opt callstack 15
 37496                           
 37497                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 37498                           ;stkvar	_h @ sp[(0)+-2]
 37499                           
 37500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37501                           ;incstack = 0
 37502  001128  0EFE               	movlw	-2
 37503  00112A  006F FF8C  F034    	movff	plusw1,btemp+10
 37504  001130  0EFF               	movlw	-1
 37505  001132  006F FF8C  F035    	movff	plusw1,btemp+11
 37506  001138  0E04               	movlw	4
 37507  00113A  2434               	addwf	(btemp+10)^0,w,c
 37508  00113C  6ED9               	movwf	fsr2l,c
 37509  00113E  0E00               	movlw	0
 37510  001140  2035               	addwfc	(btemp+11)^0,w,c
 37511  001142  6EDA               	movwf	fsr2h,c
 37512  001144  50DF               	movf	indf2,w,c
 37513  001146  A4D8               	btfss	status,2,c
 37514  001148  D023               	goto	l17248
 37515                           
 37516                           ;stkvar	_h @ sp[(0)+-2]
 37517  00114A  0EFE               	movlw	-2
 37518  00114C  006F FF8C  F034    	movff	plusw1,btemp+10
 37519  001152  0EFF               	movlw	-1
 37520  001154  006F FF8C  F035    	movff	plusw1,btemp+11
 37521  00115A  0E05               	movlw	5
 37522  00115C  2434               	addwf	(btemp+10)^0,w,c
 37523  00115E  6ED9               	movwf	fsr2l,c
 37524  001160  0E00               	movlw	0
 37525  001162  2035               	addwfc	(btemp+11)^0,w,c
 37526  001164  6EDA               	movwf	fsr2h,c
 37527  001166  50DF               	movf	indf2,w,c
 37528  001168  A4D8               	btfss	status,2,c
 37529  00116A  D012               	goto	l17248
 37530                           
 37531                           ;hid.c: 52:   h->wait_enter = 1;
 37532                           ;stkvar	_h @ sp[(0)+-2]
 37533  00116C  0EFE               	movlw	-2
 37534  00116E  006F FF8C  F034    	movff	plusw1,btemp+10
 37535  001174  0EFF               	movlw	-1
 37536  001176  006F FF8C  F035    	movff	plusw1,btemp+11
 37537  00117C  0E04               	movlw	4
 37538  00117E  2434               	addwf	(btemp+10)^0,w,c
 37539  001180  6ED9               	movwf	fsr2l,c
 37540  001182  0E00               	movlw	0
 37541  001184  2035               	addwfc	(btemp+11)^0,w,c
 37542  001186  6EDA               	movwf	fsr2h,c
 37543  001188  0E01               	movlw	1
 37544  00118A  6EDF               	movwf	indf2,c
 37545                           
 37546                           ;hid.c: 53:   return 1;
 37547  00118C  0E01               	movlw	1
 37548  00118E  D001               	goto	L43
 37549  001190                     l17248:
 37550                           
 37551                           ;hid.c: 55:  return 0;
 37552  001190  0E00               	movlw	0
 37553  001192                     L43:
 37554  001192  6E2A               	movwf	btemp^0,c
 37555                           
 37556                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37557  001194  52E5               	movf	postdec1,f,c
 37558  001196  52E5               	movf	postdec1,f,c
 37559  001198  0012               	return		;funcret
 37560  00119A                     __end_of_check_enter_button:
 37561                           	opt callstack 0
 37562                           
 37563 ;; *************** function _calc_ror_data *****************
 37564 ;; Defined at:
 37565 ;;		line 103 in file "mbmc.c"
 37566 ;; Parameters:    Size  Location     Type
 37567 ;;		None
 37568 ;; Auto vars:     Size  Location     Type
 37569 ;;		None
 37570 ;; Return value:  Size  Location     Type
 37571 ;;                  1  [STACK] void 
 37572 ;; Registers used:
 37573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37574 ;; Tracked objects:
 37575 ;;		On entry : 0/0
 37576 ;;		On exit  : 0/0
 37577 ;;		Unchanged: 0/0
 37578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37583 ;;Total ram usage:        0 bytes
 37584 ;; Hardware stack levels used:    1
 37585 ;; Hardware stack levels required when called:   18
 37586 ;; This function calls:
 37587 ;;		___flge
 37588 ;;		___flsub
 37589 ;;		_conv_raw_result
 37590 ;;		_fabsf
 37591 ;; This function is called by:
 37592 ;;		_main
 37593 ;; This function uses a reentrant model
 37594 ;;
 37595                           
 37596                           	psect	text140
 37597  01DEC2                     __ptext140:
 37598                           	opt callstack 0
 37599  01DEC2                     _calc_ror_data:
 37600                           	opt callstack 12
 37601                           
 37602                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 37603                           
 37604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37605                           ;incstack = 0
 37606  01DEC2  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 37607  01DEC8  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 37608  01DECE  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 37609  01DED4  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 37610  01DEDA  0E00               	movlw	0
 37611  01DEDC  6EE6               	movwf	postinc1,c
 37612  01DEDE  0E00               	movlw	0
 37613  01DEE0  6EE6               	movwf	postinc1,c
 37614  01DEE2  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 37615  01DEE6  0060  F0AB  FFE6   	movff	btemp,postinc1
 37616  01DEEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37617  01DEF2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37618  01DEF8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37619  01DEFE  EC54  F00D         	call	___flsub	;wreg free
 37620  01DF02  0060  F0AB  FFE6   	movff	btemp,postinc1
 37621  01DF08  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37622  01DF0E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37623  01DF14  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37624  01DF1A  EC96  F002         	call	_fabsf	;wreg free
 37625  01DF1E  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 37626  01DF24  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 37627  01DF2A  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 37628  01DF30  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 37629                           
 37630                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 37631  01DF36  0E00               	movlw	0
 37632  01DF38  6EE6               	movwf	postinc1,c
 37633  01DF3A  0E00               	movlw	0
 37634  01DF3C  6EE6               	movwf	postinc1,c
 37635  01DF3E  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 37636  01DF42  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 37637  01DF48  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 37638  01DF4E  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 37639  01DF54  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 37640                           
 37641                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 37642  01DF5A  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 37643  01DF60  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 37644  01DF66  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 37645  01DF6C  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 37646  01DF72  0E00               	movlw	0
 37647  01DF74  6EE6               	movwf	postinc1,c
 37648  01DF76  0E04               	movlw	4
 37649  01DF78  6EE6               	movwf	postinc1,c
 37650  01DF7A  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 37651  01DF7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 37652  01DF84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37653  01DF8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37654  01DF90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37655  01DF96  EC54  F00D         	call	___flsub	;wreg free
 37656  01DF9A  0060  F0AB  FFE6   	movff	btemp,postinc1
 37657  01DFA0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37658  01DFA6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37659  01DFAC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37660  01DFB2  EC96  F002         	call	_fabsf	;wreg free
 37661  01DFB6  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 37662  01DFBC  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 37663  01DFC2  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 37664  01DFC8  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 37665                           
 37666                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 37667  01DFCE  0EE7               	movlw	231
 37668  01DFD0  6EE6               	movwf	postinc1,c
 37669  01DFD2  0E1D               	movlw	29
 37670  01DFD4  6EE6               	movwf	postinc1,c
 37671  01DFD6  0EA7               	movlw	167
 37672  01DFD8  6EE6               	movwf	postinc1,c
 37673  01DFDA  0E3B               	movlw	59
 37674  01DFDC  6EE6               	movwf	postinc1,c
 37675  01DFDE  EE22  F16B         	lfsr	2,_C+108	;volatile
 37676  01DFE2  006F FF7B FFE6     	movff	postinc2,postinc1
 37677  01DFE8  006F FF7B FFE6     	movff	postinc2,postinc1
 37678  01DFEE  006F FF7B FFE6     	movff	postinc2,postinc1
 37679  01DFF4  006F FF7B FFE6     	movff	postinc2,postinc1
 37680  01DFFA  EC09  F0F3         	call	___flge	;wreg free
 37681  01DFFE  B02A               	btfsc	btemp& (0+255),0,c
 37682  01E000  D010               	goto	l14156
 37683                           
 37684                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 37685  01E002  0EB0               	movlw	176
 37686  01E004  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 37687  01E00A  0E03               	movlw	3
 37688  01E00C  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 37689  01E012  0E67               	movlw	103
 37690  01E014  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 37691  01E01A  0E3C               	movlw	60
 37692  01E01C  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 37693  01E022                     l14156:
 37694                           
 37695                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 37696  01E022  0E00               	movlw	0
 37697  01E024  6EE6               	movwf	postinc1,c
 37698  01E026  0E04               	movlw	4
 37699  01E028  6EE6               	movwf	postinc1,c
 37700  01E02A  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 37701  01E02E  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 37702  01E034  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 37703  01E03A  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 37704  01E040  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 37705                           
 37706                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 37707  01E046  0012               	return		;funcret
 37708  01E048                     __end_of_calc_ror_data:
 37709                           	opt callstack 0
 37710                           
 37711 ;; *************** function _fabsf *****************
 37712 ;; Defined at:
 37713 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 37714 ;; Parameters:    Size  Location     Type
 37715 ;;  x               4  [STACK] float 
 37716 ;; Auto vars:     Size  Location     Type
 37717 ;;  u               4  [STACK] struct .
 37718 ;; Return value:  Size  Location     Type
 37719 ;;                  4  [STACK] float 
 37720 ;; Registers used:
 37721 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37722 ;; Tracked objects:
 37723 ;;		On entry : 0/0
 37724 ;;		On exit  : 0/0
 37725 ;;		Unchanged: 0/0
 37726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37731 ;;Total ram usage:        0 bytes
 37732 ;; Hardware stack levels used:    1
 37733 ;; Hardware stack levels required when called:   15
 37734 ;; This function calls:
 37735 ;;		Nothing
 37736 ;; This function is called by:
 37737 ;;		_main
 37738 ;;		_calc_ror_data
 37739 ;;		_calc_bsoc
 37740 ;;		_esr_check
 37741 ;; This function uses a reentrant model
 37742 ;;
 37743                           
 37744                           	psect	text141
 37745  00052C                     __ptext141:
 37746                           	opt callstack 0
 37747  00052C                     _fabsf:
 37748                           	opt callstack 0
 37749                           
 37750                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37751  00052C  52E6               	movf	postinc1,f,c
 37752  00052E  52E6               	movf	postinc1,f,c
 37753  000530  52E6               	movf	postinc1,f,c
 37754  000532  52E6               	movf	postinc1,f,c
 37755                           
 37756                           ;incstack = 0
 37757 ;; hardware stack exceeded
 37758  000534  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 37759  00053A  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 37760  000540  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 37761  000546  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 37762                           
 37763                           ;stkvar	_u @ sp[(-4)+0]
 37764  00054C  0EFC               	movlw	-4
 37765  00054E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37766  000554  0EFD               	movlw	-3
 37767  000556  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37768  00055C  0EFE               	movlw	-2
 37769  00055E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37770  000564  0EFF               	movlw	-1
 37771  000566  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37772                           
 37773                           ;stkvar	_x @ sp[(-4)+-4]
 37774  00056C  0EF8               	movlw	-8
 37775  00056E  006F FF8C  F032    	movff	plusw1,btemp+8
 37776  000574  0EF9               	movlw	-7
 37777  000576  006F FF8C  F033    	movff	plusw1,btemp+9
 37778  00057C  0EFA               	movlw	-6
 37779  00057E  006F FF8C  F034    	movff	plusw1,btemp+10
 37780  000584  0EFB               	movlw	-5
 37781  000586  006F FF8C  F035    	movff	plusw1,btemp+11
 37782                           
 37783                           ;stkvar	_u @ sp[(-4)+0]
 37784  00058C  0EFC               	movlw	-4
 37785  00058E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37786  000594  0EFD               	movlw	-3
 37787  000596  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37788  00059C  0EFE               	movlw	-2
 37789  00059E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37790  0005A4  0EFF               	movlw	-1
 37791  0005A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37792                           
 37793                           ;stkvar	_u @ sp[(-4)+0]
 37794  0005AC  0EFF               	movlw	-1
 37795  0005AE  9EE3               	bcf	plusw1,7,c
 37796                           
 37797                           ;stkvar	_u @ sp[(-4)+0]
 37798  0005B0  0EFC               	movlw	-4
 37799  0005B2  006F FF8C  F02A    	movff	plusw1,btemp
 37800  0005B8  0EFD               	movlw	-3
 37801  0005BA  006F FF8C  F02B    	movff	plusw1,btemp+1
 37802  0005C0  0EFE               	movlw	-2
 37803  0005C2  006F FF8C  F02C    	movff	plusw1,btemp+2
 37804  0005C8  0EFF               	movlw	-1
 37805  0005CA  006F FF8C  F02D    	movff	plusw1,btemp+3
 37806                           
 37807                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37808  0005D0  0EF8               	movlw	248
 37809  0005D2  26E1               	addwf	fsr1l,f,c
 37810  0005D4  0EFF               	movlw	255
 37811  0005D6  22E2               	addwfc	fsr1h,f,c
 37812  0005D8  0012               	return		;funcret
 37813  0005DA                     __end_of_fabsf:
 37814                           	opt callstack 0
 37815                           
 37816 ;; *************** function _conv_raw_result *****************
 37817 ;; Defined at:
 37818 ;;		line 135 in file "daq.c"
 37819 ;; Parameters:    Size  Location     Type
 37820 ;;  chan            1  [STACK] const enum E16605
 37821 ;;  to_what         1  [STACK] const enum E16996
 37822 ;; Auto vars:     Size  Location     Type
 37823 ;;		None
 37824 ;; Return value:  Size  Location     Type
 37825 ;;                  4  [STACK] float 
 37826 ;; Registers used:
 37827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37828 ;; Tracked objects:
 37829 ;;		On entry : 0/0
 37830 ;;		On exit  : 0/0
 37831 ;;		Unchanged: 0/0
 37832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37837 ;;Total ram usage:        0 bytes
 37838 ;; Hardware stack levels used:    1
 37839 ;; Hardware stack levels required when called:   17
 37840 ;; This function calls:
 37841 ;;		___fldiv
 37842 ;;		___flmul
 37843 ;;		___flsub
 37844 ;;		___xxtofl
 37845 ;;		_get_raw_result
 37846 ;;		_nanf
 37847 ;; This function is called by:
 37848 ;;		_main
 37849 ;;		_convert_adc_data
 37850 ;;		_calc_ror_data
 37851 ;;		_check_day_time
 37852 ;;		_init_bsoc
 37853 ;;		_esr_check
 37854 ;; This function uses a reentrant model
 37855 ;;
 37856                           
 37857                           	psect	text142
 37858  0185CC                     __ptext142:
 37859                           	opt callstack 0
 37860  0185CC                     _conv_raw_result:
 37861                           	opt callstack 0
 37862                           
 37863                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 37864                           
 37865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37866                           ;incstack = 0
 37867 ;; hardware stack exceeded
 37868  0185CC  D24A               	goto	l12296
 37869  0185CE                     l12242:
 37870                           
 37871                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 37872                           ;stkvar	_chan @ sp[(0)+-1]
 37873  0185CE  0EFF               	movlw	-1
 37874  0185D0  006F FF8C  F035    	movff	plusw1,btemp+11
 37875  0185D6  0E77               	movlw	119
 37876  0185D8  6E32               	movwf	(btemp+8)^0,c
 37877  0185DA  0E3C               	movlw	60
 37878  0185DC  6E33               	movwf	(btemp+9)^0,c
 37879  0185DE  2A35               	incf	(btemp+11)^0,f,c
 37880  0185E0  D003               	goto	u11554
 37881  0185E2                     u11555:
 37882  0185E2  3433               	rlcf	(btemp+9)^0,w,c
 37883  0185E4  3233               	rrcf	(btemp+9)^0,f,c
 37884  0185E6  3232               	rrcf	(btemp+8)^0,f,c
 37885  0185E8                     u11554:
 37886  0185E8  2E35               	decfsz	(btemp+11)^0,f,c
 37887  0185EA  D7FB               	goto	u11555
 37888  0185EC  B032               	btfsc	(btemp+8)^0,0,c
 37889  0185EE  D007               	goto	l12248
 37890                           
 37891                           ;daq.c: 141:    return nanf("");
 37892  0185F0  0EA1               	movlw	low (STR_90+126)
 37893  0185F2  6EE6               	movwf	postinc1,c
 37894  0185F4  0EFA               	movlw	high (STR_90+126)
 37895  0185F6  6EE6               	movwf	postinc1,c
 37896  0185F8  EC9C  F00A         	call	_nanf	;wreg free
 37897  0185FC  D242               	goto	l1977
 37898  0185FE                     l12248:
 37899                           
 37900                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 37901                           ;stkvar	_chan @ sp[(0)+-1]
 37902  0185FE  0EFF               	movlw	-1
 37903  018600  006F FF8C  F035    	movff	plusw1,btemp+11
 37904  018606  0E03               	movlw	3
 37905  018608  6E32               	movwf	(btemp+8)^0,c
 37906  01860A  0E00               	movlw	0
 37907  01860C  6E33               	movwf	(btemp+9)^0,c
 37908  01860E  2A35               	incf	(btemp+11)^0,f,c
 37909  018610  D003               	goto	u11574
 37910  018612                     u11575:
 37911  018612  3433               	rlcf	(btemp+9)^0,w,c
 37912  018614  3233               	rrcf	(btemp+9)^0,f,c
 37913  018616  3232               	rrcf	(btemp+8)^0,f,c
 37914  018618                     u11574:
 37915  018618  2E35               	decfsz	(btemp+11)^0,f,c
 37916  01861A  D7FB               	goto	u11575
 37917  01861C  A032               	btfss	(btemp+8)^0,0,c
 37918  01861E  D0F3               	goto	l12262
 37919                           
 37920                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 37921                           ;stkvar	_chan @ sp[(0)+-1]
 37922  018620  0EFF               	movlw	-1
 37923  018622  006F FF8C  F035    	movff	plusw1,btemp+11
 37924  018628  0E01               	movlw	1
 37925  01862A  6E32               	movwf	(btemp+8)^0,c
 37926  01862C  0E00               	movlw	0
 37927  01862E  6E33               	movwf	(btemp+9)^0,c
 37928  018630  2A35               	incf	(btemp+11)^0,f,c
 37929  018632  D003               	goto	u11594
 37930  018634                     u11595:
 37931  018634  3433               	rlcf	(btemp+9)^0,w,c
 37932  018636  3233               	rrcf	(btemp+9)^0,f,c
 37933  018638  3232               	rrcf	(btemp+8)^0,f,c
 37934  01863A                     u11594:
 37935  01863A  2E35               	decfsz	(btemp+11)^0,f,c
 37936  01863C  D7FB               	goto	u11595
 37937  01863E  A032               	btfss	(btemp+8)^0,0,c
 37938  018640  D071               	goto	l12258
 37939                           
 37940                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 37941  018642  0060  F4AB  FFE6   	movff	_R+42,postinc1
 37942  018648  0060  F4AF  FFE6   	movff	_R+43,postinc1
 37943  01864E  0060  F4B3  FFE6   	movff	_R+44,postinc1
 37944  018654  0060  F4B7  FFE6   	movff	_R+45,postinc1
 37945  01865A  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 37946  018660  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 37947  018666  0E00               	movlw	0
 37948  018668  BE33               	btfsc	(btemp+9)^0,7,c
 37949  01866A  0EFF               	movlw	255
 37950  01866C  6E34               	movwf	(btemp+10)^0,c
 37951  01866E  6E35               	movwf	(btemp+11)^0,c
 37952  018670  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 37953  018676  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 37954  01867C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 37955  018682  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 37956  018688  0E01               	movlw	1
 37957  01868A  6EE6               	movwf	postinc1,c
 37958  01868C  EC6F  F0E9         	call	___xxtofl	;wreg free
 37959  018690  0060  F0AB  FFE6   	movff	btemp,postinc1
 37960  018696  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37961  01869C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37962  0186A2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37963                           
 37964                           ;stkvar	_chan @ sp[(-8)+-1]
 37965  0186A8  0EF7               	movlw	-9
 37966  0186AA  50E3               	movf	plusw1,w,c
 37967  0186AC  6EE6               	movwf	postinc1,c
 37968  0186AE  EC05  F012         	call	_get_raw_result	;wreg free
 37969  0186B2  0060  F0A8  F034   	movff	btemp,btemp+10
 37970  0186B8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 37971  0186BE  5034               	movf	(btemp+10)^0,w,c
 37972  0186C0  6E2E               	movwf	(btemp+4)^0,c
 37973  0186C2  5035               	movf	(btemp+11)^0,w,c
 37974  0186C4  6E2F               	movwf	(btemp+5)^0,c
 37975  0186C6  6A30               	clrf	(btemp+6)^0,c
 37976  0186C8  6A31               	clrf	(btemp+7)^0,c
 37977  0186CA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 37978  0186D0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 37979  0186D6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 37980  0186DC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 37981  0186E2  0E00               	movlw	0
 37982  0186E4  6EE6               	movwf	postinc1,c
 37983  0186E6  EC6F  F0E9         	call	___xxtofl	;wreg free
 37984  0186EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 37985  0186F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37986  0186F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37987  0186FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37988  018702  EC54  F00D         	call	___flsub	;wreg free
 37989  018706  0060  F0AB  FFE6   	movff	btemp,postinc1
 37990  01870C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37991  018712  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37992  018718  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37993  01871E  EC4D  F0B2         	call	___flmul	;wreg free
 37994  018722  D1AF               	goto	l1977
 37995  018724                     l12258:
 37996                           
 37997                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 37998  018724  0060  F4BB  FFE6   	movff	_R+46,postinc1
 37999  01872A  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38000  018730  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38001  018736  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38002  01873C  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38003  018742  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38004  018748  0E00               	movlw	0
 38005  01874A  BE33               	btfsc	(btemp+9)^0,7,c
 38006  01874C  0EFF               	movlw	255
 38007  01874E  6E34               	movwf	(btemp+10)^0,c
 38008  018750  6E35               	movwf	(btemp+11)^0,c
 38009  018752  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38010  018758  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38011  01875E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38012  018764  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38013  01876A  0E01               	movlw	1
 38014  01876C  6EE6               	movwf	postinc1,c
 38015  01876E  EC6F  F0E9         	call	___xxtofl	;wreg free
 38016  018772  0060  F0AB  FFE6   	movff	btemp,postinc1
 38017  018778  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38018  01877E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38019  018784  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38020                           
 38021                           ;stkvar	_chan @ sp[(-8)+-1]
 38022  01878A  0EF7               	movlw	-9
 38023  01878C  50E3               	movf	plusw1,w,c
 38024  01878E  6EE6               	movwf	postinc1,c
 38025  018790  EC05  F012         	call	_get_raw_result	;wreg free
 38026  018794  0060  F0A8  F034   	movff	btemp,btemp+10
 38027  01879A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38028  0187A0  5034               	movf	(btemp+10)^0,w,c
 38029  0187A2  6E2E               	movwf	(btemp+4)^0,c
 38030  0187A4  5035               	movf	(btemp+11)^0,w,c
 38031  0187A6  6E2F               	movwf	(btemp+5)^0,c
 38032  0187A8  6A30               	clrf	(btemp+6)^0,c
 38033  0187AA  6A31               	clrf	(btemp+7)^0,c
 38034  0187AC  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38035  0187B2  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38036  0187B8  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38037  0187BE  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38038  0187C4  0E00               	movlw	0
 38039  0187C6  6EE6               	movwf	postinc1,c
 38040  0187C8  EC6F  F0E9         	call	___xxtofl	;wreg free
 38041  0187CC  0060  F0AB  FFE6   	movff	btemp,postinc1
 38042  0187D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38043  0187D8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38044  0187DE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38045  0187E4  EC54  F00D         	call	___flsub	;wreg free
 38046  0187E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 38047  0187EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38048  0187F4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38049  0187FA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38050  018800  EC4D  F0B2         	call	___flmul	;wreg free
 38051  018804  D13E               	goto	l1977
 38052  018806                     l12262:
 38053                           
 38054                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 38055                           ;stkvar	_chan @ sp[(0)+-1]
 38056  018806  0EFF               	movlw	-1
 38057  018808  006F FF8C  F035    	movff	plusw1,btemp+11
 38058  01880E  0E00               	movlw	0
 38059  018810  6E32               	movwf	(btemp+8)^0,c
 38060  018812  0E08               	movlw	8
 38061  018814  6E33               	movwf	(btemp+9)^0,c
 38062  018816  2A35               	incf	(btemp+11)^0,f,c
 38063  018818  D003               	goto	u11614
 38064  01881A                     u11615:
 38065  01881A  3433               	rlcf	(btemp+9)^0,w,c
 38066  01881C  3233               	rrcf	(btemp+9)^0,f,c
 38067  01881E  3232               	rrcf	(btemp+8)^0,f,c
 38068  018820                     u11614:
 38069  018820  2E35               	decfsz	(btemp+11)^0,f,c
 38070  018822  D7FB               	goto	u11615
 38071  018824  A032               	btfss	(btemp+8)^0,0,c
 38072  018826  D008               	goto	l12270
 38073                           
 38074                           ;daq.c: 151:     return 25.0;
 38075  018828  0E00               	movlw	0
 38076  01882A  6E2A               	movwf	btemp^0,c
 38077  01882C  0E00               	movlw	0
 38078  01882E  6E2B               	movwf	(btemp+1)^0,c
 38079  018830  0EC8               	movlw	200
 38080  018832  6E2C               	movwf	(btemp+2)^0,c
 38081  018834  0E41               	movlw	65
 38082  018836  D113               	goto	L44
 38083  018838                     l12270:
 38084                           
 38085                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38086  018838  0E00               	movlw	0
 38087  01883A  6EE6               	movwf	postinc1,c
 38088  01883C  0E00               	movlw	0
 38089  01883E  6EE6               	movwf	postinc1,c
 38090  018840  0E7A               	movlw	122
 38091  018842  6EE6               	movwf	postinc1,c
 38092  018844  0E44               	movlw	68
 38093  018846  6EE6               	movwf	postinc1,c
 38094  018848  0E61               	movlw	97
 38095  01884A  6EE6               	movwf	postinc1,c
 38096  01884C  0E03               	movlw	3
 38097  01884E  6EE6               	movwf	postinc1,c
 38098  018850  0E84               	movlw	132
 38099  018852  6EE6               	movwf	postinc1,c
 38100  018854  0E40               	movlw	64
 38101  018856  6EE6               	movwf	postinc1,c
 38102                           
 38103                           ;stkvar	_chan @ sp[(-8)+-1]
 38104  018858  0EF7               	movlw	-9
 38105  01885A  50E3               	movf	plusw1,w,c
 38106  01885C  6EE6               	movwf	postinc1,c
 38107  01885E  EC05  F012         	call	_get_raw_result	;wreg free
 38108  018862  0060  F0A8  F034   	movff	btemp,btemp+10
 38109  018868  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38110  01886E  5034               	movf	(btemp+10)^0,w,c
 38111  018870  6E2E               	movwf	(btemp+4)^0,c
 38112  018872  5035               	movf	(btemp+11)^0,w,c
 38113  018874  6E2F               	movwf	(btemp+5)^0,c
 38114  018876  6A30               	clrf	(btemp+6)^0,c
 38115  018878  6A31               	clrf	(btemp+7)^0,c
 38116  01887A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38117  018880  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38118  018886  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38119  01888C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38120  018892  0E00               	movlw	0
 38121  018894  6EE6               	movwf	postinc1,c
 38122  018896  EC6F  F0E9         	call	___xxtofl	;wreg free
 38123  01889A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38124  0188A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38125  0188A6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38126  0188AC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38127  0188B2  EC4D  F0B2         	call	___flmul	;wreg free
 38128  0188B6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38129  0188BC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38130  0188C2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38131  0188C8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38132  0188CE  EC9E  F0BD         	call	___fldiv	;wreg free
 38133  0188D2  D0D7               	goto	l1977
 38134  0188D4                     l12274:
 38135                           
 38136                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 38137                           ;stkvar	_chan @ sp[(0)+-1]
 38138  0188D4  0EFF               	movlw	-1
 38139  0188D6  006F FF8C  F035    	movff	plusw1,btemp+11
 38140  0188DC  0E03               	movlw	3
 38141  0188DE  6E32               	movwf	(btemp+8)^0,c
 38142  0188E0  0E00               	movlw	0
 38143  0188E2  6E33               	movwf	(btemp+9)^0,c
 38144  0188E4  2A35               	incf	(btemp+11)^0,f,c
 38145  0188E6  D003               	goto	u11634
 38146  0188E8                     u11635:
 38147  0188E8  3433               	rlcf	(btemp+9)^0,w,c
 38148  0188EA  3233               	rrcf	(btemp+9)^0,f,c
 38149  0188EC  3232               	rrcf	(btemp+8)^0,f,c
 38150  0188EE                     u11634:
 38151  0188EE  2E35               	decfsz	(btemp+11)^0,f,c
 38152  0188F0  D7FB               	goto	u11635
 38153  0188F2  B032               	btfsc	(btemp+8)^0,0,c
 38154  0188F4  D011               	goto	u11660
 38155                           
 38156                           ;stkvar	_chan @ sp[(0)+-1]
 38157  0188F6  0EFF               	movlw	-1
 38158  0188F8  006F FF8C  F035    	movff	plusw1,btemp+11
 38159  0188FE  0E00               	movlw	0
 38160  018900  6E32               	movwf	(btemp+8)^0,c
 38161  018902  0E08               	movlw	8
 38162  018904  6E33               	movwf	(btemp+9)^0,c
 38163  018906  2A35               	incf	(btemp+11)^0,f,c
 38164  018908  D003               	goto	u11654
 38165  01890A                     u11655:
 38166  01890A  3433               	rlcf	(btemp+9)^0,w,c
 38167  01890C  3233               	rrcf	(btemp+9)^0,f,c
 38168  01890E  3232               	rrcf	(btemp+8)^0,f,c
 38169  018910                     u11654:
 38170  018910  2E35               	decfsz	(btemp+11)^0,f,c
 38171  018912  D7FB               	goto	u11655
 38172  018914  A032               	btfss	(btemp+8)^0,0,c
 38173  018916  D04E               	goto	l12282
 38174  018918                     u11660:
 38175                           
 38176                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 38177  018918  0E00               	movlw	0
 38178  01891A  6EE6               	movwf	postinc1,c
 38179  01891C  0E00               	movlw	0
 38180  01891E  6EE6               	movwf	postinc1,c
 38181  018920  0E7A               	movlw	122
 38182  018922  6EE6               	movwf	postinc1,c
 38183  018924  0E44               	movlw	68
 38184  018926  6EE6               	movwf	postinc1,c
 38185  018928  0E00               	movlw	0
 38186  01892A  6EE6               	movwf	postinc1,c
 38187  01892C  0E00               	movlw	0
 38188  01892E  6EE6               	movwf	postinc1,c
 38189  018930  0E20               	movlw	32
 38190  018932  6EE6               	movwf	postinc1,c
 38191  018934  0E3F               	movlw	63
 38192  018936  6EE6               	movwf	postinc1,c
 38193                           
 38194                           ;stkvar	_chan @ sp[(-8)+-1]
 38195  018938  0EF7               	movlw	-9
 38196  01893A  50E3               	movf	plusw1,w,c
 38197  01893C  6EE6               	movwf	postinc1,c
 38198  01893E  EC05  F012         	call	_get_raw_result	;wreg free
 38199  018942  0060  F0A8  F034   	movff	btemp,btemp+10
 38200  018948  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38201  01894E  5034               	movf	(btemp+10)^0,w,c
 38202  018950  6E2E               	movwf	(btemp+4)^0,c
 38203  018952  5035               	movf	(btemp+11)^0,w,c
 38204  018954  6E2F               	movwf	(btemp+5)^0,c
 38205  018956  6A30               	clrf	(btemp+6)^0,c
 38206  018958  6A31               	clrf	(btemp+7)^0,c
 38207  01895A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38208  018960  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38209  018966  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38210  01896C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38211  018972  0E00               	movlw	0
 38212  018974  6EE6               	movwf	postinc1,c
 38213  018976  EC6F  F0E9         	call	___xxtofl	;wreg free
 38214  01897A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38215  018980  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38216  018986  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38217  01898C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38218  018992  EC4D  F0B2         	call	___flmul	;wreg free
 38219  018996  0060  F0AB  FFE6   	movff	btemp,postinc1
 38220  01899C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38221  0189A2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38222  0189A8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38223  0189AE  EC9E  F0BD         	call	___fldiv	;wreg free
 38224  0189B2  D067               	goto	l1977
 38225  0189B4                     l12282:
 38226                           
 38227                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38228  0189B4  0E00               	movlw	0
 38229  0189B6  6EE6               	movwf	postinc1,c
 38230  0189B8  0E00               	movlw	0
 38231  0189BA  6EE6               	movwf	postinc1,c
 38232  0189BC  0E7A               	movlw	122
 38233  0189BE  6EE6               	movwf	postinc1,c
 38234  0189C0  0E44               	movlw	68
 38235  0189C2  6EE6               	movwf	postinc1,c
 38236  0189C4  0E61               	movlw	97
 38237  0189C6  6EE6               	movwf	postinc1,c
 38238  0189C8  0E03               	movlw	3
 38239  0189CA  6EE6               	movwf	postinc1,c
 38240  0189CC  0E84               	movlw	132
 38241  0189CE  6EE6               	movwf	postinc1,c
 38242  0189D0  0E40               	movlw	64
 38243  0189D2  6EE6               	movwf	postinc1,c
 38244                           
 38245                           ;stkvar	_chan @ sp[(-8)+-1]
 38246  0189D4  0EF7               	movlw	-9
 38247  0189D6  50E3               	movf	plusw1,w,c
 38248  0189D8  6EE6               	movwf	postinc1,c
 38249  0189DA  EC05  F012         	call	_get_raw_result	;wreg free
 38250  0189DE  0060  F0A8  F034   	movff	btemp,btemp+10
 38251  0189E4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38252  0189EA  5034               	movf	(btemp+10)^0,w,c
 38253  0189EC  6E2E               	movwf	(btemp+4)^0,c
 38254  0189EE  5035               	movf	(btemp+11)^0,w,c
 38255  0189F0  6E2F               	movwf	(btemp+5)^0,c
 38256  0189F2  6A30               	clrf	(btemp+6)^0,c
 38257  0189F4  6A31               	clrf	(btemp+7)^0,c
 38258  0189F6  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38259  0189FC  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38260  018A02  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38261  018A08  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38262  018A0E  0E00               	movlw	0
 38263  018A10  6EE6               	movwf	postinc1,c
 38264  018A12  EC6F  F0E9         	call	___xxtofl	;wreg free
 38265  018A16  0060  F0AB  FFE6   	movff	btemp,postinc1
 38266  018A1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38267  018A22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38268  018A28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38269  018A2E  EC4D  F0B2         	call	___flmul	;wreg free
 38270  018A32  0060  F0AB  FFE6   	movff	btemp,postinc1
 38271  018A38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38272  018A3E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38273  018A44  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38274  018A4A  EC9E  F0BD         	call	___fldiv	;wreg free
 38275  018A4E  D019               	goto	l1977
 38276  018A50                     l12288:
 38277                           
 38278                           ;daq.c: 164:   return 0.0;
 38279  018A50  0E00               	movlw	0
 38280  018A52  6E2A               	movwf	btemp^0,c
 38281  018A54  0E00               	movlw	0
 38282  018A56  6E2B               	movwf	(btemp+1)^0,c
 38283  018A58  0E00               	movlw	0
 38284  018A5A  6E2C               	movwf	(btemp+2)^0,c
 38285  018A5C  0E00               	movlw	0
 38286  018A5E                     L44:
 38287  018A5E  6E2D               	movwf	(btemp+3)^0,c
 38288  018A60  D010               	goto	l1977
 38289  018A62                     l12296:
 38290                           
 38291                           ;stkvar	_to_what @ sp[(0)+-2]
 38292  018A62  0EFE               	movlw	-2
 38293  018A64  50E3               	movf	plusw1,w,c
 38294  018A66  6E34               	movwf	(btemp+10)^0,c
 38295  018A68  6A35               	clrf	(btemp+11)^0,c
 38296                           
 38297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38298                           ; Switch size 1, requested type "simple"
 38299                           ; Number of cases is 1, Range of values is 0 to 0
 38300                           ; switch strategies available:
 38301                           ; Name         Instructions Cycles
 38302                           ; simple_byte            4     3 (average)
 38303                           ;	Chosen strategy is simple_byte
 38304  018A6A  5035               	movf	(btemp+11)^0,w,c
 38305  018A6C  0A00               	xorlw	0	; case 0
 38306  018A6E  A4D8               	btfss	status,2,c
 38307  018A70  D7EF               	goto	l12288
 38308                           
 38309                           ; Switch size 1, requested type "simple"
 38310                           ; Number of cases is 2, Range of values is 0 to 1
 38311                           ; switch strategies available:
 38312                           ; Name         Instructions Cycles
 38313                           ; simple_byte            7     4 (average)
 38314                           ;	Chosen strategy is simple_byte
 38315  018A72  5034               	movf	(btemp+10)^0,w,c
 38316  018A74  0A00               	xorlw	0	; case 0
 38317  018A76  B4D8               	btfsc	status,2,c
 38318  018A78  D5AA               	goto	l12242
 38319  018A7A  0A01               	xorlw	1	; case 1
 38320  018A7C  B4D8               	btfsc	status,2,c
 38321  018A7E  D72A               	goto	l12274
 38322  018A80  D7E7               	goto	l12288
 38323  018A82                     l1977:
 38324                           
 38325                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38326  018A82  52E5               	movf	postdec1,f,c
 38327  018A84  52E5               	movf	postdec1,f,c
 38328  018A86  0012               	return		;funcret
 38329  018A88                     __end_of_conv_raw_result:
 38330                           	opt callstack 0
 38331                           
 38332 ;; *************** function _nanf *****************
 38333 ;; Defined at:
 38334 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 38335 ;; Parameters:    Size  Location     Type
 38336 ;;  s               2  [STACK] PTR const unsigned char 
 38337 ;;		 -> STR_129(1), STR_89(1), 
 38338 ;; Auto vars:     Size  Location     Type
 38339 ;;  u               4  [STACK] struct .
 38340 ;; Return value:  Size  Location     Type
 38341 ;;                  4  [STACK] float 
 38342 ;; Registers used:
 38343 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38344 ;; Tracked objects:
 38345 ;;		On entry : 0/0
 38346 ;;		On exit  : 0/0
 38347 ;;		Unchanged: 0/0
 38348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38353 ;;Total ram usage:        0 bytes
 38354 ;; Hardware stack levels used:    1
 38355 ;; Hardware stack levels required when called:   15
 38356 ;; This function calls:
 38357 ;;		Nothing
 38358 ;; This function is called by:
 38359 ;;		_conv_raw_result
 38360 ;; This function uses a reentrant model
 38361 ;;
 38362                           
 38363                           	psect	text143
 38364  001538                     __ptext143:
 38365                           	opt callstack 0
 38366  001538                     _nanf:
 38367                           	opt callstack 0
 38368                           
 38369                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38370  001538  52E6               	movf	postinc1,f,c
 38371  00153A  52E6               	movf	postinc1,f,c
 38372  00153C  52E6               	movf	postinc1,f,c
 38373  00153E  52E6               	movf	postinc1,f,c
 38374                           
 38375                           ;incstack = 0
 38376 ;; hardware stack exceeded
 38377  001540  0EFF               	movlw	255
 38378  001542  6E32               	movwf	(btemp+8)^0,c
 38379  001544  0EFF               	movlw	255
 38380  001546  6E33               	movwf	(btemp+9)^0,c
 38381  001548  0EFF               	movlw	255
 38382  00154A  6E34               	movwf	(btemp+10)^0,c
 38383  00154C  0E7F               	movlw	127
 38384  00154E  6E35               	movwf	(btemp+11)^0,c
 38385                           
 38386                           ;stkvar	_u @ sp[(-4)+0]
 38387  001550  0EFC               	movlw	-4
 38388  001552  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38389  001558  0EFD               	movlw	-3
 38390  00155A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38391  001560  0EFE               	movlw	-2
 38392  001562  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38393  001568  0EFF               	movlw	-1
 38394  00156A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38395                           
 38396                           ;stkvar	_u @ sp[(-4)+0]
 38397  001570  0EFC               	movlw	-4
 38398  001572  006F FF8C  F02A    	movff	plusw1,btemp
 38399  001578  0EFD               	movlw	-3
 38400  00157A  006F FF8C  F02B    	movff	plusw1,btemp+1
 38401  001580  0EFE               	movlw	-2
 38402  001582  006F FF8C  F02C    	movff	plusw1,btemp+2
 38403  001588  0EFF               	movlw	-1
 38404  00158A  006F FF8C  F02D    	movff	plusw1,btemp+3
 38405                           
 38406                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 38407  001590  0EFA               	movlw	250
 38408  001592  26E1               	addwf	fsr1l,f,c
 38409  001594  0EFF               	movlw	255
 38410  001596  22E2               	addwfc	fsr1h,f,c
 38411  001598  0012               	return		;funcret
 38412  00159A                     __end_of_nanf:
 38413                           	opt callstack 0
 38414                           
 38415 ;; *************** function _get_raw_result *****************
 38416 ;; Defined at:
 38417 ;;		line 127 in file "daq.c"
 38418 ;; Parameters:    Size  Location     Type
 38419 ;;  index           1  [STACK] const enum E16605
 38420 ;; Auto vars:     Size  Location     Type
 38421 ;;		None
 38422 ;; Return value:  Size  Location     Type
 38423 ;;                  2  [STACK] unsigned short 
 38424 ;; Registers used:
 38425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 38426 ;; Tracked objects:
 38427 ;;		On entry : 0/2
 38428 ;;		On exit  : 0/0
 38429 ;;		Unchanged: 0/0
 38430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38435 ;;Total ram usage:        0 bytes
 38436 ;; Hardware stack levels used:    1
 38437 ;; Hardware stack levels required when called:   15
 38438 ;; This function calls:
 38439 ;;		Nothing
 38440 ;; This function is called by:
 38441 ;;		_main
 38442 ;;		_current_sensor_cal
 38443 ;;		_conv_raw_result
 38444 ;; This function uses a reentrant model
 38445 ;;
 38446                           
 38447                           	psect	text144
 38448  00240A                     __ptext144:
 38449                           	opt callstack 0
 38450  00240A                     _get_raw_result:
 38451                           	opt callstack 0
 38452                           
 38453                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 38454                           ;stkvar	_index @ sp[(0)+-1]
 38455                           
 38456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38457                           ;incstack = 0
 38458 ;; hardware stack exceeded
 38459  00240A  0EFF               	movlw	-1
 38460  00240C  50E3               	movf	plusw1,w,c
 38461  00240E  0D02               	mullw	2
 38462  002410  0E00               	movlw	low _R
 38463  002412  24F3               	addwf	243,w,c
 38464  002414  6ED9               	movwf	fsr2l,c
 38465  002416  0E01               	movlw	high _R
 38466  002418  20F4               	addwfc	prodh,w,c
 38467  00241A  6EDA               	movwf	fsr2h,c
 38468  00241C  006F FF78  F02A    	movff	postinc2,btemp
 38469  002422  006F FF74  F02B    	movff	postdec2,btemp+1
 38470                           
 38471                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 38472  002428  52E5               	movf	postdec1,f,c
 38473  00242A  0012               	return		;funcret
 38474  00242C                     __end_of_get_raw_result:
 38475                           	opt callstack 0
 38476                           
 38477 ;; *************** function ___xxtofl *****************
 38478 ;; Defined at:
 38479 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 38480 ;; Parameters:    Size  Location     Type
 38481 ;;  sign            1  [STACK] unsigned char 
 38482 ;;  val             4  [STACK] long 
 38483 ;; Auto vars:     Size  Location     Type
 38484 ;;  arg             4  [STACK] unsigned long 
 38485 ;;  exp             1  [STACK] unsigned char 
 38486 ;; Return value:  Size  Location     Type
 38487 ;;                  4  [STACK] unsigned char 
 38488 ;; Registers used:
 38489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38490 ;; Tracked objects:
 38491 ;;		On entry : 0/1
 38492 ;;		On exit  : 0/0
 38493 ;;		Unchanged: 0/0
 38494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38499 ;;Total ram usage:        0 bytes
 38500 ;; Hardware stack levels used:    1
 38501 ;; Hardware stack levels required when called:   15
 38502 ;; This function calls:
 38503 ;;		Nothing
 38504 ;; This function is called by:
 38505 ;;		_conv_raw_result
 38506 ;;		_init_bsoc
 38507 ;; This function uses a reentrant model
 38508 ;;
 38509                           
 38510                           	psect	text145
 38511  01D2DE                     __ptext145:
 38512                           	opt callstack 0
 38513  01D2DE                     ___xxtofl:
 38514                           	opt callstack 0
 38515                           
 38516                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38517  01D2DE  0E05               	movlw	5
 38518  01D2E0  26E1               	addwf	fsr1l,f,c
 38519  01D2E2  0E00               	movlw	0
 38520  01D2E4  22E2               	addwfc	fsr1h,f,c
 38521                           
 38522                           ;stkvar	_sign @ sp[(-5)+-1]
 38523                           
 38524                           ;incstack = 0
 38525 ;; hardware stack exceeded
 38526  01D2E6  0EFA               	movlw	-6
 38527  01D2E8  50E3               	movf	plusw1,w,c
 38528  01D2EA  B4D8               	btfsc	status,2,c
 38529  01D2EC  D01D               	goto	l11978
 38530                           
 38531                           ;stkvar	_val @ sp[(-5)+-5]
 38532  01D2EE  0EF9               	movlw	-7
 38533  01D2F0  AEE3               	btfss	plusw1,7,c
 38534  01D2F2  D01A               	goto	l11978
 38535                           
 38536                           ;stkvar	_val @ sp[(-5)+-5]
 38537  01D2F4  0EF6               	movlw	-10
 38538  01D2F6  006F FF8C  F032    	movff	plusw1,btemp+8
 38539  01D2FC  0EF7               	movlw	-9
 38540  01D2FE  006F FF8C  F033    	movff	plusw1,btemp+9
 38541  01D304  0EF8               	movlw	-8
 38542  01D306  006F FF8C  F034    	movff	plusw1,btemp+10
 38543  01D30C  0EF9               	movlw	-7
 38544  01D30E  006F FF8C  F035    	movff	plusw1,btemp+11
 38545  01D314  1E32               	comf	(btemp+8)^0,f,c
 38546  01D316  1E33               	comf	(btemp+9)^0,f,c
 38547  01D318  1E34               	comf	(btemp+10)^0,f,c
 38548  01D31A  1E35               	comf	(btemp+11)^0,f,c
 38549  01D31C  2A32               	incf	(btemp+8)^0,f,c
 38550  01D31E  0E00               	movlw	0
 38551  01D320  2233               	addwfc	(btemp+9)^0,f,c
 38552  01D322  2234               	addwfc	(btemp+10)^0,f,c
 38553  01D324  2235               	addwfc	(btemp+11)^0,f,c
 38554  01D326  D010               	goto	L45
 38555  01D328                     l11978:
 38556                           
 38557                           ;stkvar	_val @ sp[(-5)+-5]
 38558  01D328  0EF6               	movlw	-10
 38559  01D32A  006F FF8C  F032    	movff	plusw1,btemp+8
 38560  01D330  0EF7               	movlw	-9
 38561  01D332  006F FF8C  F033    	movff	plusw1,btemp+9
 38562  01D338  0EF8               	movlw	-8
 38563  01D33A  006F FF8C  F034    	movff	plusw1,btemp+10
 38564  01D340  0EF9               	movlw	-7
 38565  01D342  006F FF8C  F035    	movff	plusw1,btemp+11
 38566  01D348                     L45:
 38567                           
 38568                           ;stkvar	_arg @ sp[(-5)+0]
 38569  01D348  0EFB               	movlw	-5
 38570  01D34A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38571  01D350  0EFC               	movlw	-4
 38572  01D352  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38573  01D358  0EFD               	movlw	-3
 38574  01D35A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38575  01D360  0EFE               	movlw	-2
 38576  01D362  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38577                           
 38578                           ;stkvar	_val @ sp[(-5)+-5]
 38579  01D368  0EF6               	movlw	-10
 38580  01D36A  50E3               	movf	plusw1,w,c
 38581  01D36C  E113               	bnz	l11986
 38582  01D36E  0EF7               	movlw	-9
 38583  01D370  50E3               	movf	plusw1,w,c
 38584  01D372  E110               	bnz	l11986
 38585  01D374  0EF8               	movlw	-8
 38586  01D376  50E3               	movf	plusw1,w,c
 38587  01D378  E10D               	bnz	l11986
 38588  01D37A  0EF9               	movlw	-7
 38589  01D37C  50E3               	movf	plusw1,w,c
 38590  01D37E  A4D8               	btfss	status,2,c
 38591  01D380  D009               	goto	l11986
 38592  01D382  0E00               	movlw	0
 38593  01D384  6E2A               	movwf	btemp^0,c
 38594  01D386  0E00               	movlw	0
 38595  01D388  6E2B               	movwf	(btemp+1)^0,c
 38596  01D38A  0E00               	movlw	0
 38597  01D38C  6E2C               	movwf	(btemp+2)^0,c
 38598  01D38E  0E00               	movlw	0
 38599  01D390  6E2D               	movwf	(btemp+3)^0,c
 38600  01D392  D0A2               	goto	l3380
 38601  01D394                     l11986:
 38602  01D394  0E96               	movlw	150
 38603  01D396  6E35               	movwf	(btemp+11)^0,c
 38604                           
 38605                           ;stkvar	_exp @ sp[(-5)+4]
 38606  01D398  0EFF               	movlw	-1
 38607  01D39A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38608  01D3A0  D00B               	goto	l11990
 38609  01D3A2                     l11988:
 38610                           
 38611                           ;stkvar	_exp @ sp[(-5)+4]
 38612  01D3A2  0EFF               	movlw	-1
 38613  01D3A4  2AE3               	incf	plusw1,f,c
 38614                           
 38615                           ;stkvar	_arg @ sp[(-5)+0]
 38616  01D3A6  90D8               	bcf	status,0,c
 38617  01D3A8  0EFE               	movlw	-2
 38618  01D3AA  32E3               	rrcf	plusw1,f,c
 38619  01D3AC  0EFD               	movlw	-3
 38620  01D3AE  32E3               	rrcf	plusw1,f,c
 38621  01D3B0  0EFC               	movlw	-4
 38622  01D3B2  32E3               	rrcf	plusw1,f,c
 38623  01D3B4  0EFB               	movlw	-5
 38624  01D3B6  32E3               	rrcf	plusw1,f,c
 38625  01D3B8                     l11990:
 38626                           
 38627                           ;stkvar	_arg @ sp[(-5)+0]
 38628  01D3B8  50E1               	movf	fsr1l,w,c
 38629  01D3BA  0FFB               	addlw	-5
 38630  01D3BC  6ED9               	movwf	fsr2l,c
 38631  01D3BE  50E2               	movf	fsr1h,w,c
 38632  01D3C0  6EDA               	movwf	fsr2h,c
 38633  01D3C2  0EFF               	movlw	255
 38634  01D3C4  22DA               	addwfc	fsr2h,f,c
 38635  01D3C6  52DE               	movf	postinc2,f,c
 38636  01D3C8  52DE               	movf	postinc2,f,c
 38637  01D3CA  52DE               	movf	postinc2,f,c
 38638  01D3CC  0EFE               	movlw	254
 38639  01D3CE  14DD               	andwf	postdec2,w,c
 38640  01D3D0  B4D8               	btfsc	status,2,c
 38641  01D3D2  D018               	goto	l11998
 38642  01D3D4  D7E6               	goto	l11988
 38643  01D3D6                     l11992:
 38644                           
 38645                           ;stkvar	_exp @ sp[(-5)+4]
 38646  01D3D6  0EFF               	movlw	-1
 38647  01D3D8  2AE3               	incf	plusw1,f,c
 38648                           
 38649                           ;stkvar	_arg @ sp[(-5)+0]
 38650  01D3DA  50E1               	movf	fsr1l,w,c
 38651  01D3DC  0FFB               	addlw	-5
 38652  01D3DE  6ED9               	movwf	fsr2l,c
 38653  01D3E0  50E2               	movf	fsr1h,w,c
 38654  01D3E2  6EDA               	movwf	fsr2h,c
 38655  01D3E4  0EFF               	movlw	255
 38656  01D3E6  22DA               	addwfc	fsr2h,f,c
 38657  01D3E8  2ADE               	incf	postinc2,f,c
 38658  01D3EA  0E00               	movlw	0
 38659  01D3EC  22DE               	addwfc	postinc2,f,c
 38660  01D3EE  22DE               	addwfc	postinc2,f,c
 38661  01D3F0  22DE               	addwfc	postinc2,f,c
 38662                           
 38663                           ;stkvar	_arg @ sp[(-5)+0]
 38664  01D3F2  90D8               	bcf	status,0,c
 38665  01D3F4  0EFE               	movlw	-2
 38666  01D3F6  32E3               	rrcf	plusw1,f,c
 38667  01D3F8  0EFD               	movlw	-3
 38668  01D3FA  32E3               	rrcf	plusw1,f,c
 38669  01D3FC  0EFC               	movlw	-4
 38670  01D3FE  32E3               	rrcf	plusw1,f,c
 38671  01D400  0EFB               	movlw	-5
 38672  01D402  32E3               	rrcf	plusw1,f,c
 38673  01D404                     l11998:
 38674                           
 38675                           ;stkvar	_arg @ sp[(-5)+0]
 38676  01D404  50E1               	movf	fsr1l,w,c
 38677  01D406  0FFB               	addlw	-5
 38678  01D408  6ED9               	movwf	fsr2l,c
 38679  01D40A  50E2               	movf	fsr1h,w,c
 38680  01D40C  6EDA               	movwf	fsr2h,c
 38681  01D40E  0EFF               	movlw	255
 38682  01D410  22DA               	addwfc	fsr2h,f,c
 38683  01D412  52DE               	movf	postinc2,f,c
 38684  01D414  52DE               	movf	postinc2,f,c
 38685  01D416  52DE               	movf	postinc2,f,c
 38686  01D418  0EFF               	movlw	255
 38687  01D41A  14DD               	andwf	postdec2,w,c
 38688  01D41C  B4D8               	btfsc	status,2,c
 38689  01D41E  D00C               	goto	l12002
 38690  01D420  D7DA               	goto	l11992
 38691  01D422                     l12000:
 38692                           
 38693                           ;stkvar	_exp @ sp[(-5)+4]
 38694  01D422  0EFF               	movlw	-1
 38695  01D424  06E3               	decf	plusw1,f,c
 38696                           
 38697                           ;stkvar	_arg @ sp[(-5)+0]
 38698  01D426  90D8               	bcf	status,0,c
 38699  01D428  0EFB               	movlw	-5
 38700  01D42A  36E3               	rlcf	plusw1,f,c
 38701  01D42C  0EFC               	movlw	-4
 38702  01D42E  36E3               	rlcf	plusw1,f,c
 38703  01D430  0EFD               	movlw	-3
 38704  01D432  36E3               	rlcf	plusw1,f,c
 38705  01D434  0EFE               	movlw	-2
 38706  01D436  36E3               	rlcf	plusw1,f,c
 38707  01D438                     l12002:
 38708                           
 38709                           ;stkvar	_arg @ sp[(-5)+0]
 38710  01D438  0EFD               	movlw	-3
 38711  01D43A  BEE3               	btfsc	plusw1,7,c
 38712  01D43C  D007               	goto	u11330
 38713                           
 38714                           ;stkvar	_exp @ sp[(-5)+4]
 38715  01D43E  0EFF               	movlw	-1
 38716  01D440  006F FF8C  F02A    	movff	plusw1,btemp
 38717  01D446  0E02               	movlw	2
 38718  01D448  602A               	cpfslt	btemp^0,c
 38719  01D44A  D7EB               	goto	l12000
 38720  01D44C                     u11330:
 38721                           
 38722                           ;stkvar	_exp @ sp[(-5)+4]
 38723  01D44C  0EFF               	movlw	-1
 38724  01D44E  B0E3               	btfsc	plusw1,0,c
 38725  01D450  D002               	goto	l12010
 38726                           
 38727                           ;stkvar	_arg @ sp[(-5)+0]
 38728  01D452  0EFD               	movlw	-3
 38729  01D454  9EE3               	bcf	plusw1,7,c
 38730  01D456                     l12010:
 38731                           
 38732                           ;stkvar	_exp @ sp[(-5)+4]
 38733  01D456  50E1               	movf	fsr1l,w,c
 38734  01D458  0FFF               	addlw	-1
 38735  01D45A  6ED9               	movwf	fsr2l,c
 38736  01D45C  50E2               	movf	fsr1h,w,c
 38737  01D45E  6EDA               	movwf	fsr2h,c
 38738  01D460  0EFF               	movlw	255
 38739  01D462  22DA               	addwfc	fsr2h,f,c
 38740  01D464  90D8               	bcf	status,0,c
 38741  01D466  32DF               	rrcf	indf2,f,c
 38742                           
 38743                           ;stkvar	_exp @ sp[(-5)+4]
 38744  01D468  0EFF               	movlw	-1
 38745  01D46A  006F FF8C  F035    	movff	plusw1,btemp+11
 38746  01D470  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 38747  01D476  6A2F               	clrf	(btemp+5)^0,c
 38748  01D478  6A30               	clrf	(btemp+6)^0,c
 38749  01D47A  6A31               	clrf	(btemp+7)^0,c
 38750  01D47C  0060  F0B8  F031   	movff	btemp+4,btemp+7
 38751  01D482  6A30               	clrf	(btemp+6)^0,c
 38752  01D484  6A2F               	clrf	(btemp+5)^0,c
 38753  01D486  6A2E               	clrf	(btemp+4)^0,c
 38754                           
 38755                           ;stkvar	_arg @ sp[(-5)+0]
 38756  01D488  50E1               	movf	fsr1l,w,c
 38757  01D48A  0FFB               	addlw	-5
 38758  01D48C  6ED9               	movwf	fsr2l,c
 38759  01D48E  50E2               	movf	fsr1h,w,c
 38760  01D490  6EDA               	movwf	fsr2h,c
 38761  01D492  0EFF               	movlw	255
 38762  01D494  22DA               	addwfc	fsr2h,f,c
 38763  01D496  502E               	movf	(btemp+4)^0,w,c
 38764  01D498  12DE               	iorwf	postinc2,f,c
 38765  01D49A  502F               	movf	(btemp+5)^0,w,c
 38766  01D49C  12DE               	iorwf	postinc2,f,c
 38767  01D49E  5030               	movf	(btemp+6)^0,w,c
 38768  01D4A0  12DE               	iorwf	postinc2,f,c
 38769  01D4A2  5031               	movf	(btemp+7)^0,w,c
 38770  01D4A4  12DE               	iorwf	postinc2,f,c
 38771                           
 38772                           ;stkvar	_sign @ sp[(-5)+-1]
 38773  01D4A6  0EFA               	movlw	-6
 38774  01D4A8  50E3               	movf	plusw1,w,c
 38775  01D4AA  B4D8               	btfsc	status,2,c
 38776  01D4AC  D005               	goto	l12020
 38777                           
 38778                           ;stkvar	_val @ sp[(-5)+-5]
 38779  01D4AE  0EF9               	movlw	-7
 38780  01D4B0  AEE3               	btfss	plusw1,7,c
 38781  01D4B2  D002               	goto	l12020
 38782                           
 38783                           ;stkvar	_arg @ sp[(-5)+0]
 38784  01D4B4  0EFE               	movlw	-2
 38785  01D4B6  8EE3               	bsf	plusw1,7,c
 38786  01D4B8                     l12020:
 38787                           
 38788                           ;stkvar	_arg @ sp[(-5)+0]
 38789  01D4B8  0EFB               	movlw	-5
 38790  01D4BA  006F FF8C  F02A    	movff	plusw1,btemp
 38791  01D4C0  0EFC               	movlw	-4
 38792  01D4C2  006F FF8C  F02B    	movff	plusw1,btemp+1
 38793  01D4C8  0EFD               	movlw	-3
 38794  01D4CA  006F FF8C  F02C    	movff	plusw1,btemp+2
 38795  01D4D0  0EFE               	movlw	-2
 38796  01D4D2  006F FF8C  F02D    	movff	plusw1,btemp+3
 38797  01D4D8                     l3380:
 38798                           
 38799                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 38800  01D4D8  0EF6               	movlw	246
 38801  01D4DA  26E1               	addwf	fsr1l,f,c
 38802  01D4DC  0EFF               	movlw	255
 38803  01D4DE  22E2               	addwfc	fsr1h,f,c
 38804  01D4E0  0012               	return		;funcret
 38805  01D4E2                     __end_of___xxtofl:
 38806                           	opt callstack 0
 38807                           
 38808 ;; *************** function ___fldiv *****************
 38809 ;; Defined at:
 38810 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 38811 ;; Parameters:    Size  Location     Type
 38812 ;;  b               4  [STACK] unsigned char 
 38813 ;;  a               4  [STACK] unsigned char 
 38814 ;; Auto vars:     Size  Location     Type
 38815 ;;  grs             4  [STACK] unsigned long 
 38816 ;;  rem             4  [STACK] unsigned long 
 38817 ;;  new_exp         2  [STACK] short 
 38818 ;;  aexp            1  [STACK] unsigned char 
 38819 ;;  bexp            1  [STACK] unsigned char 
 38820 ;;  sign            1  [STACK] unsigned char 
 38821 ;; Return value:  Size  Location     Type
 38822 ;;                  4  [STACK] unsigned char 
 38823 ;; Registers used:
 38824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 38825 ;; Tracked objects:
 38826 ;;		On entry : 0/0
 38827 ;;		On exit  : 0/0
 38828 ;;		Unchanged: 0/0
 38829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38834 ;;Total ram usage:        0 bytes
 38835 ;; Hardware stack levels used:    1
 38836 ;; Hardware stack levels required when called:   15
 38837 ;; This function calls:
 38838 ;;		Nothing
 38839 ;; This function is called by:
 38840 ;;		_conv_raw_result
 38841 ;;		_convert_dac_raw
 38842 ;;		_load_hist_data
 38843 ;;		_calc_bsoc
 38844 ;;		_init_bsoc
 38845 ;;		_esr_check
 38846 ;;		_efgtoa
 38847 ;; This function uses a reentrant model
 38848 ;;
 38849                           
 38850                           	psect	text146
 38851  017B3C                     __ptext146:
 38852                           	opt callstack 0
 38853  017B3C                     ___fldiv:
 38854                           	opt callstack 0
 38855                           
 38856                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 38857  017B3C  0E0D               	movlw	13
 38858  017B3E  26E1               	addwf	fsr1l,f,c
 38859  017B40  0E00               	movlw	0
 38860  017B42  22E2               	addwfc	fsr1h,f,c
 38861                           
 38862                           ;stkvar	_b @ sp[(-13)+-4]
 38863                           
 38864                           ;incstack = 0
 38865 ;; hardware stack exceeded
 38866  017B44  0EF2               	movlw	242
 38867  017B46  24E1               	addwf	fsr1l,w,c
 38868  017B48  6ED9               	movwf	fsr2l,c
 38869  017B4A  0EFF               	movlw	255
 38870  017B4C  20E2               	addwfc	fsr1h,w,c
 38871  017B4E  6EDA               	movwf	fsr2h,c
 38872  017B50  50DF               	movf	indf2,w,c
 38873  017B52  6E35               	movwf	(btemp+11)^0,c
 38874  017B54  0E80               	movlw	128
 38875  017B56  1635               	andwf	(btemp+11)^0,f,c
 38876                           
 38877                           ;stkvar	_sign @ sp[(-13)+12]
 38878  017B58  0EFF               	movlw	-1
 38879  017B5A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38880                           
 38881                           ;stkvar	_b @ sp[(-13)+-4]
 38882  017B60  0EF2               	movlw	242
 38883  017B62  24E1               	addwf	fsr1l,w,c
 38884  017B64  6ED9               	movwf	fsr2l,c
 38885  017B66  0EFF               	movlw	255
 38886  017B68  20E2               	addwfc	fsr1h,w,c
 38887  017B6A  6EDA               	movwf	fsr2h,c
 38888  017B6C  50DF               	movf	indf2,w,c
 38889  017B6E  6E35               	movwf	(btemp+11)^0,c
 38890  017B70  90D8               	bcf	status,0,c
 38891  017B72  3435               	rlcf	(btemp+11)^0,w,c
 38892  017B74  6E34               	movwf	(btemp+10)^0,c
 38893                           
 38894                           ;stkvar	_bexp @ sp[(-13)+11]
 38895  017B76  0EFE               	movlw	-2
 38896  017B78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38897                           
 38898                           ;stkvar	_b @ sp[(-13)+-4]
 38899  017B7E  0EF1               	movlw	241
 38900  017B80  24E1               	addwf	fsr1l,w,c
 38901  017B82  6ED9               	movwf	fsr2l,c
 38902  017B84  0EFF               	movlw	255
 38903  017B86  20E2               	addwfc	fsr1h,w,c
 38904  017B88  6EDA               	movwf	fsr2h,c
 38905  017B8A  AEDF               	btfss	indf2,7,c
 38906  017B8C  D002               	goto	l10264
 38907                           
 38908                           ;stkvar	_bexp @ sp[(-13)+11]
 38909  017B8E  0EFE               	movlw	-2
 38910  017B90  80E3               	bsf	plusw1,0,c
 38911  017B92                     l10264:
 38912                           
 38913                           ;stkvar	_bexp @ sp[(-13)+11]
 38914  017B92  0EFE               	movlw	-2
 38915  017B94  50E3               	movf	plusw1,w,c
 38916  017B96  B4D8               	btfsc	status,2,c
 38917  017B98  D027               	goto	l10274
 38918                           
 38919                           ;stkvar	_bexp @ sp[(-13)+11]
 38920  017B9A  0EFE               	movlw	-2
 38921  017B9C  28E3               	incf	plusw1,w,c
 38922  017B9E  A4D8               	btfss	status,2,c
 38923  017BA0  D018               	goto	l10270
 38924  017BA2  0E00               	movlw	0
 38925  017BA4  6E32               	movwf	(btemp+8)^0,c
 38926  017BA6  0E00               	movlw	0
 38927  017BA8  6E33               	movwf	(btemp+9)^0,c
 38928  017BAA  0E00               	movlw	0
 38929  017BAC  6E34               	movwf	(btemp+10)^0,c
 38930  017BAE  0E00               	movlw	0
 38931  017BB0  6E35               	movwf	(btemp+11)^0,c
 38932                           
 38933                           ;stkvar	_b @ sp[(-13)+-4]
 38934  017BB2  0EEF               	movlw	-17
 38935  017BB4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38936  017BBA  0EF0               	movlw	-16
 38937  017BBC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38938  017BC2  0EF1               	movlw	-15
 38939  017BC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38940  017BCA  0EF2               	movlw	-14
 38941  017BCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38942  017BD2                     l10270:
 38943                           
 38944                           ;stkvar	_b @ sp[(-13)+-4]
 38945  017BD2  0EF1               	movlw	-15
 38946  017BD4  8EE3               	bsf	plusw1,7,c
 38947                           
 38948                           ;stkvar	_b @ sp[(-13)+-4]
 38949  017BD6  0EF2               	movlw	242
 38950  017BD8  24E1               	addwf	fsr1l,w,c
 38951  017BDA  6ED9               	movwf	fsr2l,c
 38952  017BDC  0EFF               	movlw	255
 38953  017BDE  20E2               	addwfc	fsr1h,w,c
 38954  017BE0  6EDA               	movwf	fsr2h,c
 38955  017BE2  0E00               	movlw	0
 38956  017BE4  6EDF               	movwf	indf2,c
 38957  017BE6  D018               	goto	l10276
 38958  017BE8                     l10274:
 38959  017BE8  0E00               	movlw	0
 38960  017BEA  6E32               	movwf	(btemp+8)^0,c
 38961  017BEC  0E00               	movlw	0
 38962  017BEE  6E33               	movwf	(btemp+9)^0,c
 38963  017BF0  0E00               	movlw	0
 38964  017BF2  6E34               	movwf	(btemp+10)^0,c
 38965  017BF4  0E00               	movlw	0
 38966  017BF6  6E35               	movwf	(btemp+11)^0,c
 38967                           
 38968                           ;stkvar	_b @ sp[(-13)+-4]
 38969  017BF8  0EEF               	movlw	-17
 38970  017BFA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38971  017C00  0EF0               	movlw	-16
 38972  017C02  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38973  017C08  0EF1               	movlw	-15
 38974  017C0A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38975  017C10  0EF2               	movlw	-14
 38976  017C12  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38977  017C18                     l10276:
 38978                           
 38979                           ;stkvar	_a @ sp[(-13)+-8]
 38980  017C18  0EEE               	movlw	238
 38981  017C1A  24E1               	addwf	fsr1l,w,c
 38982  017C1C  6ED9               	movwf	fsr2l,c
 38983  017C1E  0EFF               	movlw	255
 38984  017C20  20E2               	addwfc	fsr1h,w,c
 38985  017C22  6EDA               	movwf	fsr2h,c
 38986  017C24  50DF               	movf	indf2,w,c
 38987  017C26  6E35               	movwf	(btemp+11)^0,c
 38988  017C28  0E80               	movlw	128
 38989  017C2A  1635               	andwf	(btemp+11)^0,f,c
 38990                           
 38991                           ;stkvar	_sign @ sp[(-13)+12]
 38992  017C2C  50E1               	movf	fsr1l,w,c
 38993  017C2E  0FFF               	addlw	-1
 38994  017C30  6ED9               	movwf	fsr2l,c
 38995  017C32  50E2               	movf	fsr1h,w,c
 38996  017C34  6EDA               	movwf	fsr2h,c
 38997  017C36  0EFF               	movlw	255
 38998  017C38  22DA               	addwfc	fsr2h,f,c
 38999  017C3A  5035               	movf	(btemp+11)^0,w,c
 39000  017C3C  1ADF               	xorwf	indf2,f,c
 39001                           
 39002                           ;stkvar	_a @ sp[(-13)+-8]
 39003  017C3E  0EEE               	movlw	238
 39004  017C40  24E1               	addwf	fsr1l,w,c
 39005  017C42  6ED9               	movwf	fsr2l,c
 39006  017C44  0EFF               	movlw	255
 39007  017C46  20E2               	addwfc	fsr1h,w,c
 39008  017C48  6EDA               	movwf	fsr2h,c
 39009  017C4A  50DF               	movf	indf2,w,c
 39010  017C4C  6E35               	movwf	(btemp+11)^0,c
 39011  017C4E  90D8               	bcf	status,0,c
 39012  017C50  3435               	rlcf	(btemp+11)^0,w,c
 39013  017C52  6E34               	movwf	(btemp+10)^0,c
 39014                           
 39015                           ;stkvar	_aexp @ sp[(-13)+10]
 39016  017C54  0EFD               	movlw	-3
 39017  017C56  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39018                           
 39019                           ;stkvar	_a @ sp[(-13)+-8]
 39020  017C5C  0EED               	movlw	237
 39021  017C5E  24E1               	addwf	fsr1l,w,c
 39022  017C60  6ED9               	movwf	fsr2l,c
 39023  017C62  0EFF               	movlw	255
 39024  017C64  20E2               	addwfc	fsr1h,w,c
 39025  017C66  6EDA               	movwf	fsr2h,c
 39026  017C68  AEDF               	btfss	indf2,7,c
 39027  017C6A  D002               	goto	l10284
 39028                           
 39029                           ;stkvar	_aexp @ sp[(-13)+10]
 39030  017C6C  0EFD               	movlw	-3
 39031  017C6E  80E3               	bsf	plusw1,0,c
 39032  017C70                     l10284:
 39033                           
 39034                           ;stkvar	_aexp @ sp[(-13)+10]
 39035  017C70  0EFD               	movlw	-3
 39036  017C72  50E3               	movf	plusw1,w,c
 39037  017C74  B4D8               	btfsc	status,2,c
 39038  017C76  D027               	goto	l10294
 39039                           
 39040                           ;stkvar	_aexp @ sp[(-13)+10]
 39041  017C78  0EFD               	movlw	-3
 39042  017C7A  28E3               	incf	plusw1,w,c
 39043  017C7C  A4D8               	btfss	status,2,c
 39044  017C7E  D018               	goto	l10290
 39045  017C80  0E00               	movlw	0
 39046  017C82  6E32               	movwf	(btemp+8)^0,c
 39047  017C84  0E00               	movlw	0
 39048  017C86  6E33               	movwf	(btemp+9)^0,c
 39049  017C88  0E00               	movlw	0
 39050  017C8A  6E34               	movwf	(btemp+10)^0,c
 39051  017C8C  0E00               	movlw	0
 39052  017C8E  6E35               	movwf	(btemp+11)^0,c
 39053                           
 39054                           ;stkvar	_a @ sp[(-13)+-8]
 39055  017C90  0EEB               	movlw	-21
 39056  017C92  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39057  017C98  0EEC               	movlw	-20
 39058  017C9A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39059  017CA0  0EED               	movlw	-19
 39060  017CA2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39061  017CA8  0EEE               	movlw	-18
 39062  017CAA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39063  017CB0                     l10290:
 39064                           
 39065                           ;stkvar	_a @ sp[(-13)+-8]
 39066  017CB0  0EED               	movlw	-19
 39067  017CB2  8EE3               	bsf	plusw1,7,c
 39068                           
 39069                           ;stkvar	_a @ sp[(-13)+-8]
 39070  017CB4  0EEE               	movlw	238
 39071  017CB6  24E1               	addwf	fsr1l,w,c
 39072  017CB8  6ED9               	movwf	fsr2l,c
 39073  017CBA  0EFF               	movlw	255
 39074  017CBC  20E2               	addwfc	fsr1h,w,c
 39075  017CBE  6EDA               	movwf	fsr2h,c
 39076  017CC0  0E00               	movlw	0
 39077  017CC2  6EDF               	movwf	indf2,c
 39078  017CC4  D018               	goto	l10296
 39079  017CC6                     l10294:
 39080  017CC6  0E00               	movlw	0
 39081  017CC8  6E32               	movwf	(btemp+8)^0,c
 39082  017CCA  0E00               	movlw	0
 39083  017CCC  6E33               	movwf	(btemp+9)^0,c
 39084  017CCE  0E00               	movlw	0
 39085  017CD0  6E34               	movwf	(btemp+10)^0,c
 39086  017CD2  0E00               	movlw	0
 39087  017CD4  6E35               	movwf	(btemp+11)^0,c
 39088                           
 39089                           ;stkvar	_a @ sp[(-13)+-8]
 39090  017CD6  0EEB               	movlw	-21
 39091  017CD8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39092  017CDE  0EEC               	movlw	-20
 39093  017CE0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39094  017CE6  0EED               	movlw	-19
 39095  017CE8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39096  017CEE  0EEE               	movlw	-18
 39097  017CF0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39098  017CF6                     l10296:
 39099                           
 39100                           ;stkvar	_a @ sp[(-13)+-8]
 39101  017CF6  0EEB               	movlw	-21
 39102  017CF8  50E3               	movf	plusw1,w,c
 39103  017CFA  E139               	bnz	l10308
 39104  017CFC  0EEC               	movlw	-20
 39105  017CFE  50E3               	movf	plusw1,w,c
 39106  017D00  E136               	bnz	l10308
 39107  017D02  0EED               	movlw	-19
 39108  017D04  50E3               	movf	plusw1,w,c
 39109  017D06  E133               	bnz	l10308
 39110  017D08  0EEE               	movlw	-18
 39111  017D0A  50E3               	movf	plusw1,w,c
 39112  017D0C  A4D8               	btfss	status,2,c
 39113  017D0E  D02F               	goto	l10308
 39114                           
 39115                           ;stkvar	_b @ sp[(-13)+-4]
 39116  017D10  0EEF               	movlw	-17
 39117  017D12  6AE3               	clrf	plusw1,c
 39118  017D14  0EF0               	movlw	-16
 39119  017D16  6AE3               	clrf	plusw1,c
 39120  017D18  0EF1               	movlw	-15
 39121  017D1A  6AE3               	clrf	plusw1,c
 39122  017D1C  0EF2               	movlw	-14
 39123  017D1E  6AE3               	clrf	plusw1,c
 39124                           
 39125                           ;stkvar	_b @ sp[(-13)+-4]
 39126  017D20  0EF1               	movlw	241
 39127  017D22  24E1               	addwf	fsr1l,w,c
 39128  017D24  6ED9               	movwf	fsr2l,c
 39129  017D26  0EFF               	movlw	255
 39130  017D28  20E2               	addwfc	fsr1h,w,c
 39131  017D2A  6EDA               	movwf	fsr2h,c
 39132  017D2C  0E80               	movlw	128
 39133  017D2E  12DE               	iorwf	postinc2,f,c
 39134  017D30  0E7F               	movlw	127
 39135  017D32  12DD               	iorwf	postdec2,f,c
 39136  017D34                     l10302:
 39137                           
 39138                           ;stkvar	_sign @ sp[(-13)+12]
 39139  017D34  0EFF               	movlw	-1
 39140  017D36  006F FF8C  F035    	movff	plusw1,btemp+11
 39141                           
 39142                           ;stkvar	_b @ sp[(-13)+-4]
 39143  017D3C  0EF2               	movlw	242
 39144  017D3E  24E1               	addwf	fsr1l,w,c
 39145  017D40  6ED9               	movwf	fsr2l,c
 39146  017D42  0EFF               	movlw	255
 39147  017D44  20E2               	addwfc	fsr1h,w,c
 39148  017D46  6EDA               	movwf	fsr2h,c
 39149  017D48  5035               	movf	(btemp+11)^0,w,c
 39150  017D4A  12DF               	iorwf	indf2,f,c
 39151                           
 39152                           ;stkvar	_b @ sp[(-13)+-4]
 39153  017D4C  0EEF               	movlw	-17
 39154  017D4E  006F FF8C  F02A    	movff	plusw1,btemp
 39155  017D54  0EF0               	movlw	-16
 39156  017D56  006F FF8C  F02B    	movff	plusw1,btemp+1
 39157  017D5C  0EF1               	movlw	-15
 39158  017D5E  006F FF8C  F02C    	movff	plusw1,btemp+2
 39159  017D64  0EF2               	movlw	-14
 39160  017D66  006F FF8C  F02D    	movff	plusw1,btemp+3
 39161  017D6C  D19F               	goto	l3304
 39162  017D6E                     l10308:
 39163                           
 39164                           ;stkvar	_bexp @ sp[(-13)+11]
 39165  017D6E  0EFE               	movlw	-2
 39166  017D70  50E3               	movf	plusw1,w,c
 39167  017D72  A4D8               	btfss	status,2,c
 39168  017D74  D009               	goto	l10316
 39169  017D76  0E00               	movlw	0
 39170  017D78  6E2A               	movwf	btemp^0,c
 39171  017D7A  0E00               	movlw	0
 39172  017D7C  6E2B               	movwf	(btemp+1)^0,c
 39173  017D7E  0E00               	movlw	0
 39174  017D80  6E2C               	movwf	(btemp+2)^0,c
 39175  017D82  0E00               	movlw	0
 39176  017D84  6E2D               	movwf	(btemp+3)^0,c
 39177  017D86  D192               	goto	l3304
 39178  017D88                     l10316:
 39179                           
 39180                           ;stkvar	_bexp @ sp[(-13)+11]
 39181  017D88  0EFE               	movlw	-2
 39182  017D8A  50E3               	movf	plusw1,w,c
 39183  017D8C  6E34               	movwf	(btemp+10)^0,c
 39184  017D8E  6A35               	clrf	(btemp+11)^0,c
 39185                           
 39186                           ;stkvar	_aexp @ sp[(-13)+10]
 39187  017D90  0EFD               	movlw	-3
 39188  017D92  50E3               	movf	plusw1,w,c
 39189  017D94  5E34               	subwf	(btemp+10)^0,f,c
 39190  017D96  0E00               	movlw	0
 39191  017D98  5A35               	subwfb	(btemp+11)^0,f,c
 39192  017D9A  0E7F               	movlw	127
 39193  017D9C  2634               	addwf	(btemp+10)^0,f,c
 39194  017D9E  0E00               	movlw	0
 39195  017DA0  2235               	addwfc	(btemp+11)^0,f,c
 39196                           
 39197                           ;stkvar	_new_exp @ sp[(-13)+8]
 39198  017DA2  0EFB               	movlw	-5
 39199  017DA4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39200  017DAA  0EFC               	movlw	-4
 39201  017DAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39202                           
 39203                           ;stkvar	_b @ sp[(-13)+-4]
 39204  017DB2  0EEF               	movlw	-17
 39205  017DB4  006F FF8C  F032    	movff	plusw1,btemp+8
 39206  017DBA  0EF0               	movlw	-16
 39207  017DBC  006F FF8C  F033    	movff	plusw1,btemp+9
 39208  017DC2  0EF1               	movlw	-15
 39209  017DC4  006F FF8C  F034    	movff	plusw1,btemp+10
 39210  017DCA  0EF2               	movlw	-14
 39211  017DCC  006F FF8C  F035    	movff	plusw1,btemp+11
 39212                           
 39213                           ;stkvar	_rem @ sp[(-13)+4]
 39214  017DD2  0EF7               	movlw	-9
 39215  017DD4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39216  017DDA  0EF8               	movlw	-8
 39217  017DDC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39218  017DE2  0EF9               	movlw	-7
 39219  017DE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39220  017DEA  0EFA               	movlw	-6
 39221  017DEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39222                           
 39223                           ;stkvar	_b @ sp[(-13)+-4]
 39224  017DF2  0EEF               	movlw	-17
 39225  017DF4  6AE3               	clrf	plusw1,c
 39226  017DF6  0EF0               	movlw	-16
 39227  017DF8  6AE3               	clrf	plusw1,c
 39228  017DFA  0EF1               	movlw	-15
 39229  017DFC  6AE3               	clrf	plusw1,c
 39230  017DFE  0EF2               	movlw	-14
 39231  017E00  6AE3               	clrf	plusw1,c
 39232                           
 39233                           ;stkvar	_grs @ sp[(-13)+0]
 39234  017E02  0EF3               	movlw	-13
 39235  017E04  6AE3               	clrf	plusw1,c
 39236  017E06  0EF4               	movlw	-12
 39237  017E08  6AE3               	clrf	plusw1,c
 39238  017E0A  0EF5               	movlw	-11
 39239  017E0C  6AE3               	clrf	plusw1,c
 39240  017E0E  0EF6               	movlw	-10
 39241  017E10  6AE3               	clrf	plusw1,c
 39242                           
 39243                           ;stkvar	_aexp @ sp[(-13)+10]
 39244  017E12  0EFD               	movlw	-3
 39245  017E14  6AE3               	clrf	plusw1,c
 39246  017E16  D050               	goto	l10344
 39247  017E18                     l10326:
 39248                           
 39249                           ;stkvar	_aexp @ sp[(-13)+10]
 39250  017E18  0EFD               	movlw	-3
 39251  017E1A  50E3               	movf	plusw1,w,c
 39252  017E1C  B4D8               	btfsc	status,2,c
 39253  017E1E  D020               	goto	l10336
 39254                           
 39255                           ;stkvar	_rem @ sp[(-13)+4]
 39256  017E20  90D8               	bcf	status,0,c
 39257  017E22  0EF7               	movlw	-9
 39258  017E24  36E3               	rlcf	plusw1,f,c
 39259  017E26  0EF8               	movlw	-8
 39260  017E28  36E3               	rlcf	plusw1,f,c
 39261  017E2A  0EF9               	movlw	-7
 39262  017E2C  36E3               	rlcf	plusw1,f,c
 39263  017E2E  0EFA               	movlw	-6
 39264  017E30  36E3               	rlcf	plusw1,f,c
 39265                           
 39266                           ;stkvar	_b @ sp[(-13)+-4]
 39267  017E32  90D8               	bcf	status,0,c
 39268  017E34  0EEF               	movlw	-17
 39269  017E36  36E3               	rlcf	plusw1,f,c
 39270  017E38  0EF0               	movlw	-16
 39271  017E3A  36E3               	rlcf	plusw1,f,c
 39272  017E3C  0EF1               	movlw	-15
 39273  017E3E  36E3               	rlcf	plusw1,f,c
 39274  017E40  0EF2               	movlw	-14
 39275  017E42  36E3               	rlcf	plusw1,f,c
 39276                           
 39277                           ;stkvar	_grs @ sp[(-13)+0]
 39278  017E44  0EF6               	movlw	-10
 39279  017E46  AEE3               	btfss	plusw1,7,c
 39280  017E48  D002               	goto	l10334
 39281                           
 39282                           ;stkvar	_b @ sp[(-13)+-4]
 39283  017E4A  0EEF               	movlw	-17
 39284  017E4C  80E3               	bsf	plusw1,0,c
 39285  017E4E                     l10334:
 39286                           
 39287                           ;stkvar	_grs @ sp[(-13)+0]
 39288  017E4E  90D8               	bcf	status,0,c
 39289  017E50  0EF3               	movlw	-13
 39290  017E52  36E3               	rlcf	plusw1,f,c
 39291  017E54  0EF4               	movlw	-12
 39292  017E56  36E3               	rlcf	plusw1,f,c
 39293  017E58  0EF5               	movlw	-11
 39294  017E5A  36E3               	rlcf	plusw1,f,c
 39295  017E5C  0EF6               	movlw	-10
 39296  017E5E  36E3               	rlcf	plusw1,f,c
 39297  017E60                     l10336:
 39298                           
 39299                           ;stkvar	_a @ sp[(-13)+-8]
 39300                           ;stkvar	_rem @ sp[(-13)+4]
 39301  017E60  50E1               	movf	fsr1l,w,c
 39302  017E62  0FF7               	addlw	-9
 39303  017E64  6ED9               	movwf	fsr2l,c
 39304  017E66  50E2               	movf	fsr1h,w,c
 39305  017E68  6EDA               	movwf	fsr2h,c
 39306  017E6A  0EFF               	movlw	255
 39307  017E6C  22DA               	addwfc	fsr2h,f,c
 39308  017E6E  0EEB               	movlw	-21
 39309  017E70  50E3               	movf	plusw1,w,c
 39310  017E72  5CDE               	subwf	postinc2,w,c
 39311  017E74  0EEC               	movlw	-20
 39312  017E76  50E3               	movf	plusw1,w,c
 39313  017E78  58DE               	subwfb	postinc2,w,c
 39314  017E7A  0EED               	movlw	-19
 39315  017E7C  50E3               	movf	plusw1,w,c
 39316  017E7E  58DE               	subwfb	postinc2,w,c
 39317  017E80  0EEE               	movlw	-18
 39318  017E82  50E3               	movf	plusw1,w,c
 39319  017E84  58DE               	subwfb	postinc2,w,c
 39320  017E86  A0D8               	btfss	status,0,c
 39321  017E88  D015               	goto	l10342
 39322                           
 39323                           ;stkvar	_grs @ sp[(-13)+0]
 39324  017E8A  0EF6               	movlw	-10
 39325  017E8C  8CE3               	bsf	plusw1,6,c
 39326                           
 39327                           ;stkvar	_a @ sp[(-13)+-8]
 39328                           ;stkvar	_rem @ sp[(-13)+4]
 39329  017E8E  50E1               	movf	fsr1l,w,c
 39330  017E90  0FF7               	addlw	-9
 39331  017E92  6ED9               	movwf	fsr2l,c
 39332  017E94  50E2               	movf	fsr1h,w,c
 39333  017E96  6EDA               	movwf	fsr2h,c
 39334  017E98  0EFF               	movlw	255
 39335  017E9A  22DA               	addwfc	fsr2h,f,c
 39336  017E9C  0EEB               	movlw	-21
 39337  017E9E  50E3               	movf	plusw1,w,c
 39338  017EA0  5EDE               	subwf	postinc2,f,c
 39339  017EA2  0EEC               	movlw	-20
 39340  017EA4  50E3               	movf	plusw1,w,c
 39341  017EA6  5ADE               	subwfb	postinc2,f,c
 39342  017EA8  0EED               	movlw	-19
 39343  017EAA  50E3               	movf	plusw1,w,c
 39344  017EAC  5ADE               	subwfb	postinc2,f,c
 39345  017EAE  0EEE               	movlw	-18
 39346  017EB0  50E3               	movf	plusw1,w,c
 39347  017EB2  5ADE               	subwfb	postinc2,f,c
 39348  017EB4                     l10342:
 39349                           
 39350                           ;stkvar	_aexp @ sp[(-13)+10]
 39351  017EB4  0EFD               	movlw	-3
 39352  017EB6  2AE3               	incf	plusw1,f,c
 39353  017EB8                     l10344:
 39354                           
 39355                           ;stkvar	_aexp @ sp[(-13)+10]
 39356  017EB8  0EFD               	movlw	-3
 39357  017EBA  006F FF8C  F02A    	movff	plusw1,btemp
 39358  017EC0  0E19               	movlw	25
 39359  017EC2  642A               	cpfsgt	btemp^0,c
 39360  017EC4  D7A9               	goto	l10326
 39361                           
 39362                           ;stkvar	_rem @ sp[(-13)+4]
 39363  017EC6  0EF7               	movlw	-9
 39364  017EC8  50E3               	movf	plusw1,w,c
 39365  017ECA  E10A               	bnz	u8420
 39366  017ECC  0EF8               	movlw	-8
 39367  017ECE  50E3               	movf	plusw1,w,c
 39368  017ED0  E107               	bnz	u8420
 39369  017ED2  0EF9               	movlw	-7
 39370  017ED4  50E3               	movf	plusw1,w,c
 39371  017ED6  E104               	bnz	u8420
 39372  017ED8  0EFA               	movlw	-6
 39373  017EDA  50E3               	movf	plusw1,w,c
 39374  017EDC  B4D8               	btfsc	status,2,c
 39375  017EDE  D024               	goto	l10360
 39376  017EE0                     u8420:
 39377                           
 39378                           ;stkvar	_grs @ sp[(-13)+0]
 39379  017EE0  0EF3               	movlw	-13
 39380  017EE2  80E3               	bsf	plusw1,0,c
 39381  017EE4  D021               	goto	l10360
 39382  017EE6                     l10350:
 39383                           
 39384                           ;stkvar	_b @ sp[(-13)+-4]
 39385  017EE6  90D8               	bcf	status,0,c
 39386  017EE8  0EEF               	movlw	-17
 39387  017EEA  36E3               	rlcf	plusw1,f,c
 39388  017EEC  0EF0               	movlw	-16
 39389  017EEE  36E3               	rlcf	plusw1,f,c
 39390  017EF0  0EF1               	movlw	-15
 39391  017EF2  36E3               	rlcf	plusw1,f,c
 39392  017EF4  0EF2               	movlw	-14
 39393  017EF6  36E3               	rlcf	plusw1,f,c
 39394                           
 39395                           ;stkvar	_grs @ sp[(-13)+0]
 39396  017EF8  0EF6               	movlw	-10
 39397  017EFA  AEE3               	btfss	plusw1,7,c
 39398  017EFC  D002               	goto	l10356
 39399                           
 39400                           ;stkvar	_b @ sp[(-13)+-4]
 39401  017EFE  0EEF               	movlw	-17
 39402  017F00  80E3               	bsf	plusw1,0,c
 39403  017F02                     l10356:
 39404                           
 39405                           ;stkvar	_grs @ sp[(-13)+0]
 39406  017F02  90D8               	bcf	status,0,c
 39407  017F04  0EF3               	movlw	-13
 39408  017F06  36E3               	rlcf	plusw1,f,c
 39409  017F08  0EF4               	movlw	-12
 39410  017F0A  36E3               	rlcf	plusw1,f,c
 39411  017F0C  0EF5               	movlw	-11
 39412  017F0E  36E3               	rlcf	plusw1,f,c
 39413  017F10  0EF6               	movlw	-10
 39414  017F12  36E3               	rlcf	plusw1,f,c
 39415                           
 39416                           ;stkvar	_new_exp @ sp[(-13)+8]
 39417  017F14  50E1               	movf	fsr1l,w,c
 39418  017F16  0FFB               	addlw	-5
 39419  017F18  6ED9               	movwf	fsr2l,c
 39420  017F1A  50E2               	movf	fsr1h,w,c
 39421  017F1C  6EDA               	movwf	fsr2h,c
 39422  017F1E  0EFF               	movlw	255
 39423  017F20  22DA               	addwfc	fsr2h,f,c
 39424  017F22  06DE               	decf	postinc2,f,c
 39425  017F24  0E00               	movlw	0
 39426  017F26  5ADD               	subwfb	postdec2,f,c
 39427  017F28                     l10360:
 39428                           
 39429                           ;stkvar	_b @ sp[(-13)+-4]
 39430  017F28  0EF1               	movlw	-15
 39431  017F2A  AEE3               	btfss	plusw1,7,c
 39432  017F2C  D7DC               	goto	l10350
 39433                           
 39434                           ;stkvar	_aexp @ sp[(-13)+10]
 39435  017F2E  0EFD               	movlw	-3
 39436  017F30  6AE3               	clrf	plusw1,c
 39437                           
 39438                           ;stkvar	_grs @ sp[(-13)+0]
 39439  017F32  0EF6               	movlw	-10
 39440  017F34  AEE3               	btfss	plusw1,7,c
 39441  017F36  D020               	goto	l10374
 39442                           
 39443                           ;stkvar	_grs @ sp[(-13)+0]
 39444  017F38  50E1               	movf	fsr1l,w,c
 39445  017F3A  0FF3               	addlw	-13
 39446  017F3C  6ED9               	movwf	fsr2l,c
 39447  017F3E  50E2               	movf	fsr1h,w,c
 39448  017F40  6EDA               	movwf	fsr2h,c
 39449  017F42  0EFF               	movlw	255
 39450  017F44  22DA               	addwfc	fsr2h,f,c
 39451  017F46  0EFF               	movlw	255
 39452  017F48  14DE               	andwf	postinc2,w,c
 39453  017F4A  6E32               	movwf	(btemp+8)^0,c
 39454  017F4C  0EFF               	movlw	255
 39455  017F4E  14DE               	andwf	postinc2,w,c
 39456  017F50  6E33               	movwf	(btemp+9)^0,c
 39457  017F52  0EFF               	movlw	255
 39458  017F54  14DE               	andwf	postinc2,w,c
 39459  017F56  6E34               	movwf	(btemp+10)^0,c
 39460  017F58  0E7F               	movlw	127
 39461  017F5A  14DE               	andwf	postinc2,w,c
 39462  017F5C  6E35               	movwf	(btemp+11)^0,c
 39463  017F5E  5032               	movf	(btemp+8)^0,w,c
 39464  017F60  1033               	iorwf	(btemp+9)^0,w,c
 39465  017F62  1034               	iorwf	(btemp+10)^0,w,c
 39466  017F64  1035               	iorwf	(btemp+11)^0,w,c
 39467  017F66  B4D8               	btfsc	status,2,c
 39468  017F68  D004               	goto	l10370
 39469  017F6A                     u8460:
 39470                           
 39471                           ;stkvar	_aexp @ sp[(-13)+10]
 39472  017F6A  0EFD               	movlw	-3
 39473  017F6C  6AE3               	clrf	plusw1,c
 39474  017F6E  2AE3               	incf	plusw1,f,c
 39475  017F70  D003               	goto	l10374
 39476  017F72                     l10370:
 39477                           
 39478                           ;stkvar	_b @ sp[(-13)+-4]
 39479  017F72  0EEF               	movlw	-17
 39480  017F74  B0E3               	btfsc	plusw1,0,c
 39481  017F76  D7F9               	goto	u8460
 39482  017F78                     l10374:
 39483                           
 39484                           ;stkvar	_aexp @ sp[(-13)+10]
 39485  017F78  0EFD               	movlw	-3
 39486  017F7A  50E3               	movf	plusw1,w,c
 39487  017F7C  B4D8               	btfsc	status,2,c
 39488  017F7E  D036               	goto	l10384
 39489                           
 39490                           ;stkvar	_b @ sp[(-13)+-4]
 39491  017F80  50E1               	movf	fsr1l,w,c
 39492  017F82  0FEF               	addlw	-17
 39493  017F84  6ED9               	movwf	fsr2l,c
 39494  017F86  50E2               	movf	fsr1h,w,c
 39495  017F88  6EDA               	movwf	fsr2h,c
 39496  017F8A  0EFF               	movlw	255
 39497  017F8C  22DA               	addwfc	fsr2h,f,c
 39498  017F8E  2ADE               	incf	postinc2,f,c
 39499  017F90  0E00               	movlw	0
 39500  017F92  22DE               	addwfc	postinc2,f,c
 39501  017F94  22DE               	addwfc	postinc2,f,c
 39502  017F96  22DE               	addwfc	postinc2,f,c
 39503                           
 39504                           ;stkvar	_b @ sp[(-13)+-4]
 39505  017F98  0EF2               	movlw	-14
 39506  017F9A  A0E3               	btfss	plusw1,0,c
 39507  017F9C  D027               	goto	l10384
 39508  017F9E  0E01               	movlw	1
 39509  017FA0  6E35               	movwf	(btemp+11)^0,c
 39510                           
 39511                           ;stkvar	_b @ sp[(-13)+-4]
 39512  017FA2  50E1               	movf	fsr1l,w,c
 39513  017FA4  0FEF               	addlw	-17
 39514  017FA6  6ED9               	movwf	fsr2l,c
 39515  017FA8  50E2               	movf	fsr1h,w,c
 39516  017FAA  6EDA               	movwf	fsr2h,c
 39517  017FAC  0EFF               	movlw	255
 39518  017FAE  22DA               	addwfc	fsr2h,f,c
 39519  017FB0  2835               	incf	(btemp+11)^0,w,c
 39520  017FB2  52DE               	movf	postinc2,f,c
 39521  017FB4  D008               	goto	u8500
 39522  017FB6                     u8505:
 39523  017FB6  52DE               	movf	postinc2,f,c
 39524  017FB8  90D8               	bcf	status,0,c
 39525  017FBA  BEDC               	btfsc	preinc2,7,c
 39526  017FBC  80D8               	bsf	status,0,c
 39527  017FBE  32DD               	rrcf	postdec2,f,c
 39528  017FC0  32DD               	rrcf	postdec2,f,c
 39529  017FC2  32DD               	rrcf	postdec2,f,c
 39530  017FC4  32DE               	rrcf	postinc2,f,c
 39531  017FC6                     u8500:
 39532  017FC6  2EE8               	decfsz	wreg,f,c
 39533  017FC8  D7F6               	goto	u8505
 39534                           
 39535                           ;stkvar	_new_exp @ sp[(-13)+8]
 39536  017FCA  0EFB               	movlw	-5
 39537  017FCC  50E3               	movf	plusw1,w,c
 39538  017FCE  0F01               	addlw	1
 39539  017FD0  6E2A               	movwf	btemp^0,c
 39540  017FD2  0EFB               	movlw	-5
 39541  017FD4  0060  F0AB  FFE3   	movff	btemp,plusw1
 39542  017FDA  6A2A               	clrf	btemp^0,c
 39543  017FDC  0EFC               	movlw	-4
 39544  017FDE  50E3               	movf	plusw1,w,c
 39545  017FE0  202A               	addwfc	btemp^0,w,c
 39546  017FE2  6E2A               	movwf	btemp^0,c
 39547  017FE4  0EFC               	movlw	-4
 39548  017FE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 39549  017FEC                     l10384:
 39550                           
 39551                           ;stkvar	_new_exp @ sp[(-13)+8]
 39552  017FEC  0EFC               	movlw	-4
 39553  017FEE  BEE3               	btfsc	plusw1,7,c
 39554  017FF0  D01B               	goto	l10390
 39555  017FF2  0EFC               	movlw	-4
 39556  017FF4  50E3               	movf	plusw1,w,c
 39557  017FF6  E104               	bnz	u8510
 39558  017FF8  0EFB               	movlw	-5
 39559  017FFA  28E3               	incf	plusw1,w,c
 39560  017FFC  A0D8               	btfss	status,0,c
 39561  017FFE  D014               	goto	l10390
 39562  018000                     u8510:
 39563  018000  0EFF               	movlw	255
 39564  018002  6E34               	movwf	(btemp+10)^0,c
 39565  018004  0E00               	movlw	0
 39566  018006  6E35               	movwf	(btemp+11)^0,c
 39567                           
 39568                           ;stkvar	_new_exp @ sp[(-13)+8]
 39569  018008  0EFB               	movlw	-5
 39570  01800A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39571  018010  0EFC               	movlw	-4
 39572  018012  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39573                           
 39574                           ;stkvar	_b @ sp[(-13)+-4]
 39575  018018  0EEF               	movlw	-17
 39576  01801A  6AE3               	clrf	plusw1,c
 39577  01801C  0EF0               	movlw	-16
 39578  01801E  6AE3               	clrf	plusw1,c
 39579  018020  0EF1               	movlw	-15
 39580  018022  6AE3               	clrf	plusw1,c
 39581  018024  0EF2               	movlw	-14
 39582  018026  6AE3               	clrf	plusw1,c
 39583  018028                     l10390:
 39584                           
 39585                           ;stkvar	_new_exp @ sp[(-13)+8]
 39586  018028  0EFC               	movlw	-4
 39587  01802A  BEE3               	btfsc	plusw1,7,c
 39588  01802C  D007               	goto	u8520
 39589  01802E  0EFC               	movlw	-4
 39590  018030  50E3               	movf	plusw1,w,c
 39591  018032  E112               	bnz	l10396
 39592  018034  0EFB               	movlw	-5
 39593  018036  04E3               	decf	plusw1,w,c
 39594  018038  B0D8               	btfsc	status,0,c
 39595  01803A  D00E               	goto	l10396
 39596  01803C                     u8520:
 39597                           
 39598                           ;stkvar	_new_exp @ sp[(-13)+8]
 39599  01803C  0EFB               	movlw	-5
 39600  01803E  6AE3               	clrf	plusw1,c
 39601  018040  0EFC               	movlw	-4
 39602  018042  6AE3               	clrf	plusw1,c
 39603                           
 39604                           ;stkvar	_b @ sp[(-13)+-4]
 39605  018044  0EEF               	movlw	-17
 39606  018046  6AE3               	clrf	plusw1,c
 39607  018048  0EF0               	movlw	-16
 39608  01804A  6AE3               	clrf	plusw1,c
 39609  01804C  0EF1               	movlw	-15
 39610  01804E  6AE3               	clrf	plusw1,c
 39611  018050  0EF2               	movlw	-14
 39612  018052  6AE3               	clrf	plusw1,c
 39613                           
 39614                           ;stkvar	_sign @ sp[(-13)+12]
 39615  018054  0EFF               	movlw	-1
 39616  018056  6AE3               	clrf	plusw1,c
 39617  018058                     l10396:
 39618                           
 39619                           ;stkvar	_new_exp @ sp[(-13)+8]
 39620                           ;stkvar	_bexp @ sp[(-13)+11]
 39621  018058  0EFB               	movlw	-5
 39622  01805A  006F FF8C  F02A    	movff	plusw1,btemp
 39623  018060  0EFE               	movlw	-2
 39624  018062  0060  F0AB  FFE3   	movff	btemp,plusw1
 39625                           
 39626                           ;stkvar	_bexp @ sp[(-13)+11]
 39627  018068  0EFE               	movlw	-2
 39628  01806A  A0E3               	btfss	plusw1,0,c
 39629  01806C  D009               	goto	l10402
 39630                           
 39631                           ;stkvar	_b @ sp[(-13)+-4]
 39632  01806E  0EF1               	movlw	241
 39633  018070  24E1               	addwf	fsr1l,w,c
 39634  018072  6ED9               	movwf	fsr2l,c
 39635  018074  0EFF               	movlw	255
 39636  018076  20E2               	addwfc	fsr1h,w,c
 39637  018078  6EDA               	movwf	fsr2h,c
 39638  01807A  0E00               	movlw	0
 39639  01807C  8EDB               	bsf	plusw2,7,c
 39640  01807E  D008               	goto	l10404
 39641  018080                     l10402:
 39642                           
 39643                           ;stkvar	_b @ sp[(-13)+-4]
 39644  018080  0EF1               	movlw	241
 39645  018082  24E1               	addwf	fsr1l,w,c
 39646  018084  6ED9               	movwf	fsr2l,c
 39647  018086  0EFF               	movlw	255
 39648  018088  20E2               	addwfc	fsr1h,w,c
 39649  01808A  6EDA               	movwf	fsr2h,c
 39650  01808C  0E7F               	movlw	127
 39651  01808E  16DF               	andwf	indf2,f,c
 39652  018090                     l10404:
 39653                           
 39654                           ;stkvar	_b @ sp[(-13)+-4]
 39655  018090  0EF2               	movlw	242
 39656  018092  24E1               	addwf	fsr1l,w,c
 39657  018094  6ED9               	movwf	fsr2l,c
 39658  018096  0EFF               	movlw	255
 39659  018098  20E2               	addwfc	fsr1h,w,c
 39660  01809A  6EDA               	movwf	fsr2h,c
 39661                           
 39662                           ;stkvar	_bexp @ sp[(-13)+11]
 39663  01809C  0EFE               	movlw	-2
 39664  01809E  006F FF8C  F035    	movff	plusw1,btemp+11
 39665  0180A4  90D8               	bcf	status,0,c
 39666  0180A6  3035               	rrcf	(btemp+11)^0,w,c
 39667  0180A8  6EDF               	movwf	indf2,c
 39668  0180AA  D644               	goto	l10302
 39669  0180AC                     l3304:
 39670                           
 39671                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 39672  0180AC  0EEB               	movlw	235
 39673  0180AE  26E1               	addwf	fsr1l,f,c
 39674  0180B0  0EFF               	movlw	255
 39675  0180B2  22E2               	addwfc	fsr1h,f,c
 39676  0180B4  0012               	return		;funcret
 39677  0180B6                     __end_of___fldiv:
 39678                           	opt callstack 0
 39679                           
 39680 ;; *************** function ___flge *****************
 39681 ;; Defined at:
 39682 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 39683 ;; Parameters:    Size  Location     Type
 39684 ;;  ff1             4  [STACK] unsigned char 
 39685 ;;  ff2             4  [STACK] unsigned char 
 39686 ;; Auto vars:     Size  Location     Type
 39687 ;;		None
 39688 ;; Return value:  Size  Location     Type
 39689 ;;		None               void
 39690 ;; Registers used:
 39691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 39692 ;; Tracked objects:
 39693 ;;		On entry : 0/1
 39694 ;;		On exit  : 0/0
 39695 ;;		Unchanged: 0/0
 39696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39701 ;;Total ram usage:        0 bytes
 39702 ;; Hardware stack levels used:    1
 39703 ;; Hardware stack levels required when called:   15
 39704 ;; This function calls:
 39705 ;;		Nothing
 39706 ;; This function is called by:
 39707 ;;		_main
 39708 ;;		_convert_dac_raw
 39709 ;;		_calc_ror_data
 39710 ;;		_check_day_time
 39711 ;;		_calc_bsoc
 39712 ;;		_efgtoa
 39713 ;; This function uses a reentrant model
 39714 ;;
 39715                           
 39716                           	psect	text147
 39717  01E612                     __ptext147:
 39718                           	opt callstack 0
 39719  01E612                     ___flge:
 39720                           	opt callstack 0
 39721                           
 39722                           ;stkvar	_ff1 @ sp[(0)+-4]
 39723                           
 39724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39725                           ;incstack = 0
 39726 ;; hardware stack exceeded
 39727  01E612  50E1               	movf	fsr1l,w,c
 39728  01E614  0FFC               	addlw	-4
 39729  01E616  6ED9               	movwf	fsr2l,c
 39730  01E618  50E2               	movf	fsr1h,w,c
 39731  01E61A  6EDA               	movwf	fsr2h,c
 39732  01E61C  0EFF               	movlw	255
 39733  01E61E  22DA               	addwfc	fsr2h,f,c
 39734  01E620  0E00               	movlw	0
 39735  01E622  14DE               	andwf	postinc2,w,c
 39736  01E624  6E32               	movwf	(btemp+8)^0,c
 39737  01E626  0E00               	movlw	0
 39738  01E628  14DE               	andwf	postinc2,w,c
 39739  01E62A  6E33               	movwf	(btemp+9)^0,c
 39740  01E62C  0E80               	movlw	128
 39741  01E62E  14DE               	andwf	postinc2,w,c
 39742  01E630  6E34               	movwf	(btemp+10)^0,c
 39743  01E632  0E7F               	movlw	127
 39744  01E634  14DE               	andwf	postinc2,w,c
 39745  01E636  6E35               	movwf	(btemp+11)^0,c
 39746  01E638  5032               	movf	(btemp+8)^0,w,c
 39747  01E63A  1033               	iorwf	(btemp+9)^0,w,c
 39748  01E63C  1034               	iorwf	(btemp+10)^0,w,c
 39749  01E63E  1035               	iorwf	(btemp+11)^0,w,c
 39750  01E640  A4D8               	btfss	status,2,c
 39751  01E642  D008               	goto	l10678
 39752                           
 39753                           ;stkvar	_ff1 @ sp[(0)+-4]
 39754  01E644  0EFC               	movlw	-4
 39755  01E646  6AE3               	clrf	plusw1,c
 39756  01E648  0EFD               	movlw	-3
 39757  01E64A  6AE3               	clrf	plusw1,c
 39758  01E64C  0EFE               	movlw	-2
 39759  01E64E  6AE3               	clrf	plusw1,c
 39760  01E650  0EFF               	movlw	-1
 39761  01E652  6AE3               	clrf	plusw1,c
 39762  01E654                     l10678:
 39763                           
 39764                           ;stkvar	_ff2 @ sp[(0)+-8]
 39765  01E654  50E1               	movf	fsr1l,w,c
 39766  01E656  0FF8               	addlw	-8
 39767  01E658  6ED9               	movwf	fsr2l,c
 39768  01E65A  50E2               	movf	fsr1h,w,c
 39769  01E65C  6EDA               	movwf	fsr2h,c
 39770  01E65E  0EFF               	movlw	255
 39771  01E660  22DA               	addwfc	fsr2h,f,c
 39772  01E662  0E00               	movlw	0
 39773  01E664  14DE               	andwf	postinc2,w,c
 39774  01E666  6E32               	movwf	(btemp+8)^0,c
 39775  01E668  0E00               	movlw	0
 39776  01E66A  14DE               	andwf	postinc2,w,c
 39777  01E66C  6E33               	movwf	(btemp+9)^0,c
 39778  01E66E  0E80               	movlw	128
 39779  01E670  14DE               	andwf	postinc2,w,c
 39780  01E672  6E34               	movwf	(btemp+10)^0,c
 39781  01E674  0E7F               	movlw	127
 39782  01E676  14DE               	andwf	postinc2,w,c
 39783  01E678  6E35               	movwf	(btemp+11)^0,c
 39784  01E67A  5032               	movf	(btemp+8)^0,w,c
 39785  01E67C  1033               	iorwf	(btemp+9)^0,w,c
 39786  01E67E  1034               	iorwf	(btemp+10)^0,w,c
 39787  01E680  1035               	iorwf	(btemp+11)^0,w,c
 39788  01E682  A4D8               	btfss	status,2,c
 39789  01E684  D008               	goto	l2985
 39790                           
 39791                           ;stkvar	_ff2 @ sp[(0)+-8]
 39792  01E686  0EF8               	movlw	-8
 39793  01E688  6AE3               	clrf	plusw1,c
 39794  01E68A  0EF9               	movlw	-7
 39795  01E68C  6AE3               	clrf	plusw1,c
 39796  01E68E  0EFA               	movlw	-6
 39797  01E690  6AE3               	clrf	plusw1,c
 39798  01E692  0EFB               	movlw	-5
 39799  01E694  6AE3               	clrf	plusw1,c
 39800  01E696                     l2985:
 39801                           
 39802                           ;stkvar	_ff1 @ sp[(0)+-4]
 39803  01E696  0EFF               	movlw	-1
 39804  01E698  AEE3               	btfss	plusw1,7,c
 39805  01E69A  D024               	goto	l10684
 39806                           
 39807                           ;stkvar	_ff1 @ sp[(0)+-4]
 39808  01E69C  0E00               	movlw	0
 39809  01E69E  6E32               	movwf	(btemp+8)^0,c
 39810  01E6A0  0E00               	movlw	0
 39811  01E6A2  6E33               	movwf	(btemp+9)^0,c
 39812  01E6A4  0E00               	movlw	0
 39813  01E6A6  6E34               	movwf	(btemp+10)^0,c
 39814  01E6A8  0E80               	movlw	128
 39815  01E6AA  6E35               	movwf	(btemp+11)^0,c
 39816  01E6AC  0EFC               	movlw	-4
 39817  01E6AE  50E3               	movf	plusw1,w,c
 39818  01E6B0  5E32               	subwf	(btemp+8)^0,f,c
 39819  01E6B2  0EFD               	movlw	-3
 39820  01E6B4  50E3               	movf	plusw1,w,c
 39821  01E6B6  5A33               	subwfb	(btemp+9)^0,f,c
 39822  01E6B8  0EFE               	movlw	-2
 39823  01E6BA  50E3               	movf	plusw1,w,c
 39824  01E6BC  5A34               	subwfb	(btemp+10)^0,f,c
 39825  01E6BE  0EFF               	movlw	-1
 39826  01E6C0  50E3               	movf	plusw1,w,c
 39827  01E6C2  5A35               	subwfb	(btemp+11)^0,f,c
 39828                           
 39829                           ;stkvar	_ff1 @ sp[(0)+-4]
 39830  01E6C4  0EFC               	movlw	-4
 39831  01E6C6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39832  01E6CC  0EFD               	movlw	-3
 39833  01E6CE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39834  01E6D4  0EFE               	movlw	-2
 39835  01E6D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39836  01E6DC  0EFF               	movlw	-1
 39837  01E6DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39838  01E6E4                     l10684:
 39839                           
 39840                           ;stkvar	_ff2 @ sp[(0)+-8]
 39841  01E6E4  0EFB               	movlw	-5
 39842  01E6E6  AEE3               	btfss	plusw1,7,c
 39843  01E6E8  D024               	goto	l10688
 39844                           
 39845                           ;stkvar	_ff2 @ sp[(0)+-8]
 39846  01E6EA  0E00               	movlw	0
 39847  01E6EC  6E32               	movwf	(btemp+8)^0,c
 39848  01E6EE  0E00               	movlw	0
 39849  01E6F0  6E33               	movwf	(btemp+9)^0,c
 39850  01E6F2  0E00               	movlw	0
 39851  01E6F4  6E34               	movwf	(btemp+10)^0,c
 39852  01E6F6  0E80               	movlw	128
 39853  01E6F8  6E35               	movwf	(btemp+11)^0,c
 39854  01E6FA  0EF8               	movlw	-8
 39855  01E6FC  50E3               	movf	plusw1,w,c
 39856  01E6FE  5E32               	subwf	(btemp+8)^0,f,c
 39857  01E700  0EF9               	movlw	-7
 39858  01E702  50E3               	movf	plusw1,w,c
 39859  01E704  5A33               	subwfb	(btemp+9)^0,f,c
 39860  01E706  0EFA               	movlw	-6
 39861  01E708  50E3               	movf	plusw1,w,c
 39862  01E70A  5A34               	subwfb	(btemp+10)^0,f,c
 39863  01E70C  0EFB               	movlw	-5
 39864  01E70E  50E3               	movf	plusw1,w,c
 39865  01E710  5A35               	subwfb	(btemp+11)^0,f,c
 39866                           
 39867                           ;stkvar	_ff2 @ sp[(0)+-8]
 39868  01E712  0EF8               	movlw	-8
 39869  01E714  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39870  01E71A  0EF9               	movlw	-7
 39871  01E71C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39872  01E722  0EFA               	movlw	-6
 39873  01E724  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39874  01E72A  0EFB               	movlw	-5
 39875  01E72C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39876  01E732                     l10688:
 39877                           
 39878                           ;stkvar	_ff1 @ sp[(0)+-4]
 39879  01E732  0EFF               	movlw	-1
 39880  01E734  7EE3               	btg	plusw1,7,c
 39881                           
 39882                           ;stkvar	_ff2 @ sp[(0)+-8]
 39883  01E736  0EFB               	movlw	-5
 39884  01E738  7EE3               	btg	plusw1,7,c
 39885                           
 39886                           ;stkvar	_ff2 @ sp[(0)+-8]
 39887                           ;stkvar	_ff1 @ sp[(0)+-4]
 39888  01E73A  50E1               	movf	fsr1l,w,c
 39889  01E73C  0FFC               	addlw	-4
 39890  01E73E  6ED9               	movwf	fsr2l,c
 39891  01E740  50E2               	movf	fsr1h,w,c
 39892  01E742  6EDA               	movwf	fsr2h,c
 39893  01E744  0EFF               	movlw	255
 39894  01E746  22DA               	addwfc	fsr2h,f,c
 39895  01E748  0EF8               	movlw	-8
 39896  01E74A  50E3               	movf	plusw1,w,c
 39897  01E74C  5CDE               	subwf	postinc2,w,c
 39898  01E74E  0EF9               	movlw	-7
 39899  01E750  50E3               	movf	plusw1,w,c
 39900  01E752  58DE               	subwfb	postinc2,w,c
 39901  01E754  0EFA               	movlw	-6
 39902  01E756  50E3               	movf	plusw1,w,c
 39903  01E758  58DE               	subwfb	postinc2,w,c
 39904  01E75A  0EFB               	movlw	-5
 39905  01E75C  50E3               	movf	plusw1,w,c
 39906  01E75E  58DE               	subwfb	postinc2,w,c
 39907  01E760  B0D8               	btfsc	status,0,c
 39908  01E762  D002               	goto	l10696
 39909  01E764  902A               	bcf	btemp& (0+255),0,c
 39910  01E766  D001               	goto	l2992
 39911  01E768                     l10696:
 39912  01E768  802A               	bsf	btemp& (0+255),0,c
 39913  01E76A                     l2992:
 39914                           
 39915                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 39916  01E76A  0EF8               	movlw	248
 39917  01E76C  26E1               	addwf	fsr1l,f,c
 39918  01E76E  0EFF               	movlw	255
 39919  01E770  22E2               	addwfc	fsr1h,f,c
 39920  01E772  0012               	return		;funcret
 39921  01E774                     __end_of___flge:
 39922                           	opt callstack 0
 39923                           
 39924 ;; *************** function _calc_model_data *****************
 39925 ;; Defined at:
 39926 ;;		line 67 in file "mbmc.c"
 39927 ;; Parameters:    Size  Location     Type
 39928 ;;		None
 39929 ;; Auto vars:     Size  Location     Type
 39930 ;;		None
 39931 ;; Return value:  Size  Location     Type
 39932 ;;                  1  [STACK] void 
 39933 ;; Registers used:
 39934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39935 ;; Tracked objects:
 39936 ;;		On entry : 3F/0
 39937 ;;		On exit  : 3F/39
 39938 ;;		Unchanged: 0/0
 39939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39944 ;;Total ram usage:        0 bytes
 39945 ;; Hardware stack levels used:    1
 39946 ;; Hardware stack levels required when called:   18
 39947 ;; This function calls:
 39948 ;;		___fladd
 39949 ;;		___flmul
 39950 ;;		___flsub
 39951 ;;		_lp_filter
 39952 ;;		_start_bsoc
 39953 ;;		_stop_bsoc
 39954 ;; This function is called by:
 39955 ;;		_main
 39956 ;; This function uses a reentrant model
 39957 ;;
 39958                           
 39959                           	psect	text148
 39960  01937C                     __ptext148:
 39961                           	opt callstack 0
 39962  01937C                     _calc_model_data:
 39963                           	opt callstack 12
 39964                           
 39965                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 39966                           
 39967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39968                           ;incstack = 0
 39969  01937C  EC9A  F013         	call	_stop_bsoc	;wreg free
 39970                           
 39971                           ; BSR set to: 57
 39972                           ;mbmc.c: 72:  if (!V.calib) {
 39973  019380  0102               	movlb	2	; () banked
 39974  019382  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 39975  019384  A4D8               	btfss	status,2,c
 39976  019386  D220               	goto	l14378
 39977                           
 39978                           ; BSR set to: 2
 39979                           ;mbmc.c: 73:   C.updates++;
 39980  019388  EE22  F23B         	lfsr	2,_C+316	;volatile
 39981  01938C  2ADE               	incf	postinc2,f,c
 39982  01938E  0E00               	movlw	0
 39983  019390  22DE               	addwfc	postinc2,f,c
 39984  019392  22DE               	addwfc	postinc2,f,c
 39985  019394  22DE               	addwfc	postinc2,f,c
 39986                           
 39987                           ; BSR set to: 2
 39988                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 39989  019396  EE22  F0FF         	lfsr	2,_C
 39990  01939A  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 39991  0193A0  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 39992  0193A6  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 39993  0193AC  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 39994                           
 39995                           ; BSR set to: 2
 39996                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 39997  0193B2  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 39998  0193B8  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 39999  0193BE  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40000  0193C4  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40001  0193CA  EE22  F143         	lfsr	2,_C+68	;volatile
 40002  0193CE  006F FF7B FFE6     	movff	postinc2,postinc1
 40003  0193D4  006F FF7B FFE6     	movff	postinc2,postinc1
 40004  0193DA  006F FF7B FFE6     	movff	postinc2,postinc1
 40005  0193E0  006F FF7B FFE6     	movff	postinc2,postinc1
 40006  0193E6  EC54  F00D         	call	___flsub	;wreg free
 40007  0193EA  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 40008  0193F0  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 40009  0193F6  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 40010  0193FC  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 40011                           
 40012                           ;mbmc.c: 76:   bcror = C.c_bat;
 40013  019402  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 40014  019406  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 40015  01940A  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 40016  01940E  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 40017                           
 40018                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 40019  019412  EE22  F103         	lfsr	2,_C+4	;volatile
 40020  019416  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 40021  01941C  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 40022  019422  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 40023  019428  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 40024                           
 40025                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 40026  01942E  EE22  F10F         	lfsr	2,_C+16	;volatile
 40027  019432  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 40028  019438  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 40029  01943E  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 40030  019444  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 40031                           
 40032                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 40033  01944A  EE22  F133         	lfsr	2,_C+52	;volatile
 40034  01944E  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 40035  019454  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 40036  01945A  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 40037  019460  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 40038                           
 40039                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 40040  019466  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 40041  01946C  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 40042  019472  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 40043  019478  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 40044  01947E  EE22  F153         	lfsr	2,_C+84	;volatile
 40045  019482  006F FF7B FFE6     	movff	postinc2,postinc1
 40046  019488  006F FF7B FFE6     	movff	postinc2,postinc1
 40047  01948E  006F FF7B FFE6     	movff	postinc2,postinc1
 40048  019494  006F FF7B FFE6     	movff	postinc2,postinc1
 40049  01949A  EC54  F00D         	call	___flsub	;wreg free
 40050  01949E  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 40051  0194A4  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 40052  0194AA  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 40053  0194B0  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 40054                           
 40055                           ;mbmc.c: 81:   bvror = C.v_bat;
 40056  0194B6  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 40057  0194BA  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 40058  0194BE  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 40059  0194C2  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 40060                           
 40061                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 40062  0194C6  EE22  F113         	lfsr	2,_C+20	;volatile
 40063  0194CA  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 40064  0194D0  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 40065  0194D6  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 40066  0194DC  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 40067                           
 40068                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 40069  0194E2  EE22  F107         	lfsr	2,_C+8	;volatile
 40070  0194E6  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 40071  0194EC  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 40072  0194F2  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 40073  0194F8  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 40074                           
 40075                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 40076  0194FE  EE22  F12F         	lfsr	2,_C+48	;volatile
 40077  019502  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 40078  019508  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 40079  01950E  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 40080  019514  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 40081                           
 40082                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 40083  01951A  0E01               	movlw	1
 40084  01951C  6EE6               	movwf	postinc1,c
 40085  01951E  0E10               	movlw	16
 40086  019520  6EE6               	movwf	postinc1,c
 40087  019522  EE22  F0FF         	lfsr	2,_C
 40088  019526  006F FF7B FFE6     	movff	postinc2,postinc1
 40089  01952C  006F FF7B FFE6     	movff	postinc2,postinc1
 40090  019532  006F FF7B FFE6     	movff	postinc2,postinc1
 40091  019538  006F FF7B FFE6     	movff	postinc2,postinc1
 40092  01953E  EE22  F103         	lfsr	2,_C+4	;volatile
 40093  019542  006F FF7B FFE6     	movff	postinc2,postinc1
 40094  019548  006F FF7B FFE6     	movff	postinc2,postinc1
 40095  01954E  006F FF7B FFE6     	movff	postinc2,postinc1
 40096  019554  006F FF7B FFE6     	movff	postinc2,postinc1
 40097  01955A  EC54  F00D         	call	___flsub	;wreg free
 40098  01955E  0060  F0AB  FFE6   	movff	btemp,postinc1
 40099  019564  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40100  01956A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40101  019570  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40102  019576  EC56  F0EB         	call	_lp_filter	;wreg free
 40103  01957A  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 40104  019580  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 40105  019586  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 40106  01958C  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 40107                           
 40108                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 40109  019592  0E01               	movlw	1
 40110  019594  6EE6               	movwf	postinc1,c
 40111  019596  0E11               	movlw	17
 40112  019598  6EE6               	movwf	postinc1,c
 40113  01959A  EE22  F153         	lfsr	2,_C+84	;volatile
 40114  01959E  006F FF7B FFE6     	movff	postinc2,postinc1
 40115  0195A4  006F FF7B FFE6     	movff	postinc2,postinc1
 40116  0195AA  006F FF7B FFE6     	movff	postinc2,postinc1
 40117  0195B0  006F FF7B FFE6     	movff	postinc2,postinc1
 40118  0195B6  EE22  F13F         	lfsr	2,_C+64	;volatile
 40119  0195BA  006F FF7B FFE6     	movff	postinc2,postinc1
 40120  0195C0  006F FF7B FFE6     	movff	postinc2,postinc1
 40121  0195C6  006F FF7B FFE6     	movff	postinc2,postinc1
 40122  0195CC  006F FF7B FFE6     	movff	postinc2,postinc1
 40123  0195D2  EC4D  F0B2         	call	___flmul	;wreg free
 40124  0195D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 40125  0195DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40126  0195E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40127  0195E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40128  0195EE  EC56  F0EB         	call	_lp_filter	;wreg free
 40129  0195F2  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 40130  0195F8  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 40131  0195FE  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 40132  019604  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 40133                           
 40134                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 40135  01960A  0E01               	movlw	1
 40136  01960C  6EE6               	movwf	postinc1,c
 40137  01960E  0E12               	movlw	18
 40138  019610  6EE6               	movwf	postinc1,c
 40139  019612  EE22  F14F         	lfsr	2,_C+80	;volatile
 40140  019616  006F FF7B FFE6     	movff	postinc2,postinc1
 40141  01961C  006F FF7B FFE6     	movff	postinc2,postinc1
 40142  019622  006F FF7B FFE6     	movff	postinc2,postinc1
 40143  019628  006F FF7B FFE6     	movff	postinc2,postinc1
 40144  01962E  EE22  F147         	lfsr	2,_C+72	;volatile
 40145  019632  006F FF7B FFE6     	movff	postinc2,postinc1
 40146  019638  006F FF7B FFE6     	movff	postinc2,postinc1
 40147  01963E  006F FF7B FFE6     	movff	postinc2,postinc1
 40148  019644  006F FF7B FFE6     	movff	postinc2,postinc1
 40149  01964A  EC4D  F0B2         	call	___flmul	;wreg free
 40150  01964E  0060  F0AB  FFE6   	movff	btemp,postinc1
 40151  019654  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40152  01965A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40153  019660  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40154  019666  EC56  F0EB         	call	_lp_filter	;wreg free
 40155  01966A  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 40156  019670  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 40157  019676  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 40158  01967C  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 40159                           
 40160                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 40161  019682  0E01               	movlw	1
 40162  019684  6EE6               	movwf	postinc1,c
 40163  019686  0E13               	movlw	19
 40164  019688  6EE6               	movwf	postinc1,c
 40165  01968A  0E00               	movlw	0
 40166  01968C  6EE6               	movwf	postinc1,c
 40167  01968E  0E00               	movlw	0
 40168  019690  6EE6               	movwf	postinc1,c
 40169  019692  0E60               	movlw	96
 40170  019694  6EE6               	movwf	postinc1,c
 40171  019696  0EC1               	movlw	193
 40172  019698  6EE6               	movwf	postinc1,c
 40173  01969A  EE22  F163         	lfsr	2,_C+100	;volatile
 40174  01969E  006F FF7B FFE6     	movff	postinc2,postinc1
 40175  0196A4  006F FF7B FFE6     	movff	postinc2,postinc1
 40176  0196AA  006F FF7B FFE6     	movff	postinc2,postinc1
 40177  0196B0  006F FF7B FFE6     	movff	postinc2,postinc1
 40178  0196B6  EE22  F13F         	lfsr	2,_C+64	;volatile
 40179  0196BA  006F FF7B FFE6     	movff	postinc2,postinc1
 40180  0196C0  006F FF7B FFE6     	movff	postinc2,postinc1
 40181  0196C6  006F FF7B FFE6     	movff	postinc2,postinc1
 40182  0196CC  006F FF7B FFE6     	movff	postinc2,postinc1
 40183  0196D2  EC4D  F0B2         	call	___flmul	;wreg free
 40184  0196D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 40185  0196DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40186  0196E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40187  0196E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40188  0196EE  EC62  F0B6         	call	___fladd	;wreg free
 40189  0196F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 40190  0196F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40191  0196FE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40192  019704  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40193  01970A  EC56  F0EB         	call	_lp_filter	;wreg free
 40194  01970E  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 40195  019714  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 40196  01971A  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 40197  019720  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 40198                           
 40199                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 40200  019726  0E01               	movlw	1
 40201  019728  6EE6               	movwf	postinc1,c
 40202  01972A  0E14               	movlw	20
 40203  01972C  6EE6               	movwf	postinc1,c
 40204  01972E  EE22  F153         	lfsr	2,_C+84	;volatile
 40205  019732  006F FF7B FFE6     	movff	postinc2,postinc1
 40206  019738  006F FF7B FFE6     	movff	postinc2,postinc1
 40207  01973E  006F FF7B FFE6     	movff	postinc2,postinc1
 40208  019744  006F FF7B FFE6     	movff	postinc2,postinc1
 40209  01974A  EE22  F143         	lfsr	2,_C+68	;volatile
 40210  01974E  006F FF7B FFE6     	movff	postinc2,postinc1
 40211  019754  006F FF7B FFE6     	movff	postinc2,postinc1
 40212  01975A  006F FF7B FFE6     	movff	postinc2,postinc1
 40213  019760  006F FF7B FFE6     	movff	postinc2,postinc1
 40214  019766  EC4D  F0B2         	call	___flmul	;wreg free
 40215  01976A  0060  F0AB  FFE6   	movff	btemp,postinc1
 40216  019770  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40217  019776  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40218  01977C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40219  019782  EC56  F0EB         	call	_lp_filter	;wreg free
 40220  019786  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 40221  01978C  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 40222  019792  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 40223  019798  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 40224                           
 40225                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 40226  01979E  EE22  F177         	lfsr	2,_C+120	;volatile
 40227  0197A2  0E03               	movlw	3
 40228  0197A4  AEDB               	btfss	plusw2,7,c
 40229  0197A6  D010               	goto	l14378
 40230                           
 40231                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 40232  0197A8  0E17               	movlw	23
 40233  0197AA  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 40234  0197B0  0EB7               	movlw	183
 40235  0197B2  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 40236  0197B8  0ED1               	movlw	209
 40237  0197BA  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 40238  0197C0  0E38               	movlw	56
 40239  0197C2  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 40240  0197C8                     l14378:
 40241                           
 40242                           ;mbmc.c: 96:  start_bsoc();
 40243  0197C8  EC16  F012         	call	_start_bsoc	;wreg free
 40244                           
 40245                           ; BSR set to: 57
 40246                           ;mbmc.c: 97:  C.update = 1;
 40247  0197CC  0E01               	movlw	1
 40248  0197CE  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 40249                           
 40250                           ; BSR set to: 57
 40251                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 40252  0197D4  0012               	return		;funcret
 40253  0197D6                     __end_of_calc_model_data:
 40254                           	opt callstack 0
 40255                           
 40256 ;; *************** function _stop_bsoc *****************
 40257 ;; Defined at:
 40258 ;;		line 130 in file "bsoc.c"
 40259 ;; Parameters:    Size  Location     Type
 40260 ;;		None
 40261 ;; Auto vars:     Size  Location     Type
 40262 ;;		None
 40263 ;; Return value:  Size  Location     Type
 40264 ;;                  1  [STACK] void 
 40265 ;; Registers used:
 40266 ;;		None
 40267 ;; Tracked objects:
 40268 ;;		On entry : 0/1
 40269 ;;		On exit  : 3F/39
 40270 ;;		Unchanged: 0/0
 40271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40276 ;;Total ram usage:        0 bytes
 40277 ;; Hardware stack levels used:    1
 40278 ;; Hardware stack levels required when called:   15
 40279 ;; This function calls:
 40280 ;;		Nothing
 40281 ;; This function is called by:
 40282 ;;		_calc_model_data
 40283 ;;		_load_hist_data
 40284 ;; This function uses a reentrant model
 40285 ;;
 40286                           
 40287                           	psect	text149
 40288  002734                     __ptext149:
 40289                           	opt callstack 0
 40290  002734                     _stop_bsoc:
 40291                           	opt callstack 14
 40292                           
 40293                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 40294                           
 40295                           ; BSR set to: 57
 40296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40297                           ;incstack = 0
 40298  002734  0139               	movlb	57	; () banked
 40299  002736  9D96               	bcf	150,6,b	;volatile
 40300                           
 40301                           ; BSR set to: 57
 40302                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 40303  002738  0012               	return		;funcret
 40304  00273A                     __end_of_stop_bsoc:
 40305                           	opt callstack 0
 40306                           
 40307 ;; *************** function _start_bsoc *****************
 40308 ;; Defined at:
 40309 ;;		line 121 in file "bsoc.c"
 40310 ;; Parameters:    Size  Location     Type
 40311 ;;		None
 40312 ;; Auto vars:     Size  Location     Type
 40313 ;;		None
 40314 ;; Return value:  Size  Location     Type
 40315 ;;                  1  [STACK] void 
 40316 ;; Registers used:
 40317 ;;		wreg, status,2, status,0, btemp+11
 40318 ;; Tracked objects:
 40319 ;;		On entry : 0/39
 40320 ;;		On exit  : 3F/39
 40321 ;;		Unchanged: 0/0
 40322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40327 ;;Total ram usage:        0 bytes
 40328 ;; Hardware stack levels used:    1
 40329 ;; Hardware stack levels required when called:   15
 40330 ;; This function calls:
 40331 ;;		Nothing
 40332 ;; This function is called by:
 40333 ;;		_calc_model_data
 40334 ;;		_load_hist_data
 40335 ;; This function uses a reentrant model
 40336 ;;
 40337                           
 40338                           	psect	text150
 40339  00242C                     __ptext150:
 40340                           	opt callstack 0
 40341  00242C                     _start_bsoc:
 40342                           	opt callstack 14
 40343                           
 40344                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 40345                           
 40346                           ; BSR set to: 57
 40347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40348                           ;incstack = 0
 40349  00242C  0139               	movlb	57	; () banked
 40350  00242E  8D96               	bsf	150,6,b	;volatile
 40351                           
 40352                           ; BSR set to: 57
 40353  002430  A4BE               	btfss	190,2,c	;volatile
 40354  002432  D002               	goto	u12730
 40355  002434  0E01               	movlw	1
 40356  002436  D001               	goto	u12736
 40357  002438                     u12730:
 40358  002438  0E00               	movlw	0
 40359  00243A                     u12736:
 40360  00243A  0AFF               	xorlw	255
 40361  00243C  6E35               	movwf	(btemp+11)^0,c
 40362  00243E  4635               	rlncf	(btemp+11)^0,f,c
 40363  002440  4635               	rlncf	(btemp+11)^0,f,c
 40364  002442  50BE               	movf	190,w,c	;volatile
 40365  002444  1835               	xorwf	(btemp+11)^0,w,c
 40366  002446  0BFB               	andlw	-5
 40367  002448  1835               	xorwf	(btemp+11)^0,w,c
 40368  00244A  6EBE               	movwf	190,c	;volatile
 40369                           
 40370                           ; BSR set to: 57
 40371                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 40372  00244C  0012               	return		;funcret
 40373  00244E                     __end_of_start_bsoc:
 40374                           	opt callstack 0
 40375                           
 40376 ;; *************** function _lp_filter *****************
 40377 ;; Defined at:
 40378 ;;		line 29 in file "mbmc.c"
 40379 ;; Parameters:    Size  Location     Type
 40380 ;;  new             4  [STACK] const float 
 40381 ;;  bn              1  [STACK] const unsigned char 
 40382 ;;  slow            1  [STACK] const char 
 40383 ;; Auto vars:     Size  Location     Type
 40384 ;;  lp_speed        4  [STACK] float 
 40385 ;; Return value:  Size  Location     Type
 40386 ;;                  4  [STACK] float 
 40387 ;; Registers used:
 40388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40389 ;; Tracked objects:
 40390 ;;		On entry : 0/2
 40391 ;;		On exit  : 0/0
 40392 ;;		Unchanged: 0/0
 40393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40398 ;;Total ram usage:        0 bytes
 40399 ;; Hardware stack levels used:    1
 40400 ;; Hardware stack levels required when called:   17
 40401 ;; This function calls:
 40402 ;;		___fladd
 40403 ;;		___flmul
 40404 ;;		___flsub
 40405 ;; This function is called by:
 40406 ;;		_main
 40407 ;;		_convert_adc_data
 40408 ;;		_calc_model_data
 40409 ;; This function uses a reentrant model
 40410 ;;
 40411                           
 40412                           	psect	text151
 40413  01D6AC                     __ptext151:
 40414                           	opt callstack 0
 40415  01D6AC                     _lp_filter:
 40416                           	opt callstack 0
 40417                           
 40418                           ; BSR set to: 57
 40419                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40420  01D6AC  52E6               	movf	postinc1,f,c
 40421  01D6AE  52E6               	movf	postinc1,f,c
 40422  01D6B0  52E6               	movf	postinc1,f,c
 40423  01D6B2  52E6               	movf	postinc1,f,c
 40424                           
 40425                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 40426                           ;stkvar	_bn @ sp[(-4)+-5]
 40427                           
 40428                           ;incstack = 0
 40429  01D6B4  0EF7               	movlw	-9
 40430  01D6B6  006F FF8C  F02A    	movff	plusw1,btemp
 40431  01D6BC  0E14               	movlw	20
 40432  01D6BE  642A               	cpfsgt	btemp^0,c
 40433  01D6C0  D011               	goto	l13482
 40434  01D6C2                     u12560:
 40435                           
 40436                           ;mbmc.c: 35:   return new;
 40437                           ;stkvar	_new @ sp[(-4)+-4]
 40438  01D6C2  0EF8               	movlw	-8
 40439  01D6C4  006F FF8C  F02A    	movff	plusw1,btemp
 40440  01D6CA  0EF9               	movlw	-7
 40441  01D6CC  006F FF8C  F02B    	movff	plusw1,btemp+1
 40442  01D6D2  0EFA               	movlw	-6
 40443  01D6D4  006F FF8C  F02C    	movff	plusw1,btemp+2
 40444  01D6DA  0EFB               	movlw	-5
 40445  01D6DC  006F FF8C  F02D    	movff	plusw1,btemp+3
 40446  01D6E2  D0BD               	goto	l2137
 40447  01D6E4                     l13482:
 40448                           
 40449                           ;mbmc.c: 37:  if (slow == (-1)) {
 40450                           ;stkvar	_slow @ sp[(-4)+-6]
 40451  01D6E4  0EF6               	movlw	-10
 40452  01D6E6  28E3               	incf	plusw1,w,c
 40453  01D6E8  A4D8               	btfss	status,2,c
 40454  01D6EA  D012               	goto	l13490
 40455                           
 40456                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 40457                           ;stkvar	_bn @ sp[(-4)+-5]
 40458  01D6EC  0EF7               	movlw	-9
 40459  01D6EE  50E3               	movf	plusw1,w,c
 40460  01D6F0  0D04               	mullw	4
 40461  01D6F2  0E00               	movlw	low lp_filter@smooth
 40462  01D6F4  24F3               	addwf	243,w,c
 40463  01D6F6  6ED9               	movwf	fsr2l,c
 40464  01D6F8  0E03               	movlw	high lp_filter@smooth
 40465  01D6FA  20F4               	addwfc	prodh,w,c
 40466  01D6FC  6EDA               	movwf	fsr2h,c
 40467  01D6FE  0E00               	movlw	0
 40468  01D700  6EDE               	movwf	postinc2,c
 40469  01D702  0E00               	movlw	0
 40470  01D704  6EDE               	movwf	postinc2,c
 40471  01D706  0E00               	movlw	0
 40472  01D708  6EDE               	movwf	postinc2,c
 40473  01D70A  0E00               	movlw	0
 40474  01D70C  6EDD               	movwf	postdec2,c
 40475  01D70E  D7D9               	goto	u12560
 40476  01D710                     l13490:
 40477                           
 40478                           ;mbmc.c: 42:  if (slow) {
 40479                           ;stkvar	_slow @ sp[(-4)+-6]
 40480  01D710  0EF6               	movlw	-10
 40481  01D712  50E3               	movf	plusw1,w,c
 40482  01D714  B4D8               	btfsc	status,2,c
 40483  01D716  D006               	goto	l13494
 40484                           
 40485                           ;mbmc.c: 43:   lp_speed = 0.033;
 40486  01D718  0E02               	movlw	2
 40487  01D71A  6E32               	movwf	(btemp+8)^0,c
 40488  01D71C  0E2B               	movlw	43
 40489  01D71E  6E33               	movwf	(btemp+9)^0,c
 40490  01D720  0E07               	movlw	7
 40491  01D722  D005               	goto	L46
 40492  01D724                     l13494:
 40493                           
 40494                           ;mbmc.c: 45:   lp_speed = 0.066;
 40495  01D724  0E02               	movlw	2
 40496  01D726  6E32               	movwf	(btemp+8)^0,c
 40497  01D728  0E2B               	movlw	43
 40498  01D72A  6E33               	movwf	(btemp+9)^0,c
 40499  01D72C  0E87               	movlw	135
 40500  01D72E                     L46:
 40501  01D72E  6E34               	movwf	(btemp+10)^0,c
 40502  01D730  0E3D               	movlw	61
 40503  01D732  6E35               	movwf	(btemp+11)^0,c
 40504                           
 40505                           ;stkvar	_lp_speed @ sp[(-4)+0]
 40506  01D734  0EFC               	movlw	-4
 40507  01D736  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40508  01D73C  0EFD               	movlw	-3
 40509  01D73E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40510  01D744  0EFE               	movlw	-2
 40511  01D746  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40512  01D74C  0EFF               	movlw	-1
 40513  01D74E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40514                           
 40515                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 40516                           ;stkvar	_bn @ sp[(-4)+-5]
 40517  01D754  0EF7               	movlw	-9
 40518  01D756  50E3               	movf	plusw1,w,c
 40519  01D758  0D04               	mullw	4
 40520  01D75A  0E00               	movlw	low lp_filter@smooth
 40521  01D75C  24F3               	addwf	243,w,c
 40522  01D75E  6ED9               	movwf	fsr2l,c
 40523  01D760  0E03               	movlw	high lp_filter@smooth
 40524  01D762  20F4               	addwfc	prodh,w,c
 40525  01D764  6EDA               	movwf	fsr2h,c
 40526  01D766  006F FF7B FFE6     	movff	postinc2,postinc1
 40527  01D76C  006F FF7B FFE6     	movff	postinc2,postinc1
 40528  01D772  006F FF7B FFE6     	movff	postinc2,postinc1
 40529  01D778  006F FF7B FFE6     	movff	postinc2,postinc1
 40530                           
 40531                           ;stkvar	_lp_speed @ sp[(-8)+0]
 40532  01D77E  0EF8               	movlw	-8
 40533  01D780  006F FF8F FFE6     	movff	plusw1,postinc1
 40534  01D786  006F FF8F FFE6     	movff	plusw1,postinc1
 40535  01D78C  006F FF8F FFE6     	movff	plusw1,postinc1
 40536  01D792  006F FF8F FFE6     	movff	plusw1,postinc1
 40537                           
 40538                           ;stkvar	_bn @ sp[(-12)+-5]
 40539  01D798  0EEF               	movlw	-17
 40540  01D79A  50E3               	movf	plusw1,w,c
 40541  01D79C  0D04               	mullw	4
 40542  01D79E  0E00               	movlw	low lp_filter@smooth
 40543  01D7A0  24F3               	addwf	243,w,c
 40544  01D7A2  6ED9               	movwf	fsr2l,c
 40545  01D7A4  0E03               	movlw	high lp_filter@smooth
 40546  01D7A6  20F4               	addwfc	prodh,w,c
 40547  01D7A8  6EDA               	movwf	fsr2h,c
 40548  01D7AA  006F FF7B FFE6     	movff	postinc2,postinc1
 40549  01D7B0  006F FF7B FFE6     	movff	postinc2,postinc1
 40550  01D7B6  006F FF7B FFE6     	movff	postinc2,postinc1
 40551  01D7BC  006F FF7B FFE6     	movff	postinc2,postinc1
 40552                           
 40553                           ;stkvar	_new @ sp[(-16)+-4]
 40554  01D7C2  0EEC               	movlw	-20
 40555  01D7C4  006F FF8F FFE6     	movff	plusw1,postinc1
 40556  01D7CA  006F FF8F FFE6     	movff	plusw1,postinc1
 40557  01D7D0  006F FF8F FFE6     	movff	plusw1,postinc1
 40558  01D7D6  006F FF8F FFE6     	movff	plusw1,postinc1
 40559  01D7DC  EC54  F00D         	call	___flsub	;wreg free
 40560  01D7E0  0060  F0AB  FFE6   	movff	btemp,postinc1
 40561  01D7E6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40562  01D7EC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40563  01D7F2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40564  01D7F8  EC4D  F0B2         	call	___flmul	;wreg free
 40565  01D7FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 40566  01D802  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40567  01D808  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40568  01D80E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40569  01D814  EC62  F0B6         	call	___fladd	;wreg free
 40570                           
 40571                           ;stkvar	_bn @ sp[(-4)+-5]
 40572  01D818  0EF7               	movlw	-9
 40573  01D81A  50E3               	movf	plusw1,w,c
 40574  01D81C  0D04               	mullw	4
 40575  01D81E  0E00               	movlw	low lp_filter@smooth
 40576  01D820  24F3               	addwf	243,w,c
 40577  01D822  6ED9               	movwf	fsr2l,c
 40578  01D824  0E03               	movlw	high lp_filter@smooth
 40579  01D826  20F4               	addwfc	prodh,w,c
 40580  01D828  6EDA               	movwf	fsr2h,c
 40581  01D82A  0060  F0AB  FFDE   	movff	btemp,postinc2
 40582  01D830  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 40583  01D836  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 40584  01D83C  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 40585  01D842  52DD               	movf	postdec2,f,c
 40586  01D844  52DD               	movf	postdec2,f,c
 40587  01D846  006F FF78  F02A    	movff	postinc2,btemp
 40588  01D84C  006F FF78  F02B    	movff	postinc2,btemp+1
 40589  01D852  006F FF78  F02C    	movff	postinc2,btemp+2
 40590  01D858  006F FF78  F02D    	movff	postinc2,btemp+3
 40591  01D85E                     l2137:
 40592                           
 40593                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 40594  01D85E  0EF6               	movlw	246
 40595  01D860  26E1               	addwf	fsr1l,f,c
 40596  01D862  0EFF               	movlw	255
 40597  01D864  22E2               	addwfc	fsr1h,f,c
 40598  01D866  0012               	return		;funcret
 40599  01D868                     __end_of_lp_filter:
 40600                           	opt callstack 0
 40601                           
 40602 ;; *************** function ___flsub *****************
 40603 ;; Defined at:
 40604 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40605 ;; Parameters:    Size  Location     Type
 40606 ;;  b               4  [STACK] float 
 40607 ;;  a               4  [STACK] float 
 40608 ;; Auto vars:     Size  Location     Type
 40609 ;;		None
 40610 ;; Return value:  Size  Location     Type
 40611 ;;                  4  [STACK] float 
 40612 ;; Registers used:
 40613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40614 ;; Tracked objects:
 40615 ;;		On entry : 0/0
 40616 ;;		On exit  : 0/0
 40617 ;;		Unchanged: 0/0
 40618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40623 ;;Total ram usage:        0 bytes
 40624 ;; Hardware stack levels used:    1
 40625 ;; Hardware stack levels required when called:   16
 40626 ;; This function calls:
 40627 ;;		___fladd
 40628 ;; This function is called by:
 40629 ;;		_conv_raw_result
 40630 ;;		_lp_filter
 40631 ;;		_calc_model_data
 40632 ;;		_calc_ror_data
 40633 ;;		_esr_check
 40634 ;;		_efgtoa
 40635 ;; This function uses a reentrant model
 40636 ;;
 40637                           
 40638                           	psect	text152
 40639  001AA8                     __ptext152:
 40640                           	opt callstack 0
 40641  001AA8                     ___flsub:
 40642                           	opt callstack 0
 40643                           
 40644                           ;stkvar	_a @ sp[(0)+-8]
 40645                           
 40646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40647                           ;incstack = 0
 40648 ;; hardware stack exceeded
 40649  001AA8  0EFB               	movlw	-5
 40650  001AAA  7EE3               	btg	plusw1,7,c
 40651                           
 40652                           ;stkvar	_a @ sp[(0)+-8]
 40653  001AAC  0EF8               	movlw	-8
 40654  001AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 40655  001AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 40656  001ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 40657  001AC0  006F FF8F FFE6     	movff	plusw1,postinc1
 40658                           
 40659                           ;stkvar	_b @ sp[(-4)+-4]
 40660  001AC6  0EF8               	movlw	-8
 40661  001AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 40662  001ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 40663  001AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 40664  001ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 40665  001AE0  EC62  F0B6         	call	___fladd	;wreg free
 40666                           
 40667                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 40668  001AE4  0EF8               	movlw	248
 40669  001AE6  26E1               	addwf	fsr1l,f,c
 40670  001AE8  0EFF               	movlw	255
 40671  001AEA  22E2               	addwfc	fsr1h,f,c
 40672  001AEC  0012               	return		;funcret
 40673  001AEE                     __end_of___flsub:
 40674                           	opt callstack 0
 40675                           
 40676 ;; *************** function ___fladd *****************
 40677 ;; Defined at:
 40678 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40679 ;; Parameters:    Size  Location     Type
 40680 ;;  b               4  [STACK] float 
 40681 ;;  a               4  [STACK] float 
 40682 ;; Auto vars:     Size  Location     Type
 40683 ;;  grs             1  [STACK] unsigned char 
 40684 ;;  bexp            1  [STACK] unsigned char 
 40685 ;;  aexp            1  [STACK] unsigned char 
 40686 ;;  signs           1  [STACK] unsigned char 
 40687 ;; Return value:  Size  Location     Type
 40688 ;;                  4  [STACK] unsigned char 
 40689 ;; Registers used:
 40690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40691 ;; Tracked objects:
 40692 ;;		On entry : 0/0
 40693 ;;		On exit  : 0/0
 40694 ;;		Unchanged: 0/0
 40695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40700 ;;Total ram usage:        0 bytes
 40701 ;; Hardware stack levels used:    1
 40702 ;; Hardware stack levels required when called:   15
 40703 ;; This function calls:
 40704 ;;		Nothing
 40705 ;; This function is called by:
 40706 ;;		_main
 40707 ;;		_lp_filter
 40708 ;;		_calc_model_data
 40709 ;;		_efgtoa
 40710 ;;		___asfladd
 40711 ;;		___flsub
 40712 ;; This function uses a reentrant model
 40713 ;;
 40714                           
 40715                           	psect	text153
 40716  016CC4                     __ptext153:
 40717                           	opt callstack 0
 40718  016CC4                     ___fladd:
 40719                           	opt callstack 0
 40720                           
 40721                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40722  016CC4  52E6               	movf	postinc1,f,c
 40723  016CC6  52E6               	movf	postinc1,f,c
 40724  016CC8  52E6               	movf	postinc1,f,c
 40725  016CCA  52E6               	movf	postinc1,f,c
 40726                           
 40727                           ;stkvar	_b @ sp[(-4)+-4]
 40728                           
 40729                           ;incstack = 0
 40730 ;; hardware stack exceeded
 40731  016CCC  0EFB               	movlw	251
 40732  016CCE  24E1               	addwf	fsr1l,w,c
 40733  016CD0  6ED9               	movwf	fsr2l,c
 40734  016CD2  0EFF               	movlw	255
 40735  016CD4  20E2               	addwfc	fsr1h,w,c
 40736  016CD6  6EDA               	movwf	fsr2h,c
 40737  016CD8  50DF               	movf	indf2,w,c
 40738  016CDA  6E35               	movwf	(btemp+11)^0,c
 40739  016CDC  0E80               	movlw	128
 40740  016CDE  1635               	andwf	(btemp+11)^0,f,c
 40741                           
 40742                           ;stkvar	_signs @ sp[(-4)+3]
 40743  016CE0  0EFF               	movlw	-1
 40744  016CE2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40745                           
 40746                           ;stkvar	_b @ sp[(-4)+-4]
 40747  016CE8  0EFB               	movlw	251
 40748  016CEA  24E1               	addwf	fsr1l,w,c
 40749  016CEC  6ED9               	movwf	fsr2l,c
 40750  016CEE  0EFF               	movlw	255
 40751  016CF0  20E2               	addwfc	fsr1h,w,c
 40752  016CF2  6EDA               	movwf	fsr2h,c
 40753  016CF4  50DF               	movf	indf2,w,c
 40754  016CF6  6E35               	movwf	(btemp+11)^0,c
 40755  016CF8  90D8               	bcf	status,0,c
 40756  016CFA  3435               	rlcf	(btemp+11)^0,w,c
 40757  016CFC  6E34               	movwf	(btemp+10)^0,c
 40758                           
 40759                           ;stkvar	_bexp @ sp[(-4)+1]
 40760  016CFE  0EFD               	movlw	-3
 40761  016D00  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40762                           
 40763                           ;stkvar	_b @ sp[(-4)+-4]
 40764  016D06  0EFA               	movlw	250
 40765  016D08  24E1               	addwf	fsr1l,w,c
 40766  016D0A  6ED9               	movwf	fsr2l,c
 40767  016D0C  0EFF               	movlw	255
 40768  016D0E  20E2               	addwfc	fsr1h,w,c
 40769  016D10  6EDA               	movwf	fsr2h,c
 40770  016D12  AEDF               	btfss	indf2,7,c
 40771  016D14  D002               	goto	l9748
 40772                           
 40773                           ;stkvar	_bexp @ sp[(-4)+1]
 40774  016D16  0EFD               	movlw	-3
 40775  016D18  80E3               	bsf	plusw1,0,c
 40776  016D1A                     l9748:
 40777                           
 40778                           ;stkvar	_bexp @ sp[(-4)+1]
 40779  016D1A  0EFD               	movlw	-3
 40780  016D1C  50E3               	movf	plusw1,w,c
 40781  016D1E  B4D8               	btfsc	status,2,c
 40782  016D20  D027               	goto	l9758
 40783                           
 40784                           ;stkvar	_bexp @ sp[(-4)+1]
 40785  016D22  0EFD               	movlw	-3
 40786  016D24  28E3               	incf	plusw1,w,c
 40787  016D26  A4D8               	btfss	status,2,c
 40788  016D28  D018               	goto	l9754
 40789  016D2A  0E00               	movlw	0
 40790  016D2C  6E32               	movwf	(btemp+8)^0,c
 40791  016D2E  0E00               	movlw	0
 40792  016D30  6E33               	movwf	(btemp+9)^0,c
 40793  016D32  0E00               	movlw	0
 40794  016D34  6E34               	movwf	(btemp+10)^0,c
 40795  016D36  0E00               	movlw	0
 40796  016D38  6E35               	movwf	(btemp+11)^0,c
 40797                           
 40798                           ;stkvar	_b @ sp[(-4)+-4]
 40799  016D3A  0EF8               	movlw	-8
 40800  016D3C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40801  016D42  0EF9               	movlw	-7
 40802  016D44  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40803  016D4A  0EFA               	movlw	-6
 40804  016D4C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40805  016D52  0EFB               	movlw	-5
 40806  016D54  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40807  016D5A                     l9754:
 40808                           
 40809                           ;stkvar	_b @ sp[(-4)+-4]
 40810  016D5A  0EFA               	movlw	-6
 40811  016D5C  8EE3               	bsf	plusw1,7,c
 40812                           
 40813                           ;stkvar	_b @ sp[(-4)+-4]
 40814  016D5E  0EFB               	movlw	251
 40815  016D60  24E1               	addwf	fsr1l,w,c
 40816  016D62  6ED9               	movwf	fsr2l,c
 40817  016D64  0EFF               	movlw	255
 40818  016D66  20E2               	addwfc	fsr1h,w,c
 40819  016D68  6EDA               	movwf	fsr2h,c
 40820  016D6A  0E00               	movlw	0
 40821  016D6C  6EDF               	movwf	indf2,c
 40822  016D6E  D018               	goto	l9760
 40823  016D70                     l9758:
 40824  016D70  0E00               	movlw	0
 40825  016D72  6E32               	movwf	(btemp+8)^0,c
 40826  016D74  0E00               	movlw	0
 40827  016D76  6E33               	movwf	(btemp+9)^0,c
 40828  016D78  0E00               	movlw	0
 40829  016D7A  6E34               	movwf	(btemp+10)^0,c
 40830  016D7C  0E00               	movlw	0
 40831  016D7E  6E35               	movwf	(btemp+11)^0,c
 40832                           
 40833                           ;stkvar	_b @ sp[(-4)+-4]
 40834  016D80  0EF8               	movlw	-8
 40835  016D82  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40836  016D88  0EF9               	movlw	-7
 40837  016D8A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40838  016D90  0EFA               	movlw	-6
 40839  016D92  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40840  016D98  0EFB               	movlw	-5
 40841  016D9A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40842  016DA0                     l9760:
 40843                           
 40844                           ;stkvar	_a @ sp[(-4)+-8]
 40845  016DA0  0EF7               	movlw	247
 40846  016DA2  24E1               	addwf	fsr1l,w,c
 40847  016DA4  6ED9               	movwf	fsr2l,c
 40848  016DA6  0EFF               	movlw	255
 40849  016DA8  20E2               	addwfc	fsr1h,w,c
 40850  016DAA  6EDA               	movwf	fsr2h,c
 40851  016DAC  50DF               	movf	indf2,w,c
 40852  016DAE  6E35               	movwf	(btemp+11)^0,c
 40853  016DB0  0E80               	movlw	128
 40854  016DB2  1635               	andwf	(btemp+11)^0,f,c
 40855                           
 40856                           ;stkvar	_aexp @ sp[(-4)+2]
 40857  016DB4  0EFE               	movlw	-2
 40858  016DB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40859                           
 40860                           ;stkvar	_signs @ sp[(-4)+3]
 40861                           ;stkvar	_aexp @ sp[(-4)+2]
 40862  016DBC  50E1               	movf	fsr1l,w,c
 40863  016DBE  0FFE               	addlw	-2
 40864  016DC0  6ED9               	movwf	fsr2l,c
 40865  016DC2  50E2               	movf	fsr1h,w,c
 40866  016DC4  6EDA               	movwf	fsr2h,c
 40867  016DC6  0EFF               	movlw	255
 40868  016DC8  22DA               	addwfc	fsr2h,f,c
 40869  016DCA  0EFF               	movlw	-1
 40870  016DCC  50E3               	movf	plusw1,w,c
 40871  016DCE  18DE               	xorwf	postinc2,w,c
 40872  016DD0  B4D8               	btfsc	status,2,c
 40873  016DD2  D002               	goto	l9766
 40874                           
 40875                           ;stkvar	_signs @ sp[(-4)+3]
 40876  016DD4  0EFF               	movlw	-1
 40877  016DD6  8CE3               	bsf	plusw1,6,c
 40878  016DD8                     l9766:
 40879                           
 40880                           ;stkvar	_a @ sp[(-4)+-8]
 40881  016DD8  0EF7               	movlw	247
 40882  016DDA  24E1               	addwf	fsr1l,w,c
 40883  016DDC  6ED9               	movwf	fsr2l,c
 40884  016DDE  0EFF               	movlw	255
 40885  016DE0  20E2               	addwfc	fsr1h,w,c
 40886  016DE2  6EDA               	movwf	fsr2h,c
 40887  016DE4  50DF               	movf	indf2,w,c
 40888  016DE6  6E35               	movwf	(btemp+11)^0,c
 40889  016DE8  90D8               	bcf	status,0,c
 40890  016DEA  3435               	rlcf	(btemp+11)^0,w,c
 40891  016DEC  6E34               	movwf	(btemp+10)^0,c
 40892                           
 40893                           ;stkvar	_aexp @ sp[(-4)+2]
 40894  016DEE  0EFE               	movlw	-2
 40895  016DF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40896                           
 40897                           ;stkvar	_a @ sp[(-4)+-8]
 40898  016DF6  0EF6               	movlw	246
 40899  016DF8  24E1               	addwf	fsr1l,w,c
 40900  016DFA  6ED9               	movwf	fsr2l,c
 40901  016DFC  0EFF               	movlw	255
 40902  016DFE  20E2               	addwfc	fsr1h,w,c
 40903  016E00  6EDA               	movwf	fsr2h,c
 40904  016E02  AEDF               	btfss	indf2,7,c
 40905  016E04  D002               	goto	l9772
 40906                           
 40907                           ;stkvar	_aexp @ sp[(-4)+2]
 40908  016E06  0EFE               	movlw	-2
 40909  016E08  80E3               	bsf	plusw1,0,c
 40910  016E0A                     l9772:
 40911                           
 40912                           ;stkvar	_aexp @ sp[(-4)+2]
 40913  016E0A  0EFE               	movlw	-2
 40914  016E0C  50E3               	movf	plusw1,w,c
 40915  016E0E  B4D8               	btfsc	status,2,c
 40916  016E10  D027               	goto	l9782
 40917                           
 40918                           ;stkvar	_aexp @ sp[(-4)+2]
 40919  016E12  0EFE               	movlw	-2
 40920  016E14  28E3               	incf	plusw1,w,c
 40921  016E16  A4D8               	btfss	status,2,c
 40922  016E18  D018               	goto	l9778
 40923  016E1A  0E00               	movlw	0
 40924  016E1C  6E32               	movwf	(btemp+8)^0,c
 40925  016E1E  0E00               	movlw	0
 40926  016E20  6E33               	movwf	(btemp+9)^0,c
 40927  016E22  0E00               	movlw	0
 40928  016E24  6E34               	movwf	(btemp+10)^0,c
 40929  016E26  0E00               	movlw	0
 40930  016E28  6E35               	movwf	(btemp+11)^0,c
 40931                           
 40932                           ;stkvar	_a @ sp[(-4)+-8]
 40933  016E2A  0EF4               	movlw	-12
 40934  016E2C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40935  016E32  0EF5               	movlw	-11
 40936  016E34  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40937  016E3A  0EF6               	movlw	-10
 40938  016E3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40939  016E42  0EF7               	movlw	-9
 40940  016E44  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40941  016E4A                     l9778:
 40942                           
 40943                           ;stkvar	_a @ sp[(-4)+-8]
 40944  016E4A  0EF6               	movlw	-10
 40945  016E4C  8EE3               	bsf	plusw1,7,c
 40946                           
 40947                           ;stkvar	_a @ sp[(-4)+-8]
 40948  016E4E  0EF7               	movlw	247
 40949  016E50  24E1               	addwf	fsr1l,w,c
 40950  016E52  6ED9               	movwf	fsr2l,c
 40951  016E54  0EFF               	movlw	255
 40952  016E56  20E2               	addwfc	fsr1h,w,c
 40953  016E58  6EDA               	movwf	fsr2h,c
 40954  016E5A  0E00               	movlw	0
 40955  016E5C  6EDF               	movwf	indf2,c
 40956  016E5E  D018               	goto	l9784
 40957  016E60                     l9782:
 40958  016E60  0E00               	movlw	0
 40959  016E62  6E32               	movwf	(btemp+8)^0,c
 40960  016E64  0E00               	movlw	0
 40961  016E66  6E33               	movwf	(btemp+9)^0,c
 40962  016E68  0E00               	movlw	0
 40963  016E6A  6E34               	movwf	(btemp+10)^0,c
 40964  016E6C  0E00               	movlw	0
 40965  016E6E  6E35               	movwf	(btemp+11)^0,c
 40966                           
 40967                           ;stkvar	_a @ sp[(-4)+-8]
 40968  016E70  0EF4               	movlw	-12
 40969  016E72  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40970  016E78  0EF5               	movlw	-11
 40971  016E7A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40972  016E80  0EF6               	movlw	-10
 40973  016E82  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40974  016E88  0EF7               	movlw	-9
 40975  016E8A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40976  016E90                     l9784:
 40977                           
 40978                           ;stkvar	_bexp @ sp[(-4)+1]
 40979                           ;stkvar	_aexp @ sp[(-4)+2]
 40980  016E90  50E1               	movf	fsr1l,w,c
 40981  016E92  0FFE               	addlw	-2
 40982  016E94  6ED9               	movwf	fsr2l,c
 40983  016E96  50E2               	movf	fsr1h,w,c
 40984  016E98  6EDA               	movwf	fsr2h,c
 40985  016E9A  0EFF               	movlw	255
 40986  016E9C  22DA               	addwfc	fsr2h,f,c
 40987  016E9E  0EFD               	movlw	-3
 40988  016EA0  50E3               	movf	plusw1,w,c
 40989  016EA2  5CDE               	subwf	postinc2,w,c
 40990  016EA4  B0D8               	btfsc	status,0,c
 40991  016EA6  D0A4               	goto	l9820
 40992                           
 40993                           ;stkvar	_signs @ sp[(-4)+3]
 40994  016EA8  0EFF               	movlw	-1
 40995  016EAA  ACE3               	btfss	plusw1,6,c
 40996  016EAC  D002               	goto	l9790
 40997                           
 40998                           ;stkvar	_signs @ sp[(-4)+3]
 40999  016EAE  0EFF               	movlw	-1
 41000  016EB0  7EE3               	btg	plusw1,7,c
 41001  016EB2                     l9790:
 41002                           
 41003                           ;stkvar	_bexp @ sp[(-4)+1]
 41004                           ;stkvar	_grs @ sp[(-4)+0]
 41005  016EB2  0EFD               	movlw	-3
 41006  016EB4  006F FF8C  F02A    	movff	plusw1,btemp
 41007  016EBA  0EFC               	movlw	-4
 41008  016EBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41009                           
 41010                           ;stkvar	_aexp @ sp[(-4)+2]
 41011                           ;stkvar	_bexp @ sp[(-4)+1]
 41012  016EC2  0EFE               	movlw	-2
 41013  016EC4  006F FF8C  F02A    	movff	plusw1,btemp
 41014  016ECA  0EFD               	movlw	-3
 41015  016ECC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41016                           
 41017                           ;stkvar	_grs @ sp[(-4)+0]
 41018                           ;stkvar	_aexp @ sp[(-4)+2]
 41019  016ED2  0EFC               	movlw	-4
 41020  016ED4  006F FF8C  F02A    	movff	plusw1,btemp
 41021  016EDA  0EFE               	movlw	-2
 41022  016EDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41023                           
 41024                           ;stkvar	_b @ sp[(-4)+-4]
 41025                           ;stkvar	_grs @ sp[(-4)+0]
 41026  016EE2  0EF8               	movlw	-8
 41027  016EE4  006F FF8C  F02A    	movff	plusw1,btemp
 41028  016EEA  0EFC               	movlw	-4
 41029  016EEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41030                           
 41031                           ;stkvar	_a @ sp[(-4)+-8]
 41032                           ;stkvar	_b @ sp[(-4)+-4]
 41033  016EF2  0EF4               	movlw	-12
 41034  016EF4  006F FF8C  F02A    	movff	plusw1,btemp
 41035  016EFA  0EF8               	movlw	-8
 41036  016EFC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41037                           
 41038                           ;stkvar	_grs @ sp[(-4)+0]
 41039                           ;stkvar	_a @ sp[(-4)+-8]
 41040  016F02  0EFC               	movlw	-4
 41041  016F04  006F FF8C  F02A    	movff	plusw1,btemp
 41042  016F0A  0EF4               	movlw	-12
 41043  016F0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41044                           
 41045                           ;stkvar	_b @ sp[(-4)+-4]
 41046  016F12  0EF9               	movlw	249
 41047  016F14  24E1               	addwf	fsr1l,w,c
 41048  016F16  6ED9               	movwf	fsr2l,c
 41049  016F18  0EFF               	movlw	255
 41050  016F1A  20E2               	addwfc	fsr1h,w,c
 41051  016F1C  6EDA               	movwf	fsr2h,c
 41052  016F1E  50DF               	movf	indf2,w,c
 41053  016F20  6E35               	movwf	(btemp+11)^0,c
 41054                           
 41055                           ;stkvar	_grs @ sp[(-4)+0]
 41056  016F22  0EFC               	movlw	-4
 41057  016F24  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41058                           
 41059                           ;stkvar	_a @ sp[(-4)+-8]
 41060  016F2A  0EF5               	movlw	245
 41061  016F2C  24E1               	addwf	fsr1l,w,c
 41062  016F2E  6ED9               	movwf	fsr2l,c
 41063  016F30  0EFF               	movlw	255
 41064  016F32  20E2               	addwfc	fsr1h,w,c
 41065  016F34  6EDA               	movwf	fsr2h,c
 41066                           
 41067                           ;stkvar	_b @ sp[(-4)+-4]
 41068  016F36  0EF9               	movlw	249
 41069  016F38  24E1               	addwf	fsr1l,w,c
 41070  016F3A  6EE9               	movwf	fsr0l,c
 41071  016F3C  0EFF               	movlw	255
 41072  016F3E  20E2               	addwfc	fsr1h,w,c
 41073  016F40  6EEA               	movwf	fsr0h,c
 41074  016F42  006F FF7F FFEF     	movff	indf2,indf0
 41075                           
 41076                           ;stkvar	_grs @ sp[(-4)+0]
 41077                           ;stkvar	_a @ sp[(-4)+-8]
 41078  016F48  0EF5               	movlw	245
 41079  016F4A  24E1               	addwf	fsr1l,w,c
 41080  016F4C  6ED9               	movwf	fsr2l,c
 41081  016F4E  0EFF               	movlw	255
 41082  016F50  20E2               	addwfc	fsr1h,w,c
 41083  016F52  6EDA               	movwf	fsr2h,c
 41084  016F54  0EFC               	movlw	-4
 41085  016F56  006F FF8F FFDF     	movff	plusw1,indf2
 41086                           
 41087                           ;stkvar	_b @ sp[(-4)+-4]
 41088  016F5C  0EFA               	movlw	250
 41089  016F5E  24E1               	addwf	fsr1l,w,c
 41090  016F60  6ED9               	movwf	fsr2l,c
 41091  016F62  0EFF               	movlw	255
 41092  016F64  20E2               	addwfc	fsr1h,w,c
 41093  016F66  6EDA               	movwf	fsr2h,c
 41094  016F68  50DF               	movf	indf2,w,c
 41095  016F6A  6E35               	movwf	(btemp+11)^0,c
 41096                           
 41097                           ;stkvar	_grs @ sp[(-4)+0]
 41098  016F6C  0EFC               	movlw	-4
 41099  016F6E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41100                           
 41101                           ;stkvar	_a @ sp[(-4)+-8]
 41102  016F74  0EF6               	movlw	246
 41103  016F76  24E1               	addwf	fsr1l,w,c
 41104  016F78  6ED9               	movwf	fsr2l,c
 41105  016F7A  0EFF               	movlw	255
 41106  016F7C  20E2               	addwfc	fsr1h,w,c
 41107  016F7E  6EDA               	movwf	fsr2h,c
 41108                           
 41109                           ;stkvar	_b @ sp[(-4)+-4]
 41110  016F80  0EFA               	movlw	250
 41111  016F82  24E1               	addwf	fsr1l,w,c
 41112  016F84  6EE9               	movwf	fsr0l,c
 41113  016F86  0EFF               	movlw	255
 41114  016F88  20E2               	addwfc	fsr1h,w,c
 41115  016F8A  6EEA               	movwf	fsr0h,c
 41116  016F8C  006F FF7F FFEF     	movff	indf2,indf0
 41117                           
 41118                           ;stkvar	_grs @ sp[(-4)+0]
 41119                           ;stkvar	_a @ sp[(-4)+-8]
 41120  016F92  0EF6               	movlw	246
 41121  016F94  24E1               	addwf	fsr1l,w,c
 41122  016F96  6ED9               	movwf	fsr2l,c
 41123  016F98  0EFF               	movlw	255
 41124  016F9A  20E2               	addwfc	fsr1h,w,c
 41125  016F9C  6EDA               	movwf	fsr2h,c
 41126  016F9E  0EFC               	movlw	-4
 41127  016FA0  006F FF8F FFDF     	movff	plusw1,indf2
 41128                           
 41129                           ;stkvar	_b @ sp[(-4)+-4]
 41130  016FA6  0EFB               	movlw	251
 41131  016FA8  24E1               	addwf	fsr1l,w,c
 41132  016FAA  6ED9               	movwf	fsr2l,c
 41133  016FAC  0EFF               	movlw	255
 41134  016FAE  20E2               	addwfc	fsr1h,w,c
 41135  016FB0  6EDA               	movwf	fsr2h,c
 41136  016FB2  50DF               	movf	indf2,w,c
 41137  016FB4  6E35               	movwf	(btemp+11)^0,c
 41138                           
 41139                           ;stkvar	_grs @ sp[(-4)+0]
 41140  016FB6  0EFC               	movlw	-4
 41141  016FB8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41142                           
 41143                           ;stkvar	_a @ sp[(-4)+-8]
 41144  016FBE  0EF7               	movlw	247
 41145  016FC0  24E1               	addwf	fsr1l,w,c
 41146  016FC2  6ED9               	movwf	fsr2l,c
 41147  016FC4  0EFF               	movlw	255
 41148  016FC6  20E2               	addwfc	fsr1h,w,c
 41149  016FC8  6EDA               	movwf	fsr2h,c
 41150                           
 41151                           ;stkvar	_b @ sp[(-4)+-4]
 41152  016FCA  0EFB               	movlw	251
 41153  016FCC  24E1               	addwf	fsr1l,w,c
 41154  016FCE  6EE9               	movwf	fsr0l,c
 41155  016FD0  0EFF               	movlw	255
 41156  016FD2  20E2               	addwfc	fsr1h,w,c
 41157  016FD4  6EEA               	movwf	fsr0h,c
 41158  016FD6  006F FF7F FFEF     	movff	indf2,indf0
 41159                           
 41160                           ;stkvar	_grs @ sp[(-4)+0]
 41161                           ;stkvar	_a @ sp[(-4)+-8]
 41162  016FDC  0EF7               	movlw	247
 41163  016FDE  24E1               	addwf	fsr1l,w,c
 41164  016FE0  6ED9               	movwf	fsr2l,c
 41165  016FE2  0EFF               	movlw	255
 41166  016FE4  20E2               	addwfc	fsr1h,w,c
 41167  016FE6  6EDA               	movwf	fsr2h,c
 41168  016FE8  0EFC               	movlw	-4
 41169  016FEA  006F FF8F FFDF     	movff	plusw1,indf2
 41170  016FF0                     l9820:
 41171                           
 41172                           ;stkvar	_grs @ sp[(-4)+0]
 41173  016FF0  0EFC               	movlw	-4
 41174  016FF2  6AE3               	clrf	plusw1,c
 41175                           
 41176                           ;stkvar	_aexp @ sp[(-4)+2]
 41177  016FF4  0EFE               	movlw	-2
 41178  016FF6  50E3               	movf	plusw1,w,c
 41179  016FF8  6E34               	movwf	(btemp+10)^0,c
 41180  016FFA  6A35               	clrf	(btemp+11)^0,c
 41181                           
 41182                           ;stkvar	_bexp @ sp[(-4)+1]
 41183  016FFC  0EFD               	movlw	-3
 41184  016FFE  50E3               	movf	plusw1,w,c
 41185  017000  5E34               	subwf	(btemp+10)^0,f,c
 41186  017002  0E00               	movlw	0
 41187  017004  5A35               	subwfb	(btemp+11)^0,f,c
 41188  017006  BE35               	btfsc	(btemp+11)^0,7,c
 41189  017008  D062               	goto	l9844
 41190  01700A  5035               	movf	(btemp+11)^0,w,c
 41191  01700C  E104               	bnz	u7260
 41192  01700E  0E1A               	movlw	26
 41193  017010  5C34               	subwf	(btemp+10)^0,w,c
 41194  017012  A0D8               	btfss	status,0,c
 41195  017014  D05C               	goto	l9844
 41196  017016                     u7260:
 41197                           
 41198                           ;stkvar	_b @ sp[(-4)+-4]
 41199  017016  0EF8               	movlw	-8
 41200  017018  50E3               	movf	plusw1,w,c
 41201  01701A  E10A               	bnz	u7271
 41202  01701C  0EF9               	movlw	-7
 41203  01701E  50E3               	movf	plusw1,w,c
 41204  017020  E107               	bnz	u7271
 41205  017022  0EFA               	movlw	-6
 41206  017024  50E3               	movf	plusw1,w,c
 41207  017026  E104               	bnz	u7271
 41208  017028  0EFB               	movlw	-5
 41209  01702A  50E3               	movf	plusw1,w,c
 41210  01702C  B4D8               	btfsc	status,2,c
 41211  01702E  D003               	goto	u7270
 41212  017030                     u7271:
 41213  017030  6A35               	clrf	(btemp+11)^0,c
 41214  017032  2A35               	incf	(btemp+11)^0,f,c
 41215  017034  D001               	goto	u7288
 41216  017036                     u7270:
 41217  017036  6A35               	clrf	(btemp+11)^0,c
 41218  017038                     u7288:
 41219                           
 41220                           ;stkvar	_grs @ sp[(-4)+0]
 41221  017038  0EFC               	movlw	-4
 41222  01703A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41223                           
 41224                           ;stkvar	_b @ sp[(-4)+-4]
 41225  017040  0EF8               	movlw	-8
 41226  017042  6AE3               	clrf	plusw1,c
 41227  017044  0EF9               	movlw	-7
 41228  017046  6AE3               	clrf	plusw1,c
 41229  017048  0EFA               	movlw	-6
 41230  01704A  6AE3               	clrf	plusw1,c
 41231  01704C  0EFB               	movlw	-5
 41232  01704E  6AE3               	clrf	plusw1,c
 41233                           
 41234                           ;stkvar	_aexp @ sp[(-4)+2]
 41235                           ;stkvar	_bexp @ sp[(-4)+1]
 41236  017050  0EFE               	movlw	-2
 41237  017052  006F FF8C  F02A    	movff	plusw1,btemp
 41238  017058  0EFD               	movlw	-3
 41239  01705A  0060  F0AB  FFE3   	movff	btemp,plusw1
 41240  017060  D042               	goto	u7320
 41241  017062                     l9830:
 41242                           
 41243                           ;stkvar	_grs @ sp[(-4)+0]
 41244  017062  0EFC               	movlw	-4
 41245  017064  A0E3               	btfss	plusw1,0,c
 41246  017066  D00D               	goto	l9834
 41247                           
 41248                           ;stkvar	_grs @ sp[(-4)+0]
 41249  017068  0EFC               	movlw	-4
 41250  01706A  006F FF8C  F035    	movff	plusw1,btemp+11
 41251  017070  90D8               	bcf	status,0,c
 41252  017072  3235               	rrcf	(btemp+11)^0,f,c
 41253  017074  0E01               	movlw	1
 41254  017076  1235               	iorwf	(btemp+11)^0,f,c
 41255                           
 41256                           ;stkvar	_grs @ sp[(-4)+0]
 41257  017078  0EFC               	movlw	-4
 41258  01707A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41259  017080  D009               	goto	l9836
 41260  017082                     l9834:
 41261                           
 41262                           ;stkvar	_grs @ sp[(-4)+0]
 41263  017082  50E1               	movf	fsr1l,w,c
 41264  017084  0FFC               	addlw	-4
 41265  017086  6ED9               	movwf	fsr2l,c
 41266  017088  50E2               	movf	fsr1h,w,c
 41267  01708A  6EDA               	movwf	fsr2h,c
 41268  01708C  0EFF               	movlw	255
 41269  01708E  22DA               	addwfc	fsr2h,f,c
 41270  017090  90D8               	bcf	status,0,c
 41271  017092  32DF               	rrcf	indf2,f,c
 41272  017094                     l9836:
 41273                           
 41274                           ;stkvar	_b @ sp[(-4)+-4]
 41275  017094  0EF8               	movlw	-8
 41276  017096  A0E3               	btfss	plusw1,0,c
 41277  017098  D002               	goto	l9840
 41278                           
 41279                           ;stkvar	_grs @ sp[(-4)+0]
 41280  01709A  0EFC               	movlw	-4
 41281  01709C  8EE3               	bsf	plusw1,7,c
 41282  01709E                     l9840:
 41283  01709E  0E01               	movlw	1
 41284  0170A0  6E35               	movwf	(btemp+11)^0,c
 41285                           
 41286                           ;stkvar	_b @ sp[(-4)+-4]
 41287  0170A2  50E1               	movf	fsr1l,w,c
 41288  0170A4  0FF8               	addlw	-8
 41289  0170A6  6ED9               	movwf	fsr2l,c
 41290  0170A8  50E2               	movf	fsr1h,w,c
 41291  0170AA  6EDA               	movwf	fsr2h,c
 41292  0170AC  0EFF               	movlw	255
 41293  0170AE  22DA               	addwfc	fsr2h,f,c
 41294  0170B0  2835               	incf	(btemp+11)^0,w,c
 41295  0170B2  52DE               	movf	postinc2,f,c
 41296  0170B4  D008               	goto	u7310
 41297  0170B6                     u7315:
 41298  0170B6  52DE               	movf	postinc2,f,c
 41299  0170B8  90D8               	bcf	status,0,c
 41300  0170BA  BEDC               	btfsc	preinc2,7,c
 41301  0170BC  80D8               	bsf	status,0,c
 41302  0170BE  32DD               	rrcf	postdec2,f,c
 41303  0170C0  32DD               	rrcf	postdec2,f,c
 41304  0170C2  32DD               	rrcf	postdec2,f,c
 41305  0170C4  32DE               	rrcf	postinc2,f,c
 41306  0170C6                     u7310:
 41307  0170C6  2EE8               	decfsz	wreg,f,c
 41308  0170C8  D7F6               	goto	u7315
 41309                           
 41310                           ;stkvar	_bexp @ sp[(-4)+1]
 41311  0170CA  0EFD               	movlw	-3
 41312  0170CC  2AE3               	incf	plusw1,f,c
 41313  0170CE                     l9844:
 41314                           
 41315                           ;stkvar	_aexp @ sp[(-4)+2]
 41316                           ;stkvar	_bexp @ sp[(-4)+1]
 41317  0170CE  50E1               	movf	fsr1l,w,c
 41318  0170D0  0FFD               	addlw	-3
 41319  0170D2  6ED9               	movwf	fsr2l,c
 41320  0170D4  50E2               	movf	fsr1h,w,c
 41321  0170D6  6EDA               	movwf	fsr2h,c
 41322  0170D8  0EFF               	movlw	255
 41323  0170DA  22DA               	addwfc	fsr2h,f,c
 41324  0170DC  0EFE               	movlw	-2
 41325  0170DE  50E3               	movf	plusw1,w,c
 41326  0170E0  5CDE               	subwf	postinc2,w,c
 41327  0170E2  A0D8               	btfss	status,0,c
 41328  0170E4  D7BE               	goto	l9830
 41329  0170E6                     u7320:
 41330                           
 41331                           ;stkvar	_signs @ sp[(-4)+3]
 41332  0170E6  0EFF               	movlw	-1
 41333  0170E8  BCE3               	btfsc	plusw1,6,c
 41334  0170EA  D066               	goto	l9872
 41335                           
 41336                           ;stkvar	_bexp @ sp[(-4)+1]
 41337  0170EC  0EFD               	movlw	-3
 41338  0170EE  50E3               	movf	plusw1,w,c
 41339  0170F0  B4D8               	btfsc	status,2,c
 41340  0170F2  D0F2               	goto	u7420
 41341                           
 41342                           ;stkvar	_a @ sp[(-4)+-8]
 41343                           ;stkvar	_b @ sp[(-4)+-4]
 41344  0170F4  0EF8               	movlw	-8
 41345  0170F6  50E3               	movf	plusw1,w,c
 41346  0170F8  6E2A               	movwf	btemp^0,c
 41347  0170FA  0EF4               	movlw	-12
 41348  0170FC  50E3               	movf	plusw1,w,c
 41349  0170FE  262A               	addwf	btemp^0,f,c
 41350  017100  0EF8               	movlw	-8
 41351  017102  0060  F0AB  FFE3   	movff	btemp,plusw1
 41352  017108  0EF9               	movlw	-7
 41353  01710A  50E3               	movf	plusw1,w,c
 41354  01710C  6E2A               	movwf	btemp^0,c
 41355  01710E  0EF5               	movlw	-11
 41356  017110  50E3               	movf	plusw1,w,c
 41357  017112  222A               	addwfc	btemp^0,f,c
 41358  017114  0EF9               	movlw	-7
 41359  017116  0060  F0AB  FFE3   	movff	btemp,plusw1
 41360  01711C  0EFA               	movlw	-6
 41361  01711E  50E3               	movf	plusw1,w,c
 41362  017120  6E2A               	movwf	btemp^0,c
 41363  017122  0EF6               	movlw	-10
 41364  017124  50E3               	movf	plusw1,w,c
 41365  017126  222A               	addwfc	btemp^0,f,c
 41366  017128  0EFA               	movlw	-6
 41367  01712A  0060  F0AB  FFE3   	movff	btemp,plusw1
 41368  017130  0EFB               	movlw	-5
 41369  017132  50E3               	movf	plusw1,w,c
 41370  017134  6E2A               	movwf	btemp^0,c
 41371  017136  0EF7               	movlw	-9
 41372  017138  50E3               	movf	plusw1,w,c
 41373  01713A  222A               	addwfc	btemp^0,f,c
 41374  01713C  0EFB               	movlw	-5
 41375  01713E  0060  F0AB  FFE3   	movff	btemp,plusw1
 41376                           
 41377                           ;stkvar	_b @ sp[(-4)+-4]
 41378  017144  0EFB               	movlw	-5
 41379  017146  A0E3               	btfss	plusw1,0,c
 41380  017148  D101               	goto	u7460
 41381                           
 41382                           ;stkvar	_grs @ sp[(-4)+0]
 41383  01714A  0EFC               	movlw	-4
 41384  01714C  A0E3               	btfss	plusw1,0,c
 41385  01714E  D00D               	goto	l9862
 41386                           
 41387                           ;stkvar	_grs @ sp[(-4)+0]
 41388  017150  0EFC               	movlw	-4
 41389  017152  006F FF8C  F035    	movff	plusw1,btemp+11
 41390  017158  90D8               	bcf	status,0,c
 41391  01715A  3235               	rrcf	(btemp+11)^0,f,c
 41392  01715C  0E01               	movlw	1
 41393  01715E  1235               	iorwf	(btemp+11)^0,f,c
 41394                           
 41395                           ;stkvar	_grs @ sp[(-4)+0]
 41396  017160  0EFC               	movlw	-4
 41397  017162  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41398  017168  D009               	goto	l9864
 41399  01716A                     l9862:
 41400                           
 41401                           ;stkvar	_grs @ sp[(-4)+0]
 41402  01716A  50E1               	movf	fsr1l,w,c
 41403  01716C  0FFC               	addlw	-4
 41404  01716E  6ED9               	movwf	fsr2l,c
 41405  017170  50E2               	movf	fsr1h,w,c
 41406  017172  6EDA               	movwf	fsr2h,c
 41407  017174  0EFF               	movlw	255
 41408  017176  22DA               	addwfc	fsr2h,f,c
 41409  017178  90D8               	bcf	status,0,c
 41410  01717A  32DF               	rrcf	indf2,f,c
 41411  01717C                     l9864:
 41412                           
 41413                           ;stkvar	_b @ sp[(-4)+-4]
 41414  01717C  0EF8               	movlw	-8
 41415  01717E  A0E3               	btfss	plusw1,0,c
 41416  017180  D002               	goto	l9868
 41417                           
 41418                           ;stkvar	_grs @ sp[(-4)+0]
 41419  017182  0EFC               	movlw	-4
 41420  017184  8EE3               	bsf	plusw1,7,c
 41421  017186                     l9868:
 41422  017186  0E01               	movlw	1
 41423  017188  6E35               	movwf	(btemp+11)^0,c
 41424                           
 41425                           ;stkvar	_b @ sp[(-4)+-4]
 41426  01718A  50E1               	movf	fsr1l,w,c
 41427  01718C  0FF8               	addlw	-8
 41428  01718E  6ED9               	movwf	fsr2l,c
 41429  017190  50E2               	movf	fsr1h,w,c
 41430  017192  6EDA               	movwf	fsr2h,c
 41431  017194  0EFF               	movlw	255
 41432  017196  22DA               	addwfc	fsr2h,f,c
 41433  017198  2835               	incf	(btemp+11)^0,w,c
 41434  01719A  52DE               	movf	postinc2,f,c
 41435  01719C  D008               	goto	u7380
 41436  01719E                     u7385:
 41437  01719E  52DE               	movf	postinc2,f,c
 41438  0171A0  90D8               	bcf	status,0,c
 41439  0171A2  BEDC               	btfsc	preinc2,7,c
 41440  0171A4  80D8               	bsf	status,0,c
 41441  0171A6  32DD               	rrcf	postdec2,f,c
 41442  0171A8  32DD               	rrcf	postdec2,f,c
 41443  0171AA  32DD               	rrcf	postdec2,f,c
 41444  0171AC  32DE               	rrcf	postinc2,f,c
 41445  0171AE                     u7380:
 41446  0171AE  2EE8               	decfsz	wreg,f,c
 41447  0171B0  D7F6               	goto	u7385
 41448                           
 41449                           ;stkvar	_bexp @ sp[(-4)+1]
 41450  0171B2  0EFD               	movlw	-3
 41451  0171B4  2AE3               	incf	plusw1,f,c
 41452  0171B6  D0CA               	goto	u7460
 41453  0171B8                     l9872:
 41454                           
 41455                           ;stkvar	_a @ sp[(-4)+-8]
 41456                           ;stkvar	_b @ sp[(-4)+-4]
 41457  0171B8  50E1               	movf	fsr1l,w,c
 41458  0171BA  0FF8               	addlw	-8
 41459  0171BC  6ED9               	movwf	fsr2l,c
 41460  0171BE  50E2               	movf	fsr1h,w,c
 41461  0171C0  6EDA               	movwf	fsr2h,c
 41462  0171C2  0EFF               	movlw	255
 41463  0171C4  22DA               	addwfc	fsr2h,f,c
 41464  0171C6  0EF4               	movlw	-12
 41465  0171C8  50E3               	movf	plusw1,w,c
 41466  0171CA  5CDE               	subwf	postinc2,w,c
 41467  0171CC  0EF5               	movlw	-11
 41468  0171CE  50E3               	movf	plusw1,w,c
 41469  0171D0  58DE               	subwfb	postinc2,w,c
 41470  0171D2  0EF6               	movlw	-10
 41471  0171D4  50E3               	movf	plusw1,w,c
 41472  0171D6  58DE               	subwfb	postinc2,w,c
 41473  0171D8  50DE               	movf	postinc2,w,c
 41474  0171DA  0A80               	xorlw	128
 41475  0171DC  6E2A               	movwf	btemp^0,c
 41476  0171DE  0EF7               	movlw	-9
 41477  0171E0  50E3               	movf	plusw1,w,c
 41478  0171E2  0A80               	xorlw	128
 41479  0171E4  582A               	subwfb	btemp^0,w,c
 41480  0171E6  B0D8               	btfsc	status,0,c
 41481  0171E8  D053               	goto	l9884
 41482                           
 41483                           ;stkvar	_b @ sp[(-4)+-4]
 41484                           ;stkvar	_a @ sp[(-4)+-8]
 41485  0171EA  0EF4               	movlw	-12
 41486  0171EC  006F FF8C  F032    	movff	plusw1,btemp+8
 41487  0171F2  0EF5               	movlw	-11
 41488  0171F4  006F FF8C  F033    	movff	plusw1,btemp+9
 41489  0171FA  0EF6               	movlw	-10
 41490  0171FC  006F FF8C  F034    	movff	plusw1,btemp+10
 41491  017202  0EF7               	movlw	-9
 41492  017204  006F FF8C  F035    	movff	plusw1,btemp+11
 41493  01720A  0EF8               	movlw	-8
 41494  01720C  50E3               	movf	plusw1,w,c
 41495  01720E  5E32               	subwf	(btemp+8)^0,f,c
 41496  017210  0EF9               	movlw	-7
 41497  017212  50E3               	movf	plusw1,w,c
 41498  017214  5A33               	subwfb	(btemp+9)^0,f,c
 41499  017216  0EFA               	movlw	-6
 41500  017218  50E3               	movf	plusw1,w,c
 41501  01721A  5A34               	subwfb	(btemp+10)^0,f,c
 41502  01721C  0EFB               	movlw	-5
 41503  01721E  50E3               	movf	plusw1,w,c
 41504  017220  5A35               	subwfb	(btemp+11)^0,f,c
 41505  017222  0EFF               	movlw	255
 41506  017224  2432               	addwf	(btemp+8)^0,w,c
 41507  017226  6E2E               	movwf	(btemp+4)^0,c
 41508  017228  0EFF               	movlw	255
 41509  01722A  2033               	addwfc	(btemp+9)^0,w,c
 41510  01722C  6E2F               	movwf	(btemp+5)^0,c
 41511  01722E  0EFF               	movlw	255
 41512  017230  2034               	addwfc	(btemp+10)^0,w,c
 41513  017232  6E30               	movwf	(btemp+6)^0,c
 41514  017234  0EFF               	movlw	255
 41515  017236  2035               	addwfc	(btemp+11)^0,w,c
 41516  017238  6E31               	movwf	(btemp+7)^0,c
 41517                           
 41518                           ;stkvar	_b @ sp[(-4)+-4]
 41519  01723A  0EF8               	movlw	-8
 41520  01723C  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41521  017242  0EF9               	movlw	-7
 41522  017244  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41523  01724A  0EFA               	movlw	-6
 41524  01724C  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41525  017252  0EFB               	movlw	-5
 41526  017254  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41527                           
 41528                           ;stkvar	_signs @ sp[(-4)+3]
 41529  01725A  0EFF               	movlw	-1
 41530  01725C  7EE3               	btg	plusw1,7,c
 41531                           
 41532                           ;stkvar	_grs @ sp[(-4)+0]
 41533  01725E  0EFC               	movlw	-4
 41534  017260  50E3               	movf	plusw1,w,c
 41535  017262  0800               	sublw	0
 41536  017264  6E35               	movwf	(btemp+11)^0,c
 41537                           
 41538                           ;stkvar	_grs @ sp[(-4)+0]
 41539  017266  0EFC               	movlw	-4
 41540  017268  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41541                           
 41542                           ;stkvar	_grs @ sp[(-4)+0]
 41543  01726E  0EFC               	movlw	-4
 41544  017270  50E3               	movf	plusw1,w,c
 41545  017272  A4D8               	btfss	status,2,c
 41546  017274  D020               	goto	l9886
 41547                           
 41548                           ;stkvar	_b @ sp[(-4)+-4]
 41549  017276  50E1               	movf	fsr1l,w,c
 41550  017278  0FF8               	addlw	-8
 41551  01727A  6ED9               	movwf	fsr2l,c
 41552  01727C  50E2               	movf	fsr1h,w,c
 41553  01727E  6EDA               	movwf	fsr2h,c
 41554  017280  0EFF               	movlw	255
 41555  017282  22DA               	addwfc	fsr2h,f,c
 41556  017284  2ADE               	incf	postinc2,f,c
 41557  017286  0E00               	movlw	0
 41558  017288  22DE               	addwfc	postinc2,f,c
 41559  01728A  22DE               	addwfc	postinc2,f,c
 41560  01728C  22DE               	addwfc	postinc2,f,c
 41561  01728E  D013               	goto	l9886
 41562  017290                     l9884:
 41563                           
 41564                           ;stkvar	_a @ sp[(-4)+-8]
 41565                           ;stkvar	_b @ sp[(-4)+-4]
 41566  017290  50E1               	movf	fsr1l,w,c
 41567  017292  0FF8               	addlw	-8
 41568  017294  6ED9               	movwf	fsr2l,c
 41569  017296  50E2               	movf	fsr1h,w,c
 41570  017298  6EDA               	movwf	fsr2h,c
 41571  01729A  0EFF               	movlw	255
 41572  01729C  22DA               	addwfc	fsr2h,f,c
 41573  01729E  0EF4               	movlw	-12
 41574  0172A0  50E3               	movf	plusw1,w,c
 41575  0172A2  5EDE               	subwf	postinc2,f,c
 41576  0172A4  0EF5               	movlw	-11
 41577  0172A6  50E3               	movf	plusw1,w,c
 41578  0172A8  5ADE               	subwfb	postinc2,f,c
 41579  0172AA  0EF6               	movlw	-10
 41580  0172AC  50E3               	movf	plusw1,w,c
 41581  0172AE  5ADE               	subwfb	postinc2,f,c
 41582  0172B0  0EF7               	movlw	-9
 41583  0172B2  50E3               	movf	plusw1,w,c
 41584  0172B4  5ADE               	subwfb	postinc2,f,c
 41585  0172B6                     l9886:
 41586                           
 41587                           ;stkvar	_b @ sp[(-4)+-4]
 41588  0172B6  0EF8               	movlw	-8
 41589  0172B8  50E3               	movf	plusw1,w,c
 41590  0172BA  E145               	bnz	l9908
 41591  0172BC  0EF9               	movlw	-7
 41592  0172BE  50E3               	movf	plusw1,w,c
 41593  0172C0  E142               	bnz	l9908
 41594  0172C2  0EFA               	movlw	-6
 41595  0172C4  50E3               	movf	plusw1,w,c
 41596  0172C6  E13F               	bnz	l9908
 41597  0172C8  0EFB               	movlw	-5
 41598  0172CA  50E3               	movf	plusw1,w,c
 41599  0172CC  A4D8               	btfss	status,2,c
 41600  0172CE  D03B               	goto	l9908
 41601                           
 41602                           ;stkvar	_grs @ sp[(-4)+0]
 41603  0172D0  0EFC               	movlw	-4
 41604  0172D2  50E3               	movf	plusw1,w,c
 41605  0172D4  A4D8               	btfss	status,2,c
 41606  0172D6  D037               	goto	l9908
 41607  0172D8                     u7420:
 41608  0172D8  0E00               	movlw	0
 41609  0172DA  6E2A               	movwf	btemp^0,c
 41610  0172DC  0E00               	movlw	0
 41611  0172DE  6E2B               	movwf	(btemp+1)^0,c
 41612  0172E0  0E00               	movlw	0
 41613  0172E2  6E2C               	movwf	(btemp+2)^0,c
 41614  0172E4  0E00               	movlw	0
 41615  0172E6  6E2D               	movwf	(btemp+3)^0,c
 41616  0172E8  D0C6               	goto	l3259
 41617  0172EA                     l9894:
 41618                           
 41619                           ;stkvar	_b @ sp[(-4)+-4]
 41620  0172EA  90D8               	bcf	status,0,c
 41621  0172EC  0EF8               	movlw	-8
 41622  0172EE  36E3               	rlcf	plusw1,f,c
 41623  0172F0  0EF9               	movlw	-7
 41624  0172F2  36E3               	rlcf	plusw1,f,c
 41625  0172F4  0EFA               	movlw	-6
 41626  0172F6  36E3               	rlcf	plusw1,f,c
 41627  0172F8  0EFB               	movlw	-5
 41628  0172FA  36E3               	rlcf	plusw1,f,c
 41629                           
 41630                           ;stkvar	_grs @ sp[(-4)+0]
 41631  0172FC  0EFC               	movlw	-4
 41632  0172FE  AEE3               	btfss	plusw1,7,c
 41633  017300  D002               	goto	l3271
 41634                           
 41635                           ;stkvar	_b @ sp[(-4)+-4]
 41636  017302  0EF8               	movlw	-8
 41637  017304  80E3               	bsf	plusw1,0,c
 41638  017306                     l3271:
 41639                           
 41640                           ;stkvar	_grs @ sp[(-4)+0]
 41641  017306  0EFC               	movlw	-4
 41642  017308  A0E3               	btfss	plusw1,0,c
 41643  01730A  D00E               	goto	l9902
 41644                           
 41645                           ;stkvar	_grs @ sp[(-4)+0]
 41646  01730C  0EFC               	movlw	-4
 41647  01730E  006F FF8C  F035    	movff	plusw1,btemp+11
 41648  017314  90D8               	bcf	status,0,c
 41649  017316  3435               	rlcf	(btemp+11)^0,w,c
 41650  017318  6E34               	movwf	(btemp+10)^0,c
 41651  01731A  0E01               	movlw	1
 41652  01731C  1234               	iorwf	(btemp+10)^0,f,c
 41653                           
 41654                           ;stkvar	_grs @ sp[(-4)+0]
 41655  01731E  0EFC               	movlw	-4
 41656  017320  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41657  017326  D009               	goto	l9904
 41658  017328                     l9902:
 41659                           
 41660                           ;stkvar	_grs @ sp[(-4)+0]
 41661  017328  50E1               	movf	fsr1l,w,c
 41662  01732A  0FFC               	addlw	-4
 41663  01732C  6ED9               	movwf	fsr2l,c
 41664  01732E  50E2               	movf	fsr1h,w,c
 41665  017330  6EDA               	movwf	fsr2h,c
 41666  017332  0EFF               	movlw	255
 41667  017334  22DA               	addwfc	fsr2h,f,c
 41668  017336  90D8               	bcf	status,0,c
 41669  017338  36DF               	rlcf	indf2,f,c
 41670  01733A                     l9904:
 41671                           
 41672                           ;stkvar	_bexp @ sp[(-4)+1]
 41673  01733A  0EFD               	movlw	-3
 41674  01733C  50E3               	movf	plusw1,w,c
 41675  01733E  B4D8               	btfsc	status,2,c
 41676  017340  D002               	goto	l9908
 41677                           
 41678                           ;stkvar	_bexp @ sp[(-4)+1]
 41679  017342  0EFD               	movlw	-3
 41680  017344  06E3               	decf	plusw1,f,c
 41681  017346                     l9908:
 41682                           
 41683                           ;stkvar	_b @ sp[(-4)+-4]
 41684  017346  0EFA               	movlw	-6
 41685  017348  AEE3               	btfss	plusw1,7,c
 41686  01734A  D7CF               	goto	l9894
 41687  01734C                     u7460:
 41688                           
 41689                           ;stkvar	_aexp @ sp[(-4)+2]
 41690  01734C  0EFE               	movlw	-2
 41691  01734E  6AE3               	clrf	plusw1,c
 41692                           
 41693                           ;stkvar	_grs @ sp[(-4)+0]
 41694  017350  0EFC               	movlw	-4
 41695  017352  AEE3               	btfss	plusw1,7,c
 41696  017354  D00F               	goto	l9922
 41697                           
 41698                           ;stkvar	_grs @ sp[(-4)+0]
 41699  017356  0EFC               	movlw	-4
 41700  017358  006F FF8C  F035    	movff	plusw1,btemp+11
 41701  01735E  0E7F               	movlw	127
 41702  017360  1635               	andwf	(btemp+11)^0,f,c
 41703  017362  B4D8               	btfsc	status,2,c
 41704  017364  D004               	goto	l9918
 41705  017366                     u7480:
 41706                           
 41707                           ;stkvar	_aexp @ sp[(-4)+2]
 41708  017366  0EFE               	movlw	-2
 41709  017368  6AE3               	clrf	plusw1,c
 41710  01736A  2AE3               	incf	plusw1,f,c
 41711  01736C  D003               	goto	l9922
 41712  01736E                     l9918:
 41713                           
 41714                           ;stkvar	_b @ sp[(-4)+-4]
 41715  01736E  0EF8               	movlw	-8
 41716  017370  B0E3               	btfsc	plusw1,0,c
 41717  017372  D7F9               	goto	u7480
 41718  017374                     l9922:
 41719                           
 41720                           ;stkvar	_aexp @ sp[(-4)+2]
 41721  017374  0EFE               	movlw	-2
 41722  017376  50E3               	movf	plusw1,w,c
 41723  017378  B4D8               	btfsc	status,2,c
 41724  01737A  D02B               	goto	l9934
 41725                           
 41726                           ;stkvar	_b @ sp[(-4)+-4]
 41727  01737C  50E1               	movf	fsr1l,w,c
 41728  01737E  0FF8               	addlw	-8
 41729  017380  6ED9               	movwf	fsr2l,c
 41730  017382  50E2               	movf	fsr1h,w,c
 41731  017384  6EDA               	movwf	fsr2h,c
 41732  017386  0EFF               	movlw	255
 41733  017388  22DA               	addwfc	fsr2h,f,c
 41734  01738A  2ADE               	incf	postinc2,f,c
 41735  01738C  0E00               	movlw	0
 41736  01738E  22DE               	addwfc	postinc2,f,c
 41737  017390  22DE               	addwfc	postinc2,f,c
 41738  017392  22DE               	addwfc	postinc2,f,c
 41739                           
 41740                           ;stkvar	_b @ sp[(-4)+-4]
 41741  017394  0EFB               	movlw	-5
 41742  017396  A0E3               	btfss	plusw1,0,c
 41743  017398  D01C               	goto	l9934
 41744  01739A  0E01               	movlw	1
 41745  01739C  6E35               	movwf	(btemp+11)^0,c
 41746                           
 41747                           ;stkvar	_b @ sp[(-4)+-4]
 41748  01739E  50E1               	movf	fsr1l,w,c
 41749  0173A0  0FF8               	addlw	-8
 41750  0173A2  6ED9               	movwf	fsr2l,c
 41751  0173A4  50E2               	movf	fsr1h,w,c
 41752  0173A6  6EDA               	movwf	fsr2h,c
 41753  0173A8  0EFF               	movlw	255
 41754  0173AA  22DA               	addwfc	fsr2h,f,c
 41755  0173AC  2835               	incf	(btemp+11)^0,w,c
 41756  0173AE  52DE               	movf	postinc2,f,c
 41757  0173B0  D008               	goto	u7520
 41758  0173B2                     u7525:
 41759  0173B2  52DE               	movf	postinc2,f,c
 41760  0173B4  90D8               	bcf	status,0,c
 41761  0173B6  BEDC               	btfsc	preinc2,7,c
 41762  0173B8  80D8               	bsf	status,0,c
 41763  0173BA  32DD               	rrcf	postdec2,f,c
 41764  0173BC  32DD               	rrcf	postdec2,f,c
 41765  0173BE  32DD               	rrcf	postdec2,f,c
 41766  0173C0  32DE               	rrcf	postinc2,f,c
 41767  0173C2                     u7520:
 41768  0173C2  2EE8               	decfsz	wreg,f,c
 41769  0173C4  D7F6               	goto	u7525
 41770                           
 41771                           ;stkvar	_bexp @ sp[(-4)+1]
 41772  0173C6  0EFD               	movlw	-3
 41773  0173C8  28E3               	incf	plusw1,w,c
 41774  0173CA  B4D8               	btfsc	status,2,c
 41775  0173CC  D002               	goto	l9934
 41776                           
 41777                           ;stkvar	_bexp @ sp[(-4)+1]
 41778  0173CE  0EFD               	movlw	-3
 41779  0173D0  2AE3               	incf	plusw1,f,c
 41780  0173D2                     l9934:
 41781                           
 41782                           ;stkvar	_bexp @ sp[(-4)+1]
 41783  0173D2  0EFD               	movlw	-3
 41784  0173D4  28E3               	incf	plusw1,w,c
 41785  0173D6  B4D8               	btfsc	status,2,c
 41786  0173D8  D004               	goto	u7550
 41787                           
 41788                           ;stkvar	_bexp @ sp[(-4)+1]
 41789  0173DA  0EFD               	movlw	-3
 41790  0173DC  50E3               	movf	plusw1,w,c
 41791  0173DE  A4D8               	btfss	status,2,c
 41792  0173E0  D00E               	goto	l9944
 41793  0173E2                     u7550:
 41794                           
 41795                           ;stkvar	_b @ sp[(-4)+-4]
 41796  0173E2  0EF8               	movlw	-8
 41797  0173E4  6AE3               	clrf	plusw1,c
 41798  0173E6  0EF9               	movlw	-7
 41799  0173E8  6AE3               	clrf	plusw1,c
 41800  0173EA  0EFA               	movlw	-6
 41801  0173EC  6AE3               	clrf	plusw1,c
 41802  0173EE  0EFB               	movlw	-5
 41803  0173F0  6AE3               	clrf	plusw1,c
 41804                           
 41805                           ;stkvar	_bexp @ sp[(-4)+1]
 41806  0173F2  0EFD               	movlw	-3
 41807  0173F4  50E3               	movf	plusw1,w,c
 41808  0173F6  A4D8               	btfss	status,2,c
 41809  0173F8  D002               	goto	l9944
 41810                           
 41811                           ;stkvar	_signs @ sp[(-4)+3]
 41812  0173FA  0EFF               	movlw	-1
 41813  0173FC  6AE3               	clrf	plusw1,c
 41814  0173FE                     l9944:
 41815                           
 41816                           ;stkvar	_bexp @ sp[(-4)+1]
 41817  0173FE  0EFD               	movlw	-3
 41818  017400  A0E3               	btfss	plusw1,0,c
 41819  017402  D009               	goto	l9948
 41820                           
 41821                           ;stkvar	_b @ sp[(-4)+-4]
 41822  017404  0EFA               	movlw	250
 41823  017406  24E1               	addwf	fsr1l,w,c
 41824  017408  6ED9               	movwf	fsr2l,c
 41825  01740A  0EFF               	movlw	255
 41826  01740C  20E2               	addwfc	fsr1h,w,c
 41827  01740E  6EDA               	movwf	fsr2h,c
 41828  017410  0E00               	movlw	0
 41829  017412  8EDB               	bsf	plusw2,7,c
 41830  017414  D008               	goto	l9950
 41831  017416                     l9948:
 41832                           
 41833                           ;stkvar	_b @ sp[(-4)+-4]
 41834  017416  0EFA               	movlw	250
 41835  017418  24E1               	addwf	fsr1l,w,c
 41836  01741A  6ED9               	movwf	fsr2l,c
 41837  01741C  0EFF               	movlw	255
 41838  01741E  20E2               	addwfc	fsr1h,w,c
 41839  017420  6EDA               	movwf	fsr2h,c
 41840  017422  0E7F               	movlw	127
 41841  017424  16DF               	andwf	indf2,f,c
 41842  017426                     l9950:
 41843                           
 41844                           ;stkvar	_b @ sp[(-4)+-4]
 41845  017426  0EFB               	movlw	251
 41846  017428  24E1               	addwf	fsr1l,w,c
 41847  01742A  6ED9               	movwf	fsr2l,c
 41848  01742C  0EFF               	movlw	255
 41849  01742E  20E2               	addwfc	fsr1h,w,c
 41850  017430  6EDA               	movwf	fsr2h,c
 41851                           
 41852                           ;stkvar	_bexp @ sp[(-4)+1]
 41853  017432  0EFD               	movlw	-3
 41854  017434  006F FF8C  F035    	movff	plusw1,btemp+11
 41855  01743A  90D8               	bcf	status,0,c
 41856  01743C  3035               	rrcf	(btemp+11)^0,w,c
 41857  01743E  6EDF               	movwf	indf2,c
 41858                           
 41859                           ;stkvar	_signs @ sp[(-4)+3]
 41860  017440  0EFF               	movlw	-1
 41861  017442  AEE3               	btfss	plusw1,7,c
 41862  017444  D008               	goto	l9956
 41863                           
 41864                           ;stkvar	_b @ sp[(-4)+-4]
 41865  017446  0EFB               	movlw	251
 41866  017448  24E1               	addwf	fsr1l,w,c
 41867  01744A  6ED9               	movwf	fsr2l,c
 41868  01744C  0EFF               	movlw	255
 41869  01744E  20E2               	addwfc	fsr1h,w,c
 41870  017450  6EDA               	movwf	fsr2h,c
 41871  017452  0E00               	movlw	0
 41872  017454  8EDB               	bsf	plusw2,7,c
 41873  017456                     l9956:
 41874                           
 41875                           ;stkvar	_b @ sp[(-4)+-4]
 41876  017456  0EF8               	movlw	-8
 41877  017458  006F FF8C  F02A    	movff	plusw1,btemp
 41878  01745E  0EF9               	movlw	-7
 41879  017460  006F FF8C  F02B    	movff	plusw1,btemp+1
 41880  017466  0EFA               	movlw	-6
 41881  017468  006F FF8C  F02C    	movff	plusw1,btemp+2
 41882  01746E  0EFB               	movlw	-5
 41883  017470  006F FF8C  F02D    	movff	plusw1,btemp+3
 41884  017476                     l3259:
 41885                           
 41886                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41887  017476  0EF4               	movlw	244
 41888  017478  26E1               	addwf	fsr1l,f,c
 41889  01747A  0EFF               	movlw	255
 41890  01747C  22E2               	addwfc	fsr1h,f,c
 41891  01747E  0012               	return		;funcret
 41892  017480                     __end_of___fladd:
 41893                           	opt callstack 0
 41894                           
 41895 ;; *************** function ___flmul *****************
 41896 ;; Defined at:
 41897 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 41898 ;; Parameters:    Size  Location     Type
 41899 ;;  b               4  [STACK] unsigned char 
 41900 ;;  a               4  [STACK] unsigned char 
 41901 ;; Auto vars:     Size  Location     Type
 41902 ;;  prod            4  [STACK] struct .
 41903 ;;  grs             4  [STACK] unsigned long 
 41904 ;;  temp            2  [STACK] struct .
 41905 ;;  bexp            1  [STACK] unsigned char 
 41906 ;;  aexp            1  [STACK] unsigned char 
 41907 ;;  sign            1  [STACK] unsigned char 
 41908 ;; Return value:  Size  Location     Type
 41909 ;;                  4  [STACK] unsigned char 
 41910 ;; Registers used:
 41911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41912 ;; Tracked objects:
 41913 ;;		On entry : 0/39
 41914 ;;		On exit  : 0/0
 41915 ;;		Unchanged: 0/0
 41916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41921 ;;Total ram usage:        0 bytes
 41922 ;; Hardware stack levels used:    1
 41923 ;; Hardware stack levels required when called:   15
 41924 ;; This function calls:
 41925 ;;		Nothing
 41926 ;; This function is called by:
 41927 ;;		_conv_raw_result
 41928 ;;		_lp_filter
 41929 ;;		_calc_model_data
 41930 ;;		_load_hist_data
 41931 ;;		_calc_bsoc
 41932 ;;		_init_bsoc
 41933 ;;		_efgtoa
 41934 ;; This function uses a reentrant model
 41935 ;;
 41936                           
 41937                           	psect	text154
 41938  01649A                     __ptext154:
 41939                           	opt callstack 0
 41940  01649A                     ___flmul:
 41941                           	opt callstack 0
 41942                           
 41943                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 41944  01649A  0E0D               	movlw	13
 41945  01649C  26E1               	addwf	fsr1l,f,c
 41946  01649E  0E00               	movlw	0
 41947  0164A0  22E2               	addwfc	fsr1h,f,c
 41948                           
 41949                           ;stkvar	_b @ sp[(-13)+-4]
 41950                           
 41951                           ;incstack = 0
 41952 ;; hardware stack exceeded
 41953  0164A2  0EF2               	movlw	242
 41954  0164A4  24E1               	addwf	fsr1l,w,c
 41955  0164A6  6ED9               	movwf	fsr2l,c
 41956  0164A8  0EFF               	movlw	255
 41957  0164AA  20E2               	addwfc	fsr1h,w,c
 41958  0164AC  6EDA               	movwf	fsr2h,c
 41959  0164AE  50DF               	movf	indf2,w,c
 41960  0164B0  6E35               	movwf	(btemp+11)^0,c
 41961  0164B2  0E80               	movlw	128
 41962  0164B4  1635               	andwf	(btemp+11)^0,f,c
 41963                           
 41964                           ;stkvar	_sign @ sp[(-13)+12]
 41965  0164B6  0EFF               	movlw	-1
 41966  0164B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41967                           
 41968                           ;stkvar	_b @ sp[(-13)+-4]
 41969  0164BE  0EF2               	movlw	242
 41970  0164C0  24E1               	addwf	fsr1l,w,c
 41971  0164C2  6ED9               	movwf	fsr2l,c
 41972  0164C4  0EFF               	movlw	255
 41973  0164C6  20E2               	addwfc	fsr1h,w,c
 41974  0164C8  6EDA               	movwf	fsr2h,c
 41975  0164CA  50DF               	movf	indf2,w,c
 41976  0164CC  6E35               	movwf	(btemp+11)^0,c
 41977  0164CE  90D8               	bcf	status,0,c
 41978  0164D0  3435               	rlcf	(btemp+11)^0,w,c
 41979  0164D2  6E34               	movwf	(btemp+10)^0,c
 41980                           
 41981                           ;stkvar	_bexp @ sp[(-13)+10]
 41982  0164D4  0EFD               	movlw	-3
 41983  0164D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41984                           
 41985                           ;stkvar	_b @ sp[(-13)+-4]
 41986  0164DC  0EF1               	movlw	241
 41987  0164DE  24E1               	addwf	fsr1l,w,c
 41988  0164E0  6ED9               	movwf	fsr2l,c
 41989  0164E2  0EFF               	movlw	255
 41990  0164E4  20E2               	addwfc	fsr1h,w,c
 41991  0164E6  6EDA               	movwf	fsr2h,c
 41992  0164E8  AEDF               	btfss	indf2,7,c
 41993  0164EA  D002               	goto	l10420
 41994                           
 41995                           ;stkvar	_bexp @ sp[(-13)+10]
 41996  0164EC  0EFD               	movlw	-3
 41997  0164EE  80E3               	bsf	plusw1,0,c
 41998  0164F0                     l10420:
 41999                           
 42000                           ;stkvar	_bexp @ sp[(-13)+10]
 42001  0164F0  0EFD               	movlw	-3
 42002  0164F2  50E3               	movf	plusw1,w,c
 42003  0164F4  B4D8               	btfsc	status,2,c
 42004  0164F6  D01F               	goto	l10428
 42005                           
 42006                           ;stkvar	_bexp @ sp[(-13)+10]
 42007  0164F8  0EFD               	movlw	-3
 42008  0164FA  28E3               	incf	plusw1,w,c
 42009  0164FC  A4D8               	btfss	status,2,c
 42010  0164FE  D018               	goto	l10426
 42011  016500  0E00               	movlw	0
 42012  016502  6E32               	movwf	(btemp+8)^0,c
 42013  016504  0E00               	movlw	0
 42014  016506  6E33               	movwf	(btemp+9)^0,c
 42015  016508  0E00               	movlw	0
 42016  01650A  6E34               	movwf	(btemp+10)^0,c
 42017  01650C  0E00               	movlw	0
 42018  01650E  6E35               	movwf	(btemp+11)^0,c
 42019                           
 42020                           ;stkvar	_b @ sp[(-13)+-4]
 42021  016510  0EEF               	movlw	-17
 42022  016512  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42023  016518  0EF0               	movlw	-16
 42024  01651A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42025  016520  0EF1               	movlw	-15
 42026  016522  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42027  016528  0EF2               	movlw	-14
 42028  01652A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42029  016530                     l10426:
 42030                           
 42031                           ;stkvar	_b @ sp[(-13)+-4]
 42032  016530  0EF1               	movlw	-15
 42033  016532  8EE3               	bsf	plusw1,7,c
 42034  016534  D018               	goto	l10430
 42035  016536                     l10428:
 42036  016536  0E00               	movlw	0
 42037  016538  6E32               	movwf	(btemp+8)^0,c
 42038  01653A  0E00               	movlw	0
 42039  01653C  6E33               	movwf	(btemp+9)^0,c
 42040  01653E  0E00               	movlw	0
 42041  016540  6E34               	movwf	(btemp+10)^0,c
 42042  016542  0E00               	movlw	0
 42043  016544  6E35               	movwf	(btemp+11)^0,c
 42044                           
 42045                           ;stkvar	_b @ sp[(-13)+-4]
 42046  016546  0EEF               	movlw	-17
 42047  016548  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42048  01654E  0EF0               	movlw	-16
 42049  016550  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42050  016556  0EF1               	movlw	-15
 42051  016558  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42052  01655E  0EF2               	movlw	-14
 42053  016560  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42054  016566                     l10430:
 42055                           
 42056                           ;stkvar	_a @ sp[(-13)+-8]
 42057  016566  0EEE               	movlw	238
 42058  016568  24E1               	addwf	fsr1l,w,c
 42059  01656A  6ED9               	movwf	fsr2l,c
 42060  01656C  0EFF               	movlw	255
 42061  01656E  20E2               	addwfc	fsr1h,w,c
 42062  016570  6EDA               	movwf	fsr2h,c
 42063  016572  50DF               	movf	indf2,w,c
 42064  016574  6E35               	movwf	(btemp+11)^0,c
 42065  016576  0E80               	movlw	128
 42066  016578  1635               	andwf	(btemp+11)^0,f,c
 42067                           
 42068                           ;stkvar	_sign @ sp[(-13)+12]
 42069  01657A  50E1               	movf	fsr1l,w,c
 42070  01657C  0FFF               	addlw	-1
 42071  01657E  6ED9               	movwf	fsr2l,c
 42072  016580  50E2               	movf	fsr1h,w,c
 42073  016582  6EDA               	movwf	fsr2h,c
 42074  016584  0EFF               	movlw	255
 42075  016586  22DA               	addwfc	fsr2h,f,c
 42076  016588  5035               	movf	(btemp+11)^0,w,c
 42077  01658A  1ADF               	xorwf	indf2,f,c
 42078                           
 42079                           ;stkvar	_a @ sp[(-13)+-8]
 42080  01658C  0EEE               	movlw	238
 42081  01658E  24E1               	addwf	fsr1l,w,c
 42082  016590  6ED9               	movwf	fsr2l,c
 42083  016592  0EFF               	movlw	255
 42084  016594  20E2               	addwfc	fsr1h,w,c
 42085  016596  6EDA               	movwf	fsr2h,c
 42086  016598  50DF               	movf	indf2,w,c
 42087  01659A  6E35               	movwf	(btemp+11)^0,c
 42088  01659C  90D8               	bcf	status,0,c
 42089  01659E  3435               	rlcf	(btemp+11)^0,w,c
 42090  0165A0  6E34               	movwf	(btemp+10)^0,c
 42091                           
 42092                           ;stkvar	_aexp @ sp[(-13)+11]
 42093  0165A2  0EFE               	movlw	-2
 42094  0165A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42095                           
 42096                           ;stkvar	_a @ sp[(-13)+-8]
 42097  0165AA  0EED               	movlw	237
 42098  0165AC  24E1               	addwf	fsr1l,w,c
 42099  0165AE  6ED9               	movwf	fsr2l,c
 42100  0165B0  0EFF               	movlw	255
 42101  0165B2  20E2               	addwfc	fsr1h,w,c
 42102  0165B4  6EDA               	movwf	fsr2h,c
 42103  0165B6  AEDF               	btfss	indf2,7,c
 42104  0165B8  D002               	goto	l10438
 42105                           
 42106                           ;stkvar	_aexp @ sp[(-13)+11]
 42107  0165BA  0EFE               	movlw	-2
 42108  0165BC  80E3               	bsf	plusw1,0,c
 42109  0165BE                     l10438:
 42110                           
 42111                           ;stkvar	_aexp @ sp[(-13)+11]
 42112  0165BE  0EFE               	movlw	-2
 42113  0165C0  50E3               	movf	plusw1,w,c
 42114  0165C2  B4D8               	btfsc	status,2,c
 42115  0165C4  D01F               	goto	l10446
 42116                           
 42117                           ;stkvar	_aexp @ sp[(-13)+11]
 42118  0165C6  0EFE               	movlw	-2
 42119  0165C8  28E3               	incf	plusw1,w,c
 42120  0165CA  A4D8               	btfss	status,2,c
 42121  0165CC  D018               	goto	l10444
 42122  0165CE  0E00               	movlw	0
 42123  0165D0  6E32               	movwf	(btemp+8)^0,c
 42124  0165D2  0E00               	movlw	0
 42125  0165D4  6E33               	movwf	(btemp+9)^0,c
 42126  0165D6  0E00               	movlw	0
 42127  0165D8  6E34               	movwf	(btemp+10)^0,c
 42128  0165DA  0E00               	movlw	0
 42129  0165DC  6E35               	movwf	(btemp+11)^0,c
 42130                           
 42131                           ;stkvar	_a @ sp[(-13)+-8]
 42132  0165DE  0EEB               	movlw	-21
 42133  0165E0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42134  0165E6  0EEC               	movlw	-20
 42135  0165E8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42136  0165EE  0EED               	movlw	-19
 42137  0165F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42138  0165F6  0EEE               	movlw	-18
 42139  0165F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42140  0165FE                     l10444:
 42141                           
 42142                           ;stkvar	_a @ sp[(-13)+-8]
 42143  0165FE  0EED               	movlw	-19
 42144  016600  8EE3               	bsf	plusw1,7,c
 42145  016602  D018               	goto	l10448
 42146  016604                     l10446:
 42147  016604  0E00               	movlw	0
 42148  016606  6E32               	movwf	(btemp+8)^0,c
 42149  016608  0E00               	movlw	0
 42150  01660A  6E33               	movwf	(btemp+9)^0,c
 42151  01660C  0E00               	movlw	0
 42152  01660E  6E34               	movwf	(btemp+10)^0,c
 42153  016610  0E00               	movlw	0
 42154  016612  6E35               	movwf	(btemp+11)^0,c
 42155                           
 42156                           ;stkvar	_a @ sp[(-13)+-8]
 42157  016614  0EEB               	movlw	-21
 42158  016616  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42159  01661C  0EEC               	movlw	-20
 42160  01661E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42161  016624  0EED               	movlw	-19
 42162  016626  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42163  01662C  0EEE               	movlw	-18
 42164  01662E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42165  016634                     l10448:
 42166                           
 42167                           ;stkvar	_aexp @ sp[(-13)+11]
 42168  016634  0EFE               	movlw	-2
 42169  016636  50E3               	movf	plusw1,w,c
 42170  016638  B4D8               	btfsc	status,2,c
 42171  01663A  D004               	goto	u8610
 42172                           
 42173                           ;stkvar	_bexp @ sp[(-13)+10]
 42174  01663C  0EFD               	movlw	-3
 42175  01663E  50E3               	movf	plusw1,w,c
 42176  016640  A4D8               	btfss	status,2,c
 42177  016642  D009               	goto	l10456
 42178  016644                     u8610:
 42179  016644  0E00               	movlw	0
 42180  016646  6E2A               	movwf	btemp^0,c
 42181  016648  0E00               	movlw	0
 42182  01664A  6E2B               	movwf	(btemp+1)^0,c
 42183  01664C  0E00               	movlw	0
 42184  01664E  6E2C               	movwf	(btemp+2)^0,c
 42185  016650  0E00               	movlw	0
 42186  016652  6E2D               	movwf	(btemp+3)^0,c
 42187  016654  D332               	goto	l3340
 42188  016656                     l10456:
 42189                           
 42190                           ;stkvar	_b @ sp[(-13)+-4]
 42191  016656  0EEF               	movlw	-17
 42192  016658  006F FF8C  F035    	movff	plusw1,btemp+11
 42193                           
 42194                           ;stkvar	_a @ sp[(-13)+-8]
 42195  01665E  0EED               	movlw	237
 42196  016660  24E1               	addwf	fsr1l,w,c
 42197  016662  6ED9               	movwf	fsr2l,c
 42198  016664  0EFF               	movlw	255
 42199  016666  20E2               	addwfc	fsr1h,w,c
 42200  016668  6EDA               	movwf	fsr2h,c
 42201  01666A  50DF               	movf	indf2,w,c
 42202  01666C  0235               	mulwf	(btemp+11)^0,c
 42203                           
 42204                           ;stkvar	_temp @ sp[(-13)+8]
 42205  01666E  0EFB               	movlw	-5
 42206  016670  006F FFCF FFE3     	movff	prodl,plusw1
 42207  016676  0EFC               	movlw	-4
 42208  016678  006F FFD3 FFE3     	movff	prodh,plusw1
 42209                           
 42210                           ;stkvar	_temp @ sp[(-13)+8]
 42211  01667E  0EFB               	movlw	-5
 42212  016680  006F FF8C  F035    	movff	plusw1,btemp+11
 42213  016686  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42214  01668C  6A2F               	clrf	(btemp+5)^0,c
 42215  01668E  6A30               	clrf	(btemp+6)^0,c
 42216  016690  6A31               	clrf	(btemp+7)^0,c
 42217                           
 42218                           ;stkvar	_grs @ sp[(-13)+4]
 42219  016692  0EF7               	movlw	-9
 42220  016694  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42221  01669A  0EF8               	movlw	-8
 42222  01669C  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42223  0166A2  0EF9               	movlw	-7
 42224  0166A4  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42225  0166AA  0EFA               	movlw	-6
 42226  0166AC  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42227                           
 42228                           ;stkvar	_temp @ sp[(-13)+8]
 42229  0166B2  0EFC               	movlw	252
 42230  0166B4  24E1               	addwf	fsr1l,w,c
 42231  0166B6  6ED9               	movwf	fsr2l,c
 42232  0166B8  0EFF               	movlw	255
 42233  0166BA  20E2               	addwfc	fsr1h,w,c
 42234  0166BC  6EDA               	movwf	fsr2h,c
 42235  0166BE  50DF               	movf	indf2,w,c
 42236  0166C0  6E35               	movwf	(btemp+11)^0,c
 42237  0166C2  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42238  0166C8  6A2F               	clrf	(btemp+5)^0,c
 42239  0166CA  6A30               	clrf	(btemp+6)^0,c
 42240  0166CC  6A31               	clrf	(btemp+7)^0,c
 42241                           
 42242                           ;stkvar	_prod @ sp[(-13)+0]
 42243  0166CE  0EF3               	movlw	-13
 42244  0166D0  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42245  0166D6  0EF4               	movlw	-12
 42246  0166D8  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42247  0166DE  0EF5               	movlw	-11
 42248  0166E0  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42249  0166E6  0EF6               	movlw	-10
 42250  0166E8  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42251                           
 42252                           ;stkvar	_b @ sp[(-13)+-4]
 42253  0166EE  0EF0               	movlw	240
 42254  0166F0  24E1               	addwf	fsr1l,w,c
 42255  0166F2  6ED9               	movwf	fsr2l,c
 42256  0166F4  0EFF               	movlw	255
 42257  0166F6  20E2               	addwfc	fsr1h,w,c
 42258  0166F8  6EDA               	movwf	fsr2h,c
 42259  0166FA  50DF               	movf	indf2,w,c
 42260  0166FC  6E35               	movwf	(btemp+11)^0,c
 42261                           
 42262                           ;stkvar	_a @ sp[(-13)+-8]
 42263  0166FE  0EEC               	movlw	236
 42264  016700  24E1               	addwf	fsr1l,w,c
 42265  016702  6ED9               	movwf	fsr2l,c
 42266  016704  0EFF               	movlw	255
 42267  016706  20E2               	addwfc	fsr1h,w,c
 42268  016708  6EDA               	movwf	fsr2h,c
 42269  01670A  50DF               	movf	indf2,w,c
 42270  01670C  0235               	mulwf	(btemp+11)^0,c
 42271                           
 42272                           ;stkvar	_temp @ sp[(-13)+8]
 42273  01670E  0EFB               	movlw	-5
 42274  016710  006F FFCF FFE3     	movff	prodl,plusw1
 42275  016716  0EFC               	movlw	-4
 42276  016718  006F FFD3 FFE3     	movff	prodh,plusw1
 42277                           
 42278                           ;stkvar	_grs @ sp[(-13)+4]
 42279  01671E  50E1               	movf	fsr1l,w,c
 42280  016720  0FF7               	addlw	-9
 42281  016722  6ED9               	movwf	fsr2l,c
 42282  016724  50E2               	movf	fsr1h,w,c
 42283  016726  6EDA               	movwf	fsr2h,c
 42284  016728  0EFF               	movlw	255
 42285  01672A  22DA               	addwfc	fsr2h,f,c
 42286                           
 42287                           ;stkvar	_temp @ sp[(-13)+8]
 42288  01672C  0EFB               	movlw	-5
 42289  01672E  50E3               	movf	plusw1,w,c
 42290  016730  26DE               	addwf	postinc2,f,c
 42291  016732  0E00               	movlw	0
 42292  016734  22DE               	addwfc	postinc2,f,c
 42293  016736  22DE               	addwfc	postinc2,f,c
 42294  016738  22DE               	addwfc	postinc2,f,c
 42295                           
 42296                           ;stkvar	_prod @ sp[(-13)+0]
 42297  01673A  50E1               	movf	fsr1l,w,c
 42298  01673C  0FF3               	addlw	-13
 42299  01673E  6ED9               	movwf	fsr2l,c
 42300  016740  50E2               	movf	fsr1h,w,c
 42301  016742  6EDA               	movwf	fsr2h,c
 42302  016744  0EFF               	movlw	255
 42303  016746  22DA               	addwfc	fsr2h,f,c
 42304                           
 42305                           ;stkvar	_temp @ sp[(-13)+8]
 42306  016748  0EFC               	movlw	252
 42307  01674A  24E1               	addwf	fsr1l,w,c
 42308  01674C  6EE9               	movwf	fsr0l,c
 42309  01674E  0EFF               	movlw	255
 42310  016750  20E2               	addwfc	fsr1h,w,c
 42311  016752  6EEA               	movwf	fsr0h,c
 42312  016754  50EF               	movf	indf0,w,c
 42313  016756  26DE               	addwf	postinc2,f,c
 42314  016758  0E00               	movlw	0
 42315  01675A  22DE               	addwfc	postinc2,f,c
 42316  01675C  22DE               	addwfc	postinc2,f,c
 42317  01675E  22DE               	addwfc	postinc2,f,c
 42318                           
 42319                           ;stkvar	_b @ sp[(-13)+-4]
 42320  016760  0EF1               	movlw	241
 42321  016762  24E1               	addwf	fsr1l,w,c
 42322  016764  6ED9               	movwf	fsr2l,c
 42323  016766  0EFF               	movlw	255
 42324  016768  20E2               	addwfc	fsr1h,w,c
 42325  01676A  6EDA               	movwf	fsr2h,c
 42326  01676C  50DF               	movf	indf2,w,c
 42327  01676E  6E35               	movwf	(btemp+11)^0,c
 42328                           
 42329                           ;stkvar	_a @ sp[(-13)+-8]
 42330  016770  0EEB               	movlw	-21
 42331  016772  50E3               	movf	plusw1,w,c
 42332  016774  0235               	mulwf	(btemp+11)^0,c
 42333                           
 42334                           ;stkvar	_temp @ sp[(-13)+8]
 42335  016776  0EFB               	movlw	-5
 42336  016778  006F FFCF FFE3     	movff	prodl,plusw1
 42337  01677E  0EFC               	movlw	-4
 42338  016780  006F FFD3 FFE3     	movff	prodh,plusw1
 42339                           
 42340                           ;stkvar	_grs @ sp[(-13)+4]
 42341  016786  50E1               	movf	fsr1l,w,c
 42342  016788  0FF7               	addlw	-9
 42343  01678A  6ED9               	movwf	fsr2l,c
 42344  01678C  50E2               	movf	fsr1h,w,c
 42345  01678E  6EDA               	movwf	fsr2h,c
 42346  016790  0EFF               	movlw	255
 42347  016792  22DA               	addwfc	fsr2h,f,c
 42348                           
 42349                           ;stkvar	_temp @ sp[(-13)+8]
 42350  016794  0EFB               	movlw	-5
 42351  016796  50E3               	movf	plusw1,w,c
 42352  016798  26DE               	addwf	postinc2,f,c
 42353  01679A  0E00               	movlw	0
 42354  01679C  22DE               	addwfc	postinc2,f,c
 42355  01679E  22DE               	addwfc	postinc2,f,c
 42356  0167A0  22DE               	addwfc	postinc2,f,c
 42357                           
 42358                           ;stkvar	_prod @ sp[(-13)+0]
 42359  0167A2  50E1               	movf	fsr1l,w,c
 42360  0167A4  0FF3               	addlw	-13
 42361  0167A6  6ED9               	movwf	fsr2l,c
 42362  0167A8  50E2               	movf	fsr1h,w,c
 42363  0167AA  6EDA               	movwf	fsr2h,c
 42364  0167AC  0EFF               	movlw	255
 42365  0167AE  22DA               	addwfc	fsr2h,f,c
 42366                           
 42367                           ;stkvar	_temp @ sp[(-13)+8]
 42368  0167B0  0EFC               	movlw	252
 42369  0167B2  24E1               	addwf	fsr1l,w,c
 42370  0167B4  6EE9               	movwf	fsr0l,c
 42371  0167B6  0EFF               	movlw	255
 42372  0167B8  20E2               	addwfc	fsr1h,w,c
 42373  0167BA  6EEA               	movwf	fsr0h,c
 42374  0167BC  50EF               	movf	indf0,w,c
 42375  0167BE  26DE               	addwf	postinc2,f,c
 42376  0167C0  0E00               	movlw	0
 42377  0167C2  22DE               	addwfc	postinc2,f,c
 42378  0167C4  22DE               	addwfc	postinc2,f,c
 42379  0167C6  22DE               	addwfc	postinc2,f,c
 42380                           
 42381                           ;stkvar	_grs @ sp[(-13)+4]
 42382  0167C8  50E1               	movf	fsr1l,w,c
 42383  0167CA  0FF7               	addlw	-9
 42384  0167CC  6ED9               	movwf	fsr2l,c
 42385  0167CE  50E2               	movf	fsr1h,w,c
 42386  0167D0  6EDA               	movwf	fsr2h,c
 42387  0167D2  0EFF               	movlw	255
 42388  0167D4  22DA               	addwfc	fsr2h,f,c
 42389  0167D6  0E08               	movlw	8
 42390  0167D8                     u8625:
 42391  0167D8  90D8               	bcf	status,0,c
 42392  0167DA  36DE               	rlcf	postinc2,f,c
 42393  0167DC  36DE               	rlcf	postinc2,f,c
 42394  0167DE  36DE               	rlcf	postinc2,f,c
 42395  0167E0  36DD               	rlcf	postdec2,f,c
 42396  0167E2  52DD               	movf	postdec2,f,c
 42397  0167E4  52DD               	movf	postdec2,f,c
 42398  0167E6  2EE8               	decfsz	wreg,f,c
 42399  0167E8  D7F7               	goto	u8625
 42400                           
 42401                           ;stkvar	_b @ sp[(-13)+-4]
 42402  0167EA  0EF0               	movlw	240
 42403  0167EC  24E1               	addwf	fsr1l,w,c
 42404  0167EE  6ED9               	movwf	fsr2l,c
 42405  0167F0  0EFF               	movlw	255
 42406  0167F2  20E2               	addwfc	fsr1h,w,c
 42407  0167F4  6EDA               	movwf	fsr2h,c
 42408  0167F6  50DF               	movf	indf2,w,c
 42409  0167F8  6E35               	movwf	(btemp+11)^0,c
 42410                           
 42411                           ;stkvar	_a @ sp[(-13)+-8]
 42412  0167FA  0EEB               	movlw	-21
 42413  0167FC  50E3               	movf	plusw1,w,c
 42414  0167FE  0235               	mulwf	(btemp+11)^0,c
 42415                           
 42416                           ;stkvar	_temp @ sp[(-13)+8]
 42417  016800  0EFB               	movlw	-5
 42418  016802  006F FFCF FFE3     	movff	prodl,plusw1
 42419  016808  0EFC               	movlw	-4
 42420  01680A  006F FFD3 FFE3     	movff	prodh,plusw1
 42421                           
 42422                           ;stkvar	_temp @ sp[(-13)+8]
 42423  016810  0EFB               	movlw	-5
 42424  016812  006F FF8C  F034    	movff	plusw1,btemp+10
 42425  016818  0EFC               	movlw	-4
 42426  01681A  006F FF8C  F035    	movff	plusw1,btemp+11
 42427                           
 42428                           ;stkvar	_grs @ sp[(-13)+4]
 42429  016820  50E1               	movf	fsr1l,w,c
 42430  016822  0FF7               	addlw	-9
 42431  016824  6ED9               	movwf	fsr2l,c
 42432  016826  50E2               	movf	fsr1h,w,c
 42433  016828  6EDA               	movwf	fsr2h,c
 42434  01682A  0EFF               	movlw	255
 42435  01682C  22DA               	addwfc	fsr2h,f,c
 42436  01682E  5034               	movf	(btemp+10)^0,w,c
 42437  016830  26DE               	addwf	postinc2,f,c
 42438  016832  5035               	movf	(btemp+11)^0,w,c
 42439  016834  22DE               	addwfc	postinc2,f,c
 42440  016836  0E00               	movlw	0
 42441  016838  22DE               	addwfc	postinc2,f,c
 42442  01683A  22DE               	addwfc	postinc2,f,c
 42443                           
 42444                           ;stkvar	_b @ sp[(-13)+-4]
 42445  01683C  0EEF               	movlw	-17
 42446  01683E  006F FF8C  F035    	movff	plusw1,btemp+11
 42447                           
 42448                           ;stkvar	_a @ sp[(-13)+-8]
 42449  016844  0EEC               	movlw	236
 42450  016846  24E1               	addwf	fsr1l,w,c
 42451  016848  6ED9               	movwf	fsr2l,c
 42452  01684A  0EFF               	movlw	255
 42453  01684C  20E2               	addwfc	fsr1h,w,c
 42454  01684E  6EDA               	movwf	fsr2h,c
 42455  016850  50DF               	movf	indf2,w,c
 42456  016852  0235               	mulwf	(btemp+11)^0,c
 42457                           
 42458                           ;stkvar	_temp @ sp[(-13)+8]
 42459  016854  0EFB               	movlw	-5
 42460  016856  006F FFCF FFE3     	movff	prodl,plusw1
 42461  01685C  0EFC               	movlw	-4
 42462  01685E  006F FFD3 FFE3     	movff	prodh,plusw1
 42463                           
 42464                           ;stkvar	_temp @ sp[(-13)+8]
 42465  016864  0EFB               	movlw	-5
 42466  016866  006F FF8C  F034    	movff	plusw1,btemp+10
 42467  01686C  0EFC               	movlw	-4
 42468  01686E  006F FF8C  F035    	movff	plusw1,btemp+11
 42469                           
 42470                           ;stkvar	_grs @ sp[(-13)+4]
 42471  016874  50E1               	movf	fsr1l,w,c
 42472  016876  0FF7               	addlw	-9
 42473  016878  6ED9               	movwf	fsr2l,c
 42474  01687A  50E2               	movf	fsr1h,w,c
 42475  01687C  6EDA               	movwf	fsr2h,c
 42476  01687E  0EFF               	movlw	255
 42477  016880  22DA               	addwfc	fsr2h,f,c
 42478  016882  5034               	movf	(btemp+10)^0,w,c
 42479  016884  26DE               	addwf	postinc2,f,c
 42480  016886  5035               	movf	(btemp+11)^0,w,c
 42481  016888  22DE               	addwfc	postinc2,f,c
 42482  01688A  0E00               	movlw	0
 42483  01688C  22DE               	addwfc	postinc2,f,c
 42484  01688E  22DE               	addwfc	postinc2,f,c
 42485                           
 42486                           ;stkvar	_grs @ sp[(-13)+4]
 42487  016890  50E1               	movf	fsr1l,w,c
 42488  016892  0FF7               	addlw	-9
 42489  016894  6ED9               	movwf	fsr2l,c
 42490  016896  50E2               	movf	fsr1h,w,c
 42491  016898  6EDA               	movwf	fsr2h,c
 42492  01689A  0EFF               	movlw	255
 42493  01689C  22DA               	addwfc	fsr2h,f,c
 42494  01689E  0E08               	movlw	8
 42495  0168A0                     u8635:
 42496  0168A0  90D8               	bcf	status,0,c
 42497  0168A2  36DE               	rlcf	postinc2,f,c
 42498  0168A4  36DE               	rlcf	postinc2,f,c
 42499  0168A6  36DE               	rlcf	postinc2,f,c
 42500  0168A8  36DD               	rlcf	postdec2,f,c
 42501  0168AA  52DD               	movf	postdec2,f,c
 42502  0168AC  52DD               	movf	postdec2,f,c
 42503  0168AE  2EE8               	decfsz	wreg,f,c
 42504  0168B0  D7F7               	goto	u8635
 42505                           
 42506                           ;stkvar	_b @ sp[(-13)+-4]
 42507  0168B2  0EEF               	movlw	-17
 42508  0168B4  006F FF8C  F035    	movff	plusw1,btemp+11
 42509                           
 42510                           ;stkvar	_a @ sp[(-13)+-8]
 42511  0168BA  0EEB               	movlw	-21
 42512  0168BC  50E3               	movf	plusw1,w,c
 42513  0168BE  0235               	mulwf	(btemp+11)^0,c
 42514                           
 42515                           ;stkvar	_temp @ sp[(-13)+8]
 42516  0168C0  0EFB               	movlw	-5
 42517  0168C2  006F FFCF FFE3     	movff	prodl,plusw1
 42518  0168C8  0EFC               	movlw	-4
 42519  0168CA  006F FFD3 FFE3     	movff	prodh,plusw1
 42520                           
 42521                           ;stkvar	_temp @ sp[(-13)+8]
 42522  0168D0  0EFB               	movlw	-5
 42523  0168D2  006F FF8C  F034    	movff	plusw1,btemp+10
 42524  0168D8  0EFC               	movlw	-4
 42525  0168DA  006F FF8C  F035    	movff	plusw1,btemp+11
 42526                           
 42527                           ;stkvar	_grs @ sp[(-13)+4]
 42528  0168E0  50E1               	movf	fsr1l,w,c
 42529  0168E2  0FF7               	addlw	-9
 42530  0168E4  6ED9               	movwf	fsr2l,c
 42531  0168E6  50E2               	movf	fsr1h,w,c
 42532  0168E8  6EDA               	movwf	fsr2h,c
 42533  0168EA  0EFF               	movlw	255
 42534  0168EC  22DA               	addwfc	fsr2h,f,c
 42535  0168EE  5034               	movf	(btemp+10)^0,w,c
 42536  0168F0  26DE               	addwf	postinc2,f,c
 42537  0168F2  5035               	movf	(btemp+11)^0,w,c
 42538  0168F4  22DE               	addwfc	postinc2,f,c
 42539  0168F6  0E00               	movlw	0
 42540  0168F8  22DE               	addwfc	postinc2,f,c
 42541  0168FA  22DE               	addwfc	postinc2,f,c
 42542                           
 42543                           ;stkvar	_b @ sp[(-13)+-4]
 42544  0168FC  0EF0               	movlw	240
 42545  0168FE  24E1               	addwf	fsr1l,w,c
 42546  016900  6ED9               	movwf	fsr2l,c
 42547  016902  0EFF               	movlw	255
 42548  016904  20E2               	addwfc	fsr1h,w,c
 42549  016906  6EDA               	movwf	fsr2h,c
 42550  016908  50DF               	movf	indf2,w,c
 42551  01690A  6E35               	movwf	(btemp+11)^0,c
 42552                           
 42553                           ;stkvar	_a @ sp[(-13)+-8]
 42554  01690C  0EED               	movlw	237
 42555  01690E  24E1               	addwf	fsr1l,w,c
 42556  016910  6ED9               	movwf	fsr2l,c
 42557  016912  0EFF               	movlw	255
 42558  016914  20E2               	addwfc	fsr1h,w,c
 42559  016916  6EDA               	movwf	fsr2h,c
 42560  016918  50DF               	movf	indf2,w,c
 42561  01691A  0235               	mulwf	(btemp+11)^0,c
 42562                           
 42563                           ;stkvar	_temp @ sp[(-13)+8]
 42564  01691C  0EFB               	movlw	-5
 42565  01691E  006F FFCF FFE3     	movff	prodl,plusw1
 42566  016924  0EFC               	movlw	-4
 42567  016926  006F FFD3 FFE3     	movff	prodh,plusw1
 42568                           
 42569                           ;stkvar	_temp @ sp[(-13)+8]
 42570  01692C  0EFB               	movlw	-5
 42571  01692E  006F FF8C  F034    	movff	plusw1,btemp+10
 42572  016934  0EFC               	movlw	-4
 42573  016936  006F FF8C  F035    	movff	plusw1,btemp+11
 42574                           
 42575                           ;stkvar	_prod @ sp[(-13)+0]
 42576  01693C  50E1               	movf	fsr1l,w,c
 42577  01693E  0FF3               	addlw	-13
 42578  016940  6ED9               	movwf	fsr2l,c
 42579  016942  50E2               	movf	fsr1h,w,c
 42580  016944  6EDA               	movwf	fsr2h,c
 42581  016946  0EFF               	movlw	255
 42582  016948  22DA               	addwfc	fsr2h,f,c
 42583  01694A  5034               	movf	(btemp+10)^0,w,c
 42584  01694C  26DE               	addwf	postinc2,f,c
 42585  01694E  5035               	movf	(btemp+11)^0,w,c
 42586  016950  22DE               	addwfc	postinc2,f,c
 42587  016952  0E00               	movlw	0
 42588  016954  22DE               	addwfc	postinc2,f,c
 42589  016956  22DE               	addwfc	postinc2,f,c
 42590                           
 42591                           ;stkvar	_b @ sp[(-13)+-4]
 42592  016958  0EF1               	movlw	241
 42593  01695A  24E1               	addwf	fsr1l,w,c
 42594  01695C  6ED9               	movwf	fsr2l,c
 42595  01695E  0EFF               	movlw	255
 42596  016960  20E2               	addwfc	fsr1h,w,c
 42597  016962  6EDA               	movwf	fsr2h,c
 42598  016964  50DF               	movf	indf2,w,c
 42599  016966  6E35               	movwf	(btemp+11)^0,c
 42600                           
 42601                           ;stkvar	_a @ sp[(-13)+-8]
 42602  016968  0EEC               	movlw	236
 42603  01696A  24E1               	addwf	fsr1l,w,c
 42604  01696C  6ED9               	movwf	fsr2l,c
 42605  01696E  0EFF               	movlw	255
 42606  016970  20E2               	addwfc	fsr1h,w,c
 42607  016972  6EDA               	movwf	fsr2h,c
 42608  016974  50DF               	movf	indf2,w,c
 42609  016976  0235               	mulwf	(btemp+11)^0,c
 42610                           
 42611                           ;stkvar	_temp @ sp[(-13)+8]
 42612  016978  0EFB               	movlw	-5
 42613  01697A  006F FFCF FFE3     	movff	prodl,plusw1
 42614  016980  0EFC               	movlw	-4
 42615  016982  006F FFD3 FFE3     	movff	prodh,plusw1
 42616                           
 42617                           ;stkvar	_temp @ sp[(-13)+8]
 42618  016988  0EFB               	movlw	-5
 42619  01698A  006F FF8C  F034    	movff	plusw1,btemp+10
 42620  016990  0EFC               	movlw	-4
 42621  016992  006F FF8C  F035    	movff	plusw1,btemp+11
 42622                           
 42623                           ;stkvar	_prod @ sp[(-13)+0]
 42624  016998  50E1               	movf	fsr1l,w,c
 42625  01699A  0FF3               	addlw	-13
 42626  01699C  6ED9               	movwf	fsr2l,c
 42627  01699E  50E2               	movf	fsr1h,w,c
 42628  0169A0  6EDA               	movwf	fsr2h,c
 42629  0169A2  0EFF               	movlw	255
 42630  0169A4  22DA               	addwfc	fsr2h,f,c
 42631  0169A6  5034               	movf	(btemp+10)^0,w,c
 42632  0169A8  26DE               	addwf	postinc2,f,c
 42633  0169AA  5035               	movf	(btemp+11)^0,w,c
 42634  0169AC  22DE               	addwfc	postinc2,f,c
 42635  0169AE  0E00               	movlw	0
 42636  0169B0  22DE               	addwfc	postinc2,f,c
 42637  0169B2  22DE               	addwfc	postinc2,f,c
 42638                           
 42639                           ;stkvar	_b @ sp[(-13)+-4]
 42640  0169B4  0EF1               	movlw	241
 42641  0169B6  24E1               	addwf	fsr1l,w,c
 42642  0169B8  6ED9               	movwf	fsr2l,c
 42643  0169BA  0EFF               	movlw	255
 42644  0169BC  20E2               	addwfc	fsr1h,w,c
 42645  0169BE  6EDA               	movwf	fsr2h,c
 42646  0169C0  50DF               	movf	indf2,w,c
 42647  0169C2  6E35               	movwf	(btemp+11)^0,c
 42648                           
 42649                           ;stkvar	_a @ sp[(-13)+-8]
 42650  0169C4  0EED               	movlw	237
 42651  0169C6  24E1               	addwf	fsr1l,w,c
 42652  0169C8  6ED9               	movwf	fsr2l,c
 42653  0169CA  0EFF               	movlw	255
 42654  0169CC  20E2               	addwfc	fsr1h,w,c
 42655  0169CE  6EDA               	movwf	fsr2h,c
 42656  0169D0  50DF               	movf	indf2,w,c
 42657  0169D2  0235               	mulwf	(btemp+11)^0,c
 42658                           
 42659                           ;stkvar	_temp @ sp[(-13)+8]
 42660  0169D4  0EFB               	movlw	-5
 42661  0169D6  006F FFCF FFE3     	movff	prodl,plusw1
 42662  0169DC  0EFC               	movlw	-4
 42663  0169DE  006F FFD3 FFE3     	movff	prodh,plusw1
 42664                           
 42665                           ;stkvar	_temp @ sp[(-13)+8]
 42666  0169E4  0EFB               	movlw	-5
 42667  0169E6  006F FF8C  F034    	movff	plusw1,btemp+10
 42668  0169EC  0EFC               	movlw	-4
 42669  0169EE  006F FF8C  F035    	movff	plusw1,btemp+11
 42670  0169F4  5034               	movf	(btemp+10)^0,w,c
 42671  0169F6  6E2E               	movwf	(btemp+4)^0,c
 42672  0169F8  5035               	movf	(btemp+11)^0,w,c
 42673  0169FA  6E2F               	movwf	(btemp+5)^0,c
 42674  0169FC  6A30               	clrf	(btemp+6)^0,c
 42675  0169FE  6A31               	clrf	(btemp+7)^0,c
 42676  016A00  0060  F0C0  F031   	movff	btemp+6,btemp+7
 42677  016A06  0060  F0BC  F030   	movff	btemp+5,btemp+6
 42678  016A0C  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 42679  016A12  6A2E               	clrf	(btemp+4)^0,c
 42680                           
 42681                           ;stkvar	_prod @ sp[(-13)+0]
 42682  016A14  50E1               	movf	fsr1l,w,c
 42683  016A16  0FF3               	addlw	-13
 42684  016A18  6ED9               	movwf	fsr2l,c
 42685  016A1A  50E2               	movf	fsr1h,w,c
 42686  016A1C  6EDA               	movwf	fsr2h,c
 42687  016A1E  0EFF               	movlw	255
 42688  016A20  22DA               	addwfc	fsr2h,f,c
 42689  016A22  502E               	movf	(btemp+4)^0,w,c
 42690  016A24  26DE               	addwf	postinc2,f,c
 42691  016A26  502F               	movf	(btemp+5)^0,w,c
 42692  016A28  22DE               	addwfc	postinc2,f,c
 42693  016A2A  5030               	movf	(btemp+6)^0,w,c
 42694  016A2C  22DE               	addwfc	postinc2,f,c
 42695  016A2E  5031               	movf	(btemp+7)^0,w,c
 42696  016A30  22DE               	addwfc	postinc2,f,c
 42697                           
 42698                           ;stkvar	_prod @ sp[(-13)+0]
 42699  016A32  50E1               	movf	fsr1l,w,c
 42700  016A34  0FF3               	addlw	-13
 42701  016A36  6ED9               	movwf	fsr2l,c
 42702  016A38  50E2               	movf	fsr1h,w,c
 42703  016A3A  6EDA               	movwf	fsr2h,c
 42704  016A3C  0EFF               	movlw	255
 42705  016A3E  22DA               	addwfc	fsr2h,f,c
 42706                           
 42707                           ;stkvar	_grs @ sp[(-13)+4]
 42708  016A40  0EFA               	movlw	250
 42709  016A42  24E1               	addwf	fsr1l,w,c
 42710  016A44  6EE9               	movwf	fsr0l,c
 42711  016A46  0EFF               	movlw	255
 42712  016A48  20E2               	addwfc	fsr1h,w,c
 42713  016A4A  6EEA               	movwf	fsr0h,c
 42714  016A4C  50EF               	movf	indf0,w,c
 42715  016A4E  26DE               	addwf	postinc2,f,c
 42716  016A50  0E00               	movlw	0
 42717  016A52  22DE               	addwfc	postinc2,f,c
 42718  016A54  22DE               	addwfc	postinc2,f,c
 42719  016A56  22DE               	addwfc	postinc2,f,c
 42720                           
 42721                           ;stkvar	_grs @ sp[(-13)+4]
 42722  016A58  50E1               	movf	fsr1l,w,c
 42723  016A5A  0FF7               	addlw	-9
 42724  016A5C  6ED9               	movwf	fsr2l,c
 42725  016A5E  50E2               	movf	fsr1h,w,c
 42726  016A60  6EDA               	movwf	fsr2h,c
 42727  016A62  0EFF               	movlw	255
 42728  016A64  22DA               	addwfc	fsr2h,f,c
 42729  016A66  0E08               	movlw	8
 42730  016A68                     u8645:
 42731  016A68  90D8               	bcf	status,0,c
 42732  016A6A  36DE               	rlcf	postinc2,f,c
 42733  016A6C  36DE               	rlcf	postinc2,f,c
 42734  016A6E  36DE               	rlcf	postinc2,f,c
 42735  016A70  36DD               	rlcf	postdec2,f,c
 42736  016A72  52DD               	movf	postdec2,f,c
 42737  016A74  52DD               	movf	postdec2,f,c
 42738  016A76  2EE8               	decfsz	wreg,f,c
 42739  016A78  D7F7               	goto	u8645
 42740  016A7A  0E82               	movlw	130
 42741  016A7C  6E34               	movwf	(btemp+10)^0,c
 42742  016A7E  0EFF               	movlw	255
 42743  016A80  6E35               	movwf	(btemp+11)^0,c
 42744                           
 42745                           ;stkvar	_bexp @ sp[(-13)+10]
 42746  016A82  0EFD               	movlw	-3
 42747  016A84  50E3               	movf	plusw1,w,c
 42748  016A86  6E32               	movwf	(btemp+8)^0,c
 42749  016A88  6A33               	clrf	(btemp+9)^0,c
 42750                           
 42751                           ;stkvar	_aexp @ sp[(-13)+11]
 42752  016A8A  0EFE               	movlw	-2
 42753  016A8C  50E3               	movf	plusw1,w,c
 42754  016A8E  2632               	addwf	(btemp+8)^0,f,c
 42755  016A90  0E00               	movlw	0
 42756  016A92  2233               	addwfc	(btemp+9)^0,f,c
 42757  016A94  5034               	movf	(btemp+10)^0,w,c
 42758  016A96  2632               	addwf	(btemp+8)^0,f,c
 42759  016A98  5035               	movf	(btemp+11)^0,w,c
 42760  016A9A  2233               	addwfc	(btemp+9)^0,f,c
 42761                           
 42762                           ;stkvar	_temp @ sp[(-13)+8]
 42763  016A9C  0EFB               	movlw	-5
 42764  016A9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42765  016AA4  0EFC               	movlw	-4
 42766  016AA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42767  016AAC  D021               	goto	l10518
 42768  016AAE                     l10508:
 42769                           
 42770                           ;stkvar	_prod @ sp[(-13)+0]
 42771  016AAE  90D8               	bcf	status,0,c
 42772  016AB0  0EF3               	movlw	-13
 42773  016AB2  36E3               	rlcf	plusw1,f,c
 42774  016AB4  0EF4               	movlw	-12
 42775  016AB6  36E3               	rlcf	plusw1,f,c
 42776  016AB8  0EF5               	movlw	-11
 42777  016ABA  36E3               	rlcf	plusw1,f,c
 42778  016ABC  0EF6               	movlw	-10
 42779  016ABE  36E3               	rlcf	plusw1,f,c
 42780                           
 42781                           ;stkvar	_grs @ sp[(-13)+4]
 42782  016AC0  0EFA               	movlw	-6
 42783  016AC2  AEE3               	btfss	plusw1,7,c
 42784  016AC4  D002               	goto	l10514
 42785                           
 42786                           ;stkvar	_prod @ sp[(-13)+0]
 42787  016AC6  0EF3               	movlw	-13
 42788  016AC8  80E3               	bsf	plusw1,0,c
 42789  016ACA                     l10514:
 42790                           
 42791                           ;stkvar	_grs @ sp[(-13)+4]
 42792  016ACA  90D8               	bcf	status,0,c
 42793  016ACC  0EF7               	movlw	-9
 42794  016ACE  36E3               	rlcf	plusw1,f,c
 42795  016AD0  0EF8               	movlw	-8
 42796  016AD2  36E3               	rlcf	plusw1,f,c
 42797  016AD4  0EF9               	movlw	-7
 42798  016AD6  36E3               	rlcf	plusw1,f,c
 42799  016AD8  0EFA               	movlw	-6
 42800  016ADA  36E3               	rlcf	plusw1,f,c
 42801                           
 42802                           ;stkvar	_temp @ sp[(-13)+8]
 42803  016ADC  50E1               	movf	fsr1l,w,c
 42804  016ADE  0FFB               	addlw	-5
 42805  016AE0  6ED9               	movwf	fsr2l,c
 42806  016AE2  50E2               	movf	fsr1h,w,c
 42807  016AE4  6EDA               	movwf	fsr2h,c
 42808  016AE6  0EFF               	movlw	255
 42809  016AE8  22DA               	addwfc	fsr2h,f,c
 42810  016AEA  06DE               	decf	postinc2,f,c
 42811  016AEC  0E00               	movlw	0
 42812  016AEE  5ADD               	subwfb	postdec2,f,c
 42813  016AF0                     l10518:
 42814                           
 42815                           ;stkvar	_prod @ sp[(-13)+0]
 42816  016AF0  0EF5               	movlw	-11
 42817  016AF2  AEE3               	btfss	plusw1,7,c
 42818  016AF4  D7DC               	goto	l10508
 42819                           
 42820                           ;stkvar	_aexp @ sp[(-13)+11]
 42821  016AF6  0EFE               	movlw	-2
 42822  016AF8  6AE3               	clrf	plusw1,c
 42823                           
 42824                           ;stkvar	_grs @ sp[(-13)+4]
 42825  016AFA  0EFA               	movlw	-6
 42826  016AFC  AEE3               	btfss	plusw1,7,c
 42827  016AFE  D020               	goto	l10532
 42828                           
 42829                           ;stkvar	_grs @ sp[(-13)+4]
 42830  016B00  50E1               	movf	fsr1l,w,c
 42831  016B02  0FF7               	addlw	-9
 42832  016B04  6ED9               	movwf	fsr2l,c
 42833  016B06  50E2               	movf	fsr1h,w,c
 42834  016B08  6EDA               	movwf	fsr2h,c
 42835  016B0A  0EFF               	movlw	255
 42836  016B0C  22DA               	addwfc	fsr2h,f,c
 42837  016B0E  0EFF               	movlw	255
 42838  016B10  14DE               	andwf	postinc2,w,c
 42839  016B12  6E32               	movwf	(btemp+8)^0,c
 42840  016B14  0EFF               	movlw	255
 42841  016B16  14DE               	andwf	postinc2,w,c
 42842  016B18  6E33               	movwf	(btemp+9)^0,c
 42843  016B1A  0EFF               	movlw	255
 42844  016B1C  14DE               	andwf	postinc2,w,c
 42845  016B1E  6E34               	movwf	(btemp+10)^0,c
 42846  016B20  0E7F               	movlw	127
 42847  016B22  14DE               	andwf	postinc2,w,c
 42848  016B24  6E35               	movwf	(btemp+11)^0,c
 42849  016B26  5032               	movf	(btemp+8)^0,w,c
 42850  016B28  1033               	iorwf	(btemp+9)^0,w,c
 42851  016B2A  1034               	iorwf	(btemp+10)^0,w,c
 42852  016B2C  1035               	iorwf	(btemp+11)^0,w,c
 42853  016B2E  B4D8               	btfsc	status,2,c
 42854  016B30  D004               	goto	l10528
 42855  016B32                     u8680:
 42856                           
 42857                           ;stkvar	_aexp @ sp[(-13)+11]
 42858  016B32  0EFE               	movlw	-2
 42859  016B34  6AE3               	clrf	plusw1,c
 42860  016B36  2AE3               	incf	plusw1,f,c
 42861  016B38  D003               	goto	l10532
 42862  016B3A                     l10528:
 42863                           
 42864                           ;stkvar	_prod @ sp[(-13)+0]
 42865  016B3A  0EF3               	movlw	-13
 42866  016B3C  B0E3               	btfsc	plusw1,0,c
 42867  016B3E  D7F9               	goto	u8680
 42868  016B40                     l10532:
 42869                           
 42870                           ;stkvar	_aexp @ sp[(-13)+11]
 42871  016B40  0EFE               	movlw	-2
 42872  016B42  50E3               	movf	plusw1,w,c
 42873  016B44  B4D8               	btfsc	status,2,c
 42874  016B46  D036               	goto	l10542
 42875                           
 42876                           ;stkvar	_prod @ sp[(-13)+0]
 42877  016B48  50E1               	movf	fsr1l,w,c
 42878  016B4A  0FF3               	addlw	-13
 42879  016B4C  6ED9               	movwf	fsr2l,c
 42880  016B4E  50E2               	movf	fsr1h,w,c
 42881  016B50  6EDA               	movwf	fsr2h,c
 42882  016B52  0EFF               	movlw	255
 42883  016B54  22DA               	addwfc	fsr2h,f,c
 42884  016B56  2ADE               	incf	postinc2,f,c
 42885  016B58  0E00               	movlw	0
 42886  016B5A  22DE               	addwfc	postinc2,f,c
 42887  016B5C  22DE               	addwfc	postinc2,f,c
 42888  016B5E  22DE               	addwfc	postinc2,f,c
 42889                           
 42890                           ;stkvar	_prod @ sp[(-13)+0]
 42891  016B60  0EF6               	movlw	-10
 42892  016B62  A0E3               	btfss	plusw1,0,c
 42893  016B64  D027               	goto	l10542
 42894  016B66  0E01               	movlw	1
 42895  016B68  6E35               	movwf	(btemp+11)^0,c
 42896                           
 42897                           ;stkvar	_prod @ sp[(-13)+0]
 42898  016B6A  50E1               	movf	fsr1l,w,c
 42899  016B6C  0FF3               	addlw	-13
 42900  016B6E  6ED9               	movwf	fsr2l,c
 42901  016B70  50E2               	movf	fsr1h,w,c
 42902  016B72  6EDA               	movwf	fsr2h,c
 42903  016B74  0EFF               	movlw	255
 42904  016B76  22DA               	addwfc	fsr2h,f,c
 42905  016B78  2835               	incf	(btemp+11)^0,w,c
 42906  016B7A  52DE               	movf	postinc2,f,c
 42907  016B7C  D008               	goto	u8720
 42908  016B7E                     u8725:
 42909  016B7E  52DE               	movf	postinc2,f,c
 42910  016B80  90D8               	bcf	status,0,c
 42911  016B82  BEDC               	btfsc	preinc2,7,c
 42912  016B84  80D8               	bsf	status,0,c
 42913  016B86  32DD               	rrcf	postdec2,f,c
 42914  016B88  32DD               	rrcf	postdec2,f,c
 42915  016B8A  32DD               	rrcf	postdec2,f,c
 42916  016B8C  32DE               	rrcf	postinc2,f,c
 42917  016B8E                     u8720:
 42918  016B8E  2EE8               	decfsz	wreg,f,c
 42919  016B90  D7F6               	goto	u8725
 42920                           
 42921                           ;stkvar	_temp @ sp[(-13)+8]
 42922  016B92  0EFB               	movlw	-5
 42923  016B94  50E3               	movf	plusw1,w,c
 42924  016B96  0F01               	addlw	1
 42925  016B98  6E2A               	movwf	btemp^0,c
 42926  016B9A  0EFB               	movlw	-5
 42927  016B9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 42928  016BA2  6A2A               	clrf	btemp^0,c
 42929  016BA4  0EFC               	movlw	-4
 42930  016BA6  50E3               	movf	plusw1,w,c
 42931  016BA8  202A               	addwfc	btemp^0,w,c
 42932  016BAA  6E2A               	movwf	btemp^0,c
 42933  016BAC  0EFC               	movlw	-4
 42934  016BAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 42935  016BB4                     l10542:
 42936                           
 42937                           ;stkvar	_temp @ sp[(-13)+8]
 42938  016BB4  0EFC               	movlw	-4
 42939  016BB6  BEE3               	btfsc	plusw1,7,c
 42940  016BB8  D020               	goto	l10546
 42941  016BBA  0EFC               	movlw	-4
 42942  016BBC  50E3               	movf	plusw1,w,c
 42943  016BBE  E104               	bnz	u8730
 42944  016BC0  0EFB               	movlw	-5
 42945  016BC2  28E3               	incf	plusw1,w,c
 42946  016BC4  A0D8               	btfss	status,0,c
 42947  016BC6  D019               	goto	l10546
 42948  016BC8                     u8730:
 42949  016BC8  0E00               	movlw	0
 42950  016BCA  6E32               	movwf	(btemp+8)^0,c
 42951  016BCC  0E00               	movlw	0
 42952  016BCE  6E33               	movwf	(btemp+9)^0,c
 42953  016BD0  0E80               	movlw	128
 42954  016BD2  6E34               	movwf	(btemp+10)^0,c
 42955  016BD4  0E7F               	movlw	127
 42956  016BD6  6E35               	movwf	(btemp+11)^0,c
 42957                           
 42958                           ;stkvar	_prod @ sp[(-13)+0]
 42959  016BD8  0EF3               	movlw	-13
 42960  016BDA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42961  016BE0  0EF4               	movlw	-12
 42962  016BE2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42963  016BE8  0EF5               	movlw	-11
 42964  016BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42965  016BF0  0EF6               	movlw	-10
 42966  016BF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42967  016BF8  D044               	goto	l10562
 42968  016BFA                     l10546:
 42969                           
 42970                           ;stkvar	_temp @ sp[(-13)+8]
 42971  016BFA  0EFC               	movlw	-4
 42972  016BFC  BEE3               	btfsc	plusw1,7,c
 42973  016BFE  D007               	goto	u8740
 42974  016C00  0EFC               	movlw	-4
 42975  016C02  50E3               	movf	plusw1,w,c
 42976  016C04  E10F               	bnz	l10552
 42977  016C06  0EFB               	movlw	-5
 42978  016C08  04E3               	decf	plusw1,w,c
 42979  016C0A  B0D8               	btfsc	status,0,c
 42980  016C0C  D00B               	goto	l10552
 42981  016C0E                     u8740:
 42982                           
 42983                           ;stkvar	_prod @ sp[(-13)+0]
 42984  016C0E  0EF3               	movlw	-13
 42985  016C10  6AE3               	clrf	plusw1,c
 42986  016C12  0EF4               	movlw	-12
 42987  016C14  6AE3               	clrf	plusw1,c
 42988  016C16  0EF5               	movlw	-11
 42989  016C18  6AE3               	clrf	plusw1,c
 42990  016C1A  0EF6               	movlw	-10
 42991  016C1C  6AE3               	clrf	plusw1,c
 42992                           
 42993                           ;stkvar	_sign @ sp[(-13)+12]
 42994  016C1E  0EFF               	movlw	-1
 42995  016C20  6AE3               	clrf	plusw1,c
 42996  016C22  D02F               	goto	l10562
 42997  016C24                     l10552:
 42998                           
 42999                           ;stkvar	_temp @ sp[(-13)+8]
 43000                           ;stkvar	_bexp @ sp[(-13)+10]
 43001  016C24  0EFB               	movlw	-5
 43002  016C26  006F FF8C  F02A    	movff	plusw1,btemp
 43003  016C2C  0EFD               	movlw	-3
 43004  016C2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 43005                           
 43006                           ;stkvar	_prod @ sp[(-13)+0]
 43007  016C34  50E1               	movf	fsr1l,w,c
 43008  016C36  0FF3               	addlw	-13
 43009  016C38  6ED9               	movwf	fsr2l,c
 43010  016C3A  50E2               	movf	fsr1h,w,c
 43011  016C3C  6EDA               	movwf	fsr2h,c
 43012  016C3E  0EFF               	movlw	255
 43013  016C40  22DA               	addwfc	fsr2h,f,c
 43014  016C42  0EFF               	movlw	255
 43015  016C44  16DE               	andwf	postinc2,f,c
 43016  016C46  0EFF               	movlw	255
 43017  016C48  16DE               	andwf	postinc2,f,c
 43018  016C4A  0E7F               	movlw	127
 43019  016C4C  16DE               	andwf	postinc2,f,c
 43020  016C4E  0E00               	movlw	0
 43021  016C50  16DE               	andwf	postinc2,f,c
 43022                           
 43023                           ;stkvar	_bexp @ sp[(-13)+10]
 43024  016C52  0EFD               	movlw	-3
 43025  016C54  A0E3               	btfss	plusw1,0,c
 43026  016C56  D008               	goto	l10560
 43027                           
 43028                           ;stkvar	_prod @ sp[(-13)+0]
 43029  016C58  0EF5               	movlw	245
 43030  016C5A  24E1               	addwf	fsr1l,w,c
 43031  016C5C  6ED9               	movwf	fsr2l,c
 43032  016C5E  0EFF               	movlw	255
 43033  016C60  20E2               	addwfc	fsr1h,w,c
 43034  016C62  6EDA               	movwf	fsr2h,c
 43035  016C64  0E00               	movlw	0
 43036  016C66  8EDB               	bsf	plusw2,7,c
 43037  016C68                     l10560:
 43038                           
 43039                           ;stkvar	_prod @ sp[(-13)+0]
 43040  016C68  0EF6               	movlw	246
 43041  016C6A  24E1               	addwf	fsr1l,w,c
 43042  016C6C  6ED9               	movwf	fsr2l,c
 43043  016C6E  0EFF               	movlw	255
 43044  016C70  20E2               	addwfc	fsr1h,w,c
 43045  016C72  6EDA               	movwf	fsr2h,c
 43046                           
 43047                           ;stkvar	_bexp @ sp[(-13)+10]
 43048  016C74  0EFD               	movlw	-3
 43049  016C76  006F FF8C  F035    	movff	plusw1,btemp+11
 43050  016C7C  90D8               	bcf	status,0,c
 43051  016C7E  3035               	rrcf	(btemp+11)^0,w,c
 43052  016C80  6EDF               	movwf	indf2,c
 43053  016C82                     l10562:
 43054                           
 43055                           ;stkvar	_sign @ sp[(-13)+12]
 43056  016C82  0EFF               	movlw	-1
 43057  016C84  006F FF8C  F035    	movff	plusw1,btemp+11
 43058                           
 43059                           ;stkvar	_prod @ sp[(-13)+0]
 43060  016C8A  0EF6               	movlw	246
 43061  016C8C  24E1               	addwf	fsr1l,w,c
 43062  016C8E  6ED9               	movwf	fsr2l,c
 43063  016C90  0EFF               	movlw	255
 43064  016C92  20E2               	addwfc	fsr1h,w,c
 43065  016C94  6EDA               	movwf	fsr2h,c
 43066  016C96  5035               	movf	(btemp+11)^0,w,c
 43067  016C98  12DF               	iorwf	indf2,f,c
 43068                           
 43069                           ;stkvar	_prod @ sp[(-13)+0]
 43070  016C9A  0EF3               	movlw	-13
 43071  016C9C  006F FF8C  F02A    	movff	plusw1,btemp
 43072  016CA2  0EF4               	movlw	-12
 43073  016CA4  006F FF8C  F02B    	movff	plusw1,btemp+1
 43074  016CAA  0EF5               	movlw	-11
 43075  016CAC  006F FF8C  F02C    	movff	plusw1,btemp+2
 43076  016CB2  0EF6               	movlw	-10
 43077  016CB4  006F FF8C  F02D    	movff	plusw1,btemp+3
 43078  016CBA                     l3340:
 43079                           
 43080                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 43081  016CBA  0EEB               	movlw	235
 43082  016CBC  26E1               	addwf	fsr1l,f,c
 43083  016CBE  0EFF               	movlw	255
 43084  016CC0  22E2               	addwfc	fsr1h,f,c
 43085  016CC2  0012               	return		;funcret
 43086  016CC4                     __end_of___flmul:
 43087                           	opt callstack 0
 43088                           
 43089 ;; *************** function _SYSTEM_Initialize *****************
 43090 ;; Defined at:
 43091 ;;		line 50 in file "mcc_generated_files/mcc.c"
 43092 ;; Parameters:    Size  Location     Type
 43093 ;;		None
 43094 ;; Auto vars:     Size  Location     Type
 43095 ;;		None
 43096 ;; Return value:  Size  Location     Type
 43097 ;;                  1  [STACK] void 
 43098 ;; Registers used:
 43099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 43100 ;; Tracked objects:
 43101 ;;		On entry : 0/0
 43102 ;;		On exit  : 3F/3C
 43103 ;;		Unchanged: 0/0
 43104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43109 ;;Total ram usage:        0 bytes
 43110 ;; Hardware stack levels used:    1
 43111 ;; Hardware stack levels required when called:   17
 43112 ;; This function calls:
 43113 ;;		_ADCC_Initialize
 43114 ;;		_CLKREF_Initialize
 43115 ;;		_CRC_Initialize
 43116 ;;		_DMA1_Initialize
 43117 ;;		_DMA2_Initialize
 43118 ;;		_EXT_INT_Initialize
 43119 ;;		_FVR_Initialize
 43120 ;;		_INTERRUPT_Initialize
 43121 ;;		_OSCILLATOR_Initialize
 43122 ;;		_PIN_MANAGER_Initialize
 43123 ;;		_PMD_Initialize
 43124 ;;		_PWM8_Initialize
 43125 ;;		_SPI1_Initialize
 43126 ;;		_TMR2_Initialize
 43127 ;;		_TMR3_Initialize
 43128 ;;		_TMR5_Initialize
 43129 ;;		_TMR6_Initialize
 43130 ;;		_UART1_Initialize
 43131 ;;		_UART2_Initialize
 43132 ;; This function is called by:
 43133 ;;		_main
 43134 ;; This function uses a reentrant model
 43135 ;;
 43136                           
 43137                           	psect	text155
 43138  001860                     __ptext155:
 43139                           	opt callstack 0
 43140  001860                     _SYSTEM_Initialize:
 43141                           	opt callstack 13
 43142                           
 43143                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 43144                           
 43145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43146                           ;incstack = 0
 43147  001860  ECD4  F009         	call	_INTERRUPT_Initialize	;wreg free
 43148                           
 43149                           ; BSR set to: 57
 43150                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 43151  001864  ECF3  F012         	call	_PMD_Initialize	;wreg free
 43152                           
 43153                           ; BSR set to: 57
 43154                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 43155  001868  EC02  F006         	call	_PIN_MANAGER_Initialize	;wreg free
 43156                           
 43157                           ; BSR set to: 58
 43158                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 43159  00186C  ECE8  F012         	call	_OSCILLATOR_Initialize	;wreg free
 43160                           
 43161                           ; BSR set to: 57
 43162                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 43163  001870  EC87  F013         	call	_FVR_Initialize	;wreg free
 43164                           
 43165                           ; BSR set to: 62
 43166                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 43167  001874  EC4B  F006         	call	_CRC_Initialize	;wreg free
 43168                           
 43169                           ; BSR set to: 0
 43170                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 43171  001878  EC02  F009         	call	_ADCC_Initialize	;wreg free
 43172                           
 43173                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 43174  00187C  ECBB  F012         	call	_TMR2_Initialize	;wreg free
 43175                           
 43176                           ; BSR set to: 57
 43177                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 43178  001880  ECDD  F012         	call	_PWM8_Initialize	;wreg free
 43179                           
 43180                           ; BSR set to: 63
 43181                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 43182  001884  EC70  F00F         	call	_EXT_INT_Initialize	;wreg free
 43183                           
 43184                           ; BSR set to: 57
 43185                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 43186  001888  EC46  F010         	call	_TMR6_Initialize	;wreg free
 43187                           
 43188                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 43189  00188C  ECEA  F00C         	call	_TMR3_Initialize	;wreg free
 43190                           
 43191                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 43192  001890  ECC6  F00C         	call	_TMR5_Initialize	;wreg free
 43193                           
 43194                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 43195  001894  ECA2  F00C         	call	_UART1_Initialize	;wreg free
 43196                           
 43197                           ; BSR set to: 57
 43198                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 43199  001898  ECCD  F00A         	call	_UART2_Initialize	;wreg free
 43200                           
 43201                           ; BSR set to: 57
 43202                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 43203  00189C  ECD2  F012         	call	_SPI1_Initialize	;wreg free
 43204                           
 43205                           ; BSR set to: 61
 43206                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 43207  0018A0  EC86  F00B         	call	_DMA2_Initialize	;wreg free
 43208                           
 43209                           ; BSR set to: 59
 43210                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 43211  0018A4  ECCD  F008         	call	_DMA1_Initialize	;wreg free
 43212                           
 43213                           ; BSR set to: 59
 43214                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 43215  0018A8  EC5B  F013         	call	_CLKREF_Initialize	;wreg free
 43216                           
 43217                           ; BSR set to: 60
 43218                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 43219  0018AC  0012               	return		;funcret
 43220  0018AE                     __end_of_SYSTEM_Initialize:
 43221                           	opt callstack 0
 43222                           
 43223 ;; *************** function _UART2_Initialize *****************
 43224 ;; Defined at:
 43225 ;;		line 78 in file "mcc_generated_files/uart2.c"
 43226 ;; Parameters:    Size  Location     Type
 43227 ;;		None
 43228 ;; Auto vars:     Size  Location     Type
 43229 ;;		None
 43230 ;; Return value:  Size  Location     Type
 43231 ;;                  1  [STACK] void 
 43232 ;; Registers used:
 43233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43234 ;; Tracked objects:
 43235 ;;		On entry : 3F/39
 43236 ;;		On exit  : 3F/39
 43237 ;;		Unchanged: 0/0
 43238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43243 ;;Total ram usage:        0 bytes
 43244 ;; Hardware stack levels used:    1
 43245 ;; Hardware stack levels required when called:   16
 43246 ;; This function calls:
 43247 ;;		_UART2_SetRxInterruptHandler
 43248 ;;		_UART2_SetTxInterruptHandler
 43249 ;; This function is called by:
 43250 ;;		_SYSTEM_Initialize
 43251 ;; This function uses a reentrant model
 43252 ;;
 43253                           
 43254                           	psect	text156
 43255  00159A                     __ptext156:
 43256                           	opt callstack 0
 43257  00159A                     _UART2_Initialize:
 43258                           	opt callstack 13
 43259                           
 43260                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 43261                           
 43262                           ; BSR set to: 60
 43263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43264                           ;incstack = 0
 43265  00159A  0139               	movlb	57	; () banked
 43266  00159C  9596               	bcf	150,2,b	;volatile
 43267                           
 43268                           ; BSR set to: 57
 43269                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 43270  00159E  0E90               	movlw	low _UART2_Receive_ISR
 43271  0015A0  6EE6               	movwf	postinc1,c
 43272  0015A2  0E24               	movlw	high _UART2_Receive_ISR
 43273  0015A4  6EE6               	movwf	postinc1,c
 43274  0015A6  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 43275  0015A8  6EE6               	movwf	postinc1,c
 43276  0015AA  EC97  F010         	call	_UART2_SetRxInterruptHandler	;wreg free
 43277                           
 43278                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 43279  0015AE  0139               	movlb	57	; () banked
 43280  0015B0  9796               	bcf	150,3,b	;volatile
 43281                           
 43282                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 43283  0015B2  0E60               	movlw	low _UART2_Transmit_ISR
 43284  0015B4  6EE6               	movwf	postinc1,c
 43285  0015B6  0E20               	movlw	high _UART2_Transmit_ISR
 43286  0015B8  6EE6               	movwf	postinc1,c
 43287  0015BA  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 43288  0015BC  6EE6               	movwf	postinc1,c
 43289  0015BE  EC83  F010         	call	_UART2_SetTxInterruptHandler	;wreg free
 43290                           
 43291                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 43292  0015C2  013D               	movlb	61	; () banked
 43293  0015C4  6BD4               	clrf	212,b	;volatile
 43294                           
 43295                           ; BSR set to: 61
 43296                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 43297  0015C6  6BD6               	clrf	214,b	;volatile
 43298                           
 43299                           ; BSR set to: 61
 43300                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 43301  0015C8  6BD8               	clrf	216,b	;volatile
 43302                           
 43303                           ; BSR set to: 61
 43304                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 43305  0015CA  0EB0               	movlw	176
 43306  0015CC  6FDA               	movwf	218,b	;volatile
 43307                           
 43308                           ; BSR set to: 61
 43309                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 43310  0015CE  0E80               	movlw	128
 43311  0015D0  6FDB               	movwf	219,b	;volatile
 43312                           
 43313                           ; BSR set to: 61
 43314                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 43315  0015D2  6BDC               	clrf	220,b	;volatile
 43316                           
 43317                           ; BSR set to: 61
 43318                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 43319  0015D4  0E82               	movlw	130
 43320  0015D6  6FDD               	movwf	221,b	;volatile
 43321                           
 43322                           ; BSR set to: 61
 43323                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 43324  0015D8  0E06               	movlw	6
 43325  0015DA  6FDE               	movwf	222,b	;volatile
 43326                           
 43327                           ; BSR set to: 61
 43328                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 43329  0015DC  6BDF               	clrf	223,b	;volatile
 43330                           
 43331                           ; BSR set to: 61
 43332                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 43333  0015DE  6BE0               	clrf	224,b	;volatile
 43334                           
 43335                           ; BSR set to: 61
 43336                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 43337  0015E0  6BE1               	clrf	225,b	;volatile
 43338                           
 43339                           ; BSR set to: 61
 43340                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 43341  0015E2  6BE2               	clrf	226,b	;volatile
 43342                           
 43343                           ; BSR set to: 61
 43344                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 43345  0015E4  0100               	movlb	0	; () banked
 43346  0015E6  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 43347                           
 43348                           ; BSR set to: 0
 43349                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 43350  0015E8  6A56               	clrf	_uart2TxTail^0,c	;volatile
 43351                           
 43352                           ; BSR set to: 0
 43353                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 43354  0015EA  0E40               	movlw	64
 43355  0015EC  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 43356                           
 43357                           ; BSR set to: 0
 43358                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 43359  0015EE  6A54               	clrf	_uart2RxHead^0,c	;volatile
 43360                           
 43361                           ; BSR set to: 0
 43362                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 43363  0015F0  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 43364                           
 43365                           ; BSR set to: 0
 43366                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 43367  0015F2  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 43368                           
 43369                           ; BSR set to: 0
 43370                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 43371  0015F4  0139               	movlb	57	; () banked
 43372  0015F6  8596               	bsf	150,2,b	;volatile
 43373                           
 43374                           ; BSR set to: 57
 43375                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43376  0015F8  0012               	return		;funcret
 43377  0015FA                     __end_of_UART2_Initialize:
 43378                           	opt callstack 0
 43379                           
 43380 ;; *************** function _UART2_SetTxInterruptHandler *****************
 43381 ;; Defined at:
 43382 ;;		line 252 in file "mcc_generated_files/uart2.c"
 43383 ;; Parameters:    Size  Location     Type
 43384 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43385 ;;		 -> UART2_Transmit_ISR(1), 
 43386 ;; Auto vars:     Size  Location     Type
 43387 ;;		None
 43388 ;; Return value:  Size  Location     Type
 43389 ;;                  1  [STACK] void 
 43390 ;; Registers used:
 43391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43392 ;; Tracked objects:
 43393 ;;		On entry : 3F/39
 43394 ;;		On exit  : 0/0
 43395 ;;		Unchanged: 0/0
 43396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43401 ;;Total ram usage:        0 bytes
 43402 ;; Hardware stack levels used:    1
 43403 ;; Hardware stack levels required when called:   15
 43404 ;; This function calls:
 43405 ;;		Nothing
 43406 ;; This function is called by:
 43407 ;;		_UART2_Initialize
 43408 ;; This function uses a reentrant model
 43409 ;;
 43410                           
 43411                           	psect	text157
 43412  002106                     __ptext157:
 43413                           	opt callstack 0
 43414  002106                     _UART2_SetTxInterruptHandler:
 43415                           	opt callstack 13
 43416                           
 43417                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 43418                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43419                           
 43420                           ; BSR set to: 57
 43421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43422                           ;incstack = 0
 43423  002106  50E1               	movf	fsr1l,w,c
 43424  002108  0FFD               	addlw	-3
 43425  00210A  6ED9               	movwf	fsr2l,c
 43426  00210C  50E2               	movf	fsr1h,w,c
 43427  00210E  6EDA               	movwf	fsr2h,c
 43428  002110  0EFF               	movlw	255
 43429  002112  22DA               	addwfc	fsr2h,f,c
 43430  002114  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 43431  00211A  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 43432  002120  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 43433                           
 43434                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43435  002126  52E5               	movf	postdec1,f,c
 43436  002128  52E5               	movf	postdec1,f,c
 43437  00212A  52E5               	movf	postdec1,f,c
 43438  00212C  0012               	return		;funcret
 43439  00212E                     __end_of_UART2_SetTxInterruptHandler:
 43440                           	opt callstack 0
 43441                           
 43442 ;; *************** function _UART2_SetRxInterruptHandler *****************
 43443 ;; Defined at:
 43444 ;;		line 248 in file "mcc_generated_files/uart2.c"
 43445 ;; Parameters:    Size  Location     Type
 43446 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43447 ;;		 -> UART2_Receive_ISR(1), 
 43448 ;; Auto vars:     Size  Location     Type
 43449 ;;		None
 43450 ;; Return value:  Size  Location     Type
 43451 ;;                  1  [STACK] void 
 43452 ;; Registers used:
 43453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43454 ;; Tracked objects:
 43455 ;;		On entry : 3F/39
 43456 ;;		On exit  : 0/0
 43457 ;;		Unchanged: 0/0
 43458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43463 ;;Total ram usage:        0 bytes
 43464 ;; Hardware stack levels used:    1
 43465 ;; Hardware stack levels required when called:   15
 43466 ;; This function calls:
 43467 ;;		Nothing
 43468 ;; This function is called by:
 43469 ;;		_UART2_Initialize
 43470 ;; This function uses a reentrant model
 43471 ;;
 43472                           
 43473                           	psect	text158
 43474  00212E                     __ptext158:
 43475                           	opt callstack 0
 43476  00212E                     _UART2_SetRxInterruptHandler:
 43477                           	opt callstack 13
 43478                           
 43479                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 43480                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43481                           
 43482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43483                           ;incstack = 0
 43484  00212E  50E1               	movf	fsr1l,w,c
 43485  002130  0FFD               	addlw	-3
 43486  002132  6ED9               	movwf	fsr2l,c
 43487  002134  50E2               	movf	fsr1h,w,c
 43488  002136  6EDA               	movwf	fsr2h,c
 43489  002138  0EFF               	movlw	255
 43490  00213A  22DA               	addwfc	fsr2h,f,c
 43491  00213C  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 43492  002142  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 43493  002148  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 43494                           
 43495                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43496  00214E  52E5               	movf	postdec1,f,c
 43497  002150  52E5               	movf	postdec1,f,c
 43498  002152  52E5               	movf	postdec1,f,c
 43499  002154  0012               	return		;funcret
 43500  002156                     __end_of_UART2_SetRxInterruptHandler:
 43501                           	opt callstack 0
 43502                           
 43503 ;; *************** function _UART1_Initialize *****************
 43504 ;; Defined at:
 43505 ;;		line 75 in file "mcc_generated_files/uart1.c"
 43506 ;; Parameters:    Size  Location     Type
 43507 ;;		None
 43508 ;; Auto vars:     Size  Location     Type
 43509 ;;		None
 43510 ;; Return value:  Size  Location     Type
 43511 ;;                  1  [STACK] void 
 43512 ;; Registers used:
 43513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43514 ;; Tracked objects:
 43515 ;;		On entry : 0/39
 43516 ;;		On exit  : 3F/39
 43517 ;;		Unchanged: 0/0
 43518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43523 ;;Total ram usage:        0 bytes
 43524 ;; Hardware stack levels used:    1
 43525 ;; Hardware stack levels required when called:   16
 43526 ;; This function calls:
 43527 ;;		_UART1_SetRxInterruptHandler
 43528 ;; This function is called by:
 43529 ;;		_SYSTEM_Initialize
 43530 ;; This function uses a reentrant model
 43531 ;;
 43532                           
 43533                           	psect	text159
 43534  001944                     __ptext159:
 43535                           	opt callstack 0
 43536  001944                     _UART1_Initialize:
 43537                           	opt callstack 13
 43538                           
 43539                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 43540                           
 43541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43542                           ;incstack = 0
 43543  001944  0139               	movlb	57	; () banked
 43544  001946  9793               	bcf	147,3,b	;volatile
 43545                           
 43546                           ; BSR set to: 57
 43547                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 43548  001948  0E4E               	movlw	low _UART1_Receive_ISR
 43549  00194A  6EE6               	movwf	postinc1,c
 43550  00194C  0E24               	movlw	high _UART1_Receive_ISR
 43551  00194E  6EE6               	movwf	postinc1,c
 43552  001950  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 43553  001952  6EE6               	movwf	postinc1,c
 43554  001954  ECAB  F010         	call	_UART1_SetRxInterruptHandler	;wreg free
 43555                           
 43556                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 43557  001958  013D               	movlb	61	; () banked
 43558  00195A  6BEC               	clrf	236,b	;volatile
 43559                           
 43560                           ; BSR set to: 61
 43561                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 43562  00195C  6BED               	clrf	237,b	;volatile
 43563                           
 43564                           ; BSR set to: 61
 43565                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 43566  00195E  6BEE               	clrf	238,b	;volatile
 43567                           
 43568                           ; BSR set to: 61
 43569                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 43570  001960  6BEF               	clrf	239,b	;volatile
 43571                           
 43572                           ; BSR set to: 61
 43573                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 43574  001962  6BF0               	clrf	240,b	;volatile
 43575                           
 43576                           ; BSR set to: 61
 43577                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 43578  001964  6BF1               	clrf	241,b	;volatile
 43579                           
 43580                           ; BSR set to: 61
 43581                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 43582  001966  0EB0               	movlw	176
 43583  001968  6FF2               	movwf	242,b	;volatile
 43584                           
 43585                           ; BSR set to: 61
 43586                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 43587  00196A  0E80               	movlw	128
 43588  00196C  6FF3               	movwf	243,b	;volatile
 43589                           
 43590                           ; BSR set to: 61
 43591                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 43592  00196E  6BF4               	clrf	244,b	;volatile
 43593                           
 43594                           ; BSR set to: 61
 43595                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 43596  001970  0E8A               	movlw	138
 43597  001972  6FF5               	movwf	245,b	;volatile
 43598                           
 43599                           ; BSR set to: 61
 43600                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 43601  001974  6BF6               	clrf	246,b	;volatile
 43602                           
 43603                           ; BSR set to: 61
 43604                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 43605  001976  6BF7               	clrf	247,b	;volatile
 43606                           
 43607                           ; BSR set to: 61
 43608                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 43609  001978  6BF8               	clrf	248,b	;volatile
 43610                           
 43611                           ; BSR set to: 61
 43612                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 43613  00197A  6BF9               	clrf	249,b	;volatile
 43614                           
 43615                           ; BSR set to: 61
 43616                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 43617  00197C  6BFA               	clrf	250,b	;volatile
 43618                           
 43619                           ; BSR set to: 61
 43620                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 43621  00197E  6A57               	clrf	_uart1RxHead^0,c	;volatile
 43622                           
 43623                           ; BSR set to: 61
 43624                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 43625  001980  0100               	movlb	0	; () banked
 43626  001982  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 43627                           
 43628                           ; BSR set to: 0
 43629                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 43630  001984  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 43631                           
 43632                           ; BSR set to: 0
 43633                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 43634  001986  0139               	movlb	57	; () banked
 43635  001988  8793               	bsf	147,3,b	;volatile
 43636                           
 43637                           ; BSR set to: 57
 43638                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43639  00198A  0012               	return		;funcret
 43640  00198C                     __end_of_UART1_Initialize:
 43641                           	opt callstack 0
 43642                           
 43643 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43644 ;; Defined at:
 43645 ;;		line 207 in file "mcc_generated_files/uart1.c"
 43646 ;; Parameters:    Size  Location     Type
 43647 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43648 ;;		 -> UART1_Receive_ISR(1), 
 43649 ;; Auto vars:     Size  Location     Type
 43650 ;;		None
 43651 ;; Return value:  Size  Location     Type
 43652 ;;                  1  [STACK] void 
 43653 ;; Registers used:
 43654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43655 ;; Tracked objects:
 43656 ;;		On entry : 3F/39
 43657 ;;		On exit  : 0/0
 43658 ;;		Unchanged: 0/0
 43659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43664 ;;Total ram usage:        0 bytes
 43665 ;; Hardware stack levels used:    1
 43666 ;; Hardware stack levels required when called:   15
 43667 ;; This function calls:
 43668 ;;		Nothing
 43669 ;; This function is called by:
 43670 ;;		_UART1_Initialize
 43671 ;; This function uses a reentrant model
 43672 ;;
 43673                           
 43674                           	psect	text160
 43675  002156                     __ptext160:
 43676                           	opt callstack 0
 43677  002156                     _UART1_SetRxInterruptHandler:
 43678                           	opt callstack 13
 43679                           
 43680                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 43681                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43682                           
 43683                           ; BSR set to: 57
 43684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43685                           ;incstack = 0
 43686  002156  50E1               	movf	fsr1l,w,c
 43687  002158  0FFD               	addlw	-3
 43688  00215A  6ED9               	movwf	fsr2l,c
 43689  00215C  50E2               	movf	fsr1h,w,c
 43690  00215E  6EDA               	movwf	fsr2h,c
 43691  002160  0EFF               	movlw	255
 43692  002162  22DA               	addwfc	fsr2h,f,c
 43693  002164  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 43694  00216A  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 43695  002170  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 43696                           
 43697                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43698  002176  52E5               	movf	postdec1,f,c
 43699  002178  52E5               	movf	postdec1,f,c
 43700  00217A  52E5               	movf	postdec1,f,c
 43701  00217C  0012               	return		;funcret
 43702  00217E                     __end_of_UART1_SetRxInterruptHandler:
 43703                           	opt callstack 0
 43704                           
 43705 ;; *************** function _TMR6_Initialize *****************
 43706 ;; Defined at:
 43707 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 43708 ;; Parameters:    Size  Location     Type
 43709 ;;		None
 43710 ;; Auto vars:     Size  Location     Type
 43711 ;;		None
 43712 ;; Return value:  Size  Location     Type
 43713 ;;                  1  [STACK] void 
 43714 ;; Registers used:
 43715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43716 ;; Tracked objects:
 43717 ;;		On entry : 3F/39
 43718 ;;		On exit  : 0/0
 43719 ;;		Unchanged: 0/0
 43720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43725 ;;Total ram usage:        0 bytes
 43726 ;; Hardware stack levels used:    1
 43727 ;; Hardware stack levels required when called:   16
 43728 ;; This function calls:
 43729 ;;		_TMR6_SetInterruptHandler
 43730 ;; This function is called by:
 43731 ;;		_SYSTEM_Initialize
 43732 ;; This function uses a reentrant model
 43733 ;;
 43734                           
 43735                           	psect	text161
 43736  00208C                     __ptext161:
 43737                           	opt callstack 0
 43738  00208C                     _TMR6_Initialize:
 43739                           	opt callstack 13
 43740                           
 43741                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 43742                           
 43743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43744                           ;incstack = 0
 43745  00208C  0E01               	movlw	1
 43746  00208E  6E96               	movwf	150,c	;volatile
 43747                           
 43748                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 43749  002090  6A95               	clrf	149,c	;volatile
 43750                           
 43751                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 43752  002092  6A97               	clrf	151,c	;volatile
 43753                           
 43754                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 43755  002094  0E7C               	movlw	124
 43756  002096  6E93               	movwf	147,c	;volatile
 43757                           
 43758                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 43759  002098  6A92               	clrf	146,c	;volatile
 43760                           
 43761                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 43762  00209A  0139               	movlb	57	; () banked
 43763  00209C  91A9               	bcf	169,0,b	;volatile
 43764                           
 43765                           ; BSR set to: 57
 43766                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 43767  00209E  8199               	bsf	153,0,b	;volatile
 43768                           
 43769                           ; BSR set to: 57
 43770                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 43771  0020A0  0EAE               	movlw	low _TMR6_DefaultInterruptHandler
 43772  0020A2  6EE6               	movwf	postinc1,c
 43773  0020A4  0E18               	movlw	high _TMR6_DefaultInterruptHandler
 43774  0020A6  6EE6               	movwf	postinc1,c
 43775  0020A8  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 43776  0020AA  6EE6               	movwf	postinc1,c
 43777  0020AC  ECBF  F010         	call	_TMR6_SetInterruptHandler	;wreg free
 43778                           
 43779                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 43780  0020B0  0EE0               	movlw	224
 43781  0020B2  6E94               	movwf	148,c	;volatile
 43782                           
 43783                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43784  0020B4  0012               	return		;funcret
 43785  0020B6                     __end_of_TMR6_Initialize:
 43786                           	opt callstack 0
 43787                           
 43788 ;; *************** function _TMR6_SetInterruptHandler *****************
 43789 ;; Defined at:
 43790 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 43791 ;; Parameters:    Size  Location     Type
 43792 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43793 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 43794 ;; Auto vars:     Size  Location     Type
 43795 ;;		None
 43796 ;; Return value:  Size  Location     Type
 43797 ;;                  1  [STACK] void 
 43798 ;; Registers used:
 43799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43800 ;; Tracked objects:
 43801 ;;		On entry : 3F/39
 43802 ;;		On exit  : 0/0
 43803 ;;		Unchanged: 0/0
 43804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43809 ;;Total ram usage:        0 bytes
 43810 ;; Hardware stack levels used:    1
 43811 ;; Hardware stack levels required when called:   15
 43812 ;; This function calls:
 43813 ;;		Nothing
 43814 ;; This function is called by:
 43815 ;;		_TMR6_Initialize
 43816 ;; This function uses a reentrant model
 43817 ;;
 43818                           
 43819                           	psect	text162
 43820  00217E                     __ptext162:
 43821                           	opt callstack 0
 43822  00217E                     _TMR6_SetInterruptHandler:
 43823                           	opt callstack 13
 43824                           
 43825                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 43826                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43827                           
 43828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43829                           ;incstack = 0
 43830  00217E  50E1               	movf	fsr1l,w,c
 43831  002180  0FFD               	addlw	-3
 43832  002182  6ED9               	movwf	fsr2l,c
 43833  002184  50E2               	movf	fsr1h,w,c
 43834  002186  6EDA               	movwf	fsr2h,c
 43835  002188  0EFF               	movlw	255
 43836  00218A  22DA               	addwfc	fsr2h,f,c
 43837  00218C  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 43838  002192  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 43839  002198  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 43840                           
 43841                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43842  00219E  52E5               	movf	postdec1,f,c
 43843  0021A0  52E5               	movf	postdec1,f,c
 43844  0021A2  52E5               	movf	postdec1,f,c
 43845  0021A4  0012               	return		;funcret
 43846  0021A6                     __end_of_TMR6_SetInterruptHandler:
 43847                           	opt callstack 0
 43848                           
 43849 ;; *************** function _TMR5_Initialize *****************
 43850 ;; Defined at:
 43851 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 43852 ;; Parameters:    Size  Location     Type
 43853 ;;		None
 43854 ;; Auto vars:     Size  Location     Type
 43855 ;;		None
 43856 ;; Return value:  Size  Location     Type
 43857 ;;                  1  [STACK] void 
 43858 ;; Registers used:
 43859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43860 ;; Tracked objects:
 43861 ;;		On entry : 0/39
 43862 ;;		On exit  : 0/0
 43863 ;;		Unchanged: 0/0
 43864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43869 ;;Total ram usage:        0 bytes
 43870 ;; Hardware stack levels used:    1
 43871 ;; Hardware stack levels required when called:   16
 43872 ;; This function calls:
 43873 ;;		_TMR5_SetInterruptHandler
 43874 ;; This function is called by:
 43875 ;;		_SYSTEM_Initialize
 43876 ;; This function uses a reentrant model
 43877 ;;
 43878                           
 43879                           	psect	text163
 43880  00198C                     __ptext163:
 43881                           	opt callstack 0
 43882  00198C                     _TMR5_Initialize:
 43883                           	opt callstack 13
 43884                           
 43885                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 43886                           
 43887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43888                           ;incstack = 0
 43889  00198C  6A9B               	clrf	155,c	;volatile
 43890                           
 43891                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 43892  00198E  6A9C               	clrf	156,c	;volatile
 43893                           
 43894                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 43895  001990  0E01               	movlw	1
 43896  001992  6E9D               	movwf	157,c	;volatile
 43897                           
 43898                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 43899  001994  0E63               	movlw	99
 43900  001996  6E99               	movwf	153,c	;volatile
 43901                           
 43902                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 43903  001998  0EC0               	movlw	192
 43904  00199A  6E98               	movwf	152,c	;volatile
 43905                           
 43906                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 43907  00199C  5098               	movf	152,w,c	;volatile
 43908  00199E  006F FE64  F02A    	movff	16281,btemp	;volatile
 43909  0019A4  6A2B               	clrf	(btemp+1)^0,c
 43910  0019A6  0060  F0A8  F02B   	movff	btemp,btemp+1
 43911  0019AC  6A2A               	clrf	btemp^0,c
 43912  0019AE  102A               	iorwf	btemp^0,w,c
 43913  0019B0  0100               	movlb	0	; () banked
 43914  0019B2  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 43915  0019B4  502B               	movf	(btemp+1)^0,w,c
 43916  0019B6  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 43917                           
 43918                           ; BSR set to: 0
 43919                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 43920  0019B8  0139               	movlb	57	; () banked
 43921  0019BA  9DA8               	bcf	168,6,b	;volatile
 43922                           
 43923                           ; BSR set to: 57
 43924                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 43925  0019BC  8D98               	bsf	152,6,b	;volatile
 43926                           
 43927                           ; BSR set to: 57
 43928                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 43929  0019BE  0EA0               	movlw	low _TMR5_DefaultInterruptHandler
 43930  0019C0  6EE6               	movwf	postinc1,c
 43931  0019C2  0E1D               	movlw	high _TMR5_DefaultInterruptHandler
 43932  0019C4  6EE6               	movwf	postinc1,c
 43933  0019C6  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 43934  0019C8  6EE6               	movwf	postinc1,c
 43935  0019CA  ECD3  F010         	call	_TMR5_SetInterruptHandler	;wreg free
 43936                           
 43937                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 43938  0019CE  0E31               	movlw	49
 43939  0019D0  6E9A               	movwf	154,c	;volatile
 43940                           
 43941                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43942  0019D2  0012               	return		;funcret
 43943  0019D4                     __end_of_TMR5_Initialize:
 43944                           	opt callstack 0
 43945                           
 43946 ;; *************** function _TMR5_SetInterruptHandler *****************
 43947 ;; Defined at:
 43948 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 43949 ;; Parameters:    Size  Location     Type
 43950 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43951 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 43952 ;; Auto vars:     Size  Location     Type
 43953 ;;		None
 43954 ;; Return value:  Size  Location     Type
 43955 ;;                  1  [STACK] void 
 43956 ;; Registers used:
 43957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43958 ;; Tracked objects:
 43959 ;;		On entry : 3F/39
 43960 ;;		On exit  : 0/0
 43961 ;;		Unchanged: 0/0
 43962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43967 ;;Total ram usage:        0 bytes
 43968 ;; Hardware stack levels used:    1
 43969 ;; Hardware stack levels required when called:   15
 43970 ;; This function calls:
 43971 ;;		Nothing
 43972 ;; This function is called by:
 43973 ;;		_TMR5_Initialize
 43974 ;; This function uses a reentrant model
 43975 ;;
 43976                           
 43977                           	psect	text164
 43978  0021A6                     __ptext164:
 43979                           	opt callstack 0
 43980  0021A6                     _TMR5_SetInterruptHandler:
 43981                           	opt callstack 13
 43982                           
 43983                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 43984                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43985                           
 43986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43987                           ;incstack = 0
 43988  0021A6  50E1               	movf	fsr1l,w,c
 43989  0021A8  0FFD               	addlw	-3
 43990  0021AA  6ED9               	movwf	fsr2l,c
 43991  0021AC  50E2               	movf	fsr1h,w,c
 43992  0021AE  6EDA               	movwf	fsr2h,c
 43993  0021B0  0EFF               	movlw	255
 43994  0021B2  22DA               	addwfc	fsr2h,f,c
 43995  0021B4  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 43996  0021BA  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 43997  0021C0  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 43998                           
 43999                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44000  0021C6  52E5               	movf	postdec1,f,c
 44001  0021C8  52E5               	movf	postdec1,f,c
 44002  0021CA  52E5               	movf	postdec1,f,c
 44003  0021CC  0012               	return		;funcret
 44004  0021CE                     __end_of_TMR5_SetInterruptHandler:
 44005                           	opt callstack 0
 44006                           
 44007 ;; *************** function _TMR3_Initialize *****************
 44008 ;; Defined at:
 44009 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 44010 ;; Parameters:    Size  Location     Type
 44011 ;;		None
 44012 ;; Auto vars:     Size  Location     Type
 44013 ;;		None
 44014 ;; Return value:  Size  Location     Type
 44015 ;;                  1  [STACK] void 
 44016 ;; Registers used:
 44017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44018 ;; Tracked objects:
 44019 ;;		On entry : 0/39
 44020 ;;		On exit  : 0/0
 44021 ;;		Unchanged: 0/0
 44022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44027 ;;Total ram usage:        0 bytes
 44028 ;; Hardware stack levels used:    1
 44029 ;; Hardware stack levels required when called:   16
 44030 ;; This function calls:
 44031 ;;		_TMR3_SetInterruptHandler
 44032 ;; This function is called by:
 44033 ;;		_SYSTEM_Initialize
 44034 ;; This function uses a reentrant model
 44035 ;;
 44036                           
 44037                           	psect	text165
 44038  0019D4                     __ptext165:
 44039                           	opt callstack 0
 44040  0019D4                     _TMR3_Initialize:
 44041                           	opt callstack 13
 44042                           
 44043                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 44044                           
 44045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44046                           ;incstack = 0
 44047  0019D4  6AA7               	clrf	167,c	;volatile
 44048                           
 44049                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 44050  0019D6  6AA8               	clrf	168,c	;volatile
 44051                           
 44052                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 44053  0019D8  0E01               	movlw	1
 44054  0019DA  6EA9               	movwf	169,c	;volatile
 44055                           
 44056                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 44057  0019DC  0E3C               	movlw	60
 44058  0019DE  6EA5               	movwf	165,c	;volatile
 44059                           
 44060                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 44061  0019E0  0EB0               	movlw	176
 44062  0019E2  6EA4               	movwf	164,c	;volatile
 44063                           
 44064                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 44065  0019E4  50A4               	movf	164,w,c	;volatile
 44066  0019E6  006F FE94  F02A    	movff	16293,btemp	;volatile
 44067  0019EC  6A2B               	clrf	(btemp+1)^0,c
 44068  0019EE  0060  F0A8  F02B   	movff	btemp,btemp+1
 44069  0019F4  6A2A               	clrf	btemp^0,c
 44070  0019F6  102A               	iorwf	btemp^0,w,c
 44071  0019F8  0100               	movlb	0	; () banked
 44072  0019FA  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 44073  0019FC  502B               	movf	(btemp+1)^0,w,c
 44074  0019FE  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 44075                           
 44076                           ; BSR set to: 0
 44077                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 44078  001A00  0139               	movlb	57	; () banked
 44079  001A02  9DA6               	bcf	166,6,b	;volatile
 44080                           
 44081                           ; BSR set to: 57
 44082                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 44083  001A04  8D96               	bsf	150,6,b	;volatile
 44084                           
 44085                           ; BSR set to: 57
 44086                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 44087  001A06  0E44               	movlw	low _TMR3_DefaultInterruptHandler
 44088  001A08  6EE6               	movwf	postinc1,c
 44089  001A0A  0E27               	movlw	high _TMR3_DefaultInterruptHandler
 44090  001A0C  6EE6               	movwf	postinc1,c
 44091  001A0E  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 44092  001A10  6EE6               	movwf	postinc1,c
 44093  001A12  ECE7  F010         	call	_TMR3_SetInterruptHandler	;wreg free
 44094                           
 44095                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 44096  001A16  0E31               	movlw	49
 44097  001A18  6EA6               	movwf	166,c	;volatile
 44098                           
 44099                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44100  001A1A  0012               	return		;funcret
 44101  001A1C                     __end_of_TMR3_Initialize:
 44102                           	opt callstack 0
 44103                           
 44104 ;; *************** function _TMR3_SetInterruptHandler *****************
 44105 ;; Defined at:
 44106 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 44107 ;; Parameters:    Size  Location     Type
 44108 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44109 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 44110 ;; Auto vars:     Size  Location     Type
 44111 ;;		None
 44112 ;; Return value:  Size  Location     Type
 44113 ;;                  1  [STACK] void 
 44114 ;; Registers used:
 44115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44116 ;; Tracked objects:
 44117 ;;		On entry : 0/1
 44118 ;;		On exit  : 0/0
 44119 ;;		Unchanged: 0/0
 44120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44125 ;;Total ram usage:        0 bytes
 44126 ;; Hardware stack levels used:    1
 44127 ;; Hardware stack levels required when called:   15
 44128 ;; This function calls:
 44129 ;;		Nothing
 44130 ;; This function is called by:
 44131 ;;		_TMR3_Initialize
 44132 ;;		_init_bsoc
 44133 ;; This function uses a reentrant model
 44134 ;;
 44135                           
 44136                           	psect	text166
 44137  0021CE                     __ptext166:
 44138                           	opt callstack 0
 44139  0021CE                     _TMR3_SetInterruptHandler:
 44140                           	opt callstack 14
 44141                           
 44142                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 44143                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44144                           
 44145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44146                           ;incstack = 0
 44147  0021CE  50E1               	movf	fsr1l,w,c
 44148  0021D0  0FFD               	addlw	-3
 44149  0021D2  6ED9               	movwf	fsr2l,c
 44150  0021D4  50E2               	movf	fsr1h,w,c
 44151  0021D6  6EDA               	movwf	fsr2h,c
 44152  0021D8  0EFF               	movlw	255
 44153  0021DA  22DA               	addwfc	fsr2h,f,c
 44154  0021DC  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 44155  0021E2  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 44156  0021E8  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 44157                           
 44158                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44159  0021EE  52E5               	movf	postdec1,f,c
 44160  0021F0  52E5               	movf	postdec1,f,c
 44161  0021F2  52E5               	movf	postdec1,f,c
 44162  0021F4  0012               	return		;funcret
 44163  0021F6                     __end_of_TMR3_SetInterruptHandler:
 44164                           	opt callstack 0
 44165                           
 44166 ;; *************** function _TMR2_Initialize *****************
 44167 ;; Defined at:
 44168 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 44169 ;; Parameters:    Size  Location     Type
 44170 ;;		None
 44171 ;; Auto vars:     Size  Location     Type
 44172 ;;		None
 44173 ;; Return value:  Size  Location     Type
 44174 ;;                  1  [STACK] void 
 44175 ;; Registers used:
 44176 ;;		wreg, status,2
 44177 ;; Tracked objects:
 44178 ;;		On entry : 0/0
 44179 ;;		On exit  : 3F/39
 44180 ;;		Unchanged: 0/0
 44181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44186 ;;Total ram usage:        0 bytes
 44187 ;; Hardware stack levels used:    1
 44188 ;; Hardware stack levels required when called:   15
 44189 ;; This function calls:
 44190 ;;		Nothing
 44191 ;; This function is called by:
 44192 ;;		_SYSTEM_Initialize
 44193 ;; This function uses a reentrant model
 44194 ;;
 44195                           
 44196                           	psect	text167
 44197  002576                     __ptext167:
 44198                           	opt callstack 0
 44199  002576                     _TMR2_Initialize:
 44200                           	opt callstack 14
 44201                           
 44202                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 44203                           
 44204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44205                           ;incstack = 0
 44206  002576  0E01               	movlw	1
 44207  002578  6EAE               	movwf	174,c	;volatile
 44208                           
 44209                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 44210  00257A  6AAD               	clrf	173,c	;volatile
 44211                           
 44212                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 44213  00257C  6AAF               	clrf	175,c	;volatile
 44214                           
 44215                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 44216  00257E  0E63               	movlw	99
 44217  002580  6EAB               	movwf	171,c	;volatile
 44218                           
 44219                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 44220  002582  6AAA               	clrf	170,c	;volatile
 44221                           
 44222                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 44223  002584  0139               	movlb	57	; () banked
 44224  002586  95A4               	bcf	164,2,b	;volatile
 44225                           
 44226                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 44227  002588  0EC0               	movlw	192
 44228  00258A  6EAC               	movwf	172,c	;volatile
 44229                           
 44230                           ; BSR set to: 57
 44231                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44232  00258C  0012               	return		;funcret
 44233  00258E                     __end_of_TMR2_Initialize:
 44234                           	opt callstack 0
 44235                           
 44236 ;; *************** function _SPI1_Initialize *****************
 44237 ;; Defined at:
 44238 ;;		line 64 in file "mcc_generated_files/spi1.c"
 44239 ;; Parameters:    Size  Location     Type
 44240 ;;		None
 44241 ;; Auto vars:     Size  Location     Type
 44242 ;;		None
 44243 ;; Return value:  Size  Location     Type
 44244 ;;                  1  [STACK] void 
 44245 ;; Registers used:
 44246 ;;		wreg, status,2
 44247 ;; Tracked objects:
 44248 ;;		On entry : 3F/39
 44249 ;;		On exit  : 3F/3D
 44250 ;;		Unchanged: 0/0
 44251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44256 ;;Total ram usage:        0 bytes
 44257 ;; Hardware stack levels used:    1
 44258 ;; Hardware stack levels required when called:   15
 44259 ;; This function calls:
 44260 ;;		Nothing
 44261 ;; This function is called by:
 44262 ;;		_SYSTEM_Initialize
 44263 ;; This function uses a reentrant model
 44264 ;;
 44265                           
 44266                           	psect	text168
 44267  0025A4                     __ptext168:
 44268                           	opt callstack 0
 44269  0025A4                     _SPI1_Initialize:
 44270                           	opt callstack 14
 44271                           
 44272                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 44273                           
 44274                           ; BSR set to: 57
 44275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44276                           ;incstack = 0
 44277  0025A4  0E40               	movlw	64
 44278  0025A6  013D               	movlb	61	; () banked
 44279  0025A8  6F15               	movwf	21,b	;volatile
 44280                           
 44281                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 44282  0025AA  0E03               	movlw	3
 44283  0025AC  6F16               	movwf	22,b	;volatile
 44284                           
 44285                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 44286  0025AE  0E4F               	movlw	79
 44287  0025B0  6F19               	movwf	25,b	;volatile
 44288                           
 44289                           ; BSR set to: 61
 44290                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 44291  0025B2  6B1C               	clrf	28,b	;volatile
 44292                           
 44293                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 44294  0025B4  0E83               	movlw	131
 44295  0025B6  6F14               	movwf	20,b	;volatile
 44296                           
 44297                           ; BSR set to: 61
 44298                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44299  0025B8  0012               	return		;funcret
 44300  0025BA                     __end_of_SPI1_Initialize:
 44301                           	opt callstack 0
 44302                           
 44303 ;; *************** function _PWM8_Initialize *****************
 44304 ;; Defined at:
 44305 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 44306 ;; Parameters:    Size  Location     Type
 44307 ;;		None
 44308 ;; Auto vars:     Size  Location     Type
 44309 ;;		None
 44310 ;; Return value:  Size  Location     Type
 44311 ;;                  1  [STACK] void 
 44312 ;; Registers used:
 44313 ;;		wreg, status,2
 44314 ;; Tracked objects:
 44315 ;;		On entry : 3F/39
 44316 ;;		On exit  : 3F/3F
 44317 ;;		Unchanged: 0/0
 44318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44323 ;;Total ram usage:        0 bytes
 44324 ;; Hardware stack levels used:    1
 44325 ;; Hardware stack levels required when called:   15
 44326 ;; This function calls:
 44327 ;;		Nothing
 44328 ;; This function is called by:
 44329 ;;		_SYSTEM_Initialize
 44330 ;; This function uses a reentrant model
 44331 ;;
 44332                           
 44333                           	psect	text169
 44334  0025BA                     __ptext169:
 44335                           	opt callstack 0
 44336  0025BA                     _PWM8_Initialize:
 44337                           	opt callstack 14
 44338                           
 44339                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 44340                           
 44341                           ; BSR set to: 61
 44342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44343                           ;incstack = 0
 44344  0025BA  0E80               	movlw	128
 44345  0025BC  6E62               	movwf	98,c	;volatile
 44346                           
 44347                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 44348  0025BE  6A61               	clrf	97,c	;volatile
 44349                           
 44350                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 44351  0025C0  0E40               	movlw	64
 44352  0025C2  6E60               	movwf	96,c	;volatile
 44353                           
 44354                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 44355  0025C4  013F               	movlb	63	; () banked
 44356  0025C6  515F               	movf	95,w,b	;volatile
 44357  0025C8  0B3F               	andlw	-193
 44358  0025CA  0940               	iorlw	64
 44359  0025CC  6F5F               	movwf	95,b	;volatile
 44360                           
 44361                           ; BSR set to: 63
 44362                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44363  0025CE  0012               	return		;funcret
 44364  0025D0                     __end_of_PWM8_Initialize:
 44365                           	opt callstack 0
 44366                           
 44367 ;; *************** function _PMD_Initialize *****************
 44368 ;; Defined at:
 44369 ;;		line 91 in file "mcc_generated_files/mcc.c"
 44370 ;; Parameters:    Size  Location     Type
 44371 ;;		None
 44372 ;; Auto vars:     Size  Location     Type
 44373 ;;		None
 44374 ;; Return value:  Size  Location     Type
 44375 ;;                  1  [STACK] void 
 44376 ;; Registers used:
 44377 ;;		None
 44378 ;; Tracked objects:
 44379 ;;		On entry : 3F/39
 44380 ;;		On exit  : 3F/39
 44381 ;;		Unchanged: 0/0
 44382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44387 ;;Total ram usage:        0 bytes
 44388 ;; Hardware stack levels used:    1
 44389 ;; Hardware stack levels required when called:   15
 44390 ;; This function calls:
 44391 ;;		Nothing
 44392 ;; This function is called by:
 44393 ;;		_SYSTEM_Initialize
 44394 ;; This function uses a reentrant model
 44395 ;;
 44396                           
 44397                           	psect	text170
 44398  0025E6                     __ptext170:
 44399                           	opt callstack 0
 44400  0025E6                     _PMD_Initialize:
 44401                           	opt callstack 14
 44402                           
 44403                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 44404                           
 44405                           ; BSR set to: 63
 44406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44407                           ;incstack = 0
 44408  0025E6  0139               	movlb	57	; () banked
 44409  0025E8  6BC0               	clrf	192,b	;volatile
 44410                           
 44411                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 44412  0025EA  6BC1               	clrf	193,b	;volatile
 44413                           
 44414                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 44415  0025EC  6BC2               	clrf	194,b	;volatile
 44416                           
 44417                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 44418  0025EE  6BC3               	clrf	195,b	;volatile
 44419                           
 44420                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 44421  0025F0  6BC4               	clrf	196,b	;volatile
 44422                           
 44423                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 44424  0025F2  6BC5               	clrf	197,b	;volatile
 44425                           
 44426                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 44427  0025F4  6BC6               	clrf	198,b	;volatile
 44428                           
 44429                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 44430  0025F6  6BC7               	clrf	199,b	;volatile
 44431                           
 44432                           ; BSR set to: 57
 44433                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44434  0025F8  0012               	return		;funcret
 44435  0025FA                     __end_of_PMD_Initialize:
 44436                           	opt callstack 0
 44437                           
 44438 ;; *************** function _PIN_MANAGER_Initialize *****************
 44439 ;; Defined at:
 44440 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 44441 ;; Parameters:    Size  Location     Type
 44442 ;;		None
 44443 ;; Auto vars:     Size  Location     Type
 44444 ;;		None
 44445 ;; Return value:  Size  Location     Type
 44446 ;;                  1  [STACK] void 
 44447 ;; Registers used:
 44448 ;;		wreg, status,2
 44449 ;; Tracked objects:
 44450 ;;		On entry : 3F/39
 44451 ;;		On exit  : 3F/3A
 44452 ;;		Unchanged: 0/0
 44453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44458 ;;Total ram usage:        0 bytes
 44459 ;; Hardware stack levels used:    1
 44460 ;; Hardware stack levels required when called:   15
 44461 ;; This function calls:
 44462 ;;		Nothing
 44463 ;; This function is called by:
 44464 ;;		_SYSTEM_Initialize
 44465 ;; This function uses a reentrant model
 44466 ;;
 44467                           
 44468                           	psect	text171
 44469  000C04                     __ptext171:
 44470                           	opt callstack 0
 44471  000C04                     _PIN_MANAGER_Initialize:
 44472                           	opt callstack 14
 44473                           
 44474                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 44475                           
 44476                           ; BSR set to: 57
 44477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44478                           ;incstack = 0
 44479  000C04  0E07               	movlw	7
 44480  000C06  6EBE               	movwf	190,c	;volatile
 44481                           
 44482                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 44483  000C08  6ABD               	clrf	189,c	;volatile
 44484                           
 44485                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 44486  000C0A  6ABA               	clrf	186,c	;volatile
 44487                           
 44488                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 44489  000C0C  0E23               	movlw	35
 44490  000C0E  6EBF               	movwf	191,c	;volatile
 44491                           
 44492                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 44493  000C10  6ABB               	clrf	187,c	;volatile
 44494                           
 44495                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 44496  000C12  0E07               	movlw	7
 44497  000C14  6EBC               	movwf	188,c	;volatile
 44498                           
 44499                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 44500  000C16  6AC6               	clrf	198,c	;volatile
 44501                           
 44502                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 44503  000C18  0E0C               	movlw	12
 44504  000C1A  6EC7               	movwf	199,c	;volatile
 44505                           
 44506                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 44507  000C1C  68C2               	setf	194,c	;volatile
 44508                           
 44509                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 44510  000C1E  0EBF               	movlw	191
 44511  000C20  6EC3               	movwf	195,c	;volatile
 44512                           
 44513                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 44514  000C22  0E90               	movlw	144
 44515  000C24  6EC4               	movwf	196,c	;volatile
 44516                           
 44517                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 44518  000C26  0E0C               	movlw	12
 44519  000C28  6EC5               	movwf	197,c	;volatile
 44520                           
 44521                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 44522  000C2A  013A               	movlb	58	; () banked
 44523  000C2C  6B70               	clrf	112,b	;volatile
 44524                           
 44525                           ; BSR set to: 58
 44526                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 44527  000C2E  6B60               	clrf	96,b	;volatile
 44528                           
 44529                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 44530  000C30  0E3C               	movlw	60
 44531  000C32  6F50               	movwf	80,b	;volatile
 44532                           
 44533                           ; BSR set to: 58
 44534                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 44535  000C34  6B80               	clrf	128,b	;volatile
 44536                           
 44537                           ; BSR set to: 58
 44538                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 44539  000C36  6B90               	clrf	144,b	;volatile
 44540                           
 44541                           ; BSR set to: 58
 44542                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 44543  000C38  6940               	setf	64,b	;volatile
 44544                           
 44545                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 44546  000C3A  0E0C               	movlw	12
 44547  000C3C  6F71               	movwf	113,b	;volatile
 44548                           
 44549                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 44550  000C3E  0E0C               	movlw	12
 44551  000C40  6F91               	movwf	145,b	;volatile
 44552                           
 44553                           ; BSR set to: 58
 44554                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 44555  000C42  6B81               	clrf	129,b	;volatile
 44556                           
 44557                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 44558  000C44  0E83               	movlw	131
 44559  000C46  6F51               	movwf	81,b	;volatile
 44560                           
 44561                           ; BSR set to: 58
 44562                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 44563  000C48  6B41               	clrf	65,b	;volatile
 44564                           
 44565                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 44566  000C4A  0E97               	movlw	151
 44567  000C4C  6F61               	movwf	97,b	;volatile
 44568                           
 44569                           ; BSR set to: 58
 44570                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 44571  000C4E  6B82               	clrf	130,b	;volatile
 44572                           
 44573                           ; BSR set to: 58
 44574                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 44575  000C50  6B92               	clrf	146,b	;volatile
 44576                           
 44577                           ; BSR set to: 58
 44578                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 44579  000C52  6B42               	clrf	66,b	;volatile
 44580                           
 44581                           ; BSR set to: 58
 44582                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 44583  000C54  6B52               	clrf	82,b	;volatile
 44584                           
 44585                           ; BSR set to: 58
 44586                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 44587  000C56  6B62               	clrf	98,b	;volatile
 44588                           
 44589                           ; BSR set to: 58
 44590                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 44591  000C58  6B72               	clrf	114,b	;volatile
 44592                           
 44593                           ; BSR set to: 58
 44594                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 44595  000C5A  6943               	setf	67,b	;volatile
 44596                           
 44597                           ; BSR set to: 58
 44598                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 44599  000C5C  6953               	setf	83,b	;volatile
 44600                           
 44601                           ; BSR set to: 58
 44602                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 44603  000C5E  6963               	setf	99,b	;volatile
 44604                           
 44605                           ; BSR set to: 58
 44606                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 44607  000C60  6973               	setf	115,b	;volatile
 44608                           
 44609                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 44610  000C62  0E07               	movlw	7
 44611  000C64  6F83               	movwf	131,b	;volatile
 44612                           
 44613                           ; BSR set to: 58
 44614                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 44615  000C66  6993               	setf	147,b	;volatile
 44616                           
 44617                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 44618  000C68  0E0F               	movlw	15
 44619  000C6A  6FE8               	movwf	232,b	;volatile
 44620                           
 44621                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 44622  000C6C  0E13               	movlw	19
 44623  000C6E  6FDE               	movwf	222,b	;volatile
 44624                           
 44625                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 44626  000C70  0E16               	movlw	22
 44627  000C72  6F0E               	movwf	14,b	;volatile
 44628                           
 44629                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 44630  000C74  0E1E               	movlw	30
 44631  000C76  6F13               	movwf	19,b	;volatile
 44632                           
 44633                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 44634  000C78  0E08               	movlw	8
 44635  000C7A  6FC0               	movwf	192,b	;volatile
 44636                           
 44637                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 44638  000C7C  0E10               	movlw	16
 44639  000C7E  6F19               	movwf	25,b	;volatile
 44640                           
 44641                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 44642  000C80  0E09               	movlw	9
 44643  000C82  6FC1               	movwf	193,b	;volatile
 44644                           
 44645                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 44646  000C84  0E1F               	movlw	31
 44647  000C86  6F15               	movwf	21,b	;volatile
 44648                           
 44649                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 44650  000C88  0E13               	movlw	19
 44651  000C8A  6F16               	movwf	22,b	;volatile
 44652                           
 44653                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 44654  000C8C  0E17               	movlw	23
 44655  000C8E  6FE5               	movwf	229,b	;volatile
 44656                           
 44657                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 44658  000C90  0E14               	movlw	20
 44659  000C92  6FDF               	movwf	223,b	;volatile
 44660                           
 44661                           ; BSR set to: 58
 44662                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 44663  000C94  0012               	return		;funcret
 44664  000C96                     __end_of_PIN_MANAGER_Initialize:
 44665                           	opt callstack 0
 44666                           
 44667 ;; *************** function _OSCILLATOR_Initialize *****************
 44668 ;; Defined at:
 44669 ;;		line 73 in file "mcc_generated_files/mcc.c"
 44670 ;; Parameters:    Size  Location     Type
 44671 ;;		None
 44672 ;; Auto vars:     Size  Location     Type
 44673 ;;		None
 44674 ;; Return value:  Size  Location     Type
 44675 ;;                  1  [STACK] void 
 44676 ;; Registers used:
 44677 ;;		wreg, status,2
 44678 ;; Tracked objects:
 44679 ;;		On entry : 3F/3A
 44680 ;;		On exit  : 3F/39
 44681 ;;		Unchanged: 0/0
 44682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44687 ;;Total ram usage:        0 bytes
 44688 ;; Hardware stack levels used:    1
 44689 ;; Hardware stack levels required when called:   15
 44690 ;; This function calls:
 44691 ;;		Nothing
 44692 ;; This function is called by:
 44693 ;;		_SYSTEM_Initialize
 44694 ;; This function uses a reentrant model
 44695 ;;
 44696                           
 44697                           	psect	text172
 44698  0025D0                     __ptext172:
 44699                           	opt callstack 0
 44700  0025D0                     _OSCILLATOR_Initialize:
 44701                           	opt callstack 14
 44702                           
 44703                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 44704                           
 44705                           ; BSR set to: 58
 44706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44707                           ;incstack = 0
 44708  0025D0  0E20               	movlw	32
 44709  0025D2  0139               	movlb	57	; () banked
 44710  0025D4  6FD9               	movwf	217,b	;volatile
 44711                           
 44712                           ; BSR set to: 57
 44713                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 44714  0025D6  6BDB               	clrf	219,b	;volatile
 44715                           
 44716                           ; BSR set to: 57
 44717                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 44718  0025D8  6BDD               	clrf	221,b	;volatile
 44719                           
 44720                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 44721  0025DA  0E02               	movlw	2
 44722  0025DC  6FDF               	movwf	223,b	;volatile
 44723                           
 44724                           ; BSR set to: 57
 44725                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 44726  0025DE  6BDE               	clrf	222,b	;volatile
 44727  0025E0                     l171:
 44728                           
 44729                           ; BSR set to: 57
 44730                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 44731  0025E0  B1DC               	btfsc	220,0,b	;volatile
 44732  0025E2  0012               	return	
 44733  0025E4  D7FD               	goto	l171
 44734  0025E6                     __end_of_OSCILLATOR_Initialize:
 44735                           	opt callstack 0
 44736                           
 44737 ;; *************** function _INTERRUPT_Initialize *****************
 44738 ;; Defined at:
 44739 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 44740 ;; Parameters:    Size  Location     Type
 44741 ;;		None
 44742 ;; Auto vars:     Size  Location     Type
 44743 ;;  state           1  [STACK] _Bool 
 44744 ;; Return value:  Size  Location     Type
 44745 ;;                  1  [STACK] void 
 44746 ;; Registers used:
 44747 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 44748 ;; Tracked objects:
 44749 ;;		On entry : 0/0
 44750 ;;		On exit  : 3F/39
 44751 ;;		Unchanged: 0/0
 44752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44757 ;;Total ram usage:        0 bytes
 44758 ;; Hardware stack levels used:    1
 44759 ;; Hardware stack levels required when called:   15
 44760 ;; This function calls:
 44761 ;;		Nothing
 44762 ;; This function is called by:
 44763 ;;		_SYSTEM_Initialize
 44764 ;; This function uses a reentrant model
 44765 ;;
 44766                           
 44767                           	psect	text173
 44768  0013A8                     __ptext173:
 44769                           	opt callstack 0
 44770  0013A8                     _INTERRUPT_Initialize:
 44771                           	opt callstack 0
 44772                           
 44773                           ; BSR set to: 57
 44774                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44775  0013A8  52E6               	movf	postinc1,f,c
 44776                           
 44777                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 44778                           
 44779                           ;incstack = 0
 44780  0013AA  8AD2               	bsf	210,5,c	;volatile
 44781                           
 44782                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 44783  0013AC  AED2               	btfss	16338,7,c	;volatile
 44784  0013AE  D003               	goto	u12390
 44785  0013B0  6A35               	clrf	(btemp+11)^0,c
 44786  0013B2  2A35               	incf	(btemp+11)^0,f,c
 44787  0013B4  D001               	goto	u12408
 44788  0013B6                     u12390:
 44789  0013B6  6A35               	clrf	(btemp+11)^0,c
 44790  0013B8                     u12408:
 44791                           
 44792                           ;stkvar	_state @ sp[(-1)+0]
 44793  0013B8  0EFF               	movlw	-1
 44794  0013BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 44795                           
 44796                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 44797  0013C0  9ED2               	bcf	16338,7,c	;volatile
 44798                           
 44799                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 44800  0013C2  0E55               	movlw	85
 44801  0013C4  6ED4               	movwf	212,c	;volatile
 44802                           
 44803                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 44804  0013C6  0EAA               	movlw	170
 44805  0013C8  6ED4               	movwf	212,c	;volatile
 44806                           
 44807                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 44808  0013CA  90D4               	bcf	212,0,c	;volatile
 44809                           
 44810                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 44811  0013CC  0138               	movlb	56	; () banked
 44812  0013CE  6B9F               	clrf	159,b	;volatile
 44813                           
 44814                           ; BSR set to: 56
 44815                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 44816  0013D0  6B9E               	clrf	158,b	;volatile
 44817                           
 44818                           ; BSR set to: 56
 44819                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 44820  0013D2  0E08               	movlw	8
 44821  0013D4  6F9D               	movwf	157,b	;volatile
 44822                           
 44823                           ; BSR set to: 56
 44824                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 44825  0013D6  0E55               	movlw	85
 44826  0013D8  6ED4               	movwf	212,c	;volatile
 44827                           
 44828                           ; BSR set to: 56
 44829                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 44830  0013DA  0EAA               	movlw	170
 44831  0013DC  6ED4               	movwf	212,c	;volatile
 44832                           
 44833                           ; BSR set to: 56
 44834                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 44835  0013DE  80D4               	bsf	212,0,c	;volatile
 44836                           
 44837                           ; BSR set to: 56
 44838                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 44839                           ;stkvar	_state @ sp[(-1)+0]
 44840  0013E0  0EFF               	movlw	-1
 44841  0013E2  B0E3               	btfsc	plusw1,0,c
 44842  0013E4  D002               	bra	u12415
 44843  0013E6  9ED2               	bcf	16338,7,c	;volatile
 44844  0013E8  D001               	bra	u12416
 44845  0013EA                     u12415:
 44846  0013EA  8ED2               	bsf	16338,7,c	;volatile
 44847  0013EC                     u12416:
 44848                           
 44849                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 44850  0013EC  0139               	movlb	57	; () banked
 44851  0013EE  8782               	bsf	130,3,b	;volatile
 44852                           
 44853                           ; BSR set to: 57
 44854                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 44855  0013F0  8382               	bsf	130,1,b	;volatile
 44856                           
 44857                           ; BSR set to: 57
 44858                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 44859  0013F2  8182               	bsf	130,0,b	;volatile
 44860                           
 44861                           ; BSR set to: 57
 44862                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 44863  0013F4  8582               	bsf	130,2,b	;volatile
 44864                           
 44865                           ; BSR set to: 57
 44866                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 44867  0013F6  8786               	bsf	134,3,b	;volatile
 44868                           
 44869                           ; BSR set to: 57
 44870                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 44871  0013F8  8586               	bsf	134,2,b	;volatile
 44872                           
 44873                           ; BSR set to: 57
 44874                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 44875  0013FA  8783               	bsf	131,3,b	;volatile
 44876                           
 44877                           ; BSR set to: 57
 44878                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 44879  0013FC  8181               	bsf	129,0,b	;volatile
 44880                           
 44881                           ; BSR set to: 57
 44882                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 44883  0013FE  9185               	bcf	133,0,b	;volatile
 44884                           
 44885                           ; BSR set to: 57
 44886                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 44887  001400  8189               	bsf	137,0,b	;volatile
 44888                           
 44889                           ; BSR set to: 57
 44890                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 44891  001402  9D88               	bcf	136,6,b	;volatile
 44892                           
 44893                           ; BSR set to: 57
 44894                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 44895  001404  8581               	bsf	129,2,b	;volatile
 44896                           
 44897                           ; BSR set to: 57
 44898                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 44899  001406  8781               	bsf	129,3,b	;volatile
 44900                           
 44901                           ; BSR set to: 57
 44902                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 44903  001408  9D86               	bcf	134,6,b	;volatile
 44904                           
 44905                           ; BSR set to: 57
 44906                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 44907  00140A  52E5               	movf	postdec1,f,c
 44908  00140C  0012               	return		;funcret
 44909  00140E                     __end_of_INTERRUPT_Initialize:
 44910                           	opt callstack 0
 44911                           
 44912 ;; *************** function _FVR_Initialize *****************
 44913 ;; Defined at:
 44914 ;;		line 58 in file "mcc_generated_files/fvr.c"
 44915 ;; Parameters:    Size  Location     Type
 44916 ;;		None
 44917 ;; Auto vars:     Size  Location     Type
 44918 ;;		None
 44919 ;; Return value:  Size  Location     Type
 44920 ;;                  1  [STACK] void 
 44921 ;; Registers used:
 44922 ;;		wreg, status,2
 44923 ;; Tracked objects:
 44924 ;;		On entry : 3F/39
 44925 ;;		On exit  : 3F/3E
 44926 ;;		Unchanged: 0/0
 44927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44932 ;;Total ram usage:        0 bytes
 44933 ;; Hardware stack levels used:    1
 44934 ;; Hardware stack levels required when called:   15
 44935 ;; This function calls:
 44936 ;;		Nothing
 44937 ;; This function is called by:
 44938 ;;		_SYSTEM_Initialize
 44939 ;; This function uses a reentrant model
 44940 ;;
 44941                           
 44942                           	psect	text174
 44943  00270E                     __ptext174:
 44944                           	opt callstack 0
 44945  00270E                     _FVR_Initialize:
 44946                           	opt callstack 14
 44947                           
 44948                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 44949                           
 44950                           ; BSR set to: 57
 44951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44952                           ;incstack = 0
 44953  00270E  0EAF               	movlw	175
 44954  002710  013E               	movlb	62	; () banked
 44955  002712  6FC1               	movwf	193,b	;volatile
 44956                           
 44957                           ; BSR set to: 62
 44958                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44959  002714  0012               	return		;funcret
 44960  002716                     __end_of_FVR_Initialize:
 44961                           	opt callstack 0
 44962                           
 44963 ;; *************** function _EXT_INT_Initialize *****************
 44964 ;; Defined at:
 44965 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 44966 ;; Parameters:    Size  Location     Type
 44967 ;;		None
 44968 ;; Auto vars:     Size  Location     Type
 44969 ;;		None
 44970 ;; Return value:  Size  Location     Type
 44971 ;;                  1  [STACK] void 
 44972 ;; Registers used:
 44973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44974 ;; Tracked objects:
 44975 ;;		On entry : 3F/3F
 44976 ;;		On exit  : 3F/39
 44977 ;;		Unchanged: 0/0
 44978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44983 ;;Total ram usage:        0 bytes
 44984 ;; Hardware stack levels used:    1
 44985 ;; Hardware stack levels required when called:   16
 44986 ;; This function calls:
 44987 ;;		_INT0_SetInterruptHandler
 44988 ;;		_INT1_SetInterruptHandler
 44989 ;; This function is called by:
 44990 ;;		_SYSTEM_Initialize
 44991 ;; This function uses a reentrant model
 44992 ;;
 44993                           
 44994                           	psect	text175
 44995  001EE0                     __ptext175:
 44996                           	opt callstack 0
 44997  001EE0                     _EXT_INT_Initialize:
 44998                           	opt callstack 13
 44999                           
 45000                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45001                           
 45002                           ; BSR set to: 62
 45003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45004                           ;incstack = 0
 45005  001EE0  0139               	movlb	57	; () banked
 45006  001EE2  91A1               	bcf	161,0,b	;volatile
 45007                           
 45008                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 45009  001EE4  90D2               	bcf	210,0,c	;volatile
 45010                           
 45011                           ; BSR set to: 57
 45012                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 45013  001EE6  0E46               	movlw	low _INT0_DefaultInterruptHandler
 45014  001EE8  6EE6               	movwf	postinc1,c
 45015  001EEA  0E27               	movlw	high _INT0_DefaultInterruptHandler
 45016  001EEC  6EE6               	movwf	postinc1,c
 45017  001EEE  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 45018  001EF0  6EE6               	movwf	postinc1,c
 45019  001EF2  EC0F  F011         	call	_INT0_SetInterruptHandler	;wreg free
 45020                           
 45021                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 45022  001EF6  0139               	movlb	57	; () banked
 45023  001EF8  8191               	bsf	145,0,b	;volatile
 45024                           
 45025                           ; BSR set to: 57
 45026                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 45027  001EFA  91A5               	bcf	165,0,b	;volatile
 45028                           
 45029                           ; BSR set to: 57
 45030                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 45031  001EFC  92D2               	bcf	210,1,c	;volatile
 45032                           
 45033                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 45034  001EFE  0E42               	movlw	low _INT1_DefaultInterruptHandler
 45035  001F00  6EE6               	movwf	postinc1,c
 45036  001F02  0E27               	movlw	high _INT1_DefaultInterruptHandler
 45037  001F04  6EE6               	movwf	postinc1,c
 45038  001F06  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 45039  001F08  6EE6               	movwf	postinc1,c
 45040  001F0A  ECFB  F010         	call	_INT1_SetInterruptHandler	;wreg free
 45041                           
 45042                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 45043  001F0E  0139               	movlb	57	; () banked
 45044  001F10  8195               	bsf	149,0,b	;volatile
 45045                           
 45046                           ; BSR set to: 57
 45047                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 45048  001F12  0012               	return		;funcret
 45049  001F14                     __end_of_EXT_INT_Initialize:
 45050                           	opt callstack 0
 45051                           
 45052 ;; *************** function _INT1_SetInterruptHandler *****************
 45053 ;; Defined at:
 45054 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 45055 ;; Parameters:    Size  Location     Type
 45056 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45057 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 45058 ;; Auto vars:     Size  Location     Type
 45059 ;;		None
 45060 ;; Return value:  Size  Location     Type
 45061 ;;                  1  [STACK] void 
 45062 ;; Registers used:
 45063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45064 ;; Tracked objects:
 45065 ;;		On entry : 3F/39
 45066 ;;		On exit  : 0/0
 45067 ;;		Unchanged: 0/0
 45068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45073 ;;Total ram usage:        0 bytes
 45074 ;; Hardware stack levels used:    1
 45075 ;; Hardware stack levels required when called:   15
 45076 ;; This function calls:
 45077 ;;		Nothing
 45078 ;; This function is called by:
 45079 ;;		_EXT_INT_Initialize
 45080 ;;		_start_switch_handler
 45081 ;; This function uses a reentrant model
 45082 ;;
 45083                           
 45084                           	psect	text176
 45085  0021F6                     __ptext176:
 45086                           	opt callstack 0
 45087  0021F6                     _INT1_SetInterruptHandler:
 45088                           	opt callstack 14
 45089                           
 45090                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 45091                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45092                           
 45093                           ; BSR set to: 57
 45094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45095                           ;incstack = 0
 45096  0021F6  50E1               	movf	fsr1l,w,c
 45097  0021F8  0FFD               	addlw	-3
 45098  0021FA  6ED9               	movwf	fsr2l,c
 45099  0021FC  50E2               	movf	fsr1h,w,c
 45100  0021FE  6EDA               	movwf	fsr2h,c
 45101  002200  0EFF               	movlw	255
 45102  002202  22DA               	addwfc	fsr2h,f,c
 45103  002204  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 45104  00220A  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 45105  002210  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 45106                           
 45107                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45108  002216  52E5               	movf	postdec1,f,c
 45109  002218  52E5               	movf	postdec1,f,c
 45110  00221A  52E5               	movf	postdec1,f,c
 45111  00221C  0012               	return		;funcret
 45112  00221E                     __end_of_INT1_SetInterruptHandler:
 45113                           	opt callstack 0
 45114                           
 45115 ;; *************** function _INT0_SetInterruptHandler *****************
 45116 ;; Defined at:
 45117 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 45118 ;; Parameters:    Size  Location     Type
 45119 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45120 ;;		 -> INT0_DefaultInterruptHandler(1), 
 45121 ;; Auto vars:     Size  Location     Type
 45122 ;;		None
 45123 ;; Return value:  Size  Location     Type
 45124 ;;                  1  [STACK] void 
 45125 ;; Registers used:
 45126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45127 ;; Tracked objects:
 45128 ;;		On entry : 3F/39
 45129 ;;		On exit  : 0/0
 45130 ;;		Unchanged: 0/0
 45131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45136 ;;Total ram usage:        0 bytes
 45137 ;; Hardware stack levels used:    1
 45138 ;; Hardware stack levels required when called:   15
 45139 ;; This function calls:
 45140 ;;		Nothing
 45141 ;; This function is called by:
 45142 ;;		_EXT_INT_Initialize
 45143 ;; This function uses a reentrant model
 45144 ;;
 45145                           
 45146                           	psect	text177
 45147  00221E                     __ptext177:
 45148                           	opt callstack 0
 45149  00221E                     _INT0_SetInterruptHandler:
 45150                           	opt callstack 13
 45151                           
 45152                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 45153                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45154                           
 45155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45156                           ;incstack = 0
 45157  00221E  50E1               	movf	fsr1l,w,c
 45158  002220  0FFD               	addlw	-3
 45159  002222  6ED9               	movwf	fsr2l,c
 45160  002224  50E2               	movf	fsr1h,w,c
 45161  002226  6EDA               	movwf	fsr2h,c
 45162  002228  0EFF               	movlw	255
 45163  00222A  22DA               	addwfc	fsr2h,f,c
 45164  00222C  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 45165  002232  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 45166  002238  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 45167                           
 45168                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45169  00223E  52E5               	movf	postdec1,f,c
 45170  002240  52E5               	movf	postdec1,f,c
 45171  002242  52E5               	movf	postdec1,f,c
 45172  002244  0012               	return		;funcret
 45173  002246                     __end_of_INT0_SetInterruptHandler:
 45174                           	opt callstack 0
 45175                           
 45176 ;; *************** function _DMA2_Initialize *****************
 45177 ;; Defined at:
 45178 ;;		line 61 in file "mcc_generated_files/dma2.c"
 45179 ;; Parameters:    Size  Location     Type
 45180 ;;		None
 45181 ;; Auto vars:     Size  Location     Type
 45182 ;;		None
 45183 ;; Return value:  Size  Location     Type
 45184 ;;                  1  [STACK] void 
 45185 ;; Registers used:
 45186 ;;		wreg, status,2
 45187 ;; Tracked objects:
 45188 ;;		On entry : 3F/3D
 45189 ;;		On exit  : 3F/3B
 45190 ;;		Unchanged: 0/0
 45191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45196 ;;Total ram usage:        0 bytes
 45197 ;; Hardware stack levels used:    1
 45198 ;; Hardware stack levels required when called:   15
 45199 ;; This function calls:
 45200 ;;		Nothing
 45201 ;; This function is called by:
 45202 ;;		_SYSTEM_Initialize
 45203 ;; This function uses a reentrant model
 45204 ;;
 45205                           
 45206                           	psect	text178
 45207  00170C                     __ptext178:
 45208                           	opt callstack 0
 45209  00170C                     _DMA2_Initialize:
 45210                           	opt callstack 14
 45211                           
 45212                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 45213                           
 45214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45215                           ;incstack = 0
 45216  00170C  0E00               	movlw	0
 45217  00170E  013B               	movlb	59	; () banked
 45218  001710  6FD9               	movwf	217,b	;volatile
 45219  001712  0E10               	movlw	16
 45220  001714  6FDA               	movwf	218,b	;volatile
 45221  001716  0E00               	movlw	0
 45222  001718  6FDB               	movwf	219,b	;volatile
 45223                           
 45224                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 45225  00171A  0E3F               	movlw	63
 45226  00171C  6FD1               	movwf	209,b	;volatile
 45227  00171E  0EBB               	movlw	187
 45228  001720  6FD0               	movwf	208,b	;volatile
 45229                           
 45230                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 45231  001722  0E03               	movlw	3
 45232  001724  6FDD               	movwf	221,b	;volatile
 45233                           
 45234                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 45235  001726  0E00               	movlw	0
 45236  001728  6FD8               	movwf	216,b	;volatile
 45237  00172A  0E01               	movlw	1
 45238  00172C  6FD7               	movwf	215,b	;volatile
 45239                           
 45240                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 45241  00172E  0E00               	movlw	0
 45242  001730  6FCF               	movwf	207,b	;volatile
 45243  001732  0E01               	movlw	1
 45244  001734  6FCE               	movwf	206,b	;volatile
 45245                           
 45246                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 45247  001736  0E1C               	movlw	28
 45248  001738  6FDF               	movwf	223,b	;volatile
 45249                           
 45250                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 45251  00173A  0E3D               	movlw	61
 45252  00173C  6FDE               	movwf	222,b	;volatile
 45253                           
 45254                           ; BSR set to: 59
 45255                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 45256  00173E  0139               	movlb	57	; () banked
 45257  001740  97A5               	bcf	165,3,b	;volatile
 45258                           
 45259                           ; BSR set to: 57
 45260                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 45261  001742  95A5               	bcf	165,2,b	;volatile
 45262                           
 45263                           ; BSR set to: 57
 45264                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 45265  001744  9BA5               	bcf	165,5,b	;volatile
 45266                           
 45267                           ; BSR set to: 57
 45268                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 45269  001746  99A5               	bcf	165,4,b	;volatile
 45270                           
 45271                           ; BSR set to: 57
 45272                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 45273  001748  9795               	bcf	149,3,b	;volatile
 45274                           
 45275                           ; BSR set to: 57
 45276                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 45277  00174A  9595               	bcf	149,2,b	;volatile
 45278                           
 45279                           ; BSR set to: 57
 45280                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 45281  00174C  9B95               	bcf	149,5,b	;volatile
 45282                           
 45283                           ; BSR set to: 57
 45284                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 45285  00174E  9995               	bcf	149,4,b	;volatile
 45286  001750  9ED2               	bcf	16338,7,c	;# 
 45287  001752  0139               	banksel	14831	;# 
 45288  001754  0E55               	movlw	85	;# 
 45289  001756  6FEF               	movwf	14831,b	;# 
 45290  001758  0EAA               	movlw	170	;# 
 45291  00175A  6FEF               	movwf	14831,b	;# 
 45292  00175C  81EF               	bsf	14831,0,b	;# 
 45293  00175E  8ED2               	bsf	16338,7,c	;# 
 45294                           
 45295                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 45296  001760  013B               	movlb	59	; () banked
 45297  001762  6BDC               	clrf	220,b	;volatile
 45298                           
 45299                           ; BSR set to: 59
 45300                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45301  001764  0012               	return		;funcret
 45302  001766                     __end_of_DMA2_Initialize:
 45303                           	opt callstack 0
 45304                           
 45305 ;; *************** function _DMA1_Initialize *****************
 45306 ;; Defined at:
 45307 ;;		line 86 in file "mcc_generated_files/dma1.c"
 45308 ;; Parameters:    Size  Location     Type
 45309 ;;		None
 45310 ;; Auto vars:     Size  Location     Type
 45311 ;;		None
 45312 ;; Return value:  Size  Location     Type
 45313 ;;                  1  [STACK] void 
 45314 ;; Registers used:
 45315 ;;		wreg, status,2
 45316 ;; Tracked objects:
 45317 ;;		On entry : 3F/3B
 45318 ;;		On exit  : 3F/3B
 45319 ;;		Unchanged: 0/0
 45320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45325 ;;Total ram usage:        0 bytes
 45326 ;; Hardware stack levels used:    1
 45327 ;; Hardware stack levels required when called:   15
 45328 ;; This function calls:
 45329 ;;		Nothing
 45330 ;; This function is called by:
 45331 ;;		_SYSTEM_Initialize
 45332 ;; This function uses a reentrant model
 45333 ;;
 45334                           
 45335                           	psect	text179
 45336  00119A                     __ptext179:
 45337                           	opt callstack 0
 45338  00119A                     _DMA1_Initialize:
 45339                           	opt callstack 14
 45340                           
 45341                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 45342                           
 45343                           ; BSR set to: 59
 45344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45345                           ;incstack = 0
 45346  00119A  0E00               	movlw	0
 45347  00119C  013B               	movlb	59	; () banked
 45348  00119E  6FF9               	movwf	249,b	;volatile
 45349  0011A0  0E10               	movlw	16
 45350  0011A2  6FFA               	movwf	250,b	;volatile
 45351  0011A4  0E00               	movlw	0
 45352  0011A6  6FFB               	movwf	251,b	;volatile
 45353                           
 45354                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 45355  0011A8  0E3D               	movlw	61
 45356  0011AA  6FF1               	movwf	241,b	;volatile
 45357  0011AC  0E11               	movlw	17
 45358  0011AE  6FF0               	movwf	240,b	;volatile
 45359                           
 45360                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 45361  0011B0  0E03               	movlw	3
 45362  0011B2  6FFD               	movwf	253,b	;volatile
 45363                           
 45364                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 45365  0011B4  0E00               	movlw	0
 45366  0011B6  6FF8               	movwf	248,b	;volatile
 45367  0011B8  0E01               	movlw	1
 45368  0011BA  6FF7               	movwf	247,b	;volatile
 45369                           
 45370                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 45371  0011BC  0E00               	movlw	0
 45372  0011BE  6FEF               	movwf	239,b	;volatile
 45373  0011C0  0E01               	movlw	1
 45374  0011C2  6FEE               	movwf	238,b	;volatile
 45375                           
 45376                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 45377  0011C4  0E15               	movlw	21
 45378  0011C6  6FFF               	movwf	255,b	;volatile
 45379                           
 45380                           ; BSR set to: 59
 45381                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 45382  0011C8  6BFE               	clrf	254,b	;volatile
 45383                           
 45384                           ; BSR set to: 59
 45385                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 45386  0011CA  0139               	movlb	57	; () banked
 45387  0011CC  93A2               	bcf	162,1,b	;volatile
 45388                           
 45389                           ; BSR set to: 57
 45390                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 45391  0011CE  91A2               	bcf	162,0,b	;volatile
 45392                           
 45393                           ; BSR set to: 57
 45394                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 45395  0011D0  97A2               	bcf	162,3,b	;volatile
 45396                           
 45397                           ; BSR set to: 57
 45398                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 45399  0011D2  95A2               	bcf	162,2,b	;volatile
 45400                           
 45401                           ; BSR set to: 57
 45402                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 45403  0011D4  8392               	bsf	146,1,b	;volatile
 45404                           
 45405                           ; BSR set to: 57
 45406                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 45407  0011D6  8192               	bsf	146,0,b	;volatile
 45408                           
 45409                           ; BSR set to: 57
 45410                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 45411  0011D8  8792               	bsf	146,3,b	;volatile
 45412                           
 45413                           ; BSR set to: 57
 45414                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 45415  0011DA  8592               	bsf	146,2,b	;volatile
 45416                           
 45417                           ; BSR set to: 57
 45418                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 45419  0011DC  6BF1               	clrf	241,b	;volatile
 45420                           
 45421                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 45422  0011DE  0E01               	movlw	1
 45423  0011E0  6FF2               	movwf	242,b	;volatile
 45424                           
 45425                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 45426  0011E2  0E04               	movlw	4
 45427  0011E4  6FF3               	movwf	243,b	;volatile
 45428                           
 45429                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 45430  0011E6  0E02               	movlw	2
 45431  0011E8  6FF4               	movwf	244,b	;volatile
 45432                           
 45433                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 45434  0011EA  0E03               	movlw	3
 45435  0011EC  6FF7               	movwf	247,b	;volatile
 45436  0011EE  9ED2               	bcf	16338,7,c	;# 
 45437  0011F0  0139               	banksel	14831	;# 
 45438  0011F2  0E55               	movlw	85	;# 
 45439  0011F4  6FEF               	movwf	14831,b	;# 
 45440  0011F6  0EAA               	movlw	170	;# 
 45441  0011F8  6FEF               	movwf	14831,b	;# 
 45442  0011FA  81EF               	bsf	14831,0,b	;# 
 45443  0011FC  8ED2               	bsf	16338,7,c	;# 
 45444                           
 45445                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 45446  0011FE  013B               	movlb	59	; () banked
 45447  001200  6BFC               	clrf	252,b	;volatile
 45448                           
 45449                           ; BSR set to: 59
 45450                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45451  001202  0012               	return		;funcret
 45452  001204                     __end_of_DMA1_Initialize:
 45453                           	opt callstack 0
 45454                           
 45455 ;; *************** function _CRC_Initialize *****************
 45456 ;; Defined at:
 45457 ;;		line 76 in file "mcc_generated_files/crc.c"
 45458 ;; Parameters:    Size  Location     Type
 45459 ;;		None
 45460 ;; Auto vars:     Size  Location     Type
 45461 ;;  seed            2  [STACK] unsigned short 
 45462 ;;  poly            2  [STACK] unsigned short 
 45463 ;; Return value:  Size  Location     Type
 45464 ;;                  1  [STACK] void 
 45465 ;; Registers used:
 45466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 45467 ;; Tracked objects:
 45468 ;;		On entry : 0/39
 45469 ;;		On exit  : 3F/0
 45470 ;;		Unchanged: 0/0
 45471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45476 ;;Total ram usage:        0 bytes
 45477 ;; Hardware stack levels used:    1
 45478 ;; Hardware stack levels required when called:   15
 45479 ;; This function calls:
 45480 ;;		Nothing
 45481 ;; This function is called by:
 45482 ;;		_SYSTEM_Initialize
 45483 ;;		_read_cal_data
 45484 ;;		_write_cal_data
 45485 ;; This function uses a reentrant model
 45486 ;;
 45487                           
 45488                           	psect	text180
 45489  000C96                     __ptext180:
 45490                           	opt callstack 0
 45491  000C96                     _CRC_Initialize:
 45492                           	opt callstack 0
 45493                           
 45494                           ; BSR set to: 59
 45495                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45496  000C96  52E6               	movf	postinc1,f,c
 45497  000C98  52E6               	movf	postinc1,f,c
 45498  000C9A  52E6               	movf	postinc1,f,c
 45499  000C9C  52E6               	movf	postinc1,f,c
 45500                           
 45501                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 45502                           
 45503                           ;incstack = 0
 45504  000C9E  0E80               	movlw	128
 45505  000CA0  0139               	movlb	57	; () banked
 45506  000CA2  6F68               	movwf	104,b	;volatile
 45507                           
 45508                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 45509  000CA4  0E07               	movlw	7
 45510  000CA6  6F69               	movwf	105,b	;volatile
 45511                           
 45512                           ; BSR set to: 57
 45513                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 45514  000CA8  6B62               	clrf	98,b	;volatile
 45515                           
 45516                           ; BSR set to: 57
 45517                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 45518  000CAA  6B63               	clrf	99,b	;volatile
 45519                           
 45520                           ; BSR set to: 57
 45521                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 45522  000CAC  6B7C               	clrf	124,b	;volatile
 45523                           
 45524                           ; BSR set to: 57
 45525                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 45526  000CAE  6B78               	clrf	120,b	;volatile
 45527                           
 45528                           ; BSR set to: 57
 45529                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 45530  000CB0  6B77               	clrf	119,b	;volatile
 45531                           
 45532                           ; BSR set to: 57
 45533                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 45534  000CB2  6B76               	clrf	118,b	;volatile
 45535                           
 45536                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 45537  000CB4  0E3F               	movlw	63
 45538  000CB6  6F7B               	movwf	123,b	;volatile
 45539                           
 45540                           ; BSR set to: 57
 45541                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 45542  000CB8  697A               	setf	122,b	;volatile
 45543                           
 45544                           ; BSR set to: 57
 45545                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 45546  000CBA  6979               	setf	121,b	;volatile
 45547                           
 45548                           ; BSR set to: 57
 45549                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 45550  000CBC  6B7D               	clrf	125,b	;volatile
 45551                           
 45552                           ; BSR set to: 57
 45553                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 45554  000CBE  0ED5               	movlw	213
 45555  000CC0  6E34               	movwf	(btemp+10)^0,c
 45556  000CC2  0E00               	movlw	0
 45557  000CC4  6E35               	movwf	(btemp+11)^0,c
 45558                           
 45559                           ;stkvar	_poly @ sp[(-4)+2]
 45560  000CC6  0EFE               	movlw	-2
 45561  000CC8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 45562  000CCE  0EFF               	movlw	-1
 45563  000CD0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45564                           
 45565                           ; BSR set to: 57
 45566                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 45567                           ;stkvar	_poly @ sp[(-4)+2]
 45568  000CD6  0EFF               	movlw	255
 45569  000CD8  24E1               	addwf	fsr1l,w,c
 45570  000CDA  6ED9               	movwf	fsr2l,c
 45571  000CDC  0EFF               	movlw	255
 45572  000CDE  20E2               	addwfc	fsr1h,w,c
 45573  000CE0  6EDA               	movwf	fsr2h,c
 45574  000CE2  50DF               	movf	indf2,w,c
 45575  000CE4  6F67               	movwf	103,b	;volatile
 45576                           
 45577                           ; BSR set to: 57
 45578                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 45579  000CE6  0ED5               	movlw	213
 45580  000CE8  6F66               	movwf	102,b	;volatile
 45581                           
 45582                           ; BSR set to: 57
 45583                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 45584                           ;stkvar	_seed @ sp[(-4)+0]
 45585  000CEA  0EFC               	movlw	-4
 45586  000CEC  6AE3               	clrf	plusw1,c
 45587  000CEE  0EFD               	movlw	-3
 45588  000CF0  6AE3               	clrf	plusw1,c
 45589                           
 45590                           ; BSR set to: 57
 45591                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 45592                           ;stkvar	_seed @ sp[(-4)+0]
 45593  000CF2  0EFD               	movlw	253
 45594  000CF4  24E1               	addwf	fsr1l,w,c
 45595  000CF6  6ED9               	movwf	fsr2l,c
 45596  000CF8  0EFF               	movlw	255
 45597  000CFA  20E2               	addwfc	fsr1h,w,c
 45598  000CFC  6EDA               	movwf	fsr2h,c
 45599  000CFE  50DF               	movf	indf2,w,c
 45600  000D00  6F63               	movwf	99,b	;volatile
 45601                           
 45602                           ; BSR set to: 57
 45603                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 45604  000D02  6B62               	clrf	98,b	;volatile
 45605                           
 45606                           ; BSR set to: 57
 45607                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 45608  000D04  3969               	swapf	105,w,b	;volatile
 45609  000D06  0B0F               	andlw	15
 45610  000D08  6E35               	movwf	(btemp+11)^0,c
 45611  000D0A  2835               	incf	(btemp+11)^0,w,c
 45612  000D0C  0100               	movlb	0	; () banked
 45613  000D0E  6FE2               	movwf	_crcObj& (0+255),b
 45614                           
 45615                           ; BSR set to: 0
 45616                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 45617  000D10  0139               	movlb	57	; () banked
 45618  000D12  5169               	movf	105,w,b	;volatile
 45619  000D14  0B0F               	andlw	15
 45620  000D16  6E35               	movwf	(btemp+11)^0,c
 45621  000D18  2835               	incf	(btemp+11)^0,w,c
 45622  000D1A  0100               	movlb	0	; () banked
 45623  000D1C  6FE3               	movwf	(_crcObj+1)& (0+255),b
 45624                           
 45625                           ; BSR set to: 0
 45626                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45627  000D1E  52E5               	movf	postdec1,f,c
 45628  000D20  52E5               	movf	postdec1,f,c
 45629  000D22  52E5               	movf	postdec1,f,c
 45630  000D24  52E5               	movf	postdec1,f,c
 45631  000D26  0012               	return		;funcret
 45632  000D28                     __end_of_CRC_Initialize:
 45633                           	opt callstack 0
 45634                           
 45635 ;; *************** function _CLKREF_Initialize *****************
 45636 ;; Defined at:
 45637 ;;		line 58 in file "mcc_generated_files/clkref.c"
 45638 ;; Parameters:    Size  Location     Type
 45639 ;;		None
 45640 ;; Auto vars:     Size  Location     Type
 45641 ;;		None
 45642 ;; Return value:  Size  Location     Type
 45643 ;;                  1  [STACK] void 
 45644 ;; Registers used:
 45645 ;;		wreg, status,2
 45646 ;; Tracked objects:
 45647 ;;		On entry : 3F/3B
 45648 ;;		On exit  : 3F/3C
 45649 ;;		Unchanged: 0/0
 45650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45655 ;;Total ram usage:        0 bytes
 45656 ;; Hardware stack levels used:    1
 45657 ;; Hardware stack levels required when called:   15
 45658 ;; This function calls:
 45659 ;;		Nothing
 45660 ;; This function is called by:
 45661 ;;		_SYSTEM_Initialize
 45662 ;; This function uses a reentrant model
 45663 ;;
 45664                           
 45665                           	psect	text181
 45666  0026B6                     __ptext181:
 45667                           	opt callstack 0
 45668  0026B6                     _CLKREF_Initialize:
 45669                           	opt callstack 14
 45670                           
 45671                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 45672                           
 45673                           ; BSR set to: 0
 45674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45675                           ;incstack = 0
 45676  0026B6  013C               	movlb	60	; () banked
 45677  0026B8  6BE6               	clrf	230,b	;volatile
 45678                           
 45679                           ; BSR set to: 60
 45680                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 45681  0026BA  0E94               	movlw	148
 45682  0026BC  6FE5               	movwf	229,b	;volatile
 45683                           
 45684                           ; BSR set to: 60
 45685                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 45686  0026BE  0012               	return		;funcret
 45687  0026C0                     __end_of_CLKREF_Initialize:
 45688                           	opt callstack 0
 45689                           
 45690 ;; *************** function _ADCC_Initialize *****************
 45691 ;; Defined at:
 45692 ;;		line 65 in file "mcc_generated_files/adcc.c"
 45693 ;; Parameters:    Size  Location     Type
 45694 ;;		None
 45695 ;; Auto vars:     Size  Location     Type
 45696 ;;		None
 45697 ;; Return value:  Size  Location     Type
 45698 ;;                  1  [STACK] void 
 45699 ;; Registers used:
 45700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 45701 ;; Tracked objects:
 45702 ;;		On entry : 3F/0
 45703 ;;		On exit  : 0/0
 45704 ;;		Unchanged: 0/0
 45705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45710 ;;Total ram usage:        0 bytes
 45711 ;; Hardware stack levels used:    1
 45712 ;; Hardware stack levels required when called:   16
 45713 ;; This function calls:
 45714 ;;		_ADCC_SetADIInterruptHandler
 45715 ;;		_ADCC_SetADTIInterruptHandler
 45716 ;; This function is called by:
 45717 ;;		_SYSTEM_Initialize
 45718 ;; This function uses a reentrant model
 45719 ;;
 45720                           
 45721                           	psect	text182
 45722  001204                     __ptext182:
 45723                           	opt callstack 0
 45724  001204                     _ADCC_Initialize:
 45725                           	opt callstack 13
 45726                           
 45727                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 45728                           
 45729                           ; BSR set to: 60
 45730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45731                           ;incstack = 0
 45732  001204  013E               	movlb	62	; () banked
 45733  001206  6BDE               	clrf	222,b	;volatile
 45734                           
 45735                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 45736  001208  6BDF               	clrf	223,b	;volatile
 45737                           
 45738                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 45739  00120A  6BE0               	clrf	224,b	;volatile
 45740                           
 45741                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 45742  00120C  6BE1               	clrf	225,b	;volatile
 45743                           
 45744                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 45745  00120E  6BE4               	clrf	228,b	;volatile
 45746                           
 45747                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 45748  001210  6BE5               	clrf	229,b	;volatile
 45749                           
 45750                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 45751  001212  6BEA               	clrf	234,b	;volatile
 45752                           
 45753                           ; BSR set to: 62
 45754                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 45755  001214  0E40               	movlw	64
 45756  001216  6FEC               	movwf	236,b	;volatile
 45757                           
 45758                           ; BSR set to: 62
 45759                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 45760  001218  6BF1               	clrf	241,b	;volatile
 45761                           
 45762                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 45763  00121A  0E20               	movlw	32
 45764  00121C  6FF3               	movwf	243,b	;volatile
 45765                           
 45766                           ; BSR set to: 62
 45767                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 45768  00121E  6BF4               	clrf	244,b	;volatile
 45769                           
 45770                           ; BSR set to: 62
 45771                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 45772  001220  6BF5               	clrf	245,b	;volatile
 45773                           
 45774                           ; BSR set to: 62
 45775                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 45776  001222  6BF6               	clrf	246,b	;volatile
 45777                           
 45778                           ; BSR set to: 62
 45779                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 45780  001224  6BF7               	clrf	247,b	;volatile
 45781                           
 45782                           ; BSR set to: 62
 45783                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 45784  001226  6BF9               	clrf	249,b	;volatile
 45785                           
 45786                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 45787  001228  0E5B               	movlw	91
 45788  00122A  6FFA               	movwf	250,b	;volatile
 45789                           
 45790                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 45791  00122C  0E27               	movlw	39
 45792  00122E  6FFB               	movwf	251,b	;volatile
 45793                           
 45794                           ; BSR set to: 62
 45795                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 45796  001230  6BFC               	clrf	252,b	;volatile
 45797                           
 45798                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 45799  001232  0E02               	movlw	2
 45800  001234  6FFD               	movwf	253,b	;volatile
 45801                           
 45802                           ; BSR set to: 62
 45803                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 45804  001236  6BFE               	clrf	254,b	;volatile
 45805                           
 45806                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 45807  001238  0E07               	movlw	7
 45808  00123A  6FFF               	movwf	255,b	;volatile
 45809                           
 45810                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 45811  00123C  0E84               	movlw	132
 45812  00123E  6FF8               	movwf	248,b	;volatile
 45813                           
 45814                           ; BSR set to: 62
 45815                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 45816  001240  0139               	movlb	57	; () banked
 45817  001242  95A1               	bcf	161,2,b	;volatile
 45818                           
 45819                           ; BSR set to: 57
 45820                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 45821  001244  8591               	bsf	145,2,b	;volatile
 45822                           
 45823                           ; BSR set to: 57
 45824                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 45825  001246  0E48               	movlw	low _ADCC_DefaultInterruptHandler
 45826  001248  6EE6               	movwf	postinc1,c
 45827  00124A  0E27               	movlw	high _ADCC_DefaultInterruptHandler
 45828  00124C  6EE6               	movwf	postinc1,c
 45829  00124E  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45830  001250  6EE6               	movwf	postinc1,c
 45831  001252  EC37  F011         	call	_ADCC_SetADIInterruptHandler	;wreg free
 45832                           
 45833                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 45834  001256  0139               	movlb	57	; () banked
 45835  001258  97A1               	bcf	161,3,b	;volatile
 45836                           
 45837                           ; BSR set to: 57
 45838                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 45839  00125A  8791               	bsf	145,3,b	;volatile
 45840                           
 45841                           ; BSR set to: 57
 45842                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 45843  00125C  0E48               	movlw	low _ADCC_DefaultInterruptHandler
 45844  00125E  6EE6               	movwf	postinc1,c
 45845  001260  0E27               	movlw	high _ADCC_DefaultInterruptHandler
 45846  001262  6EE6               	movwf	postinc1,c
 45847  001264  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45848  001266  6EE6               	movwf	postinc1,c
 45849  001268  EC23  F011         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 45850                           
 45851                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45852  00126C  0012               	return		;funcret
 45853  00126E                     __end_of_ADCC_Initialize:
 45854                           	opt callstack 0
 45855                           
 45856 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 45857 ;; Defined at:
 45858 ;;		line 336 in file "mcc_generated_files/adcc.c"
 45859 ;; Parameters:    Size  Location     Type
 45860 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45861 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 45862 ;; Auto vars:     Size  Location     Type
 45863 ;;		None
 45864 ;; Return value:  Size  Location     Type
 45865 ;;                  1  [STACK] void 
 45866 ;; Registers used:
 45867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45868 ;; Tracked objects:
 45869 ;;		On entry : 0/1
 45870 ;;		On exit  : 0/0
 45871 ;;		Unchanged: 0/0
 45872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45877 ;;Total ram usage:        0 bytes
 45878 ;; Hardware stack levels used:    1
 45879 ;; Hardware stack levels required when called:   15
 45880 ;; This function calls:
 45881 ;;		Nothing
 45882 ;; This function is called by:
 45883 ;;		_ADCC_Initialize
 45884 ;;		_start_adc_scan
 45885 ;; This function uses a reentrant model
 45886 ;;
 45887                           
 45888                           	psect	text183
 45889  002246                     __ptext183:
 45890                           	opt callstack 0
 45891  002246                     _ADCC_SetADTIInterruptHandler:
 45892                           	opt callstack 14
 45893                           
 45894                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 45895                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45896                           
 45897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45898                           ;incstack = 0
 45899  002246  50E1               	movf	fsr1l,w,c
 45900  002248  0FFD               	addlw	-3
 45901  00224A  6ED9               	movwf	fsr2l,c
 45902  00224C  50E2               	movf	fsr1h,w,c
 45903  00224E  6EDA               	movwf	fsr2h,c
 45904  002250  0EFF               	movlw	255
 45905  002252  22DA               	addwfc	fsr2h,f,c
 45906  002254  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 45907  00225A  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 45908  002260  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 45909                           
 45910                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 45911  002266  52E5               	movf	postdec1,f,c
 45912  002268  52E5               	movf	postdec1,f,c
 45913  00226A  52E5               	movf	postdec1,f,c
 45914  00226C  0012               	return		;funcret
 45915  00226E                     __end_of_ADCC_SetADTIInterruptHandler:
 45916                           	opt callstack 0
 45917                           
 45918 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 45919 ;; Defined at:
 45920 ;;		line 323 in file "mcc_generated_files/adcc.c"
 45921 ;; Parameters:    Size  Location     Type
 45922 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45923 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 45924 ;; Auto vars:     Size  Location     Type
 45925 ;;		None
 45926 ;; Return value:  Size  Location     Type
 45927 ;;                  1  [STACK] void 
 45928 ;; Registers used:
 45929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45930 ;; Tracked objects:
 45931 ;;		On entry : 7/1
 45932 ;;		On exit  : 0/0
 45933 ;;		Unchanged: 0/0
 45934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45939 ;;Total ram usage:        0 bytes
 45940 ;; Hardware stack levels used:    1
 45941 ;; Hardware stack levels required when called:   15
 45942 ;; This function calls:
 45943 ;;		Nothing
 45944 ;; This function is called by:
 45945 ;;		_ADCC_Initialize
 45946 ;;		_start_adc_scan
 45947 ;; This function uses a reentrant model
 45948 ;;
 45949                           
 45950                           	psect	text184
 45951  00226E                     __ptext184:
 45952                           	opt callstack 0
 45953  00226E                     _ADCC_SetADIInterruptHandler:
 45954                           	opt callstack 14
 45955                           
 45956                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 45957                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45958                           
 45959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45960                           ;incstack = 0
 45961  00226E  50E1               	movf	fsr1l,w,c
 45962  002270  0FFD               	addlw	-3
 45963  002272  6ED9               	movwf	fsr2l,c
 45964  002274  50E2               	movf	fsr1h,w,c
 45965  002276  6EDA               	movwf	fsr2h,c
 45966  002278  0EFF               	movlw	255
 45967  00227A  22DA               	addwfc	fsr2h,f,c
 45968  00227C  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 45969  002282  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 45970  002288  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 45971                           
 45972                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 45973  00228E  52E5               	movf	postdec1,f,c
 45974  002290  52E5               	movf	postdec1,f,c
 45975  002292  52E5               	movf	postdec1,f,c
 45976  002294  0012               	return		;funcret
 45977  002296                     __end_of_ADCC_SetADIInterruptHandler:
 45978                           	opt callstack 0
 45979                           
 45980 ;; *************** function _INT1_ISR *****************
 45981 ;; Defined at:
 45982 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 45983 ;; Parameters:    Size  Location     Type
 45984 ;;		None
 45985 ;; Auto vars:     Size  Location     Type
 45986 ;;		None
 45987 ;; Return value:  Size  Location     Type
 45988 ;;                  1    wreg      void 
 45989 ;; Registers used:
 45990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 45991 ;; Tracked objects:
 45992 ;;		On entry : 0/0
 45993 ;;		On exit  : 0/0
 45994 ;;		Unchanged: 0/0
 45995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45998 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46000 ;;Total ram usage:        4 bytes
 46001 ;; Hardware stack levels used:    1
 46002 ;; Hardware stack levels required when called:    5
 46003 ;; This function calls:
 46004 ;;		_INT1_CallBack
 46005 ;; This function is called by:
 46006 ;;		Interrupt level 1
 46007 ;; This function uses a non-reentrant model
 46008 ;;
 46009                           
 46010                           	psect	text185
 46011  001CB4                     __ptext185:
 46012                           	opt callstack 0
 46013  001CB4                     _INT1_ISR:
 46014                           	opt callstack 12
 46015                           
 46016                           ;incstack = 0
 46017  001CB4  006F FF60  F007    	movff	status,??_INT1_ISR
 46018  001CBA  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 46019  001CC0  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 46020  001CC6  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 46021  001CCC  EE16  F196         	lfsr	1,___intlo_sp
 46022                           
 46023                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 46024  001CD0  0139               	movlb	57	; () banked
 46025  001CD2  91A5               	bcf	165,0,b	;volatile
 46026                           
 46027                           ; BSR set to: 57
 46028                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 46029  001CD4  EC9A  F011         	call	_INT1_CallBack	;wreg free
 46030  001CD8  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 46031  001CDE  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 46032  001CE4  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 46033  001CEA  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 46034  001CF0  0011               	retfie		f
 46035  001CF2                     __end_of_INT1_ISR:
 46036                           	opt callstack 0
 46037                           
 46038 ;; *************** function _INT1_CallBack *****************
 46039 ;; Defined at:
 46040 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 46041 ;; Parameters:    Size  Location     Type
 46042 ;;		None
 46043 ;; Auto vars:     Size  Location     Type
 46044 ;;		None
 46045 ;; Return value:  Size  Location     Type
 46046 ;;                  1  [STACK] void 
 46047 ;; Registers used:
 46048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46049 ;; Tracked objects:
 46050 ;;		On entry : 3F/39
 46051 ;;		On exit  : 0/0
 46052 ;;		Unchanged: 0/0
 46053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46058 ;;Total ram usage:        0 bytes
 46059 ;; Hardware stack levels used:    1
 46060 ;; Hardware stack levels required when called:    4
 46061 ;; This function calls:
 46062 ;;		Absolute function
 46063 ;;		_INT1_DefaultInterruptHandler
 46064 ;;		_switch_handler
 46065 ;; This function is called by:
 46066 ;;		_INT1_ISR
 46067 ;; This function uses a reentrant model
 46068 ;;
 46069                           
 46070                           	psect	text186
 46071  002334                     __ptext186:
 46072                           	opt callstack 0
 46073  002334                     _INT1_CallBack:
 46074                           	opt callstack 12
 46075                           
 46076                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 46077                           
 46078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46079                           ;incstack = 0
 46080  002334  0100               	movlb	0	; () banked
 46081  002336  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46082  002338  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46083  00233A  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46084  00233C  B4D8               	btfsc	status,2,c
 46085  00233E  0012               	return	
 46086                           
 46087                           ; BSR set to: 0
 46088                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 46089  002340  D801               	call	u1310_28
 46090  002342  0012               	return	
 46091  002344                     u1310_28:
 46092  002344  0005               	push	
 46093  002346  6EFA               	movwf	pclath,c
 46094  002348  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46095  00234A  6EFD               	movwf	tosl,c
 46096  00234C  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46097  00234E  6EFE               	movwf	tosh,c
 46098  002350  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46099  002352  6EFF               	movwf	tosu,c
 46100  002354  50FA               	movf	pclath,w,c
 46101  002356  0012               	return		;indir
 46102  002358                     __end_of_INT1_CallBack:
 46103                           	opt callstack 0
 46104                           
 46105 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46106 ;; Defined at:
 46107 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 46108 ;; Parameters:    Size  Location     Type
 46109 ;;		None
 46110 ;; Auto vars:     Size  Location     Type
 46111 ;;		None
 46112 ;; Return value:  Size  Location     Type
 46113 ;;                  1  [STACK] void 
 46114 ;; Registers used:
 46115 ;;		None
 46116 ;; Tracked objects:
 46117 ;;		On entry : 3F/0
 46118 ;;		On exit  : 0/0
 46119 ;;		Unchanged: 0/0
 46120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46125 ;;Total ram usage:        0 bytes
 46126 ;; Hardware stack levels used:    1
 46127 ;; Hardware stack levels required when called:    3
 46128 ;; This function calls:
 46129 ;;		Nothing
 46130 ;; This function is called by:
 46131 ;;		_EXT_INT_Initialize
 46132 ;;		_INT1_CallBack
 46133 ;; This function uses a reentrant model
 46134 ;;
 46135                           
 46136                           	psect	text187
 46137  002742                     __ptext187:
 46138                           	opt callstack 0
 46139  002742                     _INT1_DefaultInterruptHandler:
 46140                           	opt callstack 12
 46141                           
 46142                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46143                           
 46144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46145                           ;incstack = 0
 46146  002742  0012               	return		;funcret
 46147  002744                     __end_of_INT1_DefaultInterruptHandler:
 46148                           	opt callstack 0
 46149                           
 46150 ;; *************** function _switch_handler *****************
 46151 ;; Defined at:
 46152 ;;		line 58 in file "dio.c"
 46153 ;; Parameters:    Size  Location     Type
 46154 ;;		None
 46155 ;; Auto vars:     Size  Location     Type
 46156 ;;  i               1  [STACK] unsigned char 
 46157 ;;  sw_value        1  [STACK] unsigned char 
 46158 ;; Return value:  Size  Location     Type
 46159 ;;                  1  [STACK] void 
 46160 ;; Registers used:
 46161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 46162 ;; Tracked objects:
 46163 ;;		On entry : 3F/0
 46164 ;;		On exit  : 0/0
 46165 ;;		Unchanged: 0/0
 46166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46171 ;;Total ram usage:        0 bytes
 46172 ;; Hardware stack levels used:    1
 46173 ;; Hardware stack levels required when called:    3
 46174 ;; This function calls:
 46175 ;;		Nothing
 46176 ;; This function is called by:
 46177 ;;		_start_switch_handler
 46178 ;;		_INT1_CallBack
 46179 ;; This function uses a reentrant model
 46180 ;;
 46181                           
 46182                           	psect	text188
 46183  01EE36                     __ptext188:
 46184                           	opt callstack 0
 46185  01EE36                     _switch_handler:
 46186                           	opt callstack 0
 46187                           
 46188                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46189  01EE36  52E6               	movf	postinc1,f,c
 46190  01EE38  52E6               	movf	postinc1,f,c
 46191                           
 46192                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 46193                           ;stkvar	_i @ sp[(-2)+0]
 46194                           
 46195                           ;incstack = 0
 46196  01EE3A  0EFE               	movlw	-2
 46197  01EE3C  6AE3               	clrf	plusw1,c
 46198  01EE3E  9ABF               	bcf	191,5,c	;volatile
 46199                           
 46200                           ;dio.c: 72:  __nop();
 46201  01EE40  F000               	nop	
 46202                           
 46203                           ;dio.c: 73:  __nop();
 46204  01EE42  F000               	nop	
 46205                           
 46206                           ;dio.c: 74:  __nop();
 46207  01EE44  F000               	nop	
 46208                           
 46209                           ;dio.c: 75:  __nop();
 46210  01EE46  F000               	nop	
 46211                           
 46212                           ;dio.c: 76:  __nop();
 46213  01EE48  F000               	nop	
 46214                           
 46215                           ;dio.c: 77:  __nop();
 46216  01EE4A  F000               	nop	
 46217  01EE4C  D016               	goto	l13692
 46218  01EE4E                     l13678:
 46219                           
 46220                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 46221  01EE4E  A6CF               	btfss	207,3,c	;volatile
 46222  01EE50  D00E               	goto	u1276_20
 46223  01EE52  D00A               	goto	u1276_21
 46224  01EE54                     u1274_28:
 46225                           
 46226                           ;stkvar	_sw_value @ sp[(-2)+1]
 46227  01EE54  0EFF               	movlw	-1
 46228  01EE56  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46229                           
 46230                           ;dio.c: 83:    break;
 46231  01EE5C  D027               	goto	l13694
 46232  01EE5E                     l13680:
 46233                           
 46234                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 46235  01EE5E  A4CF               	btfss	207,2,c	;volatile
 46236  01EE60  D006               	goto	u1276_20
 46237  01EE62  D002               	goto	u1276_21
 46238  01EE64                     l13682:
 46239                           
 46240                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 46241  01EE64  A6CD               	btfss	205,3,c	;volatile
 46242  01EE66  D003               	goto	u1276_20
 46243  01EE68                     u1276_21:
 46244  01EE68  6A35               	clrf	(btemp+11)^0,c
 46245  01EE6A  2A35               	incf	(btemp+11)^0,f,c
 46246  01EE6C  D7F3               	goto	u1274_28
 46247  01EE6E                     u1276_20:
 46248  01EE6E  6A35               	clrf	(btemp+11)^0,c
 46249  01EE70  D7F1               	goto	u1274_28
 46250  01EE72                     l13684:
 46251                           
 46252                           ;dio.c: 91:    sw_value = 1;
 46253                           ;stkvar	_sw_value @ sp[(-2)+1]
 46254  01EE72  0EFF               	movlw	-1
 46255  01EE74  6AE3               	clrf	plusw1,c
 46256  01EE76  2AE3               	incf	plusw1,f,c
 46257                           
 46258                           ;dio.c: 92:    break;
 46259  01EE78  D019               	goto	l13694
 46260  01EE7A                     l13692:
 46261                           
 46262                           ;stkvar	_i @ sp[(-2)+0]
 46263  01EE7A  0EFE               	movlw	-2
 46264  01EE7C  50E3               	movf	plusw1,w,c
 46265  01EE7E  6E34               	movwf	(btemp+10)^0,c
 46266  01EE80  6A35               	clrf	(btemp+11)^0,c
 46267                           
 46268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46269                           ; Switch size 1, requested type "simple"
 46270                           ; Number of cases is 1, Range of values is 0 to 0
 46271                           ; switch strategies available:
 46272                           ; Name         Instructions Cycles
 46273                           ; simple_byte            4     3 (average)
 46274                           ;	Chosen strategy is simple_byte
 46275  01EE82  5035               	movf	(btemp+11)^0,w,c
 46276  01EE84  0A00               	xorlw	0	; case 0
 46277  01EE86  A4D8               	btfss	status,2,c
 46278  01EE88  D7F4               	goto	l13684
 46279                           
 46280                           ; Switch size 1, requested type "simple"
 46281                           ; Number of cases is 5, Range of values is 0 to 4
 46282                           ; switch strategies available:
 46283                           ; Name         Instructions Cycles
 46284                           ; simple_byte           16     9 (average)
 46285                           ;	Chosen strategy is simple_byte
 46286  01EE8A  5034               	movf	(btemp+10)^0,w,c
 46287  01EE8C  0A00               	xorlw	0	; case 0
 46288  01EE8E  B4D8               	btfsc	status,2,c
 46289  01EE90  D7F0               	goto	l13684
 46290  01EE92  0A01               	xorlw	1	; case 1
 46291  01EE94  B4D8               	btfsc	status,2,c
 46292  01EE96  D7ED               	goto	l13684
 46293  01EE98  0A03               	xorlw	3	; case 2
 46294  01EE9A  B4D8               	btfsc	status,2,c
 46295  01EE9C  D7E0               	goto	l13680
 46296  01EE9E  0A01               	xorlw	1	; case 3
 46297  01EEA0  B4D8               	btfsc	status,2,c
 46298  01EEA2  D7D5               	goto	l13678
 46299  01EEA4  0A07               	xorlw	7	; case 4
 46300  01EEA6  B4D8               	btfsc	status,2,c
 46301  01EEA8  D7DD               	goto	l13682
 46302  01EEAA  D7E3               	goto	l13684
 46303  01EEAC                     l13694:
 46304                           
 46305                           ;dio.c: 102:   if (sw_value) {
 46306                           ;stkvar	_sw_value @ sp[(-2)+1]
 46307  01EEAC  0EFF               	movlw	-1
 46308  01EEAE  50E3               	movf	plusw1,w,c
 46309  01EEB0  B4D8               	btfsc	status,2,c
 46310  01EEB2  D018               	goto	l13700
 46311                           
 46312                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 46313                           ;stkvar	_i @ sp[(-2)+0]
 46314  01EEB4  0EFE               	movlw	-2
 46315  01EEB6  50E3               	movf	plusw1,w,c
 46316  01EEB8  0D05               	mullw	5
 46317  01EEBA  0EA4               	movlw	low _S
 46318  01EEBC  24F3               	addwf	243,w,c
 46319  01EEBE  6ED9               	movwf	fsr2l,c
 46320  01EEC0  0E01               	movlw	high _S
 46321  01EEC2  20F4               	addwfc	prodh,w,c
 46322  01EEC4  6EDA               	movwf	fsr2h,c
 46323  01EEC6  04DE               	decf	postinc2,w,c
 46324  01EEC8  A4D8               	btfss	status,2,c
 46325  01EECA  D049               	goto	l13708
 46326                           
 46327                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 46328                           ;stkvar	_i @ sp[(-2)+0]
 46329  01EECC  0EFE               	movlw	-2
 46330  01EECE  50E3               	movf	plusw1,w,c
 46331  01EED0  0D05               	mullw	5
 46332  01EED2  0EA4               	movlw	low _S
 46333  01EED4  24F3               	addwf	243,w,c
 46334  01EED6  6ED9               	movwf	fsr2l,c
 46335  01EED8  0E01               	movlw	high _S
 46336  01EEDA  20F4               	addwfc	prodh,w,c
 46337  01EEDC  6EDA               	movwf	fsr2h,c
 46338  01EEDE  0E00               	movlw	0
 46339  01EEE0  6EDF               	movwf	indf2,c
 46340  01EEE2  D03D               	goto	l13708
 46341  01EEE4                     l13700:
 46342                           
 46343                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 46344                           ;stkvar	_i @ sp[(-2)+0]
 46345  01EEE4  0EFE               	movlw	-2
 46346  01EEE6  50E3               	movf	plusw1,w,c
 46347  01EEE8  0D05               	mullw	5
 46348  01EEEA  0EA4               	movlw	low _S
 46349  01EEEC  24F3               	addwf	243,w,c
 46350  01EEEE  6ED9               	movwf	fsr2l,c
 46351  01EEF0  0E01               	movlw	high _S
 46352  01EEF2  20F4               	addwfc	prodh,w,c
 46353  01EEF4  6EDA               	movwf	fsr2h,c
 46354  01EEF6  50DF               	movf	indf2,w,c
 46355  01EEF8  A4D8               	btfss	status,2,c
 46356  01EEFA  D031               	goto	l13708
 46357                           
 46358                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 46359                           ;stkvar	_i @ sp[(-2)+0]
 46360  01EEFC  0EFE               	movlw	-2
 46361  01EEFE  50E3               	movf	plusw1,w,c
 46362  01EF00  0D05               	mullw	5
 46363  01EF02  0EA4               	movlw	low _S
 46364  01EF04  24F3               	addwf	243,w,c
 46365  01EF06  6ED9               	movwf	fsr2l,c
 46366  01EF08  0E01               	movlw	high _S
 46367  01EF0A  20F4               	addwfc	prodh,w,c
 46368  01EF0C  6EDA               	movwf	fsr2h,c
 46369  01EF0E  0E01               	movlw	1
 46370  01EF10  6EDF               	movwf	indf2,c
 46371                           
 46372                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 46373  01EF12  EE20  F2B8         	lfsr	2,_V+177	;volatile
 46374                           
 46375                           ;stkvar	_i @ sp[(-2)+0]
 46376  01EF16  0EFE               	movlw	-2
 46377  01EF18  50E3               	movf	plusw1,w,c
 46378  01EF1A  0D05               	mullw	5
 46379  01EF1C  0EA5               	movlw	low (_S+1)
 46380  01EF1E  24F3               	addwf	243,w,c
 46381  01EF20  6EE9               	movwf	fsr0l,c
 46382  01EF22  0E01               	movlw	high (_S+1)
 46383  01EF24  20F4               	addwfc	prodh,w,c
 46384  01EF26  6EEA               	movwf	fsr0h,c
 46385  01EF28  006F FF7B FFEE     	movff	postinc2,postinc0
 46386  01EF2E  006F FF7B FFEE     	movff	postinc2,postinc0
 46387  01EF34  006F FF7B FFEE     	movff	postinc2,postinc0
 46388  01EF3A  006F FF7B FFEE     	movff	postinc2,postinc0
 46389                           
 46390                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 46391                           ;stkvar	_i @ sp[(-2)+0]
 46392  01EF40  0EFE               	movlw	-2
 46393  01EF42  006F FF8C  F035    	movff	plusw1,btemp+11
 46394  01EF48  0E01               	movlw	1
 46395  01EF4A  6E34               	movwf	(btemp+10)^0,c
 46396  01EF4C  2A35               	incf	(btemp+11)^0,f,c
 46397  01EF4E  D002               	goto	u1280_24
 46398  01EF50                     u1280_25:
 46399  01EF50  90D8               	bcf	status,0,c
 46400  01EF52  3634               	rlcf	(btemp+10)^0,f,c
 46401  01EF54                     u1280_24:
 46402  01EF54  2E35               	decfsz	(btemp+11)^0,f,c
 46403  01EF56  D7FC               	goto	u1280_25
 46404  01EF58  5034               	movf	(btemp+10)^0,w,c
 46405  01EF5A  0101               	movlb	1	; () banked
 46406  01EF5C  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 46407  01EF5E                     l13708:
 46408                           
 46409                           ;dio.c: 113:  } while (++i < 6);
 46410                           ;stkvar	_i @ sp[(-2)+0]
 46411  01EF5E  0EFE               	movlw	-2
 46412  01EF60  2AE3               	incf	plusw1,f,c
 46413  01EF62  0EFE               	movlw	-2
 46414  01EF64  006F FF8C  F02A    	movff	plusw1,btemp
 46415  01EF6A  0E05               	movlw	5
 46416  01EF6C  642A               	cpfsgt	btemp^0,c
 46417  01EF6E  D785               	goto	l13692
 46418                           
 46419                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 46420  01EF70  8ABF               	bsf	191,5,c	;volatile
 46421                           
 46422                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46423  01EF72  52E5               	movf	postdec1,f,c
 46424  01EF74  52E5               	movf	postdec1,f,c
 46425  01EF76  0012               	return		;funcret
 46426  01EF78                     __end_of_switch_handler:
 46427                           	opt callstack 0
 46428                           
 46429 ;; *************** function _TMR5_ISR *****************
 46430 ;; Defined at:
 46431 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 46432 ;; Parameters:    Size  Location     Type
 46433 ;;		None
 46434 ;; Auto vars:     Size  Location     Type
 46435 ;;		None
 46436 ;; Return value:  Size  Location     Type
 46437 ;;                  1    wreg      void 
 46438 ;; Registers used:
 46439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46440 ;; Tracked objects:
 46441 ;;		On entry : 0/0
 46442 ;;		On exit  : 3F/0
 46443 ;;		Unchanged: 0/0
 46444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46447 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46448 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46449 ;;Total ram usage:       31 bytes
 46450 ;; Hardware stack levels used:    1
 46451 ;; Hardware stack levels required when called:    9
 46452 ;; This function calls:
 46453 ;;		_TMR5_CallBack
 46454 ;;		_TMR5_WriteTimer
 46455 ;; This function is called by:
 46456 ;;		Interrupt level 1
 46457 ;; This function uses a non-reentrant model
 46458 ;;
 46459                           
 46460                           	psect	text189
 46461  01D868                     __ptext189:
 46462                           	opt callstack 0
 46463  01D868                     _TMR5_ISR:
 46464                           	opt callstack 8
 46465                           
 46466                           ;incstack = 0
 46467  01D868  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 46468  01D86E  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 46469  01D874  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 46470  01D87A  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 46471  01D880  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 46472  01D886  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 46473  01D88C  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 46474  01D892  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 46475  01D898  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 46476  01D89E  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 46477  01D8A4  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 46478  01D8AA  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 46479  01D8B0  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 46480  01D8B6  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 46481  01D8BC  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 46482  01D8C2  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 46483  01D8C8  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 46484  01D8CE  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 46485  01D8D4  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 46486  01D8DA  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 46487  01D8E0  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 46488  01D8E6  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 46489  01D8EC  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 46490  01D8F2  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 46491  01D8F8  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 46492  01D8FE  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 46493  01D904  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 46494  01D90A  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 46495  01D910  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 46496  01D916  EE16  F196         	lfsr	1,___intlo_sp
 46497                           
 46498                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 46499  01D91A  0139               	movlb	57	; () banked
 46500  01D91C  9DA8               	bcf	168,6,b	;volatile
 46501                           
 46502                           ; BSR set to: 57
 46503                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 46504  01D91E  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 46505  01D924  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 46506  01D92A  EC1A  F00E         	call	_TMR5_WriteTimer	;wreg free
 46507                           
 46508                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 46509  01D92E  0102               	movlb	2	; () banked
 46510  01D930  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 46511  01D932  6E0B               	movwf	??_TMR5_ISR^0,c
 46512  01D934  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 46513  01D936  0E05               	movlw	5
 46514  01D938  260B               	addwf	??_TMR5_ISR^0,f,c
 46515  01D93A  0E00               	movlw	0
 46516  01D93C  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 46517  01D93E  0100               	movlb	0	; () banked
 46518  01D940  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 46519  01D942  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46520  01D944  500B               	movf	??_TMR5_ISR^0,w,c
 46521  01D946  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 46522  01D948  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 46523  01D94A  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46524  01D94C  A0D8               	btfss	status,0,c
 46525  01D94E  D005               	goto	i1l1021
 46526                           
 46527                           ; BSR set to: 0
 46528                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 46529  01D950  ECAC  F011         	call	_TMR5_CallBack	;wreg free
 46530                           
 46531                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 46532  01D954  0100               	movlb	0	; () banked
 46533  01D956  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 46534  01D958  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 46535  01D95A                     i1l1021:
 46536                           
 46537                           ; BSR set to: 0
 46538  01D95A  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 46539  01D960  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 46540  01D966  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 46541  01D96C  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 46542  01D972  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 46543  01D978  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 46544  01D97E  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 46545  01D984  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 46546  01D98A  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 46547  01D990  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 46548  01D996  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 46549  01D99C  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 46550  01D9A2  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 46551  01D9A8  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 46552  01D9AE  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 46553  01D9B4  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 46554  01D9BA  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 46555  01D9C0  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 46556  01D9C6  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 46557  01D9CC  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 46558  01D9D2  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 46559  01D9D8  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 46560  01D9DE  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 46561  01D9E4  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 46562  01D9EA  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 46563  01D9F0  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 46564  01D9F6  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 46565  01D9FC  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 46566  01DA02  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 46567  01DA08  0011               	retfie		f
 46568  01DA0A                     __end_of_TMR5_ISR:
 46569                           	opt callstack 0
 46570                           
 46571 ;; *************** function _TMR5_WriteTimer *****************
 46572 ;; Defined at:
 46573 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 46574 ;; Parameters:    Size  Location     Type
 46575 ;;  timerVal        2  [STACK] unsigned short 
 46576 ;; Auto vars:     Size  Location     Type
 46577 ;;		None
 46578 ;; Return value:  Size  Location     Type
 46579 ;;                  1  [STACK] void 
 46580 ;; Registers used:
 46581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46582 ;; Tracked objects:
 46583 ;;		On entry : 3F/39
 46584 ;;		On exit  : 0/0
 46585 ;;		Unchanged: 0/0
 46586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46591 ;;Total ram usage:        0 bytes
 46592 ;; Hardware stack levels used:    1
 46593 ;; Hardware stack levels required when called:    3
 46594 ;; This function calls:
 46595 ;;		Nothing
 46596 ;; This function is called by:
 46597 ;;		_TMR5_ISR
 46598 ;; This function uses a reentrant model
 46599 ;;
 46600                           
 46601                           	psect	text190
 46602  001C34                     __ptext190:
 46603                           	opt callstack 0
 46604  001C34                     _TMR5_WriteTimer:
 46605                           	opt callstack 13
 46606                           
 46607                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 46608                           
 46609                           ; BSR set to: 0
 46610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46611                           ;incstack = 0
 46612  001C34  A49A               	btfss	154,2,c	;volatile
 46613  001C36  D00F               	goto	l13920
 46614                           
 46615                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 46616  001C38  909A               	bcf	154,0,c	;volatile
 46617                           
 46618                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 46619                           ;stkvar	_timerVal @ sp[(0)+-2]
 46620  001C3A  0EFF               	movlw	255
 46621  001C3C  24E1               	addwf	fsr1l,w,c
 46622  001C3E  6ED9               	movwf	fsr2l,c
 46623  001C40  0EFF               	movlw	255
 46624  001C42  20E2               	addwfc	fsr1h,w,c
 46625  001C44  6EDA               	movwf	fsr2h,c
 46626  001C46  50DF               	movf	indf2,w,c
 46627  001C48  6E99               	movwf	153,c	;volatile
 46628                           
 46629                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 46630                           ;stkvar	_timerVal @ sp[(0)+-2]
 46631  001C4A  0EFE               	movlw	-2
 46632  001C4C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46633                           
 46634                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 46635  001C52  809A               	bsf	154,0,c	;volatile
 46636                           
 46637                           ;mcc_generated_files/tmr5.c: 144:  } else {
 46638  001C54  D00C               	goto	l1004
 46639  001C56                     l13920:
 46640                           
 46641                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 46642                           ;stkvar	_timerVal @ sp[(0)+-2]
 46643  001C56  0EFF               	movlw	255
 46644  001C58  24E1               	addwf	fsr1l,w,c
 46645  001C5A  6ED9               	movwf	fsr2l,c
 46646  001C5C  0EFF               	movlw	255
 46647  001C5E  20E2               	addwfc	fsr1h,w,c
 46648  001C60  6EDA               	movwf	fsr2h,c
 46649  001C62  50DF               	movf	indf2,w,c
 46650  001C64  6E99               	movwf	153,c	;volatile
 46651                           
 46652                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 46653                           ;stkvar	_timerVal @ sp[(0)+-2]
 46654  001C66  0EFE               	movlw	-2
 46655  001C68  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46656  001C6E                     l1004:
 46657                           
 46658                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46659  001C6E  52E5               	movf	postdec1,f,c
 46660  001C70  52E5               	movf	postdec1,f,c
 46661  001C72  0012               	return		;funcret
 46662  001C74                     __end_of_TMR5_WriteTimer:
 46663                           	opt callstack 0
 46664                           
 46665 ;; *************** function _TMR5_CallBack *****************
 46666 ;; Defined at:
 46667 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 46668 ;; Parameters:    Size  Location     Type
 46669 ;;		None
 46670 ;; Auto vars:     Size  Location     Type
 46671 ;;		None
 46672 ;; Return value:  Size  Location     Type
 46673 ;;                  1  [STACK] void 
 46674 ;; Registers used:
 46675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46676 ;; Tracked objects:
 46677 ;;		On entry : 3F/0
 46678 ;;		On exit  : 0/0
 46679 ;;		Unchanged: 0/0
 46680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46685 ;;Total ram usage:        0 bytes
 46686 ;; Hardware stack levels used:    1
 46687 ;; Hardware stack levels required when called:    8
 46688 ;; This function calls:
 46689 ;;		Absolute function
 46690 ;;		_TMR5_DefaultInterruptHandler
 46691 ;; This function is called by:
 46692 ;;		_TMR5_ISR
 46693 ;; This function uses a reentrant model
 46694 ;;
 46695                           
 46696                           	psect	text191
 46697  002358                     __ptext191:
 46698                           	opt callstack 0
 46699  002358                     _TMR5_CallBack:
 46700                           	opt callstack 8
 46701                           
 46702                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 46703                           
 46704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46705                           ;incstack = 0
 46706  002358  0100               	movlb	0	; () banked
 46707  00235A  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46708  00235C  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46709  00235E  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46710  002360  B4D8               	btfsc	status,2,c
 46711  002362  0012               	return	
 46712                           
 46713                           ; BSR set to: 0
 46714                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 46715  002364  D801               	call	u1319_28
 46716  002366  0012               	return	
 46717  002368                     u1319_28:
 46718  002368  0005               	push	
 46719  00236A  6EFA               	movwf	pclath,c
 46720  00236C  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46721  00236E  6EFD               	movwf	tosl,c
 46722  002370  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46723  002372  6EFE               	movwf	tosh,c
 46724  002374  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46725  002376  6EFF               	movwf	tosu,c
 46726  002378  50FA               	movf	pclath,w,c
 46727  00237A  0012               	return		;indir
 46728  00237C                     __end_of_TMR5_CallBack:
 46729                           	opt callstack 0
 46730                           
 46731 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 46732 ;; Defined at:
 46733 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 46734 ;; Parameters:    Size  Location     Type
 46735 ;;		None
 46736 ;; Auto vars:     Size  Location     Type
 46737 ;;		None
 46738 ;; Return value:  Size  Location     Type
 46739 ;;                  1  [STACK] void 
 46740 ;; Registers used:
 46741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46742 ;; Tracked objects:
 46743 ;;		On entry : 3F/0
 46744 ;;		On exit  : 0/0
 46745 ;;		Unchanged: 0/0
 46746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46751 ;;Total ram usage:        0 bytes
 46752 ;; Hardware stack levels used:    1
 46753 ;; Hardware stack levels required when called:    7
 46754 ;; This function calls:
 46755 ;;		_check_day_time
 46756 ;; This function is called by:
 46757 ;;		_TMR5_Initialize
 46758 ;;		_TMR5_CallBack
 46759 ;; This function uses a reentrant model
 46760 ;;
 46761                           
 46762                           	psect	text192
 46763  001DA0                     __ptext192:
 46764                           	opt callstack 0
 46765  001DA0                     _TMR5_DefaultInterruptHandler:
 46766                           	opt callstack 8
 46767                           
 46768                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 46769                           
 46770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46771                           ;incstack = 0
 46772  001DA0  A0BE               	btfss	190,0,c	;volatile
 46773  001DA2  D002               	goto	u1245_20
 46774  001DA4  0E01               	movlw	1
 46775  001DA6  D001               	goto	u1245_26
 46776  001DA8                     u1245_20:
 46777  001DA8  0E00               	movlw	0
 46778  001DAA                     u1245_26:
 46779  001DAA  0AFF               	xorlw	255
 46780  001DAC  6E35               	movwf	(btemp+11)^0,c
 46781  001DAE  50BE               	movf	190,w,c	;volatile
 46782  001DB0  1835               	xorwf	(btemp+11)^0,w,c
 46783  001DB2  0BFE               	andlw	-2
 46784  001DB4  1835               	xorwf	(btemp+11)^0,w,c
 46785  001DB6  6EBE               	movwf	190,c	;volatile
 46786                           
 46787                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 46788  001DB8  0E01               	movlw	1
 46789  001DBA  0102               	movlb	2	; () banked
 46790  001DBC  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 46791  001DBE  0E00               	movlw	0
 46792  001DC0  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 46793  001DC2  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 46794  001DC4  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 46795                           
 46796                           ; BSR set to: 2
 46797                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 46798  001DC6  0E01               	movlw	1
 46799  001DC8  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 46800  001DCA  0E00               	movlw	0
 46801  001DCC  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 46802  001DCE  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 46803  001DD0  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 46804                           
 46805                           ; BSR set to: 2
 46806                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 46807  001DD2  ECC8  F0CD         	call	_check_day_time	;wreg free
 46808                           
 46809                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46810  001DD6  0012               	return		;funcret
 46811  001DD8                     __end_of_TMR5_DefaultInterruptHandler:
 46812                           	opt callstack 0
 46813                           
 46814 ;; *************** function _check_day_time *****************
 46815 ;; Defined at:
 46816 ;;		line 167 in file "mbmc.c"
 46817 ;; Parameters:    Size  Location     Type
 46818 ;;		None
 46819 ;; Auto vars:     Size  Location     Type
 46820 ;;  light           4  [STACK] float 
 46821 ;; Return value:  Size  Location     Type
 46822 ;;                  1  [STACK] _Bool 
 46823 ;; Registers used:
 46824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46825 ;; Tracked objects:
 46826 ;;		On entry : 3F/2
 46827 ;;		On exit  : 0/0
 46828 ;;		Unchanged: 0/0
 46829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46834 ;;Total ram usage:        0 bytes
 46835 ;; Hardware stack levels used:    1
 46836 ;; Hardware stack levels required when called:    6
 46837 ;; This function calls:
 46838 ;;		___flge
 46839 ;;		_conv_raw_result
 46840 ;;		_get_ac_charger_relay
 46841 ;;		_set_ac_charger_relay
 46842 ;;		_time
 46843 ;; This function is called by:
 46844 ;;		_TMR5_DefaultInterruptHandler
 46845 ;; This function uses a reentrant model
 46846 ;;
 46847                           
 46848                           	psect	text193
 46849  019B90                     __ptext193:
 46850                           	opt callstack 0
 46851  019B90                     _check_day_time:
 46852                           	opt callstack 0
 46853                           
 46854                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46855  019B90  52E6               	movf	postinc1,f,c
 46856  019B92  52E6               	movf	postinc1,f,c
 46857  019B94  52E6               	movf	postinc1,f,c
 46858  019B96  52E6               	movf	postinc1,f,c
 46859                           
 46860                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 46861                           
 46862                           ;incstack = 0
 46863  019B98  0E00               	movlw	0
 46864  019B9A  6EE6               	movwf	postinc1,c
 46865  019B9C  0E0D               	movlw	13
 46866  019B9E  6EE6               	movwf	postinc1,c
 46867  019BA0  ECE6  F0C2         	call	_conv_raw_result	;wreg free
 46868                           
 46869                           ;stkvar	_light @ sp[(-4)+0]
 46870  019BA4  0EFC               	movlw	-4
 46871  019BA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 46872  019BAC  0EFD               	movlw	-3
 46873  019BAE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 46874  019BB4  0EFE               	movlw	-2
 46875  019BB6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 46876  019BBC  0EFF               	movlw	-1
 46877  019BBE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 46878                           
 46879                           ;mbmc.c: 176:  if (C.day_update) {
 46880  019BC4  EE22  F237         	lfsr	2,_C+312	;volatile
 46881  019BC8  50DE               	movf	postinc2,w,c
 46882  019BCA  10DE               	iorwf	postinc2,w,c
 46883  019BCC  10DE               	iorwf	postinc2,w,c
 46884  019BCE  10DE               	iorwf	postinc2,w,c
 46885  019BD0  B4D8               	btfsc	status,2,c
 46886  019BD2  D068               	goto	l12672
 46887                           
 46888                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 46889  019BD4  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 46890  019BDA  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 46891  019BE0  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 46892  019BE6  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 46893  019BEC  5032               	movf	(btemp+8)^0,w,c
 46894  019BEE  6E3A               	movwf	(btemp+16)^0,c
 46895  019BF0  5033               	movf	(btemp+9)^0,w,c
 46896  019BF2  6E3B               	movwf	(btemp+17)^0,c
 46897  019BF4  5034               	movf	(btemp+10)^0,w,c
 46898  019BF6  6E3C               	movwf	(btemp+18)^0,c
 46899  019BF8  5035               	movf	(btemp+11)^0,w,c
 46900  019BFA  6E3D               	movwf	(btemp+19)^0,c
 46901  019BFC  6A3E               	clrf	(btemp+20)^0,c
 46902  019BFE  6A3F               	clrf	(btemp+21)^0,c
 46903  019C00  6A40               	clrf	(btemp+22)^0,c
 46904  019C02  6A41               	clrf	(btemp+23)^0,c
 46905  019C04  0E00               	movlw	0
 46906  019C06  6EE6               	movwf	postinc1,c
 46907  019C08  0E00               	movlw	0
 46908  019C0A  6EE6               	movwf	postinc1,c
 46909  019C0C  ECFD  F00A         	call	_time	;wreg free
 46910  019C10  52E5               	movf	postdec1,f,c
 46911  019C12  006F FF9C  F049    	movff	indf1,btemp+31
 46912  019C18  52E5               	movf	postdec1,f,c
 46913  019C1A  006F FF9C  F048    	movff	indf1,btemp+30
 46914  019C20  52E5               	movf	postdec1,f,c
 46915  019C22  006F FF9C  F047    	movff	indf1,btemp+29
 46916  019C28  52E5               	movf	postdec1,f,c
 46917  019C2A  006F FF9C  F046    	movff	indf1,btemp+28
 46918  019C30  52E5               	movf	postdec1,f,c
 46919  019C32  006F FF9C  F045    	movff	indf1,btemp+27
 46920  019C38  52E5               	movf	postdec1,f,c
 46921  019C3A  006F FF9C  F044    	movff	indf1,btemp+26
 46922  019C40  52E5               	movf	postdec1,f,c
 46923  019C42  006F FF9C  F043    	movff	indf1,btemp+25
 46924  019C48  52E5               	movf	postdec1,f,c
 46925  019C4A  006F FF9C  F042    	movff	indf1,btemp+24
 46926  019C50  503A               	movf	(btemp+16)^0,w,c
 46927  019C52  5C42               	subwf	(btemp+24)^0,w,c
 46928  019C54  503B               	movf	(btemp+17)^0,w,c
 46929  019C56  5843               	subwfb	(btemp+25)^0,w,c
 46930  019C58  503C               	movf	(btemp+18)^0,w,c
 46931  019C5A  5844               	subwfb	(btemp+26)^0,w,c
 46932  019C5C  503D               	movf	(btemp+19)^0,w,c
 46933  019C5E  5845               	subwfb	(btemp+27)^0,w,c
 46934  019C60  503E               	movf	(btemp+20)^0,w,c
 46935  019C62  5846               	subwfb	(btemp+28)^0,w,c
 46936  019C64  503F               	movf	(btemp+21)^0,w,c
 46937  019C66  5847               	subwfb	(btemp+29)^0,w,c
 46938  019C68  5040               	movf	(btemp+22)^0,w,c
 46939  019C6A  5848               	subwfb	(btemp+30)^0,w,c
 46940  019C6C  5049               	movf	(btemp+31)^0,w,c
 46941  019C6E  0A80               	xorlw	128
 46942  019C70  6E2A               	movwf	btemp^0,c
 46943  019C72  5041               	movf	(btemp+23)^0,w,c
 46944  019C74  0A80               	xorlw	128
 46945  019C76  582A               	subwfb	btemp^0,w,c
 46946  019C78  A0D8               	btfss	status,0,c
 46947  019C7A  D014               	goto	l12672
 46948                           
 46949                           ; BSR set to: 57
 46950                           ;mbmc.c: 178:    C.day_update = 0;
 46951  019C7C  0E00               	movlw	0
 46952  019C7E  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 46953  019C84  0E00               	movlw	0
 46954  019C86  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 46955  019C8C  0E00               	movlw	0
 46956  019C8E  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 46957  019C94  0E00               	movlw	0
 46958  019C96  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 46959                           
 46960                           ;mbmc.c: 179:    C.dupdate = 1;
 46961  019C9C  0E01               	movlw	1
 46962  019C9E  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 46963  019CA4                     l12672:
 46964                           
 46965                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 46966  019CA4  2A51               	incf	check_day_time@day_delay^0,f,c
 46967  019CA6  0451               	decf	check_day_time@day_delay^0,w,c
 46968  019CA8  A4D8               	btfss	status,2,c
 46969  019CAA  D123               	goto	l2203
 46970  019CAC  0102               	movlb	2	; () banked
 46971  019CAE  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 46972  019CB0  B4D8               	btfsc	status,2,c
 46973  019CB2  D11F               	goto	l2203
 46974                           
 46975                           ; BSR set to: 2
 46976                           ;mbmc.c: 184:   if (C.soc > 3) {
 46977  019CB4  EE22  F1B5         	lfsr	2,_C+182	;volatile
 46978  019CB8  0E01               	movlw	1
 46979  019CBA  50DB               	movf	plusw2,w,c
 46980  019CBC  E104               	bnz	u1211_20
 46981  019CBE  0E04               	movlw	4
 46982  019CC0  5CDE               	subwf	postinc2,w,c
 46983  019CC2  A0D8               	btfss	status,0,c
 46984  019CC4  D0ED               	goto	l12706
 46985  019CC6                     u1211_20:
 46986                           
 46987                           ; BSR set to: 2
 46988                           ;mbmc.c: 185:    if (!C.day) {
 46989  019CC6  EE22  F22D         	lfsr	2,_C+302	;volatile
 46990  019CCA  50DF               	movf	indf2,w,c
 46991  019CCC  A4D8               	btfss	status,2,c
 46992  019CCE  D065               	goto	l12692
 46993                           
 46994                           ; BSR set to: 2
 46995                           ;mbmc.c: 186:     if (light > 22.0) {
 46996                           ;stkvar	_light @ sp[(-4)+0]
 46997  019CD0  0EFC               	movlw	-4
 46998  019CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 46999  019CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 47000  019CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 47001  019CE4  006F FF8F FFE6     	movff	plusw1,postinc1
 47002  019CEA  0E00               	movlw	0
 47003  019CEC  6EE6               	movwf	postinc1,c
 47004  019CEE  0E00               	movlw	0
 47005  019CF0  6EE6               	movwf	postinc1,c
 47006  019CF2  0EB0               	movlw	176
 47007  019CF4  6EE6               	movwf	postinc1,c
 47008  019CF6  0E41               	movlw	65
 47009  019CF8  6EE6               	movwf	postinc1,c
 47010  019CFA  EC09  F0F3         	call	___flge	;wreg free
 47011  019CFE  B02A               	btfsc	btemp& (0+255),0,c
 47012  019D00  D0F8               	goto	l2203
 47013                           
 47014                           ;mbmc.c: 187:      C.day = 1;
 47015  019D02  0E01               	movlw	1
 47016  019D04  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47017                           
 47018                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 47019  019D0A  0E00               	movlw	0
 47020  019D0C  6EE6               	movwf	postinc1,c
 47021  019D0E  0E00               	movlw	0
 47022  019D10  6EE6               	movwf	postinc1,c
 47023  019D12  ECFD  F00A         	call	_time	;wreg free
 47024  019D16  52E5               	movf	postdec1,f,c
 47025  019D18  006F FF9C  F041    	movff	indf1,btemp+23
 47026  019D1E  52E5               	movf	postdec1,f,c
 47027  019D20  006F FF9C  F040    	movff	indf1,btemp+22
 47028  019D26  52E5               	movf	postdec1,f,c
 47029  019D28  006F FF9C  F03F    	movff	indf1,btemp+21
 47030  019D2E  52E5               	movf	postdec1,f,c
 47031  019D30  006F FF9C  F03E    	movff	indf1,btemp+20
 47032  019D36  52E5               	movf	postdec1,f,c
 47033  019D38  006F FF9C  F03D    	movff	indf1,btemp+19
 47034  019D3E  52E5               	movf	postdec1,f,c
 47035  019D40  006F FF9C  F03C    	movff	indf1,btemp+18
 47036  019D46  52E5               	movf	postdec1,f,c
 47037  019D48  006F FF9C  F03B    	movff	indf1,btemp+17
 47038  019D4E  52E5               	movf	postdec1,f,c
 47039  019D50  006F FF9C  F03A    	movff	indf1,btemp+16
 47040  019D56  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47041  019D5C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47042  019D62  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47043  019D68  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47044  019D6E  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 47045  019D74  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 47046  019D7A  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 47047  019D80  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 47048                           
 47049                           ; BSR set to: 57
 47050                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 47051  019D86  EC45  F013         	call	_get_ac_charger_relay	;wreg free
 47052  019D8A  502A               	movf	btemp^0,w,c
 47053  019D8C  B4D8               	btfsc	status,2,c
 47054  019D8E  D0B5               	goto	l2199
 47055                           
 47056                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 47057  019D90  0E00               	movlw	0
 47058  019D92  6EE6               	movwf	postinc1,c
 47059  019D94  EC2F  F013         	call	_set_ac_charger_relay	;wreg free
 47060  019D98  D0B0               	goto	l2199
 47061  019D9A                     l12692:
 47062                           
 47063                           ; BSR set to: 2
 47064                           ;mbmc.c: 195:     if (light < 12.0) {
 47065  019D9A  0E00               	movlw	0
 47066  019D9C  6EE6               	movwf	postinc1,c
 47067  019D9E  0E00               	movlw	0
 47068  019DA0  6EE6               	movwf	postinc1,c
 47069  019DA2  0E40               	movlw	64
 47070  019DA4  6EE6               	movwf	postinc1,c
 47071  019DA6  0E41               	movlw	65
 47072  019DA8  6EE6               	movwf	postinc1,c
 47073                           
 47074                           ;stkvar	_light @ sp[(-8)+0]
 47075  019DAA  0EF8               	movlw	-8
 47076  019DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 47077  019DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 47078  019DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 47079  019DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 47080  019DC4  EC09  F0F3         	call	___flge	;wreg free
 47081  019DC8  B02A               	btfsc	btemp& (0+255),0,c
 47082  019DCA  D093               	goto	l2203
 47083                           
 47084                           ;mbmc.c: 196:      C.day = 0;
 47085  019DCC  0E00               	movlw	0
 47086  019DCE  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47087                           
 47088                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 47089  019DD4  0E00               	movlw	0
 47090  019DD6  6EE6               	movwf	postinc1,c
 47091  019DD8  0E00               	movlw	0
 47092  019DDA  6EE6               	movwf	postinc1,c
 47093  019DDC  ECFD  F00A         	call	_time	;wreg free
 47094  019DE0  52E5               	movf	postdec1,f,c
 47095  019DE2  006F FF9C  F041    	movff	indf1,btemp+23
 47096  019DE8  52E5               	movf	postdec1,f,c
 47097  019DEA  006F FF9C  F040    	movff	indf1,btemp+22
 47098  019DF0  52E5               	movf	postdec1,f,c
 47099  019DF2  006F FF9C  F03F    	movff	indf1,btemp+21
 47100  019DF8  52E5               	movf	postdec1,f,c
 47101  019DFA  006F FF9C  F03E    	movff	indf1,btemp+20
 47102  019E00  52E5               	movf	postdec1,f,c
 47103  019E02  006F FF9C  F03D    	movff	indf1,btemp+19
 47104  019E08  52E5               	movf	postdec1,f,c
 47105  019E0A  006F FF9C  F03C    	movff	indf1,btemp+18
 47106  019E10  52E5               	movf	postdec1,f,c
 47107  019E12  006F FF9C  F03B    	movff	indf1,btemp+17
 47108  019E18  52E5               	movf	postdec1,f,c
 47109  019E1A  006F FF9C  F03A    	movff	indf1,btemp+16
 47110  019E20  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47111  019E26  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47112  019E2C  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47113  019E32  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47114  019E38  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 47115  019E3E  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 47116  019E44  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 47117  019E4A  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 47118                           
 47119                           ; BSR set to: 57
 47120                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 47121  019E50  EE22  F233         	lfsr	2,_C+308	;volatile
 47122  019E54  0E40               	movlw	64
 47123  019E56  24DE               	addwf	postinc2,w,c
 47124  019E58  6E32               	movwf	(btemp+8)^0,c
 47125  019E5A  0E38               	movlw	56
 47126  019E5C  20DE               	addwfc	postinc2,w,c
 47127  019E5E  6E33               	movwf	(btemp+9)^0,c
 47128  019E60  0E00               	movlw	0
 47129  019E62  20DE               	addwfc	postinc2,w,c
 47130  019E64  6E34               	movwf	(btemp+10)^0,c
 47131  019E66  0E00               	movlw	0
 47132  019E68  20DE               	addwfc	postinc2,w,c
 47133  019E6A  6E35               	movwf	(btemp+11)^0,c
 47134  019E6C  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 47135  019E72  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 47136  019E78  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 47137  019E7E  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 47138                           
 47139                           ; BSR set to: 57
 47140                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 47141  019E84  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47142  019E88  0E01               	movlw	1
 47143  019E8A  50DB               	movf	plusw2,w,c
 47144  019E8C  E136               	bnz	l2199
 47145  019E8E  0E14               	movlw	20
 47146  019E90  5CDE               	subwf	postinc2,w,c
 47147  019E92  B0D8               	btfsc	status,0,c
 47148  019E94  D032               	goto	l2199
 47149                           
 47150                           ; BSR set to: 57
 47151                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 47152  019E96  0E01               	movlw	1
 47153  019E98  6EE6               	movwf	postinc1,c
 47154  019E9A  EC2F  F013         	call	_set_ac_charger_relay	;wreg free
 47155  019E9E  D02D               	goto	l2199
 47156  019EA0                     l12706:
 47157                           
 47158                           ; BSR set to: 2
 47159                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 47160  019EA0  EE22  F177         	lfsr	2,_C+120	;volatile
 47161  019EA4  006F FF7B FFE6     	movff	postinc2,postinc1
 47162  019EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 47163  019EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 47164  019EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 47165  019EBC  EE22  F17B         	lfsr	2,_C+124	;volatile
 47166  019EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 47167  019EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 47168  019ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 47169  019ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 47170  019ED8  EC09  F0F3         	call	___flge	;wreg free
 47171  019EDC  B02A               	btfsc	btemp& (0+255),0,c
 47172  019EDE  D009               	goto	l2203
 47173                           
 47174                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 47175  019EE0  EC45  F013         	call	_get_ac_charger_relay	;wreg free
 47176  019EE4  502A               	movf	btemp^0,w,c
 47177  019EE6  A4D8               	btfss	status,2,c
 47178  019EE8  D004               	goto	l2203
 47179                           
 47180                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 47181  019EEA  0E01               	movlw	1
 47182  019EEC  6EE6               	movwf	postinc1,c
 47183  019EEE  EC2F  F013         	call	_set_ac_charger_relay	;wreg free
 47184  019EF2                     l2203:
 47185                           
 47186                           ;mbmc.c: 216:  if (day_delay >= 240)
 47187  019EF2  0EEF               	movlw	239
 47188  019EF4  6451               	cpfsgt	check_day_time@day_delay^0,c
 47189  019EF6  D001               	goto	l2199
 47190                           
 47191                           ;mbmc.c: 217:   day_delay = 0;
 47192  019EF8  6A51               	clrf	check_day_time@day_delay^0,c
 47193  019EFA                     l2199:
 47194                           
 47195                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47196  019EFA  52E5               	movf	postdec1,f,c
 47197  019EFC  52E5               	movf	postdec1,f,c
 47198  019EFE  52E5               	movf	postdec1,f,c
 47199  019F00  52E5               	movf	postdec1,f,c
 47200  019F02  0012               	return		;funcret
 47201  019F04                     __end_of_check_day_time:
 47202                           	opt callstack 0
 47203                           
 47204 ;; *************** function _set_ac_charger_relay *****************
 47205 ;; Defined at:
 47206 ;;		line 136 in file "mbmc.c"
 47207 ;; Parameters:    Size  Location     Type
 47208 ;;  mode            1  [STACK] const _Bool 
 47209 ;; Auto vars:     Size  Location     Type
 47210 ;;		None
 47211 ;; Return value:  Size  Location     Type
 47212 ;;                  1  [STACK] void 
 47213 ;; Registers used:
 47214 ;;		wreg, fsr1l, fsr1h
 47215 ;; Tracked objects:
 47216 ;;		On entry : 0/39
 47217 ;;		On exit  : 0/0
 47218 ;;		Unchanged: 0/0
 47219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47224 ;;Total ram usage:        0 bytes
 47225 ;; Hardware stack levels used:    1
 47226 ;; Hardware stack levels required when called:    3
 47227 ;; This function calls:
 47228 ;;		Nothing
 47229 ;; This function is called by:
 47230 ;;		_check_day_time
 47231 ;; This function uses a reentrant model
 47232 ;;
 47233                           
 47234                           	psect	text194
 47235  00265E                     __ptext194:
 47236                           	opt callstack 0
 47237  00265E                     _set_ac_charger_relay:
 47238                           	opt callstack 10
 47239                           
 47240                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 47241                           ;stkvar	_mode @ sp[(0)+-1]
 47242                           
 47243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47244                           ;incstack = 0
 47245  00265E  0EFF               	movlw	-1
 47246  002660  B0E3               	btfsc	plusw1,0,c
 47247  002662  D002               	bra	u1171_25
 47248  002664  9CBD               	bcf	189,6,c	;volatile
 47249  002666  D001               	bra	u1171_26
 47250  002668                     u1171_25:
 47251  002668  8CBD               	bsf	189,6,c	;volatile
 47252  00266A                     u1171_26:
 47253                           
 47254                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 47255  00266A  52E5               	movf	postdec1,f,c
 47256  00266C  0012               	return		;funcret
 47257  00266E                     __end_of_set_ac_charger_relay:
 47258                           	opt callstack 0
 47259                           
 47260 ;; *************** function _get_ac_charger_relay *****************
 47261 ;; Defined at:
 47262 ;;		line 141 in file "mbmc.c"
 47263 ;; Parameters:    Size  Location     Type
 47264 ;;		None
 47265 ;; Auto vars:     Size  Location     Type
 47266 ;;		None
 47267 ;; Return value:  Size  Location     Type
 47268 ;;                  1  [STACK] _Bool 
 47269 ;; Registers used:
 47270 ;;		btemp
 47271 ;; Tracked objects:
 47272 ;;		On entry : 0/39
 47273 ;;		On exit  : 0/0
 47274 ;;		Unchanged: 0/0
 47275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47280 ;;Total ram usage:        0 bytes
 47281 ;; Hardware stack levels used:    1
 47282 ;; Hardware stack levels required when called:    3
 47283 ;; This function calls:
 47284 ;;		Nothing
 47285 ;; This function is called by:
 47286 ;;		_check_day_time
 47287 ;;		_calc_bsoc
 47288 ;; This function uses a reentrant model
 47289 ;;
 47290                           
 47291                           	psect	text195
 47292  00268A                     __ptext195:
 47293                           	opt callstack 0
 47294  00268A                     _get_ac_charger_relay:
 47295                           	opt callstack 11
 47296                           
 47297                           ;mbmc.c: 143:  return LATDbits.LATD6;
 47298                           
 47299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47300                           ;incstack = 0
 47301  00268A  ACBD               	btfss	189,6,c	;volatile
 47302  00268C  D003               	goto	u1234_20
 47303  00268E  6A2A               	clrf	btemp^0,c
 47304  002690  2A2A               	incf	btemp^0,f,c
 47305  002692  0012               	return	
 47306  002694                     u1234_20:
 47307  002694  6A2A               	clrf	btemp^0,c
 47308                           
 47309                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 47310  002696  0012               	return		;funcret
 47311  002698                     __end_of_get_ac_charger_relay:
 47312                           	opt callstack 0
 47313                           
 47314 ;; *************** function _TMR3_ISR *****************
 47315 ;; Defined at:
 47316 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 47317 ;; Parameters:    Size  Location     Type
 47318 ;;		None
 47319 ;; Auto vars:     Size  Location     Type
 47320 ;;		None
 47321 ;; Return value:  Size  Location     Type
 47322 ;;                  1    wreg      void 
 47323 ;; Registers used:
 47324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47325 ;; Tracked objects:
 47326 ;;		On entry : 0/0
 47327 ;;		On exit  : 3F/0
 47328 ;;		Unchanged: 0/0
 47329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47332 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47333 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47334 ;;Total ram usage:       25 bytes
 47335 ;; Hardware stack levels used:    1
 47336 ;; Hardware stack levels required when called:   14
 47337 ;; This function calls:
 47338 ;;		_TMR3_CallBack
 47339 ;;		_TMR3_WriteTimer
 47340 ;; This function is called by:
 47341 ;;		Interrupt level 1
 47342 ;; This function uses a non-reentrant model
 47343 ;;
 47344                           
 47345                           	psect	text196
 47346  01E774                     __ptext196:
 47347                           	opt callstack 0
 47348  01E774                     _TMR3_ISR:
 47349                           	opt callstack 3
 47350                           
 47351                           ;incstack = 0
 47352  01E774  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 47353  01E77A  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 47354  01E780  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 47355  01E786  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 47356  01E78C  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 47357  01E792  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 47358  01E798  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 47359  01E79E  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 47360  01E7A4  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 47361  01E7AA  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 47362  01E7B0  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 47363  01E7B6  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 47364  01E7BC  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 47365  01E7C2  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 47366  01E7C8  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 47367  01E7CE  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 47368  01E7D4  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 47369  01E7DA  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 47370  01E7E0  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 47371  01E7E6  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 47372  01E7EC  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 47373  01E7F2  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 47374  01E7F8  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 47375  01E7FE  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 47376  01E804  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 47377  01E80A  EE16  F196         	lfsr	1,___intlo_sp
 47378                           
 47379                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 47380  01E80E  0139               	movlb	57	; () banked
 47381  01E810  9DA6               	bcf	166,6,b	;volatile
 47382                           
 47383                           ; BSR set to: 57
 47384                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 47385  01E812  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 47386  01E818  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 47387  01E81E  EC3A  F00E         	call	_TMR3_WriteTimer	;wreg free
 47388                           
 47389                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 47390  01E822  0100               	movlb	0	; () banked
 47391  01E824  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 47392  01E826  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47393  01E828  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47394  01E82A  E104               	bnz	i1u1694_20
 47395  01E82C  0E28               	movlw	40
 47396  01E82E  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 47397  01E830  A0D8               	btfss	status,0,c
 47398  01E832  D005               	goto	i1l1209
 47399  01E834                     i1u1694_20:
 47400                           
 47401                           ; BSR set to: 0
 47402                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 47403  01E834  ECBE  F011         	call	_TMR3_CallBack	;wreg free
 47404                           
 47405                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 47406  01E838  0100               	movlb	0	; () banked
 47407  01E83A  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 47408  01E83C  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 47409  01E83E                     i1l1209:
 47410                           
 47411                           ; BSR set to: 0
 47412  01E83E  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 47413  01E844  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 47414  01E84A  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 47415  01E850  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 47416  01E856  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 47417  01E85C  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 47418  01E862  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 47419  01E868  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 47420  01E86E  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 47421  01E874  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 47422  01E87A  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 47423  01E880  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 47424  01E886  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 47425  01E88C  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 47426  01E892  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 47427  01E898  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 47428  01E89E  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 47429  01E8A4  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 47430  01E8AA  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 47431  01E8B0  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 47432  01E8B6  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 47433  01E8BC  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 47434  01E8C2  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 47435  01E8C8  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 47436  01E8CE  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 47437  01E8D4  0011               	retfie		f
 47438  01E8D6                     __end_of_TMR3_ISR:
 47439                           	opt callstack 0
 47440                           
 47441 ;; *************** function _TMR3_WriteTimer *****************
 47442 ;; Defined at:
 47443 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 47444 ;; Parameters:    Size  Location     Type
 47445 ;;  timerVal        2  [STACK] unsigned short 
 47446 ;; Auto vars:     Size  Location     Type
 47447 ;;		None
 47448 ;; Return value:  Size  Location     Type
 47449 ;;                  1  [STACK] void 
 47450 ;; Registers used:
 47451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47452 ;; Tracked objects:
 47453 ;;		On entry : 3F/39
 47454 ;;		On exit  : 0/0
 47455 ;;		Unchanged: 0/0
 47456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47461 ;;Total ram usage:        0 bytes
 47462 ;; Hardware stack levels used:    1
 47463 ;; Hardware stack levels required when called:    3
 47464 ;; This function calls:
 47465 ;;		Nothing
 47466 ;; This function is called by:
 47467 ;;		_TMR3_ISR
 47468 ;; This function uses a reentrant model
 47469 ;;
 47470                           
 47471                           	psect	text197
 47472  001C74                     __ptext197:
 47473                           	opt callstack 0
 47474  001C74                     _TMR3_WriteTimer:
 47475                           	opt callstack 13
 47476                           
 47477                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 47478                           
 47479                           ; BSR set to: 0
 47480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47481                           ;incstack = 0
 47482  001C74  A4A6               	btfss	166,2,c	;volatile
 47483  001C76  D00F               	goto	l13938
 47484                           
 47485                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 47486  001C78  90A6               	bcf	166,0,c	;volatile
 47487                           
 47488                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 47489                           ;stkvar	_timerVal @ sp[(0)+-2]
 47490  001C7A  0EFF               	movlw	255
 47491  001C7C  24E1               	addwf	fsr1l,w,c
 47492  001C7E  6ED9               	movwf	fsr2l,c
 47493  001C80  0EFF               	movlw	255
 47494  001C82  20E2               	addwfc	fsr1h,w,c
 47495  001C84  6EDA               	movwf	fsr2h,c
 47496  001C86  50DF               	movf	indf2,w,c
 47497  001C88  6EA5               	movwf	165,c	;volatile
 47498                           
 47499                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 47500                           ;stkvar	_timerVal @ sp[(0)+-2]
 47501  001C8A  0EFE               	movlw	-2
 47502  001C8C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47503                           
 47504                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 47505  001C92  80A6               	bsf	166,0,c	;volatile
 47506                           
 47507                           ;mcc_generated_files/tmr3.c: 141:     }
 47508  001C94  D00C               	goto	l1192
 47509  001C96                     l13938:
 47510                           
 47511                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 47512                           ;stkvar	_timerVal @ sp[(0)+-2]
 47513  001C96  0EFF               	movlw	255
 47514  001C98  24E1               	addwf	fsr1l,w,c
 47515  001C9A  6ED9               	movwf	fsr2l,c
 47516  001C9C  0EFF               	movlw	255
 47517  001C9E  20E2               	addwfc	fsr1h,w,c
 47518  001CA0  6EDA               	movwf	fsr2h,c
 47519  001CA2  50DF               	movf	indf2,w,c
 47520  001CA4  6EA5               	movwf	165,c	;volatile
 47521                           
 47522                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 47523                           ;stkvar	_timerVal @ sp[(0)+-2]
 47524  001CA6  0EFE               	movlw	-2
 47525  001CA8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47526  001CAE                     l1192:
 47527                           
 47528                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47529  001CAE  52E5               	movf	postdec1,f,c
 47530  001CB0  52E5               	movf	postdec1,f,c
 47531  001CB2  0012               	return		;funcret
 47532  001CB4                     __end_of_TMR3_WriteTimer:
 47533                           	opt callstack 0
 47534                           
 47535 ;; *************** function _TMR3_CallBack *****************
 47536 ;; Defined at:
 47537 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 47538 ;; Parameters:    Size  Location     Type
 47539 ;;		None
 47540 ;; Auto vars:     Size  Location     Type
 47541 ;;		None
 47542 ;; Return value:  Size  Location     Type
 47543 ;;                  1  [STACK] void 
 47544 ;; Registers used:
 47545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47546 ;; Tracked objects:
 47547 ;;		On entry : 3F/0
 47548 ;;		On exit  : 0/0
 47549 ;;		Unchanged: 0/0
 47550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47555 ;;Total ram usage:        0 bytes
 47556 ;; Hardware stack levels used:    1
 47557 ;; Hardware stack levels required when called:   13
 47558 ;; This function calls:
 47559 ;;		Absolute function
 47560 ;;		_TMR3_DefaultInterruptHandler
 47561 ;;		_calc_bsoc
 47562 ;; This function is called by:
 47563 ;;		_TMR3_ISR
 47564 ;; This function uses a reentrant model
 47565 ;;
 47566                           
 47567                           	psect	text198
 47568  00237C                     __ptext198:
 47569                           	opt callstack 0
 47570  00237C                     _TMR3_CallBack:
 47571                           	opt callstack 3
 47572                           
 47573                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 47574                           
 47575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47576                           ;incstack = 0
 47577  00237C  0100               	movlb	0	; () banked
 47578  00237E  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47579  002380  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47580  002382  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47581  002384  B4D8               	btfsc	status,2,c
 47582  002386  0012               	return	
 47583                           
 47584                           ; BSR set to: 0
 47585                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 47586  002388  D801               	call	u1672_28
 47587  00238A  0012               	return	
 47588  00238C                     u1672_28:
 47589  00238C  0005               	push	
 47590  00238E  6EFA               	movwf	pclath,c
 47591  002390  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47592  002392  6EFD               	movwf	tosl,c
 47593  002394  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47594  002396  6EFE               	movwf	tosh,c
 47595  002398  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47596  00239A  6EFF               	movwf	tosu,c
 47597  00239C  50FA               	movf	pclath,w,c
 47598  00239E  0012               	return		;indir
 47599  0023A0                     __end_of_TMR3_CallBack:
 47600                           	opt callstack 0
 47601                           
 47602 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 47603 ;; Defined at:
 47604 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 47605 ;; Parameters:    Size  Location     Type
 47606 ;;		None
 47607 ;; Auto vars:     Size  Location     Type
 47608 ;;		None
 47609 ;; Return value:  Size  Location     Type
 47610 ;;                  1  [STACK] void 
 47611 ;; Registers used:
 47612 ;;		None
 47613 ;; Tracked objects:
 47614 ;;		On entry : 3F/0
 47615 ;;		On exit  : 0/0
 47616 ;;		Unchanged: 0/0
 47617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47622 ;;Total ram usage:        0 bytes
 47623 ;; Hardware stack levels used:    1
 47624 ;; Hardware stack levels required when called:    3
 47625 ;; This function calls:
 47626 ;;		Nothing
 47627 ;; This function is called by:
 47628 ;;		_TMR3_Initialize
 47629 ;;		_TMR3_CallBack
 47630 ;; This function uses a reentrant model
 47631 ;;
 47632                           
 47633                           	psect	text199
 47634  002744                     __ptext199:
 47635                           	opt callstack 0
 47636  002744                     _TMR3_DefaultInterruptHandler:
 47637                           	opt callstack 12
 47638                           
 47639                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47640                           
 47641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47642                           ;incstack = 0
 47643  002744  0012               	return		;funcret
 47644  002746                     __end_of_TMR3_DefaultInterruptHandler:
 47645                           	opt callstack 0
 47646                           
 47647 ;; *************** function _calc_bsoc *****************
 47648 ;; Defined at:
 47649 ;;		line 39 in file "bsoc.c"
 47650 ;; Parameters:    Size  Location     Type
 47651 ;;		None
 47652 ;; Auto vars:     Size  Location     Type
 47653 ;;  adj             4  [STACK] float 
 47654 ;;  log_ptr         2  [STACK] PTR unsigned char 
 47655 ;;		 -> port_data(512), 
 47656 ;; Return value:  Size  Location     Type
 47657 ;;                  1  [STACK] void 
 47658 ;; Registers used:
 47659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 47660 ;; Tracked objects:
 47661 ;;		On entry : 3F/0
 47662 ;;		On exit  : 6/2
 47663 ;;		Unchanged: 0/0
 47664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47669 ;;Total ram usage:        0 bytes
 47670 ;; Hardware stack levels used:    1
 47671 ;; Hardware stack levels required when called:   12
 47672 ;; This function calls:
 47673 ;;		_StartTimer
 47674 ;;		___asfladd
 47675 ;;		___fldiv
 47676 ;;		___flge
 47677 ;;		___flmul
 47678 ;;		___flneg
 47679 ;;		___fltol
 47680 ;;		_fabsf
 47681 ;;		_get_ac_charger_relay
 47682 ;;		_port_data_dma_ptr
 47683 ;;		_send_port_data_dma
 47684 ;;		_sprintf
 47685 ;;		_strlen
 47686 ;; This function is called by:
 47687 ;;		_init_bsoc
 47688 ;;		_TMR3_CallBack
 47689 ;; This function uses a reentrant model
 47690 ;;
 47691                           
 47692                           	psect	text200
 47693  014818                     __ptext200:
 47694                           	opt callstack 0
 47695  014818                     _calc_bsoc:
 47696                           	opt callstack 0
 47697                           
 47698                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47699  014818  0E06               	movlw	6
 47700  01481A  26E1               	addwf	fsr1l,f,c
 47701  01481C  0E00               	movlw	0
 47702  01481E  22E2               	addwfc	fsr1h,f,c
 47703                           
 47704                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 47705                           
 47706                           ;incstack = 0
 47707  014820  0E00               	movlw	0
 47708  014822  6E32               	movwf	(btemp+8)^0,c
 47709  014824  0E00               	movlw	0
 47710  014826  6E33               	movwf	(btemp+9)^0,c
 47711  014828  0E80               	movlw	128
 47712  01482A  6E34               	movwf	(btemp+10)^0,c
 47713  01482C  0E3F               	movlw	63
 47714  01482E  6E35               	movwf	(btemp+11)^0,c
 47715                           
 47716                           ;stkvar	_adj @ sp[(-6)+0]
 47717  014830  0EFA               	movlw	-6
 47718  014832  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47719  014838  0EFB               	movlw	-5
 47720  01483A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47721  014840  0EFC               	movlw	-4
 47722  014842  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47723  014848  0EFD               	movlw	-3
 47724  01484A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47725  014850  82BE               	bsf	190,1,c	;volatile
 47726                           
 47727                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 47728  014852  0E00               	movlw	0
 47729  014854  6EE6               	movwf	postinc1,c
 47730  014856  0E00               	movlw	0
 47731  014858  6EE6               	movwf	postinc1,c
 47732  01485A  0E61               	movlw	97
 47733  01485C  6EE6               	movwf	postinc1,c
 47734  01485E  0E45               	movlw	69
 47735  014860  6EE6               	movwf	postinc1,c
 47736  014862  EE22  F143         	lfsr	2,_C+68	;volatile
 47737  014866  006F FF7B FFE6     	movff	postinc2,postinc1
 47738  01486C  006F FF7B FFE6     	movff	postinc2,postinc1
 47739  014872  006F FF7B FFE6     	movff	postinc2,postinc1
 47740  014878  006F FF7B FFE6     	movff	postinc2,postinc1
 47741  01487E  EC9E  F0BD         	call	___fldiv	;wreg free
 47742  014882  0060  F0AB  FFE6   	movff	btemp,postinc1
 47743  014888  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47744  01488E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47745  014894  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47746  01489A  0E8F               	movlw	low (_C+144)
 47747  01489C  6EE6               	movwf	postinc1,c
 47748  01489E  0E09               	movlw	high (_C+144)
 47749  0148A0  6EE6               	movwf	postinc1,c
 47750  0148A2  EC58  F008         	call	___asfladd	;wreg free
 47751                           
 47752                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 47753  0148A6  EE22  F18F         	lfsr	2,_C+144	;volatile
 47754  0148AA  006F FF7B FFE6     	movff	postinc2,postinc1
 47755  0148B0  006F FF7B FFE6     	movff	postinc2,postinc1
 47756  0148B6  006F FF7B FFE6     	movff	postinc2,postinc1
 47757  0148BC  006F FF7B FFE6     	movff	postinc2,postinc1
 47758  0148C2  EE22  F18B         	lfsr	2,_C+140	;volatile
 47759  0148C6  006F FF7B FFE6     	movff	postinc2,postinc1
 47760  0148CC  006F FF7B FFE6     	movff	postinc2,postinc1
 47761  0148D2  006F FF7B FFE6     	movff	postinc2,postinc1
 47762  0148D8  006F FF7B FFE6     	movff	postinc2,postinc1
 47763  0148DE  EC09  F0F3         	call	___flge	;wreg free
 47764  0148E2  B02A               	btfsc	btemp& (0+255),0,c
 47765  0148E4  D00E               	goto	l16990
 47766                           
 47767                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 47768  0148E6  EE22  F18B         	lfsr	2,_C+140	;volatile
 47769  0148EA  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 47770  0148F0  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 47771  0148F6  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 47772  0148FC  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 47773  014902                     l16990:
 47774                           
 47775                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 47776  014902  0ECD               	movlw	205
 47777  014904  6EE6               	movwf	postinc1,c
 47778  014906  0ECC               	movlw	204
 47779  014908  6EE6               	movwf	postinc1,c
 47780  01490A  0ECC               	movlw	204
 47781  01490C  6EE6               	movwf	postinc1,c
 47782  01490E  0E3D               	movlw	61
 47783  014910  6EE6               	movwf	postinc1,c
 47784  014912  EE22  F18F         	lfsr	2,_C+144	;volatile
 47785  014916  006F FF7B FFE6     	movff	postinc2,postinc1
 47786  01491C  006F FF7B FFE6     	movff	postinc2,postinc1
 47787  014922  006F FF7B FFE6     	movff	postinc2,postinc1
 47788  014928  006F FF7B FFE6     	movff	postinc2,postinc1
 47789  01492E  EC09  F0F3         	call	___flge	;wreg free
 47790  014932  B02A               	btfsc	btemp& (0+255),0,c
 47791  014934  D010               	goto	l16994
 47792                           
 47793                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 47794  014936  0ECD               	movlw	205
 47795  014938  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 47796  01493E  0ECC               	movlw	204
 47797  014940  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 47798  014946  0ECC               	movlw	204
 47799  014948  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 47800  01494E  0E3D               	movlw	61
 47801  014950  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 47802  014956                     l16994:
 47803                           
 47804                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 47805  014956  EE22  F143         	lfsr	2,_C+68	;volatile
 47806  01495A  006F FF7B FFE6     	movff	postinc2,postinc1
 47807  014960  006F FF7B FFE6     	movff	postinc2,postinc1
 47808  014966  006F FF7B FFE6     	movff	postinc2,postinc1
 47809  01496C  006F FF7B FFE6     	movff	postinc2,postinc1
 47810  014972  0E0A               	movlw	10
 47811  014974  6EE6               	movwf	postinc1,c
 47812  014976  0ED7               	movlw	215
 47813  014978  6EE6               	movwf	postinc1,c
 47814  01497A  0E23               	movlw	35
 47815  01497C  6EE6               	movwf	postinc1,c
 47816  01497E  0E3C               	movlw	60
 47817  014980  6EE6               	movwf	postinc1,c
 47818  014982  EC09  F0F3         	call	___flge	;wreg free
 47819  014986  B02A               	btfsc	btemp& (0+255),0,c
 47820  014988  D01C               	goto	l16998
 47821                           
 47822                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 47823  01498A  0062  F714  F032   	movff	_C+198,btemp+8	;volatile
 47824  014990  0062  F718  F033   	movff	_C+199,btemp+9	;volatile
 47825  014996  0062  F71C  F034   	movff	_C+200,btemp+10	;volatile
 47826  01499C  0062  F720  F035   	movff	_C+201,btemp+11	;volatile
 47827                           
 47828                           ;stkvar	_adj @ sp[(-6)+0]
 47829  0149A2  0EFA               	movlw	-6
 47830  0149A4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47831  0149AA  0EFB               	movlw	-5
 47832  0149AC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47833  0149B2  0EFC               	movlw	-4
 47834  0149B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47835  0149BA  0EFD               	movlw	-3
 47836  0149BC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47837  0149C2                     l16998:
 47838                           
 47839                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 47840  0149C2  0E0A               	movlw	10
 47841  0149C4  6EE6               	movwf	postinc1,c
 47842  0149C6  0ED7               	movlw	215
 47843  0149C8  6EE6               	movwf	postinc1,c
 47844  0149CA  0E23               	movlw	35
 47845  0149CC  6EE6               	movwf	postinc1,c
 47846  0149CE  0E3C               	movlw	60
 47847  0149D0  6EE6               	movwf	postinc1,c
 47848  0149D2  EE22  F143         	lfsr	2,_C+68	;volatile
 47849  0149D6  006F FF7B FFE6     	movff	postinc2,postinc1
 47850  0149DC  006F FF7B FFE6     	movff	postinc2,postinc1
 47851  0149E2  006F FF7B FFE6     	movff	postinc2,postinc1
 47852  0149E8  006F FF7B FFE6     	movff	postinc2,postinc1
 47853  0149EE  EC09  F0F3         	call	___flge	;wreg free
 47854  0149F2  B02A               	btfsc	btemp& (0+255),0,c
 47855  0149F4  D01C               	goto	l17002
 47856                           
 47857                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 47858  0149F6  0062  F704  F032   	movff	_C+194,btemp+8	;volatile
 47859  0149FC  0062  F708  F033   	movff	_C+195,btemp+9	;volatile
 47860  014A02  0062  F70C  F034   	movff	_C+196,btemp+10	;volatile
 47861  014A08  0062  F710  F035   	movff	_C+197,btemp+11	;volatile
 47862                           
 47863                           ;stkvar	_adj @ sp[(-6)+0]
 47864  014A0E  0EFA               	movlw	-6
 47865  014A10  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47866  014A16  0EFB               	movlw	-5
 47867  014A18  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47868  014A1E  0EFC               	movlw	-4
 47869  014A20  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47870  014A26  0EFD               	movlw	-3
 47871  014A28  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47872  014A2E                     l17002:
 47873                           
 47874                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 47875  014A2E  0E00               	movlw	0
 47876  014A30  6EE6               	movwf	postinc1,c
 47877  014A32  0E00               	movlw	0
 47878  014A34  6EE6               	movwf	postinc1,c
 47879  014A36  0E61               	movlw	97
 47880  014A38  6EE6               	movwf	postinc1,c
 47881  014A3A  0E45               	movlw	69
 47882  014A3C  6EE6               	movwf	postinc1,c
 47883                           
 47884                           ;stkvar	_adj @ sp[(-10)+0]
 47885  014A3E  0EF6               	movlw	-10
 47886  014A40  006F FF8F FFE6     	movff	plusw1,postinc1
 47887  014A46  006F FF8F FFE6     	movff	plusw1,postinc1
 47888  014A4C  006F FF8F FFE6     	movff	plusw1,postinc1
 47889  014A52  006F FF8F FFE6     	movff	plusw1,postinc1
 47890  014A58  EE22  F143         	lfsr	2,_C+68	;volatile
 47891  014A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 47892  014A62  006F FF7B FFE6     	movff	postinc2,postinc1
 47893  014A68  006F FF7B FFE6     	movff	postinc2,postinc1
 47894  014A6E  006F FF7B FFE6     	movff	postinc2,postinc1
 47895  014A74  EC4D  F0B2         	call	___flmul	;wreg free
 47896  014A78  0060  F0AB  FFE6   	movff	btemp,postinc1
 47897  014A7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47898  014A84  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47899  014A8A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47900  014A90  EC9E  F0BD         	call	___fldiv	;wreg free
 47901  014A94  0060  F0AB  FFE6   	movff	btemp,postinc1
 47902  014A9A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47903  014AA0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47904  014AA6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47905  014AAC  0E8F               	movlw	low (_C+144)
 47906  014AAE  6EE6               	movwf	postinc1,c
 47907  014AB0  0E09               	movlw	high (_C+144)
 47908  014AB2  6EE6               	movwf	postinc1,c
 47909  014AB4  EC58  F008         	call	___asfladd	;wreg free
 47910                           
 47911                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 47912  014AB8  EE22  F18F         	lfsr	2,_C+144	;volatile
 47913  014ABC  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47914  014AC2  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47915  014AC8  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47916  014ACE  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47917                           
 47918                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 47919  014AD4  EE22  F19B         	lfsr	2,_C+156	;volatile
 47920  014AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 47921  014ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 47922  014AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 47923  014AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 47924  014AF0  EE22  F18B         	lfsr	2,_C+140	;volatile
 47925  014AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 47926  014AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 47927  014B00  006F FF7B FFE6     	movff	postinc2,postinc1
 47928  014B06  006F FF7B FFE6     	movff	postinc2,postinc1
 47929  014B0C  EC09  F0F3         	call	___flge	;wreg free
 47930  014B10  B02A               	btfsc	btemp& (0+255),0,c
 47931  014B12  D00E               	goto	l17010
 47932                           
 47933                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 47934  014B14  EE22  F18B         	lfsr	2,_C+140	;volatile
 47935  014B18  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47936  014B1E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47937  014B24  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47938  014B2A  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47939  014B30                     l17010:
 47940                           
 47941                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 47942  014B30  0ECD               	movlw	205
 47943  014B32  6EE6               	movwf	postinc1,c
 47944  014B34  0ECC               	movlw	204
 47945  014B36  6EE6               	movwf	postinc1,c
 47946  014B38  0ECC               	movlw	204
 47947  014B3A  6EE6               	movwf	postinc1,c
 47948  014B3C  0E3D               	movlw	61
 47949  014B3E  6EE6               	movwf	postinc1,c
 47950  014B40  EE22  F19B         	lfsr	2,_C+156	;volatile
 47951  014B44  006F FF7B FFE6     	movff	postinc2,postinc1
 47952  014B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 47953  014B50  006F FF7B FFE6     	movff	postinc2,postinc1
 47954  014B56  006F FF7B FFE6     	movff	postinc2,postinc1
 47955  014B5C  EC09  F0F3         	call	___flge	;wreg free
 47956  014B60  B02A               	btfsc	btemp& (0+255),0,c
 47957  014B62  D010               	goto	l17014
 47958                           
 47959                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 47960  014B64  0ECD               	movlw	205
 47961  014B66  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 47962  014B6C  0ECC               	movlw	204
 47963  014B6E  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 47964  014B74  0ECC               	movlw	204
 47965  014B76  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 47966  014B7C  0E3D               	movlw	61
 47967  014B7E  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 47968  014B84                     l17014:
 47969                           
 47970                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 47971  014B84  0E00               	movlw	0
 47972  014B86  6EE6               	movwf	postinc1,c
 47973  014B88  0E00               	movlw	0
 47974  014B8A  6EE6               	movwf	postinc1,c
 47975  014B8C  0E61               	movlw	97
 47976  014B8E  6EE6               	movwf	postinc1,c
 47977  014B90  0E45               	movlw	69
 47978  014B92  6EE6               	movwf	postinc1,c
 47979  014B94  EE22  F147         	lfsr	2,_C+72	;volatile
 47980  014B98  006F FF7B FFE6     	movff	postinc2,postinc1
 47981  014B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 47982  014BA4  006F FF7B FFE6     	movff	postinc2,postinc1
 47983  014BAA  006F FF7B FFE6     	movff	postinc2,postinc1
 47984  014BB0  EC9E  F0BD         	call	___fldiv	;wreg free
 47985  014BB4  0060  F0AB  FFE6   	movff	btemp,postinc1
 47986  014BBA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47987  014BC0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47988  014BC6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47989  014BCC  0E93               	movlw	low (_C+148)
 47990  014BCE  6EE6               	movwf	postinc1,c
 47991  014BD0  0E09               	movlw	high (_C+148)
 47992  014BD2  6EE6               	movwf	postinc1,c
 47993  014BD4  EC58  F008         	call	___asfladd	;wreg free
 47994                           
 47995                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 47996  014BD8  0E00               	movlw	0
 47997  014BDA  6EE6               	movwf	postinc1,c
 47998  014BDC  0E00               	movlw	0
 47999  014BDE  6EE6               	movwf	postinc1,c
 48000  014BE0  0E61               	movlw	97
 48001  014BE2  6EE6               	movwf	postinc1,c
 48002  014BE4  0E45               	movlw	69
 48003  014BE6  6EE6               	movwf	postinc1,c
 48004  014BE8  EE22  F17B         	lfsr	2,_C+124	;volatile
 48005  014BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 48006  014BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 48007  014BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 48008  014BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 48009  014C04  EC9E  F0BD         	call	___fldiv	;wreg free
 48010  014C08  0060  F0AB  FFE6   	movff	btemp,postinc1
 48011  014C0E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48012  014C14  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48013  014C1A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48014  014C20  0EA7               	movlw	low (_C+168)
 48015  014C22  6EE6               	movwf	postinc1,c
 48016  014C24  0E09               	movlw	high (_C+168)
 48017  014C26  6EE6               	movwf	postinc1,c
 48018  014C28  EC58  F008         	call	___asfladd	;wreg free
 48019                           
 48020                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 48021  014C2C  0E00               	movlw	0
 48022  014C2E  6EE6               	movwf	postinc1,c
 48023  014C30  0E00               	movlw	0
 48024  014C32  6EE6               	movwf	postinc1,c
 48025  014C34  0E61               	movlw	97
 48026  014C36  6EE6               	movwf	postinc1,c
 48027  014C38  0E45               	movlw	69
 48028  014C3A  6EE6               	movwf	postinc1,c
 48029  014C3C  EE22  F177         	lfsr	2,_C+120	;volatile
 48030  014C40  006F FF7B FFE6     	movff	postinc2,postinc1
 48031  014C46  006F FF7B FFE6     	movff	postinc2,postinc1
 48032  014C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 48033  014C52  006F FF7B FFE6     	movff	postinc2,postinc1
 48034  014C58  EC9E  F0BD         	call	___fldiv	;wreg free
 48035  014C5C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48036  014C62  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48037  014C68  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48038  014C6E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48039  014C74  0EAB               	movlw	low (_C+172)
 48040  014C76  6EE6               	movwf	postinc1,c
 48041  014C78  0E09               	movlw	high (_C+172)
 48042  014C7A  6EE6               	movwf	postinc1,c
 48043  014C7C  EC58  F008         	call	___asfladd	;wreg free
 48044                           
 48045                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 48046  014C80  0E00               	movlw	0
 48047  014C82  6EE6               	movwf	postinc1,c
 48048  014C84  0E00               	movlw	0
 48049  014C86  6EE6               	movwf	postinc1,c
 48050  014C88  0E61               	movlw	97
 48051  014C8A  6EE6               	movwf	postinc1,c
 48052  014C8C  0E45               	movlw	69
 48053  014C8E  6EE6               	movwf	postinc1,c
 48054  014C90  EE22  F173         	lfsr	2,_C+116	;volatile
 48055  014C94  006F FF7B FFE6     	movff	postinc2,postinc1
 48056  014C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 48057  014CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 48058  014CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 48059  014CAC  EC9E  F0BD         	call	___fldiv	;wreg free
 48060  014CB0  0060  F0AB  FFE6   	movff	btemp,postinc1
 48061  014CB6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48062  014CBC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48063  014CC2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48064  014CC8  0EAF               	movlw	low (_C+176)
 48065  014CCA  6EE6               	movwf	postinc1,c
 48066  014CCC  0E09               	movlw	high (_C+176)
 48067  014CCE  6EE6               	movwf	postinc1,c
 48068  014CD0  EC58  F008         	call	___asfladd	;wreg free
 48069                           
 48070                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 48071  014CD4  EE22  F17F         	lfsr	2,_C+128	;volatile
 48072  014CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 48073  014CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 48074  014CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 48075  014CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 48076  014CF0  0E00               	movlw	0
 48077  014CF2  6EE6               	movwf	postinc1,c
 48078  014CF4  0E00               	movlw	0
 48079  014CF6  6EE6               	movwf	postinc1,c
 48080  014CF8  0E00               	movlw	0
 48081  014CFA  6EE6               	movwf	postinc1,c
 48082  014CFC  0E00               	movlw	0
 48083  014CFE  6EE6               	movwf	postinc1,c
 48084  014D00  EC09  F0F3         	call	___flge	;wreg free
 48085  014D04  B02A               	btfsc	btemp& (0+255),0,c
 48086  014D06  D02A               	goto	l17020
 48087                           
 48088                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 48089  014D08  0E00               	movlw	0
 48090  014D0A  6EE6               	movwf	postinc1,c
 48091  014D0C  0E00               	movlw	0
 48092  014D0E  6EE6               	movwf	postinc1,c
 48093  014D10  0E61               	movlw	97
 48094  014D12  6EE6               	movwf	postinc1,c
 48095  014D14  0E45               	movlw	69
 48096  014D16  6EE6               	movwf	postinc1,c
 48097  014D18  EE22  F17F         	lfsr	2,_C+128	;volatile
 48098  014D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 48099  014D22  006F FF7B FFE6     	movff	postinc2,postinc1
 48100  014D28  006F FF7B FFE6     	movff	postinc2,postinc1
 48101  014D2E  006F FF7B FFE6     	movff	postinc2,postinc1
 48102  014D34  EC9E  F0BD         	call	___fldiv	;wreg free
 48103  014D38  0060  F0AB  FFE6   	movff	btemp,postinc1
 48104  014D3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48105  014D44  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48106  014D4A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48107  014D50  0E9F               	movlw	low (_C+160)
 48108  014D52  6EE6               	movwf	postinc1,c
 48109  014D54  0E09               	movlw	high (_C+160)
 48110  014D56  6EE6               	movwf	postinc1,c
 48111  014D58  EC58  F008         	call	___asfladd	;wreg free
 48112  014D5C                     l17020:
 48113                           
 48114                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 48115  014D5C  EE22  F17F         	lfsr	2,_C+128	;volatile
 48116  014D60  0E03               	movlw	3
 48117  014D62  AEDB               	btfss	plusw2,7,c
 48118  014D64  D038               	goto	l17024
 48119                           
 48120                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 48121  014D66  0E00               	movlw	0
 48122  014D68  6EE6               	movwf	postinc1,c
 48123  014D6A  0E00               	movlw	0
 48124  014D6C  6EE6               	movwf	postinc1,c
 48125  014D6E  0E61               	movlw	97
 48126  014D70  6EE6               	movwf	postinc1,c
 48127  014D72  0E45               	movlw	69
 48128  014D74  6EE6               	movwf	postinc1,c
 48129  014D76  EE22  F17F         	lfsr	2,_C+128	;volatile
 48130  014D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 48131  014D80  006F FF7B FFE6     	movff	postinc2,postinc1
 48132  014D86  006F FF7B FFE6     	movff	postinc2,postinc1
 48133  014D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 48134  014D92  EC9E  F0BD         	call	___fldiv	;wreg free
 48135  014D96  0060  F0AB  FFE6   	movff	btemp,postinc1
 48136  014D9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48137  014DA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48138  014DA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48139  014DAE  EC96  F002         	call	_fabsf	;wreg free
 48140  014DB2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48141  014DB8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48142  014DBE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48143  014DC4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48144  014DCA  0EA3               	movlw	low (_C+164)
 48145  014DCC  6EE6               	movwf	postinc1,c
 48146  014DCE  0E09               	movlw	high (_C+164)
 48147  014DD0  6EE6               	movwf	postinc1,c
 48148  014DD2  EC58  F008         	call	___asfladd	;wreg free
 48149  014DD6                     l17024:
 48150                           
 48151                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 48152  014DD6  0E00               	movlw	0
 48153  014DD8  6EE6               	movwf	postinc1,c
 48154  014DDA  0E00               	movlw	0
 48155  014DDC  6EE6               	movwf	postinc1,c
 48156  014DDE  0EC8               	movlw	200
 48157  014DE0  6EE6               	movwf	postinc1,c
 48158  014DE2  0E42               	movlw	66
 48159  014DE4  6EE6               	movwf	postinc1,c
 48160  014DE6  EE22  F18B         	lfsr	2,_C+140	;volatile
 48161  014DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 48162  014DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 48163  014DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 48164  014DFC  006F FF7B FFE6     	movff	postinc2,postinc1
 48165  014E02  EE22  F19B         	lfsr	2,_C+156	;volatile
 48166  014E06  006F FF7B FFE6     	movff	postinc2,postinc1
 48167  014E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 48168  014E12  006F FF7B FFE6     	movff	postinc2,postinc1
 48169  014E18  006F FF7B FFE6     	movff	postinc2,postinc1
 48170  014E1E  EC9E  F0BD         	call	___fldiv	;wreg free
 48171  014E22  0060  F0AB  FFE6   	movff	btemp,postinc1
 48172  014E28  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48173  014E2E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48174  014E34  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48175  014E3A  EC4D  F0B2         	call	___flmul	;wreg free
 48176  014E3E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48177  014E44  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48178  014E4A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48179  014E50  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48180  014E56  EC9D  F0F1         	call	___fltol	;wreg free
 48181  014E5A  0060  F0A8  F034   	movff	btemp,btemp+10
 48182  014E60  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48183  014E66  0E01               	movlw	1
 48184  014E68  2634               	addwf	(btemp+10)^0,f,c
 48185  014E6A  0E00               	movlw	0
 48186  014E6C  2235               	addwfc	(btemp+11)^0,f,c
 48187  014E6E  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 48188  014E74  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 48189                           
 48190                           ;bsoc.c: 76:  if (C.soc > 100)
 48191  014E7A  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48192  014E7E  0E01               	movlw	1
 48193  014E80  50DB               	movf	plusw2,w,c
 48194  014E82  E104               	bnz	u1665_20
 48195  014E84  0E65               	movlw	101
 48196  014E86  5CDE               	subwf	postinc2,w,c
 48197  014E88  A0D8               	btfss	status,0,c
 48198  014E8A  D008               	goto	l17030
 48199  014E8C                     u1665_20:
 48200                           
 48201                           ;bsoc.c: 77:   C.soc = 100;
 48202  014E8C  0E64               	movlw	100
 48203  014E8E  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 48204  014E94  0E00               	movlw	0
 48205  014E96  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 48206  014E9C                     l17030:
 48207                           
 48208                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 48209  014E9C  EE22  F143         	lfsr	2,_C+68	;volatile
 48210  014EA0  0E03               	movlw	3
 48211  014EA2  AEDB               	btfss	plusw2,7,c
 48212  014EA4  D047               	goto	l2360
 48213                           
 48214                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 48215  014EA6  EE22  F143         	lfsr	2,_C+68	;volatile
 48216  014EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 48217  014EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 48218  014EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 48219  014EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 48220  014EC2  EE22  F19B         	lfsr	2,_C+156	;volatile
 48221  014EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 48222  014ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 48223  014ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 48224  014ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 48225  014EDE  EC9E  F0BD         	call	___fldiv	;wreg free
 48226  014EE2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48227  014EE8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48228  014EEE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48229  014EF4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48230  014EFA  EC7E  F00C         	call	___flneg	;wreg free
 48231  014EFE  0060  F0AB  FFE6   	movff	btemp,postinc1
 48232  014F04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48233  014F0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48234  014F10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48235  014F16  EC9D  F0F1         	call	___fltol	;wreg free
 48236  014F1A  0060  F0A8  F034   	movff	btemp,btemp+10
 48237  014F20  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48238  014F26  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 48239  014F2C  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 48240                           
 48241                           ;bsoc.c: 81:  } else {
 48242  014F32  D008               	goto	l17034
 48243  014F34                     l2360:
 48244                           
 48245                           ;bsoc.c: 82:   C.runtime = 99;
 48246  014F34  0E63               	movlw	99
 48247  014F36  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48248  014F3C  0E00               	movlw	0
 48249  014F3E  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48250  014F44                     l17034:
 48251                           
 48252                           ;bsoc.c: 84:  if (C.runtime > 99)
 48253  014F44  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48254  014F48  0E01               	movlw	1
 48255  014F4A  50DB               	movf	plusw2,w,c
 48256  014F4C  E104               	bnz	u1667_20
 48257  014F4E  0E64               	movlw	100
 48258  014F50  5CDE               	subwf	postinc2,w,c
 48259  014F52  A0D8               	btfss	status,0,c
 48260  014F54  D008               	goto	l17038
 48261  014F56                     u1667_20:
 48262                           
 48263                           ;bsoc.c: 85:   C.runtime = 99;
 48264  014F56  0E63               	movlw	99
 48265  014F58  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48266  014F5E  0E00               	movlw	0
 48267  014F60  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48268  014F66                     l17038:
 48269                           
 48270                           ;bsoc.c: 87:  V.lowint_count++;
 48271  014F66  0E01               	movlw	1
 48272  014F68  0102               	movlb	2	; () banked
 48273  014F6A  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 48274  014F6C  0E00               	movlw	0
 48275  014F6E  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 48276  014F70  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 48277  014F72  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 48278                           
 48279                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 48280  014F74  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 48281  014F76  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 48282  014F78  A4D8               	btfss	status,2,c
 48283  014F7A  D177               	goto	l17050
 48284                           
 48285                           ; BSR set to: 2
 48286  014F7C  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48287  014F7E  B4D8               	btfsc	status,2,c
 48288  014F80  D174               	goto	l17050
 48289                           
 48290                           ; BSR set to: 2
 48291                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 48292  014F82  EC60  F013         	call	_port_data_dma_ptr	;wreg free
 48293                           
 48294                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48295  014F86  0EFF               	movlw	-1
 48296  014F88  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48297  014F8E  0EFE               	movlw	-2
 48298  014F90  0060  F0AB  FFE3   	movff	btemp,plusw1
 48299                           
 48300                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 48301  014F96  EE22  F1C1         	lfsr	2,_C+194	;volatile
 48302  014F9A  006F FF7B FFE6     	movff	postinc2,postinc1
 48303  014FA0  006F FF7B FFE6     	movff	postinc2,postinc1
 48304  014FA6  006F FF7B FFE6     	movff	postinc2,postinc1
 48305  014FAC  006F FF7B FFE6     	movff	postinc2,postinc1
 48306  014FB2  EE22  F1C5         	lfsr	2,_C+198	;volatile
 48307  014FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 48308  014FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 48309  014FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 48310  014FC8  006F FF7B FFE6     	movff	postinc2,postinc1
 48311  014FCE  EE22  F19B         	lfsr	2,_C+156	;volatile
 48312  014FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 48313  014FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 48314  014FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 48315  014FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 48316  014FEA  EE22  F233         	lfsr	2,_C+308	;volatile
 48317  014FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 48318  014FF4  006F FF7B FFE6     	movff	postinc2,postinc1
 48319  014FFA  006F FF7B FFE6     	movff	postinc2,postinc1
 48320  015000  006F FF7B FFE6     	movff	postinc2,postinc1
 48321  015006  EE22  F22F         	lfsr	2,_C+304	;volatile
 48322  01500A  006F FF7B FFE6     	movff	postinc2,postinc1
 48323  015010  006F FF7B FFE6     	movff	postinc2,postinc1
 48324  015016  006F FF7B FFE6     	movff	postinc2,postinc1
 48325  01501C  006F FF7B FFE6     	movff	postinc2,postinc1
 48326  015022  EE22  F22D         	lfsr	2,_C+302	;volatile
 48327  015026  50DF               	movf	indf2,w,c
 48328  015028  6EE6               	movwf	postinc1,c
 48329  01502A  0E00               	movlw	0
 48330  01502C  6EE6               	movwf	postinc1,c
 48331  01502E  EC45  F013         	call	_get_ac_charger_relay	;wreg free
 48332  015032  502A               	movf	btemp^0,w,c
 48333  015034  6EE6               	movwf	postinc1,c
 48334  015036  0E00               	movlw	0
 48335  015038  6EE6               	movwf	postinc1,c
 48336  01503A  EE22  F167         	lfsr	2,_C+104	;volatile
 48337  01503E  006F FF7B FFE6     	movff	postinc2,postinc1
 48338  015044  006F FF7B FFE6     	movff	postinc2,postinc1
 48339  01504A  006F FF7B FFE6     	movff	postinc2,postinc1
 48340  015050  006F FF7B FFE6     	movff	postinc2,postinc1
 48341  015056  EE22  F187         	lfsr	2,_C+136	;volatile
 48342  01505A  006F FF7B FFE6     	movff	postinc2,postinc1
 48343  015060  006F FF7B FFE6     	movff	postinc2,postinc1
 48344  015066  006F FF7B FFE6     	movff	postinc2,postinc1
 48345  01506C  006F FF7B FFE6     	movff	postinc2,postinc1
 48346  015072  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48347  015076  006F FF78  F034    	movff	postinc2,btemp+10
 48348  01507C  006F FF74  F035    	movff	postdec2,btemp+11
 48349  015082  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48350  015088  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48351  01508E  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48352  015092  006F FF78  F034    	movff	postinc2,btemp+10
 48353  015098  006F FF74  F035    	movff	postdec2,btemp+11
 48354  01509E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48355  0150A4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48356  0150AA  EE22  F193         	lfsr	2,_C+148	;volatile
 48357  0150AE  006F FF7B FFE6     	movff	postinc2,postinc1
 48358  0150B4  006F FF7B FFE6     	movff	postinc2,postinc1
 48359  0150BA  006F FF7B FFE6     	movff	postinc2,postinc1
 48360  0150C0  006F FF7B FFE6     	movff	postinc2,postinc1
 48361  0150C6  EE22  F18F         	lfsr	2,_C+144	;volatile
 48362  0150CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48363  0150D0  006F FF7B FFE6     	movff	postinc2,postinc1
 48364  0150D6  006F FF7B FFE6     	movff	postinc2,postinc1
 48365  0150DC  006F FF7B FFE6     	movff	postinc2,postinc1
 48366  0150E2  EE22  F177         	lfsr	2,_C+120	;volatile
 48367  0150E6  006F FF7B FFE6     	movff	postinc2,postinc1
 48368  0150EC  006F FF7B FFE6     	movff	postinc2,postinc1
 48369  0150F2  006F FF7B FFE6     	movff	postinc2,postinc1
 48370  0150F8  006F FF7B FFE6     	movff	postinc2,postinc1
 48371  0150FE  EE22  F173         	lfsr	2,_C+116	;volatile
 48372  015102  006F FF7B FFE6     	movff	postinc2,postinc1
 48373  015108  006F FF7B FFE6     	movff	postinc2,postinc1
 48374  01510E  006F FF7B FFE6     	movff	postinc2,postinc1
 48375  015114  006F FF7B FFE6     	movff	postinc2,postinc1
 48376  01511A  EE22  F17B         	lfsr	2,_C+124	;volatile
 48377  01511E  006F FF7B FFE6     	movff	postinc2,postinc1
 48378  015124  006F FF7B FFE6     	movff	postinc2,postinc1
 48379  01512A  006F FF7B FFE6     	movff	postinc2,postinc1
 48380  015130  006F FF7B FFE6     	movff	postinc2,postinc1
 48381  015136  EE22  F17F         	lfsr	2,_C+128	;volatile
 48382  01513A  006F FF7B FFE6     	movff	postinc2,postinc1
 48383  015140  006F FF7B FFE6     	movff	postinc2,postinc1
 48384  015146  006F FF7B FFE6     	movff	postinc2,postinc1
 48385  01514C  006F FF7B FFE6     	movff	postinc2,postinc1
 48386  015152  EE22  F147         	lfsr	2,_C+72	;volatile
 48387  015156  006F FF7B FFE6     	movff	postinc2,postinc1
 48388  01515C  006F FF7B FFE6     	movff	postinc2,postinc1
 48389  015162  006F FF7B FFE6     	movff	postinc2,postinc1
 48390  015168  006F FF7B FFE6     	movff	postinc2,postinc1
 48391  01516E  EE22  F143         	lfsr	2,_C+68	;volatile
 48392  015172  006F FF7B FFE6     	movff	postinc2,postinc1
 48393  015178  006F FF7B FFE6     	movff	postinc2,postinc1
 48394  01517E  006F FF7B FFE6     	movff	postinc2,postinc1
 48395  015184  006F FF7B FFE6     	movff	postinc2,postinc1
 48396  01518A  EE22  F163         	lfsr	2,_C+100	;volatile
 48397  01518E  006F FF7B FFE6     	movff	postinc2,postinc1
 48398  015194  006F FF7B FFE6     	movff	postinc2,postinc1
 48399  01519A  006F FF7B FFE6     	movff	postinc2,postinc1
 48400  0151A0  006F FF7B FFE6     	movff	postinc2,postinc1
 48401  0151A6  EE22  F14B         	lfsr	2,_C+76	;volatile
 48402  0151AA  006F FF7B FFE6     	movff	postinc2,postinc1
 48403  0151B0  006F FF7B FFE6     	movff	postinc2,postinc1
 48404  0151B6  006F FF7B FFE6     	movff	postinc2,postinc1
 48405  0151BC  006F FF7B FFE6     	movff	postinc2,postinc1
 48406  0151C2  EE22  F14F         	lfsr	2,_C+80	;volatile
 48407  0151C6  006F FF7B FFE6     	movff	postinc2,postinc1
 48408  0151CC  006F FF7B FFE6     	movff	postinc2,postinc1
 48409  0151D2  006F FF7B FFE6     	movff	postinc2,postinc1
 48410  0151D8  006F FF7B FFE6     	movff	postinc2,postinc1
 48411  0151DE  EE22  F153         	lfsr	2,_C+84	;volatile
 48412  0151E2  006F FF7B FFE6     	movff	postinc2,postinc1
 48413  0151E8  006F FF7B FFE6     	movff	postinc2,postinc1
 48414  0151EE  006F FF7B FFE6     	movff	postinc2,postinc1
 48415  0151F4  006F FF7B FFE6     	movff	postinc2,postinc1
 48416  0151FA  0060  FA23  FFE6   	movff	_V+129,postinc1
 48417  015200  0060  FA27  FFE6   	movff	_V+130,postinc1
 48418  015206  0060  FA2B  FFE6   	movff	_V+131,postinc1
 48419  01520C  0060  FA2F  FFE6   	movff	_V+132,postinc1
 48420  015212  0E32               	movlw	50
 48421  015214  6EE6               	movwf	postinc1,c
 48422  015216  0E00               	movlw	0
 48423  015218  6EE6               	movwf	postinc1,c
 48424  01521A  0E23               	movlw	low STR_90
 48425  01521C  6EE6               	movwf	postinc1,c
 48426  01521E  0EFA               	movlw	high STR_90
 48427  015220  6EE6               	movwf	postinc1,c
 48428                           
 48429                           ;stkvar	_log_ptr @ sp[(-98)+4]
 48430  015222  0EA2               	movlw	-94
 48431  015224  006F FF8F FFE6     	movff	plusw1,postinc1
 48432  01522A  006F FF8F FFE6     	movff	plusw1,postinc1
 48433  015230  0E5E               	movlw	94
 48434  015232  6EE6               	movwf	postinc1,c
 48435  015234  ECB9  F0FB         	call	_sprintf	;wreg free
 48436                           
 48437                           ; BSR set to: 0
 48438                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 48439  015238  0E7D               	movlw	125
 48440  01523A  6EE6               	movwf	postinc1,c
 48441  01523C  0E00               	movlw	0
 48442  01523E  6EE6               	movwf	postinc1,c
 48443  015240  0E0A               	movlw	10
 48444  015242  6EE6               	movwf	postinc1,c
 48445  015244  ECFA  F00D         	call	_StartTimer	;wreg free
 48446                           
 48447                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 48448                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48449  015248  0EFE               	movlw	-2
 48450  01524A  006F FF8F FFE6     	movff	plusw1,postinc1
 48451  015250  006F FF8F FFE6     	movff	plusw1,postinc1
 48452  015256  EC3D  F004         	call	_strlen	;wreg free
 48453  01525A  0060  F0AB  FFE6   	movff	btemp,postinc1
 48454  015260  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48455  015266  EC07  F00C         	call	_send_port_data_dma	;wreg free
 48456  01526A                     l17050:
 48457                           
 48458                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 48459  01526A  0E09               	movlw	9
 48460  01526C  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 48461  01526E  D001               	goto	l2364
 48462                           
 48463                           ;bsoc.c: 102:   log_update_wait = 0;
 48464  015270  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 48465  015272                     l2364:
 48466                           
 48467                           ;bsoc.c: 104:  C.update = 0;
 48468  015272  0E00               	movlw	0
 48469  015274  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 48470                           
 48471                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 48472  01527A  92BE               	bcf	190,1,c	;volatile
 48473                           
 48474                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 48475  01527C  0EFA               	movlw	250
 48476  01527E  26E1               	addwf	fsr1l,f,c
 48477  015280  0EFF               	movlw	255
 48478  015282  22E2               	addwfc	fsr1h,f,c
 48479  015284  0012               	return		;funcret
 48480  015286                     __end_of_calc_bsoc:
 48481                           	opt callstack 0
 48482                           
 48483 ;; *************** function _send_port_data_dma *****************
 48484 ;; Defined at:
 48485 ;;		line 397 in file "eadog.c"
 48486 ;; Parameters:    Size  Location     Type
 48487 ;;  dsize           2  [STACK] unsigned short 
 48488 ;; Auto vars:     Size  Location     Type
 48489 ;;		None
 48490 ;; Return value:  Size  Location     Type
 48491 ;;                  1  [STACK] void 
 48492 ;; Registers used:
 48493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 48494 ;; Tracked objects:
 48495 ;;		On entry : 0/0
 48496 ;;		On exit  : 3F/3B
 48497 ;;		Unchanged: 0/0
 48498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48503 ;;Total ram usage:        0 bytes
 48504 ;; Hardware stack levels used:    1
 48505 ;; Hardware stack levels required when called:    3
 48506 ;; This function calls:
 48507 ;;		Nothing
 48508 ;; This function is called by:
 48509 ;;		_calc_bsoc
 48510 ;; This function uses a reentrant model
 48511 ;;
 48512                           
 48513                           	psect	text201
 48514  00180E                     __ptext201:
 48515                           	opt callstack 0
 48516  00180E                     _send_port_data_dma:
 48517                           	opt callstack 11
 48518                           
 48519                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 48520                           ;stkvar	_dsize @ sp[(0)+-2]
 48521                           
 48522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48523                           ;incstack = 0
 48524  00180E  0EFE               	movlw	-2
 48525  001810  04E3               	decf	plusw1,w,c
 48526  001812  0EFF               	movlw	-1
 48527  001814  006F FF8C  F02A    	movff	plusw1,btemp
 48528  00181A  0E02               	movlw	2
 48529  00181C  5A2A               	subwfb	btemp^0,f,c
 48530  00181E  A0D8               	btfss	status,0,c
 48531  001820  D00C               	goto	l12858
 48532                           
 48533                           ;eadog.c: 400:   dsize = 512;
 48534  001822  0E00               	movlw	0
 48535  001824  6E34               	movwf	(btemp+10)^0,c
 48536  001826  0E02               	movlw	2
 48537  001828  6E35               	movwf	(btemp+11)^0,c
 48538                           
 48539                           ;stkvar	_dsize @ sp[(0)+-2]
 48540  00182A  0EFE               	movlw	-2
 48541  00182C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48542  001832  0EFF               	movlw	-1
 48543  001834  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48544  00183A                     l12858:
 48545                           
 48546                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 48547  00183A  013B               	movlb	59	; () banked
 48548  00183C  9FDC               	bcf	220,7,b	;volatile
 48549                           
 48550                           ; BSR set to: 59
 48551                           ;eadog.c: 403:  DMA2SSZ = dsize;
 48552                           ;stkvar	_dsize @ sp[(0)+-2]
 48553  00183E  0EFE               	movlw	-2
 48554  001840  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 48555  001846  0EFF               	movlw	-1
 48556  001848  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 48557                           
 48558                           ; BSR set to: 59
 48559                           ;eadog.c: 404:  DMA2DSZ = 1;
 48560  00184E  0E00               	movlw	0
 48561  001850  6FCF               	movwf	207,b	;volatile
 48562  001852  0E01               	movlw	1
 48563  001854  6FCE               	movwf	206,b	;volatile
 48564                           
 48565                           ; BSR set to: 59
 48566                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 48567  001856  8FDC               	bsf	220,7,b	;volatile
 48568                           
 48569                           ; BSR set to: 59
 48570                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 48571  001858  8DDC               	bsf	220,6,b	;volatile
 48572                           
 48573                           ; BSR set to: 59
 48574                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 48575  00185A  52E5               	movf	postdec1,f,c
 48576  00185C  52E5               	movf	postdec1,f,c
 48577  00185E  0012               	return		;funcret
 48578  001860                     __end_of_send_port_data_dma:
 48579                           	opt callstack 0
 48580                           
 48581 ;; *************** function _port_data_dma_ptr *****************
 48582 ;; Defined at:
 48583 ;;		line 412 in file "eadog.c"
 48584 ;; Parameters:    Size  Location     Type
 48585 ;;		None
 48586 ;; Auto vars:     Size  Location     Type
 48587 ;;		None
 48588 ;; Return value:  Size  Location     Type
 48589 ;;                  2  [STACK] PTR unsigned char 
 48590 ;; Registers used:
 48591 ;;		wreg, status,2, status,0, btemp, btemp+1
 48592 ;; Tracked objects:
 48593 ;;		On entry : 3F/2
 48594 ;;		On exit  : 0/0
 48595 ;;		Unchanged: 0/0
 48596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48601 ;;Total ram usage:        0 bytes
 48602 ;; Hardware stack levels used:    1
 48603 ;; Hardware stack levels required when called:    3
 48604 ;; This function calls:
 48605 ;;		Nothing
 48606 ;; This function is called by:
 48607 ;;		_calc_bsoc
 48608 ;; This function uses a reentrant model
 48609 ;;
 48610                           
 48611                           	psect	text202
 48612  0026C0                     __ptext202:
 48613                           	opt callstack 0
 48614  0026C0                     _port_data_dma_ptr:
 48615                           	opt callstack 11
 48616                           
 48617                           ;eadog.c: 414:  return port_data;
 48618                           
 48619                           ; BSR set to: 59
 48620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48621                           ;incstack = 0
 48622  0026C0  0EFF               	movlw	low _port_data
 48623  0026C2  6E2A               	movwf	btemp^0,c
 48624  0026C4  0E06               	movlw	high _port_data
 48625  0026C6  6E2B               	movwf	(btemp+1)^0,c
 48626                           
 48627                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48628  0026C8  0012               	return		;funcret
 48629  0026CA                     __end_of_port_data_dma_ptr:
 48630                           	opt callstack 0
 48631                           
 48632 ;; *************** function ___asfladd *****************
 48633 ;; Defined at:
 48634 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 48635 ;; Parameters:    Size  Location     Type
 48636 ;;  f1p             2  [STACK] PTR 
 48637 ;;		 -> C(320), 
 48638 ;;  f2              4  [STACK] PTR 
 48639 ;; Auto vars:     Size  Location     Type
 48640 ;;		None
 48641 ;; Return value:  Size  Location     Type
 48642 ;;                  4  [STACK] PTR 
 48643 ;; Registers used:
 48644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 48645 ;; Tracked objects:
 48646 ;;		On entry : 0/0
 48647 ;;		On exit  : 0/0
 48648 ;;		Unchanged: 0/0
 48649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48654 ;;Total ram usage:        0 bytes
 48655 ;; Hardware stack levels used:    1
 48656 ;; Hardware stack levels required when called:    4
 48657 ;; This function calls:
 48658 ;;		___fladd
 48659 ;; This function is called by:
 48660 ;;		_calc_bsoc
 48661 ;; This function uses a reentrant model
 48662 ;;
 48663                           
 48664                           	psect	text203
 48665  0010B0                     __ptext203:
 48666                           	opt callstack 0
 48667  0010B0                     ___asfladd:
 48668                           	opt callstack 10
 48669                           
 48670                           ;	Return value of ___asfladd is never used
 48671                           ;stkvar	_f2 @ sp[(0)+-6]
 48672                           
 48673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48674                           ;incstack = 0
 48675  0010B0  0EFA               	movlw	-6
 48676  0010B2  006F FF8F FFE6     	movff	plusw1,postinc1
 48677  0010B8  006F FF8F FFE6     	movff	plusw1,postinc1
 48678  0010BE  006F FF8F FFE6     	movff	plusw1,postinc1
 48679  0010C4  006F FF8F FFE6     	movff	plusw1,postinc1
 48680                           
 48681                           ;stkvar	_f1p @ sp[(-4)+-2]
 48682  0010CA  0EFA               	movlw	-6
 48683  0010CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 48684  0010D2  0EFB               	movlw	-5
 48685  0010D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 48686  0010DA  006F FF7B FFE6     	movff	postinc2,postinc1
 48687  0010E0  006F FF7B FFE6     	movff	postinc2,postinc1
 48688  0010E6  006F FF7B FFE6     	movff	postinc2,postinc1
 48689  0010EC  006F FF7B FFE6     	movff	postinc2,postinc1
 48690  0010F2  EC62  F0B6         	call	___fladd	;wreg free
 48691                           
 48692                           ;stkvar	_f1p @ sp[(0)+-2]
 48693  0010F6  0EFE               	movlw	-2
 48694  0010F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 48695  0010FE  0EFF               	movlw	-1
 48696  001100  006F FF8F FFDA     	movff	plusw1,fsr2h
 48697  001106  0060  F0AB  FFDE   	movff	btemp,postinc2
 48698  00110C  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 48699  001112  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 48700  001118  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 48701                           
 48702                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 48703  00111E  0EFA               	movlw	250
 48704  001120  26E1               	addwf	fsr1l,f,c
 48705  001122  0EFF               	movlw	255
 48706  001124  22E2               	addwfc	fsr1h,f,c
 48707  001126  0012               	return		;funcret
 48708  001128                     __end_of___asfladd:
 48709                           	opt callstack 0
 48710                           
 48711 ;; *************** function _INT0_ISR *****************
 48712 ;; Defined at:
 48713 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 48714 ;; Parameters:    Size  Location     Type
 48715 ;;		None
 48716 ;; Auto vars:     Size  Location     Type
 48717 ;;		None
 48718 ;; Return value:  Size  Location     Type
 48719 ;;                  1    wreg      void 
 48720 ;; Registers used:
 48721 ;;		wreg, status,2, status,0, pclath, tosl
 48722 ;; Tracked objects:
 48723 ;;		On entry : 0/0
 48724 ;;		On exit  : 0/0
 48725 ;;		Unchanged: 0/0
 48726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48731 ;;Total ram usage:        0 bytes
 48732 ;; Hardware stack levels used:    1
 48733 ;; Hardware stack levels required when called:    2
 48734 ;; This function calls:
 48735 ;;		_INT0_CallBack
 48736 ;; This function is called by:
 48737 ;;		Interrupt level 2
 48738 ;; This function uses a non-reentrant model
 48739 ;;
 48740                           
 48741                           	psect	text204
 48742  002698                     __ptext204:
 48743                           	opt callstack 0
 48744  002698                     _INT0_ISR:
 48745                           	opt callstack 3
 48746                           
 48747                           ;incstack = 0
 48748  002698  EE14  F32C         	lfsr	1,___inthi_sp
 48749                           
 48750                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 48751  00269C  0139               	movlb	57	; () banked
 48752  00269E  91A1               	bcf	161,0,b	;volatile
 48753                           
 48754                           ; BSR set to: 57
 48755                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 48756  0026A0  ECD0  F011         	call	_INT0_CallBack	;wreg free
 48757  0026A4  0011               	retfie		f
 48758  0026A6                     __end_of_INT0_ISR:
 48759                           	opt callstack 0
 48760                           
 48761 ;; *************** function _INT0_CallBack *****************
 48762 ;; Defined at:
 48763 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 48764 ;; Parameters:    Size  Location     Type
 48765 ;;		None
 48766 ;; Auto vars:     Size  Location     Type
 48767 ;;		None
 48768 ;; Return value:  Size  Location     Type
 48769 ;;                  1  [STACK] void 
 48770 ;; Registers used:
 48771 ;;		wreg, status,2, status,0, pclath, tosl
 48772 ;; Tracked objects:
 48773 ;;		On entry : 3F/39
 48774 ;;		On exit  : 0/0
 48775 ;;		Unchanged: 0/0
 48776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48781 ;;Total ram usage:        0 bytes
 48782 ;; Hardware stack levels used:    1
 48783 ;; Hardware stack levels required when called:    1
 48784 ;; This function calls:
 48785 ;;		Absolute function
 48786 ;;		_INT0_DefaultInterruptHandler
 48787 ;; This function is called by:
 48788 ;;		_INT0_ISR
 48789 ;; This function uses a reentrant model
 48790 ;;
 48791                           
 48792                           	psect	text205
 48793  0023A0                     __ptext205:
 48794                           	opt callstack 0
 48795  0023A0                     _INT0_CallBack:
 48796                           	opt callstack 3
 48797                           
 48798                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 48799                           
 48800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48801                           ;incstack = 0
 48802  0023A0  0100               	movlb	0	; () banked
 48803  0023A2  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 48804  0023A4  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48805  0023A6  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48806  0023A8  B4D8               	btfsc	status,2,c
 48807  0023AA  0012               	return	
 48808                           
 48809                           ; BSR set to: 0
 48810                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 48811  0023AC  D801               	call	u1308_48
 48812  0023AE  0012               	return	
 48813  0023B0                     u1308_48:
 48814  0023B0  0005               	push	
 48815  0023B2  6EFA               	movwf	pclath,c
 48816  0023B4  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 48817  0023B6  6EFD               	movwf	tosl,c
 48818  0023B8  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48819  0023BA  6EFE               	movwf	tosh,c
 48820  0023BC  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48821  0023BE  6EFF               	movwf	tosu,c
 48822  0023C0  50FA               	movf	pclath,w,c
 48823  0023C2  0012               	return		;indir
 48824  0023C4                     __end_of_INT0_CallBack:
 48825                           	opt callstack 0
 48826                           
 48827 ;; *************** function _INT0_DefaultInterruptHandler *****************
 48828 ;; Defined at:
 48829 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 48830 ;; Parameters:    Size  Location     Type
 48831 ;;		None
 48832 ;; Auto vars:     Size  Location     Type
 48833 ;;		None
 48834 ;; Return value:  Size  Location     Type
 48835 ;;                  1  [STACK] void 
 48836 ;; Registers used:
 48837 ;;		None
 48838 ;; Tracked objects:
 48839 ;;		On entry : 3F/0
 48840 ;;		On exit  : 0/0
 48841 ;;		Unchanged: 0/0
 48842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48847 ;;Total ram usage:        0 bytes
 48848 ;; Hardware stack levels used:    1
 48849 ;; This function calls:
 48850 ;;		Nothing
 48851 ;; This function is called by:
 48852 ;;		_EXT_INT_Initialize
 48853 ;;		_INT0_CallBack
 48854 ;; This function uses a reentrant model
 48855 ;;
 48856                           
 48857                           	psect	text206
 48858  002746                     __ptext206:
 48859                           	opt callstack 0
 48860  002746                     _INT0_DefaultInterruptHandler:
 48861                           	opt callstack 3
 48862                           
 48863                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48864                           
 48865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48866                           ;incstack = 0
 48867  002746  0012               	return		;funcret
 48868  002748                     __end_of_INT0_DefaultInterruptHandler:
 48869                           	opt callstack 0
 48870                           
 48871 ;; *************** function _Default_ISR *****************
 48872 ;; Defined at:
 48873 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 48874 ;; Parameters:    Size  Location     Type
 48875 ;;		None
 48876 ;; Auto vars:     Size  Location     Type
 48877 ;;		None
 48878 ;; Return value:  Size  Location     Type
 48879 ;;                  1    wreg      void 
 48880 ;; Registers used:
 48881 ;;		None
 48882 ;; Tracked objects:
 48883 ;;		On entry : 0/0
 48884 ;;		On exit  : 0/0
 48885 ;;		Unchanged: 0/0
 48886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48891 ;;Total ram usage:        0 bytes
 48892 ;; Hardware stack levels used:    1
 48893 ;; This function calls:
 48894 ;;		Nothing
 48895 ;; This function is called by:
 48896 ;;		Interrupt level 2
 48897 ;; This function uses a non-reentrant model
 48898 ;;
 48899                           
 48900                           	psect	text207
 48901  00273C                     __ptext207:
 48902                           	opt callstack 0
 48903  00273C                     _Default_ISR:
 48904                           	opt callstack 5
 48905                           
 48906                           ;incstack = 0
 48907  00273C  EE14  F32C         	lfsr	1,___inthi_sp
 48908  002740  0011               	retfie		f
 48909  002742                     __end_of_Default_ISR:
 48910                           	opt callstack 0
 48911                           
 48912 ;; *************** function _ADCC_ISR *****************
 48913 ;; Defined at:
 48914 ;;		line 314 in file "mcc_generated_files/adcc.c"
 48915 ;; Parameters:    Size  Location     Type
 48916 ;;		None
 48917 ;; Auto vars:     Size  Location     Type
 48918 ;;		None
 48919 ;; Return value:  Size  Location     Type
 48920 ;;                  1    wreg      void 
 48921 ;; Registers used:
 48922 ;;		wreg, status,2, status,0, pclath, tosl
 48923 ;; Tracked objects:
 48924 ;;		On entry : 0/0
 48925 ;;		On exit  : 0/0
 48926 ;;		Unchanged: 0/0
 48927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48932 ;;Total ram usage:        0 bytes
 48933 ;; Hardware stack levels used:    1
 48934 ;; Hardware stack levels required when called:    1
 48935 ;; This function calls:
 48936 ;;		Absolute function
 48937 ;;		_ADCC_DefaultInterruptHandler
 48938 ;;		_adc_int_handler
 48939 ;; This function is called by:
 48940 ;;		Interrupt level 2
 48941 ;; This function uses a non-reentrant model
 48942 ;;
 48943                           
 48944                           	psect	text208
 48945  002034                     __ptext208:
 48946                           	opt callstack 0
 48947  002034                     _ADCC_ISR:
 48948                           	opt callstack 4
 48949                           
 48950                           ;incstack = 0
 48951  002034  EE14  F32C         	lfsr	1,___inthi_sp
 48952                           
 48953                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 48954  002038  0139               	movlb	57	; () banked
 48955  00203A  95A1               	bcf	161,2,b	;volatile
 48956                           
 48957                           ; BSR set to: 57
 48958                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 48959  00203C  0100               	movlb	0	; () banked
 48960  00203E  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 48961  002040  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 48962  002042  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 48963  002044  B4D8               	btfsc	status,2,c
 48964  002046  0011               	retfie		f
 48965                           
 48966                           ; BSR set to: 0
 48967                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 48968  002048  D801               	call	i2u1373_48
 48969  00204A  0011               	retfie		f
 48970  00204C                     i2u1373_48:
 48971  00204C  0005               	push	
 48972  00204E  6EFA               	movwf	pclath,c
 48973  002050  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 48974  002052  6EFD               	movwf	tosl,c
 48975  002054  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 48976  002056  6EFE               	movwf	tosh,c
 48977  002058  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 48978  00205A  6EFF               	movwf	tosu,c
 48979  00205C  50FA               	movf	pclath,w,c
 48980  00205E  0012               	return		;indir
 48981  002060                     __end_of_ADCC_ISR:
 48982                           	opt callstack 0
 48983                           
 48984 ;; *************** function _adc_int_t_handler *****************
 48985 ;; Defined at:
 48986 ;;		line 183 in file "daq.c"
 48987 ;; Parameters:    Size  Location     Type
 48988 ;;		None
 48989 ;; Auto vars:     Size  Location     Type
 48990 ;;		None
 48991 ;; Return value:  Size  Location     Type
 48992 ;;                  1  [STACK] void 
 48993 ;; Registers used:
 48994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 48995 ;; Tracked objects:
 48996 ;;		On entry : 3F/0
 48997 ;;		On exit  : 0/0
 48998 ;;		Unchanged: 0/0
 48999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49004 ;;Total ram usage:        0 bytes
 49005 ;; Hardware stack levels used:    1
 49006 ;; Hardware stack levels required when called:    1
 49007 ;; This function calls:
 49008 ;;		_ADCC_DischargeSampleCapacitor
 49009 ;;		_ADCC_StartConversion
 49010 ;; This function is called by:
 49011 ;;		_start_adc_scan
 49012 ;;		_ADCC_ThresholdISR
 49013 ;; This function uses a reentrant model
 49014 ;;
 49015                           
 49016                           	psect	text209
 49017  000EB8                     __ptext209:
 49018                           	opt callstack 0
 49019  000EB8                     _adc_int_t_handler:
 49020                           	opt callstack 3
 49021                           
 49022                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 49023                           
 49024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49025                           ;incstack = 0
 49026  000EB8  013E               	movlb	62	; () banked
 49027  000EBA  51E6               	movf	230,w,b	;volatile
 49028  000EBC  006F FB9C  F02A    	movff	16103,btemp	;volatile
 49029  000EC2  6A2B               	clrf	(btemp+1)^0,c
 49030  000EC4  0060  F0A8  F02B   	movff	btemp,btemp+1
 49031  000ECA  6A2A               	clrf	btemp^0,c
 49032  000ECC  262A               	addwf	btemp^0,f,c
 49033  000ECE  0E00               	movlw	0
 49034  000ED0  222B               	addwfc	(btemp+1)^0,f,c
 49035  000ED2  0101               	movlb	1	; () banked
 49036  000ED4  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49037  000ED6  0D02               	mullw	2
 49038  000ED8  0E00               	movlw	low _R
 49039  000EDA  24F3               	addwf	243,w,c
 49040  000EDC  6ED9               	movwf	fsr2l,c
 49041  000EDE  0E01               	movlw	high _R
 49042  000EE0  20F4               	addwfc	prodh,w,c
 49043  000EE2  6EDA               	movwf	fsr2h,c
 49044  000EE4  0060  F0AB  FFDE   	movff	btemp,postinc2
 49045  000EEA  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 49046  000EF0                     l14558:
 49047                           
 49048                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 49049  000EF0  0101               	movlb	1	; () banked
 49050  000EF2  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 49051  000EF4  0E0D               	movlw	13
 49052  000EF6  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 49053  000EF8  D003               	goto	l14564
 49054                           
 49055                           ; BSR set to: 1
 49056                           ;daq.c: 191:    R.done = 1;
 49057  000EFA  0E01               	movlw	1
 49058  000EFC  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 49059  000EFE  0012               	return	
 49060  000F00                     l14564:
 49061                           
 49062                           ; BSR set to: 1
 49063                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 49064  000F00  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 49065  000F06  EE20  F133         	lfsr	2,_R+51	;volatile
 49066  000F0A  006F FF78  F032    	movff	postinc2,btemp+8
 49067  000F10  006F FF74  F033    	movff	postdec2,btemp+9
 49068  000F16  2A35               	incf	(btemp+11)^0,f,c
 49069  000F18  D003               	goto	u1370_44
 49070  000F1A                     u1370_45:
 49071  000F1A  90D8               	bcf	status,0,c
 49072  000F1C  3233               	rrcf	(btemp+9)^0,f,c
 49073  000F1E  3232               	rrcf	(btemp+8)^0,f,c
 49074  000F20                     u1370_44:
 49075  000F20  2E35               	decfsz	(btemp+11)^0,f,c
 49076  000F22  D7FB               	goto	u1370_45
 49077  000F24  A032               	btfss	(btemp+8)^0,0,c
 49078  000F26  D7E4               	goto	l14558
 49079                           
 49080                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 49081  000F28  EC7B  F013         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 49082                           
 49083                           ; BSR set to: 62
 49084                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 49085  000F2C  0101               	movlb	1	; () banked
 49086  000F2E  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49087  000F30  0B0F               	andlw	15
 49088  000F32  6EE6               	movwf	postinc1,c
 49089  000F34  EC06  F013         	call	_ADCC_StartConversion	;wreg free
 49090                           
 49091                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49092  000F38  0012               	return		;funcret
 49093  000F3A                     __end_of_adc_int_t_handler:
 49094                           	opt callstack 0
 49095                           
 49096 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 49097 ;; Defined at:
 49098 ;;		line 339 in file "mcc_generated_files/adcc.c"
 49099 ;; Parameters:    Size  Location     Type
 49100 ;;		None
 49101 ;; Auto vars:     Size  Location     Type
 49102 ;;		None
 49103 ;; Return value:  Size  Location     Type
 49104 ;;                  1  [STACK] void 
 49105 ;; Registers used:
 49106 ;;		None
 49107 ;; Tracked objects:
 49108 ;;		On entry : 3F/0
 49109 ;;		On exit  : 0/0
 49110 ;;		Unchanged: 0/0
 49111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49116 ;;Total ram usage:        0 bytes
 49117 ;; Hardware stack levels used:    1
 49118 ;; This function calls:
 49119 ;;		Nothing
 49120 ;; This function is called by:
 49121 ;;		_ADCC_Initialize
 49122 ;;		_ADCC_ISR
 49123 ;;		_ADCC_ThresholdISR
 49124 ;; This function uses a reentrant model
 49125 ;;
 49126                           
 49127                           	psect	text210
 49128  002748                     __ptext210:
 49129                           	opt callstack 0
 49130  002748                     _ADCC_DefaultInterruptHandler:
 49131                           	opt callstack 4
 49132                           
 49133                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49134                           
 49135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49136                           ;incstack = 0
 49137  002748  0012               	return		;funcret
 49138  00274A                     __end_of_ADCC_DefaultInterruptHandler:
 49139                           	opt callstack 0
 49140                           
 49141 ;; *************** function _adc_int_handler *****************
 49142 ;; Defined at:
 49143 ;;		line 173 in file "daq.c"
 49144 ;; Parameters:    Size  Location     Type
 49145 ;;		None
 49146 ;; Auto vars:     Size  Location     Type
 49147 ;;		None
 49148 ;; Return value:  Size  Location     Type
 49149 ;;                  1  [STACK] void 
 49150 ;; Registers used:
 49151 ;;		None
 49152 ;; Tracked objects:
 49153 ;;		On entry : 3F/0
 49154 ;;		On exit  : 0/0
 49155 ;;		Unchanged: 0/0
 49156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49161 ;;Total ram usage:        0 bytes
 49162 ;; Hardware stack levels used:    1
 49163 ;; This function calls:
 49164 ;;		Nothing
 49165 ;; This function is called by:
 49166 ;;		_start_adc_scan
 49167 ;;		_ADCC_ISR
 49168 ;; This function uses a reentrant model
 49169 ;;
 49170                           
 49171                           	psect	text211
 49172  00274A                     __ptext211:
 49173                           	opt callstack 0
 49174  00274A                     _adc_int_handler:
 49175                           	opt callstack 4
 49176                           
 49177                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 49178                           
 49179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49180                           ;incstack = 0
 49181  00274A  0012               	return		;funcret
 49182  00274C                     __end_of_adc_int_handler:
 49183                           	opt callstack 0
 49184                           
 49185 ;; *************** function _ADCC_ThresholdISR *****************
 49186 ;; Defined at:
 49187 ;;		line 327 in file "mcc_generated_files/adcc.c"
 49188 ;; Parameters:    Size  Location     Type
 49189 ;;		None
 49190 ;; Auto vars:     Size  Location     Type
 49191 ;;		None
 49192 ;; Return value:  Size  Location     Type
 49193 ;;                  1    wreg      void 
 49194 ;; Registers used:
 49195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 49196 ;; Tracked objects:
 49197 ;;		On entry : 0/0
 49198 ;;		On exit  : 0/0
 49199 ;;		Unchanged: 0/0
 49200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49203 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49204 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49205 ;;Total ram usage:        5 bytes
 49206 ;; Hardware stack levels used:    1
 49207 ;; Hardware stack levels required when called:    2
 49208 ;; This function calls:
 49209 ;;		Absolute function
 49210 ;;		_ADCC_DefaultInterruptHandler
 49211 ;;		_adc_int_t_handler
 49212 ;; This function is called by:
 49213 ;;		Interrupt level 2
 49214 ;; This function uses a non-reentrant model
 49215 ;;
 49216                           
 49217                           	psect	text212
 49218  001270                     __ptext212:
 49219                           	opt callstack 0
 49220  001270                     _ADCC_ThresholdISR:
 49221                           	opt callstack 3
 49222                           
 49223                           ;incstack = 0
 49224  001270  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 49225  001276  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 49226  00127C  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 49227  001282  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 49228  001288  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 49229  00128E  EE14  F32C         	lfsr	1,___inthi_sp
 49230                           
 49231                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 49232  001292  0139               	movlb	57	; () banked
 49233  001294  97A1               	bcf	161,3,b	;volatile
 49234                           
 49235                           ; BSR set to: 57
 49236                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 49237  001296  0100               	movlb	0	; () banked
 49238  001298  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49239  00129A  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49240  00129C  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49241  00129E  B4D8               	btfsc	status,2,c
 49242  0012A0  D00C               	goto	i2u1375_49
 49243                           
 49244                           ; BSR set to: 0
 49245                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 49246  0012A2  D801               	call	i2u1375_48
 49247  0012A4  D00A               	goto	i2u1375_49
 49248  0012A6                     i2u1375_48:
 49249  0012A6  0005               	push	
 49250  0012A8  6EFA               	movwf	pclath,c
 49251  0012AA  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49252  0012AC  6EFD               	movwf	tosl,c
 49253  0012AE  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49254  0012B0  6EFE               	movwf	tosh,c
 49255  0012B2  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49256  0012B4  6EFF               	movwf	tosu,c
 49257  0012B6  50FA               	movf	pclath,w,c
 49258  0012B8  0012               	return		;indir
 49259  0012BA                     i2u1375_49:
 49260  0012BA  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 49261  0012C0  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 49262  0012C6  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 49263  0012CC  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 49264  0012D2  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 49265  0012D8  0011               	retfie		f
 49266  0012DA                     __end_of_ADCC_ThresholdISR:
 49267                           	opt callstack 0
 49268                           
 49269 ;; *************** function _UART1_rx_vect_isr *****************
 49270 ;; Defined at:
 49271 ;;		line 181 in file "mcc_generated_files/uart1.c"
 49272 ;; Parameters:    Size  Location     Type
 49273 ;;		None
 49274 ;; Auto vars:     Size  Location     Type
 49275 ;;		None
 49276 ;; Return value:  Size  Location     Type
 49277 ;;                  1    wreg      void 
 49278 ;; Registers used:
 49279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49280 ;; Tracked objects:
 49281 ;;		On entry : 0/0
 49282 ;;		On exit  : 0/0
 49283 ;;		Unchanged: 0/0
 49284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49289 ;;Total ram usage:        0 bytes
 49290 ;; Hardware stack levels used:    1
 49291 ;; Hardware stack levels required when called:    1
 49292 ;; This function calls:
 49293 ;;		Absolute function
 49294 ;;		_UART1_Receive_ISR
 49295 ;; This function is called by:
 49296 ;;		Interrupt level 2
 49297 ;; This function uses a non-reentrant model
 49298 ;;
 49299                           
 49300                           	psect	text213
 49301  002298                     __ptext213:
 49302                           	opt callstack 0
 49303  002298                     _UART1_rx_vect_isr:
 49304                           	opt callstack 4
 49305                           
 49306                           ;incstack = 0
 49307  002298  EE14  F32C         	lfsr	1,___inthi_sp
 49308                           
 49309                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 49310  00229C  0100               	movlb	0	; () banked
 49311  00229E  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49312  0022A0  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49313  0022A2  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49314  0022A4  B4D8               	btfsc	status,2,c
 49315  0022A6  0011               	retfie		f
 49316                           
 49317                           ; BSR set to: 0
 49318                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 49319  0022A8  D801               	call	i2u1377_48
 49320  0022AA  0011               	retfie		f
 49321  0022AC                     i2u1377_48:
 49322  0022AC  0005               	push	
 49323  0022AE  6EFA               	movwf	pclath,c
 49324  0022B0  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49325  0022B2  6EFD               	movwf	tosl,c
 49326  0022B4  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49327  0022B6  6EFE               	movwf	tosh,c
 49328  0022B8  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49329  0022BA  6EFF               	movwf	tosu,c
 49330  0022BC  50FA               	movf	pclath,w,c
 49331  0022BE  0012               	return		;indir
 49332  0022C0                     __end_of_UART1_rx_vect_isr:
 49333                           	opt callstack 0
 49334                           
 49335 ;; *************** function _UART1_Receive_ISR *****************
 49336 ;; Defined at:
 49337 ;;		line 192 in file "mcc_generated_files/uart1.c"
 49338 ;; Parameters:    Size  Location     Type
 49339 ;;		None
 49340 ;; Auto vars:     Size  Location     Type
 49341 ;;		None
 49342 ;; Return value:  Size  Location     Type
 49343 ;;                  1  [STACK] void 
 49344 ;; Registers used:
 49345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49346 ;; Tracked objects:
 49347 ;;		On entry : 3F/0
 49348 ;;		On exit  : 3F/0
 49349 ;;		Unchanged: 0/0
 49350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49355 ;;Total ram usage:        0 bytes
 49356 ;; Hardware stack levels used:    1
 49357 ;; This function calls:
 49358 ;;		Nothing
 49359 ;; This function is called by:
 49360 ;;		_UART1_Initialize
 49361 ;;		_UART1_rx_vect_isr
 49362 ;; This function uses a reentrant model
 49363 ;;
 49364                           
 49365                           	psect	text214
 49366  00244E                     __ptext214:
 49367                           	opt callstack 0
 49368  00244E                     _UART1_Receive_ISR:
 49369                           	opt callstack 4
 49370                           
 49371                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 49372                           
 49373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49374                           ;incstack = 0
 49375  00244E  0ED6               	movlw	low _uart1RxBuffer
 49376  002450  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 49377  002452  6ED9               	movwf	fsr2l,c
 49378  002454  6ADA               	clrf	fsr2h,c
 49379  002456  0E02               	movlw	high _uart1RxBuffer
 49380  002458  22DA               	addwfc	fsr2h,f,c
 49381  00245A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 49382  002460  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 49383                           
 49384                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 49385  002462  0E07               	movlw	7
 49386  002464  6457               	cpfsgt	_uart1RxHead^0,c
 49387  002466  D001               	goto	l13882
 49388                           
 49389                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 49390  002468  6A57               	clrf	_uart1RxHead^0,c	;volatile
 49391  00246A                     l13882:
 49392                           
 49393                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 49394  00246A  0100               	movlb	0	; () banked
 49395  00246C  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 49396                           
 49397                           ; BSR set to: 0
 49398                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49399  00246E  0012               	return		;funcret
 49400  002470                     __end_of_UART1_Receive_ISR:
 49401                           	opt callstack 0
 49402                           
 49403 ;; *************** function _UART2_tx_vect_isr *****************
 49404 ;; Defined at:
 49405 ;;		line 195 in file "mcc_generated_files/uart2.c"
 49406 ;; Parameters:    Size  Location     Type
 49407 ;;		None
 49408 ;; Auto vars:     Size  Location     Type
 49409 ;;		None
 49410 ;; Return value:  Size  Location     Type
 49411 ;;                  1    wreg      void 
 49412 ;; Registers used:
 49413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49414 ;; Tracked objects:
 49415 ;;		On entry : 0/0
 49416 ;;		On exit  : 0/0
 49417 ;;		Unchanged: 0/0
 49418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49423 ;;Total ram usage:        0 bytes
 49424 ;; Hardware stack levels used:    1
 49425 ;; Hardware stack levels required when called:    1
 49426 ;; This function calls:
 49427 ;;		Absolute function
 49428 ;;		_UART2_Transmit_ISR
 49429 ;; This function is called by:
 49430 ;;		Interrupt level 2
 49431 ;; This function uses a non-reentrant model
 49432 ;;
 49433                           
 49434                           	psect	text215
 49435  0022C0                     __ptext215:
 49436                           	opt callstack 0
 49437  0022C0                     _UART2_tx_vect_isr:
 49438                           	opt callstack 4
 49439                           
 49440                           ; BSR set to: 0
 49441                           ;incstack = 0
 49442  0022C0  EE14  F32C         	lfsr	1,___inthi_sp
 49443                           
 49444                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 49445  0022C4  0100               	movlb	0	; () banked
 49446  0022C6  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49447  0022C8  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49448  0022CA  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49449  0022CC  B4D8               	btfsc	status,2,c
 49450  0022CE  0011               	retfie		f
 49451                           
 49452                           ; BSR set to: 0
 49453                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 49454  0022D0  D801               	call	i2u1379_48
 49455  0022D2  0011               	retfie		f
 49456  0022D4                     i2u1379_48:
 49457  0022D4  0005               	push	
 49458  0022D6  6EFA               	movwf	pclath,c
 49459  0022D8  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49460  0022DA  6EFD               	movwf	tosl,c
 49461  0022DC  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49462  0022DE  6EFE               	movwf	tosh,c
 49463  0022E0  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49464  0022E2  6EFF               	movwf	tosu,c
 49465  0022E4  50FA               	movf	pclath,w,c
 49466  0022E6  0012               	return		;indir
 49467  0022E8                     __end_of_UART2_tx_vect_isr:
 49468                           	opt callstack 0
 49469                           
 49470 ;; *************** function _UART2_Transmit_ISR *****************
 49471 ;; Defined at:
 49472 ;;		line 213 in file "mcc_generated_files/uart2.c"
 49473 ;; Parameters:    Size  Location     Type
 49474 ;;		None
 49475 ;; Auto vars:     Size  Location     Type
 49476 ;;		None
 49477 ;; Return value:  Size  Location     Type
 49478 ;;                  1  [STACK] void 
 49479 ;; Registers used:
 49480 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49481 ;; Tracked objects:
 49482 ;;		On entry : 3F/0
 49483 ;;		On exit  : 3B/39
 49484 ;;		Unchanged: 0/0
 49485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49490 ;;Total ram usage:        0 bytes
 49491 ;; Hardware stack levels used:    1
 49492 ;; This function calls:
 49493 ;;		Nothing
 49494 ;; This function is called by:
 49495 ;;		_UART2_Initialize
 49496 ;;		_UART2_tx_vect_isr
 49497 ;; This function uses a reentrant model
 49498 ;;
 49499                           
 49500                           	psect	text216
 49501  002060                     __ptext216:
 49502                           	opt callstack 0
 49503  002060                     _UART2_Transmit_ISR:
 49504                           	opt callstack 4
 49505                           
 49506                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 49507                           
 49508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49509                           ;incstack = 0
 49510  002060  0E40               	movlw	64
 49511  002062  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 49512  002064  D010               	goto	l675
 49513                           
 49514                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 49515  002066  0E00               	movlw	low _uart2TxBuffer
 49516  002068  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 49517  00206A  6ED9               	movwf	fsr2l,c
 49518  00206C  6ADA               	clrf	fsr2h,c
 49519  00206E  0E04               	movlw	high _uart2TxBuffer
 49520  002070  22DA               	addwfc	fsr2h,f,c
 49521  002072  50DF               	movf	indf2,w,c
 49522  002074  013D               	movlb	61	; () banked
 49523  002076  6FD2               	movwf	210,b	;volatile
 49524                           
 49525                           ; BSR set to: 61
 49526  002078  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 49527                           
 49528                           ; BSR set to: 61
 49529                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 49530  00207A  0E3F               	movlw	63
 49531  00207C  6456               	cpfsgt	_uart2TxTail^0,c
 49532  00207E  D001               	goto	l13894
 49533                           
 49534                           ; BSR set to: 61
 49535                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 49536  002080  6A56               	clrf	_uart2TxTail^0,c	;volatile
 49537  002082                     l13894:
 49538                           
 49539                           ; BSR set to: 61
 49540                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 49541  002082  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 49542                           
 49543                           ;mcc_generated_files/uart2.c: 224:     }
 49544  002084  0012               	return	
 49545  002086                     l675:
 49546                           
 49547                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 49548  002086  0139               	movlb	57	; () banked
 49549  002088  9796               	bcf	150,3,b	;volatile
 49550                           
 49551                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 49552  00208A  0012               	return		;funcret
 49553  00208C                     __end_of_UART2_Transmit_ISR:
 49554                           	opt callstack 0
 49555                           
 49556 ;; *************** function _UART2_rx_vect_isr *****************
 49557 ;; Defined at:
 49558 ;;		line 203 in file "mcc_generated_files/uart2.c"
 49559 ;; Parameters:    Size  Location     Type
 49560 ;;		None
 49561 ;; Auto vars:     Size  Location     Type
 49562 ;;		None
 49563 ;; Return value:  Size  Location     Type
 49564 ;;                  1    wreg      void 
 49565 ;; Registers used:
 49566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49567 ;; Tracked objects:
 49568 ;;		On entry : 0/0
 49569 ;;		On exit  : 0/0
 49570 ;;		Unchanged: 0/0
 49571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49576 ;;Total ram usage:        0 bytes
 49577 ;; Hardware stack levels used:    1
 49578 ;; Hardware stack levels required when called:    1
 49579 ;; This function calls:
 49580 ;;		Absolute function
 49581 ;;		_UART2_Receive_ISR
 49582 ;; This function is called by:
 49583 ;;		Interrupt level 2
 49584 ;; This function uses a non-reentrant model
 49585 ;;
 49586                           
 49587                           	psect	text217
 49588  0022E8                     __ptext217:
 49589                           	opt callstack 0
 49590  0022E8                     _UART2_rx_vect_isr:
 49591                           	opt callstack 4
 49592                           
 49593                           ;incstack = 0
 49594  0022E8  EE14  F32C         	lfsr	1,___inthi_sp
 49595                           
 49596                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 49597  0022EC  0100               	movlb	0	; () banked
 49598  0022EE  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49599  0022F0  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49600  0022F2  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49601  0022F4  B4D8               	btfsc	status,2,c
 49602  0022F6  0011               	retfie		f
 49603                           
 49604                           ; BSR set to: 0
 49605                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 49606  0022F8  D801               	call	i2u1381_48
 49607  0022FA  0011               	retfie		f
 49608  0022FC                     i2u1381_48:
 49609  0022FC  0005               	push	
 49610  0022FE  6EFA               	movwf	pclath,c
 49611  002300  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49612  002302  6EFD               	movwf	tosl,c
 49613  002304  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49614  002306  6EFE               	movwf	tosh,c
 49615  002308  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49616  00230A  6EFF               	movwf	tosu,c
 49617  00230C  50FA               	movf	pclath,w,c
 49618  00230E  0012               	return		;indir
 49619  002310                     __end_of_UART2_rx_vect_isr:
 49620                           	opt callstack 0
 49621                           
 49622 ;; *************** function _UART2_Receive_ISR *****************
 49623 ;; Defined at:
 49624 ;;		line 233 in file "mcc_generated_files/uart2.c"
 49625 ;; Parameters:    Size  Location     Type
 49626 ;;		None
 49627 ;; Auto vars:     Size  Location     Type
 49628 ;;		None
 49629 ;; Return value:  Size  Location     Type
 49630 ;;                  1  [STACK] void 
 49631 ;; Registers used:
 49632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49633 ;; Tracked objects:
 49634 ;;		On entry : 3F/0
 49635 ;;		On exit  : 3F/0
 49636 ;;		Unchanged: 0/0
 49637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49642 ;;Total ram usage:        0 bytes
 49643 ;; Hardware stack levels used:    1
 49644 ;; This function calls:
 49645 ;;		Nothing
 49646 ;; This function is called by:
 49647 ;;		_UART2_Initialize
 49648 ;;		_UART2_rx_vect_isr
 49649 ;; This function uses a reentrant model
 49650 ;;
 49651                           
 49652                           	psect	text218
 49653  002490                     __ptext218:
 49654                           	opt callstack 0
 49655  002490                     _UART2_Receive_ISR:
 49656                           	opt callstack 4
 49657                           
 49658                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 49659                           
 49660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49661                           ;incstack = 0
 49662  002490  0E00               	movlw	low _uart2RxBuffer
 49663  002492  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 49664  002494  6ED9               	movwf	fsr2l,c
 49665  002496  6ADA               	clrf	fsr2h,c
 49666  002498  0E06               	movlw	high _uart2RxBuffer
 49667  00249A  22DA               	addwfc	fsr2h,f,c
 49668  00249C  006F F743 FFDF     	movff	15824,indf2	;volatile
 49669  0024A2  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 49670                           
 49671                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 49672  0024A4  2854               	incf	_uart2RxHead^0,w,c
 49673  0024A6  B4D8               	btfsc	status,2,c
 49674                           
 49675                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 49676  0024A8  6A54               	clrf	_uart2RxHead^0,c	;volatile
 49677                           
 49678                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 49679  0024AA  0100               	movlb	0	; () banked
 49680  0024AC  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 49681                           
 49682                           ; BSR set to: 0
 49683                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49684  0024AE  0012               	return		;funcret
 49685  0024B0                     __end_of_UART2_Receive_ISR:
 49686                           	opt callstack 0
 49687                           
 49688 ;; *************** function _TMR6_ISR *****************
 49689 ;; Defined at:
 49690 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 49691 ;; Parameters:    Size  Location     Type
 49692 ;;		None
 49693 ;; Auto vars:     Size  Location     Type
 49694 ;;		None
 49695 ;; Return value:  Size  Location     Type
 49696 ;;                  1    wreg      void 
 49697 ;; Registers used:
 49698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49699 ;; Tracked objects:
 49700 ;;		On entry : 0/0
 49701 ;;		On exit  : 0/0
 49702 ;;		Unchanged: 0/0
 49703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49708 ;;Total ram usage:        1 bytes
 49709 ;; Hardware stack levels used:    1
 49710 ;; Hardware stack levels required when called:    2
 49711 ;; This function calls:
 49712 ;;		_TMR6_CallBack
 49713 ;; This function is called by:
 49714 ;;		Interrupt level 2
 49715 ;; This function uses a non-reentrant model
 49716 ;;
 49717                           
 49718                           	psect	text219
 49719  002544                     __ptext219:
 49720                           	opt callstack 0
 49721  002544                     _TMR6_ISR:
 49722                           	opt callstack 3
 49723                           
 49724                           ; BSR set to: 0
 49725                           ;incstack = 0
 49726  002544  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 49727  00254A  EE14  F32C         	lfsr	1,___inthi_sp
 49728                           
 49729                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 49730  00254E  0139               	movlb	57	; () banked
 49731  002550  91A9               	bcf	169,0,b	;volatile
 49732                           
 49733                           ; BSR set to: 57
 49734                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 49735  002552  ECE2  F011         	call	_TMR6_CallBack	;wreg free
 49736  002556  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 49737  00255C  0011               	retfie		f
 49738  00255E                     __end_of_TMR6_ISR:
 49739                           	opt callstack 0
 49740                           
 49741 ;; *************** function _TMR6_CallBack *****************
 49742 ;; Defined at:
 49743 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 49744 ;; Parameters:    Size  Location     Type
 49745 ;;		None
 49746 ;; Auto vars:     Size  Location     Type
 49747 ;;		None
 49748 ;; Return value:  Size  Location     Type
 49749 ;;                  1  [STACK] void 
 49750 ;; Registers used:
 49751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49752 ;; Tracked objects:
 49753 ;;		On entry : 3F/39
 49754 ;;		On exit  : 0/0
 49755 ;;		Unchanged: 0/0
 49756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49761 ;;Total ram usage:        0 bytes
 49762 ;; Hardware stack levels used:    1
 49763 ;; Hardware stack levels required when called:    1
 49764 ;; This function calls:
 49765 ;;		Absolute function
 49766 ;;		_TMR6_DefaultInterruptHandler
 49767 ;; This function is called by:
 49768 ;;		_TMR6_ISR
 49769 ;; This function uses a reentrant model
 49770 ;;
 49771                           
 49772                           	psect	text220
 49773  0023C4                     __ptext220:
 49774                           	opt callstack 0
 49775  0023C4                     _TMR6_CallBack:
 49776                           	opt callstack 3
 49777                           
 49778                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 49779                           
 49780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49781                           ;incstack = 0
 49782  0023C4  0100               	movlb	0	; () banked
 49783  0023C6  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49784  0023C8  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49785  0023CA  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49786  0023CC  B4D8               	btfsc	status,2,c
 49787  0023CE  0012               	return	
 49788                           
 49789                           ; BSR set to: 0
 49790                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 49791  0023D0  D801               	call	u1316_48
 49792  0023D2  0012               	return	
 49793  0023D4                     u1316_48:
 49794  0023D4  0005               	push	
 49795  0023D6  6EFA               	movwf	pclath,c
 49796  0023D8  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49797  0023DA  6EFD               	movwf	tosl,c
 49798  0023DC  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49799  0023DE  6EFE               	movwf	tosh,c
 49800  0023E0  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49801  0023E2  6EFF               	movwf	tosu,c
 49802  0023E4  50FA               	movf	pclath,w,c
 49803  0023E6  0012               	return		;indir
 49804  0023E8                     __end_of_TMR6_CallBack:
 49805                           	opt callstack 0
 49806                           
 49807 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 49808 ;; Defined at:
 49809 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 49810 ;; Parameters:    Size  Location     Type
 49811 ;;		None
 49812 ;; Auto vars:     Size  Location     Type
 49813 ;;  i               1  [STACK] unsigned char 
 49814 ;; Return value:  Size  Location     Type
 49815 ;;                  1  [STACK] void 
 49816 ;; Registers used:
 49817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 49818 ;; Tracked objects:
 49819 ;;		On entry : 3F/0
 49820 ;;		On exit  : 0/0
 49821 ;;		Unchanged: 0/0
 49822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49827 ;;Total ram usage:        0 bytes
 49828 ;; Hardware stack levels used:    1
 49829 ;; This function calls:
 49830 ;;		Nothing
 49831 ;; This function is called by:
 49832 ;;		_TMR6_Initialize
 49833 ;;		_TMR6_CallBack
 49834 ;; This function uses a reentrant model
 49835 ;;
 49836                           
 49837                           	psect	text221
 49838  0018AE                     __ptext221:
 49839                           	opt callstack 0
 49840  0018AE                     _TMR6_DefaultInterruptHandler:
 49841                           	opt callstack 0
 49842                           
 49843                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49844  0018AE  52E6               	movf	postinc1,f,c
 49845                           
 49846                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 49847                           ;stkvar	_i @ sp[(-1)+0]
 49848                           
 49849                           ;incstack = 0
 49850  0018B0  0EFF               	movlw	-1
 49851  0018B2  6AE3               	clrf	plusw1,c
 49852  0018B4                     l13294:
 49853                           
 49854                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 49855                           ;stkvar	_i @ sp[(-1)+0]
 49856  0018B4  0EFF               	movlw	-1
 49857  0018B6  50E3               	movf	plusw1,w,c
 49858  0018B8  0D02               	mullw	2
 49859  0018BA  0EBC               	movlw	low _tickCount
 49860  0018BC  24F3               	addwf	243,w,c
 49861  0018BE  6ED9               	movwf	fsr2l,c
 49862  0018C0  0E02               	movlw	high _tickCount
 49863  0018C2  20F4               	addwfc	prodh,w,c
 49864  0018C4  6EDA               	movwf	fsr2h,c
 49865  0018C6  50DE               	movf	postinc2,w,c
 49866  0018C8  10DE               	iorwf	postinc2,w,c
 49867  0018CA  B4D8               	btfsc	status,2,c
 49868  0018CC  D00C               	goto	l13298
 49869                           
 49870                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 49871                           ;stkvar	_i @ sp[(-1)+0]
 49872  0018CE  0EFF               	movlw	-1
 49873  0018D0  50E3               	movf	plusw1,w,c
 49874  0018D2  0D02               	mullw	2
 49875  0018D4  0EBC               	movlw	low _tickCount
 49876  0018D6  24F3               	addwf	243,w,c
 49877  0018D8  6ED9               	movwf	fsr2l,c
 49878  0018DA  0E02               	movlw	high _tickCount
 49879  0018DC  20F4               	addwfc	prodh,w,c
 49880  0018DE  6EDA               	movwf	fsr2h,c
 49881  0018E0  06DE               	decf	postinc2,f,c
 49882  0018E2  0E00               	movlw	0
 49883  0018E4  5ADD               	subwfb	postdec2,f,c
 49884  0018E6                     l13298:
 49885                           
 49886                           ;mcc_generated_files/tmr6.c: 207:  }
 49887                           ;stkvar	_i @ sp[(-1)+0]
 49888  0018E6  0EFF               	movlw	-1
 49889  0018E8  2AE3               	incf	plusw1,f,c
 49890                           
 49891                           ;stkvar	_i @ sp[(-1)+0]
 49892  0018EA  0EFF               	movlw	-1
 49893  0018EC  006F FF8C  F02A    	movff	plusw1,btemp
 49894  0018F2  0E0C               	movlw	12
 49895  0018F4  642A               	cpfsgt	btemp^0,c
 49896  0018F6  D7DE               	goto	l13294
 49897                           
 49898                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49899  0018F8  52E5               	movf	postdec1,f,c
 49900  0018FA  0012               	return		;funcret
 49901  0018FC                     __end_of_TMR6_DefaultInterruptHandler:
 49902                           	opt callstack 0
 49903                           
 49904 ;; *************** function _DMA1_DMASCNT_ISR *****************
 49905 ;; Defined at:
 49906 ;;		line 126 in file "mcc_generated_files/dma1.c"
 49907 ;; Parameters:    Size  Location     Type
 49908 ;;		None
 49909 ;; Auto vars:     Size  Location     Type
 49910 ;;		None
 49911 ;; Return value:  Size  Location     Type
 49912 ;;                  1    wreg      void 
 49913 ;; Registers used:
 49914 ;;		None
 49915 ;; Tracked objects:
 49916 ;;		On entry : 0/0
 49917 ;;		On exit  : 3F/0
 49918 ;;		Unchanged: 0/0
 49919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49924 ;;Total ram usage:        0 bytes
 49925 ;; Hardware stack levels used:    1
 49926 ;; This function calls:
 49927 ;;		Nothing
 49928 ;; This function is called by:
 49929 ;;		Interrupt level 2
 49930 ;; This function uses a non-reentrant model
 49931 ;;
 49932                           
 49933                           	psect	text222
 49934  0026A8                     __ptext222:
 49935                           	opt callstack 0
 49936  0026A8                     _DMA1_DMASCNT_ISR:
 49937                           	opt callstack 5
 49938                           
 49939                           ;incstack = 0
 49940  0026A8  EE14  F32C         	lfsr	1,___inthi_sp
 49941                           
 49942                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 49943  0026AC  0139               	movlb	57	; () banked
 49944  0026AE  91A2               	bcf	162,0,b	;volatile
 49945                           
 49946                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 49947  0026B0  0100               	movlb	0	; () banked
 49948  0026B2  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 49949                           
 49950                           ; BSR set to: 0
 49951  0026B4  0011               	retfie		f
 49952  0026B6                     __end_of_DMA1_DMASCNT_ISR:
 49953                           	opt callstack 0
 49954                           
 49955 ;; *************** function _DMA1_DMADCNT_ISR *****************
 49956 ;; Defined at:
 49957 ;;		line 133 in file "mcc_generated_files/dma1.c"
 49958 ;; Parameters:    Size  Location     Type
 49959 ;;		None
 49960 ;; Auto vars:     Size  Location     Type
 49961 ;;		None
 49962 ;; Return value:  Size  Location     Type
 49963 ;;                  1    wreg      void 
 49964 ;; Registers used:
 49965 ;;		None
 49966 ;; Tracked objects:
 49967 ;;		On entry : 0/0
 49968 ;;		On exit  : 3F/39
 49969 ;;		Unchanged: 0/0
 49970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49975 ;;Total ram usage:        0 bytes
 49976 ;; Hardware stack levels used:    1
 49977 ;; This function calls:
 49978 ;;		Nothing
 49979 ;; This function is called by:
 49980 ;;		Interrupt level 2
 49981 ;; This function uses a non-reentrant model
 49982 ;;
 49983                           
 49984                           	psect	text223
 49985  0026CC                     __ptext223:
 49986                           	opt callstack 0
 49987  0026CC                     _DMA1_DMADCNT_ISR:
 49988                           	opt callstack 5
 49989                           
 49990                           ; BSR set to: 0
 49991                           ;incstack = 0
 49992  0026CC  EE14  F32C         	lfsr	1,___inthi_sp
 49993                           
 49994                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 49995  0026D0  0139               	movlb	57	; () banked
 49996  0026D2  93A2               	bcf	162,1,b	;volatile
 49997                           
 49998                           ; BSR set to: 57
 49999  0026D4  0011               	retfie		f
 50000  0026D6                     __end_of_DMA1_DMADCNT_ISR:
 50001                           	opt callstack 0
 50002                           
 50003 ;; *************** function _DMA1_DMAA_ISR *****************
 50004 ;; Defined at:
 50005 ;;		line 143 in file "mcc_generated_files/dma1.c"
 50006 ;; Parameters:    Size  Location     Type
 50007 ;;		None
 50008 ;; Auto vars:     Size  Location     Type
 50009 ;;		None
 50010 ;; Return value:  Size  Location     Type
 50011 ;;                  1    wreg      void 
 50012 ;; Registers used:
 50013 ;;		None
 50014 ;; Tracked objects:
 50015 ;;		On entry : 0/0
 50016 ;;		On exit  : 3F/39
 50017 ;;		Unchanged: 0/0
 50018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50023 ;;Total ram usage:        0 bytes
 50024 ;; Hardware stack levels used:    1
 50025 ;; This function calls:
 50026 ;;		Nothing
 50027 ;; This function is called by:
 50028 ;;		Interrupt level 2
 50029 ;; This function uses a non-reentrant model
 50030 ;;
 50031                           
 50032                           	psect	text224
 50033  0026D8                     __ptext224:
 50034                           	opt callstack 0
 50035  0026D8                     _DMA1_DMAA_ISR:
 50036                           	opt callstack 5
 50037                           
 50038                           ; BSR set to: 57
 50039                           ;incstack = 0
 50040  0026D8  EE14  F32C         	lfsr	1,___inthi_sp
 50041                           
 50042                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 50043  0026DC  0139               	movlb	57	; () banked
 50044  0026DE  97A2               	bcf	162,3,b	;volatile
 50045                           
 50046                           ; BSR set to: 57
 50047  0026E0  0011               	retfie		f
 50048  0026E2                     __end_of_DMA1_DMAA_ISR:
 50049                           	opt callstack 0
 50050                           
 50051 ;; *************** function _DMA1_DMAOR_ISR *****************
 50052 ;; Defined at:
 50053 ;;		line 154 in file "mcc_generated_files/dma1.c"
 50054 ;; Parameters:    Size  Location     Type
 50055 ;;		None
 50056 ;; Auto vars:     Size  Location     Type
 50057 ;;		None
 50058 ;; Return value:  Size  Location     Type
 50059 ;;                  1    wreg      void 
 50060 ;; Registers used:
 50061 ;;		None
 50062 ;; Tracked objects:
 50063 ;;		On entry : 0/0
 50064 ;;		On exit  : 3F/39
 50065 ;;		Unchanged: 0/0
 50066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50071 ;;Total ram usage:        0 bytes
 50072 ;; Hardware stack levels used:    1
 50073 ;; This function calls:
 50074 ;;		Nothing
 50075 ;; This function is called by:
 50076 ;;		Interrupt level 2
 50077 ;; This function uses a non-reentrant model
 50078 ;;
 50079                           
 50080                           	psect	text225
 50081  0026E4                     __ptext225:
 50082                           	opt callstack 0
 50083  0026E4                     _DMA1_DMAOR_ISR:
 50084                           	opt callstack 5
 50085                           
 50086                           ; BSR set to: 57
 50087                           ;incstack = 0
 50088  0026E4  EE14  F32C         	lfsr	1,___inthi_sp
 50089                           
 50090                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 50091  0026E8  0139               	movlb	57	; () banked
 50092  0026EA  95A2               	bcf	162,2,b	;volatile
 50093                           
 50094                           ; BSR set to: 57
 50095  0026EC  0011               	retfie		f
 50096  0026EE                     __end_of_DMA1_DMAOR_ISR:
 50097                           	opt callstack 0
 50098                           
 50099                           ;
 50100                           ; Interrupt Vector Table @ 0x8
 50101                           ;
 50102                           
 50103                           	psect	ivt0x8
 50104  000008                     __pivt0x8:
 50105                           	opt callstack 0
 50106  000008                     ivt0x8_base:
 50107                           	opt callstack 0
 50108                           
 50109                           ; Vector 0 : SWINT
 50110  000008  09CF               	dw	_Default_ISR shr (0+2)
 50111                           
 50112                           ; Vector 1 : HLVD
 50113  00000A  09CF               	dw	_Default_ISR shr (0+2)
 50114                           
 50115                           ; Vector 2 : OSF
 50116  00000C  09CF               	dw	_Default_ISR shr (0+2)
 50117                           
 50118                           ; Vector 3 : CSW
 50119  00000E  09CF               	dw	_Default_ISR shr (0+2)
 50120                           
 50121                           ; Vector 4 : NVM
 50122  000010  09CF               	dw	_Default_ISR shr (0+2)
 50123                           
 50124                           ; Vector 5 : SCAN
 50125  000012  09CF               	dw	_Default_ISR shr (0+2)
 50126                           
 50127                           ; Vector 6 : CRC
 50128  000014  09CF               	dw	_Default_ISR shr (0+2)
 50129                           
 50130                           ; Vector 7 : IOC
 50131  000016  09CF               	dw	_Default_ISR shr (0+2)
 50132                           
 50133                           ; Vector 8 : INT0
 50134  000018  09A6               	dw	_INT0_ISR shr (0+2)
 50135                           
 50136                           ; Vector 9 : ZCD
 50137  00001A  09CF               	dw	_Default_ISR shr (0+2)
 50138                           
 50139                           ; Vector 10 : AD
 50140  00001C  080D               	dw	_ADCC_ISR shr (0+2)
 50141                           
 50142                           ; Vector 11 : ADT
 50143  00001E  049C               	dw	_ADCC_ThresholdISR shr (0+2)
 50144                           
 50145                           ; Vector 12 : CMP1
 50146  000020  09CF               	dw	_Default_ISR shr (0+2)
 50147                           
 50148                           ; Vector 13 : SMT1
 50149  000022  09CF               	dw	_Default_ISR shr (0+2)
 50150                           
 50151                           ; Vector 14 : SMT1PRA
 50152  000024  09CF               	dw	_Default_ISR shr (0+2)
 50153                           
 50154                           ; Vector 15 : SMT1PRW
 50155  000026  09CF               	dw	_Default_ISR shr (0+2)
 50156                           
 50157                           ; Vector 16 : DMA1SCNT
 50158  000028  09AA               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 50159                           
 50160                           ; Vector 17 : DMA1DCNT
 50161  00002A  09B3               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 50162                           
 50163                           ; Vector 18 : DMA1OR
 50164  00002C  09B9               	dw	_DMA1_DMAOR_ISR shr (0+2)
 50165                           
 50166                           ; Vector 19 : DMA1A
 50167  00002E  09B6               	dw	_DMA1_DMAA_ISR shr (0+2)
 50168                           
 50169                           ; Vector 20 : SPI1RX
 50170  000030  09CF               	dw	_Default_ISR shr (0+2)
 50171                           
 50172                           ; Vector 21 : SPI1TX
 50173  000032  09CF               	dw	_Default_ISR shr (0+2)
 50174                           
 50175                           ; Vector 22 : SPI1
 50176  000034  09CF               	dw	_Default_ISR shr (0+2)
 50177                           
 50178                           ; Vector 23 : I2C1RX
 50179  000036  09CF               	dw	_Default_ISR shr (0+2)
 50180                           
 50181                           ; Vector 24 : I2C1TX
 50182  000038  09CF               	dw	_Default_ISR shr (0+2)
 50183                           
 50184                           ; Vector 25 : I2C1
 50185  00003A  09CF               	dw	_Default_ISR shr (0+2)
 50186                           
 50187                           ; Vector 26 : I2C1E
 50188  00003C  09CF               	dw	_Default_ISR shr (0+2)
 50189                           
 50190                           ; Vector 27 : U1RX
 50191  00003E  08A6               	dw	_UART1_rx_vect_isr shr (0+2)
 50192                           
 50193                           ; Vector 28 : U1TX
 50194  000040  09CF               	dw	_Default_ISR shr (0+2)
 50195                           
 50196                           ; Vector 29 : U1E
 50197  000042  09CF               	dw	_Default_ISR shr (0+2)
 50198                           
 50199                           ; Vector 30 : U1
 50200  000044  09CF               	dw	_Default_ISR shr (0+2)
 50201                           
 50202                           ; Vector 31 : TMR0
 50203  000046  09CF               	dw	_Default_ISR shr (0+2)
 50204                           
 50205                           ; Vector 32 : TMR1
 50206  000048  09CF               	dw	_Default_ISR shr (0+2)
 50207                           
 50208                           ; Vector 33 : TMR1G
 50209  00004A  09CF               	dw	_Default_ISR shr (0+2)
 50210                           
 50211                           ; Vector 34 : TMR2
 50212  00004C  09CF               	dw	_Default_ISR shr (0+2)
 50213                           
 50214                           ; Vector 35 : CCP1
 50215  00004E  09CF               	dw	_Default_ISR shr (0+2)
 50216                           
 50217                           ; Vector 36 : Undefined
 50218  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 50219                           
 50220                           ; Vector 37 : NCO1
 50221  000052  09CF               	dw	_Default_ISR shr (0+2)
 50222                           
 50223                           ; Vector 38 : CWG1
 50224  000054  09CF               	dw	_Default_ISR shr (0+2)
 50225                           
 50226                           ; Vector 39 : CLC1
 50227  000056  09CF               	dw	_Default_ISR shr (0+2)
 50228                           
 50229                           ; Vector 40 : INT1
 50230  000058  072D               	dw	_INT1_ISR shr (0+2)
 50231                           
 50232                           ; Vector 41 : CMP2
 50233  00005A  09CF               	dw	_Default_ISR shr (0+2)
 50234                           
 50235                           ; Vector 42 : DMA2SCNT
 50236  00005C  09CF               	dw	_Default_ISR shr (0+2)
 50237                           
 50238                           ; Vector 43 : DMA2DCNT
 50239  00005E  09CF               	dw	_Default_ISR shr (0+2)
 50240                           
 50241                           ; Vector 44 : DMA2OR
 50242  000060  09CF               	dw	_Default_ISR shr (0+2)
 50243                           
 50244                           ; Vector 45 : DMA2A
 50245  000062  09CF               	dw	_Default_ISR shr (0+2)
 50246                           
 50247                           ; Vector 46 : I2C2RX
 50248  000064  09CF               	dw	_Default_ISR shr (0+2)
 50249                           
 50250                           ; Vector 47 : I2C2TX
 50251  000066  09CF               	dw	_Default_ISR shr (0+2)
 50252                           
 50253                           ; Vector 48 : I2C2
 50254  000068  09CF               	dw	_Default_ISR shr (0+2)
 50255                           
 50256                           ; Vector 49 : I2C2E
 50257  00006A  09CF               	dw	_Default_ISR shr (0+2)
 50258                           
 50259                           ; Vector 50 : U2RX
 50260  00006C  08BA               	dw	_UART2_rx_vect_isr shr (0+2)
 50261                           
 50262                           ; Vector 51 : U2TX
 50263  00006E  08B0               	dw	_UART2_tx_vect_isr shr (0+2)
 50264                           
 50265                           ; Vector 52 : U2E
 50266  000070  09CF               	dw	_Default_ISR shr (0+2)
 50267                           
 50268                           ; Vector 53 : U2
 50269  000072  09CF               	dw	_Default_ISR shr (0+2)
 50270                           
 50271                           ; Vector 54 : TMR3
 50272  000074  79DD               	dw	_TMR3_ISR shr (0+2)
 50273                           
 50274                           ; Vector 55 : TMR3G
 50275  000076  09CF               	dw	_Default_ISR shr (0+2)
 50276                           
 50277                           ; Vector 56 : TMR4
 50278  000078  09CF               	dw	_Default_ISR shr (0+2)
 50279                           
 50280                           ; Vector 57 : CCP2
 50281  00007A  09CF               	dw	_Default_ISR shr (0+2)
 50282                           
 50283                           ; Vector 58 : Undefined
 50284  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 50285                           
 50286                           ; Vector 59 : CWG2
 50287  00007E  09CF               	dw	_Default_ISR shr (0+2)
 50288                           
 50289                           ; Vector 60 : CLC2
 50290  000080  09CF               	dw	_Default_ISR shr (0+2)
 50291                           
 50292                           ; Vector 61 : INT2
 50293  000082  09CF               	dw	_Default_ISR shr (0+2)
 50294                           
 50295                           ; Vector 62 : Undefined
 50296  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 50297                           
 50298                           ; Vector 63 : Undefined
 50299  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 50300                           
 50301                           ; Vector 64 : Undefined
 50302  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 50303                           
 50304                           ; Vector 65 : Undefined
 50305  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 50306                           
 50307                           ; Vector 66 : Undefined
 50308  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 50309                           
 50310                           ; Vector 67 : Undefined
 50311  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 50312                           
 50313                           ; Vector 68 : Undefined
 50314  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 50315                           
 50316                           ; Vector 69 : Undefined
 50317  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 50318                           
 50319                           ; Vector 70 : TMR5
 50320  000094  761A               	dw	_TMR5_ISR shr (0+2)
 50321                           
 50322                           ; Vector 71 : TMR5G
 50323  000096  09CF               	dw	_Default_ISR shr (0+2)
 50324                           
 50325                           ; Vector 72 : TMR6
 50326  000098  0951               	dw	_TMR6_ISR shr (0+2)
 50327                           
 50328                           ; Vector 73 : CCP3
 50329  00009A  09CF               	dw	_Default_ISR shr (0+2)
 50330                           
 50331                           ; Vector 74 : CWG3
 50332  00009C  09CF               	dw	_Default_ISR shr (0+2)
 50333                           
 50334                           ; Vector 75 : CLC3
 50335  00009E  09CF               	dw	_Default_ISR shr (0+2)
 50336                           
 50337                           ; Vector 76 : Undefined
 50338  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 50339                           
 50340                           ; Vector 77 : Undefined
 50341  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 50342                           
 50343                           ; Vector 78 : Undefined
 50344  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 50345                           
 50346                           ; Vector 79 : Undefined
 50347  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 50348                           
 50349                           ; Vector 80 : CCP4
 50350  0000A8  09CF               	dw	_Default_ISR shr (0+2)
 50351                           
 50352                           ; Vector 81 : CLC4
 50353  0000AA  09CF               	dw	_Default_ISR shr (0+2)
 50354  0000AC                     ivt0x8_undefint:
 50355                           	opt callstack 0
 50356  0000AC  00FF               	reset	
 50357                           
 50358                           	psect	text226
 50359  000000                     __ptext226:
 50360                           	opt callstack 0
 50361                           
 50362                           	psect	rparam
 50363  0000                     
 50364                           	psect	temp
 50365  00002A                     btemp:
 50366                           	opt callstack 0
 50367  00002A                     	ds	32
 50368  0000                     wtemp0	set	btemp
 50369  0000                     wtemp1	set	btemp+2
 50370  0000                     wtemp2	set	btemp+4
 50371  0000                     wtemp3	set	btemp+6
 50372  0000                     wtemp4	set	btemp+8
 50373  0000                     wtemp5	set	btemp+10
 50374  0000                     wtemp8	set	btemp+1
 50375  0000                     ttemp0	set	btemp
 50376  0000                     ttemp1	set	btemp+3
 50377  0000                     ttemp2	set	btemp+6
 50378  0000                     ttemp3	set	btemp+9
 50379  0000                     ttemp5	set	btemp+1
 50380  0000                     ttemp6	set	btemp+4
 50381  0000                     ttemp7	set	btemp+8
 50382  0000                     ltemp0	set	btemp
 50383  0000                     ltemp1	set	btemp+4
 50384  0000                     ltemp2	set	btemp+8
 50385  0000                     lltemp0	set	btemp
 50386  0000                     lltemp1	set	btemp+8
 50387  0000                     lltemp2	set	btemp+16
 50388  0000                     lltemp3	set	btemp+24
 50389                           tosu	equ	0x3FFF
 50390                           tosh	equ	0x3FFE
 50391                           tosl	equ	0x3FFD
 50392                           stkptr	equ	0x3FFC
 50393                           pclatu	equ	0x3FFB
 50394                           pclath	equ	0x3FFA
 50395                           pcl	equ	0x3FF9
 50396                           tblptru	equ	0x3FF8
 50397                           tblptrh	equ	0x3FF7
 50398                           tblptrl	equ	0x3FF6
 50399                           tablat	equ	0x3FF5
 50400                           prodh	equ	0x3FF4
 50401                           prodl	equ	0x3FF3
 50402                           indf0	equ	0x3FEF
 50403                           postinc0	equ	0x3FEE
 50404                           postdec0	equ	0x3FED
 50405                           preinc0	equ	0x3FEC
 50406                           plusw0	equ	0x3FEB
 50407                           fsr0h	equ	0x3FEA
 50408                           fsr0l	equ	0x3FE9
 50409                           wreg	equ	0x3FE8
 50410                           indf1	equ	0x3FE7
 50411                           postinc1	equ	0x3FE6
 50412                           postdec1	equ	0x3FE5
 50413                           preinc1	equ	0x3FE4
 50414                           plusw1	equ	0x3FE3
 50415                           fsr1h	equ	0x3FE2
 50416                           fsr1l	equ	0x3FE1
 50417                           bsr	equ	0x3FE0
 50418                           indf2	equ	0x3FDF
 50419                           postinc2	equ	0x3FDE
 50420                           postdec2	equ	0x3FDD
 50421                           preinc2	equ	0x3FDC
 50422                           plusw2	equ	0x3FDB
 50423                           fsr2h	equ	0x3FDA
 50424                           fsr2l	equ	0x3FD9
 50425                           status	equ	0x3FD8


Data Sizes:
    Strings     1500
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_129(CODE[1]), STR_89(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_130(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[21]), STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), 
		 -> STR_82(CODE[21]), STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[14]), STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[23]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), 
		 -> STR_28(CODE[16]), STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[14]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[21]), STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), 
		 -> STR_82(CODE[21]), STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[14]), STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[23]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), 
		 -> STR_28(CODE[16]), STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[14]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_69(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_68(CODE[14]), STR_67(CODE[28]), 
		 -> STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[20]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[22]), 
		 -> STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[23]), STR_47(CODE[23]), 
		 -> STR_46(CODE[23]), STR_45(CODE[29]), STR_44(CODE[23]), STR_43(CODE[23]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[22]), 
		 -> STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[17]), STR_29(CODE[16]), STR_28(CODE[16]), STR_27(CODE[21]), 
		 -> STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[14]), STR_23(CODE[26]), 
		 -> STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), 
		 -> STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7381_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[23]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), STR_28(CODE[16]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[14]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_128(CODE[37]), STR_127(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[23]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), STR_28(CODE[16]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[14]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[23]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), STR_28(CODE[16]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[14]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_71(CODE[9]), STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_71(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_70(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  439399
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    2841
                            ___fldiv
                            ___flmul
                            ___fltol
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1495
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83248
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0   67698
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  132030
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65731
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35222
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34896
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1464
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fldiv
     ___flmul
     ___fltol
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 04:12:46 2020

                         _SPI1_Exchange8bit 24B0                    __end_of_set_display_info 2528  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F8E3                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 21CE                __end_of_start_switch_handler 2490  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1766                                          _r0 01E5  
                                        _r1 01DB                                          _bp FA0B  
                    __end_of_FVR_Initialize 2716                              _check_day_time 9B90  
                               __CFG_LVP$ON 000000                                         l171 25E0  
                                       l809 24BE                                         l675 2086  
                                       l942 1326                                         _GIE 01FE97  
                                       _abs 1A62                                         _pad F65E  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 2576  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs FD3E  
                             _INT0_CallBack 23A0                           _update_adc_result 1D2E  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 2334  
                              __CFG_ZCD$OFF 000000                                        l1004 1C6E  
                                      l2017 10AC                                        l2033 051A  
                                      l2203 9EF2                                        l1501 1516  
                                      l1271 2608                                        l1192 1CAE  
                                      l1520 9372                                        l2137 D85E  
                                      l2058 0AD6                                        l1282 E1F6  
                                      l3019 E4A2                             _timer3ReloadVal 00C0  
                                      l1284 E1FC                                        l1614 16BC  
                                      l2406 B486                                        l1462 0326  
                                      l1455 005E                                        l2360 4F34  
                                      l3304 80AC                                        l2184 FA7E  
                                      l2096 102E                                        l2521 2790  
                                      l2281 F1EA                                        l2290 D0C6  
                                      l3411 1AA2                                        l3403 DB96  
                                      l2603 B574                                        l4019 797C  
                                      l4027 6490                                        l1475 0844  
                                      l2364 5272                                        l3340 6CBA  
                                      l1820 1D84                                        l1485 0B10  
                                      l1477 084A                                        l1742 0728  
                                      l2550 1BC0                                        l1830 D2DA  
                                      l2199 9EFA                                        l3271 7306  
                                      l1495 0D16                                        l2624 A5F4  
                                      l3416 F424                                        l1496 0F40  
                                      l2465 F6BA                                        l1761 1E26  
                                      l1746 0BFC                                        l3259 7476  
                                      l2731 FE40                                        l3515 C818  
                                      l3380 D4D8                                        l3452 C132  
                                      l3541 F30A                                        l2485 8B66  
                                      l2565 2070                                        l1837 EA32  
                                      l1829 D17E                        _ADCC_StartConversion 260C  
                                      l2639 981A                                        l1877 2524  
                                      l3823 0EAE                                        l3808 CEA6  
                                      l1977 8A82                                        l2689 480E  
                                      l3931 CC86                                        l3836 0E2A  
                                      l3940 BC3E                                        l2981 023E  
                                      l3847 3862                                        l2992 E76A  
                                      l2985 E696                                        l3975 B9C2  
                                      l3967 B8DC                                        l9820 6FF0  
                                      l9902 7328                                        l9830 7062  
                                      l9904 733A                                        l9840 709E  
                                      l9760 6DA0                                        l9922 7374  
                                      l9834 7082                                        l9754 6D5A  
                                      l9908 7346                                        l9836 7094  
                                      l9844 70CE                                        l9772 6E0A  
                                      l9748 6D1A                                        l9950 7426  
                                      l9934 73D2                                        l9918 736E  
                                      l9862 716A                                        l9790 6EB2  
                                      l9782 6E60                                        l9766 6DD8  
                                      l9758 6D70                                        STR_1 FE78  
                                      l9944 73FE                                        l9864 717C  
                                      l9872 71B8                                        l9784 6E90  
                                      STR_2 FE4E                                        STR_3 FFD5  
                                      l9778 6E4A                                        l9970 FBF4  
                                      STR_4 FDD0                                        STR_5 FBF2  
                                      l9956 7456                                        l9948 7416  
                                      l9884 7290                                        l9868 7186  
                                      STR_6 FBF2                                        STR_7 FBF2  
                                      l9894 72EA                                        l9886 72B6  
                                      l9966 FB6E                                        STR_8 FBF2  
                                      STR_9 FBF2                                        _LATA 003FBA  
                                      _LATB 003FBB                                        _LATC 003FBC  
                                      _LATD 003FBD                                        _LATE 003FBE  
                                      _LATF 003FBF                                        _T2PR 003FAB  
                                      _T6PR 003F93                                        _PMD0 0039C0  
                                      _PMD1 0039C1                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        u8000 1FFC  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      _PMD6 0039C6                                        _PMD7 0039C7  
                                      u8100 BCFA                                        u7310 70C6  
                                      u7150 1FCA                                        u8111 BD04  
                                      u8031 EA44                                        u7320 70E6  
                                      u8120 BD3E                                        u8200 C878  
                                      u9000 E380                                        u7160 1FCC  
                                      u8130 BD70                                        u9010 E3BA  
                                      u7315 70B6                                        u8051 EB66  
                                      u7420 72D8                                        u7260 7016  
                                      u8220 C8CE                                        u9100 E090  
                                      u7270 7036                                        u8150 BE4E  
                                      u8230 C900                                        u9110 E0C2  
                                      u7271 7030                                        u9015 E3B0  
                                      u7520 73C2                                        u9200 17DA  
                                      u8080 BCA4                                        u8240 C932  
                                      u7600 1F9C                                        u9210 17FA  
                                      u8170 BEA0                                        u9130 E1A0  
                                      u7610 FC38                                        u7460 734C  
                                      u7380 71AE                                        u8500 7FC6  
                                      u8420 7EE0                                        u8260 C9EA  
                                      u9060 E458                                        u7525 73B2  
                                      u7550 73E2                                        u8510 8000  
                                      u7710 1A76                                        u9150 EFAC  
                                      u7480 7366                                        u7288 7038  
                                      u8520 803C                                        u8280 CA3C  
                                      u9080 E482                                        u7720 DAB8  
                                      u9160 EFDE                                        u7385 719E  
                                      u8505 7FB6                                        u8610 6644  
                                      u7810 0E5C                                        u9091 E056  
                                      u8460 7F6A                                        u7820 0E5E  
                                      u9180 F096                                        u7725 DAAE  
                                      u7910 A1BE                                        u7590 1F9A  
                                      u8720 6B8E                                        u7840 9FBA  
                                      u8625 67D8                                        u8730 6BC8  
                                      u7770 DB86                                        u7850 A006  
                                      u8635 68A0                                        u7915 A1B4  
                                      u8740 6C0E                                        u7780 DB88  
                                      u7940 1B26                                        u8725 6B7E  
                                      u8645 6A68                                        u7765 DB68  
                                      u7845 9FB0                                        u7950 1B28  
                                      u8680 6B32                                        u8920 0238  
                                      u7960 0DD8                                        u7890 A0E6  
                                      u7970 0DDA                                        _PLLR 01CEE0  
                                      u7875 A040                                        u7876 A046  
                                      u7877 A054                                        u7990 1FFA  
                                      u7895 A0DC                                        u8980 1916  
                                      u8990 E36C                                        u8995 E362  
                   __end_of_display_history B1B2                                        _WPUA 003A41  
                                      _WPUB 003A51                                        _WPUC 003A61  
                                      _WPUD 003A71                                        _WPUE 003A81  
                                      _WPUF 003A91                            __end_of_ADCC_ISR 2060  
                     __size_of___secs_to_tm 10D2                               __CFG_FCMEN$ON 000000  
                              _rule_to_secs 7480                                        _dbuf 0354  
                        __size_of_CRC_Start 0006                                        _cp_h FA1F  
                                      _cp_l FA1B                                        _atoi BEC8  
                                      _ctoa 0D28                                        _main 0000  
                                      _dtoa 8A88                                        _nanf 1538  
                                      _lock 01D3                                        _seed 02DE  
                                      _prec 004C                                        _time 15FA  
                                      _nout 00BA                                        _spin F993  
                                      fsr0h 003FEA                                        fsr1h 003FE2  
                                      indf0 003FEF                                        fsr2h 003FDA  
                                      fsr0l 003FE9                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        _stoa B48A  
                                      btemp 002A                                        _utoa A5B0  
                                      _xtoa 97D6                      __end_of_check_adc_scan 26F6  
                             ___fpclassifyf DA0A                                        prodh 003FF4  
                                      prodl 003FF3                                        start 00AE  
                           _timer5ReloadVal 00C4                   __end_of_SPI1_Exchange8bit 24CE  
                 __size_of_clear_hid_pflags 0066                             _TMR3_Initialize 19D4  
               __size_of_set_load_relay_one 0010                 __size_of_set_load_relay_two 0010  
                             __CFG_CSWEN$ON 000000                              _SPI1STATUSbits 003D17  
                         _UART1_rx_vect_isr 2298                                ___param_bank 000000  
                      display_history@bwait 0053                      __end_of_check_day_time 9F04  
                        ?_UART1_rx_vect_isr 0001                   __size_of_DATAEE_WriteByte 0068  
                          _update_hist_data 0FBA                            __end_of_INT0_ISR 26A6  
                          __end_of_INT1_ISR 1CF2              __size_of_OSCILLATOR_Initialize 0016  
                  __end_of_ringBufS_put_dma 0730               __end_of_OSCILLATOR_Initialize 25E6  
                                     l10100 A022                                       l10120 A1D8  
                                     l10114 A140                                       l10044 1A92  
                                     l10124 A246                                       l10116 A190  
                                     l10302 7D34                                       l10062 DB38  
                                     l10142 0E1A                                       l12000 D422  
                                     l10208 BE16                                       l10402 8080  
                                     l12010 D456                                       l12002 D438  
                                     l10058 DB34                                       l10154 FE96  
                                     l10420 64F0                                       l10404 8090  
                                     l10316 7D88                                       l10308 7D6E  
                                     l12020 D4B8                                       l10244 C9B2  
                                     l10236 C906                                       l10228 C87E  
                                     l10068 DB8E                                       l10164 EA4C  
                                     l10430 6566                                       l10350 7EE6  
                                     l10342 7EB4                                       l10334 7E4E  
                                     l10326 7E18                                       l10270 7BD2  
                                     l10190 BCFE                                       l10086 0E9E  
                                     l10360 7F28                                       l10336 7E60  
                                     l10344 7EB8                                       l10264 7B92  
                                     l10184 BCAA                                       l10168 EAF2  
                                     l10514 6ACA                                       l10426 6530  
                                     l10370 7F72                                       l10290 7CB0  
                                     l10274 7BE8                                       l11410 BEE2  
                                     l10532 6B40                                       l10508 6AAE  
                                     l10444 65FE                                       l10428 6536  
                                     l10356 7F02                                       l10284 7C70  
                                     l10276 7C18                                       l11420 BF78  
                                     l11412 BF04                                       l10196 BD44  
                                     l10542 6BB4                                       l10518 6AF0  
                                     l10446 6604                                       l10438 65BE  
                                     l10390 8028                                       l10374 7F78  
                                     l10294 7CC6                                       l11430 BFE0  
                                     l12230 0144                                       l10560 6C68  
                                     l10552 6C24                                       l10528 6B3A  
                                     l10456 6656                                       l10448 6634  
                                     l10384 7FEC                                       l10296 7CF6  
                                     l11432 C01E                                       l10704 191A  
                                     l10562 6C82                                       l10546 6BFA  
                                     l12242 85CE                                       l12314 20FE  
                                     l10802 17FE                                       l11426 BFA4  
                                     l10730 E40E                                       l10714 E38C  
                                     l12226 0106                                       l12234 0158  
                                     l11610 53A0                                       l10396 8058  
                                     l11436 C086                                       l11428 BFBC  
                                     l10740 E450                                       l10732 E42A  
                                     l11508 DCB8                                       l12270 8838  
                                     l12262 8806                                       l11446 C122  
                                     l10670 023C                                       l10662 01C6  
                                     l11462 CD18                                       l10814 CACA  
                                     l11614 53CA                                       l14102 D696  
                                     l12248 85FE                                       l11464 CD84  
                                     l10832 CC48                                       l11640 5790  
                                     l11624 5506                                       l12282 89B4  
                                     l12274 88D4                                       l12258 8724  
                                     l10666 0208                                       l10738 E43A  
                                     l10754 E096                                       l11490 DC06  
                                     l10818 CB0A                                       l11650 5806  
                                     l11642 579A                                       l11634 575E  
                                     l11618 54D0                                       l14202 B272  
                                     l14114 1796                                       l10684 E6E4  
                                     l11484 DBDA                                       l10836 CC6C  
                                     l11660 587E                                       l14124 0FD0  
                                     PRLOCK 0039EF                                       l10678 E654  
                                     l10766 E168                                       l11662 5886  
                                     l11654 5834                                       l14222 B2F2  
                                     l14214 B2CC                                       l14206 B27E  
                                     l10696 E768                                       l10688 E732  
                                     l12288 8A50                                       l12296 8A62  
                                     l11496 DC36                                       l11592 1436  
                                     l14136 1008                                       l12706 9EA0  
                                     l10786 F05E                                       l10778 EFB2  
                                     l13506 0A7A                                       l11674 5946  
                                     l14074 D52A                                       l13700 EEE4  
                                     l14156 E022                                       l14332 0402  
                                     l12820 2018                                       l11668 58B2  
                                     l13604 1D4E                                       l14180 B1E4  
                                     l14244 B44C                                       l13294 18B4  
                                     l16022 9B46                                       l16006 9A5C  
                                     l13518 0AB0                                       l12750 E2BE  
                                     l14190 B220                                       l14246 B476  
                                     l14086 D5E0                                       l14094 D692  
                                     l12672 9CA4                                       l15304 08A0  
                                     l14328 03C4                                       l13464 EBE6  
                                     l11960 E596                                       l11952 E52A  
                                     l11944 E4E2                                       l11688 FD14  
                                     l14176 B1CE                                       l14088 D614  
                                     l13640 1082                                       l13298 18E6  
                                     l17010 4B30                                       l17002 4A2E  
                                     l13490 D710                                       l13482 D6E4  
                                     l15314 09C6                                       l15306 08C2  
                                     l15402 ED22                                       l16210 406E  
                                     l16202 3FB6                                       l16130 399E  
                                     l12754 E2E8                                       l16034 BA70  
                                     l14186 B214                                       l14178 B1DE  
                                     l17020 4D5C                                       l12692 9D9A  
                                     l13708 EF5E                                       l15340 AD42  
                                     l13468 EC5C                                       l16036 BA88  
                                     l14196 B24A                                       l13820 0392  
                                     l13628 106A                                       l13652 F4F2  
                                     l17030 4E9C                                       l17014 4B84  
                                     l13494 D724                                       l11990 D3B8  
                                     l13558 1D9A                                       l15318 0A04  
                                     l15430 EE1C                                       l15422 EDE8  
                                     l16302 479A                                       l16214 40A2  
                                     l16150 3B0A                                       l16126 394E  
                                     l15334 AC84                                       l12766 1E30  
                                     l16062 A93E                                       l16054 BC1A  
                                     l16038 BAAE                                       l17024 4DD6  
                                     l13920 1C56                                       l13680 EE5E  
                                     l11992 D3D6                                       l15520 8BBE  
                                     l15408 ED42                                       l15600 176C  
                                     l16152 3B20                                       l16128 3988  
                                     l16072 AA5A                                       l13816 0316  
                                     l13648 F490                                       l12858 183A  
                                     l17050 526A                                       l17034 4F44  
                                     l13682 EE64                                       l14378 97C8  
                                     l11986 D394                                       l11978 D328  
                                     l15370 F6B2                                       l15530 8DD0  
                                     l15450 F590                                       l15442 F566  
                                     l15602 1782                                       l16234 4202  
                                     l15354 AE5A                                       l15346 ADAC  
                                     l16074 AA64                                       l16082 AB8A  
                                     l16066 A9D8                                       l14564 0F00  
                                     l13684 EE72                                       l13692 EE7A  
                                     l11988 D3A2                                       l15292 F220  
                                     l15380 F74A                                       l15372 F6C4  
                                     l15516 8BA0                                       l15508 8B56  
                                     l15460 F610                                       l16244 42B0  
                                     l16148 3AD0                                       l16308 47BA  
                                     l16340 B8C2                                       l16500 79F2  
                                     l17220 CFB8                                       l17204 CEC4  
                                     l14558 0EF0                                       l17038 4F66  
                                     l13694 EEAC                                       l13678 EE4E  
                                     l11998 D404                                       l15366 F68A  
                                     l15550 8E82                                       l15446 F578  
                                     l15702 1CD0                                       l15606 17AE  
                                     l16254 43D2                                       l16190 3E5C  
                                     l12878 0F72                                       l17150 8FD4  
                                     l16078 AAFE                                       l16342 B8E6  
                                     l17230 D090                                       l15376 F700  
                                     l15712 1E7C                                       l15632 18EC  
                                     l15616 1852                                       l15624 1880  
                                     l16264 4488                                       l16168 3C84  
                                     l17304 D14E                                       l13882 246A  
                                     l13938 1C96                                       l15482 0D46  
                                     l15554 8EBE                                       l15386 FF46  
                                     l15642 1A28                                       l16186 3E08  
                                     l16178 3D1C                                       l17146 8FC0  
                                     l15484 0D72                                       l15396 ED0C  
                                     l15468 F644                                       l15812 252C  
                                     l15660 1AE4                                       l15636 195C  
                                     l15580 1646                                       l15900 B6A0  
                                     l16292 473C                                       l16540 0648  
                                     l16348 B954                                       l16604 6146  
                                     l13894 2082                                       l15814 2546  
                                     l15750 2188                                       l15734 2068  
                                     l15726 1F9E                                       l15654 1AAA  
                                     l15638 19C6                                       l16278 4604  
                                     l16518 0788                                       l17318 D276  
                                     l17158 9036                                       l16550 092A  
                                     l16710 3114                                       l16614 6226  
                                     l17248 1190                                       l15824 25E8  
                                     l15736 208A                                       l15568 1602  
                                     l15904 B6CC                                       l16368 1D1C  
                                     l16640 6474                                       l16632 63A6  
                                     l17272 B19E                                       l17504 06AA  
                                     l15850 26F0                                       l15834 2638  
                                     l15762 2210                                       l15770 227A  
                                     l15674 1B4C                                       l15666 1AEA  
                                     l15658 1AD2                                       l15930 A640  
                                     l15922 A5E4                                       l16298 4796  
                                     l16538 0606                                       l16810 F3E4  
                                     l16722 33DA                                       l16650 2858  
                                     l16482 763A                                       l17530 087C  
                                     l17522 083A                                       l15692 1C0E  
                                     l15676 1B58                                       l15588 169C  
                                     l15908 B708                                       l15940 A836  
                                     l17196 92BE                                       l16708 310E  
                                     l16484 768E                                       l16628 6388  
                                     l16820 C64A                                       l17612 11E0  
                                     l17444 0340                                       l17436 02D4  
                                     l17372 0066                                       l15598 1740  
                                     l15870 B4F6                                       l16558 098E  
                                     l16742 35F2                                       l16734 34F8  
                                     l16726 343A                                       l16718 31CE  
                                     l16662 2B04                                       l16590 5D4A  
                                     l17278 B1A2                                       l17622 1362  
                                     l17542 08B0                                       l17438 02FE  
                                     l17374 0078                                       l17366 0040  
                                     l15696 1C46                                       l16840 E8FA  
                                     l16592 5E40                                       l17608 117E  
                                     l17624 138E                                       l17528 084E  
                                     l17368 0048                                       l15778 22E6  
                                     l15786 23F8                                       l15890 B5E6  
                                     l15962 980A                                       l16690 2F9C  
                                     l16682 2EC8                                       l16594 5E60  
                                     l16780 0B04                                       l16676 2E40  
                                     l16668 2C40                                       l16588 5D2A  
                                     l17548 08D6                                       l17652 1440  
                                     l17492 05D0                                       l15798 2490  
                                     l15894 B616                                       l15886 B5AA  
                                     l15982 98E0                                       l15974 9880  
                                     l16774 0AE4                                       l17670 14A8  
                                     l17662 147E                                       l17638 13E8  
                                     l15968 9844                                       l16776 0AEC  
                                     l16872 FB50                                       l17680 14EC  
                                     l17584 0B22                                       l16778 0AF6  
                                     l16786 0B0A                                       l16866 FA9E  
                                     l16698 3070                                       l17690 1542  
                                     l17578 0B00                                       l16788 0B36  
                                     l16972 F184                                       l17676 14C6  
                                     l17668 1490                                       l17596 0C22  
                                     l16990 4902                                       l15998 99D6  
                                     l16966 F11E                                       l16994 4956  
                                     l16998 49C2                             __end_of___aldiv DD34  
                           __end_of___aodiv BEC8                                _Volts_to_SOC 0304  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod E612                             __end_of___fladd 7480  
                                     _ADCLK 003EFF                             __end_of___aomod CA60  
                                     _ADPCH 003EF1                             __end_of___fldiv 80B6  
                                     _ADREF 003EFD                             __end_of___awdiv EE36  
                           __end_of___flneg 1944                                       STR_10 FEE1  
                                     STR_11 FF35                                       STR_20 FEA2  
                                     STR_12 FDBB                                       STR_21 FC07  
                                     STR_13 FB4E                                       STR_30 FF86  
                                     STR_14 FC1D                                       STR_22 FB1A  
                                     STR_15 FCF9                                       STR_31 FCE3  
                                     STR_23 FB34                                       STR_24 FF78  
                                     STR_32 FCCD                                       STR_40 FC33  
                                     STR_16 FBF1                                       STR_25 FF4A  
                                     STR_17 FDFA                                       STR_33 FCB7  
                                     STR_41 FC49                               __CFG_WDTE$OFF 000000  
                                     STR_50 FD51                                       STR_18 FE0F  
                                     STR_26 FDE5                                       STR_34 FCA1  
                                     STR_42 FC5F                                       STR_51 FD51  
                                     STR_19 FEF6                                       STR_27 FEB7  
                                     STR_35 FC8B                                       STR_43 FB7F  
                                     STR_28 FF97                                       STR_52 FE8D  
                                     STR_60 FDA6                                       STR_36 FC75  
                                     STR_44 FBC4                             __end_of___awmod F65E  
                                     STR_61 FE63                                       STR_53 FE39  
                                     STR_37 FD3B                                       STR_45 FAC7  
                                     STR_62 FE8D                                       STR_70 FFB6  
                                     STR_54 FE24                                       STR_38 FD0F  
                                     STR_46 FB68                                       STR_63 FDA6  
                                     STR_71 FFCC                                       STR_55 FF5F  
                                     STR_39 FD25                                       STR_47 FB96  
                                     STR_72 FF73                                       STR_64 FF0B  
                                     STR_56 FECC                                       STR_48 FBAD  
                                     STR_80 FB00                                       _ADRPT 003EEC  
                                     STR_73 FF73                                       STR_57 FD91  
                                     STR_81 FD67                                       STR_49 FD51  
                                     STR_65 FAE4                                       STR_66 FAE4  
                                     STR_74 FFC2                                       STR_58 FF20  
                                     STR_82 FD7C                                       STR_90 FA23  
                                     STR_67 FAE4                                       STR_75 FFC2  
                                     STR_59 FE8D                                       STR_91 FFDA  
                                     STR_68 FF78                                       STR_92 FFE2  
                                     STR_76 FFA7                             __end_of___lbmod 09B6  
                                     STR_77 FFA7                                       STR_69 FFFC  
                                     STR_78 FFA7                                       STR_79 FFA7  
                                     STR_95 FFDE                                       STR_96 FFE6  
                           __end_of___flmul 6CC4                                       STR_89 FAA1  
                                     STR_99 FFED                             __end_of___flsub 1AEE  
                           __end_of___fltol E4AC                                       u11200 E50A  
                                     u11210 E524                                       u10500 DBD4  
                                     u11220 E546                                       u10430 CDB2  
                                     u10360 BF74                                       u12040 12E6  
                                     u10520 DC02                                       u11240 E5BE  
                                     u11330 D44C                                       u10530 DC30  
                           __end_of___lodiv E1C8                                       u10380 C0CC  
                                     u10540 DC52                                       u11260 E5E8  
                                     u11180 E4DC                                       u12205 1B62  
                                     u10437 CDA4                                       u10390 C0CE  
                                     u10470 CE4C                                       u10480 CE7A  
                                     u12320 0F6E                                       u11520 00F8  
                                     u12048 12E8                                       u10560 DCE0  
                                     u10800 5924                                       u12065 1336  
                                     u12066 1338                                       u10810 5926  
                                     _U1P1H 003DED                                       u10475 CE46  
                                     u10580 DD0A                                       _U1P2H 003DEF  
                                     u10477 CE38                                       u11525 00F2  
                                     u13301 1770                                       u11614 8820  
                                     u12254 E26A                                       u12270 264A  
                                     u10830 FCF6                                       _U1P1L 003DEC  
                                     _U1P3H 003DF1                                       u12415 13EA  
                                     u11615 881A                                       u10487 CE6C  
                                     u12255 E264                                       _T3CLK 003FA9  
                                     u12416 13EC                                       u12408 13B8  
                                     u10840 23EE                                       u10760 57B6  
                                     _T2CON 003FAC                                       _U1P2L 003DEE  
                                     u11634 88EE                                       u11554 85E8  
                                     u12610 0AAA                                       u13330 0FCC  
                                     _U1P3L 003DF0                                       u11635 88E8  
                                     u11555 85E2                                       u10691 5300  
                                     u11660 8918                                       u14300 FFC0  
                                     u10780 5850                                       u10684 1454  
                                     u10685 144E                                       u12390 13B6  
                                     u11654 8910                                       u11574 8618  
                                     u14150 F214                                       _U2P1L 003DD4  
                                     u11655 890A                                       u11575 8612  
                                     u12560 D6C2                                       u15120 260E  
                                     _T3CON 003FA6                                       _U2P2L 003DD6  
                                     u12465 2638                                       u13361 0FF4  
                                     u12730 2438                                       u11594 863A  
                                     u14170 F290                                       u14250 AECE  
                                     u16010 7614                                       u12466 263A  
                                     u13290 D692                                       _U2P3L 003DD8  
                                     u11595 8634                                       u14307 FFB2  
                                     u12475 2628                                       u14180 08F0  
                                     u14500 8ABA                                       u14420 F5BC  
                                     u15140 26C4                                       u15060 243A  
                                     u15220 B60C                                       u16020 7626  
                                     u12476 262A                                       u13381 101E  
                                     u14350 ED6E                                       u15150 26C6  
                                     u15230 B652                                       u12590 0A76  
                                     u15311 A878                                       _T5CLK 003F9D  
                                     u12736 243A                                       u14600 8E3E  
                                     u14520 8B2A                                       u14440 F630  
                                     u15320 A88E                                       u15400 992C  
                                     u17000 045A                             __end_of___lomod F0B8  
                                     u15321 A88C                                       u14610 8E42  
                                     u14370 EE08                                       u15330 A8A2  
                                     u15410 992E                                       u14187 08E2  
                                     u14540 8B3C                                       u14700 16EA  
                                     u15260 B72E                                       u15340 A8A6  
                                     u15500 9AD2                                       u16220 27F4  
                                     u17020 06D8                                       _T2HLT 003FAD  
                                     u15237 B644                                       u14630 8E58  
                                     u14710 16EC                                       u15510 9AD6  
                                     u15430 998C                                       u16070 0768  
                                     u16230 2844                                       u17030 0802  
                                     u14560 8B8C                                       u15280 A5CA  
                                     u15440 998E                                       u15360 97F0  
                                     u16320 310E                                       u15600 AB8A  
                                     u16400 C60A                                       u17040 0804  
                                     _T5CON 003F9A                                       u14570 8DE4  
                                     u14490 8AB8                                       u15530 BA42  
                                     u16410 C640                                       u14820 1AB8  
                                     u14740 17FC                                       u15460 9A58  
                                     u15700 3B6A                                       u14581 8E14  
                                     u14590 8E2A                                       u14750 17FE  
                                     u14670 1630                                       u15470 9A78  
                                     u15390 98D8                                       u15710 3B90  
                                     u16190 62BA                                       u14591 8E28  
                                     u15640 39E6                                       u16360 34C2  
                                     u16520 F160                                       _T6CON 003F94  
                                     u15481 9AA8                                       u15465 9A3A  
                                     u16345 31F0                                       u14850 1B1C  
                                     u15490 9ABE                                       u15810 415C  
                                     u15650 39E8                                       u16370 3570  
                                     u17170 13D8                                       u15491 9ABC  
                                     u16371 356C                                       u15900 468C  
                                     u15820 415E                                       u15660 3A0E  
                                     u15580 AA42                                       u16508 F0FC  
                                     u17180 13F2                                       u14790 1A64  
                                     u16550 F1C6                                       u17190 1404  
                            __CFG_DEBUG$OFF 000000                                       u14960 1F6E  
                                     u15760 3D70                                       u17176 13DA  
                                     u14890 1B9E                                       u15690 3B68  
                                     u16538 F162                                       u16490 F0FA  
                                     u17186 13F4                                       u15780 3EE4  
                                     u17196 1406                                       u15950 B898  
                                     u15880 44DC                                       u16920 D2C6  
                                     u16760 917C                                       u16568 F1C8  
                                     u16930 D2C8                                       u16770 91A6  
                                     _T6HLT 003F95                                       u16765 916E  
                                     u16775 9198                  _ADCC_ADTI_InterruptHandler 00A1  
                                     _T2TMR 003FAA                                       _U1UIR 003DF8  
                                     _T2RST 003FAF                                       _U1RXB 003DE8  
                                     _U2UIR 003DE0                                       _U2RXB 003DD0  
                                     _U2TXB 003DD2                                       _T6TMR 003F92  
                                     _T6RST 003F97                         ??_UART1_rx_vect_isr 0006  
                                     _ISRPR 0039F1                                       _OSCEN 0039DD  
                                     _TMR3H 003FA5                                       _TMR5H 003F99  
                                     _TMR3L 003FA4                                       _TMR5L 003F98  
                 __end_of_update_adc_result 1D68                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                                     _TRISD 003FC5                                       _TRISE 003FC6  
                                     _TRISF 003FC7                                 _Default_ISR 273C  
                       __size_of_CRC_IsBusy 0010                     __size_of_clear_adc_scan 0006  
                        _current_sensor_cal 8F08           __size_of_TMR3_SetInterruptHandler 0028  
                              ___secs_to_tm 279A           __size_of_TMR6_SetInterruptHandler 0028  
                           __end_of_asctime 85CC                               __CFG_WRTB$OFF 000000  
                          __end_of_TMR3_ISR E8D6                               __CFG_WRTC$OFF 000000  
                          _cal_current_zero 0A4E                                       ___gmt FA13  
                             __CFG_WRTD$OFF 000000                            __end_of_TMR5_ISR DA0A  
                           __end_of_getname ABEC                                _DMA1CON0bits 003BFC  
                          __end_of_TMR6_ISR 255E                                _DMA1CON1bits 003BFD  
                __size_of_send_lcd_data_dma 0046                             _DATAEE_ReadByte 1F14  
                                     _fabsf 052C                             __end_of_getrule BC48  
                                     _flags 004E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0440  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 2698  
                                     _fputc F1F0                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 1B32                                       _fputs 09B6  
                           __end_of_isdigit 2006                             __end_of_ivln2_h FA1B  
                                     _put2d F314                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 1E44                                       _width 004A  
                                     _putch 2528                __end_of_set_ac_charger_relay 266E  
                           __end_of_islower 1FA6                             __end_of_isspace 180E  
                  _INT1_SetInterruptHandler 21F6                             __end_of_set_dac 052C  
                           __end_of_isupper 1FD6                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 002A  
                                     ltemp1 002E                                       ltemp2 0032  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 002A                                       ttemp1 002D  
                                     ttemp2 0030                                       ttemp3 0033  
                                     ttemp5 002B                                       ttemp6 002E  
                                     ttemp7 0032                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 217E                 _UART1_SetRxInterruptHandler 2156  
                                     wtemp0 002A                                       wtemp1 002C  
                                     wtemp2 002E                                       wtemp3 0030  
                                     wtemp4 0032                                       wtemp5 0034  
                                     wtemp8 002B                             __end_of_sprintf F87C  
                           __end_of_tolower 0EB8                             __end_of_strncmp CEB0  
                           __end_of_toupper 0E34                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 22C0                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 17BC                             _TMR5_Initialize 198C  
                     __end_of_ringBufS_init 20DE                             __initialization F87C  
                         _UART2_rx_vect_isr 22E8                               ___localtime_r C5DC  
                              __end_of_cp_h FA23                                __end_of_cp_l FA1F  
                              __end_of_atoi C13C                                __end_of_ctoa 0DB0  
                              __end_of_main 1556                                __end_of_dtoa 8F08  
                              __end_of_nanf 159A                                __end_of_time 1658  
                              __end_of_spin FA0B                                __end_of_stoa B748  
                              __end_of_utoa A8F0                                __end_of_xtoa 9B90  
                            __CFG_SAFEN$OFF 000000                          ?_UART2_rx_vect_isr 0001  
                   __end_of_TMR2_Initialize 258E                       __end_of_send_lcd_data 2334  
                  __size_of_DMA2_Initialize 005A                  __end_of_check_enter_button 119A  
                         __end_of_CRC_Start 2722                    _TMR5_SetInterruptHandler 21A6  
                             __activetblptr 000003                   __size_of_DMA1_DMASCNT_ISR 000E  
                     _TMR3_InterruptHandler 0098                           _port_data_dma_ptr 26C0  
                        esr_check@esr_state 00C6                         ??_UART2_rx_vect_isr 0006  
                                    INTCON0 003FD2        __size_of_UART2_SetRxInterruptHandler 0028  
                            __CFG_MVECEN$ON 000000                             _TMR6_Initialize 208C  
                           _PWM8_Initialize 25BA                            _UART1_Initialize 1944  
                         _UART2_tx_vect_isr 22C0                          _UART2_Transmit_ISR 2060  
                                    _ADACCU 003EEA                                      _ADACQH 003EF4  
                                    _ADACQL 003EF3                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                              _start_adc_scan 1472  
                                    _ADLTHH 003EDF                                      _ADLTHL 003EDE  
                                    STR_101 FFED                                      STR_110 FFF0  
                                    STR_103 FFF3                                      STR_120 FFF9  
                                    STR_105 FFF3                                      STR_113 FFF6  
                                    STR_122 FFEA                                      STR_115 FFF6  
                                    STR_124 FFEA                                      STR_108 FFF0  
                                    STR_118 FFF9                                      STR_127 FBDB  
                                    STR_128 FAA2                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 1B32                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 D95A  
                                    _RB6PPS 003A0E                                      i1l1209 E83E  
                      _start_switch_handler 2470                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 1A1C  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 267C                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl D4E2  
     __end_of_ADCC_DischargeSampleCapacitor 26FE      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 26F6                    __end_of_send_lcd_cmd_dma 24EC  
                           _TMR3_WriteTimer 1C74                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 2310                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 26B6  
                          _UART2_Initialize 159A                                      _WaitMs 1E0E  
                           _conv_raw_result 85CC                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset B9C8  
                                    ___flge E612                                      ___fleq 0184  
                                    ___lmul FE28                                      ___omul EA36  
                         _ADCC_ThresholdISR 1270                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 0B72  
                                    _efgtoa 1556                                      _getoff CA60  
                                    _getint FB60                                      _floorf 9F04  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset ABEC                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 F8EE  
                                    clear_1 F902                                      clear_2 F914  
                                    clear_3 F920                                      clear_4 F92C  
                                    clear_5 F938                                      clear_6 F944  
                                    clear_7 F950                                      clear_8 F95C  
                                    _t_mbmc 00BC                   __end_of_port_data_dma_ptr 26CA  
                    __size_of_read_cal_data 01CA                                      _printf 14D6  
                        _eaDogM_WriteString 0730                     __end_of_DATAEE_ReadByte 1F46  
                                    _strcpy FEFE                                   ?_ADCC_ISR 0001  
                                    _strlen 087A                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 1204  
                            _PMD_Initialize 25E6                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 22E8                            __end_of_set_time 1E0E  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 14D6  
                              __mediumconst F7D6                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 170C                            __end_of_spinners FB60  
                          __end_of_vfprintf 0686                                  _StartTimer 1BF4  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 19D4  
                         _SYSTEM_Initialize 1860                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization F96E  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 270E                        __end_of_display_info 2706  
                 __end_of_CLKREF_Initialize 26C0                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 1C34  
                     _set_temp_display_help 264E                            _clear_hid_pflags 1342  
                     __end_of_TMR3_CallBack 23A0                   __end_of_ADCC_ThresholdISR 12DA  
                     __end_of_set_hist_flag 271C                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 0C04                              __pcstackCOMRAM 0001  
                                ___inthi_sp 132C                                  ___intlo_sp 1996  
                              __pidataBANK1 07D6                                __pidataBANK2 0248  
                             __end_of___gmt FA17                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 05DA                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 12DA                              ivt0x8_undefint 00AC  
                             __end_of_fputc F314                               __end_of_fputs 0A4E  
                      _get_ac_charger_relay 268A                               __end_of_put2d F42E  
                             __end_of_srand 1E78                       __end_of_TMR5_CallBack 237C  
                             __end_of_putch 2542                        _set_ac_charger_relay 265E  
                   __end_of_PWM8_Initialize 25D0                     __end_of_TMR6_Initialize 20B6  
                         _adc_int_t_handler 0EB8                      __end_of_PMD_Initialize 25FA  
                                __end_of_bp FA13                                  ___timezone 0070  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 23E8  
               __size_of_EXT_INT_Initialize 0034                    calc_bsoc@log_update_wait 0050  
                    __size_of_calc_ror_data 0186                               _DMA1_DMAA_ISR 26D8  
                     TMR3_ISR@CountCallBack 00BE                              _clear_adc_scan 2722  
                        __size_of_hid_input 0138                          __end_of_CRC_IsBusy 264E  
                    __size_of_mode_lamp_dim 0018                            time@current_time 00D2  
                          _CRC_ReverseValue 00B6                    _UART2_RxInterruptHandler 00AD  
                 __end_of_SYSTEM_Initialize 18AE                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 1CB4  
                                __pbssBANK0 0060                                  __pbssBANK1 01A4  
                                __pbssBANK2 02BC                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 1036  
                                _check_help D0CC                               _read_cal_data D4E2  
                   __end_of_conv_raw_result 8A88                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00B3                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0007                       __end_of_days_in_month 1472  
                         __end_of_TimerDone 2106                            _DMA1_DMADCNT_ISR 26CC  
                           _convert_dac_raw F42E                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0016  
                             _init_port_dma 1F46                       __end_of_wait_lcd_done 240A  
                  __end_of_cal_current_zero 0AE0            __end_of_TMR3_SetInterruptHandler 21F6  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 21A6  
                                ??_TMR3_ISR 00E5                     __end_of_ADCC_Initialize 126E  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 0F3A  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 1128  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 226E       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 2246                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 025A                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 244E  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 2728                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1211_20 9CC6  
                                   u1310_28 2344                              ?_DMA1_DMAA_ISR 0001  
                          _DMA1_DMASCNT_ISR 26A8                                     _U1ERRIE 003DFA  
                                   u1234_20 2694                          __size_of_set_vterm 001E  
                                   _U1ERRIR 003DF9                                     u1171_25 2668  
                                   u1171_26 266A                                     u1245_20 1DA8  
                                   u1316_48 23D4                                     u1308_48 23B0  
                                   u1245_26 1DAA                                     _U2ERRIE 003DE2  
                                   _U2ERRIR 003DE1                                     u1319_28 2368  
                                   u1280_24 EF54                                     u1280_25 EF50  
                                   u1370_44 0F20                                     u1274_28 EE54  
                                   u1370_45 0F1A                                     u1276_20 EE6E  
                                   u1276_21 EE68                           _CRC_8BitDataWrite 25FA  
                                   _INT0PPS 003AC0                         __CFG_PWRTS$PWRT_OFF 000000  
                                   _INT1PPS 003AC1                                ?_Default_ISR 0001  
                                   u1665_20 4E8C                                     u1672_28 238C  
                                   u1667_20 4F56                  __size_of_UART2_tx_vect_isr 0028  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 1036                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 5286  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 2006  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 1C74                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 263E  
                __end_of_set_load_relay_two 262E           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data DEC2  
                            ___secs_to_zone 5BF8                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 255E                                     __Lparam 0000  
                  __end_of_UART1_Initialize 198C                           __end_of_hid_input F1F0  
                           __size_of_WaitMs 0036                                     ___aldiv DBA0  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv BC48                                     ___almod E4AC  
                                   ___fladd 6CC4                                     ___aomod C820  
                                   ___fldiv 7B3C                                     ___awdiv ECE8  
                                   ___flneg 18FC                             __size_of___lmul 00D6  
                                   ___awmod F546                             __size_of___omul 015A  
                                   ___lbmod 091C                                     ___flmul 649A  
                                   ___flsub 1AA8                                     ___fltol E33A  
                                   ___lodiv E048                                     ___lomod EF78  
                 __end_of_UART1_Receive_ISR 2470                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display FE28  
                                   __pcinit F87C                    __end_of_mode_lamp_bright 268A  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 266E                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 260C                                     __ptext0 0000  
                                   __ptext1 0FBA                                     __ptext2 1766  
                                   __ptext3 1658                                     __ptext4 2470  
                                   __ptext5 1E44                                     __ptext6 1DD8  
                                   __ptext7 2716                                     __ptext8 1E78  
                                   __ptext9 1EAC                           __end_of_esr_check B48A  
                         _UART2_Receive_ISR 2490                                     _asctime 80B6  
                           __size_of_printf 0062                                     _getname A8F0  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule B9C8  
                                   _dst_off 00B6                       _OSCILLATOR_Initialize 25D0  
                              __size_of_abs 0046                                __size_of_pad 0114  
                         __end_of_init_bsoc C5DC                                     us806999 EB7A  
                                   _isalpha 1AEE                                     _isdigit 1FD6  
                                   _ivln2_h FA17                                     us818999 BEB2  
                                   us914999 E1B2                                     us829999 CA4E  
                                 _T3CONbits 003FA6                                     us919999 F0A8  
                                   _mode_sw 00CC                           __end_of_lp_filter D868  
                         __end_of_localtime 25A4                                     _islower 1F76  
                                   _isspace 17BC                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 1CF2                                   _T5CONbits 003F9A  
                                   _set_dac 0476                    __end_of_UART2_Initialize 15FA  
                                   _isupper 1FA6                                   _CRC_Start 271C  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf F772                                     _tolower 0E34  
                     __size_of_display_help 0008                                     _utctime 01D7  
                   __end_of_convert_dac_raw F546                       __size_of_display_info 0008  
                                   _strncmp CC90                                     _toupper 0DB0  
                      end_of_initialization F96E                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 1128  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 1EE0  
                         __end_of_set_dac_b 1EAC                      __end_of___secs_to_zone 649A  
       __end_of_UART2_SetRxInterruptHandler 2156                 _UART2_SetRxInterruptHandler 212E  
                                 i1u1694_20 E834                     check_day_time@day_delay 0051  
                         __end_of_set_vterm 250A                                   i2u1381_48 22FC  
                                 i2u1373_48 204C                                   i2u1375_48 12A6  
                                 i2u1375_49 12BA                                   i2u1377_48 22AC  
                                 i2u1379_48 22D4                           __end_of_vfpfcnvrt 4818  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 FA6A  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 2734                   __end_of_UART2_Receive_ISR 24B0  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 10B0  
               __size_of_current_sensor_cal 0474                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 273A  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 21CE  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 217E  
                              _display_help 2706                       _TMR5_InterruptHandler 009B  
                              _display_info 26FE        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 13A8                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 2296                 _ADCC_SetADIInterruptHandler 226E  
                                asctime@buf 03C4                                  _update_lcd E8D6  
                           _calc_model_data 937C                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 1658  
                  __end_of_DATAEE_WriteByte 1342                             _DMA1_Initialize 119A  
                       __end_of_check_range 0FBA                                  _start_bsoc 242C  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 25A4                       __end_of_get_vterm_ptr 0000  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 0184  
                            __end_of_WaitMs 1E44                __end_of_INTERRUPT_Initialize 140E  
                                _vterm_dump DD34                              __end_of___flge E774  
                            __end_of___fleq 0248        __end_of_INT0_DefaultInterruptHandler 2748  
     __size_of_INT0_DefaultInterruptHandler 0002                _INT0_DefaultInterruptHandler 2746  
                __size_of_UART1_Receive_ISR 0022                             _DMA2_Initialize 170C  
                            __end_of___lmul FEFE                              __end_of___omul EB90  
                             __pidataBIGRAM A270                              _load_hist_data C13C  
                            __end_of_efgtoa 279A                  __size_of_CRC_8BitDataWrite 0012  
                         __size_of_TMR3_ISR 0162                              __end_of_getoff CC90  
                         __size_of_TMR5_ISR 01A2                              __end_of_getint FC52  
                         __size_of_TMR6_ISR 001A                         __size_of_check_help 0212  
                            __end_of_floorf A270                 __size_of_UART2_Transmit_ISR 002C  
                                floorf@F524 0074                              __end_of_memset AED8  
__end_of___month_to_secs@secs_through_month F8D7          ___month_to_secs@secs_through_month F8A7  
                            __end_of_printf 1538                    __end_of_DMA1_DMADCNT_ISR 26D6  
               __size_of_PWM8_LoadDutyValue 0042                       __end_of_INT0_CallBack 23C4  
                            __end_of_strcpy FFD2                              __end_of_strlen 091C  
                       start_initialization F87C                     __size_of_write_cal_data 0158  
      __end_of_TMR5_DefaultInterruptHandler 1DD8       __size_of_TMR5_DefaultInterruptHandler 0038  
              _TMR5_DefaultInterruptHandler 1DA0             __size_of_PIN_MANAGER_Initialize 0092  
                               __end_of_abs 1AA8                       __end_of_INT1_CallBack 2358  
                 __size_of_set_display_info 001E                                 __end_of_pad F772  
                      __size_of_Default_ISR 0006                     __size_of_CRC_Initialize 0092  
                            ___year_to_secs 5286                        __end_of_send_lcd_cmd 1BF4  
                            _switch_handler EE36               __size_of_ADCC_StartConversion 0012  
                                ivt0x8_base 0008                               _uart1RxBuffer 02D6  
                     __end_of___fpclassifyf DBA0                               _uart2RxBuffer 0600  
                  __end_of_DMA1_DMASCNT_ISR 26B6                               _uart2TxBuffer 0400  
                            _DMA1_DMAOR_ISR 26E4                         __end_of_hid_display D0CC  
                __end_of_send_port_data_dma 1860                            __CFG_LPBOREN$OFF 000000  
                     __size_of_init_display 00EA                 __size_of_eaDogM_WriteString 00A6  
           __end_of_CRC_CalculatedResultGet E33A                                   _TimerDone 20DE  
                             _ringBufS_init 20B6                      __end_of_load_hist_data C396  
                               __pdataBANK1 0100                                 __pdataBANK2 0200  
                __size_of_UART2_Receive_ISR 0020                         __size_of_get_switch 002C  
                __end_of_EXT_INT_Initialize 1F14                    __size_of_update_cal_data 0056  
                   __end_of_calc_model_data 97D6                               _send_lcd_data 2310  
                       __end_of_help_button 1DA0             __end_of_eaDogM_WriteStringAtPos 0B72  
                       __end_of_BVSOC_TABLE F8A7                                   ___asfladd 10B0  
                      calc_model_data@bcror 0088                                 __pbssBIGRAM 0A3F  
                   __end_of_DMA1_Initialize 1204                        calc_model_data@bvror 008C  
                               __pbssCOMRAM 004A                                 _check_range 0F3A  
          __end_of_INT0_SetInterruptHandler 2246                      __end_of___year_to_secs 5BF8  
                             __pcstackBANK0 00E5                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler EF78  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                    __size_of_set_hist_flag 0006                           __size_of___xxtofl 0204  
                   __end_of_SPI1_Initialize 25BA                    _UART1_RxInterruptHandler 00A7  
                  _UART2_TxInterruptHandler 00AA                                   __end_of_T F993  
                          _convert_adc_data 03BE                                   _calc_bsoc 4818  
                 __size_of_ringBufS_put_dma 00AA                                _init_display FD3E  
                    __end_of_DMA1_DMAOR_ISR 26EE                      __size_of_TMR5_CallBack 0024  
                         __size_of_do_tzset 0280                       _TMR6_InterruptHandler 009E  
                        calc_ror_data@bcror 0080                      __size_of_TMR6_CallBack 0024  
                   __end_of_DMA2_Initialize 1766                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 0C04                       __end_of___localtime_r C820  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 272E  
                       __size_of_scan_trans 003C                               __pmediumconst F7D6  
                                 __ptext100 E048                                   __ptext101 CC90  
                                 __ptext110 18FC                                   __ptext102 B48A  
                                 __ptext111 0184                                   __ptext103 1556  
                                 __ptext200 4818                                   __ptext120 087A  
                                 __ptext112 F546                                   __ptext104 0E34  
                                 __ptext201 180E                                   __ptext121 09B6  
                                 __ptext113 ECE8                                   __ptext105 1FA6  
                                 __ptext210 2748                                   __ptext202 26C0  
                                 __ptext130 250A                                   __ptext122 F1F0  
                                 __ptext114 8A88                                   __ptext106 FEFE  
                                 __ptext211 274A                                   __ptext203 10B0  
                                 __ptext131 255E                                   __ptext123 2528  
                                 __ptext115 1A62                                   __ptext107 9F04  
                                 __ptext220 23C4                                   __ptext212 1270  
                                 __ptext204 2698                                   __ptext140 DEC2  
                                 __ptext132 267C                                   __ptext124 0686  
                                 __ptext116 C820                                   __ptext108 DA0A  
                                 __ptext221 18AE                                   __ptext213 2298  
                                 __ptext205 23A0                                   __ptext141 052C  
                                 __ptext133 1B32                                   __ptext125 BEC8  
                                 __ptext117 BC48                                   __ptext109 E33A  
                                 __ptext222 26A8                                   __ptext214 244E  
                                 __ptext206 2746                                   __ptext150 242C  
                                 __ptext142 85CC                                   __ptext134 1D68  
                                 __ptext126 17BC                                   __ptext118 0D28  
                                 __ptext223 26CC                                   __ptext215 22C0  
                                 __ptext207 273C                                   __ptext151 D6AC  
                                 __ptext143 1538                                   __ptext135 20DE  
                                 __ptext127 1FD6                                   __ptext119 F65E  
                                 __ptext224 26D8                                   __ptext216 2060  
                                 __ptext208 2034                                   __ptext160 2156  
                                 __ptext152 1AA8                                   __ptext144 240A  
                                 __ptext136 1BF4                                   __ptext128 24EC  
                                 __ptext225 26E4                                   __ptext217 22E8  
                                 __ptext209 0EB8                                   __ptext161 208C  
                                 __ptext153 6CC4                                   __ptext145 D2DE  
                                 __ptext137 26FE                                   __ptext129 264E  
                                 __ptext226 0000                                   __ptext218 2490  
                                 __ptext170 25E6                                   __ptext162 217E  
                                 __ptext154 649A                                   __ptext146 7B3C  
                                 __ptext138 2706                                   __ptext219 2544  
                                 __ptext171 0C04                                   __ptext163 198C  
                                 __ptext155 1860                                   __ptext147 E612  
                                 __ptext139 1128                                   __ptext180 0C96  
                                 __ptext172 25D0                                   __ptext164 21A6  
                                 __ptext156 159A                                   __ptext148 937C  
                                 __ptext181 26B6                                   __ptext173 13A8  
                                 __ptext165 19D4                                   __ptext157 2106  
                                 __ptext149 2734                                   __ptext190 1C34  
                                 __ptext182 1204                                   __ptext174 270E  
                                 __ptext166 21CE                                   __ptext158 212E  
                                 __ptext191 2358                                   __ptext183 2246  
                                 __ptext175 1EE0                                   __ptext167 2576  
                                 __ptext159 1944                                   __ptext192 1DA0  
                                 __ptext184 226E                                   __ptext176 21F6  
                                 __ptext168 25A4                                   __ptext193 9B90  
                                 __ptext185 1CB4                                   __ptext177 221E  
                                 __ptext169 25BA                                   __ptext194 265E  
                                 __ptext186 2334                                   __ptext178 170C  
                                 __ptext195 268A                                   __ptext187 2742  
                                 __ptext179 119A                                   __ptext196 E774  
                                 __ptext188 EE36                                   __ptext197 1C74  
                                 __ptext189 D868                                   __ptext198 237C  
                                 __ptext199 2744                           __size_of_set_time 0036  
                                 _hid_input F0B8                          __end_of_StartTimer 1C34  
                        _set_load_relay_one 262E                          _set_load_relay_two 261E  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 2034  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B1B2  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc C396                      __size_of_wait_lcd_done 0022  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter D6AC  
                                 _localtime 258E                                 _hid_display CEB0  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 13A8                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2698                                    _INT1_ISR 1CB4  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 1EAC  
                                 _set_dac_b 1E78                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 237C  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2716  
                                 _set_vterm 24EC                         __size_of_update_lcd 0160  
                               _help_button 1D68                                    _TMR3_ISR E774  
                               _BVSOC_TABLE F7D7                                    _TMR5_ISR D868  
                                  _TMR6_ISR 2544          __end_of___secs_to_tm@days_in_month F8E3  
                ___secs_to_tm@days_in_month F8D7                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 386C  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 2358                                  _ADCON0bits 003EF8  
                                 _zi_read32 F974                          __end_of_check_help D2DE  
                                 _start_lcd 272E                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 23C4  
                            _write_cal_data EB90                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 2734  
                          _set_display_info 250A                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 0C96  
                               _INTCON0bits 003FD2                                   copy_data0 F890  
                                 copy_data1 F8B6                                   copy_data2 F8D8  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 221E  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 212E  
               _UART2_SetTxInterruptHandler 2106                               _days_in_month 140E  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 937C  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 23E8  
                              _send_lcd_cmd 1BB4                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 274A  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 2032  
                      __end_of_rule_to_secs 7B3C                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data ECE8                       __end_of_DMA1_DMAA_ISR 26E2  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl D2DE                      __end_of_CRC_Initialize 0D28  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 267C                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 F42E                                    __ptext11 0476  
                                  __ptext20 1BB4                                    __ptext12 1036  
                                  __ptext21 24B0                                    __ptext13 D4E2  
                                  __ptext30 261E                                    __ptext22 20B6  
                                  __ptext14 1F14                                    __ptext31 262E  
                                  __ptext23 C396                                    __ptext15 C13C  
                                  __ptext40 7480                                    __ptext32 266E  
                                  __ptext24 0304                                    __ptext16 1F46  
                                  __ptext41 140E                                    __ptext33 AED8  
                                  __ptext25 CEB0                                    __ptext17 FD3E  
                                  __ptext50 EA36                                    __ptext42 5286  
                                  __ptext34 15FA                                    __ptext26 F0B8  
                                  __ptext18 2310                                    __ptext51 FE28  
                                  __ptext43 FC52                                    __ptext35 258E  
                                  __ptext27 B1B2                                    __ptext19 1B74  
                                  __ptext60 271C                                    __ptext52 E4AC  
                                  __ptext44 B748                                    __ptext36 C5DC  
                                  __ptext28 1D2E                                    __ptext61 263E  
                                  __ptext53 DBA0                                    __ptext45 B9C8  
                                  __ptext37 5BF8                                    __ptext29 26EE  
                                  __ptext70 2722                                    __ptext62 E1C8  
                                  __ptext54 80B6                                    __ptext46 CA60  
                                  __ptext38 1CF2                                    __ptext71 0A4E  
                                  __ptext63 00B6                                    __ptext55 F314  
                                  __ptext47 FB60                                    __ptext39 F974  
                                  __ptext80 E8D6                                    __ptext72 0F3A  
                                  __ptext64 25FA                                    __ptext56 091C  
                                  __ptext48 A8F0                                    __ptext81 0AE0  
                                  __ptext73 03BE                                    __ptext65 1472  
                                  __ptext57 8F08                                    __ptext49 279A  
                                  __ptext90 ABEC                                    __ptext82 24CE  
                                  __ptext74 1342                                    __ptext66 260C  
                                  __ptext58 EB90                                    __ptext91 14D6  
                                  __ptext83 23E8                                    __ptext75 D0CC  
                                  __ptext67 26F6                                    __ptext59 12DA  
                                  __ptext92 05DA                                    __ptext84 16B2  
                                  __ptext76 DD34                                    __ptext68 FA6A  
                                  __ptext93 386C                                    __ptext85 1A1C  
                                  __ptext77 F772                                    __ptext69 2006  
                                  __ptext94 97D6                                    __ptext86 0730  
                                  __ptext78 FFD2                                    __ptext95 0DB0  
                                  __ptext87 2728                                    __ptext79 1E0E  
                                  __ptext96 1F76                                    __ptext88 272E  
                                  __ptext97 1AEE                                    __ptext89 0B72  
                                  __ptext98 A5B0                                    __ptext99 EF78  
                          __size_of_isupper 0030                                    _do_tzset B748  
                     __end_of_read_cal_data D6AC                            __size_of_sprintf 010A  
                          __size_of_tolower 0084                                    us1169999 164A  
                                  us1517999 B49C                                    us1606999 7B26  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1448999 8AA2                                    us1529999 A616  
                                  us1538999 9856                            _ringBufS_put_dma 0686  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 03BE  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 1556                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 263E  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 1F76                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 386C                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time 1DD8                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 261E                          __end_of_scan_trans 1D2E  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 16B2                  __end_of_UART2_Transmit_ISR 208C  
                                  _spinners FA6A                                    _vfprintf 05DA  
                  __end_of_convert_adc_data 0476                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 1B74        __end_of_TMR3_DefaultInterruptHandler 2746  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 2744  
      __end_of_INT1_DefaultInterruptHandler 2744       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 2742                          _send_port_data_dma 180E  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 240A  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2728                          _EXT_INT_Initialize 1EE0  
      __end_of_TMR6_DefaultInterruptHandler 18FC       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 18AE                           _send_lcd_data_dma 1A1C  
      __end_of_ADCC_DefaultInterruptHandler 274A       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 2748                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs FC52  
                         _send_lcd_cmd_long 1B74              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 265E                       __end_of_calc_ror_data E048  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 07D6  
                     __end_of_mode_lamp_dim 2576                     __end_of_adc_int_handler 274C  
                  __size_of_convert_dac_raw 0118                             _display_history AED8  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd EA36                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 16B2                          __end_of_start_bsoc 244E  
                            _FVR_Initialize 270E                      __end_of_get_raw_result 242C  
                          _send_lcd_cmd_dma 24CE                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 221E  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 1A62                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E1C8                   __end_of_send_lcd_cmd_long 1BB4  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 2742  
            __end_of_PIN_MANAGER_Initialize 0C96                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump DEC2                     _eaDogM_WriteStringAtPos 0AE0  
                             _get_vterm_ptr FFD2                              _check_adc_scan 26EE  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
