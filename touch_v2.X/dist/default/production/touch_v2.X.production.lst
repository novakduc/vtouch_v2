

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 10 23:57:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=4,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=4,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=4,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=4,class=CODE,delta=1
   106                           	psect	text84,global,reloc=4,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=4,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=4,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=4,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=4,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=4,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=4,class=CODE,delta=1
   120                           	psect	text98,global,reloc=4,class=CODE,delta=1
   121                           	psect	text99,global,reloc=4,class=CODE,delta=1
   122                           	psect	text100,global,reloc=4,class=CODE,delta=1
   123                           	psect	text101,global,reloc=4,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   131                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   132  0000                     
   133                           ; Version 2.05
   134                           ; Generated 20/12/2018 GMT
   135                           ; 
   136                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution.
   150                           ; 
   151                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   152                           ;        software without specific prior written permission.
   153                           ; 
   154                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   155                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   156                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   157                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   158                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   159                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   160                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   161                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   162                           ; 
   163                           ; 
   164                           ; Code-generator required, PIC18F57K42 Definitions
   165                           ; 
   166                           ; SFR Addresses
   167  0000                     
   168 ;;_mode	offset	0
   169 ;;_block	offset	0
   170 ;;_rxData	offset	3
   171 ;;_t_link	offset=-1 (param)
   172 ;;_k	offset	0
   173 ;;_checksum	offset	2
   174 ;;_i	offset	4
   175 ;;_byte_block	offset=-2 (param)
   176 ;;_length	offset=-3 (param)
   177 ;;_fake	offset=-4 (param)
   178 ;;_i	offset	0
   179 ;;_sum	offset	2
   180 ;;_byte_block	offset=-2 (param)
   181 ;;_byte_count	offset=-4 (param)
   182 ;;_bufData	offset=-1 (param)
   183 ;;_stream	offset=-1 (param)
   184 ;;_function	offset=-2 (param)
   185 ;;_f	offset	0
   186 ;;_ap	offset	5
   187 ;;_s	offset=-2 (param)
   188 ;;_fmt	offset=-3 (param)
   189 ;;_rxData	offset	0
   190 ;;_r_link	offset=-1 (param)
   191 ;;_byte_block	offset=-1 (param)
   192 ;;_clear	offset=-2 (param)
   193 ;;_numMilliseconds	offset=-2 (param)
   194 ;;_timer	offset=-1 (param)
   195 ;;_timer	offset=-1 (param)
   196 ;;_count	offset=-3 (param)
   197 ;;_txData	offset=-1 (param)
   198 ;;_readValue	offset	0
   199 ;;_cmd	offset=-1 (param)
   200 ;;_cmd	offset=-1 (param)
   201 ;;_data	offset=-1 (param)
   202 ;;__this	offset=-2 (param)
   203 ;;_r	offset=-1 (param)
   204 ;;_c	offset=-2 (param)
   205 ;;_strPtr	offset=-3 (param)
   206 ;;_strPtr	offset=-1 (param)
   207 ;;_cmd	offset=-1 (param)
   208 ;;_strPtr	offset=-1 (param)
   209 ;;_delay	offset=-4 (param)
   210 ;;__this	offset=-2 (param)
   211 ;;_clearBuffer	offset=-3 (param)
   212 ;;_s	offset	0
   213 ;;_k	offset	2
   214 ;;_dest	offset=-2 (param)
   215 ;;_c	offset=-4 (param)
   216 ;;_n	offset=-6 (param)
   217 ;;_ap	offset	0
   218 ;;_fmt	offset=-2 (param)
   219 ;;_cfmt	offset	0
   220 ;;_fp	offset=-2 (param)
   221 ;;_fmt	offset=-3 (param)
   222 ;;_ap	offset=-5 (param)
   223 ;;_ll	offset	0
   224 ;;_cp	offset	8
   225 ;;_c	offset	10
   226 ;;_fp	offset=-2 (param)
   227 ;;_fmt	offset=-4 (param)
   228 ;;_ap	offset=-6 (param)
   229 ;;_r	offset	0
   230 ;;_l	offset	1
   231 ;;__l	offset=-1 (param)
   232 ;;__r	offset=-2 (param)
   233 ;;_n	offset=-4 (param)
   234 ;;_nuls	offset	0
   235 ;;_l	offset	7
   236 ;;_p	offset	9
   237 ;;_cp	offset	11
   238 ;;_w	offset	13
   239 ;;_i	offset	15
   240 ;;_fp	offset=-2 (param)
   241 ;;_s	offset=-4 (param)
   242 ;;_dtoa$3821	offset	0
   243 ;;_n	offset	2
   244 ;;_i	offset	10
   245 ;;_s	offset	12
   246 ;;_w	offset	14
   247 ;;_p	offset	16
   248 ;;_fp	offset=-2 (param)
   249 ;;_d	offset=-10 (param)
   250 ;;_a	offset=-2 (param)
   251 ;;_sign	offset	0
   252 ;;_counter	offset	1
   253 ;;_dividend	offset=-8 (param)
   254 ;;_divisor	offset=-16 (param)
   255 ;;_quotient	offset	0
   256 ;;_sign	offset	8
   257 ;;_counter	offset	9
   258 ;;_dividend	offset=-8 (param)
   259 ;;_divisor	offset=-16 (param)
   260 ;;_w	offset	0
   261 ;;_fp	offset=-2 (param)
   262 ;;_c	offset=-3 (param)
   263 ;;_w	offset	0
   264 ;;_i	offset	2
   265 ;;_fp	offset=-2 (param)
   266 ;;_buf	offset=-4 (param)
   267 ;;_p	offset=-6 (param)
   268 ;;_a	offset	0
   269 ;;_s	offset=-2 (param)
   270 ;;_i	offset	0
   271 ;;_c	offset	2
   272 ;;_s	offset=-2 (param)
   273 ;;_fp	offset=-4 (param)
   274 ;;_c	offset=-2 (param)
   275 ;;_fp	offset=-4 (param)
   276 ;;_c	offset=-1 (param)
   277 ;;__this	offset=-2 (param)
   278 ;;_c	offset=-3 (param)
   279 ;;_InterruptHandler	offset=-3 (param)
   280 ;;_InterruptHandler	offset=-3 (param)
   281 ;;_InterruptHandler	offset=-3 (param)
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_state	offset	0
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_i	offset	0
   291 ;;_timerVal	offset=-2 (param)
   292                           
   293                           	psect	idataCOMRAM
   294  00598A                     __pidataCOMRAM:
   295                           	opt callstack 0
   296                           
   297                           ;initializer for r_protocol@retry
   298  00598A  03                 	db	3
   299                           
   300                           	psect	idataBANK0
   301  005890                     __pidataBANK0:
   302                           	opt callstack 0
   303                           
   304                           ;initializer for stoa@F1142
   305  005890  28                 	db	40
   306  005891  6E                 	db	110
   307  005892  75                 	db	117
   308  005893  6C                 	db	108
   309  005894  6C                 	db	108
   310  005895  29                 	db	41
   311  005896  00                 	db	0
   312                           
   313                           ;initializer for _H12
   314  005897  0000               	dw	0
   315  005899  00                 	db	0
   316  00589A  01                 	db	1
   317  00589B  0001               	dw	1
   318  00589D  0000               	dw	0
   319  00589F  01                 	db	1
   320  0058A0  80                 	db	128
   321  0058A1  02                 	db	2
   322  0058A2  81                 	db	129
   323  0058A3  00                 	db	0
   324  0058A4  00                 	db	0
   325  0058A5  0C                 	db	12
   326                           
   327                           	psect	idataBANK1
   328  004726                     __pidataBANK1:
   329                           	opt callstack 0
   330                           
   331                           ;initializer for _H10
   332  004726  0000               	dw	0
   333  004728  9F75               	dw	40821
   334  00472A  000C               	dw	12
   335  00472C  01                 	db	1
   336  00472D  80                 	db	128
   337  00472E  01                 	db	1
   338  00472F  81                 	db	129
   339  004730  00                 	db	0
   340  004731  00                 	db	0
   341  004732  0A                 	db	10
   342  004733  0000               	dw	0
   343  004735  00                 	db	0
   344  004736  00                 	db	0
   345  004737  00                 	db	0
   346  004738  00                 	db	0
   347  004739  00                 	db	0
   348  00473A  00                 	db	0
   349  00473B  00                 	db	0
   350  00473C  00                 	db	0
   351  00473D  00                 	db	0
   352  00473E  00                 	db	0
   353  00473F  0A                 	db	10
   354  004740  0000               	dw	0
   355  004742  0001               	dw	1
   356  004744  0000               	dw	0
   357  004746  01                 	db	1
   358  004747  80                 	db	128
   359  004748  00                 	db	0
   360  004749  01                 	db	1
   361  00474A  00                 	db	0
   362  00474B  00                 	db	0
   363  00474C  0A                 	db	10
   364  00474D  0000               	dw	0
   365  00474F  0D89               	dw	3465
   366  004751  0000               	dw	0
   367  004753  01                 	db	1
   368  004754  80                 	db	128
   369  004755  01                 	db	1
   370  004756  81                 	db	129
   371  004757  00                 	db	0
   372  004758  80                 	db	128
   373  004759  0A                 	db	10
   374  00475A  0000               	dw	0
   375  00475C  0D89               	dw	3465
   376  00475E  0000               	dw	0
   377  004760  01                 	db	1
   378  004761  80                 	db	128
   379  004762  11                 	db	17
   380  004763  82                 	db	130
   381  004764  00                 	db	0
   382  004765  00                 	db	0
   383  004766  0A                 	db	10
   384                           
   385                           ;initializer for _H27
   386  004767  0000               	dw	0
   387  004769  30                 	db	48
   388  00476A  31                 	db	49
   389  00476B  30                 	db	48
   390  00476C  39                 	db	57
   391  00476D  31                 	db	49
   392  00476E  31                 	db	49
   393  00476F  30                 	db	48
   394  004770  38                 	db	56
   395  004771  34                 	db	52
   396  004772  36                 	db	54
   397  004773  30                 	db	48
   398  004774  30                 	db	48
   399  004775  00                 	db	0
   400  004776  00                 	db	0
   401  004777  00                 	db	0
   402  004778  00                 	db	0
   403  004779  00                 	db	0
   404  00477A  0001               	dw	1
   405  00477C  0000               	dw	0
   406  00477E  01                 	db	1
   407  00477F  80                 	db	128
   408  004780  0D                 	db	13
   409  004781  81                 	db	129
   410  004782  00                 	db	0
   411  004783  80                 	db	128
   412  004784  1B                 	db	27
   413                           
   414                           ;initializer for _H24
   415  004785  0000               	dw	0
   416  004787  30                 	db	48
   417  004788  31                 	db	49
   418  004789  30                 	db	48
   419  00478A  39                 	db	57
   420  00478B  31                 	db	49
   421  00478C  31                 	db	49
   422  00478D  30                 	db	48
   423  00478E  38                 	db	56
   424  00478F  34                 	db	52
   425  004790  36                 	db	54
   426  004791  30                 	db	48
   427  004792  30                 	db	48
   428  004793  00                 	db	0
   429  004794  00                 	db	0
   430  004795  0001               	dw	1
   431  004797  0000               	dw	0
   432  004799  01                 	db	1
   433  00479A  80                 	db	128
   434  00479B  12                 	db	18
   435  00479C  82                 	db	130
   436  00479D  00                 	db	0
   437  00479E  00                 	db	0
   438  00479F  18                 	db	24
   439                           
   440                           ;initializer for _H18
   441  0047A0  0000               	dw	0
   442  0047A2  00                 	db	0
   443  0047A3  00                 	db	0
   444  0047A4  00                 	db	0
   445  0047A5  00                 	db	0
   446  0047A6  00                 	db	0
   447  0047A7  00                 	db	0
   448  0047A8  00                 	db	0
   449  0047A9  00                 	db	0
   450  0047AA  0001               	dw	1
   451  0047AC  0000               	dw	0
   452  0047AE  01                 	db	1
   453  0047AF  80                 	db	128
   454  0047B0  03                 	db	3
   455  0047B1  81                 	db	129
   456  0047B2  00                 	db	0
   457  0047B3  00                 	db	0
   458  0047B4  12                 	db	18
   459                           
   460                           ;initializer for _H17
   461  0047B5  0000               	dw	0
   462  0047B7  00                 	db	0
   463  0047B8  01                 	db	1
   464  0047B9  00                 	db	0
   465  0047BA  01                 	db	1
   466  0047BB  21                 	db	33
   467  0047BC  02                 	db	2
   468  0047BD  01                 	db	1
   469  0047BE  0001               	dw	1
   470  0047C0  0000               	dw	0
   471  0047C2  01                 	db	1
   472  0047C3  80                 	db	128
   473  0047C4  0E                 	db	14
   474  0047C5  81                 	db	129
   475  0047C6  00                 	db	0
   476  0047C7  00                 	db	0
   477  0047C8  11                 	db	17
   478                           
   479                           ;initializer for _H14
   480  0047C9  0000               	dw	0
   481  0047CB  00                 	db	0
   482  0047CC  41                 	db	65
   483  0047CD  11                 	db	17
   484  0047CE  01                 	db	1
   485  0047CF  0001               	dw	1
   486  0047D1  0000               	dw	0
   487  0047D3  01                 	db	1
   488  0047D4  80                 	db	128
   489  0047D5  04                 	db	4
   490  0047D6  81                 	db	129
   491  0047D7  00                 	db	0
   492  0047D8  00                 	db	0
   493  0047D9  0E                 	db	14
   494                           
   495                           ;initializer for _H13
   496  0047DA  0000               	dw	0
   497  0047DC  00                 	db	0
   498  0047DD  01                 	db	1
   499  0047DE  21                 	db	33
   500  0047DF  0001               	dw	1
   501  0047E1  0000               	dw	0
   502  0047E3  01                 	db	1
   503  0047E4  80                 	db	128
   504  0047E5  0C                 	db	12
   505  0047E6  86                 	db	134
   506  0047E7  00                 	db	0
   507  0047E8  00                 	db	0
   508  0047E9  0D                 	db	13
   509                           
   510                           	psect	idataBANK3
   511  004CB8                     __pidataBANK3:
   512                           	opt callstack 0
   513                           
   514                           ;initializer for _H53
   515  004CB8  0000               	dw	0
   516  004CBA  00                 	db	0
   517  004CBB  00                 	db	0
   518  004CBC  00                 	db	0
   519  004CBD  00                 	db	0
   520  004CBE  00                 	db	0
   521  004CBF  00                 	db	0
   522  004CC0  00                 	db	0
   523  004CC1  00                 	db	0
   524  004CC2  00                 	db	0
   525  004CC3  00                 	db	0
   526  004CC4  00                 	db	0
   527  004CC5  00                 	db	0
   528  004CC6  00                 	db	0
   529  004CC7  00                 	db	0
   530  004CC8  00                 	db	0
   531  004CC9  00                 	db	0
   532  004CCA  00                 	db	0
   533  004CCB  00                 	db	0
   534  004CCC  00                 	db	0
   535  004CCD  00                 	db	0
   536  004CCE  00                 	db	0
   537  004CCF  00                 	db	0
   538  004CD0  00                 	db	0
   539  004CD1  00                 	db	0
   540  004CD2  00                 	db	0
   541  004CD3  00                 	db	0
   542  004CD4  00                 	db	0
   543  004CD5  00                 	db	0
   544  004CD6  00                 	db	0
   545  004CD7  00                 	db	0
   546  004CD8  00                 	db	0
   547  004CD9  00                 	db	0
   548  004CDA  00                 	db	0
   549  004CDB  00                 	db	0
   550  004CDC  00                 	db	0
   551  004CDD  00                 	db	0
   552  004CDE  00                 	db	0
   553  004CDF  00                 	db	0
   554  004CE0  00                 	db	0
   555  004CE1  00                 	db	0
   556  004CE2  00                 	db	0
   557  004CE3  00                 	db	0
   558  004CE4  00                 	db	0
   559  004CE5  0001               	dw	1
   560  004CE7  0000               	dw	0
   561  004CE9  01                 	db	1
   562  004CEA  80                 	db	128
   563  004CEB  0B                 	db	11
   564  004CEC  81                 	db	129
   565  004CED  00                 	db	0
   566  004CEE  00                 	db	0
   567  004CEF  35                 	db	53
   568  004CF0  0000               	dw	0
   569  004CF2  00                 	db	0
   570  004CF3  16                 	db	22
   571  004CF4  20                 	db	32
   572  004CF5  4E                 	db	78
   573  004CF6  6F                 	db	111
   574  004CF7  77                 	db	119
   575  004CF8  20                 	db	32
   576  004CF9  57                 	db	87
   577  004CFA  65                 	db	101
   578  004CFB  20                 	db	32
   579  004CFC  41                 	db	65
   580  004CFD  72                 	db	114
   581  004CFE  65                 	db	101
   582  004CFF  20                 	db	32
   583  004D00  54                 	db	84
   584  004D01  61                 	db	97
   585  004D02  6C                 	db	108
   586  004D03  6B                 	db	107
   587  004D04  69                 	db	105
   588  004D05  6E                 	db	110
   589  004D06  67                 	db	103
   590  004D07  2E                 	db	46
   591  004D08  2E                 	db	46
   592  004D09  2E                 	db	46
   593  004D0A  00                 	db	0
   594  004D0B  00                 	db	0
   595  004D0C  00                 	db	0
   596  004D0D  00                 	db	0
   597  004D0E  00                 	db	0
   598  004D0F  00                 	db	0
   599  004D10  00                 	db	0
   600  004D11  00                 	db	0
   601  004D12  00                 	db	0
   602  004D13  00                 	db	0
   603  004D14  00                 	db	0
   604  004D15  00                 	db	0
   605  004D16  00                 	db	0
   606  004D17  00                 	db	0
   607  004D18  00                 	db	0
   608  004D19  00                 	db	0
   609  004D1A  00                 	db	0
   610  004D1B  00                 	db	0
   611  004D1C  00                 	db	0
   612  004D1D  0001               	dw	1
   613  004D1F  0000               	dw	0
   614  004D21  01                 	db	1
   615  004D22  80                 	db	128
   616  004D23  03                 	db	3
   617  004D24  8A                 	db	138
   618  004D25  00                 	db	0
   619  004D26  00                 	db	0
   620  004D27  35                 	db	53
   621  0000                     _IVTADL	set	14493
   622  0000                     _IVTADH	set	14494
   623  0000                     _IVTADU	set	14495
   624  0000                     _PIE8bits	set	14744
   625  0000                     _PIR8bits	set	14760
   626  0000                     _SCANPR	set	14839
   627  0000                     _DMA2PR	set	14836
   628  0000                     _DMA1PR	set	14835
   629  0000                     _MAINPR	set	14834
   630  0000                     _ISRPR	set	14833
   631  0000                     _PIE2bits	set	14738
   632  0000                     _PIR2bits	set	14754
   633  0000                     _PIE9bits	set	14745
   634  0000                     _PIR9bits	set	14761
   635  0000                     _PIE6bits	set	14742
   636  0000                     _PIE3bits	set	14739
   637  0000                     _PMD7	set	14791
   638  0000                     _PMD6	set	14790
   639  0000                     _PMD5	set	14789
   640  0000                     _PMD4	set	14788
   641  0000                     _PMD3	set	14787
   642  0000                     _PMD2	set	14786
   643  0000                     _PMD1	set	14785
   644  0000                     _PMD0	set	14784
   645  0000                     _OSCTUNE	set	14814
   646  0000                     _OSCFRQ	set	14815
   647  0000                     _OSCEN	set	14813
   648  0000                     _OSCCON3	set	14811
   649  0000                     _OSCCON1	set	14809
   650  0000                     _IPR8bits	set	14728
   651  0000                     _IPR9bits	set	14729
   652  0000                     _IPR7bits	set	14727
   653  0000                     _IPR5bits	set	14725
   654  0000                     _IPR1bits	set	14721
   655  0000                     _IPR3bits	set	14723
   656  0000                     _IPR6bits	set	14726
   657  0000                     _IPR2bits	set	14722
   658  0000                     _PIE7bits	set	14743
   659  0000                     _PIE5bits	set	14741
   660  0000                     _PIE1bits	set	14737
   661  0000                     _PIR7bits	set	14759
   662  0000                     _PIR5bits	set	14757
   663  0000                     _PIR1bits	set	14753
   664  0000                     _PLLR	set	118496
   665  0000                     _SPI1SDIPPS	set	15071
   666  0000                     _RC6PPS	set	14870
   667  0000                     _RC5PPS	set	14869
   668  0000                     _RA6PPS	set	14854
   669  0000                     _RA5PPS	set	14853
   670  0000                     _RA4PPS	set	14852
   671  0000                     _SPI1SCKPPS	set	15070
   672  0000                     _U1RXPPS	set	15077
   673  0000                     _INT1PPS	set	15041
   674  0000                     _INT2PPS	set	15042
   675  0000                     _INT0PPS	set	15040
   676  0000                     _RC3PPS	set	14867
   677  0000                     _RB6PPS	set	14862
   678  0000                     _U2RXPPS	set	15080
   679  0000                     _SLRCONF	set	14995
   680  0000                     _SLRCONE	set	14979
   681  0000                     _SLRCOND	set	14963
   682  0000                     _SLRCONC	set	14947
   683  0000                     _SLRCONB	set	14931
   684  0000                     _SLRCONA	set	14915
   685  0000                     _ODCOND	set	14962
   686  0000                     _ODCONC	set	14946
   687  0000                     _ODCONB	set	14930
   688  0000                     _ODCONA	set	14914
   689  0000                     _ODCONF	set	14994
   690  0000                     _ODCONE	set	14978
   691  0000                     _WPUC	set	14945
   692  0000                     _WPUA	set	14913
   693  0000                     _WPUB	set	14929
   694  0000                     _WPUE	set	14977
   695  0000                     _WPUF	set	14993
   696  0000                     _WPUD	set	14961
   697  0000                     _ANSELA	set	14912
   698  0000                     _ANSELF	set	14992
   699  0000                     _ANSELE	set	14976
   700  0000                     _ANSELB	set	14928
   701  0000                     _ANSELC	set	14944
   702  0000                     _ANSELD	set	14960
   703  0000                     _DMA1SSA	set	15353
   704  0000                     _DMA1DSZ	set	15342
   705  0000                     _DMA1SSZ	set	15351
   706  0000                     _DMA1DSA	set	15344
   707  0000                     _DMA1CON0bits	set	15356
   708  0000                     _DMA1CON1bits	set	15357
   709  0000                     _DMA1CON0	set	15356
   710  0000                     _DMA1AIRQ	set	15358
   711  0000                     _DMA1SIRQ	set	15359
   712  0000                     _DMA1CON1	set	15357
   713  0000                     _CLC1CON	set	15476
   714  0000                     _CLC1GLS3	set	15485
   715  0000                     _CLC1GLS2	set	15484
   716  0000                     _CLC1GLS1	set	15483
   717  0000                     _CLC1GLS0	set	15482
   718  0000                     _CLC1SEL3	set	15481
   719  0000                     _CLC1SEL2	set	15480
   720  0000                     _CLC1SEL1	set	15479
   721  0000                     _CLC1SEL0	set	15478
   722  0000                     _CLC1POL	set	15477
   723  0000                     _CLKRCON	set	15589
   724  0000                     _CLKRCLK	set	15590
   725  0000                     _MD1CARL	set	15613
   726  0000                     _MD1CARH	set	15614
   727  0000                     _MD1SRC	set	15612
   728  0000                     _MD1CON1bits	set	15611
   729  0000                     _MD1CON0bits	set	15610
   730  0000                     _SPI1INTFbits	set	15642
   731  0000                     _SPI1RXB	set	15632
   732  0000                     _SPI1TXB	set	15633
   733  0000                     _SPI1TCNTL	set	15634
   734  0000                     _SPI1CON0	set	15636
   735  0000                     _SPI1CLK	set	15644
   736  0000                     _SPI1BAUD	set	15641
   737  0000                     _SPI1CON2	set	15638
   738  0000                     _SPI1CON1	set	15637
   739  0000                     _U2RXB	set	15824
   740  0000                     _U2TXB	set	15826
   741  0000                     _U2ERRIE	set	15842
   742  0000                     _U2ERRIR	set	15841
   743  0000                     _U2UIR	set	15840
   744  0000                     _U2FIFO	set	15839
   745  0000                     _U2BRGH	set	15838
   746  0000                     _U2BRGL	set	15837
   747  0000                     _U2CON2	set	15836
   748  0000                     _U2CON1	set	15835
   749  0000                     _U2CON0	set	15834
   750  0000                     _U2P3L	set	15832
   751  0000                     _U2P2L	set	15830
   752  0000                     _U2P1L	set	15828
   753  0000                     _U1RXB	set	15848
   754  0000                     _U1TXB	set	15850
   755  0000                     _U1ERRIE	set	15866
   756  0000                     _U1ERRIR	set	15865
   757  0000                     _U1UIR	set	15864
   758  0000                     _U1FIFO	set	15863
   759  0000                     _U1BRGH	set	15862
   760  0000                     _U1BRGL	set	15861
   761  0000                     _U1CON2	set	15860
   762  0000                     _U1CON1	set	15859
   763  0000                     _U1CON0	set	15858
   764  0000                     _U1P3H	set	15857
   765  0000                     _U1P3L	set	15856
   766  0000                     _U1P2H	set	15855
   767  0000                     _U1P2L	set	15854
   768  0000                     _U1P1H	set	15853
   769  0000                     _U1P1L	set	15852
   770  0000                     _ADCON0	set	16120
   771  0000                     _ADCLK	set	16127
   772  0000                     _ADACT	set	16126
   773  0000                     _ADREF	set	16125
   774  0000                     _ADSTAT	set	16124
   775  0000                     _ADCON3	set	16123
   776  0000                     _ADCON2	set	16122
   777  0000                     _ADCON1	set	16121
   778  0000                     _ADPREH	set	16119
   779  0000                     _ADPREL	set	16118
   780  0000                     _ADCAP	set	16117
   781  0000                     _ADACQH	set	16116
   782  0000                     _ADACQL	set	16115
   783  0000                     _ADPCH	set	16113
   784  0000                     _ADRPT	set	16108
   785  0000                     _ADACCU	set	16106
   786  0000                     _ADSTPTH	set	16101
   787  0000                     _ADSTPTL	set	16100
   788  0000                     _ADUTHH	set	16097
   789  0000                     _ADUTHL	set	16096
   790  0000                     _ADLTHH	set	16095
   791  0000                     _ADLTHL	set	16094
   792  0000                     _NCO1CONbits	set	16190
   793  0000                     _NCO1INCL	set	16187
   794  0000                     _NCO1INCH	set	16188
   795  0000                     _NCO1INCU	set	16189
   796  0000                     _NCO1ACCL	set	16184
   797  0000                     _NCO1ACCH	set	16185
   798  0000                     _NCO1ACCU	set	16186
   799  0000                     _NCO1CLK	set	16191
   800  0000                     _NCO1CON	set	16190
   801  0000                     _LATCbits	set	16316
   802  0000                     _PORTDbits	set	16333
   803  0000                     _LATDbits	set	16317
   804  0000                     _LATEbits	set	16318
   805  0000                     _T5CONbits	set	16282
   806  0000                     _T5CON	set	16282
   807  0000                     _TMR5L	set	16280
   808  0000                     _TMR5H	set	16281
   809  0000                     _T5CLK	set	16285
   810  0000                     _T5GATE	set	16284
   811  0000                     _T5GCON	set	16283
   812  0000                     _T6CON	set	16276
   813  0000                     _T6TMR	set	16274
   814  0000                     _T6PR	set	16275
   815  0000                     _T6RST	set	16279
   816  0000                     _T6HLT	set	16277
   817  0000                     _T6CLKCON	set	16278
   818  0000                     _TRISD	set	16325
   819  0000                     _TRISC	set	16324
   820  0000                     _TRISB	set	16323
   821  0000                     _TRISA	set	16322
   822  0000                     _TRISF	set	16327
   823  0000                     _TRISE	set	16326
   824  0000                     _LATC	set	16316
   825  0000                     _LATB	set	16315
   826  0000                     _LATF	set	16319
   827  0000                     _LATA	set	16314
   828  0000                     _LATD	set	16317
   829  0000                     _LATE	set	16318
   830  0000                     _IVTLOCKbits	set	16340
   831  0000                     _IVTLOCK	set	16340
   832  0000                     _INTCON0bits	set	16338
   833  0000                     _GIE	set	130711
   834                           
   835                           	psect	smallconst
   836  002000                     __psmallconst:
   837                           	opt callstack 0
   838  002000  00                 	db	0
   839  002001                     STR_7:
   840  002001  20                 	db	32
   841  002002  45                 	db	69	;'E'
   842  002003  52                 	db	82	;'R'
   843  002004  52                 	db	82	;'R'
   844  002005  20                 	db	32
   845  002006  52                 	db	82	;'R'
   846  002007  25                 	db	37
   847  002008  64                 	db	100	;'d'
   848  002009  20                 	db	32
   849  00200A  54                 	db	84	;'T'
   850  00200B  25                 	db	37
   851  00200C  64                 	db	100	;'d'
   852  00200D  20                 	db	32
   853  00200E  45                 	db	69	;'E'
   854  00200F  25                 	db	37
   855  002010  64                 	db	100	;'d'
   856  002011  20                 	db	32
   857  002012  41                 	db	65	;'A'
   858  002013  25                 	db	37
   859  002014  64                 	db	100	;'d'
   860  002015  20                 	db	32
   861  002016  23                 	db	35
   862  002017  00                 	db	0
   863  002018                     STR_11:
   864  002018  20                 	db	32
   865  002019  52                 	db	82	;'R'
   866  00201A  25                 	db	37
   867  00201B  64                 	db	100	;'d'
   868  00201C  20                 	db	32
   869  00201D  54                 	db	84	;'T'
   870  00201E  25                 	db	37
   871  00201F  64                 	db	100	;'d'
   872  002020  20                 	db	32
   873  002021  45                 	db	69	;'E'
   874  002022  25                 	db	37
   875  002023  64                 	db	100	;'d'
   876  002024  20                 	db	32
   877  002025  41                 	db	65	;'A'
   878  002026  25                 	db	37
   879  002027  64                 	db	100	;'d'
   880  002028  20                 	db	32
   881  002029  20                 	db	32
   882  00202A  20                 	db	32
   883  00202B  23                 	db	35
   884  00202C  00                 	db	0
   885  00202D                     STR_8:
   886  00202D  20                 	db	32
   887  00202E  48                 	db	72	;'H'
   888  00202F  4F                 	db	79	;'O'
   889  002030  53                 	db	83	;'S'
   890  002031  54                 	db	84	;'T'
   891  002032  20                 	db	32
   892  002033  4D                 	db	77	;'M'
   893  002034  4F                 	db	79	;'O'
   894  002035  44                 	db	68	;'D'
   895  002036  45                 	db	69	;'E'
   896  002037  20                 	db	32
   897  002038  25                 	db	37
   898  002039  6C                 	db	108	;'l'
   899  00203A  64                 	db	100	;'d'
   900  00203B  20                 	db	32
   901  00203C  20                 	db	32
   902  00203D  20                 	db	32
   903  00203E  23                 	db	35
   904  00203F  00                 	db	0
   905  002040                     STR_10:
   906  002040  20                 	db	32
   907  002041  4C                 	db	76	;'L'
   908  002042  4F                 	db	79	;'O'
   909  002043  47                 	db	71	;'G'
   910  002044  20                 	db	32
   911  002045  4D                 	db	77	;'M'
   912  002046  4F                 	db	79	;'O'
   913  002047  44                 	db	68	;'D'
   914  002048  45                 	db	69	;'E'
   915  002049  20                 	db	32
   916  00204A  20                 	db	32
   917  00204B  20                 	db	32
   918  00204C  20                 	db	32
   919  00204D  20                 	db	32
   920  00204E  20                 	db	32
   921  00204F  23                 	db	35
   922  002050  00                 	db	0
   923  002051                     STR_9:
   924  002051  20                 	db	32
   925  002052  45                 	db	69	;'E'
   926  002053  51                 	db	81	;'Q'
   927  002054  55                 	db	85	;'U'
   928  002055  49                 	db	73	;'I'
   929  002056  50                 	db	80	;'P'
   930  002057  20                 	db	32
   931  002058  4D                 	db	77	;'M'
   932  002059  4F                 	db	79	;'O'
   933  00205A  44                 	db	68	;'D'
   934  00205B  45                 	db	69	;'E'
   935  00205C  20                 	db	32
   936  00205D  20                 	db	32
   937  00205E  20                 	db	32
   938  00205F  20                 	db	32
   939  002060  23                 	db	35
   940  002061  00                 	db	0
   941  002062                     STR_1:
   942  002062  20                 	db	32
   943  002063  52                 	db	82	;'R'
   944  002064  56                 	db	86	;'V'
   945  002065  49                 	db	73	;'I'
   946  002066  20                 	db	32
   947  002067  48                 	db	72	;'H'
   948  002068  4F                 	db	79	;'O'
   949  002069  53                 	db	83	;'S'
   950  00206A  54                 	db	84	;'T'
   951  00206B  20                 	db	32
   952  00206C  54                 	db	84	;'T'
   953  00206D  45                 	db	69	;'E'
   954  00206E  53                 	db	83	;'S'
   955  00206F  54                 	db	84	;'T'
   956  002070  45                 	db	69	;'E'
   957  002071  52                 	db	82	;'R'
   958  002072  00                 	db	0
   959  002073                     STR_4:
   960  002073  20                 	db	32
   961  002074  46                 	db	70	;'F'
   962  002075  47                 	db	71	;'G'
   963  002076  42                 	db	66	;'B'
   964  002077  40                 	db	64	;'@'
   965  002078  4D                 	db	77	;'M'
   966  002079  43                 	db	67	;'C'
   967  00207A  48                 	db	72	;'H'
   968  00207B  50                 	db	80	;'P'
   969  00207C  20                 	db	32
   970  00207D  46                 	db	70	;'F'
   971  00207E  41                 	db	65	;'A'
   972  00207F  42                 	db	66	;'B'
   973  002080  34                 	db	52	;'4'
   974  002081  00                 	db	0
   975  002082                     STR_5:
   976  002082  20                 	db	32
   977  002083  53                 	db	83	;'S'
   978  002084  25                 	db	37
   979  002085  64                 	db	100	;'d'
   980  002086  46                 	db	70	;'F'
   981  002087  25                 	db	37
   982  002088  64                 	db	100	;'d'
   983  002089  20                 	db	32
   984  00208A  23                 	db	35
   985  00208B  20                 	db	32
   986  00208C  20                 	db	32
   987  00208D  20                 	db	32
   988  00208E  20                 	db	32
   989  00208F  00                 	db	0
   990  002090                     STR_2:
   991  002090  20                 	db	32
   992  002091  56                 	db	86	;'V'
   993  002092  65                 	db	101	;'e'
   994  002093  72                 	db	114	;'r'
   995  002094  73                 	db	115	;'s'
   996  002095  69                 	db	105	;'i'
   997  002096  6F                 	db	111	;'o'
   998  002097  6E                 	db	110	;'n'
   999  002098  20                 	db	32
  1000  002099  25                 	db	37
  1001  00209A  73                 	db	115	;'s'
  1002  00209B  00                 	db	0
  1003  00209C                     STR_6:
  1004  00209C  20                 	db	32
  1005  00209D  4F                 	db	79	;'O'
  1006  00209E  4B                 	db	75	;'K'
  1007  00209F  20                 	db	32
  1008  0020A0  23                 	db	35
  1009  0020A1  00                 	db	0
  1010  0020A2                     STR_3:
  1011  0020A2  30                 	db	48	;'0'
  1012  0020A3  2E                 	db	46
  1013  0020A4  34                 	db	52	;'4'
  1014  0020A5  41                 	db	65	;'A'
  1015  0020A6  00                 	db	0
  1016  0020A7                     STR_15:
  1017  0020A7  6C                 	db	108	;'l'
  1018  0020A8  64                 	db	100	;'d'
  1019  0020A9  00                 	db	0
  1020  0020AA                     STR_19:
  1021  0020AA  6C                 	db	108	;'l'
  1022  0020AB  69                 	db	105	;'i'
  1023  0020AC  00                 	db	0
  1024  0020AD                     STR_13:
  1025  0020AD  25                 	db	37
  1026  0020AE  63                 	db	99	;'c'
  1027  0020AF  00                 	db	0
  1028  0000                     
  1029                           ; #config settings
  1030  0020B0  00                 	db	0	; dummy byte at the end
  1031  0000                     
  1032                           	psect	cinit
  1033  00458E                     __pcinit:
  1034                           	opt callstack 0
  1035  00458E                     start_initialization:
  1036                           	opt callstack 0
  1037  00458E                     __initialization:
  1038                           	opt callstack 0
  1039                           
  1040                           ; Initialize objects allocated to BANK3 (112 bytes)
  1041                           ; load TBLPTR registers with __pidataBANK3
  1042  00458E  0EB8               	movlw	low __pidataBANK3
  1043  004590  6EF6               	movwf	tblptrl,c
  1044  004592  0E4C               	movlw	high __pidataBANK3
  1045  004594  6EF7               	movwf	tblptrh,c
  1046  004596  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1047  004598  6EF8               	movwf	tblptru,c
  1048  00459A  EE00  F386         	lfsr	0,__pdataBANK3
  1049  00459E  EE20 F070          	lfsr	2,112
  1050  0045A2                     copy_data0:
  1051  0045A2  0009               	tblrd		*+
  1052  0045A4  006F FFD7 FFEE     	movff	tablat,postinc0
  1053  0045AA  50DD               	movf	postdec2,w,c
  1054  0045AC  50D9               	movf	fsr2l,w,c
  1055  0045AE  E1F9               	bnz	copy_data0
  1056                           
  1057                           ; Initialize objects allocated to BANK1 (196 bytes)
  1058                           ; load TBLPTR registers with __pidataBANK1
  1059  0045B0  0E26               	movlw	low __pidataBANK1
  1060  0045B2  6EF6               	movwf	tblptrl,c
  1061  0045B4  0E47               	movlw	high __pidataBANK1
  1062  0045B6  6EF7               	movwf	tblptrh,c
  1063  0045B8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1064  0045BA  6EF8               	movwf	tblptru,c
  1065  0045BC  EE00  F100         	lfsr	0,__pdataBANK1
  1066  0045C0  EE20 F0C4          	lfsr	2,196
  1067  0045C4                     copy_data1:
  1068  0045C4  0009               	tblrd		*+
  1069  0045C6  006F FFD7 FFEE     	movff	tablat,postinc0
  1070  0045CC  50DD               	movf	postdec2,w,c
  1071  0045CE  50D9               	movf	fsr2l,w,c
  1072  0045D0  E1F9               	bnz	copy_data1
  1073                           
  1074                           ; Initialize objects allocated to BANK0 (22 bytes)
  1075                           ; load TBLPTR registers with __pidataBANK0
  1076  0045D2  0E90               	movlw	low __pidataBANK0
  1077  0045D4  6EF6               	movwf	tblptrl,c
  1078  0045D6  0E58               	movlw	high __pidataBANK0
  1079  0045D8  6EF7               	movwf	tblptrh,c
  1080  0045DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1081  0045DC  6EF8               	movwf	tblptru,c
  1082  0045DE  EE00  F0DE         	lfsr	0,__pdataBANK0
  1083  0045E2  EE20 F016          	lfsr	2,22
  1084  0045E6                     copy_data2:
  1085  0045E6  0009               	tblrd		*+
  1086  0045E8  006F FFD7 FFEE     	movff	tablat,postinc0
  1087  0045EE  50DD               	movf	postdec2,w,c
  1088  0045F0  50D9               	movf	fsr2l,w,c
  1089  0045F2  E1F9               	bnz	copy_data2
  1090                           
  1091                           ; Initialize objects allocated to COMRAM (1 bytes)
  1092                           ; load TBLPTR registers with __pidataCOMRAM
  1093  0045F4  0E8A               	movlw	low __pidataCOMRAM
  1094  0045F6  6EF6               	movwf	tblptrl,c
  1095  0045F8  0E59               	movlw	high __pidataCOMRAM
  1096  0045FA  6EF7               	movwf	tblptrh,c
  1097  0045FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1098  0045FE  6EF8               	movwf	tblptru,c
  1099  004600  0009               	tblrd		*+	;fetch initializer
  1100  004602  006F FFD4  F05E    	movff	tablat,__pdataCOMRAM
  1101                           
  1102                           ; Clear objects allocated to BANK3 (134 bytes)
  1103  004608  EE00  F300         	lfsr	0,__pbssBANK3
  1104  00460C  0E86               	movlw	134
  1105  00460E                     clear_0:
  1106  00460E  6AEE               	clrf	postinc0,c
  1107  004610  06E8               	decf	wreg,f,c
  1108  004612  E1FD               	bnz	clear_0
  1109                           
  1110                           ; Clear objects allocated to BANK2 (256 bytes)
  1111  004614  EE00  F200         	lfsr	0,__pbssBANK2
  1112  004618  EE20 F100          	lfsr	2,256
  1113  00461C                     clear_1:
  1114  00461C  6AEE               	clrf	postinc0,c
  1115  00461E  50DD               	movf	postdec2,w,c
  1116  004620  50D9               	movf	fsr2l,w,c
  1117  004622  E1FC               	bnz	clear_1
  1118  004624  50DA               	movf	fsr2h,w,c
  1119  004626  E1FA               	bnz	clear_1
  1120                           
  1121                           ; Clear objects allocated to BANK1 (32 bytes)
  1122  004628  EE00  F1C4         	lfsr	0,__pbssBANK1
  1123  00462C  0E20               	movlw	32
  1124  00462E                     clear_2:
  1125  00462E  6AEE               	clrf	postinc0,c
  1126  004630  06E8               	decf	wreg,f,c
  1127  004632  E1FD               	bnz	clear_2
  1128                           
  1129                           ; Clear objects allocated to BANK0 (126 bytes)
  1130  004634  EE00  F060         	lfsr	0,__pbssBANK0
  1131  004638  0E7E               	movlw	126
  1132  00463A                     clear_3:
  1133  00463A  6AEE               	clrf	postinc0,c
  1134  00463C  06E8               	decf	wreg,f,c
  1135  00463E  E1FD               	bnz	clear_3
  1136                           
  1137                           ; Clear objects allocated to COMRAM (61 bytes)
  1138  004640  EE00  F001         	lfsr	0,__pbssCOMRAM
  1139  004644  0E3D               	movlw	61
  1140  004646                     clear_4:
  1141  004646  6AEE               	clrf	postinc0,c
  1142  004648  06E8               	decf	wreg,f,c
  1143  00464A  E1FD               	bnz	clear_4
  1144                           
  1145                           ;
  1146                           ; Setup IVTBASE
  1147                           ;
  1148  00464C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1149  00464E  6ED5               	movwf	213,c
  1150  004650  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1151  004652  6ED6               	movwf	214,c
  1152  004654  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1153  004656  6ED7               	movwf	215,c
  1154  004658                     end_of_initialization:
  1155                           	opt callstack 0
  1156  004658                     __end_of__initialization:
  1157                           	opt callstack 0
  1158  004658  0100               	movlb	0
  1159  00465A  EFF0  F014         	goto	_main	;jump to C main() function
  1160                           
  1161                           	psect	bssCOMRAM
  1162  000001                     __pbssCOMRAM:
  1163                           	opt callstack 0
  1164  000001                     secs_II_message@block:
  1165                           	opt callstack 0
  1166  000001                     	ds	3
  1167  000004                     _TMR5_InterruptHandler:
  1168                           	opt callstack 0
  1169  000004                     	ds	3
  1170  000007                     _TMR6_InterruptHandler:
  1171                           	opt callstack 0
  1172  000007                     	ds	3
  1173  00000A                     _ADCC_ADI_InterruptHandler:
  1174                           	opt callstack 0
  1175  00000A                     	ds	3
  1176  00000D                     _UART1_TxInterruptHandler:
  1177                           	opt callstack 0
  1178  00000D                     	ds	3
  1179  000010                     _UART1_RxInterruptHandler:
  1180                           	opt callstack 0
  1181  000010                     	ds	3
  1182  000013                     _UART2_TxInterruptHandler:
  1183                           	opt callstack 0
  1184  000013                     	ds	3
  1185  000016                     _UART2_RxInterruptHandler:
  1186                           	opt callstack 0
  1187  000016                     	ds	3
  1188  000019                     _INT2_InterruptHandler:
  1189                           	opt callstack 0
  1190  000019                     	ds	3
  1191  00001C                     _INT1_InterruptHandler:
  1192                           	opt callstack 0
  1193  00001C                     	ds	3
  1194  00001F                     _INT0_InterruptHandler:
  1195                           	opt callstack 0
  1196  00001F                     	ds	3
  1197  000022                     _nout:
  1198                           	opt callstack 0
  1199  000022                     	ds	2
  1200  000024                     _width:
  1201                           	opt callstack 0
  1202  000024                     	ds	2
  1203  000026                     _prec:
  1204                           	opt callstack 0
  1205  000026                     	ds	2
  1206  000028                     _flags:
  1207                           	opt callstack 0
  1208  000028                     	ds	2
  1209  00002A                     run_checksum@sum:
  1210                           	opt callstack 0
  1211  00002A                     	ds	2
  1212  00002C                     TMR5_ISR@CountCallBack:
  1213                           	opt callstack 0
  1214  00002C                     	ds	2
  1215  00002E                     _timer5ReloadVal:
  1216                           	opt callstack 0
  1217  00002E                     	ds	2
  1218  000030                     t_protocol@retry:
  1219                           	opt callstack 0
  1220  000030                     	ds	1
  1221  000031                     r_protocol@rxData_l:
  1222                           	opt callstack 0
  1223  000031                     	ds	1
  1224  000032                     _uart2RxCount:
  1225                           	opt callstack 0
  1226  000032                     	ds	1
  1227  000033                     _uart2RxTail:
  1228                           	opt callstack 0
  1229  000033                     	ds	1
  1230  000034                     _uart2RxHead:
  1231                           	opt callstack 0
  1232  000034                     	ds	1
  1233  000035                     _uart2TxBufferRemaining:
  1234                           	opt callstack 0
  1235  000035                     	ds	1
  1236  000036                     _uart2TxTail:
  1237                           	opt callstack 0
  1238  000036                     	ds	1
  1239  000037                     _uart2TxHead:
  1240                           	opt callstack 0
  1241  000037                     	ds	1
  1242  000038                     _uart1RxCount:
  1243                           	opt callstack 0
  1244  000038                     	ds	1
  1245  000039                     _uart1RxTail:
  1246                           	opt callstack 0
  1247  000039                     	ds	1
  1248  00003A                     _uart1RxHead:
  1249                           	opt callstack 0
  1250  00003A                     	ds	1
  1251  00003B                     _uart1TxBufferRemaining:
  1252                           	opt callstack 0
  1253  00003B                     	ds	1
  1254  00003C                     _uart1TxTail:
  1255                           	opt callstack 0
  1256  00003C                     	ds	1
  1257  00003D                     _uart1TxHead:
  1258                           	opt callstack 0
  1259  00003D                     	ds	1
  1260                           
  1261                           	psect	dataCOMRAM
  1262  00005E                     __pdataCOMRAM:
  1263                           	opt callstack 0
  1264  00005E                     r_protocol@retry:
  1265                           	opt callstack 0
  1266  00005E                     	ds	1
  1267                           
  1268                           	psect	bssBANK0
  1269  000060                     __pbssBANK0:
  1270                           	opt callstack 0
  1271  000060                     _r_block:
  1272                           	opt callstack 0
  1273  000060                     	ds	13
  1274  00006D                     _spi_link:
  1275                           	opt callstack 0
  1276  00006D                     	ds	12
  1277  000079                     _tickCount:
  1278                           	opt callstack 0
  1279  000079                     	ds	12
  1280  000085                     wdtdelay@dcount:
  1281                           	opt callstack 0
  1282  000085                     	ds	4
  1283  000089                     _V:
  1284                           	opt callstack 0
  1285  000089                     	ds	85
  1286                           
  1287                           	psect	dataBANK0
  1288  0000DE                     __pdataBANK0:
  1289                           	opt callstack 0
  1290  0000DE                     stoa@F1142:
  1291                           	opt callstack 0
  1292  0000DE                     	ds	7
  1293  0000E5                     _H12:
  1294                           	opt callstack 0
  1295  0000E5                     	ds	15
  1296                           
  1297                           	psect	bssBANK1
  1298  0001C4                     __pbssBANK1:
  1299                           	opt callstack 0
  1300  0001C4                     _dbuf:
  1301                           	opt callstack 0
  1302  0001C4                     	ds	32
  1303                           
  1304                           	psect	dataBANK1
  1305  000100                     __pdataBANK1:
  1306                           	opt callstack 0
  1307  000100                     _H10:
  1308                           	opt callstack 0
  1309  000100                     	ds	65
  1310  000141                     _H27:
  1311                           	opt callstack 0
  1312  000141                     	ds	30
  1313  00015F                     _H24:
  1314                           	opt callstack 0
  1315  00015F                     	ds	27
  1316  00017A                     _H18:
  1317                           	opt callstack 0
  1318  00017A                     	ds	21
  1319  00018F                     _H17:
  1320                           	opt callstack 0
  1321  00018F                     	ds	20
  1322  0001A3                     _H14:
  1323                           	opt callstack 0
  1324  0001A3                     	ds	17
  1325  0001B4                     _H13:
  1326                           	opt callstack 0
  1327  0001B4                     	ds	16
  1328                           
  1329                           	psect	bssBANK2
  1330  000200                     __pbssBANK2:
  1331                           	opt callstack 0
  1332  000200                     _uart2RxBuffer:
  1333                           	opt callstack 0
  1334  000200                     	ds	64
  1335  000240                     _uart2TxBuffer:
  1336                           	opt callstack 0
  1337  000240                     	ds	64
  1338  000280                     _uart1RxBuffer:
  1339                           	opt callstack 0
  1340  000280                     	ds	64
  1341  0002C0                     _uart1TxBuffer:
  1342                           	opt callstack 0
  1343  0002C0                     	ds	64
  1344                           
  1345                           	psect	bssBANK3
  1346  000300                     __pbssBANK3:
  1347                           	opt callstack 0
  1348  000300                     _ring_buf2:
  1349                           	opt callstack 0
  1350  000300                     	ds	67
  1351  000343                     _ring_buf1:
  1352                           	opt callstack 0
  1353  000343                     	ds	67
  1354                           
  1355                           	psect	dataBANK3
  1356  000386                     __pdataBANK3:
  1357                           	opt callstack 0
  1358  000386                     _H53:
  1359                           	opt callstack 0
  1360  000386                     	ds	112
  1361                           
  1362                           	psect	cstackBANK0
  1363  0000F4                     __pcstackBANK0:
  1364                           	opt callstack 0
  1365  0000F4                     ??_TMR5_ISR:
  1366                           
  1367                           ; 1 bytes @ 0x0
  1368  0000F4                     	ds	1
  1369                           
  1370                           	psect	cstackCOMRAM
  1371  00005F                     __pcstackCOMRAM:
  1372                           	opt callstack 0
  1373  00005F                     ??_TMR6_ISR:
  1374  00005F                     
  1375                           ; 1 bytes @ 0x0
  1376  00005F                     	ds	1
  1377                           
  1378 ;;
  1379 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1380 ;;
  1381 ;; *************** function _main *****************
  1382 ;; Defined at:
  1383 ;;		line 286 in file "main.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  mode            1  [STACK] enum E16893
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1  [STACK] void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl
      +, tblptrh, tblptru, prodl, prodh
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 3F/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels required when called:   14
  1403 ;; This function calls:
  1404 ;;		_SYSTEM_Initialize
  1405 ;;		_WaitMs
  1406 ;;		_eaDogM_WriteCommand
  1407 ;;		_eaDogM_WriteStringAtPos
  1408 ;;		_init_display
  1409 ;;		_r_protocol
  1410 ;;		_sprintf
  1411 ;;		_t_protocol
  1412 ;;		_wait_lcd_done
  1413 ;; This function is called by:
  1414 ;;		Startup code after reset
  1415 ;; This function uses a reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text0
  1419  0029E0                     __ptext0:
  1420                           	opt callstack 0
  1421  0029E0                     _main:
  1422                           	opt callstack 0
  1423                           
  1424                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1425  0029E0  52E6               	movf	postinc1,f,c
  1426                           
  1427                           ;main.c: 288:  UI_STATES mode;;main.c: 291:  SYSTEM_Initialize();
  1428                           
  1429                           ;incstack = 0
  1430  0029E2  EC97  F028         	call	_SYSTEM_Initialize	;wreg free
  1431                           
  1432                           ; BSR set to: 60
  1433                           ;main.c: 294:  (INTCON0bits.GIEH = 1);
  1434  0029E6  8ED2               	bsf	16338,7,c	;volatile
  1435                           
  1436                           ; BSR set to: 60
  1437                           ;main.c: 297:  (INTCON0bits.GIEL = 1);
  1438  0029E8  8CD2               	bsf	16338,6,c	;volatile
  1439                           
  1440                           ; BSR set to: 60
  1441                           ;main.c: 299:  V.ui_state = UI_STATE_INIT;
  1442  0029EA  0100               	movlb	0	; () banked
  1443  0029EC  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1444  0029EE  D146               	goto	l6993
  1445  0029F0                     l6883:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 304:    init_display();
  1449  0029F0  ECE9  F021         	call	_init_display	;wreg free
  1450                           
  1451                           ; BSR set to: 61
  1452                           ;main.c: 305:    eaDogM_WriteCommand(0b00001100);
  1453  0029F4  0E0C               	movlw	12
  1454  0029F6  6EE6               	movwf	postinc1,c
  1455  0029F8  EC73  F02C         	call	_eaDogM_WriteCommand	;wreg free
  1456                           
  1457                           ; BSR set to: 0
  1458  0029FC  90BD               	bcf	16317,0,c	;volatile
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 307:    mode = PORTDbits.RD2 + UI_STATE_EQUIP;
  1462  0029FE  A4CD               	btfss	16333,2,c	;volatile
  1463  002A00  D003               	goto	u3970
  1464  002A02  6A49               	clrf	btemp+11,c
  1465  002A04  2A49               	incf	btemp+11,f,c
  1466  002A06  D001               	goto	u3978
  1467  002A08                     u3970:
  1468  002A08  6A49               	clrf	btemp+11,c
  1469  002A0A                     u3978:
  1470  002A0A  0E01               	movlw	1
  1471  002A0C  2649               	addwf	btemp+11,f,c
  1472                           
  1473                           ;stkvar	_mode @ sp[(-1)+0]
  1474  002A0E  0EFF               	movlw	-1
  1475  002A10  0060  F127  FFE3   	movff	btemp+11,plusw1
  1476                           
  1477                           ;main.c: 308:    if (!PORTDbits.RD3) {
  1478  002A16  B6CD               	btfsc	16333,3,c	;volatile
  1479  002A18  D004               	goto	l6895
  1480                           
  1481                           ;main.c: 309:     do { LATDbits.LATD0 = 1; } while(0);
  1482  002A1A  80BD               	bsf	16317,0,c	;volatile
  1483                           
  1484                           ;main.c: 310:     mode = UI_STATE_LOG;
  1485                           ;stkvar	_mode @ sp[(-1)+0]
  1486  002A1C  0EFF               	movlw	-1
  1487  002A1E  6AE3               	clrf	plusw1,c
  1488  002A20  84E3               	bsf	plusw1,2,c
  1489  002A22                     l6895:
  1490                           
  1491                           ;main.c: 312:    V.ui_state = mode;
  1492                           ;stkvar	_mode @ sp[(-1)+0]
  1493  002A22  0EFF               	movlw	-1
  1494  002A24  006F FF8C  F08A    	movff	plusw1,_V+1	;volatile
  1495                           
  1496                           ;main.c: 313:    V.s_state = SEQ_STATE_INIT;
  1497  002A2A  0100               	movlb	0	; () banked
  1498  002A2C  6B89               	clrf	_V& (0+255),b	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 342:    sprintf(V.buf, " RVI HOST TESTER");
  1502  002A2E  0E62               	movlw	STR_1& (0+255)
  1503  002A30  6EE6               	movwf	postinc1,c
  1504  002A32  0E89               	movlw	_V& (0+255)
  1505  002A34  0F04               	addlw	4
  1506  002A36  6EE6               	movwf	postinc1,c
  1507  002A38  0E02               	movlw	2
  1508  002A3A  6EE6               	movwf	postinc1,c
  1509  002A3C  EC2F  F023         	call	_sprintf	;wreg free
  1510                           
  1511                           ;main.c: 343:    wait_lcd_done();
  1512  002A40  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;main.c: 344:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1516  002A44  0E89               	movlw	_V& (0+255)
  1517  002A46  0F04               	addlw	4
  1518  002A48  6EE6               	movwf	postinc1,c
  1519  002A4A  0E00               	movlw	0
  1520  002A4C  6EE6               	movwf	postinc1,c
  1521  002A4E  0E00               	movlw	0
  1522  002A50  6EE6               	movwf	postinc1,c
  1523  002A52  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1524                           
  1525                           ; BSR set to: 59
  1526                           ;main.c: 345:    sprintf(V.buf, " Version %s", "0.4A");
  1527  002A56  0EA2               	movlw	STR_3& (0+255)
  1528  002A58  6E49               	movwf	btemp+11,c
  1529  002A5A  0060  F127  FFE6   	movff	btemp+11,postinc1
  1530  002A60  0E20               	movlw	high __smallconst
  1531  002A62  6EE6               	movwf	postinc1,c
  1532  002A64  0E90               	movlw	STR_2& (0+255)
  1533  002A66  6EE6               	movwf	postinc1,c
  1534  002A68  0E89               	movlw	_V& (0+255)
  1535  002A6A  0F04               	addlw	4
  1536  002A6C  6EE6               	movwf	postinc1,c
  1537  002A6E  0E04               	movlw	4
  1538  002A70  6EE6               	movwf	postinc1,c
  1539  002A72  EC2F  F023         	call	_sprintf	;wreg free
  1540                           
  1541                           ;main.c: 346:    wait_lcd_done();
  1542  002A76  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;main.c: 347:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1546  002A7A  0E89               	movlw	_V& (0+255)
  1547  002A7C  0F04               	addlw	4
  1548  002A7E  6EE6               	movwf	postinc1,c
  1549  002A80  0E00               	movlw	0
  1550  002A82  6EE6               	movwf	postinc1,c
  1551  002A84  0E01               	movlw	1
  1552  002A86  6EE6               	movwf	postinc1,c
  1553  002A88  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1554                           
  1555                           ; BSR set to: 59
  1556                           ;main.c: 348:    sprintf(V.buf, " FGB@MCHP FAB4");
  1557  002A8C  0E73               	movlw	STR_4& (0+255)
  1558  002A8E  6EE6               	movwf	postinc1,c
  1559  002A90  0E89               	movlw	_V& (0+255)
  1560  002A92  0F04               	addlw	4
  1561  002A94  6EE6               	movwf	postinc1,c
  1562  002A96  0E02               	movlw	2
  1563  002A98  6EE6               	movwf	postinc1,c
  1564  002A9A  EC2F  F023         	call	_sprintf	;wreg free
  1565                           
  1566                           ;main.c: 349:    wait_lcd_done();
  1567  002A9E  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 350:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1571  002AA2  0E89               	movlw	_V& (0+255)
  1572  002AA4  0F04               	addlw	4
  1573  002AA6  6EE6               	movwf	postinc1,c
  1574  002AA8  0E00               	movlw	0
  1575  002AAA  6EE6               	movwf	postinc1,c
  1576  002AAC  0E02               	movlw	2
  1577  002AAE  6EE6               	movwf	postinc1,c
  1578  002AB0  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1579                           
  1580                           ; BSR set to: 59
  1581                           ;main.c: 352:    WaitMs(3000);
  1582  002AB4  0EB8               	movlw	184
  1583  002AB6  6EE6               	movwf	postinc1,c
  1584  002AB8  0E0B               	movlw	11
  1585  002ABA  6EE6               	movwf	postinc1,c
  1586  002ABC  ECAA  F029         	call	_WaitMs	;wreg free
  1587                           
  1588                           ;main.c: 353:    break;
  1589  002AC0  D0F3               	goto	l1245
  1590  002AC2                     l1219:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;main.c: 357:     V.r_l_state = LINK_STATE_IDLE;
  1594  002AC2  6B8B               	clrf	(_V+2)& (0+255),b	;volatile
  1595                           
  1596                           ;main.c: 358:     V.t_l_state = LINK_STATE_IDLE;
  1597  002AC4  6B8C               	clrf	(_V+3)& (0+255),b	;volatile
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 359:     V.s_state = SEQ_STATE_RX;
  1601  002AC6  0E01               	movlw	1
  1602  002AC8  6F89               	movwf	_V& (0+255),b	;volatile
  1603  002ACA  D05E               	goto	l1237
  1604  002ACC                     l6923:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;main.c: 370:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1608  002ACC  0E89               	movlw	_V& (0+255)
  1609  002ACE  0F02               	addlw	2
  1610  002AD0  6EE6               	movwf	postinc1,c
  1611  002AD2  ECFC  F017         	call	_r_protocol	;wreg free
  1612  002AD6  0E04               	movlw	4
  1613  002AD8  183E               	xorwf	btemp,w,c
  1614  002ADA  A4D8               	btfss	status,2,c
  1615  002ADC  D023               	goto	l6935
  1616                           
  1617                           ;main.c: 371:      do { LATEbits.LATE2 = 0; } while(0);
  1618  002ADE  94BE               	bcf	16318,2,c	;volatile
  1619                           
  1620                           ;main.c: 372:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1621  002AE0  0100               	movlb	0	; () banked
  1622  002AE2  51D6               	movf	(_V+77)& (0+255),w,b	;volatile
  1623  002AE4  6EE6               	movwf	postinc1,c
  1624  002AE6  0E00               	movlw	0
  1625  002AE8  6EE6               	movwf	postinc1,c
  1626  002AEA  51D5               	movf	(_V+76)& (0+255),w,b	;volatile
  1627  002AEC  6EE6               	movwf	postinc1,c
  1628  002AEE  0E00               	movlw	0
  1629  002AF0  6EE6               	movwf	postinc1,c
  1630  002AF2  0E82               	movlw	STR_5& (0+255)
  1631  002AF4  6EE6               	movwf	postinc1,c
  1632  002AF6  0E89               	movlw	_V& (0+255)
  1633  002AF8  0F04               	addlw	4
  1634  002AFA  6EE6               	movwf	postinc1,c
  1635  002AFC  0E06               	movlw	6
  1636  002AFE  6EE6               	movwf	postinc1,c
  1637  002B00  EC2F  F023         	call	_sprintf	;wreg free
  1638                           
  1639                           ;main.c: 373:      V.buf[11] = 0;
  1640  002B04  0100               	movlb	0	; () banked
  1641  002B06  6B98               	clrf	(_V+15)& (0+255),b	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 374:      wait_lcd_done();
  1645  002B08  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 375:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1649  002B0C  0E89               	movlw	_V& (0+255)
  1650  002B0E  0F04               	addlw	4
  1651  002B10  6EE6               	movwf	postinc1,c
  1652  002B12  0E00               	movlw	0
  1653  002B14  6EE6               	movwf	postinc1,c
  1654  002B16  0E00               	movlw	0
  1655  002B18  6EE6               	movwf	postinc1,c
  1656  002B1A  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1657                           
  1658                           ; BSR set to: 59
  1659                           ;main.c: 379:      V.s_state = SEQ_STATE_TX;
  1660  002B1E  0E02               	movlw	2
  1661  002B20  0100               	movlb	0	; () banked
  1662  002B22  6F89               	movwf	_V& (0+255),b	;volatile
  1663  002B24                     l6935:
  1664                           
  1665                           ;main.c: 381:     if (V.r_l_state == LINK_STATE_ERROR)
  1666  002B24  0E06               	movlw	6
  1667  002B26  0100               	movlb	0	; () banked
  1668  002B28  198B               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1669  002B2A  D010               	goto	L19
  1670  002B2C                     l6939:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 388:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1674  002B2C  0E89               	movlw	_V& (0+255)
  1675  002B2E  0F03               	addlw	3
  1676  002B30  6EE6               	movwf	postinc1,c
  1677  002B32  EC27  F01D         	call	_t_protocol	;wreg free
  1678  002B36  0E04               	movlw	4
  1679  002B38  183E               	xorwf	btemp,w,c
  1680  002B3A  A4D8               	btfss	status,2,c
  1681  002B3C  D004               	goto	l6943
  1682                           
  1683                           ;main.c: 389:      do { LATEbits.LATE2 = 0; } while(0);
  1684  002B3E  94BE               	bcf	16318,2,c	;volatile
  1685                           
  1686                           ;main.c: 390:      V.s_state = SEQ_STATE_TRIGGER;
  1687  002B40  0E03               	movlw	3
  1688  002B42  0100               	movlb	0	; () banked
  1689  002B44  6F89               	movwf	_V& (0+255),b	;volatile
  1690  002B46                     l6943:
  1691                           
  1692                           ;main.c: 392:     if (V.t_l_state == LINK_STATE_ERROR)
  1693  002B46  0E06               	movlw	6
  1694  002B48  0100               	movlb	0	; () banked
  1695  002B4A  198C               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1696  002B4C                     L19:
  1697  002B4C  A4D8               	btfss	status,2,c
  1698  002B4E  D05D               	goto	l6967
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 393:      V.s_state = SEQ_STATE_ERROR;
  1702  002B50  0E05               	movlw	5
  1703  002B52  6F89               	movwf	_V& (0+255),b	;volatile
  1704  002B54  D05A               	goto	l6967
  1705  002B56                     l6947:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 396:     V.s_state = SEQ_STATE_DONE;
  1709  002B56  0E04               	movlw	4
  1710  002B58  6F89               	movwf	_V& (0+255),b	;volatile
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;main.c: 397:     sprintf(V.buf, " OK #");
  1714  002B5A  0E9C               	movlw	STR_6& (0+255)
  1715  002B5C  6EE6               	movwf	postinc1,c
  1716  002B5E  0E89               	movlw	_V& (0+255)
  1717  002B60  0F04               	addlw	4
  1718  002B62  6EE6               	movwf	postinc1,c
  1719  002B64  0E02               	movlw	2
  1720  002B66  6EE6               	movwf	postinc1,c
  1721  002B68  EC2F  F023         	call	_sprintf	;wreg free
  1722  002B6C  94BE               	bcf	16318,2,c	;volatile
  1723                           
  1724                           ;main.c: 399:     wait_lcd_done();
  1725  002B6E  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;main.c: 400:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1729  002B72  0E89               	movlw	_V& (0+255)
  1730  002B74  0F04               	addlw	4
  1731  002B76  6EE6               	movwf	postinc1,c
  1732  002B78  0E0B               	movlw	11
  1733  002B7A  6EE6               	movwf	postinc1,c
  1734  002B7C  0E00               	movlw	0
  1735  002B7E  6EE6               	movwf	postinc1,c
  1736  002B80  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1737                           
  1738                           ;main.c: 402:     break;
  1739  002B84  D042               	goto	l6967
  1740  002B86                     l1236:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main.c: 404:     V.s_state = SEQ_STATE_INIT;
  1744  002B86  6B89               	clrf	_V& (0+255),b	;volatile
  1745  002B88                     l1237:
  1746                           
  1747                           ; BSR set to: 0
  1748  002B88  94BE               	bcf	16318,2,c	;volatile
  1749  002B8A  D03F               	goto	l6967
  1750  002B8C                     l1240:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 409:     V.s_state = SEQ_STATE_INIT;
  1754  002B8C  6B89               	clrf	_V& (0+255),b	;volatile
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 410:     sprintf(V.buf, " ERR R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort);
  1758  002B8E  51D8               	movf	(_V+79)& (0+255),w,b	;volatile
  1759  002B90  6EE6               	movwf	postinc1,c
  1760  002B92  0E00               	movlw	0
  1761  002B94  6EE6               	movwf	postinc1,c
  1762  002B96  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  1763  002B98  6EE6               	movwf	postinc1,c
  1764  002B9A  0E00               	movlw	0
  1765  002B9C  6EE6               	movwf	postinc1,c
  1766  002B9E  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1767  002BA0  6EE6               	movwf	postinc1,c
  1768  002BA2  0E00               	movlw	0
  1769  002BA4  6EE6               	movwf	postinc1,c
  1770  002BA6  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1771  002BA8  6EE6               	movwf	postinc1,c
  1772  002BAA  0E00               	movlw	0
  1773  002BAC  6EE6               	movwf	postinc1,c
  1774  002BAE  0E01               	movlw	STR_7& (0+255)
  1775  002BB0  6EE6               	movwf	postinc1,c
  1776  002BB2  0E89               	movlw	_V& (0+255)
  1777  002BB4  0F04               	addlw	4
  1778  002BB6  6EE6               	movwf	postinc1,c
  1779  002BB8  0E0A               	movlw	10
  1780  002BBA  6EE6               	movwf	postinc1,c
  1781  002BBC  EC2F  F023         	call	_sprintf	;wreg free
  1782                           
  1783                           ;main.c: 411:     wait_lcd_done();
  1784  002BC0  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 412:     eaDogM_WriteStringAtPos(0, 0, V.buf);
  1788  002BC4  0E89               	movlw	_V& (0+255)
  1789  002BC6  0F04               	addlw	4
  1790  002BC8  6EE6               	movwf	postinc1,c
  1791  002BCA  0E00               	movlw	0
  1792  002BCC  6EE6               	movwf	postinc1,c
  1793  002BCE  0E00               	movlw	0
  1794  002BD0  6EE6               	movwf	postinc1,c
  1795  002BD2  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1796                           
  1797                           ;main.c: 413:     break;
  1798  002BD6  D019               	goto	l6967
  1799  002BD8                     l6965:
  1800                           
  1801                           ; BSR set to: 0
  1802  002BD8  5189               	movf	_V& (0+255),w,b	;volatile
  1803  002BDA  6E48               	movwf	btemp+10,c
  1804  002BDC  6A49               	clrf	btemp+11,c
  1805                           
  1806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 1, Range of values is 0 to 0
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte            4     3 (average)
  1812                           ;	Chosen strategy is simple_byte
  1813  002BDE  5049               	movf	btemp+11,w,c
  1814  002BE0  0A00               	xorlw	0	; case 0
  1815  002BE2  A4D8               	btfss	status,2,c
  1816  002BE4  D7D3               	goto	l1240
  1817                           
  1818                           ; BSR set to: 0
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 6, Range of values is 0 to 5
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte           19    10 (average)
  1824                           ;	Chosen strategy is simple_byte
  1825  002BE6  5048               	movf	btemp+10,w,c
  1826  002BE8  0A00               	xorlw	0	; case 0
  1827  002BEA  B4D8               	btfsc	status,2,c
  1828  002BEC  D76A               	goto	l1219
  1829  002BEE  0A01               	xorlw	1	; case 1
  1830  002BF0  B4D8               	btfsc	status,2,c
  1831  002BF2  D76C               	goto	l6923
  1832  002BF4  0A03               	xorlw	3	; case 2
  1833  002BF6  B4D8               	btfsc	status,2,c
  1834  002BF8  D799               	goto	l6939
  1835  002BFA  0A01               	xorlw	1	; case 3
  1836  002BFC  B4D8               	btfsc	status,2,c
  1837  002BFE  D7AB               	goto	l6947
  1838  002C00  0A07               	xorlw	7	; case 4
  1839  002C02  B4D8               	btfsc	status,2,c
  1840  002C04  D7C0               	goto	l1236
  1841  002C06  0A01               	xorlw	1	; case 5
  1842  002C08  D7C1               	goto	l1240
  1843  002C0A                     l6967:
  1844                           
  1845                           ;main.c: 415:    sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1846  002C0A  0060  F337  FFE6   	movff	_V+68,postinc1
  1847  002C10  0060  F33B  FFE6   	movff	_V+69,postinc1
  1848  002C16  0060  F33F  FFE6   	movff	_V+70,postinc1
  1849  002C1C  0060  F343  FFE6   	movff	_V+71,postinc1
  1850  002C22  0E2D               	movlw	STR_8& (0+255)
  1851  002C24  6EE6               	movwf	postinc1,c
  1852  002C26  0E89               	movlw	_V& (0+255)
  1853  002C28  0F04               	addlw	4
  1854  002C2A  6EE6               	movwf	postinc1,c
  1855  002C2C  0E06               	movlw	6
  1856  002C2E  6EE6               	movwf	postinc1,c
  1857  002C30  EC2F  F023         	call	_sprintf	;wreg free
  1858  002C34                     l6969:
  1859                           
  1860                           ;main.c: 416:    V.buf[16] = 0;
  1861  002C34  0100               	movlb	0	; () banked
  1862  002C36  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;main.c: 417:    wait_lcd_done();
  1866  002C38  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;main.c: 418:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1870  002C3C  0E89               	movlw	_V& (0+255)
  1871  002C3E  0F04               	addlw	4
  1872  002C40  6EE6               	movwf	postinc1,c
  1873  002C42  0E00               	movlw	0
  1874  002C44  6EE6               	movwf	postinc1,c
  1875  002C46  0E02               	movlw	2
  1876  002C48  6EE6               	movwf	postinc1,c
  1877  002C4A  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1878                           
  1879                           ;main.c: 419:    break;
  1880  002C4E  D02C               	goto	l1245
  1881  002C50                     l6975:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;main.c: 421:    sprintf(V.buf, " EQUIP MODE    #");
  1885  002C50  0E51               	movlw	STR_9& (0+255)
  1886  002C52  6EE6               	movwf	postinc1,c
  1887  002C54  0E89               	movlw	_V& (0+255)
  1888  002C56  0F04               	addlw	4
  1889  002C58  6EE6               	movwf	postinc1,c
  1890  002C5A  0E02               	movlw	2
  1891  002C5C  6EE6               	movwf	postinc1,c
  1892  002C5E  EC2F  F023         	call	_sprintf	;wreg free
  1893  002C62  D7E8               	goto	l6969
  1894  002C64                     l6983:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;main.c: 427:    sprintf(V.buf, " LOG MODE      #");
  1898  002C64  0E40               	movlw	STR_10& (0+255)
  1899  002C66  6EE6               	movwf	postinc1,c
  1900  002C68  0E89               	movlw	_V& (0+255)
  1901  002C6A  0F04               	addlw	4
  1902  002C6C  6EE6               	movwf	postinc1,c
  1903  002C6E  0E02               	movlw	2
  1904  002C70  6EE6               	movwf	postinc1,c
  1905  002C72  EC2F  F023         	call	_sprintf	;wreg free
  1906  002C76  D7DE               	goto	l6969
  1907  002C78                     l1244:
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;main.c: 434:    V.ui_state = UI_STATE_INIT;
  1911  002C78  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1912                           
  1913                           ;main.c: 435:    break;
  1914  002C7A  D016               	goto	l1245
  1915  002C7C                     l6993:
  1916                           
  1917                           ; BSR set to: 0
  1918  002C7C  518A               	movf	(_V+1)& (0+255),w,b	;volatile
  1919  002C7E  6E48               	movwf	btemp+10,c
  1920  002C80  6A49               	clrf	btemp+11,c
  1921                           
  1922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1923                           ; Switch size 1, requested type "simple"
  1924                           ; Number of cases is 1, Range of values is 0 to 0
  1925                           ; switch strategies available:
  1926                           ; Name         Instructions Cycles
  1927                           ; simple_byte            4     3 (average)
  1928                           ;	Chosen strategy is simple_byte
  1929  002C82  5049               	movf	btemp+11,w,c
  1930  002C84  0A00               	xorlw	0	; case 0
  1931  002C86  A4D8               	btfss	status,2,c
  1932  002C88  D7F7               	goto	l1244
  1933                           
  1934                           ; BSR set to: 0
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 5, Range of values is 0 to 5
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte           16     9 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941  002C8A  5048               	movf	btemp+10,w,c
  1942  002C8C  0A00               	xorlw	0	; case 0
  1943  002C8E  B4D8               	btfsc	status,2,c
  1944  002C90  D6AF               	goto	l6883
  1945  002C92  0A01               	xorlw	1	; case 1
  1946  002C94  B4D8               	btfsc	status,2,c
  1947  002C96  D7DC               	goto	l6975
  1948  002C98  0A03               	xorlw	3	; case 2
  1949  002C9A  B4D8               	btfsc	status,2,c
  1950  002C9C  D79D               	goto	l6965
  1951  002C9E  0A06               	xorlw	6	; case 4
  1952  002CA0  B4D8               	btfsc	status,2,c
  1953  002CA2  D7E0               	goto	l6983
  1954  002CA4  0A01               	xorlw	1	; case 5
  1955  002CA6  D7E8               	goto	l1244
  1956  002CA8                     l1245:
  1957  002CA8  82BE               	bsf	16318,1,c	;volatile
  1958                           
  1959                           ;main.c: 438:   sprintf(V.buf, " R%d T%d E%d A%d   #", V.r_l_state, V.t_l_state, V.error
      +                          , V.abort);
  1960  002CAA  0100               	movlb	0	; () banked
  1961  002CAC  51D8               	movf	(_V+79)& (0+255),w,b	;volatile
  1962  002CAE  6EE6               	movwf	postinc1,c
  1963  002CB0  0E00               	movlw	0
  1964  002CB2  6EE6               	movwf	postinc1,c
  1965  002CB4  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  1966  002CB6  6EE6               	movwf	postinc1,c
  1967  002CB8  0E00               	movlw	0
  1968  002CBA  6EE6               	movwf	postinc1,c
  1969  002CBC  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1970  002CBE  6EE6               	movwf	postinc1,c
  1971  002CC0  0E00               	movlw	0
  1972  002CC2  6EE6               	movwf	postinc1,c
  1973  002CC4  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1974  002CC6  6EE6               	movwf	postinc1,c
  1975  002CC8  0E00               	movlw	0
  1976  002CCA  6EE6               	movwf	postinc1,c
  1977  002CCC  0E18               	movlw	STR_11& (0+255)
  1978  002CCE  6EE6               	movwf	postinc1,c
  1979  002CD0  0E89               	movlw	_V& (0+255)
  1980  002CD2  0F04               	addlw	4
  1981  002CD4  6EE6               	movwf	postinc1,c
  1982  002CD6  0E0A               	movlw	10
  1983  002CD8  6EE6               	movwf	postinc1,c
  1984  002CDA  EC2F  F023         	call	_sprintf	;wreg free
  1985                           
  1986                           ;main.c: 439:   V.buf[16] = 0;
  1987  002CDE  0100               	movlb	0	; () banked
  1988  002CE0  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 440:   wait_lcd_done();
  1992  002CE2  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;main.c: 441:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  1996  002CE6  0E89               	movlw	_V& (0+255)
  1997  002CE8  0F04               	addlw	4
  1998  002CEA  6EE6               	movwf	postinc1,c
  1999  002CEC  0E00               	movlw	0
  2000  002CEE  6EE6               	movwf	postinc1,c
  2001  002CF0  0E01               	movlw	1
  2002  002CF2  6EE6               	movwf	postinc1,c
  2003  002CF4  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  2004                           
  2005                           ; BSR set to: 59
  2006  002CF8  92BE               	bcf	16318,1,c	;volatile
  2007                           
  2008                           ; BSR set to: 59
  2009  002CFA  84BE               	bsf	16318,2,c	;volatile
  2010                           
  2011                           ; BSR set to: 59
  2012                           ;main.c: 444:   ++V.ticks;
  2013  002CFC  0E01               	movlw	1
  2014  002CFE  0100               	movlb	0	; () banked
  2015  002D00  27CD               	addwf	(_V+68)& (0+255),f,b	;volatile
  2016  002D02  0E00               	movlw	0
  2017  002D04  23CE               	addwfc	(_V+69)& (0+255),f,b	;volatile
  2018  002D06  23CF               	addwfc	(_V+70)& (0+255),f,b	;volatile
  2019  002D08  23D0               	addwfc	(_V+71)& (0+255),f,b	;volatile
  2020  002D0A  D7B8               	goto	l6993
  2021  002D0C                     __end_of_main:
  2022                           	opt callstack 0
  2023                           
  2024 ;; *************** function _t_protocol *****************
  2025 ;; Defined at:
  2026 ;;		line 145 in file "gemsecs.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  t_link          1  [STACK] PTR enum E16163
  2029 ;;		 -> V(85), 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  block           3  [STACK] struct response_type
  2032 ;;  rxData          1  [STACK] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1  [STACK] enum E16901
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    5
  2049 ;; This function calls:
  2050 ;;		_StartTimer
  2051 ;;		_TimerDone
  2052 ;;		_UART1_Read
  2053 ;;		_UART1_Write
  2054 ;;		_UART1_is_rx_ready
  2055 ;;		_UART1_put_buffer
  2056 ;;		_secs_II_message
  2057 ;;		_secs_send
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text1
  2064  003A4E                     __ptext1:
  2065                           	opt callstack 0
  2066  003A4E                     _t_protocol:
  2067                           	opt callstack 0
  2068                           
  2069                           ; BSR set to: 0
  2070                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2071  003A4E  52E6               	movf	postinc1,f,c
  2072  003A50  52E6               	movf	postinc1,f,c
  2073  003A52  52E6               	movf	postinc1,f,c
  2074  003A54  52E6               	movf	postinc1,f,c
  2075                           
  2076                           ;gemsecs.c: 145: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 146: {;gemsecs.
      +                          c: 147:  uint8_t rxData;;gemsecs.c: 148:  static uint8_t retry;;gemsecs.c: 149:  respons
      +                          e_type block;;gemsecs.c: 151:  switch (*t_link) {
  2077                           
  2078                           ;incstack = 0
  2079  003A56  D0EB               	goto	l6853
  2080  003A58                     l1552:
  2081                           
  2082                           ;gemsecs.c: 153:   V.error = LINK_ERROR_NONE;
  2083  003A58  0100               	movlb	0	; () banked
  2084  003A5A  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;gemsecs.c: 154:   retry = 3;
  2088  003A5C  0E03               	movlw	3
  2089  003A5E  6E30               	movwf	t_protocol@retry,c
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;gemsecs.c: 155:   UART1_Write(0x05);
  2093  003A60  0E05               	movlw	5
  2094  003A62  6EE6               	movwf	postinc1,c
  2095  003A64  ECD8  F028         	call	_UART1_Write	;wreg free
  2096                           
  2097                           ; BSR set to: 57
  2098                           ;gemsecs.c: 156:   StartTimer(TMR_T2, 2000);
  2099  003A68  0ED0               	movlw	208
  2100  003A6A  6EE6               	movwf	postinc1,c
  2101  003A6C  0E07               	movlw	7
  2102  003A6E  6EE6               	movwf	postinc1,c
  2103  003A70  0E02               	movlw	2
  2104  003A72  6EE6               	movwf	postinc1,c
  2105  003A74  EC35  F029         	call	_StartTimer	;wreg free
  2106                           
  2107                           ;gemsecs.c: 157:   *t_link = LINK_STATE_ENQ;
  2108                           ;stkvar	_t_link @ sp[(-4)+-1]
  2109  003A78  0EFB               	movlw	-5
  2110  003A7A  50E3               	movf	plusw1,w,c
  2111  003A7C  6ED9               	movwf	fsr2l,c
  2112  003A7E  6ADA               	clrf	fsr2h,c
  2113  003A80  0E01               	movlw	1
  2114  003A82  D0D3               	goto	L5
  2115  003A84                     l6785:
  2116                           
  2117                           ;gemsecs.c: 164:   if (TimerDone(TMR_T2)) {
  2118  003A84  0E02               	movlw	2
  2119  003A86  6EE6               	movwf	postinc1,c
  2120  003A88  EC51  F02B         	call	_TimerDone	;wreg free
  2121  003A8C  503E               	movf	btemp,w,c
  2122  003A8E  B4D8               	btfsc	status,2,c
  2123  003A90  D016               	goto	l6795
  2124                           
  2125                           ;gemsecs.c: 165:    if (!retry--) {
  2126  003A92  0630               	decf	t_protocol@retry,f,c
  2127  003A94  2830               	incf	t_protocol@retry,w,c
  2128  003A96  A4D8               	btfss	status,2,c
  2129  003A98  D009               	goto	l6793
  2130                           
  2131                           ;gemsecs.c: 166:     V.error = LINK_ERROR_T2;
  2132  003A9A  0E02               	movlw	2
  2133  003A9C  0100               	movlb	0	; () banked
  2134  003A9E  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;gemsecs.c: 167:     *t_link = LINK_STATE_NAK;
  2138                           ;stkvar	_t_link @ sp[(-4)+-1]
  2139  003AA0  0EFB               	movlw	-5
  2140  003AA2  50E3               	movf	plusw1,w,c
  2141  003AA4  6ED9               	movwf	fsr2l,c
  2142  003AA6  6ADA               	clrf	fsr2h,c
  2143  003AA8  0E05               	movlw	5
  2144  003AAA  D0BF               	goto	L5
  2145  003AAC                     l6793:
  2146                           
  2147                           ;gemsecs.c: 169:     StartTimer(TMR_T2, 2000);
  2148  003AAC  0ED0               	movlw	208
  2149  003AAE  6EE6               	movwf	postinc1,c
  2150  003AB0  0E07               	movlw	7
  2151  003AB2  6EE6               	movwf	postinc1,c
  2152  003AB4  0E02               	movlw	2
  2153  003AB6  6EE6               	movwf	postinc1,c
  2154  003AB8  EC35  F029         	call	_StartTimer	;wreg free
  2155  003ABC  D0D9               	goto	l6855
  2156  003ABE                     l6795:
  2157                           
  2158                           ;gemsecs.c: 172:    if (UART1_is_rx_ready()) {
  2159  003ABE  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  2160  003AC2  503E               	movf	btemp,w,c
  2161  003AC4  B4D8               	btfsc	status,2,c
  2162  003AC6  D0D4               	goto	l6855
  2163                           
  2164                           ;gemsecs.c: 173:     rxData = UART1_Read();
  2165  003AC8  ECF7  F028         	call	_UART1_Read	;wreg free
  2166                           
  2167                           ;stkvar	_rxData @ sp[(-4)+3]
  2168  003ACC  0EFF               	movlw	-1
  2169  003ACE  0060  F0FB  FFE3   	movff	btemp,plusw1
  2170                           
  2171                           ; BSR set to: 57
  2172                           ;gemsecs.c: 174:     if (rxData == 0x04) {
  2173                           ;stkvar	_rxData @ sp[(-4)+3]
  2174  003AD4  0EFF               	movlw	-1
  2175  003AD6  006F FF8C  F03E    	movff	plusw1,btemp
  2176  003ADC  0E04               	movlw	4
  2177  003ADE  183E               	xorwf	btemp,w,c
  2178  003AE0  A4D8               	btfss	status,2,c
  2179  003AE2  D00E               	goto	l6805
  2180                           
  2181                           ; BSR set to: 57
  2182                           ;gemsecs.c: 175:      StartTimer(TMR_T3, 5000);
  2183  003AE4  0E88               	movlw	136
  2184  003AE6  6EE6               	movwf	postinc1,c
  2185  003AE8  0E13               	movlw	19
  2186  003AEA  6EE6               	movwf	postinc1,c
  2187  003AEC  0E03               	movlw	3
  2188  003AEE  6EE6               	movwf	postinc1,c
  2189  003AF0  EC35  F029         	call	_StartTimer	;wreg free
  2190                           
  2191                           ;gemsecs.c: 176:      *t_link = LINK_STATE_EOT;
  2192                           ;stkvar	_t_link @ sp[(-4)+-1]
  2193  003AF4  0EFB               	movlw	-5
  2194  003AF6  50E3               	movf	plusw1,w,c
  2195  003AF8  6ED9               	movwf	fsr2l,c
  2196  003AFA  6ADA               	clrf	fsr2h,c
  2197  003AFC  0E02               	movlw	2
  2198  003AFE  6EDF               	movwf	indf2,c
  2199  003B00                     l6805:
  2200                           
  2201                           ;gemsecs.c: 178:     if (rxData == 0x05) {
  2202                           ;stkvar	_rxData @ sp[(-4)+3]
  2203  003B00  0EFF               	movlw	-1
  2204  003B02  006F FF8C  F03E    	movff	plusw1,btemp
  2205  003B08  0E05               	movlw	5
  2206  003B0A  183E               	xorwf	btemp,w,c
  2207  003B0C  A4D8               	btfss	status,2,c
  2208  003B0E  D0B0               	goto	l6855
  2209                           
  2210                           ;gemsecs.c: 179:      UART1_put_buffer(0x04);
  2211  003B10  0E04               	movlw	4
  2212  003B12  6EE6               	movwf	postinc1,c
  2213  003B14  EC95  F029         	call	_UART1_put_buffer	;wreg free
  2214  003B18                     l6809:
  2215                           
  2216                           ;gemsecs.c: 180:      *t_link = LINK_STATE_DONE;
  2217                           ;stkvar	_t_link @ sp[(-4)+-1]
  2218  003B18  0EFB               	movlw	-5
  2219  003B1A  50E3               	movf	plusw1,w,c
  2220  003B1C  6ED9               	movwf	fsr2l,c
  2221  003B1E  6ADA               	clrf	fsr2h,c
  2222  003B20  0E04               	movlw	4
  2223  003B22  D083               	goto	L5
  2224  003B24                     l6811:
  2225                           
  2226                           ;gemsecs.c: 186:   block = secs_II_message(V.stream, V.function);
  2227  003B24  0100               	movlb	0	; () banked
  2228  003B26  51D6               	movf	(_V+77)& (0+255),w,b	;volatile
  2229  003B28  6EE6               	movwf	postinc1,c
  2230  003B2A  51D5               	movf	(_V+76)& (0+255),w,b	;volatile
  2231  003B2C  6EE6               	movwf	postinc1,c
  2232  003B2E  EC43  F01E         	call	_secs_II_message	;wreg free
  2233                           
  2234                           ;stkvar	_block @ sp[(-4)+0]
  2235  003B32  0EFC               	movlw	-4
  2236  003B34  0060  F0FB  FFE3   	movff	btemp,plusw1
  2237  003B3A  0EFD               	movlw	-3
  2238  003B3C  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  2239  003B42  0EFE               	movlw	-2
  2240  003B44  0060  F103  FFE3   	movff	btemp+2,plusw1
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;gemsecs.c: 187:   if (V.abort == LINK_ERROR_ABORT) {
  2244  003B4A  0E07               	movlw	7
  2245  003B4C  19D8               	xorwf	(_V+79)& (0+255),w,b	;volatile
  2246  003B4E  A4D8               	btfss	status,2,c
  2247  003B50  D019               	goto	l6819
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;gemsecs.c: 188:    secs_send((uint8_t*) block.header, block.length, 0);
  2251  003B52  0E00               	movlw	0
  2252  003B54  6EE6               	movwf	postinc1,c
  2253                           
  2254                           ;stkvar	_block @ sp[(-5)+0]
  2255  003B56  0EFD               	movlw	253
  2256  003B58  24E1               	addwf	fsr1l,w,c
  2257  003B5A  6ED9               	movwf	fsr2l,c
  2258  003B5C  0EFF               	movlw	255
  2259  003B5E  20E2               	addwfc	fsr1h,w,c
  2260  003B60  6EDA               	movwf	fsr2h,c
  2261  003B62  50DF               	movf	indf2,w,c
  2262  003B64  6EE6               	movwf	postinc1,c
  2263                           
  2264                           ;stkvar	_block @ sp[(-6)+0]
  2265  003B66  0EFA               	movlw	-6
  2266  003B68  006F FF8F FFE6     	movff	plusw1,postinc1
  2267  003B6E  006F FF8F FFE6     	movff	plusw1,postinc1
  2268  003B74  EC35  F01F         	call	_secs_send	;wreg free
  2269  003B78                     l6817:
  2270                           
  2271                           ;gemsecs.c: 189:    *t_link = LINK_STATE_ERROR;
  2272                           ;stkvar	_t_link @ sp[(-4)+-1]
  2273  003B78  0EFB               	movlw	-5
  2274  003B7A  50E3               	movf	plusw1,w,c
  2275  003B7C  6ED9               	movwf	fsr2l,c
  2276  003B7E  6ADA               	clrf	fsr2h,c
  2277  003B80  0E06               	movlw	6
  2278  003B82  D053               	goto	L5
  2279  003B84                     l6819:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;gemsecs.c: 191:    secs_send((uint8_t*) block.header, block.length, 0);
  2283  003B84  0E00               	movlw	0
  2284  003B86  6EE6               	movwf	postinc1,c
  2285                           
  2286                           ;stkvar	_block @ sp[(-5)+0]
  2287  003B88  0EFD               	movlw	253
  2288  003B8A  24E1               	addwf	fsr1l,w,c
  2289  003B8C  6ED9               	movwf	fsr2l,c
  2290  003B8E  0EFF               	movlw	255
  2291  003B90  20E2               	addwfc	fsr1h,w,c
  2292  003B92  6EDA               	movwf	fsr2h,c
  2293  003B94  50DF               	movf	indf2,w,c
  2294  003B96  6EE6               	movwf	postinc1,c
  2295                           
  2296                           ;stkvar	_block @ sp[(-6)+0]
  2297  003B98  0EFA               	movlw	-6
  2298  003B9A  006F FF8F FFE6     	movff	plusw1,postinc1
  2299  003BA0  006F FF8F FFE6     	movff	plusw1,postinc1
  2300  003BA6  EC35  F01F         	call	_secs_send	;wreg free
  2301                           
  2302                           ;gemsecs.c: 192:    if (V.error == LINK_ERROR_NONE) {
  2303  003BAA  0100               	movlb	0	; () banked
  2304  003BAC  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  2305  003BAE  A4D8               	btfss	status,2,c
  2306  003BB0  D7E3               	goto	l6817
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;gemsecs.c: 193:     *t_link = LINK_STATE_ACK;
  2310                           ;stkvar	_t_link @ sp[(-4)+-1]
  2311  003BB2  0EFB               	movlw	-5
  2312  003BB4  50E3               	movf	plusw1,w,c
  2313  003BB6  6ED9               	movwf	fsr2l,c
  2314  003BB8  6ADA               	clrf	fsr2h,c
  2315  003BBA  0E03               	movlw	3
  2316  003BBC  D036               	goto	L5
  2317  003BBE                     l6827:
  2318                           
  2319                           ;gemsecs.c: 204:   if (TimerDone(TMR_T3)) {
  2320  003BBE  0E03               	movlw	3
  2321  003BC0  6EE6               	movwf	postinc1,c
  2322  003BC2  EC51  F02B         	call	_TimerDone	;wreg free
  2323  003BC6  503E               	movf	btemp,w,c
  2324  003BC8  B4D8               	btfsc	status,2,c
  2325  003BCA  D002               	goto	l6833
  2326                           
  2327                           ;gemsecs.c: 205:    V.error = LINK_ERROR_T3;
  2328  003BCC  0E03               	movlw	3
  2329  003BCE  D766               	goto	L6
  2330  003BD0                     l6833:
  2331                           
  2332                           ;gemsecs.c: 208:    if (UART1_is_rx_ready()) {
  2333  003BD0  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  2334  003BD4  503E               	movf	btemp,w,c
  2335  003BD6  B4D8               	btfsc	status,2,c
  2336  003BD8  D04B               	goto	l6855
  2337                           
  2338                           ;gemsecs.c: 209:     rxData = UART1_Read();
  2339  003BDA  ECF7  F028         	call	_UART1_Read	;wreg free
  2340                           
  2341                           ;stkvar	_rxData @ sp[(-4)+3]
  2342  003BDE  0EFF               	movlw	-1
  2343  003BE0  0060  F0FB  FFE3   	movff	btemp,plusw1
  2344                           
  2345                           ; BSR set to: 57
  2346                           ;gemsecs.c: 210:     if (rxData == 0x06) {
  2347                           ;stkvar	_rxData @ sp[(-4)+3]
  2348  003BE6  0EFF               	movlw	-1
  2349  003BE8  006F FF8C  F03E    	movff	plusw1,btemp
  2350  003BEE  0E06               	movlw	6
  2351  003BF0  183E               	xorwf	btemp,w,c
  2352  003BF2  A4D8               	btfss	status,2,c
  2353  003BF4  D03D               	goto	l6855
  2354                           
  2355                           ; BSR set to: 57
  2356                           ;gemsecs.c: 211:      V.failed_send = 0;
  2357  003BF6  0100               	movlb	0	; () banked
  2358  003BF8  97DD               	bcf	(_V+84)& (0+255),3,b	;volatile
  2359  003BFA  D78E               	goto	l6809
  2360  003BFC                     l1572:
  2361                           
  2362                           ;gemsecs.c: 218:   V.failed_send = 1;
  2363  003BFC  0100               	movlb	0	; () banked
  2364  003BFE  87DD               	bsf	(_V+84)& (0+255),3,b	;volatile
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;gemsecs.c: 219:   *t_link = LINK_STATE_ERROR;
  2368                           ;stkvar	_t_link @ sp[(-4)+-1]
  2369  003C00  0EFB               	movlw	-5
  2370  003C02  50E3               	movf	plusw1,w,c
  2371  003C04  6ED9               	movwf	fsr2l,c
  2372  003C06  6ADA               	clrf	fsr2h,c
  2373  003C08  0E06               	movlw	6
  2374  003C0A  6EDF               	movwf	indf2,c
  2375                           
  2376                           ;gemsecs.c: 220:   while ((uart1RxCount)) {
  2377  003C0C  D002               	goto	l6847
  2378  003C0E                     l6845:
  2379                           
  2380                           ;gemsecs.c: 221:    UART1_Read();
  2381  003C0E  ECF7  F028         	call	_UART1_Read	;wreg free
  2382  003C12                     l6847:
  2383                           
  2384                           ;gemsecs.c: 220:   while ((uart1RxCount)) {
  2385  003C12  5038               	movf	_uart1RxCount,w,c	;volatile
  2386  003C14  B4D8               	btfsc	status,2,c
  2387  003C16  D02C               	goto	l6855
  2388  003C18  D7FA               	goto	l6845
  2389  003C1A                     l1577:
  2390                           
  2391                           ;gemsecs.c: 227:   V.failed_send = 0;
  2392  003C1A  0100               	movlb	0	; () banked
  2393  003C1C  97DD               	bcf	(_V+84)& (0+255),3,b	;volatile
  2394                           
  2395                           ;gemsecs.c: 228:   break;
  2396  003C1E  D028               	goto	l6855
  2397  003C20                     l6849:
  2398                           
  2399                           ;gemsecs.c: 230:   *t_link = LINK_STATE_IDLE;
  2400                           ;stkvar	_t_link @ sp[(-4)+-1]
  2401  003C20  0EFB               	movlw	-5
  2402  003C22  50E3               	movf	plusw1,w,c
  2403  003C24  6ED9               	movwf	fsr2l,c
  2404  003C26  6ADA               	clrf	fsr2h,c
  2405  003C28  0E00               	movlw	0
  2406  003C2A                     L5:
  2407  003C2A  6EDF               	movwf	indf2,c
  2408                           
  2409                           ;gemsecs.c: 231:   break;
  2410  003C2C  D021               	goto	l6855
  2411  003C2E                     l6853:
  2412                           
  2413                           ;stkvar	_t_link @ sp[(-4)+-1]
  2414  003C2E  0EFB               	movlw	-5
  2415  003C30  50E3               	movf	plusw1,w,c
  2416  003C32  6ED9               	movwf	fsr2l,c
  2417  003C34  6ADA               	clrf	fsr2h,c
  2418  003C36  50DF               	movf	indf2,w,c
  2419  003C38  6E48               	movwf	btemp+10,c
  2420  003C3A  6A49               	clrf	btemp+11,c
  2421                           
  2422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2423                           ; Switch size 1, requested type "simple"
  2424                           ; Number of cases is 1, Range of values is 0 to 0
  2425                           ; switch strategies available:
  2426                           ; Name         Instructions Cycles
  2427                           ; simple_byte            4     3 (average)
  2428                           ;	Chosen strategy is simple_byte
  2429  003C3C  5049               	movf	btemp+11,w,c
  2430  003C3E  0A00               	xorlw	0	; case 0
  2431  003C40  A4D8               	btfss	status,2,c
  2432  003C42  D7EE               	goto	l6849
  2433                           
  2434                           ; Switch size 1, requested type "simple"
  2435                           ; Number of cases is 7, Range of values is 0 to 6
  2436                           ; switch strategies available:
  2437                           ; Name         Instructions Cycles
  2438                           ; simple_byte           22    12 (average)
  2439                           ;	Chosen strategy is simple_byte
  2440  003C44  5048               	movf	btemp+10,w,c
  2441  003C46  0A00               	xorlw	0	; case 0
  2442  003C48  B4D8               	btfsc	status,2,c
  2443  003C4A  D706               	goto	l1552
  2444  003C4C  0A01               	xorlw	1	; case 1
  2445  003C4E  B4D8               	btfsc	status,2,c
  2446  003C50  D719               	goto	l6785
  2447  003C52  0A03               	xorlw	3	; case 2
  2448  003C54  B4D8               	btfsc	status,2,c
  2449  003C56  D766               	goto	l6811
  2450  003C58  0A01               	xorlw	1	; case 3
  2451  003C5A  B4D8               	btfsc	status,2,c
  2452  003C5C  D7B0               	goto	l6827
  2453  003C5E  0A07               	xorlw	7	; case 4
  2454  003C60  B4D8               	btfsc	status,2,c
  2455  003C62  D7DB               	goto	l1577
  2456  003C64  0A01               	xorlw	1	; case 5
  2457  003C66  B4D8               	btfsc	status,2,c
  2458  003C68  D7C9               	goto	l1572
  2459  003C6A  0A03               	xorlw	3	; case 6
  2460  003C6C  A4D8               	btfss	status,2,c
  2461  003C6E  D7D8               	goto	l6849
  2462  003C70                     l6855:
  2463                           
  2464                           ;gemsecs.c: 234:  return *t_link;
  2465                           ;stkvar	_t_link @ sp[(-4)+-1]
  2466  003C70  0EFB               	movlw	-5
  2467  003C72  50E3               	movf	plusw1,w,c
  2468  003C74  6ED9               	movwf	fsr2l,c
  2469  003C76  6ADA               	clrf	fsr2h,c
  2470  003C78  50DF               	movf	indf2,w,c
  2471  003C7A  6E3E               	movwf	btemp,c
  2472                           
  2473                           ; _t_protocol: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2474  003C7C  0EFB               	movlw	251
  2475  003C7E  26E1               	addwf	fsr1l,f,c
  2476  003C80  0EFF               	movlw	255
  2477  003C82  22E2               	addwfc	fsr1h,f,c
  2478  003C84  0012               	return		;funcret
  2479  003C86                     __end_of_t_protocol:
  2480                           	opt callstack 0
  2481                           
  2482 ;; *************** function _secs_send *****************
  2483 ;; Defined at:
  2484 ;;		line 238 in file "gemsecs.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  byte_block      2  [STACK] PTR unsigned char 
  2487 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2488 ;;		 -> H17(20), H14(17), H13(16), H12(15), 
  2489 ;;		 -> H10(65), 
  2490 ;;  length          1  [STACK] unsigned char 
  2491 ;;  fake            1  [STACK] _Bool 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  k               2  [STACK] PTR unsigned char 
  2494 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2495 ;;		 -> H17(20), H14(17), H13(16), H12(15), 
  2496 ;;		 -> H10(65), 
  2497 ;;  checksum        2  [STACK] unsigned short 
  2498 ;;  i               1  [STACK] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1  [STACK] _Bool 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2503 ;; Tracked objects:
  2504 ;;		On entry : 3F/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    4
  2515 ;; This function calls:
  2516 ;;		_UART1_Write
  2517 ;;		_UART1_is_tx_ready
  2518 ;;		_UART1_put_buffer
  2519 ;;		_block_checksum
  2520 ;; This function is called by:
  2521 ;;		_t_protocol
  2522 ;; This function uses a reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text2
  2526  003E6A                     __ptext2:
  2527                           	opt callstack 0
  2528  003E6A                     _secs_send:
  2529                           	opt callstack 0
  2530                           
  2531                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2532  003E6A  0E05               	movlw	5
  2533  003E6C  26E1               	addwf	fsr1l,f,c
  2534  003E6E  0E00               	movlw	0
  2535  003E70  22E2               	addwfc	fsr1h,f,c
  2536                           
  2537                           ;gemsecs.c: 238: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 239: {;gemsecs.c: 240:  uint8_t i, *k;;gemsecs.c: 241:  uint16_t checksum;;gemsecs.
      +                          c: 243:  k = (uint8_t *) byte_block;
  2538                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2539                           
  2540                           ;incstack = 0
  2541  003E72  0EF9               	movlw	-7
  2542  003E74  006F FF8C  F048    	movff	plusw1,btemp+10
  2543  003E7A  0EFA               	movlw	-6
  2544  003E7C  006F FF8C  F049    	movff	plusw1,btemp+11
  2545                           
  2546                           ;stkvar	_k @ sp[(-5)+0]
  2547  003E82  0EFC               	movlw	-4
  2548  003E84  0060  F127  FFE3   	movff	btemp+11,plusw1
  2549  003E8A  0EFB               	movlw	-5
  2550  003E8C  0060  F123  FFE3   	movff	btemp+10,plusw1
  2551                           
  2552                           ;gemsecs.c: 245:  V.error = LINK_ERROR_NONE;
  2553  003E92  0100               	movlb	0	; () banked
  2554  003E94  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;gemsecs.c: 246:  if ((length - 3) != k[length - 1]) {
  2558                           ;stkvar	_length @ sp[(-5)+-3]
  2559  003E96  0EF8               	movlw	-8
  2560  003E98  50E3               	movf	plusw1,w,c
  2561  003E9A  6E48               	movwf	btemp+10,c
  2562  003E9C  6A49               	clrf	btemp+11,c
  2563                           
  2564                           ;stkvar	_k @ sp[(-5)+0]
  2565  003E9E  0EFB               	movlw	-5
  2566  003EA0  50E3               	movf	plusw1,w,c
  2567  003EA2  2648               	addwf	btemp+10,f,c
  2568  003EA4  0EFC               	movlw	-4
  2569  003EA6  50E3               	movf	plusw1,w,c
  2570  003EA8  2249               	addwfc	btemp+11,f,c
  2571  003EAA  0EFF               	movlw	255
  2572  003EAC  2448               	addwf	btemp+10,w,c
  2573  003EAE  6ED9               	movwf	fsr2l,c
  2574  003EB0  0EFF               	movlw	255
  2575  003EB2  2049               	addwfc	btemp+11,w,c
  2576  003EB4  6EDA               	movwf	fsr2h,c
  2577  003EB6  50DF               	movf	indf2,w,c
  2578  003EB8  6E48               	movwf	btemp+10,c
  2579  003EBA  6A49               	clrf	btemp+11,c
  2580  003EBC  0EFD               	movlw	253
  2581  003EBE  6E46               	movwf	btemp+8,c
  2582  003EC0  0EFF               	movlw	255
  2583  003EC2  6E47               	movwf	btemp+9,c
  2584                           
  2585                           ;stkvar	_length @ sp[(-5)+-3]
  2586  003EC4  0EF8               	movlw	-8
  2587  003EC6  50E3               	movf	plusw1,w,c
  2588  003EC8  6E44               	movwf	btemp+6,c
  2589  003ECA  6A45               	clrf	btemp+7,c
  2590  003ECC  5046               	movf	btemp+8,w,c
  2591  003ECE  2644               	addwf	btemp+6,f,c
  2592  003ED0  5047               	movf	btemp+9,w,c
  2593  003ED2  2245               	addwfc	btemp+7,f,c
  2594  003ED4  5048               	movf	btemp+10,w,c
  2595  003ED6  1844               	xorwf	btemp+6,w,c
  2596  003ED8  E104               	bnz	u3810
  2597  003EDA  5049               	movf	btemp+11,w,c
  2598  003EDC  1845               	xorwf	btemp+7,w,c
  2599  003EDE  B4D8               	btfsc	status,2,c
  2600  003EE0  D003               	goto	l6669
  2601  003EE2                     u3810:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;gemsecs.c: 247:   V.error = LINK_ERROR_SEND;
  2605  003EE2  0E08               	movlw	8
  2606  003EE4  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  2607  003EE6  D098               	goto	l1583
  2608  003EE8                     l6669:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;gemsecs.c: 256:  checksum = block_checksum(&k[2], length - 3);
  2612  003EE8  0EFD               	movlw	253
  2613  003EEA  6E48               	movwf	btemp+10,c
  2614  003EEC  0EFF               	movlw	255
  2615  003EEE  6E49               	movwf	btemp+11,c
  2616                           
  2617                           ;stkvar	_length @ sp[(-5)+-3]
  2618  003EF0  0EF8               	movlw	-8
  2619  003EF2  50E3               	movf	plusw1,w,c
  2620  003EF4  6E46               	movwf	btemp+8,c
  2621  003EF6  6A47               	clrf	btemp+9,c
  2622  003EF8  5048               	movf	btemp+10,w,c
  2623  003EFA  2646               	addwf	btemp+8,f,c
  2624  003EFC  5049               	movf	btemp+11,w,c
  2625  003EFE  2247               	addwfc	btemp+9,f,c
  2626  003F00  0060  F11B  FFE6   	movff	btemp+8,postinc1
  2627  003F06  0060  F11F  FFE6   	movff	btemp+9,postinc1
  2628                           
  2629                           ;stkvar	_k @ sp[(-7)+0]
  2630  003F0C  0EF9               	movlw	-7
  2631  003F0E  50E3               	movf	plusw1,w,c
  2632  003F10  0F02               	addlw	2
  2633  003F12  6E48               	movwf	btemp+10,c
  2634  003F14  0EFA               	movlw	-6
  2635  003F16  006F FF8C  F049    	movff	plusw1,btemp+11
  2636  003F1C  0E00               	movlw	0
  2637  003F1E  2249               	addwfc	btemp+11,f,c
  2638  003F20  0060  F123  FFE6   	movff	btemp+10,postinc1
  2639  003F26  0060  F127  FFE6   	movff	btemp+11,postinc1
  2640  003F2C  EC5E  F022         	call	_block_checksum	;wreg free
  2641                           
  2642                           ;stkvar	_checksum @ sp[(-5)+2]
  2643  003F30  0EFD               	movlw	-3
  2644  003F32  0060  F0FB  FFE3   	movff	btemp,plusw1
  2645  003F38  0EFE               	movlw	-2
  2646  003F3A  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  2647                           
  2648                           ;gemsecs.c: 257:  k[0] = checksum & 0xff;
  2649                           ;stkvar	_checksum @ sp[(-5)+2]
  2650                           ;stkvar	_k @ sp[(-5)+0]
  2651  003F40  0EFB               	movlw	-5
  2652  003F42  006F FF8F FFD9     	movff	plusw1,fsr2l
  2653  003F48  0EFC               	movlw	-4
  2654  003F4A  006F FF8F FFDA     	movff	plusw1,fsr2h
  2655  003F50  0EFD               	movlw	-3
  2656  003F52  006F FF8F FFDF     	movff	plusw1,indf2
  2657                           
  2658                           ;gemsecs.c: 258:  k[1] = (checksum >> 8)&0xff;
  2659                           ;stkvar	_checksum @ sp[(-5)+2]
  2660  003F58  0EFE               	movlw	254
  2661  003F5A  24E1               	addwf	fsr1l,w,c
  2662  003F5C  6ED9               	movwf	fsr2l,c
  2663  003F5E  0EFF               	movlw	255
  2664  003F60  20E2               	addwfc	fsr1h,w,c
  2665  003F62  6EDA               	movwf	fsr2h,c
  2666                           
  2667                           ;stkvar	_k @ sp[(-5)+0]
  2668  003F64  0EFB               	movlw	-5
  2669  003F66  006F FF8C  F048    	movff	plusw1,btemp+10
  2670  003F6C  0EFC               	movlw	-4
  2671  003F6E  006F FF8C  F049    	movff	plusw1,btemp+11
  2672  003F74  0E01               	movlw	1
  2673  003F76  2448               	addwf	btemp+10,w,c
  2674  003F78  6EE9               	movwf	fsr0l,c
  2675  003F7A  0E00               	movlw	0
  2676  003F7C  2049               	addwfc	btemp+11,w,c
  2677  003F7E  6EEA               	movwf	fsr0h,c
  2678  003F80  006F FF7F FFEF     	movff	indf2,indf0
  2679                           
  2680                           ;gemsecs.c: 259:  V.t_checksum = checksum;
  2681                           ;stkvar	_checksum @ sp[(-5)+2]
  2682  003F86  0EFD               	movlw	-3
  2683  003F88  006F FF8C  F0DB    	movff	plusw1,_V+82	;volatile
  2684  003F8E  0EFE               	movlw	-2
  2685  003F90  006F FF8C  F0DC    	movff	plusw1,_V+83	;volatile
  2686  003F96                     l6677:
  2687  003F96  ECAF  F02C         	call	_UART1_is_tx_ready	;wreg free
  2688  003F9A  0E3F               	movlw	63
  2689  003F9C  643E               	cpfsgt	btemp,c
  2690  003F9E  D7FB               	goto	l6677
  2691                           
  2692                           ;gemsecs.c: 262:  for (i = length; i > 0; i--) {
  2693                           ;stkvar	_length @ sp[(-5)+-3]
  2694                           ;stkvar	_i @ sp[(-5)+4]
  2695  003FA0  0EF8               	movlw	-8
  2696  003FA2  006F FF8C  F03E    	movff	plusw1,btemp
  2697  003FA8  0EFF               	movlw	-1
  2698  003FAA  0060  F0FB  FFE3   	movff	btemp,plusw1
  2699  003FB0                     l6681:
  2700                           
  2701                           ;stkvar	_i @ sp[(-5)+4]
  2702  003FB0  0EFF               	movlw	-1
  2703  003FB2  50E3               	movf	plusw1,w,c
  2704  003FB4  B4D8               	btfsc	status,2,c
  2705  003FB6  D030               	goto	l1583
  2706                           
  2707                           ;gemsecs.c: 263:   if (fake) {
  2708                           ;stkvar	_fake @ sp[(-5)+-4]
  2709  003FB8  0EF7               	movlw	-9
  2710  003FBA  50E3               	movf	plusw1,w,c
  2711  003FBC  B4D8               	btfsc	status,2,c
  2712  003FBE  D015               	goto	l6689
  2713                           
  2714                           ;gemsecs.c: 264:    UART1_put_buffer(k[i - 1]);
  2715                           ;stkvar	_i @ sp[(-5)+4]
  2716  003FC0  0EFF               	movlw	-1
  2717  003FC2  50E3               	movf	plusw1,w,c
  2718  003FC4  6E48               	movwf	btemp+10,c
  2719  003FC6  6A49               	clrf	btemp+11,c
  2720                           
  2721                           ;stkvar	_k @ sp[(-5)+0]
  2722  003FC8  0EFB               	movlw	-5
  2723  003FCA  50E3               	movf	plusw1,w,c
  2724  003FCC  2648               	addwf	btemp+10,f,c
  2725  003FCE  0EFC               	movlw	-4
  2726  003FD0  50E3               	movf	plusw1,w,c
  2727  003FD2  2249               	addwfc	btemp+11,f,c
  2728  003FD4  0EFF               	movlw	255
  2729  003FD6  2448               	addwf	btemp+10,w,c
  2730  003FD8  6ED9               	movwf	fsr2l,c
  2731  003FDA  0EFF               	movlw	255
  2732  003FDC  2049               	addwfc	btemp+11,w,c
  2733  003FDE  6EDA               	movwf	fsr2h,c
  2734  003FE0  50DF               	movf	indf2,w,c
  2735  003FE2  6EE6               	movwf	postinc1,c
  2736  003FE4  EC95  F029         	call	_UART1_put_buffer	;wreg free
  2737                           
  2738                           ;gemsecs.c: 265:   } else {
  2739  003FE8  D014               	goto	l6691
  2740  003FEA                     l6689:
  2741                           
  2742                           ;gemsecs.c: 266:    UART1_Write(k[i - 1]);
  2743                           ;stkvar	_i @ sp[(-5)+4]
  2744  003FEA  0EFF               	movlw	-1
  2745  003FEC  50E3               	movf	plusw1,w,c
  2746  003FEE  6E48               	movwf	btemp+10,c
  2747  003FF0  6A49               	clrf	btemp+11,c
  2748                           
  2749                           ;stkvar	_k @ sp[(-5)+0]
  2750  003FF2  0EFB               	movlw	-5
  2751  003FF4  50E3               	movf	plusw1,w,c
  2752  003FF6  2648               	addwf	btemp+10,f,c
  2753  003FF8  0EFC               	movlw	-4
  2754  003FFA  50E3               	movf	plusw1,w,c
  2755  003FFC  2249               	addwfc	btemp+11,f,c
  2756  003FFE  0EFF               	movlw	255
  2757  004000  2448               	addwf	btemp+10,w,c
  2758  004002  6ED9               	movwf	fsr2l,c
  2759  004004  0EFF               	movlw	255
  2760  004006  2049               	addwfc	btemp+11,w,c
  2761  004008  6EDA               	movwf	fsr2h,c
  2762  00400A  50DF               	movf	indf2,w,c
  2763  00400C  6EE6               	movwf	postinc1,c
  2764  00400E  ECD8  F028         	call	_UART1_Write	;wreg free
  2765  004012                     l6691:
  2766                           
  2767                           ; BSR set to: 57
  2768                           ;gemsecs.c: 268:  }
  2769                           ;stkvar	_i @ sp[(-5)+4]
  2770  004012  0EFF               	movlw	-1
  2771  004014  06E3               	decf	plusw1,f,c
  2772  004016  D7CC               	goto	l6681
  2773  004018                     l1583:
  2774                           
  2775                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  2776  004018  0EF7               	movlw	247
  2777  00401A  26E1               	addwf	fsr1l,f,c
  2778  00401C  0EFF               	movlw	255
  2779  00401E  22E2               	addwfc	fsr1h,f,c
  2780  004020  0012               	return		;funcret
  2781  004022                     __end_of_secs_send:
  2782                           	opt callstack 0
  2783                           
  2784 ;; *************** function _block_checksum *****************
  2785 ;; Defined at:
  2786 ;;		line 18 in file "gemsecs.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  byte_block      2  [STACK] PTR unsigned char 
  2789 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2790 ;;		 -> H17(20), H14(17), H13(16), H12(15), 
  2791 ;;		 -> H10(65), 
  2792 ;;  byte_count      2  [STACK] unsigned short 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  i               2  [STACK] unsigned short 
  2795 ;;  sum             2  [STACK] unsigned short 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  2  [STACK] unsigned short 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  2800 ;; Tracked objects:
  2801 ;;		On entry : 3F/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    3
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_secs_send
  2816 ;; This function uses a reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text3
  2820  0044BC                     __ptext3:
  2821                           	opt callstack 0
  2822  0044BC                     _block_checksum:
  2823                           	opt callstack 0
  2824                           
  2825                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2826  0044BC  52E6               	movf	postinc1,f,c
  2827  0044BE  52E6               	movf	postinc1,f,c
  2828  0044C0  52E6               	movf	postinc1,f,c
  2829  0044C2  52E6               	movf	postinc1,f,c
  2830                           
  2831                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  2832                           ;stkvar	_sum @ sp[(-4)+2]
  2833                           
  2834                           ;incstack = 0
  2835  0044C4  0EFE               	movlw	-2
  2836  0044C6  6AE3               	clrf	plusw1,c
  2837  0044C8  0EFF               	movlw	-1
  2838  0044CA  6AE3               	clrf	plusw1,c
  2839                           
  2840                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  2841                           ;stkvar	_i @ sp[(-4)+0]
  2842  0044CC  0EFC               	movlw	-4
  2843  0044CE  6AE3               	clrf	plusw1,c
  2844  0044D0  0EFD               	movlw	-3
  2845  0044D2  6AE3               	clrf	plusw1,c
  2846  0044D4  D039               	goto	l6609
  2847  0044D6                     l6605:
  2848                           
  2849                           ;gemsecs.c: 23:   sum += byte_block[i];
  2850                           ;stkvar	_i @ sp[(-4)+0]
  2851  0044D6  0EFC               	movlw	-4
  2852  0044D8  006F FF8C  F048    	movff	plusw1,btemp+10
  2853  0044DE  0EFD               	movlw	-3
  2854  0044E0  006F FF8C  F049    	movff	plusw1,btemp+11
  2855                           
  2856                           ;stkvar	_byte_block @ sp[(-4)+-2]
  2857  0044E6  0EFA               	movlw	-6
  2858  0044E8  006F FF8C  F046    	movff	plusw1,btemp+8
  2859  0044EE  0EFB               	movlw	-5
  2860  0044F0  006F FF8C  F047    	movff	plusw1,btemp+9
  2861  0044F6  5048               	movf	btemp+10,w,c
  2862  0044F8  2446               	addwf	btemp+8,w,c
  2863  0044FA  6ED9               	movwf	fsr2l,c
  2864  0044FC  5049               	movf	btemp+11,w,c
  2865  0044FE  2047               	addwfc	btemp+9,w,c
  2866  004500  6EDA               	movwf	fsr2h,c
  2867  004502  50DF               	movf	indf2,w,c
  2868  004504  6E49               	movwf	btemp+11,c
  2869                           
  2870                           ;stkvar	_sum @ sp[(-4)+2]
  2871  004506  0EFE               	movlw	-2
  2872  004508  50E3               	movf	plusw1,w,c
  2873  00450A  2449               	addwf	btemp+11,w,c
  2874  00450C  6E3E               	movwf	btemp,c
  2875  00450E  0EFE               	movlw	-2
  2876  004510  0060  F0FB  FFE3   	movff	btemp,plusw1
  2877  004516  6A3E               	clrf	btemp,c
  2878  004518  0EFF               	movlw	-1
  2879  00451A  50E3               	movf	plusw1,w,c
  2880  00451C  223E               	addwfc	btemp,f,c
  2881  00451E  0EFF               	movlw	-1
  2882  004520  0060  F0FB  FFE3   	movff	btemp,plusw1
  2883                           
  2884                           ;gemsecs.c: 24:  }
  2885                           ;stkvar	_i @ sp[(-4)+0]
  2886  004526  0EFC               	movlw	-4
  2887  004528  50E3               	movf	plusw1,w,c
  2888  00452A  0F01               	addlw	1
  2889  00452C  6E3E               	movwf	btemp,c
  2890  00452E  0EFC               	movlw	-4
  2891  004530  0060  F0FB  FFE3   	movff	btemp,plusw1
  2892  004536  6A3E               	clrf	btemp,c
  2893  004538  0EFD               	movlw	-3
  2894  00453A  50E3               	movf	plusw1,w,c
  2895  00453C  203E               	addwfc	btemp,w,c
  2896  00453E  6E3E               	movwf	btemp,c
  2897  004540  0EFD               	movlw	-3
  2898  004542  0060  F0FB  FFE3   	movff	btemp,plusw1
  2899  004548                     l6609:
  2900                           
  2901                           ;stkvar	_byte_count @ sp[(-4)+-4]
  2902  004548  0EF8               	movlw	-8
  2903  00454A  006F FF8C  F048    	movff	plusw1,btemp+10
  2904  004550  0EF9               	movlw	-7
  2905  004552  006F FF8C  F049    	movff	plusw1,btemp+11
  2906                           
  2907                           ;stkvar	_i @ sp[(-4)+0]
  2908  004558  0EFC               	movlw	-4
  2909  00455A  006F FF8C  F046    	movff	plusw1,btemp+8
  2910  004560  0EFD               	movlw	-3
  2911  004562  006F FF8C  F047    	movff	plusw1,btemp+9
  2912  004568  5048               	movf	btemp+10,w,c
  2913  00456A  5C46               	subwf	btemp+8,w,c
  2914  00456C  5049               	movf	btemp+11,w,c
  2915  00456E  5847               	subwfb	btemp+9,w,c
  2916  004570  A0D8               	btfss	status,0,c
  2917  004572  D7B1               	goto	l6605
  2918                           
  2919                           ;gemsecs.c: 25:  return sum;
  2920                           ;stkvar	_sum @ sp[(-4)+2]
  2921  004574  0EFE               	movlw	-2
  2922  004576  006F FF8C  F03E    	movff	plusw1,btemp
  2923  00457C  0EFF               	movlw	-1
  2924  00457E  006F FF8C  F03F    	movff	plusw1,btemp+1
  2925                           
  2926                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  2927  004584  0EF8               	movlw	248
  2928  004586  26E1               	addwf	fsr1l,f,c
  2929  004588  0EFF               	movlw	255
  2930  00458A  22E2               	addwfc	fsr1h,f,c
  2931  00458C  0012               	return		;funcret
  2932  00458E                     __end_of_block_checksum:
  2933                           	opt callstack 0
  2934                           
  2935 ;; *************** function _UART1_put_buffer *****************
  2936 ;; Defined at:
  2937 ;;		line 250 in file "mcc_generated_files/uart1.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  bufData         1  [STACK] unsigned char 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1  [STACK] void 
  2944 ;; Registers used:
  2945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/39
  2948 ;;		On exit  : 3F/39
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    3
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_t_protocol
  2962 ;;		_secs_send
  2963 ;; This function uses a reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text4
  2967  00532A                     __ptext4:
  2968                           	opt callstack 0
  2969  00532A                     _UART1_put_buffer:
  2970                           	opt callstack 25
  2971                           
  2972                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  2973                           
  2974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2975                           ;incstack = 0
  2976  00532A  0139               	movlb	57	; () banked
  2977  00532C  9793               	bcf	147,3,b	;volatile
  2978                           
  2979                           ; BSR set to: 57
  2980                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  2981                           ;stkvar	_bufData @ sp[(0)+-1]
  2982  00532E  0E80               	movlw	low _uart1RxBuffer
  2983  005330  243A               	addwf	_uart1RxHead,w,c	;volatile
  2984  005332  6ED9               	movwf	fsr2l,c
  2985  005334  6ADA               	clrf	fsr2h,c
  2986  005336  0E02               	movlw	high _uart1RxBuffer
  2987  005338  22DA               	addwfc	fsr2h,f,c
  2988  00533A  0EFF               	movlw	-1
  2989  00533C  006F FF8F FFDF     	movff	plusw1,indf2
  2990                           
  2991                           ; BSR set to: 57
  2992  005342  2A3A               	incf	_uart1RxHead,f,c	;volatile
  2993                           
  2994                           ; BSR set to: 57
  2995                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  2996  005344  0E3F               	movlw	63
  2997  005346  643A               	cpfsgt	_uart1RxHead,c
  2998  005348  D001               	goto	l5033
  2999                           
  3000                           ; BSR set to: 57
  3001                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3002  00534A  6A3A               	clrf	_uart1RxHead,c	;volatile
  3003  00534C                     l5033:
  3004                           
  3005                           ; BSR set to: 57
  3006                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3007  00534C  2A38               	incf	_uart1RxCount,f,c	;volatile
  3008                           
  3009                           ; BSR set to: 57
  3010                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3011  00534E  8793               	bsf	147,3,b	;volatile
  3012                           
  3013                           ; BSR set to: 57
  3014                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3015  005350  52E5               	movf	postdec1,f,c
  3016  005352  0012               	return		;funcret
  3017  005354                     __end_of_UART1_put_buffer:
  3018                           	opt callstack 0
  3019                           
  3020 ;; *************** function _UART1_is_tx_ready *****************
  3021 ;; Defined at:
  3022 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1  [STACK] unsigned char 
  3029 ;; Registers used:
  3030 ;;		btemp
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    3
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_secs_send
  3047 ;; This function uses a reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text5
  3051  00595E                     __ptext5:
  3052                           	opt callstack 0
  3053  00595E                     _UART1_is_tx_ready:
  3054                           	opt callstack 25
  3055                           
  3056                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3057                           
  3058                           ; BSR set to: 57
  3059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3060                           ;incstack = 0
  3061  00595E  0060  F0EC  F03E   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3062                           
  3063                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3064  005964  0012               	return		;funcret
  3065  005966                     __end_of_UART1_is_tx_ready:
  3066                           	opt callstack 0
  3067                           
  3068 ;; *************** function _secs_II_message *****************
  3069 ;; Defined at:
  3070 ;;		line 276 in file "gemsecs.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  stream          1  [STACK] unsigned char 
  3073 ;;  function        1  [STACK] unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  3  [STACK] struct response_type
  3078 ;; Registers used:
  3079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
  3080 ;; Tracked objects:
  3081 ;;		On entry : 3F/0
  3082 ;;		On exit  : 3F/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    3
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_t_protocol
  3096 ;; This function uses a reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text6
  3100  003C86                     __ptext6:
  3101                           	opt callstack 0
  3102  003C86                     _secs_II_message:
  3103                           	opt callstack 26
  3104                           
  3105                           ;gemsecs.c: 276: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 277: {;gemsecs.c: 278:  static response_type block;;gemsecs.c: 280:  V.abort = LINK_
      +                          ERROR_NONE;
  3106                           
  3107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3108                           ;incstack = 0
  3109  003C86  0100               	movlb	0	; () banked
  3110  003C88  6BD8               	clrf	(_V+79)& (0+255),b	;volatile
  3111                           
  3112                           ;gemsecs.c: 282:  switch (stream) {
  3113  003C8A  D0D0               	goto	l5409
  3114  003C8C                     l5309:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;gemsecs.c: 286:    block.header = (uint8_t*) & H12[0];
  3118  003C8C  0EE5               	movlw	low _H12
  3119  003C8E  6E01               	movwf	secs_II_message@block,c
  3120  003C90  6A02               	clrf	secs_II_message@block+1,c
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;gemsecs.c: 287:    block.length = sizeof(header12);
  3124  003C92  0E0F               	movlw	15
  3125  003C94  6E03               	movwf	secs_II_message@block+2,c
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;gemsecs.c: 288:    H12[0].block.block.systemb = V.systemb;
  3129  003C96  C0D1  F0E9         	movff	_V+72,_H12+4	;volatile
  3130  003C9A  C0D2  F0EA         	movff	_V+73,_H12+5	;volatile
  3131  003C9E  C0D3  F0EB         	movff	_V+74,_H12+6	;volatile
  3132  003CA2  C0D4  F0EC         	movff	_V+75,_H12+7	;volatile
  3133                           
  3134                           ;gemsecs.c: 289:    break;
  3135  003CA6  D0D5               	goto	l5411
  3136  003CA8                     l5315:
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;gemsecs.c: 291:    block.header = (uint8_t*) & H10[0];
  3140  003CA8  0E00               	movlw	low _H10
  3141  003CAA  6E01               	movwf	secs_II_message@block,c
  3142  003CAC  0E01               	movlw	high _H10
  3143  003CAE  6E02               	movwf	secs_II_message@block+1,c
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;gemsecs.c: 292:    block.length = sizeof(header10);
  3147  003CB0  0E0D               	movlw	13
  3148  003CB2  6E03               	movwf	secs_II_message@block+2,c
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;gemsecs.c: 293:    H10[0].block.block.systemb = V.systemb;
  3152  003CB4  C0D1  F102         	movff	_V+72,_H10+2	;volatile
  3153  003CB8  C0D2  F103         	movff	_V+73,_H10+3	;volatile
  3154  003CBC  C0D3  F104         	movff	_V+74,_H10+4	;volatile
  3155  003CC0  C0D4  F105         	movff	_V+75,_H10+5	;volatile
  3156                           
  3157                           ;gemsecs.c: 294:    break;
  3158  003CC4  D0C6               	goto	l5411
  3159  003CC6                     l5321:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;gemsecs.c: 296:    block.header = (uint8_t*) & H14[0];
  3163  003CC6  0EA3               	movlw	low _H14
  3164  003CC8  6E01               	movwf	secs_II_message@block,c
  3165  003CCA  0E01               	movlw	high _H14
  3166  003CCC  6E02               	movwf	secs_II_message@block+1,c
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;gemsecs.c: 297:    block.length = sizeof(header14);
  3170  003CCE  0E11               	movlw	17
  3171  003CD0  6E03               	movwf	secs_II_message@block+2,c
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;gemsecs.c: 298:    H14[0].block.block.systemb = V.systemb;
  3175  003CD2  C0D1  F1A9         	movff	_V+72,_H14+6	;volatile
  3176  003CD6  C0D2  F1AA         	movff	_V+73,_H14+7	;volatile
  3177  003CDA  C0D3  F1AB         	movff	_V+74,_H14+8	;volatile
  3178  003CDE  C0D4  F1AC         	movff	_V+75,_H14+9	;volatile
  3179                           
  3180                           ;gemsecs.c: 299:    break;
  3181  003CE2  D0B7               	goto	l5411
  3182  003CE4                     l5327:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;gemsecs.c: 301:    block.header = (uint8_t*) & H18[0];
  3186  003CE4  0E7A               	movlw	low _H18
  3187  003CE6  6E01               	movwf	secs_II_message@block,c
  3188  003CE8  0E01               	movlw	high _H18
  3189  003CEA  6E02               	movwf	secs_II_message@block+1,c
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;gemsecs.c: 302:    block.length = sizeof(header18);
  3193  003CEC  0E15               	movlw	21
  3194  003CEE  6E03               	movwf	secs_II_message@block+2,c
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;gemsecs.c: 303:    H18[0].block.block.systemb = V.systemb;
  3198  003CF0  C0D1  F184         	movff	_V+72,_H18+10	;volatile
  3199  003CF4  C0D2  F185         	movff	_V+73,_H18+11	;volatile
  3200  003CF8  C0D3  F186         	movff	_V+74,_H18+12	;volatile
  3201  003CFC  C0D4  F187         	movff	_V+75,_H18+13	;volatile
  3202                           
  3203                           ;gemsecs.c: 304:    break;
  3204  003D00  D0A8               	goto	l5411
  3205  003D02                     l5333:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;gemsecs.c: 306:    block.header = (uint8_t*) & H17[0];
  3209  003D02  0E8F               	movlw	low _H17
  3210  003D04  6E01               	movwf	secs_II_message@block,c
  3211  003D06  0E01               	movlw	high _H17
  3212  003D08  6E02               	movwf	secs_II_message@block+1,c
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;gemsecs.c: 307:    block.length = sizeof(header17);
  3216  003D0A  0E14               	movlw	20
  3217  003D0C  6E03               	movwf	secs_II_message@block+2,c
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;gemsecs.c: 308:    H17[0].block.block.systemb = V.systemb;
  3221  003D0E  C0D1  F198         	movff	_V+72,_H17+9	;volatile
  3222  003D12  C0D2  F199         	movff	_V+73,_H17+10	;volatile
  3223  003D16  C0D3  F19A         	movff	_V+74,_H17+11	;volatile
  3224  003D1A  C0D4  F19B         	movff	_V+75,_H17+12	;volatile
  3225                           
  3226                           ;gemsecs.c: 309:    break;
  3227  003D1E  D099               	goto	l5411
  3228  003D20                     l5339:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;gemsecs.c: 311:    block.header = (uint8_t*) & H27[0];
  3232  003D20  0E41               	movlw	low _H27
  3233  003D22  6E01               	movwf	secs_II_message@block,c
  3234  003D24  0E01               	movlw	high _H27
  3235  003D26  6E02               	movwf	secs_II_message@block+1,c
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;gemsecs.c: 312:    block.length = sizeof(header27);
  3239  003D28  0E1E               	movlw	30
  3240  003D2A  6E03               	movwf	secs_II_message@block+2,c
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;gemsecs.c: 313:    H27[0].block.block.systemb = V.systemb;
  3244  003D2C  C0D1  F154         	movff	_V+72,_H27+19	;volatile
  3245  003D30  C0D2  F155         	movff	_V+73,_H27+20	;volatile
  3246  003D34  C0D3  F156         	movff	_V+74,_H27+21	;volatile
  3247  003D38  C0D4  F157         	movff	_V+75,_H27+22	;volatile
  3248                           
  3249                           ;gemsecs.c: 314:    break;
  3250  003D3C  D08A               	goto	l5411
  3251  003D3E                     l5345:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;gemsecs.c: 316:    block.header = (uint8_t*) & H10[2];
  3255  003D3E  0E1A               	movlw	low (_H10+26)
  3256  003D40  6E01               	movwf	secs_II_message@block,c
  3257  003D42  0E01               	movlw	high (_H10+26)
  3258  003D44  6E02               	movwf	secs_II_message@block+1,c
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;gemsecs.c: 317:    block.length = sizeof(header10);
  3262  003D46  0E0D               	movlw	13
  3263  003D48  6E03               	movwf	secs_II_message@block+2,c
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;gemsecs.c: 318:    H10[2].block.block.systemb = V.systemb;
  3267  003D4A  C0D1  F11C         	movff	_V+72,_H10+28	;volatile
  3268  003D4E  C0D2  F11D         	movff	_V+73,_H10+29	;volatile
  3269  003D52  C0D3  F11E         	movff	_V+74,_H10+30	;volatile
  3270  003D56  C0D4  F11F         	movff	_V+75,_H10+31	;volatile
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;gemsecs.c: 319:    V.abort = LINK_ERROR_ABORT;
  3274  003D5A  0E07               	movlw	7
  3275  003D5C  6FD8               	movwf	(_V+79)& (0+255),b	;volatile
  3276                           
  3277                           ;gemsecs.c: 320:    break;
  3278  003D5E  D079               	goto	l5411
  3279  003D60                     l5355:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;stkvar	_function @ sp[(0)+-2]
  3283  003D60  0EFE               	movlw	-2
  3284  003D62  50E3               	movf	plusw1,w,c
  3285  003D64  6E48               	movwf	btemp+10,c
  3286  003D66  6A49               	clrf	btemp+11,c
  3287                           
  3288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3289                           ; Switch size 1, requested type "simple"
  3290                           ; Number of cases is 1, Range of values is 0 to 0
  3291                           ; switch strategies available:
  3292                           ; Name         Instructions Cycles
  3293                           ; simple_byte            4     3 (average)
  3294                           ;	Chosen strategy is simple_byte
  3295  003D68  5049               	movf	btemp+11,w,c
  3296  003D6A  0A00               	xorlw	0	; case 0
  3297  003D6C  A4D8               	btfss	status,2,c
  3298  003D6E  D7E7               	goto	l5345
  3299                           
  3300                           ; BSR set to: 0
  3301                           ; Switch size 1, requested type "simple"
  3302                           ; Number of cases is 6, Range of values is 1 to 14
  3303                           ; switch strategies available:
  3304                           ; Name         Instructions Cycles
  3305                           ; simple_byte           19    10 (average)
  3306                           ;	Chosen strategy is simple_byte
  3307  003D70  5048               	movf	btemp+10,w,c
  3308  003D72  0A01               	xorlw	1	; case 1
  3309  003D74  B4D8               	btfsc	status,2,c
  3310  003D76  D78A               	goto	l5309
  3311  003D78  0A03               	xorlw	3	; case 2
  3312  003D7A  B4D8               	btfsc	status,2,c
  3313  003D7C  D795               	goto	l5315
  3314  003D7E  0A01               	xorlw	1	; case 3
  3315  003D80  B4D8               	btfsc	status,2,c
  3316  003D82  D7A1               	goto	l5321
  3317  003D84  0A07               	xorlw	7	; case 4
  3318  003D86  B4D8               	btfsc	status,2,c
  3319  003D88  D7AD               	goto	l5327
  3320  003D8A  0A09               	xorlw	9	; case 13
  3321  003D8C  B4D8               	btfsc	status,2,c
  3322  003D8E  D7B9               	goto	l5333
  3323  003D90  0A03               	xorlw	3	; case 14
  3324  003D92  B4D8               	btfsc	status,2,c
  3325  003D94  D7C5               	goto	l5339
  3326  003D96  D7D3               	goto	l5345
  3327  003D98                     l5357:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;gemsecs.c: 326:    block.header = (uint8_t*) & H24[0];
  3331  003D98  0E5F               	movlw	low _H24
  3332  003D9A  6E01               	movwf	secs_II_message@block,c
  3333  003D9C  0E01               	movlw	high _H24
  3334  003D9E  6E02               	movwf	secs_II_message@block+1,c
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;gemsecs.c: 327:    block.length = sizeof(header24);
  3338  003DA0  0E1B               	movlw	27
  3339  003DA2  6E03               	movwf	secs_II_message@block+2,c
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;gemsecs.c: 328:    H24[0].block.block.systemb = V.systemb;
  3343  003DA4  C0D1  F16F         	movff	_V+72,_H24+16	;volatile
  3344  003DA8  C0D2  F170         	movff	_V+73,_H24+17	;volatile
  3345  003DAC  C0D3  F171         	movff	_V+74,_H24+18	;volatile
  3346  003DB0  C0D4  F172         	movff	_V+75,_H24+19	;volatile
  3347                           
  3348                           ;gemsecs.c: 329:    break;
  3349  003DB4  D04E               	goto	l5411
  3350  003DB6                     l5373:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;stkvar	_function @ sp[(0)+-2]
  3354  003DB6  0EFE               	movlw	-2
  3355  003DB8  50E3               	movf	plusw1,w,c
  3356  003DBA  6E48               	movwf	btemp+10,c
  3357  003DBC  6A49               	clrf	btemp+11,c
  3358                           
  3359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3360                           ; Switch size 1, requested type "simple"
  3361                           ; Number of cases is 1, Range of values is 0 to 0
  3362                           ; switch strategies available:
  3363                           ; Name         Instructions Cycles
  3364                           ; simple_byte            4     3 (average)
  3365                           ;	Chosen strategy is simple_byte
  3366  003DBE  5049               	movf	btemp+11,w,c
  3367  003DC0  0A00               	xorlw	0	; case 0
  3368  003DC2  A4D8               	btfss	status,2,c
  3369  003DC4  D7BC               	goto	l5345
  3370                           
  3371                           ; BSR set to: 0
  3372                           ; Switch size 1, requested type "simple"
  3373                           ; Number of cases is 1, Range of values is 17 to 17
  3374                           ; switch strategies available:
  3375                           ; Name         Instructions Cycles
  3376                           ; simple_byte            4     3 (average)
  3377                           ;	Chosen strategy is simple_byte
  3378  003DC6  5048               	movf	btemp+10,w,c
  3379  003DC8  0A11               	xorlw	17	; case 17
  3380  003DCA  B4D8               	btfsc	status,2,c
  3381  003DCC  D7E5               	goto	l5357
  3382  003DCE  D7B7               	goto	l5345
  3383  003DD0                     l5375:
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;gemsecs.c: 341:    block.header = (uint8_t*) & H13[0];
  3387  003DD0  0EB4               	movlw	low _H13
  3388  003DD2  6E01               	movwf	secs_II_message@block,c
  3389  003DD4  0E01               	movlw	high _H13
  3390  003DD6  6E02               	movwf	secs_II_message@block+1,c
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;gemsecs.c: 342:    block.length = sizeof(header13);
  3394  003DD8  0E10               	movlw	16
  3395  003DDA  6E03               	movwf	secs_II_message@block+2,c
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;gemsecs.c: 343:    H13[0].block.block.systemb = V.systemb;
  3399  003DDC  C0D1  F1B9         	movff	_V+72,_H13+5	;volatile
  3400  003DE0  C0D2  F1BA         	movff	_V+73,_H13+6	;volatile
  3401  003DE4  C0D3  F1BB         	movff	_V+74,_H13+7	;volatile
  3402  003DE8  C0D4  F1BC         	movff	_V+75,_H13+8	;volatile
  3403                           
  3404                           ;gemsecs.c: 344:    break;
  3405  003DEC  D032               	goto	l5411
  3406  003DEE                     l5381:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;gemsecs.c: 346:    block.header = (uint8_t*) & H53[0];
  3410  003DEE  0E86               	movlw	low _H53
  3411  003DF0  6E01               	movwf	secs_II_message@block,c
  3412  003DF2  0E03               	movlw	high _H53
  3413  003DF4  6E02               	movwf	secs_II_message@block+1,c
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;gemsecs.c: 347:    block.length = sizeof(header53);
  3417  003DF6  0E38               	movlw	56
  3418  003DF8  6E03               	movwf	secs_II_message@block+2,c
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;gemsecs.c: 348:    H53[0].block.block.systemb = V.systemb;
  3422  003DFA  C0D1  F3B3         	movff	_V+72,_H53+45	;volatile
  3423  003DFE  C0D2  F3B4         	movff	_V+73,_H53+46	;volatile
  3424  003E02  C0D3  F3B5         	movff	_V+74,_H53+47	;volatile
  3425  003E06  C0D4  F3B6         	movff	_V+75,_H53+48	;volatile
  3426                           
  3427                           ;gemsecs.c: 349:    break;
  3428  003E0A  D023               	goto	l5411
  3429  003E0C                     l5397:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;stkvar	_function @ sp[(0)+-2]
  3433  003E0C  0EFE               	movlw	-2
  3434  003E0E  50E3               	movf	plusw1,w,c
  3435  003E10  6E48               	movwf	btemp+10,c
  3436  003E12  6A49               	clrf	btemp+11,c
  3437                           
  3438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3439                           ; Switch size 1, requested type "simple"
  3440                           ; Number of cases is 1, Range of values is 0 to 0
  3441                           ; switch strategies available:
  3442                           ; Name         Instructions Cycles
  3443                           ; simple_byte            4     3 (average)
  3444                           ;	Chosen strategy is simple_byte
  3445  003E14  5049               	movf	btemp+11,w,c
  3446  003E16  0A00               	xorlw	0	; case 0
  3447  003E18  A4D8               	btfss	status,2,c
  3448  003E1A  D791               	goto	l5345
  3449                           
  3450                           ; BSR set to: 0
  3451                           ; Switch size 1, requested type "simple"
  3452                           ; Number of cases is 2, Range of values is 11 to 12
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte            7     4 (average)
  3456                           ;	Chosen strategy is simple_byte
  3457  003E1C  5048               	movf	btemp+10,w,c
  3458  003E1E  0A0B               	xorlw	11	; case 11
  3459  003E20  B4D8               	btfsc	status,2,c
  3460  003E22  D7D6               	goto	l5375
  3461  003E24  0A07               	xorlw	7	; case 12
  3462  003E26  B4D8               	btfsc	status,2,c
  3463  003E28  D7E2               	goto	l5381
  3464  003E2A  D789               	goto	l5345
  3465  003E2C                     l5409:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;stkvar	_stream @ sp[(0)+-1]
  3469  003E2C  0EFF               	movlw	-1
  3470  003E2E  50E3               	movf	plusw1,w,c
  3471  003E30  6E48               	movwf	btemp+10,c
  3472  003E32  6A49               	clrf	btemp+11,c
  3473                           
  3474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3475                           ; Switch size 1, requested type "simple"
  3476                           ; Number of cases is 1, Range of values is 0 to 0
  3477                           ; switch strategies available:
  3478                           ; Name         Instructions Cycles
  3479                           ; simple_byte            4     3 (average)
  3480                           ;	Chosen strategy is simple_byte
  3481  003E34  5049               	movf	btemp+11,w,c
  3482  003E36  0A00               	xorlw	0	; case 0
  3483  003E38  A4D8               	btfss	status,2,c
  3484  003E3A  D781               	goto	l5345
  3485                           
  3486                           ; BSR set to: 0
  3487                           ; Switch size 1, requested type "simple"
  3488                           ; Number of cases is 3, Range of values is 1 to 6
  3489                           ; switch strategies available:
  3490                           ; Name         Instructions Cycles
  3491                           ; simple_byte           10     6 (average)
  3492                           ;	Chosen strategy is simple_byte
  3493  003E3C  5048               	movf	btemp+10,w,c
  3494  003E3E  0A01               	xorlw	1	; case 1
  3495  003E40  B4D8               	btfsc	status,2,c
  3496  003E42  D78E               	goto	l5355
  3497  003E44  0A03               	xorlw	3	; case 2
  3498  003E46  B4D8               	btfsc	status,2,c
  3499  003E48  D7B6               	goto	l5373
  3500  003E4A  0A04               	xorlw	4	; case 6
  3501  003E4C  B4D8               	btfsc	status,2,c
  3502  003E4E  D7DE               	goto	l5397
  3503  003E50  D776               	goto	l5345
  3504  003E52                     l5411:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;gemsecs.c: 366:  return(block);
  3508  003E52  0060  F004  F03E   	movff	secs_II_message@block,btemp
  3509  003E58  0060  F008  F03F   	movff	secs_II_message@block+1,btemp+1
  3510  003E5E  0060  F00C  F040   	movff	secs_II_message@block+2,btemp+2
  3511                           
  3512                           ; BSR set to: 0
  3513                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3514  003E64  52E5               	movf	postdec1,f,c
  3515  003E66  52E5               	movf	postdec1,f,c
  3516  003E68  0012               	return		;funcret
  3517  003E6A                     __end_of_secs_II_message:
  3518                           	opt callstack 0
  3519                           
  3520 ;; *************** function _sprintf *****************
  3521 ;; Defined at:
  3522 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  s               1  [STACK] PTR unsigned char 
  3525 ;;		 -> V(85), 
  3526 ;;  fmt             1  [STACK] PTR const unsigned char 
  3527 ;;		 -> STR_11(21), STR_10(17), STR_9(17), STR_8(19), 
  3528 ;;		 -> STR_7(23), STR_6(6), STR_5(14), STR_4(15), 
  3529 ;;		 -> STR_2(12), STR_1(17), 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  f               5  [STACK] struct _IO_FILE
  3532 ;;  ap              2  [STACK] PTR void [1]
  3533 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3534 ;;  ret             2    0        int 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  2  [STACK] int 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:   11
  3551 ;; This function calls:
  3552 ;;		_vfprintf
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text7
  3559  00465E                     __ptext7:
  3560                           	opt callstack 0
  3561  00465E                     _sprintf:
  3562                           	opt callstack 0
  3563                           
  3564                           ; BSR set to: 0
  3565                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3566  00465E  0E07               	movlw	7
  3567  004660  26E1               	addwf	fsr1l,f,c
  3568  004662  0E00               	movlw	0
  3569  004664  22E2               	addwfc	fsr1h,f,c
  3570                           
  3571                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3572                           
  3573                           ;incstack = 0
  3574  004666  0EF6               	movlw	246
  3575  004668  24E1               	addwf	fsr1l,w,c
  3576  00466A  6E48               	movwf	btemp+10,c
  3577  00466C  0EFF               	movlw	255
  3578  00466E  20E2               	addwfc	fsr1h,w,c
  3579  004670  6E49               	movwf	btemp+11,c
  3580                           
  3581                           ;stkvar	_ap @ sp[(-7)+5]
  3582  004672  0EFF               	movlw	-1
  3583  004674  0060  F127  FFE3   	movff	btemp+11,plusw1
  3584  00467A  0EFE               	movlw	-2
  3585  00467C  0060  F123  FFE3   	movff	btemp+10,plusw1
  3586                           
  3587                           ;stkvar	_s @ sp[(-7)+-2]
  3588  004682  0EF7               	movlw	-9
  3589  004684  006F FF8C  F049    	movff	plusw1,btemp+11
  3590                           
  3591                           ;stkvar	_f @ sp[(-7)+0]
  3592  00468A  0EF9               	movlw	-7
  3593  00468C  0060  F127  FFE3   	movff	btemp+11,plusw1
  3594                           
  3595                           ;stkvar	_f @ sp[(-7)+0]
  3596  004692  0EFA               	movlw	250
  3597  004694  24E1               	addwf	fsr1l,w,c
  3598  004696  6ED9               	movwf	fsr2l,c
  3599  004698  0EFF               	movlw	255
  3600  00469A  20E2               	addwfc	fsr1h,w,c
  3601  00469C  6EDA               	movwf	fsr2h,c
  3602  00469E  0E00               	movlw	0
  3603  0046A0  6EDE               	movwf	postinc2,c
  3604  0046A2  0E00               	movlw	0
  3605  0046A4  6EDD               	movwf	postdec2,c
  3606                           
  3607                           ;stkvar	_f @ sp[(-7)+0]
  3608  0046A6  0EFC               	movlw	252
  3609  0046A8  24E1               	addwf	fsr1l,w,c
  3610  0046AA  6ED9               	movwf	fsr2l,c
  3611  0046AC  0EFF               	movlw	255
  3612  0046AE  20E2               	addwfc	fsr1h,w,c
  3613  0046B0  6EDA               	movwf	fsr2h,c
  3614  0046B2  0E00               	movlw	0
  3615  0046B4  6EDE               	movwf	postinc2,c
  3616  0046B6  0E00               	movlw	0
  3617  0046B8  6EDD               	movwf	postdec2,c
  3618                           
  3619                           ;stkvar	_ap @ sp[(-7)+5]
  3620  0046BA  0EFE               	movlw	254
  3621  0046BC  24E1               	addwf	fsr1l,w,c
  3622  0046BE  6E3E               	movwf	btemp,c
  3623  0046C0  0EFF               	movlw	255
  3624  0046C2  20E2               	addwfc	fsr1h,w,c
  3625  0046C4  6E3F               	movwf	btemp+1,c
  3626  0046C6  0060  F0FB  FFE6   	movff	btemp,postinc1
  3627  0046CC  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  3628                           
  3629                           ;stkvar	_fmt @ sp[(-9)+-3]
  3630  0046D2  0EF4               	movlw	-12
  3631  0046D4  50E3               	movf	plusw1,w,c
  3632  0046D6  6EE6               	movwf	postinc1,c
  3633                           
  3634                           ;stkvar	_f @ sp[(-10)+0]
  3635  0046D8  0EF6               	movlw	246
  3636  0046DA  24E1               	addwf	fsr1l,w,c
  3637  0046DC  6E3E               	movwf	btemp,c
  3638  0046DE  0EFF               	movlw	255
  3639  0046E0  20E2               	addwfc	fsr1h,w,c
  3640  0046E2  6E3F               	movwf	btemp+1,c
  3641  0046E4  0060  F0FB  FFE6   	movff	btemp,postinc1
  3642  0046EA  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  3643  0046F0  EC85  F025         	call	_vfprintf	;wreg free
  3644                           
  3645                           ;stkvar	_f @ sp[(-7)+0]
  3646  0046F4  0EFA               	movlw	250
  3647  0046F6  24E1               	addwf	fsr1l,w,c
  3648  0046F8  6ED9               	movwf	fsr2l,c
  3649  0046FA  0EFF               	movlw	255
  3650  0046FC  20E2               	addwfc	fsr1h,w,c
  3651  0046FE  6EDA               	movwf	fsr2h,c
  3652  004700  50DF               	movf	indf2,w,c
  3653  004702  6E49               	movwf	btemp+11,c
  3654                           
  3655                           ;stkvar	_s @ sp[(-7)+-2]
  3656  004704  0EF7               	movlw	-9
  3657  004706  50E3               	movf	plusw1,w,c
  3658  004708  2449               	addwf	btemp+11,w,c
  3659  00470A  6ED9               	movwf	fsr2l,c
  3660  00470C  6ADA               	clrf	fsr2h,c
  3661  00470E  0E00               	movlw	0
  3662  004710  6EDF               	movwf	indf2,c
  3663                           
  3664                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3665  004712  0EF9               	movlw	249
  3666  004714  26E1               	addwf	fsr1l,f,c
  3667  004716  0EFF               	movlw	255
  3668  004718  22E2               	addwfc	fsr1h,f,c
  3669  00471A  52E5               	movf	postdec1,f,c
  3670  00471C  50E7               	movf	indf1,w,c
  3671  00471E  5EE1               	subwf	fsr1l,f,c
  3672  004720  0E00               	movlw	0
  3673  004722  5AE2               	subwfb	fsr1h,f,c
  3674  004724  0012               	return		;funcret
  3675  004726                     __end_of_sprintf:
  3676                           	opt callstack 0
  3677                           
  3678 ;; *************** function _r_protocol *****************
  3679 ;; Defined at:
  3680 ;;		line 42 in file "gemsecs.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  r_link          1  [STACK] PTR enum E16163
  3683 ;;		 -> V(85), 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  rxData          1  [STACK] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1  [STACK] enum E16901
  3688 ;; Registers used:
  3689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    5
  3702 ;; This function calls:
  3703 ;;		_StartTimer
  3704 ;;		_TimerDone
  3705 ;;		_UART1_Read
  3706 ;;		_UART1_Write
  3707 ;;		_UART1_is_rx_ready
  3708 ;;		_WaitMs
  3709 ;;		_run_checksum
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text8
  3716  002FF8                     __ptext8:
  3717                           	opt callstack 0
  3718  002FF8                     _r_protocol:
  3719                           	opt callstack 0
  3720                           
  3721                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3722  002FF8  52E6               	movf	postinc1,f,c
  3723                           
  3724                           ;gemsecs.c: 42: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0, retry = 3;;gemsecs.c: 
      +                          47:  switch (*r_link) {
  3725                           
  3726                           ;incstack = 0
  3727  002FFA  D140               	goto	l5749
  3728  002FFC                     l5645:
  3729                           
  3730                           ;gemsecs.c: 49:   if (UART1_is_rx_ready()) {
  3731  002FFC  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  3732  003000  503E               	movf	btemp,w,c
  3733  003002  B4D8               	btfsc	status,2,c
  3734  003004  D15C               	goto	l5751
  3735                           
  3736                           ;gemsecs.c: 50:    rxData = UART1_Read();
  3737  003006  ECF7  F028         	call	_UART1_Read	;wreg free
  3738                           
  3739                           ;stkvar	_rxData @ sp[(-1)+0]
  3740  00300A  0EFF               	movlw	-1
  3741  00300C  0060  F0FB  FFE3   	movff	btemp,plusw1
  3742                           
  3743                           ; BSR set to: 57
  3744                           ;gemsecs.c: 51:    if (rxData == 0x05) {
  3745                           ;stkvar	_rxData @ sp[(-1)+0]
  3746  003012  0EFF               	movlw	-1
  3747  003014  006F FF8C  F03E    	movff	plusw1,btemp
  3748  00301A  0E05               	movlw	5
  3749  00301C  183E               	xorwf	btemp,w,c
  3750  00301E  A4D8               	btfss	status,2,c
  3751  003020  D14E               	goto	l5751
  3752                           
  3753                           ; BSR set to: 57
  3754                           ;gemsecs.c: 52:     V.error = LINK_ERROR_NONE;
  3755  003022  0100               	movlb	0	; () banked
  3756  003024  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;gemsecs.c: 53:     *r_link = LINK_STATE_ENQ;
  3760                           ;stkvar	_r_link @ sp[(-1)+-1]
  3761  003026  0EFE               	movlw	-2
  3762  003028  50E3               	movf	plusw1,w,c
  3763  00302A  6ED9               	movwf	fsr2l,c
  3764  00302C  6ADA               	clrf	fsr2h,c
  3765  00302E  0E01               	movlw	1
  3766  003030  D10B               	goto	L11
  3767  003032                     l1519:
  3768                           
  3769                           ;gemsecs.c: 58:   rxData_l = 0;
  3770  003032  6A31               	clrf	r_protocol@rxData_l,c
  3771                           
  3772                           ;gemsecs.c: 59:   UART1_Write(0x04);
  3773  003034  0E04               	movlw	4
  3774  003036  6EE6               	movwf	postinc1,c
  3775  003038  ECD8  F028         	call	_UART1_Write	;wreg free
  3776                           
  3777                           ; BSR set to: 57
  3778                           ;gemsecs.c: 60:   StartTimer(TMR_T2, 2000);
  3779  00303C  0ED0               	movlw	208
  3780  00303E  6EE6               	movwf	postinc1,c
  3781  003040  0E07               	movlw	7
  3782  003042  6EE6               	movwf	postinc1,c
  3783  003044  0E02               	movlw	2
  3784  003046  6EE6               	movwf	postinc1,c
  3785  003048  EC35  F029         	call	_StartTimer	;wreg free
  3786                           
  3787                           ;gemsecs.c: 61:   *r_link = LINK_STATE_EOT;
  3788                           ;stkvar	_r_link @ sp[(-1)+-1]
  3789  00304C  0EFE               	movlw	-2
  3790  00304E  50E3               	movf	plusw1,w,c
  3791  003050  6ED9               	movwf	fsr2l,c
  3792  003052  6ADA               	clrf	fsr2h,c
  3793  003054  0E02               	movlw	2
  3794  003056  D0F8               	goto	L11
  3795  003058                     l5661:
  3796                           
  3797                           ;gemsecs.c: 69:   if (TimerDone(TMR_T2)) {
  3798  003058  0E02               	movlw	2
  3799  00305A  6EE6               	movwf	postinc1,c
  3800  00305C  EC51  F02B         	call	_TimerDone	;wreg free
  3801  003060  503E               	movf	btemp,w,c
  3802  003062  B4D8               	btfsc	status,2,c
  3803  003064  D013               	goto	l5671
  3804                           
  3805                           ;gemsecs.c: 70:    if (!retry--) {
  3806  003066  065E               	decf	r_protocol@retry,f,c
  3807  003068  285E               	incf	r_protocol@retry,w,c
  3808  00306A  A4D8               	btfss	status,2,c
  3809  00306C  D009               	goto	l5669
  3810                           
  3811                           ;gemsecs.c: 71:     V.error = LINK_ERROR_T2;
  3812  00306E  0E02               	movlw	2
  3813  003070  0100               	movlb	0	; () banked
  3814  003072  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;gemsecs.c: 72:     *r_link = LINK_STATE_NAK;
  3818                           ;stkvar	_r_link @ sp[(-1)+-1]
  3819  003074  0EFE               	movlw	-2
  3820  003076  50E3               	movf	plusw1,w,c
  3821  003078  6ED9               	movwf	fsr2l,c
  3822  00307A  6ADA               	clrf	fsr2h,c
  3823  00307C  0E05               	movlw	5
  3824  00307E  D0E4               	goto	L11
  3825  003080                     l5669:
  3826                           
  3827                           ;gemsecs.c: 74:     *r_link = LINK_STATE_IDLE;
  3828                           ;stkvar	_r_link @ sp[(-1)+-1]
  3829  003080  0EFE               	movlw	-2
  3830  003082  50E3               	movf	plusw1,w,c
  3831  003084  6ED9               	movwf	fsr2l,c
  3832  003086  6ADA               	clrf	fsr2h,c
  3833  003088  0E00               	movlw	0
  3834  00308A  D0DE               	goto	L11
  3835  00308C                     l5671:
  3836                           
  3837                           ;gemsecs.c: 77:    if (UART1_is_rx_ready()) {
  3838  00308C  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  3839  003090  503E               	movf	btemp,w,c
  3840  003092  B4D8               	btfsc	status,2,c
  3841  003094  D114               	goto	l5751
  3842                           
  3843                           ;gemsecs.c: 78:     rxData = UART1_Read();
  3844  003096  ECF7  F028         	call	_UART1_Read	;wreg free
  3845                           
  3846                           ;stkvar	_rxData @ sp[(-1)+0]
  3847  00309A  0EFF               	movlw	-1
  3848  00309C  0060  F0FB  FFE3   	movff	btemp,plusw1
  3849                           
  3850                           ; BSR set to: 57
  3851                           ;gemsecs.c: 79:     if (rxData_l == 0) {
  3852  0030A2  5031               	movf	r_protocol@rxData_l,w,c
  3853  0030A4  A4D8               	btfss	status,2,c
  3854  0030A6  D00C               	goto	l5683
  3855                           
  3856                           ; BSR set to: 57
  3857                           ;gemsecs.c: 80:      r_block.length = rxData;
  3858                           ;stkvar	_rxData @ sp[(-1)+0]
  3859  0030A8  0EFF               	movlw	-1
  3860  0030AA  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3861                           
  3862                           ; BSR set to: 57
  3863                           ;gemsecs.c: 81:      run_checksum(0, 1);
  3864  0030B0  0E01               	movlw	1
  3865  0030B2  6EE6               	movwf	postinc1,c
  3866  0030B4  0E00               	movlw	0
  3867  0030B6  6EE6               	movwf	postinc1,c
  3868  0030B8  ECD5  F029         	call	_run_checksum	;wreg free
  3869                           
  3870                           ;gemsecs.c: 82:      rxData_l++;
  3871  0030BC  2A31               	incf	r_protocol@rxData_l,f,c
  3872                           
  3873                           ;gemsecs.c: 83:     } else {
  3874  0030BE  D0FF               	goto	l5751
  3875  0030C0                     l5683:
  3876                           
  3877                           ; BSR set to: 57
  3878                           ;gemsecs.c: 87:      if (rxData_l <= 10)
  3879  0030C0  0E0B               	movlw	11
  3880  0030C2  6031               	cpfslt	r_protocol@rxData_l,c
  3881  0030C4  D018               	goto	l5687
  3882                           
  3883                           ; BSR set to: 57
  3884                           ;gemsecs.c: 88:       H10[1].block.b[r_block.length - rxData_l] = rxData;
  3885                           ;stkvar	_rxData @ sp[(-1)+0]
  3886  0030C6  0E00               	movlw	low _H10
  3887  0030C8  6E48               	movwf	btemp+10,c
  3888  0030CA  0E01               	movlw	high _H10
  3889  0030CC  6E49               	movwf	btemp+11,c
  3890  0030CE  0E0F               	movlw	15
  3891  0030D0  2648               	addwf	btemp+10,f,c
  3892  0030D2  0E00               	movlw	0
  3893  0030D4  2249               	addwfc	btemp+11,f,c
  3894  0030D6  0100               	movlb	0	; () banked
  3895  0030D8  516C               	movf	(_r_block+12)& (0+255),w,b
  3896  0030DA  2648               	addwf	btemp+10,f,c
  3897  0030DC  0E00               	movlw	0
  3898  0030DE  2249               	addwfc	btemp+11,f,c
  3899  0030E0  5031               	movf	r_protocol@rxData_l,w,c
  3900  0030E2  5C48               	subwf	btemp+10,w,c
  3901  0030E4  6ED9               	movwf	fsr2l,c
  3902  0030E6  5049               	movf	btemp+11,w,c
  3903  0030E8  A0D8               	btfss	status,0,c
  3904  0030EA  0449               	decf	btemp+11,w,c
  3905  0030EC  6EDA               	movwf	fsr2h,c
  3906  0030EE  0EFF               	movlw	-1
  3907  0030F0  006F FF8F FFDF     	movff	plusw1,indf2
  3908  0030F6                     l5687:
  3909                           
  3910                           ;gemsecs.c: 89:      if (rxData_l <= r_block.length)
  3911  0030F6  5031               	movf	r_protocol@rxData_l,w,c
  3912  0030F8  0100               	movlb	0	; () banked
  3913  0030FA  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3914  0030FC  A0D8               	btfss	status,0,c
  3915  0030FE  D00D               	goto	l5691
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;gemsecs.c: 90:       V.r_checksum = run_checksum(rxData, 0);
  3919  003100  0E00               	movlw	0
  3920  003102  6EE6               	movwf	postinc1,c
  3921                           
  3922                           ;stkvar	_rxData @ sp[(-2)+0]
  3923  003104  0EFE               	movlw	-2
  3924  003106  50E3               	movf	plusw1,w,c
  3925  003108  6EE6               	movwf	postinc1,c
  3926  00310A  ECD5  F029         	call	_run_checksum	;wreg free
  3927  00310E  0060  F0F8  F0D9   	movff	btemp,_V+80	;volatile
  3928  003114  0060  F0FC  F0DA   	movff	btemp+1,_V+81	;volatile
  3929  00311A                     l5691:
  3930                           
  3931                           ;gemsecs.c: 92:      if (rxData_l == r_block.length + 1)
  3932  00311A  5031               	movf	r_protocol@rxData_l,w,c
  3933  00311C  6E48               	movwf	btemp+10,c
  3934  00311E  6A49               	clrf	btemp+11,c
  3935  003120  0100               	movlb	0	; () banked
  3936  003122  516C               	movf	(_r_block+12)& (0+255),w,b
  3937  003124  6E46               	movwf	btemp+8,c
  3938  003126  6A47               	clrf	btemp+9,c
  3939  003128  0E01               	movlw	1
  3940  00312A  2646               	addwf	btemp+8,f,c
  3941  00312C  0E00               	movlw	0
  3942  00312E  2247               	addwfc	btemp+9,f,c
  3943  003130  5048               	movf	btemp+10,w,c
  3944  003132  1846               	xorwf	btemp+8,w,c
  3945  003134  E109               	bnz	l5695
  3946  003136  5049               	movf	btemp+11,w,c
  3947  003138  1847               	xorwf	btemp+9,w,c
  3948  00313A  A4D8               	btfss	status,2,c
  3949  00313C  D005               	goto	l5695
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;gemsecs.c: 93:       H10[1].checksum = (uint16_t) rxData << 8;
  3953                           ;stkvar	_rxData @ sp[(-1)+0]
  3954  00313E  0EFF               	movlw	-1
  3955  003140  50E3               	movf	plusw1,w,c
  3956  003142  0101               	movlb	1	; () banked
  3957  003144  6F0E               	movwf	(_H10+14)& (0+255),b
  3958  003146  6B0D               	clrf	(_H10+13)& (0+255),b
  3959  003148                     l5695:
  3960                           
  3961                           ;gemsecs.c: 94:      if (rxData_l == r_block.length + 2)
  3962  003148  5031               	movf	r_protocol@rxData_l,w,c
  3963  00314A  6E48               	movwf	btemp+10,c
  3964  00314C  6A49               	clrf	btemp+11,c
  3965  00314E  0100               	movlb	0	; () banked
  3966  003150  516C               	movf	(_r_block+12)& (0+255),w,b
  3967  003152  6E46               	movwf	btemp+8,c
  3968  003154  6A47               	clrf	btemp+9,c
  3969  003156  0E02               	movlw	2
  3970  003158  2646               	addwf	btemp+8,f,c
  3971  00315A  0E00               	movlw	0
  3972  00315C  2247               	addwfc	btemp+9,f,c
  3973  00315E  5048               	movf	btemp+10,w,c
  3974  003160  1846               	xorwf	btemp+8,w,c
  3975  003162  E10A               	bnz	l5699
  3976  003164  5049               	movf	btemp+11,w,c
  3977  003166  1847               	xorwf	btemp+9,w,c
  3978  003168  A4D8               	btfss	status,2,c
  3979  00316A  D006               	goto	l5699
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;gemsecs.c: 95:       H10[1].checksum += rxData;
  3983                           ;stkvar	_rxData @ sp[(-1)+0]
  3984  00316C  0EFF               	movlw	-1
  3985  00316E  50E3               	movf	plusw1,w,c
  3986  003170  0101               	movlb	1	; () banked
  3987  003172  270D               	addwf	(_H10+13)& (0+255),f,b
  3988  003174  0E00               	movlw	0
  3989  003176  230E               	addwfc	(_H10+14)& (0+255),f,b
  3990  003178                     l5699:
  3991                           
  3992                           ;gemsecs.c: 97:      rxData_l++;
  3993  003178  2A31               	incf	r_protocol@rxData_l,f,c
  3994                           
  3995                           ;gemsecs.c: 98:      if (rxData_l > (r_block.length + 2)) {
  3996  00317A  5031               	movf	r_protocol@rxData_l,w,c
  3997  00317C  6E48               	movwf	btemp+10,c
  3998  00317E  6A49               	clrf	btemp+11,c
  3999  003180  0100               	movlb	0	; () banked
  4000  003182  516C               	movf	(_r_block+12)& (0+255),w,b
  4001  003184  6E46               	movwf	btemp+8,c
  4002  003186  6A47               	clrf	btemp+9,c
  4003  003188  0E02               	movlw	2
  4004  00318A  2646               	addwf	btemp+8,f,c
  4005  00318C  0E00               	movlw	0
  4006  00318E  2247               	addwfc	btemp+9,f,c
  4007  003190  5048               	movf	btemp+10,w,c
  4008  003192  5C46               	subwf	btemp+8,w,c
  4009  003194  5047               	movf	btemp+9,w,c
  4010  003196  0A80               	xorlw	128
  4011  003198  6E3E               	movwf	btemp,c
  4012  00319A  5049               	movf	btemp+11,w,c
  4013  00319C  0A80               	xorlw	128
  4014  00319E  583E               	subwfb	btemp,w,c
  4015  0031A0  B0D8               	btfsc	status,0,c
  4016  0031A2  D08D               	goto	l5751
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;gemsecs.c: 99:       if (V.r_checksum == H10[1].checksum) {
  4020  0031A4  0101               	movlb	1	; () banked
  4021  0031A6  510D               	movf	(_H10+13)& (0+255),w,b
  4022  0031A8  0100               	movlb	0	; () banked
  4023  0031AA  19D9               	xorwf	(_V+80)& (0+255),w,b	;volatile
  4024  0031AC  E10E               	bnz	l5709
  4025  0031AE  0101               	movlb	1	; () banked
  4026  0031B0  510E               	movf	(_H10+14)& (0+255),w,b
  4027  0031B2  0100               	movlb	0	; () banked
  4028  0031B4  19DA               	xorwf	(_V+81)& (0+255),w,b	;volatile
  4029  0031B6  A4D8               	btfss	status,2,c
  4030  0031B8  D008               	goto	l5709
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;gemsecs.c: 100:        *r_link = LINK_STATE_ACK;
  4034                           ;stkvar	_r_link @ sp[(-1)+-1]
  4035  0031BA  0EFE               	movlw	-2
  4036  0031BC  50E3               	movf	plusw1,w,c
  4037  0031BE  6ED9               	movwf	fsr2l,c
  4038  0031C0  6ADA               	clrf	fsr2h,c
  4039  0031C2  0E03               	movlw	3
  4040  0031C4  D041               	goto	L11
  4041  0031C6                     l5707:
  4042  0031C6  ECF7  F028         	call	_UART1_Read	;wreg free
  4043  0031CA                     l5709:
  4044                           
  4045                           ;gemsecs.c: 102:        while (UART1_is_rx_ready())
  4046  0031CA  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  4047  0031CE  503E               	movf	btemp,w,c
  4048  0031D0  A4D8               	btfss	status,2,c
  4049  0031D2  D7F9               	goto	l5707
  4050                           
  4051                           ;gemsecs.c: 104:        WaitMs(500);
  4052  0031D4  0EF4               	movlw	244
  4053  0031D6  6EE6               	movwf	postinc1,c
  4054  0031D8  0E01               	movlw	1
  4055  0031DA  6EE6               	movwf	postinc1,c
  4056  0031DC  ECAA  F029         	call	_WaitMs	;wreg free
  4057                           
  4058                           ;gemsecs.c: 105:        V.error = LINK_ERROR_CHECKSUM;
  4059  0031E0  0E05               	movlw	5
  4060  0031E2  D746               	goto	L12
  4061  0031E4                     l5717:
  4062                           
  4063                           ;gemsecs.c: 114:   V.stream = H10[1].block.block.stream;
  4064  0031E4  0101               	movlb	1	; () banked
  4065  0031E6  5116               	movf	(_H10+22)& (0+255),w,b
  4066  0031E8  0B7F               	andlw	127
  4067  0031EA  0100               	movlb	0	; () banked
  4068  0031EC  6FD5               	movwf	(_V+76)& (0+255),b	;volatile
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;gemsecs.c: 115:   V.function = H10[1].block.block.function;
  4072  0031EE  C115  F0D6         	movff	_H10+21,_V+77	;volatile
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;gemsecs.c: 116:   V.systemb = H10[1].block.block.systemb;
  4076  0031F2  C10F  F0D1         	movff	_H10+15,_V+72	;volatile
  4077  0031F6  C110  F0D2         	movff	_H10+16,_V+73	;volatile
  4078  0031FA  C111  F0D3         	movff	_H10+17,_V+74	;volatile
  4079  0031FE  C112  F0D4         	movff	_H10+18,_V+75	;volatile
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;gemsecs.c: 117:   V.rbit = H10[1].block.block.rbit;
  4083  003202  0101               	movlb	1	; () banked
  4084  003204  AF18               	btfss	(_H10+24)& (0+255),7,b
  4085  003206  D003               	bra	u2975
  4086  003208  0100               	movlb	0	; () banked
  4087  00320A  81DD               	bsf	(_V+84)& (0+255),0,b	;volatile
  4088  00320C  D002               	bra	u2977
  4089  00320E                     u2975:
  4090  00320E  0100               	movlb	0	; () banked
  4091  003210  91DD               	bcf	(_V+84)& (0+255),0,b	;volatile
  4092  003212                     u2977:
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;gemsecs.c: 118:   V.wbit = H10[1].block.block.wbit;
  4096  003212  0101               	movlb	1	; () banked
  4097  003214  AF16               	btfss	(_H10+22)& (0+255),7,b
  4098  003216  D003               	bra	u2985
  4099  003218  0100               	movlb	0	; () banked
  4100  00321A  83DD               	bsf	(_V+84)& (0+255),1,b	;volatile
  4101  00321C  D002               	bra	u2987
  4102  00321E                     u2985:
  4103  00321E  0100               	movlb	0	; () banked
  4104  003220  93DD               	bcf	(_V+84)& (0+255),1,b	;volatile
  4105  003222                     u2987:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;gemsecs.c: 119:   V.ebit = H10[1].block.block.ebit;
  4109  003222  0101               	movlb	1	; () banked
  4110  003224  AF14               	btfss	(_H10+20)& (0+255),7,b
  4111  003226  D003               	bra	u2995
  4112  003228  0100               	movlb	0	; () banked
  4113  00322A  85DD               	bsf	(_V+84)& (0+255),2,b	;volatile
  4114  00322C  D002               	bra	u2997
  4115  00322E                     u2995:
  4116  00322E  0100               	movlb	0	; () banked
  4117  003230  95DD               	bcf	(_V+84)& (0+255),2,b	;volatile
  4118  003232                     u2997:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;gemsecs.c: 120:   UART1_Write(0x06);
  4122  003232  0E06               	movlw	6
  4123  003234  6EE6               	movwf	postinc1,c
  4124  003236  ECD8  F028         	call	_UART1_Write	;wreg free
  4125                           
  4126                           ; BSR set to: 57
  4127                           ;gemsecs.c: 121:   V.failed_receive = 0;
  4128  00323A  0100               	movlb	0	; () banked
  4129  00323C  99DD               	bcf	(_V+84)& (0+255),4,b	;volatile
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;gemsecs.c: 122:   *r_link = LINK_STATE_DONE;
  4133                           ;stkvar	_r_link @ sp[(-1)+-1]
  4134  00323E  0EFE               	movlw	-2
  4135  003240  50E3               	movf	plusw1,w,c
  4136  003242  6ED9               	movwf	fsr2l,c
  4137  003244  6ADA               	clrf	fsr2h,c
  4138  003246  0E04               	movlw	4
  4139  003248                     L11:
  4140  003248  6EDF               	movwf	indf2,c
  4141                           
  4142                           ;gemsecs.c: 123:   break;
  4143  00324A  D039               	goto	l5751
  4144  00324C                     l1539:
  4145                           
  4146                           ;gemsecs.c: 125:   V.failed_receive = 1;
  4147  00324C  0100               	movlb	0	; () banked
  4148  00324E  89DD               	bsf	(_V+84)& (0+255),4,b	;volatile
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;gemsecs.c: 126:   UART1_Write(0x15);
  4152  003250  0E15               	movlw	21
  4153  003252  6EE6               	movwf	postinc1,c
  4154  003254  ECD8  F028         	call	_UART1_Write	;wreg free
  4155                           
  4156                           ; BSR set to: 57
  4157                           ;gemsecs.c: 127:   *r_link = LINK_STATE_ERROR;
  4158                           ;stkvar	_r_link @ sp[(-1)+-1]
  4159  003258  0EFE               	movlw	-2
  4160  00325A  50E3               	movf	plusw1,w,c
  4161  00325C  6ED9               	movwf	fsr2l,c
  4162  00325E  6ADA               	clrf	fsr2h,c
  4163  003260  0E06               	movlw	6
  4164  003262  6EDF               	movwf	indf2,c
  4165                           
  4166                           ;gemsecs.c: 128:   while ((uart1RxCount)) {
  4167  003264  D002               	goto	l5741
  4168  003266                     l5739:
  4169                           
  4170                           ; BSR set to: 57
  4171                           ;gemsecs.c: 129:    UART1_Read();
  4172  003266  ECF7  F028         	call	_UART1_Read	;wreg free
  4173  00326A                     l5741:
  4174                           
  4175                           ; BSR set to: 57
  4176                           ;gemsecs.c: 128:   while ((uart1RxCount)) {
  4177  00326A  5038               	movf	_uart1RxCount,w,c	;volatile
  4178  00326C  A4D8               	btfss	status,2,c
  4179  00326E  D7FB               	goto	l5739
  4180                           
  4181                           ; BSR set to: 57
  4182                           ;gemsecs.c: 131:   retry = 3;
  4183  003270  0E03               	movlw	3
  4184  003272  6E5E               	movwf	r_protocol@retry,c
  4185                           
  4186                           ;gemsecs.c: 132:   break;
  4187  003274  D024               	goto	l5751
  4188  003276                     l1544:
  4189                           
  4190                           ;gemsecs.c: 136:   V.failed_receive = 0;
  4191  003276  0100               	movlb	0	; () banked
  4192  003278  99DD               	bcf	(_V+84)& (0+255),4,b	;volatile
  4193  00327A  D702               	goto	l5669
  4194  00327C                     l5749:
  4195                           
  4196                           ;stkvar	_r_link @ sp[(-1)+-1]
  4197  00327C  0EFE               	movlw	-2
  4198  00327E  50E3               	movf	plusw1,w,c
  4199  003280  6ED9               	movwf	fsr2l,c
  4200  003282  6ADA               	clrf	fsr2h,c
  4201  003284  50DF               	movf	indf2,w,c
  4202  003286  6E48               	movwf	btemp+10,c
  4203  003288  6A49               	clrf	btemp+11,c
  4204                           
  4205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4206                           ; Switch size 1, requested type "simple"
  4207                           ; Number of cases is 1, Range of values is 0 to 0
  4208                           ; switch strategies available:
  4209                           ; Name         Instructions Cycles
  4210                           ; simple_byte            4     3 (average)
  4211                           ;	Chosen strategy is simple_byte
  4212  00328A  5049               	movf	btemp+11,w,c
  4213  00328C  0A00               	xorlw	0	; case 0
  4214  00328E  A4D8               	btfss	status,2,c
  4215  003290  D6F7               	goto	l5669
  4216                           
  4217                           ; Switch size 1, requested type "simple"
  4218                           ; Number of cases is 7, Range of values is 0 to 6
  4219                           ; switch strategies available:
  4220                           ; Name         Instructions Cycles
  4221                           ; simple_byte           22    12 (average)
  4222                           ;	Chosen strategy is simple_byte
  4223  003292  5048               	movf	btemp+10,w,c
  4224  003294  0A00               	xorlw	0	; case 0
  4225  003296  B4D8               	btfsc	status,2,c
  4226  003298  D6B1               	goto	l5645
  4227  00329A  0A01               	xorlw	1	; case 1
  4228  00329C  B4D8               	btfsc	status,2,c
  4229  00329E  D6C9               	goto	l1519
  4230  0032A0  0A03               	xorlw	3	; case 2
  4231  0032A2  B4D8               	btfsc	status,2,c
  4232  0032A4  D6D9               	goto	l5661
  4233  0032A6  0A01               	xorlw	1	; case 3
  4234  0032A8  B4D8               	btfsc	status,2,c
  4235  0032AA  D79C               	goto	l5717
  4236  0032AC  0A07               	xorlw	7	; case 4
  4237  0032AE  B4D8               	btfsc	status,2,c
  4238  0032B0  D7E2               	goto	l1544
  4239  0032B2  0A01               	xorlw	1	; case 5
  4240  0032B4  B4D8               	btfsc	status,2,c
  4241  0032B6  D7CA               	goto	l1539
  4242  0032B8  0A03               	xorlw	3	; case 6
  4243  0032BA  A4D8               	btfss	status,2,c
  4244  0032BC  D6E1               	goto	l5669
  4245  0032BE                     l5751:
  4246                           
  4247                           ;gemsecs.c: 142:  return *r_link;
  4248                           ;stkvar	_r_link @ sp[(-1)+-1]
  4249  0032BE  0EFE               	movlw	-2
  4250  0032C0  50E3               	movf	plusw1,w,c
  4251  0032C2  6ED9               	movwf	fsr2l,c
  4252  0032C4  6ADA               	clrf	fsr2h,c
  4253  0032C6  50DF               	movf	indf2,w,c
  4254  0032C8  6E3E               	movwf	btemp,c
  4255                           
  4256                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4257  0032CA  52E5               	movf	postdec1,f,c
  4258  0032CC  52E5               	movf	postdec1,f,c
  4259  0032CE  0012               	return		;funcret
  4260  0032D0                     __end_of_r_protocol:
  4261                           	opt callstack 0
  4262                           
  4263 ;; *************** function _run_checksum *****************
  4264 ;; Defined at:
  4265 ;;		line 31 in file "gemsecs.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  byte_block      1  [STACK] unsigned char 
  4268 ;;  clear           1  [STACK] _Bool 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2  [STACK] unsigned short 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4275 ;; Tracked objects:
  4276 ;;		On entry : 6/39
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    3
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_r_protocol
  4291 ;; This function uses a reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text9
  4295  0053AA                     __ptext9:
  4296                           	opt callstack 0
  4297  0053AA                     _run_checksum:
  4298                           	opt callstack 26
  4299                           
  4300                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  4301                           ;stkvar	_clear @ sp[(0)+-2]
  4302                           
  4303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4304                           ;incstack = 0
  4305  0053AA  0EFE               	movlw	-2
  4306  0053AC  50E3               	movf	plusw1,w,c
  4307  0053AE  B4D8               	btfsc	status,2,c
  4308  0053B0  D002               	goto	l5301
  4309                           
  4310                           ;gemsecs.c: 36:   sum = 0;
  4311  0053B2  6A2A               	clrf	run_checksum@sum,c
  4312  0053B4  6A2B               	clrf	run_checksum@sum+1,c
  4313  0053B6                     l5301:
  4314                           
  4315                           ;gemsecs.c: 38:  sum += byte_block;
  4316                           ;stkvar	_byte_block @ sp[(0)+-1]
  4317  0053B6  0EFF               	movlw	-1
  4318  0053B8  50E3               	movf	plusw1,w,c
  4319  0053BA  262A               	addwf	run_checksum@sum,f,c
  4320  0053BC  0E00               	movlw	0
  4321  0053BE  222B               	addwfc	run_checksum@sum+1,f,c
  4322                           
  4323                           ;gemsecs.c: 39:  return sum;
  4324  0053C0  0060  F0A8  F03E   	movff	run_checksum@sum,btemp
  4325  0053C6  0060  F0AC  F03F   	movff	run_checksum@sum+1,btemp+1
  4326                           
  4327                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  4328  0053CC  52E5               	movf	postdec1,f,c
  4329  0053CE  52E5               	movf	postdec1,f,c
  4330  0053D0  0012               	return		;funcret
  4331  0053D2                     __end_of_run_checksum:
  4332                           	opt callstack 0
  4333                           
  4334 ;; *************** function _WaitMs *****************
  4335 ;; Defined at:
  4336 ;;		line 31 in file "timers.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  numMilliseco    2  [STACK] unsigned short 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1  [STACK] void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/3B
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    4
  4357 ;; This function calls:
  4358 ;;		_StartTimer
  4359 ;;		_TimerDone
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;;		_r_protocol
  4363 ;; This function uses a reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text10
  4367  005354                     __ptext10:
  4368                           	opt callstack 0
  4369  005354                     _WaitMs:
  4370                           	opt callstack 25
  4371                           
  4372                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4373                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4374                           
  4375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4376                           ;incstack = 0
  4377  005354  0EFE               	movlw	-2
  4378  005356  006F FF8F FFE6     	movff	plusw1,postinc1
  4379  00535C  006F FF8F FFE6     	movff	plusw1,postinc1
  4380  005362  0E00               	movlw	0
  4381  005364  6EE6               	movwf	postinc1,c
  4382  005366  EC35  F029         	call	_StartTimer	;wreg free
  4383  00536A                     l5239:
  4384                           
  4385                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4386  00536A  0E00               	movlw	0
  4387  00536C  6EE6               	movwf	postinc1,c
  4388  00536E  EC51  F02B         	call	_TimerDone	;wreg free
  4389  005372  503E               	movf	btemp,w,c
  4390  005374  B4D8               	btfsc	status,2,c
  4391  005376  D7F9               	goto	l5239
  4392                           
  4393                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4394  005378  52E5               	movf	postdec1,f,c
  4395  00537A  52E5               	movf	postdec1,f,c
  4396  00537C  0012               	return		;funcret
  4397  00537E                     __end_of_WaitMs:
  4398                           	opt callstack 0
  4399                           
  4400 ;; *************** function _TimerDone *****************
  4401 ;; Defined at:
  4402 ;;		line 20 in file "timers.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  timer           1  [STACK] unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1  [STACK] _Bool 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    3
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_r_protocol
  4427 ;;		_t_protocol
  4428 ;;		_WaitMs
  4429 ;; This function uses a reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text11
  4433  0056A2                     __ptext11:
  4434                           	opt callstack 0
  4435  0056A2                     _TimerDone:
  4436                           	opt callstack 26
  4437                           
  4438                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4439                           ;stkvar	_timer @ sp[(0)+-1]
  4440                           
  4441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4442                           ;incstack = 0
  4443  0056A2  0EFF               	movlw	-1
  4444  0056A4  50E3               	movf	plusw1,w,c
  4445  0056A6  0D02               	mullw	2
  4446  0056A8  50F3               	movf	prodl,w,c
  4447  0056AA  0F79               	addlw	low _tickCount
  4448  0056AC  6ED9               	movwf	fsr2l,c
  4449  0056AE  6ADA               	clrf	fsr2h,c
  4450  0056B0  50DE               	movf	postinc2,w,c
  4451  0056B2  10DE               	iorwf	postinc2,w,c
  4452  0056B4  A4D8               	btfss	status,2,c
  4453  0056B6  D002               	goto	l5085
  4454                           
  4455                           ;timers.c: 23:   return 1;
  4456  0056B8  0E01               	movlw	1
  4457  0056BA  D001               	goto	L13
  4458  0056BC                     l5085:
  4459                           
  4460                           ;timers.c: 25:  return 0;
  4461  0056BC  0E00               	movlw	0
  4462  0056BE                     L13:
  4463  0056BE  6E3E               	movwf	btemp,c
  4464                           
  4465                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4466  0056C0  52E5               	movf	postdec1,f,c
  4467  0056C2  0012               	return		;funcret
  4468  0056C4                     __end_of_TimerDone:
  4469                           	opt callstack 0
  4470                           
  4471 ;; *************** function _StartTimer *****************
  4472 ;; Defined at:
  4473 ;;		line 12 in file "timers.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  timer           1  [STACK] unsigned char 
  4476 ;;  count           2  [STACK] unsigned short 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1  [STACK] void 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/39
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    3
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_r_protocol
  4499 ;;		_t_protocol
  4500 ;;		_WaitMs
  4501 ;; This function uses a reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text12
  4505  00526A                     __ptext12:
  4506                           	opt callstack 0
  4507  00526A                     _StartTimer:
  4508                           	opt callstack 26
  4509                           
  4510                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4511                           ;stkvar	_count @ sp[(0)+-3]
  4512                           
  4513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4514                           ;incstack = 0
  4515  00526A  0EFD               	movlw	-3
  4516  00526C  006F FF8C  F048    	movff	plusw1,btemp+10
  4517  005272  0EFE               	movlw	-2
  4518  005274  006F FF8C  F049    	movff	plusw1,btemp+11
  4519  00527A  90D8               	bcf	status,0,c
  4520  00527C  3448               	rlcf	btemp+10,w,c
  4521  00527E  6E46               	movwf	btemp+8,c
  4522  005280  3449               	rlcf	btemp+11,w,c
  4523  005282  6E47               	movwf	btemp+9,c
  4524                           
  4525                           ;stkvar	_timer @ sp[(0)+-1]
  4526  005284  0EFF               	movlw	-1
  4527  005286  50E3               	movf	plusw1,w,c
  4528  005288  0D02               	mullw	2
  4529  00528A  50F3               	movf	prodl,w,c
  4530  00528C  0F79               	addlw	low _tickCount
  4531  00528E  6ED9               	movwf	fsr2l,c
  4532  005290  6ADA               	clrf	fsr2h,c
  4533  005292  0060  F11B  FFDE   	movff	btemp+8,postinc2
  4534  005298  0060  F11F  FFDD   	movff	btemp+9,postdec2
  4535                           
  4536                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4537  00529E  52E5               	movf	postdec1,f,c
  4538  0052A0  52E5               	movf	postdec1,f,c
  4539  0052A2  52E5               	movf	postdec1,f,c
  4540  0052A4  0012               	return		;funcret
  4541  0052A6                     __end_of_StartTimer:
  4542                           	opt callstack 0
  4543                           
  4544 ;; *************** function _UART1_is_rx_ready *****************
  4545 ;; Defined at:
  4546 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1  [STACK] unsigned char 
  4553 ;; Registers used:
  4554 ;;		btemp
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    3
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_r_protocol
  4571 ;;		_t_protocol
  4572 ;; This function uses a reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text13
  4576  005966                     __ptext13:
  4577                           	opt callstack 0
  4578  005966                     _UART1_is_rx_ready:
  4579                           	opt callstack 26
  4580                           
  4581                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4582                           
  4583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4584                           ;incstack = 0
  4585  005966  0060  F0E0  F03E   	movff	_uart1RxCount,btemp	;volatile
  4586                           
  4587                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4588  00596C  0012               	return		;funcret
  4589  00596E                     __end_of_UART1_is_rx_ready:
  4590                           	opt callstack 0
  4591                           
  4592 ;; *************** function _UART1_Write *****************
  4593 ;; Defined at:
  4594 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  txData          1  [STACK] unsigned char 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1  [STACK] void 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 3F/39
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    3
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_r_protocol
  4619 ;;		_t_protocol
  4620 ;;		_secs_send
  4621 ;; This function uses a reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text14
  4625  0051B0                     __ptext14:
  4626                           	opt callstack 0
  4627  0051B0                     _UART1_Write:
  4628                           	opt callstack 25
  4629                           
  4630                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4631                           
  4632                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4633                           
  4634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4635                           ;incstack = 0
  4636  0051B0  503B               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4637  0051B2  B4D8               	btfsc	status,2,c
  4638  0051B4  D7FD               	goto	_UART1_Write
  4639                           
  4640                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4641  0051B6  0139               	movlb	57	; () banked
  4642  0051B8  B993               	btfsc	147,4,b	;volatile
  4643  0051BA  D005               	goto	l579
  4644                           
  4645                           ; BSR set to: 57
  4646                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4647                           ;stkvar	_txData @ sp[(0)+-1]
  4648  0051BC  0EFF               	movlw	-1
  4649  0051BE  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4650                           
  4651                           ;mcc_generated_files/uart1.c: 186:  } else {
  4652  0051C4  D011               	goto	l5021
  4653  0051C6                     l579:
  4654                           
  4655                           ; BSR set to: 57
  4656                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4657  0051C6  9993               	bcf	147,4,b	;volatile
  4658                           
  4659                           ; BSR set to: 57
  4660                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4661                           ;stkvar	_txData @ sp[(0)+-1]
  4662  0051C8  0EC0               	movlw	low _uart1TxBuffer
  4663  0051CA  243D               	addwf	_uart1TxHead,w,c	;volatile
  4664  0051CC  6ED9               	movwf	fsr2l,c
  4665  0051CE  6ADA               	clrf	fsr2h,c
  4666  0051D0  0E02               	movlw	high _uart1TxBuffer
  4667  0051D2  22DA               	addwfc	fsr2h,f,c
  4668  0051D4  0EFF               	movlw	-1
  4669  0051D6  006F FF8F FFDF     	movff	plusw1,indf2
  4670                           
  4671                           ; BSR set to: 57
  4672  0051DC  2A3D               	incf	_uart1TxHead,f,c	;volatile
  4673                           
  4674                           ; BSR set to: 57
  4675                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4676  0051DE  0E3F               	movlw	63
  4677  0051E0  643D               	cpfsgt	_uart1TxHead,c
  4678  0051E2  D001               	goto	l5019
  4679                           
  4680                           ; BSR set to: 57
  4681                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4682  0051E4  6A3D               	clrf	_uart1TxHead,c	;volatile
  4683  0051E6                     l5019:
  4684                           
  4685                           ; BSR set to: 57
  4686                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4687  0051E6  063B               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4688  0051E8                     l5021:
  4689                           
  4690                           ; BSR set to: 57
  4691                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4692  0051E8  8993               	bsf	147,4,b	;volatile
  4693                           
  4694                           ; BSR set to: 57
  4695                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4696  0051EA  52E5               	movf	postdec1,f,c
  4697  0051EC  0012               	return		;funcret
  4698  0051EE                     __end_of_UART1_Write:
  4699                           	opt callstack 0
  4700                           
  4701 ;; *************** function _UART1_Read *****************
  4702 ;; Defined at:
  4703 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  readValue       1  [STACK] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1  [STACK] unsigned char 
  4710 ;; Registers used:
  4711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 3F/39
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    3
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_r_protocol
  4728 ;;		_t_protocol
  4729 ;; This function uses a reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text15
  4733  0051EE                     __ptext15:
  4734                           	opt callstack 0
  4735  0051EE                     _UART1_Read:
  4736                           	opt callstack 0
  4737                           
  4738                           ; BSR set to: 57
  4739                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4740  0051EE  52E6               	movf	postinc1,f,c
  4741  0051F0                     
  4742                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4743                           
  4744                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4745  0051F0  5038               	movf	_uart1RxCount,w,c	;volatile
  4746  0051F2  B4D8               	btfsc	status,2,c
  4747  0051F4  D7FD               	goto	l5203
  4748                           
  4749                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4750  0051F6  0E80               	movlw	low _uart1RxBuffer
  4751  0051F8  2439               	addwf	_uart1RxTail,w,c	;volatile
  4752  0051FA  6ED9               	movwf	fsr2l,c
  4753  0051FC  6ADA               	clrf	fsr2h,c
  4754  0051FE  0E02               	movlw	high _uart1RxBuffer
  4755  005200  22DA               	addwfc	fsr2h,f,c
  4756  005202  50DF               	movf	indf2,w,c
  4757  005204  6E49               	movwf	btemp+11,c
  4758                           
  4759                           ;stkvar	_readValue @ sp[(-1)+0]
  4760  005206  0EFF               	movlw	-1
  4761  005208  0060  F127  FFE3   	movff	btemp+11,plusw1
  4762  00520E  2A39               	incf	_uart1RxTail,f,c	;volatile
  4763                           
  4764                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4765  005210  0E3F               	movlw	63
  4766  005212  6439               	cpfsgt	_uart1RxTail,c
  4767  005214  D001               	goto	l572
  4768                           
  4769                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4770  005216  6A39               	clrf	_uart1RxTail,c	;volatile
  4771  005218                     l572:
  4772                           
  4773                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4774  005218  0139               	movlb	57	; () banked
  4775  00521A  9793               	bcf	147,3,b	;volatile
  4776                           
  4777                           ; BSR set to: 57
  4778                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4779  00521C  0638               	decf	_uart1RxCount,f,c	;volatile
  4780                           
  4781                           ; BSR set to: 57
  4782                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4783  00521E  8793               	bsf	147,3,b	;volatile
  4784                           
  4785                           ; BSR set to: 57
  4786                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4787                           ;stkvar	_readValue @ sp[(-1)+0]
  4788  005220  0EFF               	movlw	-1
  4789  005222  006F FF8C  F03E    	movff	plusw1,btemp
  4790                           
  4791                           ; BSR set to: 57
  4792                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4793  005228  52E5               	movf	postdec1,f,c
  4794  00522A  0012               	return		;funcret
  4795  00522C                     __end_of_UART1_Read:
  4796                           	opt callstack 0
  4797                           
  4798 ;; *************** function _init_display *****************
  4799 ;; Defined at:
  4800 ;;		line 35 in file "eadog.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1  [STACK] void 
  4807 ;; Registers used:
  4808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 3F/3D
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4818 ;;Total ram usage:        0 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    5
  4821 ;; This function calls:
  4822 ;;		_ringBufS_init
  4823 ;;		_send_lcd_cmd
  4824 ;;		_send_lcd_cmd_long
  4825 ;;		_wdtdelay
  4826 ;; This function is called by:
  4827 ;;		_main
  4828 ;; This function uses a reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text16
  4832  0043D2                     __ptext16:
  4833                           	opt callstack 0
  4834  0043D2                     _init_display:
  4835                           	opt callstack 25
  4836                           
  4837                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4838                           
  4839                           ; BSR set to: 57
  4840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4841                           ;incstack = 0
  4842  0043D2  0E43               	movlw	low _ring_buf1
  4843  0043D4  0100               	movlb	0	; () banked
  4844  0043D6  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4845  0043D8  0E03               	movlw	high _ring_buf1
  4846  0043DA  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4847                           
  4848                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4849  0043DC  0E00               	movlw	low _ring_buf2
  4850  0043DE  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4851  0043E0  0E03               	movlw	high _ring_buf2
  4852  0043E2  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4856  0043E4  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4857  0043EA  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4858  0043F0  EC11  F02A         	call	_ringBufS_init	;wreg free
  4859                           
  4860                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4861  0043F4  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4862  0043FA  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4863  004400  EC11  F02A         	call	_ringBufS_init	;wreg free
  4864                           
  4865                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4866  004404  80BE               	bsf	16318,0,c	;volatile
  4867  004406  84BC               	bsf	16316,2,c	;volatile
  4868                           
  4869                           ;eadog.c: 44:  wdtdelay(350000);
  4870  004408  0E30               	movlw	48
  4871  00440A  6EE6               	movwf	postinc1,c
  4872  00440C  0E57               	movlw	87
  4873  00440E  6EE6               	movwf	postinc1,c
  4874  004410  0E05               	movlw	5
  4875  004412  6EE6               	movwf	postinc1,c
  4876  004414  0E00               	movlw	0
  4877  004416  6EE6               	movwf	postinc1,c
  4878  004418  EC8E  F027         	call	_wdtdelay	;wreg free
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4882  00441C  0E39               	movlw	57
  4883  00441E  6EE6               	movwf	postinc1,c
  4884  004420  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4888  004424  0E1D               	movlw	29
  4889  004426  6EE6               	movwf	postinc1,c
  4890  004428  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4894  00442C  0E50               	movlw	80
  4895  00442E  6EE6               	movwf	postinc1,c
  4896  004430  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4900  004434  0E6C               	movlw	108
  4901  004436  6EE6               	movwf	postinc1,c
  4902  004438  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4906  00443C  0E76               	movlw	118
  4907  00443E  6EE6               	movwf	postinc1,c
  4908  004440  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4912  004444  0E38               	movlw	56
  4913  004446  6EE6               	movwf	postinc1,c
  4914  004448  ECE9  F029         	call	_send_lcd_cmd_long	;wreg free
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4918  00444C  0E0F               	movlw	15
  4919  00444E  6EE6               	movwf	postinc1,c
  4920  004450  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4924  004454  0E01               	movlw	1
  4925  004456  6EE6               	movwf	postinc1,c
  4926  004458  ECE9  F029         	call	_send_lcd_cmd_long	;wreg free
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4930  00445C  0E02               	movlw	2
  4931  00445E  6EE6               	movwf	postinc1,c
  4932  004460  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4936  004464  0E06               	movlw	6
  4937  004466  6EE6               	movwf	postinc1,c
  4938  004468  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;eadog.c: 55:  wdtdelay(30);
  4942  00446C  0E1E               	movlw	30
  4943  00446E  6EE6               	movwf	postinc1,c
  4944  004470  0E00               	movlw	0
  4945  004472  6EE6               	movwf	postinc1,c
  4946  004474  0E00               	movlw	0
  4947  004476  6EE6               	movwf	postinc1,c
  4948  004478  0E00               	movlw	0
  4949  00447A  6EE6               	movwf	postinc1,c
  4950  00447C  EC8E  F027         	call	_wdtdelay	;wreg free
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4954  004480  0E02               	movlw	2
  4955  004482  013D               	movlb	61	; () banked
  4956  004484  6F16               	movwf	22,b	;volatile
  4957                           
  4958                           ; BSR set to: 61
  4959                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4960  004486  0E40               	movlw	64
  4961  004488  6F15               	movwf	21,b	;volatile
  4962                           
  4963                           ; BSR set to: 61
  4964                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  4965  00448A  0E83               	movlw	131
  4966  00448C  6F14               	movwf	20,b	;volatile
  4967                           
  4968                           ; BSR set to: 61
  4969                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  4970  00448E  931A               	bcf	26,1,b	;volatile
  4971                           
  4972                           ; BSR set to: 61
  4973                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  4974  004490  0E3F               	movlw	-193
  4975  004492  013B               	movlb	59	; () banked
  4976  004494  17FD               	andwf	253,f,b	;volatile
  4977                           
  4978                           ; BSR set to: 59
  4979                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  4980  004496  9BFD               	bcf	253,5,b	;volatile
  4981                           
  4982                           ; BSR set to: 59
  4983                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  4984  004498  51FD               	movf	253,w,b	;volatile
  4985  00449A  0BF9               	andlw	-7
  4986  00449C  0902               	iorlw	2
  4987  00449E  6FFD               	movwf	253,b	;volatile
  4988                           
  4989                           ; BSR set to: 59
  4990                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  4991  0044A0  0EE7               	movlw	-25
  4992  0044A2  17FD               	andwf	253,f,b	;volatile
  4993                           
  4994                           ; BSR set to: 59
  4995                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  4996  0044A4  81FD               	bsf	253,0,b	;volatile
  4997                           
  4998                           ; BSR set to: 59
  4999                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  5000  0044A6  0E43               	movlw	low _ring_buf1
  5001  0044A8  6FF9               	movwf	249,b	;volatile
  5002  0044AA  0E03               	movlw	high _ring_buf1
  5003  0044AC  6FFA               	movwf	250,b	;volatile
  5004  0044AE  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5005  0044B0  6FFB               	movwf	251,b	;volatile
  5006                           
  5007                           ; BSR set to: 59
  5008                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  5009  0044B2  9BFC               	bcf	252,5,b	;volatile
  5010                           
  5011                           ; BSR set to: 59
  5012                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  5013  0044B4  013D               	movlb	61	; () banked
  5014  0044B6  831A               	bsf	26,1,b	;volatile
  5015                           
  5016                           ; BSR set to: 61
  5017                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  5018  0044B8  90BE               	bcf	16318,0,c	;volatile
  5019                           
  5020                           ; BSR set to: 61
  5021                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5022  0044BA  0012               	return		;funcret
  5023  0044BC                     __end_of_init_display:
  5024                           	opt callstack 0
  5025                           
  5026 ;; *************** function _send_lcd_cmd_long *****************
  5027 ;; Defined at:
  5028 ;;		line 97 in file "eadog.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  cmd             1  [STACK] unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1  [STACK] void 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5037 ;; Tracked objects:
  5038 ;;		On entry : 3F/0
  5039 ;;		On exit  : 3F/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5046 ;;Total ram usage:        0 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    4
  5049 ;; This function calls:
  5050 ;;		_SPI1_Exchange8bit
  5051 ;;		_wdtdelay
  5052 ;; This function is called by:
  5053 ;;		_init_display
  5054 ;; This function uses a reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text17
  5058  0053D2                     __ptext17:
  5059                           	opt callstack 0
  5060  0053D2                     _send_lcd_cmd_long:
  5061                           	opt callstack 25
  5062                           
  5063                           ; BSR set to: 61
  5064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5065                           ;incstack = 0
  5066                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  5067  0053D2  92BC               	bcf	16316,1,c	;volatile
  5068                           
  5069                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  5070  0053D4  94BC               	bcf	16316,2,c	;volatile
  5071                           
  5072                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  5073                           ;stkvar	_cmd @ sp[(0)+-1]
  5074  0053D6  0EFF               	movlw	-1
  5075  0053D8  50E3               	movf	plusw1,w,c
  5076  0053DA  6EE6               	movwf	postinc1,c
  5077  0053DC  ECE8  F02B         	call	_SPI1_Exchange8bit	;wreg free
  5078                           
  5079                           ; BSR set to: 57
  5080                           ;eadog.c: 102:  wdtdelay(800);
  5081  0053E0  0E20               	movlw	32
  5082  0053E2  6EE6               	movwf	postinc1,c
  5083  0053E4  0E03               	movlw	3
  5084  0053E6  6EE6               	movwf	postinc1,c
  5085  0053E8  0E00               	movlw	0
  5086  0053EA  6EE6               	movwf	postinc1,c
  5087  0053EC  0E00               	movlw	0
  5088  0053EE  6EE6               	movwf	postinc1,c
  5089  0053F0  EC8E  F027         	call	_wdtdelay	;wreg free
  5090                           
  5091                           ; BSR set to: 0
  5092  0053F4  82BC               	bsf	16316,1,c	;volatile
  5093                           
  5094                           ; BSR set to: 0
  5095                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5096  0053F6  52E5               	movf	postdec1,f,c
  5097  0053F8  0012               	return		;funcret
  5098  0053FA                     __end_of_send_lcd_cmd_long:
  5099                           	opt callstack 0
  5100                           
  5101 ;; *************** function _send_lcd_cmd *****************
  5102 ;; Defined at:
  5103 ;;		line 85 in file "eadog.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  cmd             1  [STACK] unsigned char 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1  [STACK] void 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5112 ;; Tracked objects:
  5113 ;;		On entry : 3F/0
  5114 ;;		On exit  : 3F/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5121 ;;Total ram usage:        0 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    4
  5124 ;; This function calls:
  5125 ;;		_SPI1_Exchange8bit
  5126 ;;		_wdtdelay
  5127 ;; This function is called by:
  5128 ;;		_init_display
  5129 ;; This function uses a reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text18
  5133  0053FA                     __ptext18:
  5134                           	opt callstack 0
  5135  0053FA                     _send_lcd_cmd:
  5136                           	opt callstack 25
  5137                           
  5138                           ; BSR set to: 0
  5139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5140                           ;incstack = 0
  5141                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  5142  0053FA  92BC               	bcf	16316,1,c	;volatile
  5143                           
  5144                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  5145  0053FC  94BC               	bcf	16316,2,c	;volatile
  5146                           
  5147                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  5148                           ;stkvar	_cmd @ sp[(0)+-1]
  5149  0053FE  0EFF               	movlw	-1
  5150  005400  50E3               	movf	plusw1,w,c
  5151  005402  6EE6               	movwf	postinc1,c
  5152  005404  ECE8  F02B         	call	_SPI1_Exchange8bit	;wreg free
  5153                           
  5154                           ; BSR set to: 57
  5155                           ;eadog.c: 90:  wdtdelay(30);
  5156  005408  0E1E               	movlw	30
  5157  00540A  6EE6               	movwf	postinc1,c
  5158  00540C  0E00               	movlw	0
  5159  00540E  6EE6               	movwf	postinc1,c
  5160  005410  0E00               	movlw	0
  5161  005412  6EE6               	movwf	postinc1,c
  5162  005414  0E00               	movlw	0
  5163  005416  6EE6               	movwf	postinc1,c
  5164  005418  EC8E  F027         	call	_wdtdelay	;wreg free
  5165                           
  5166                           ; BSR set to: 0
  5167  00541C  82BC               	bsf	16316,1,c	;volatile
  5168                           
  5169                           ; BSR set to: 0
  5170                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5171  00541E  52E5               	movf	postdec1,f,c
  5172  005420  0012               	return		;funcret
  5173  005422                     __end_of_send_lcd_cmd:
  5174                           	opt callstack 0
  5175                           
  5176 ;; *************** function _SPI1_Exchange8bit *****************
  5177 ;; Defined at:
  5178 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  data            1  [STACK] unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;		None
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1  [STACK] unsigned char 
  5185 ;; Registers used:
  5186 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 3F/39
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5196 ;;Total ram usage:        0 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    3
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_send_lcd_cmd
  5203 ;;		_send_lcd_cmd_long
  5204 ;; This function uses a reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text19
  5208  0057D0                     __ptext19:
  5209                           	opt callstack 0
  5210  0057D0                     _SPI1_Exchange8bit:
  5211                           	opt callstack 25
  5212                           
  5213                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5214                           
  5215                           ; BSR set to: 0
  5216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5217                           ;incstack = 0
  5218  0057D0  0E01               	movlw	1
  5219  0057D2  013D               	movlb	61	; () banked
  5220  0057D4  6F12               	movwf	18,b	;volatile
  5221                           
  5222                           ; BSR set to: 61
  5223                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5224                           ;stkvar	_data @ sp[(0)+-1]
  5225  0057D6  0EFF               	movlw	-1
  5226  0057D8  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5227  0057DE                     l847:
  5228                           
  5229                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5230  0057DE  0139               	movlb	57	; () banked
  5231  0057E0  A9A2               	btfss	162,4,b	;volatile
  5232  0057E2  D7FD               	goto	l847
  5233                           
  5234                           ; BSR set to: 57
  5235                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5236  0057E4  006F F440  F03E    	movff	15632,btemp	;volatile
  5237                           
  5238                           ; BSR set to: 57
  5239                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5240  0057EA  52E5               	movf	postdec1,f,c
  5241  0057EC  0012               	return		;funcret
  5242  0057EE                     __end_of_SPI1_Exchange8bit:
  5243                           	opt callstack 0
  5244                           
  5245 ;; *************** function _ringBufS_init *****************
  5246 ;; Defined at:
  5247 ;;		line 22 in file "ringbufs.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  _this           2  [STACK] PTR volatile struct ring
  5250 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;		None
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1  [STACK] void 
  5255 ;; Registers used:
  5256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5266 ;;Total ram usage:        0 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; Hardware stack levels required when called:    4
  5269 ;; This function calls:
  5270 ;;		_memset
  5271 ;; This function is called by:
  5272 ;;		_init_display
  5273 ;; This function uses a reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text20
  5277  005422                     __ptext20:
  5278                           	opt callstack 0
  5279  005422                     _ringBufS_init:
  5280                           	opt callstack 25
  5281                           
  5282                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5283                           
  5284                           ; BSR set to: 57
  5285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5286                           ;incstack = 0
  5287  005422  0E43               	movlw	67
  5288  005424  6EE6               	movwf	postinc1,c
  5289  005426  0E00               	movlw	0
  5290  005428  6EE6               	movwf	postinc1,c
  5291  00542A  0E00               	movlw	0
  5292  00542C  6EE6               	movwf	postinc1,c
  5293  00542E  0E00               	movlw	0
  5294  005430  6EE6               	movwf	postinc1,c
  5295                           
  5296                           ;stkvar	__this @ sp[(-4)+-2]
  5297  005432  0EFA               	movlw	-6
  5298  005434  006F FF8F FFE6     	movff	plusw1,postinc1
  5299  00543A  006F FF8F FFE6     	movff	plusw1,postinc1
  5300  005440  EC86  F016         	call	_memset	;wreg free
  5301                           
  5302                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5303  005444  52E5               	movf	postdec1,f,c
  5304  005446  52E5               	movf	postdec1,f,c
  5305  005448  0012               	return		;funcret
  5306  00544A                     __end_of_ringBufS_init:
  5307                           	opt callstack 0
  5308                           
  5309 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5310 ;; Defined at:
  5311 ;;		line 218 in file "eadog.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  r               1  [STACK] unsigned char 
  5314 ;;  c               1  [STACK] unsigned char 
  5315 ;;  strPtr          1  [STACK] PTR unsigned char 
  5316 ;;		 -> V(85), 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1  [STACK] void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5323 ;; Tracked objects:
  5324 ;;		On entry : 3F/0
  5325 ;;		On exit  : 3F/3B
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:   13
  5335 ;; This function calls:
  5336 ;;		_eaDogM_WriteString
  5337 ;;		_send_lcd_cmd_dma
  5338 ;; This function is called by:
  5339 ;;		_main
  5340 ;; This function uses a reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text21
  5344  0052A6                     __ptext21:
  5345                           	opt callstack 0
  5346  0052A6                     _eaDogM_WriteStringAtPos:
  5347                           	opt callstack 17
  5348                           
  5349                           ;eadog.c: 218: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           219: {;eadog.c: 220:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5350                           ;stkvar	_c @ sp[(0)+-2]
  5351                           
  5352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5353                           ;incstack = 0
  5354  0052A6  0EFE               	movlw	-2
  5355  0052A8  006F FF8C  F049    	movff	plusw1,btemp+11
  5356                           
  5357                           ;stkvar	_r @ sp[(0)+-1]
  5358  0052AE  0EFF               	movlw	-1
  5359  0052B0  50E3               	movf	plusw1,w,c
  5360  0052B2  0D10               	mullw	16
  5361  0052B4  50F3               	movf	prodl,w,c
  5362  0052B6  2449               	addwf	btemp+11,w,c
  5363  0052B8  0F80               	addlw	128
  5364  0052BA  6EE6               	movwf	postinc1,c
  5365  0052BC  ECBC  F027         	call	_send_lcd_cmd_dma	;wreg free
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;eadog.c: 221:  eaDogM_WriteString(strPtr);
  5369                           ;stkvar	_strPtr @ sp[(0)+-3]
  5370  0052C0  0EFD               	movlw	-3
  5371  0052C2  50E3               	movf	plusw1,w,c
  5372  0052C4  6EE6               	movwf	postinc1,c
  5373  0052C6  ECEB  F024         	call	_eaDogM_WriteString	;wreg free
  5374                           
  5375                           ; BSR set to: 59
  5376                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  5377  0052CA  52E5               	movf	postdec1,f,c
  5378  0052CC  52E5               	movf	postdec1,f,c
  5379  0052CE  52E5               	movf	postdec1,f,c
  5380  0052D0  0012               	return		;funcret
  5381  0052D2                     __end_of_eaDogM_WriteStringAtPos:
  5382                           	opt callstack 0
  5383                           
  5384 ;; *************** function _eaDogM_WriteString *****************
  5385 ;; Defined at:
  5386 ;;		line 167 in file "eadog.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  strPtr          1  [STACK] PTR unsigned char 
  5389 ;;		 -> V(85), 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1  [STACK] void 
  5394 ;; Registers used:
  5395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5396 ;; Tracked objects:
  5397 ;;		On entry : 3F/0
  5398 ;;		On exit  : 3F/3B
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5405 ;;Total ram usage:        0 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:   12
  5408 ;; This function calls:
  5409 ;;		_printf
  5410 ;;		_ringBufS_flush
  5411 ;;		_start_lcd
  5412 ;;		_strlen
  5413 ;;		_wait_lcd_set
  5414 ;; This function is called by:
  5415 ;;		_eaDogM_WriteStringAtPos
  5416 ;; This function uses a reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text22
  5420  0049D6                     __ptext22:
  5421                           	opt callstack 0
  5422  0049D6                     _eaDogM_WriteString:
  5423                           	opt callstack 17
  5424                           
  5425                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  5426                           
  5427                           ; BSR set to: 59
  5428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5429                           ;incstack = 0
  5430  0049D6  ECB7  F02C         	call	_wait_lcd_set	;wreg free
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  5434  0049DA  0E00               	movlw	0
  5435  0049DC  6EE6               	movwf	postinc1,c
  5436  0049DE  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5437  0049E4  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5438  0049EA  ECCF  F025         	call	_ringBufS_flush	;wreg free
  5439  0049EE  94BC               	bcf	16316,2,c	;volatile
  5440                           
  5441                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5442                           ;stkvar	_strPtr @ sp[(0)+-1]
  5443  0049F0  0EFF               	movlw	-1
  5444  0049F2  006F FF8C  F049    	movff	plusw1,btemp+11
  5445  0049F8  0060  F127  FFE6   	movff	btemp+11,postinc1
  5446  0049FE  0E00               	movlw	0
  5447  004A00  6EE6               	movwf	postinc1,c
  5448  004A02  EC4A  F024         	call	_strlen	;wreg free
  5449  004A06  503F               	movf	btemp+1,w,c
  5450  004A08  E104               	bnz	u3800
  5451  004A0A  0E41               	movlw	65
  5452  004A0C  5C3E               	subwf	btemp,w,c
  5453  004A0E  A0D8               	btfss	status,0,c
  5454  004A10  D008               	goto	l6649
  5455  004A12                     u3800:
  5456                           
  5457                           ;stkvar	_strPtr @ sp[(0)+-1]
  5458  004A12  0EFF               	movlw	-1
  5459  004A14  50E3               	movf	plusw1,w,c
  5460  004A16  6ED9               	movwf	fsr2l,c
  5461  004A18  6ADA               	clrf	fsr2h,c
  5462  004A1A  0E40               	movlw	64
  5463  004A1C  26D9               	addwf	fsr2l,f,c
  5464  004A1E  0E00               	movlw	0
  5465  004A20  6EDF               	movwf	indf2,c
  5466  004A22                     l6649:
  5467                           
  5468                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5469  004A22  013B               	movlb	59	; () banked
  5470  004A24  9FFC               	bcf	252,7,b	;volatile
  5471                           
  5472                           ; BSR set to: 59
  5473                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5474                           ;stkvar	_strPtr @ sp[(0)+-1]
  5475  004A26  0EFF               	movlw	-1
  5476  004A28  006F FF8C  F049    	movff	plusw1,btemp+11
  5477  004A2E  0060  F127  FFE6   	movff	btemp+11,postinc1
  5478  004A34  0E00               	movlw	0
  5479  004A36  6EE6               	movwf	postinc1,c
  5480  004A38  EC4A  F024         	call	_strlen	;wreg free
  5481  004A3C  0060  F0FB  FBF7   	movff	btemp,15351	;volatile
  5482  004A42  0060  F0FF  FBF8   	movff	btemp+1,15352	;volatile
  5483                           
  5484                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5485  004A48  013B               	movlb	59	; () banked
  5486  004A4A  8FFC               	bsf	252,7,b	;volatile
  5487                           
  5488                           ; BSR set to: 59
  5489                           ;eadog.c: 177:  printf("%s", strPtr);
  5490                           ;stkvar	_strPtr @ sp[(0)+-1]
  5491  004A4C  0EFF               	movlw	-1
  5492  004A4E  006F FF8C  F049    	movff	plusw1,btemp+11
  5493  004A54  0060  F127  FFE6   	movff	btemp+11,postinc1
  5494  004A5A  0E00               	movlw	0
  5495  004A5C  6EE6               	movwf	postinc1,c
  5496  004A5E  0E99               	movlw	(STR_2+9)& (0+255)
  5497  004A60  6EE6               	movwf	postinc1,c
  5498  004A62  0E03               	movlw	3
  5499  004A64  6EE6               	movwf	postinc1,c
  5500  004A66  EC2E  F027         	call	_printf	;wreg free
  5501                           
  5502                           ;eadog.c: 178:  start_lcd();
  5503  004A6A  ECBA  F02C         	call	_start_lcd	;wreg free
  5504                           
  5505                           ; BSR set to: 59
  5506                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5507  004A6E  52E5               	movf	postdec1,f,c
  5508  004A70  0012               	return		;funcret
  5509  004A72                     __end_of_eaDogM_WriteString:
  5510                           	opt callstack 0
  5511                           
  5512 ;; *************** function _eaDogM_WriteCommand *****************
  5513 ;; Defined at:
  5514 ;;		line 143 in file "eadog.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;  cmd             1  [STACK] unsigned char 
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1  [STACK] void 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5523 ;; Tracked objects:
  5524 ;;		On entry : 3F/3D
  5525 ;;		On exit  : 3F/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:   13
  5535 ;; This function calls:
  5536 ;;		_send_lcd_cmd_dma
  5537 ;; This function is called by:
  5538 ;;		_main
  5539 ;; This function uses a reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text23
  5543  0058E6                     __ptext23:
  5544                           	opt callstack 0
  5545  0058E6                     _eaDogM_WriteCommand:
  5546                           	opt callstack 17
  5547                           
  5548                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5549                           ;stkvar	_cmd @ sp[(0)+-1]
  5550                           
  5551                           ; BSR set to: 59
  5552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5553                           ;incstack = 0
  5554  0058E6  0EFF               	movlw	-1
  5555  0058E8  50E3               	movf	plusw1,w,c
  5556  0058EA  6EE6               	movwf	postinc1,c
  5557  0058EC  ECBC  F027         	call	_send_lcd_cmd_dma	;wreg free
  5558                           
  5559                           ; BSR set to: 0
  5560                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5561  0058F0  52E5               	movf	postdec1,f,c
  5562  0058F2  0012               	return		;funcret
  5563  0058F4                     __end_of_eaDogM_WriteCommand:
  5564                           	opt callstack 0
  5565                           
  5566 ;; *************** function _send_lcd_cmd_dma *****************
  5567 ;; Defined at:
  5568 ;;		line 184 in file "eadog.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  strPtr          1  [STACK] unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1  [STACK] void 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 3F/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:   12
  5589 ;; This function calls:
  5590 ;;		_printf
  5591 ;;		_ringBufS_flush
  5592 ;;		_start_lcd
  5593 ;;		_wait_lcd_done
  5594 ;;		_wait_lcd_set
  5595 ;; This function is called by:
  5596 ;;		_eaDogM_WriteCommand
  5597 ;;		_eaDogM_WriteStringAtPos
  5598 ;; This function uses a reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text24
  5602  004F78                     __ptext24:
  5603                           	opt callstack 0
  5604  004F78                     _send_lcd_cmd_dma:
  5605                           	opt callstack 17
  5606                           
  5607                           ;eadog.c: 184: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 185: {;eadog.c: 186:  wait
      +                          _lcd_set();
  5608                           
  5609                           ; BSR set to: 0
  5610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5611                           ;incstack = 0
  5612  004F78  ECB7  F02C         	call	_wait_lcd_set	;wreg free
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;eadog.c: 188:  ringBufS_flush(spi_link.tx1a, 0);
  5616  004F7C  0E00               	movlw	0
  5617  004F7E  6EE6               	movwf	postinc1,c
  5618  004F80  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5619  004F86  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5620  004F8C  ECCF  F025         	call	_ringBufS_flush	;wreg free
  5621  004F90  92BC               	bcf	16316,1,c	;volatile
  5622  004F92  94BC               	bcf	16316,2,c	;volatile
  5623                           
  5624                           ;eadog.c: 191:  DMA1CON0bits.EN = 0;
  5625  004F94  013B               	movlb	59	; () banked
  5626  004F96  9FFC               	bcf	252,7,b	;volatile
  5627                           
  5628                           ; BSR set to: 59
  5629                           ;eadog.c: 192:  DMA1SSZ = 1;
  5630  004F98  0E00               	movlw	0
  5631  004F9A  6FF8               	movwf	248,b	;volatile
  5632  004F9C  0E01               	movlw	1
  5633  004F9E  6FF7               	movwf	247,b	;volatile
  5634                           
  5635                           ; BSR set to: 59
  5636                           ;eadog.c: 193:  DMA1CON0bits.EN = 1;
  5637  004FA0  8FFC               	bsf	252,7,b	;volatile
  5638                           
  5639                           ; BSR set to: 59
  5640                           ;eadog.c: 194:  printf("%c", strPtr);
  5641                           ;stkvar	_strPtr @ sp[(0)+-1]
  5642  004FA2  0EFF               	movlw	-1
  5643  004FA4  50E3               	movf	plusw1,w,c
  5644  004FA6  6EE6               	movwf	postinc1,c
  5645  004FA8  0E00               	movlw	0
  5646  004FAA  6EE6               	movwf	postinc1,c
  5647  004FAC  0EAD               	movlw	STR_13& (0+255)
  5648  004FAE  6EE6               	movwf	postinc1,c
  5649  004FB0  0E03               	movlw	3
  5650  004FB2  6EE6               	movwf	postinc1,c
  5651  004FB4  EC2E  F027         	call	_printf	;wreg free
  5652                           
  5653                           ;eadog.c: 195:  start_lcd();
  5654  004FB8  ECBA  F02C         	call	_start_lcd	;wreg free
  5655                           
  5656                           ; BSR set to: 59
  5657                           ;eadog.c: 196:  wait_lcd_done();
  5658  004FBC  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  5659                           
  5660                           ; BSR set to: 0
  5661  004FC0  82BC               	bsf	16316,1,c	;volatile
  5662                           
  5663                           ; BSR set to: 0
  5664                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5665  004FC2  52E5               	movf	postdec1,f,c
  5666  004FC4  0012               	return		;funcret
  5667  004FC6                     __end_of_send_lcd_cmd_dma:
  5668                           	opt callstack 0
  5669                           
  5670 ;; *************** function _wait_lcd_set *****************
  5671 ;; Defined at:
  5672 ;;		line 114 in file "eadog.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1  [STACK] void 
  5679 ;; Registers used:
  5680 ;;		None
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 3F/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    3
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_eaDogM_WriteString
  5697 ;;		_send_lcd_cmd_dma
  5698 ;; This function uses a reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text25
  5702  00596E                     __ptext25:
  5703                           	opt callstack 0
  5704  00596E                     _wait_lcd_set:
  5705                           	opt callstack 25
  5706                           
  5707                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5708                           
  5709                           ; BSR set to: 0
  5710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5711                           ;incstack = 0
  5712  00596E  0100               	movlb	0	; () banked
  5713  005970  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5714                           
  5715                           ; BSR set to: 0
  5716                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5717  005972  0012               	return		;funcret
  5718  005974                     __end_of_wait_lcd_set:
  5719                           	opt callstack 0
  5720                           
  5721 ;; *************** function _wait_lcd_done *****************
  5722 ;; Defined at:
  5723 ;;		line 124 in file "eadog.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;		None
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;		None
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1  [STACK] void 
  5730 ;; Registers used:
  5731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 3F/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5741 ;;Total ram usage:        0 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    4
  5744 ;; This function calls:
  5745 ;;		_wdtdelay
  5746 ;; This function is called by:
  5747 ;;		_main
  5748 ;;		_send_lcd_cmd_dma
  5749 ;; This function uses a reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text26
  5753  0057EE                     __ptext26:
  5754                           	opt callstack 0
  5755  0057EE                     _wait_lcd_done:
  5756                           	opt callstack 26
  5757                           
  5758                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5759                           
  5760                           ; BSR set to: 0
  5761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5762                           ;incstack = 0
  5763  0057EE  0100               	movlb	0	; () banked
  5764  0057F0  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5765  0057F2  D7FD               	goto	_wait_lcd_done
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;eadog.c: 127:  wdtdelay(50);
  5769  0057F4  0E32               	movlw	50
  5770  0057F6  6EE6               	movwf	postinc1,c
  5771  0057F8  0E00               	movlw	0
  5772  0057FA  6EE6               	movwf	postinc1,c
  5773  0057FC  0E00               	movlw	0
  5774  0057FE  6EE6               	movwf	postinc1,c
  5775  005800  0E00               	movlw	0
  5776  005802  6EE6               	movwf	postinc1,c
  5777  005804  EC8E  F027         	call	_wdtdelay	;wreg free
  5778                           
  5779                           ; BSR set to: 0
  5780                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5781  005808  0012               	return		;funcret
  5782  00580A                     __end_of_wait_lcd_done:
  5783                           	opt callstack 0
  5784                           
  5785 ;; *************** function _wdtdelay *****************
  5786 ;; Defined at:
  5787 ;;		line 21 in file "eadog.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  delay           4  [STACK] unsigned long 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1  [STACK] void 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 3F/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5805 ;;Total ram usage:        0 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    3
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_init_display
  5812 ;;		_send_lcd_cmd
  5813 ;;		_send_lcd_cmd_long
  5814 ;;		_wait_lcd_done
  5815 ;; This function uses a reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text27
  5819  004F1C                     __ptext27:
  5820                           	opt callstack 0
  5821  004F1C                     _wdtdelay:
  5822                           	opt callstack 26
  5823                           
  5824                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5825                           
  5826                           ; BSR set to: 0
  5827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5828                           ;incstack = 0
  5829  004F1C  0100               	movlb	0	; () banked
  5830  004F1E  6B85               	clrf	wdtdelay@dcount& (0+255),b
  5831  004F20  6B86               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5832  004F22  6B87               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5833  004F24  6B88               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5834  004F26  D009               	goto	l4945
  5835  004F28                     l1307:
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;eadog.c: 26:   __nop();
  5839  004F28  F000               	nop	
  5840  004F2A  0004               	clrwdt		;# 
  5841                           
  5842                           ;eadog.c: 28:  };
  5843  004F2C  0E01               	movlw	1
  5844  004F2E  0100               	movlb	0	; () banked
  5845  004F30  2785               	addwf	wdtdelay@dcount& (0+255),f,b
  5846  004F32  0E00               	movlw	0
  5847  004F34  2386               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5848  004F36  2387               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5849  004F38  2388               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5850  004F3A                     l4945:
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;stkvar	_delay @ sp[(0)+-4]
  5854  004F3A  0EFC               	movlw	-4
  5855  004F3C  006F FF8C  F03E    	movff	plusw1,btemp
  5856  004F42  5185               	movf	wdtdelay@dcount& (0+255),w,b
  5857  004F44  5C3E               	subwf	btemp,w,c
  5858  004F46  0EFD               	movlw	-3
  5859  004F48  006F FF8C  F03E    	movff	plusw1,btemp
  5860  004F4E  5186               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5861  004F50  583E               	subwfb	btemp,w,c
  5862  004F52  0EFE               	movlw	-2
  5863  004F54  006F FF8C  F03E    	movff	plusw1,btemp
  5864  004F5A  5187               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5865  004F5C  583E               	subwfb	btemp,w,c
  5866  004F5E  0EFF               	movlw	-1
  5867  004F60  006F FF8C  F03E    	movff	plusw1,btemp
  5868  004F66  5188               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5869  004F68  583E               	subwfb	btemp,w,c
  5870  004F6A  B0D8               	btfsc	status,0,c
  5871  004F6C  D7DD               	goto	l1307
  5872                           
  5873                           ; BSR set to: 0
  5874                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5875  004F6E  52E5               	movf	postdec1,f,c
  5876  004F70  52E5               	movf	postdec1,f,c
  5877  004F72  52E5               	movf	postdec1,f,c
  5878  004F74  52E5               	movf	postdec1,f,c
  5879  004F76  0012               	return		;funcret
  5880  004F78                     __end_of_wdtdelay:
  5881                           	opt callstack 0
  5882                           
  5883 ;; *************** function _start_lcd *****************
  5884 ;; Defined at:
  5885 ;;		line 109 in file "eadog.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1  [STACK] void 
  5892 ;; Registers used:
  5893 ;;		None
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/3B
  5896 ;;		On exit  : 3F/3B
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5903 ;;Total ram usage:        0 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    3
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_eaDogM_WriteString
  5910 ;;		_send_lcd_cmd_dma
  5911 ;; This function uses a reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text28
  5915  005974                     __ptext28:
  5916                           	opt callstack 0
  5917  005974                     _start_lcd:
  5918                           	opt callstack 25
  5919                           
  5920                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  5921                           
  5922                           ; BSR set to: 0
  5923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5924                           ;incstack = 0
  5925  005974  013B               	movlb	59	; () banked
  5926  005976  8DFC               	bsf	252,6,b	;volatile
  5927                           
  5928                           ; BSR set to: 59
  5929                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5930  005978  0012               	return		;funcret
  5931  00597A                     __end_of_start_lcd:
  5932                           	opt callstack 0
  5933                           
  5934 ;; *************** function _ringBufS_flush *****************
  5935 ;; Defined at:
  5936 ;;		line 76 in file "ringbufs.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5939 ;;		 -> ring_buf1(67), 
  5940 ;;  clearBuffer     1  [STACK] const char 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1  [STACK] void 
  5945 ;; Registers used:
  5946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5947 ;; Tracked objects:
  5948 ;;		On entry : 3F/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5956 ;;Total ram usage:        0 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    4
  5959 ;; This function calls:
  5960 ;;		_memset
  5961 ;; This function is called by:
  5962 ;;		_eaDogM_WriteString
  5963 ;;		_send_lcd_cmd_dma
  5964 ;; This function uses a reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text29
  5968  004B9E                     __ptext29:
  5969                           	opt callstack 0
  5970  004B9E                     _ringBufS_flush:
  5971                           	opt callstack 24
  5972                           
  5973                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5974                           ;stkvar	__this @ sp[(0)+-2]
  5975                           
  5976                           ; BSR set to: 59
  5977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5978                           ;incstack = 0
  5979  004B9E  0EFE               	movlw	-2
  5980  004BA0  006F FF8C  F048    	movff	plusw1,btemp+10
  5981  004BA6  0EFF               	movlw	-1
  5982  004BA8  006F FF8C  F049    	movff	plusw1,btemp+11
  5983  004BAE  0E42               	movlw	66
  5984  004BB0  2448               	addwf	btemp+10,w,c
  5985  004BB2  6ED9               	movwf	fsr2l,c
  5986  004BB4  0E00               	movlw	0
  5987  004BB6  2049               	addwfc	btemp+11,w,c
  5988  004BB8  6EDA               	movwf	fsr2h,c
  5989  004BBA  0E00               	movlw	0
  5990  004BBC  6EDF               	movwf	indf2,c
  5991                           
  5992                           ;ringbufs.c: 79:  _this->head = 0;
  5993                           ;stkvar	__this @ sp[(0)+-2]
  5994  004BBE  0EFE               	movlw	-2
  5995  004BC0  006F FF8C  F048    	movff	plusw1,btemp+10
  5996  004BC6  0EFF               	movlw	-1
  5997  004BC8  006F FF8C  F049    	movff	plusw1,btemp+11
  5998  004BCE  0E40               	movlw	64
  5999  004BD0  2448               	addwf	btemp+10,w,c
  6000  004BD2  6ED9               	movwf	fsr2l,c
  6001  004BD4  0E00               	movlw	0
  6002  004BD6  2049               	addwfc	btemp+11,w,c
  6003  004BD8  6EDA               	movwf	fsr2h,c
  6004  004BDA  0E00               	movlw	0
  6005  004BDC  6EDF               	movwf	indf2,c
  6006                           
  6007                           ;ringbufs.c: 80:  _this->tail = 0;
  6008                           ;stkvar	__this @ sp[(0)+-2]
  6009  004BDE  0EFE               	movlw	-2
  6010  004BE0  006F FF8C  F048    	movff	plusw1,btemp+10
  6011  004BE6  0EFF               	movlw	-1
  6012  004BE8  006F FF8C  F049    	movff	plusw1,btemp+11
  6013  004BEE  0E41               	movlw	65
  6014  004BF0  2448               	addwf	btemp+10,w,c
  6015  004BF2  6ED9               	movwf	fsr2l,c
  6016  004BF4  0E00               	movlw	0
  6017  004BF6  2049               	addwfc	btemp+11,w,c
  6018  004BF8  6EDA               	movwf	fsr2h,c
  6019  004BFA  0E00               	movlw	0
  6020  004BFC  6EDF               	movwf	indf2,c
  6021                           
  6022                           ;ringbufs.c: 81:  if (clearBuffer) {
  6023                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6024  004BFE  0EFD               	movlw	-3
  6025  004C00  50E3               	movf	plusw1,w,c
  6026  004C02  B4D8               	btfsc	status,2,c
  6027  004C04  D011               	goto	l1443
  6028                           
  6029                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6030  004C06  0E40               	movlw	64
  6031  004C08  6EE6               	movwf	postinc1,c
  6032  004C0A  0E00               	movlw	0
  6033  004C0C  6EE6               	movwf	postinc1,c
  6034  004C0E  0E00               	movlw	0
  6035  004C10  6EE6               	movwf	postinc1,c
  6036  004C12  0E00               	movlw	0
  6037  004C14  6EE6               	movwf	postinc1,c
  6038                           
  6039                           ;stkvar	__this @ sp[(-4)+-2]
  6040  004C16  0EFA               	movlw	-6
  6041  004C18  006F FF8F FFE6     	movff	plusw1,postinc1
  6042  004C1E  006F FF8F FFE6     	movff	plusw1,postinc1
  6043  004C24  EC86  F016         	call	_memset	;wreg free
  6044  004C28                     l1443:
  6045                           
  6046                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6047  004C28  52E5               	movf	postdec1,f,c
  6048  004C2A  52E5               	movf	postdec1,f,c
  6049  004C2C  52E5               	movf	postdec1,f,c
  6050  004C2E  0012               	return		;funcret
  6051  004C30                     __end_of_ringBufS_flush:
  6052                           	opt callstack 0
  6053                           
  6054 ;; *************** function _memset *****************
  6055 ;; Defined at:
  6056 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  dest            2  [STACK] PTR void 
  6059 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6060 ;;  c               2  [STACK] int 
  6061 ;;  n               2  [STACK] unsigned int 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  s               2  [STACK] PTR unsigned char 
  6064 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6065 ;;  k               2  [STACK] unsigned int 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  2  [STACK] PTR void 
  6068 ;; Registers used:
  6069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    3
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_ringBufS_init
  6086 ;;		_ringBufS_flush
  6087 ;; This function uses a reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text30
  6091  002D0C                     __ptext30:
  6092                           	opt callstack 0
  6093  002D0C                     _memset:
  6094                           	opt callstack 0
  6095                           
  6096                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6097  002D0C  52E6               	movf	postinc1,f,c
  6098  002D0E  52E6               	movf	postinc1,f,c
  6099  002D10  52E6               	movf	postinc1,f,c
  6100  002D12  52E6               	movf	postinc1,f,c
  6101                           
  6102                           ;stkvar	_dest @ sp[(-4)+-2]
  6103                           
  6104                           ;incstack = 0
  6105  002D14  0EFA               	movlw	-6
  6106  002D16  006F FF8C  F048    	movff	plusw1,btemp+10
  6107  002D1C  0EFB               	movlw	-5
  6108  002D1E  006F FF8C  F049    	movff	plusw1,btemp+11
  6109                           
  6110                           ;stkvar	_s @ sp[(-4)+0]
  6111  002D24  0EFD               	movlw	-3
  6112  002D26  0060  F127  FFE3   	movff	btemp+11,plusw1
  6113  002D2C  0EFC               	movlw	-4
  6114  002D2E  0060  F123  FFE3   	movff	btemp+10,plusw1
  6115                           
  6116                           ;stkvar	_n @ sp[(-4)+-6]
  6117  002D34  0EF6               	movlw	-10
  6118  002D36  006F FF8C  F03E    	movff	plusw1,btemp
  6119  002D3C  0EF7               	movlw	-9
  6120  002D3E  50E3               	movf	plusw1,w,c
  6121  002D40  103E               	iorwf	btemp,w,c
  6122  002D42  B4D8               	btfsc	status,2,c
  6123  002D44  D154               	goto	u3760
  6124                           
  6125                           ;stkvar	_c @ sp[(-4)+-4]
  6126                           ;stkvar	_s @ sp[(-4)+0]
  6127  002D46  0EFC               	movlw	-4
  6128  002D48  006F FF8F FFD9     	movff	plusw1,fsr2l
  6129  002D4E  0EFD               	movlw	-3
  6130  002D50  006F FF8F FFDA     	movff	plusw1,fsr2h
  6131  002D56  0EF8               	movlw	-8
  6132  002D58  006F FF8F FFDF     	movff	plusw1,indf2
  6133                           
  6134                           ;stkvar	_c @ sp[(-4)+-4]
  6135                           ;stkvar	_n @ sp[(-4)+-6]
  6136                           ;stkvar	_s @ sp[(-4)+0]
  6137  002D5E  0EFC               	movlw	-4
  6138  002D60  006F FF8C  F048    	movff	plusw1,btemp+10
  6139  002D66  0EFD               	movlw	-3
  6140  002D68  006F FF8C  F049    	movff	plusw1,btemp+11
  6141  002D6E  0EF6               	movlw	-10
  6142  002D70  50E3               	movf	plusw1,w,c
  6143  002D72  2648               	addwf	btemp+10,f,c
  6144  002D74  0EF7               	movlw	-9
  6145  002D76  50E3               	movf	plusw1,w,c
  6146  002D78  2249               	addwfc	btemp+11,f,c
  6147  002D7A  0EFF               	movlw	255
  6148  002D7C  2448               	addwf	btemp+10,w,c
  6149  002D7E  6ED9               	movwf	fsr2l,c
  6150  002D80  0EFF               	movlw	255
  6151  002D82  2049               	addwfc	btemp+11,w,c
  6152  002D84  6EDA               	movwf	fsr2h,c
  6153  002D86  0EF8               	movlw	-8
  6154  002D88  006F FF8F FFDF     	movff	plusw1,indf2
  6155                           
  6156                           ;stkvar	_n @ sp[(-4)+-6]
  6157  002D8E  0EF7               	movlw	-9
  6158  002D90  50E3               	movf	plusw1,w,c
  6159  002D92  E108               	bnz	l6551
  6160  002D94  0EF6               	movlw	-10
  6161  002D96  006F FF8C  F03E    	movff	plusw1,btemp
  6162  002D9C  0E03               	movlw	3
  6163  002D9E  5E3E               	subwf	btemp,f,c
  6164  002DA0  A0D8               	btfss	status,0,c
  6165  002DA2  D125               	goto	u3760
  6166  002DA4                     l6551:
  6167                           
  6168                           ;stkvar	_c @ sp[(-4)+-4]
  6169                           ;stkvar	_s @ sp[(-4)+0]
  6170  002DA4  0EFC               	movlw	-4
  6171  002DA6  006F FF8C  F048    	movff	plusw1,btemp+10
  6172  002DAC  0EFD               	movlw	-3
  6173  002DAE  006F FF8C  F049    	movff	plusw1,btemp+11
  6174  002DB4  0E01               	movlw	1
  6175  002DB6  2448               	addwf	btemp+10,w,c
  6176  002DB8  6ED9               	movwf	fsr2l,c
  6177  002DBA  0E00               	movlw	0
  6178  002DBC  2049               	addwfc	btemp+11,w,c
  6179  002DBE  6EDA               	movwf	fsr2h,c
  6180  002DC0  0EF8               	movlw	-8
  6181  002DC2  006F FF8F FFDF     	movff	plusw1,indf2
  6182                           
  6183                           ;stkvar	_c @ sp[(-4)+-4]
  6184                           ;stkvar	_s @ sp[(-4)+0]
  6185  002DC8  0EFC               	movlw	-4
  6186  002DCA  006F FF8C  F048    	movff	plusw1,btemp+10
  6187  002DD0  0EFD               	movlw	-3
  6188  002DD2  006F FF8C  F049    	movff	plusw1,btemp+11
  6189  002DD8  0E02               	movlw	2
  6190  002DDA  2448               	addwf	btemp+10,w,c
  6191  002DDC  6ED9               	movwf	fsr2l,c
  6192  002DDE  0E00               	movlw	0
  6193  002DE0  2049               	addwfc	btemp+11,w,c
  6194  002DE2  6EDA               	movwf	fsr2h,c
  6195  002DE4  0EF8               	movlw	-8
  6196  002DE6  006F FF8F FFDF     	movff	plusw1,indf2
  6197                           
  6198                           ;stkvar	_c @ sp[(-4)+-4]
  6199                           ;stkvar	_n @ sp[(-4)+-6]
  6200                           ;stkvar	_s @ sp[(-4)+0]
  6201  002DEC  0EFC               	movlw	-4
  6202  002DEE  006F FF8C  F048    	movff	plusw1,btemp+10
  6203  002DF4  0EFD               	movlw	-3
  6204  002DF6  006F FF8C  F049    	movff	plusw1,btemp+11
  6205  002DFC  0EF6               	movlw	-10
  6206  002DFE  50E3               	movf	plusw1,w,c
  6207  002E00  2648               	addwf	btemp+10,f,c
  6208  002E02  0EF7               	movlw	-9
  6209  002E04  50E3               	movf	plusw1,w,c
  6210  002E06  2249               	addwfc	btemp+11,f,c
  6211  002E08  0EFE               	movlw	254
  6212  002E0A  2448               	addwf	btemp+10,w,c
  6213  002E0C  6ED9               	movwf	fsr2l,c
  6214  002E0E  0EFF               	movlw	255
  6215  002E10  2049               	addwfc	btemp+11,w,c
  6216  002E12  6EDA               	movwf	fsr2h,c
  6217  002E14  0EF8               	movlw	-8
  6218  002E16  006F FF8F FFDF     	movff	plusw1,indf2
  6219                           
  6220                           ;stkvar	_c @ sp[(-4)+-4]
  6221                           ;stkvar	_n @ sp[(-4)+-6]
  6222                           ;stkvar	_s @ sp[(-4)+0]
  6223  002E1C  0EFC               	movlw	-4
  6224  002E1E  006F FF8C  F048    	movff	plusw1,btemp+10
  6225  002E24  0EFD               	movlw	-3
  6226  002E26  006F FF8C  F049    	movff	plusw1,btemp+11
  6227  002E2C  0EF6               	movlw	-10
  6228  002E2E  50E3               	movf	plusw1,w,c
  6229  002E30  2648               	addwf	btemp+10,f,c
  6230  002E32  0EF7               	movlw	-9
  6231  002E34  50E3               	movf	plusw1,w,c
  6232  002E36  2249               	addwfc	btemp+11,f,c
  6233  002E38  0EFD               	movlw	253
  6234  002E3A  2448               	addwf	btemp+10,w,c
  6235  002E3C  6ED9               	movwf	fsr2l,c
  6236  002E3E  0EFF               	movlw	255
  6237  002E40  2049               	addwfc	btemp+11,w,c
  6238  002E42  6EDA               	movwf	fsr2h,c
  6239  002E44  0EF8               	movlw	-8
  6240  002E46  006F FF8F FFDF     	movff	plusw1,indf2
  6241                           
  6242                           ;stkvar	_n @ sp[(-4)+-6]
  6243  002E4C  0EF7               	movlw	-9
  6244  002E4E  50E3               	movf	plusw1,w,c
  6245  002E50  E108               	bnz	l6557
  6246  002E52  0EF6               	movlw	-10
  6247  002E54  006F FF8C  F03E    	movff	plusw1,btemp
  6248  002E5A  0E07               	movlw	7
  6249  002E5C  5E3E               	subwf	btemp,f,c
  6250  002E5E  A0D8               	btfss	status,0,c
  6251  002E60  D0C6               	goto	u3760
  6252  002E62                     l6557:
  6253                           
  6254                           ;stkvar	_c @ sp[(-4)+-4]
  6255                           ;stkvar	_s @ sp[(-4)+0]
  6256  002E62  0EFC               	movlw	-4
  6257  002E64  006F FF8C  F048    	movff	plusw1,btemp+10
  6258  002E6A  0EFD               	movlw	-3
  6259  002E6C  006F FF8C  F049    	movff	plusw1,btemp+11
  6260  002E72  0E03               	movlw	3
  6261  002E74  2448               	addwf	btemp+10,w,c
  6262  002E76  6ED9               	movwf	fsr2l,c
  6263  002E78  0E00               	movlw	0
  6264  002E7A  2049               	addwfc	btemp+11,w,c
  6265  002E7C  6EDA               	movwf	fsr2h,c
  6266  002E7E  0EF8               	movlw	-8
  6267  002E80  006F FF8F FFDF     	movff	plusw1,indf2
  6268                           
  6269                           ;stkvar	_c @ sp[(-4)+-4]
  6270                           ;stkvar	_n @ sp[(-4)+-6]
  6271                           ;stkvar	_s @ sp[(-4)+0]
  6272  002E86  0EFC               	movlw	-4
  6273  002E88  006F FF8C  F048    	movff	plusw1,btemp+10
  6274  002E8E  0EFD               	movlw	-3
  6275  002E90  006F FF8C  F049    	movff	plusw1,btemp+11
  6276  002E96  0EF6               	movlw	-10
  6277  002E98  50E3               	movf	plusw1,w,c
  6278  002E9A  2648               	addwf	btemp+10,f,c
  6279  002E9C  0EF7               	movlw	-9
  6280  002E9E  50E3               	movf	plusw1,w,c
  6281  002EA0  2249               	addwfc	btemp+11,f,c
  6282  002EA2  0EFC               	movlw	252
  6283  002EA4  2448               	addwf	btemp+10,w,c
  6284  002EA6  6ED9               	movwf	fsr2l,c
  6285  002EA8  0EFF               	movlw	255
  6286  002EAA  2049               	addwfc	btemp+11,w,c
  6287  002EAC  6EDA               	movwf	fsr2h,c
  6288  002EAE  0EF8               	movlw	-8
  6289  002EB0  006F FF8F FFDF     	movff	plusw1,indf2
  6290                           
  6291                           ;stkvar	_n @ sp[(-4)+-6]
  6292  002EB6  0EF7               	movlw	-9
  6293  002EB8  50E3               	movf	plusw1,w,c
  6294  002EBA  E108               	bnz	l6563
  6295  002EBC  0EF6               	movlw	-10
  6296  002EBE  006F FF8C  F03E    	movff	plusw1,btemp
  6297  002EC4  0E09               	movlw	9
  6298  002EC6  5E3E               	subwf	btemp,f,c
  6299  002EC8  A0D8               	btfss	status,0,c
  6300  002ECA  D091               	goto	u3760
  6301  002ECC                     l6563:
  6302                           
  6303                           ;stkvar	_s @ sp[(-4)+0]
  6304  002ECC  0EFC               	movlw	-4
  6305  002ECE  006F FF8C  F048    	movff	plusw1,btemp+10
  6306  002ED4  1E48               	comf	btemp+10,f,c
  6307  002ED6  0EFD               	movlw	-3
  6308  002ED8  006F FF8C  F049    	movff	plusw1,btemp+11
  6309  002EDE  1E49               	comf	btemp+11,f,c
  6310  002EE0  2A48               	incf	btemp+10,f,c
  6311  002EE2  B4D8               	btfsc	status,2,c
  6312  002EE4  2A49               	incf	btemp+11,f,c
  6313  002EE6  0E03               	movlw	3
  6314  002EE8  1648               	andwf	btemp+10,f,c
  6315  002EEA  0E00               	movlw	0
  6316  002EEC  1649               	andwf	btemp+11,f,c
  6317                           
  6318                           ;stkvar	_k @ sp[(-4)+2]
  6319  002EEE  0EFE               	movlw	-2
  6320  002EF0  0060  F123  FFE3   	movff	btemp+10,plusw1
  6321  002EF6  0EFF               	movlw	-1
  6322  002EF8  0060  F127  FFE3   	movff	btemp+11,plusw1
  6323                           
  6324                           ;stkvar	_k @ sp[(-4)+2]
  6325                           ;stkvar	_s @ sp[(-4)+0]
  6326  002EFE  0EFC               	movlw	-4
  6327  002F00  50E3               	movf	plusw1,w,c
  6328  002F02  6E3E               	movwf	btemp,c
  6329  002F04  0EFE               	movlw	-2
  6330  002F06  50E3               	movf	plusw1,w,c
  6331  002F08  263E               	addwf	btemp,f,c
  6332  002F0A  0EFC               	movlw	-4
  6333  002F0C  0060  F0FB  FFE3   	movff	btemp,plusw1
  6334  002F12  0EFD               	movlw	-3
  6335  002F14  50E3               	movf	plusw1,w,c
  6336  002F16  6E3E               	movwf	btemp,c
  6337  002F18  0EFF               	movlw	-1
  6338  002F1A  50E3               	movf	plusw1,w,c
  6339  002F1C  223E               	addwfc	btemp,f,c
  6340  002F1E  0EFD               	movlw	-3
  6341  002F20  0060  F0FB  FFE3   	movff	btemp,plusw1
  6342                           
  6343                           ;stkvar	_k @ sp[(-4)+2]
  6344                           ;stkvar	_n @ sp[(-4)+-6]
  6345  002F26  0EF6               	movlw	-10
  6346  002F28  50E3               	movf	plusw1,w,c
  6347  002F2A  6E3E               	movwf	btemp,c
  6348  002F2C  0EFE               	movlw	-2
  6349  002F2E  50E3               	movf	plusw1,w,c
  6350  002F30  5E3E               	subwf	btemp,f,c
  6351  002F32  0EF6               	movlw	-10
  6352  002F34  0060  F0FB  FFE3   	movff	btemp,plusw1
  6353  002F3A  0EF7               	movlw	-9
  6354  002F3C  50E3               	movf	plusw1,w,c
  6355  002F3E  6E3E               	movwf	btemp,c
  6356  002F40  0EFF               	movlw	-1
  6357  002F42  50E3               	movf	plusw1,w,c
  6358  002F44  5A3E               	subwfb	btemp,f,c
  6359  002F46  0EF7               	movlw	-9
  6360  002F48  0060  F0FB  FFE3   	movff	btemp,plusw1
  6361  002F4E  0EFC               	movlw	252
  6362  002F50  6E48               	movwf	btemp+10,c
  6363  002F52  0EFF               	movlw	255
  6364  002F54  6E49               	movwf	btemp+11,c
  6365                           
  6366                           ;stkvar	_n @ sp[(-4)+-6]
  6367  002F56  0EF6               	movlw	-10
  6368  002F58  006F FF8C  F03E    	movff	plusw1,btemp
  6369  002F5E  5048               	movf	btemp+10,w,c
  6370  002F60  163E               	andwf	btemp,f,c
  6371  002F62  0EF6               	movlw	-10
  6372  002F64  0060  F0FB  FFE3   	movff	btemp,plusw1
  6373  002F6A  0EF7               	movlw	-9
  6374  002F6C  006F FF8C  F03E    	movff	plusw1,btemp
  6375  002F72  5049               	movf	btemp+11,w,c
  6376  002F74  163E               	andwf	btemp,f,c
  6377  002F76  0EF7               	movlw	-9
  6378  002F78  D02E               	goto	L14
  6379  002F7A                     l6571:
  6380                           
  6381                           ;stkvar	_c @ sp[(-4)+-4]
  6382                           ;stkvar	_s @ sp[(-4)+0]
  6383  002F7A  0EFC               	movlw	-4
  6384  002F7C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6385  002F82  0EFD               	movlw	-3
  6386  002F84  006F FF8F FFDA     	movff	plusw1,fsr2h
  6387  002F8A  0EF8               	movlw	-8
  6388  002F8C  006F FF8F FFDF     	movff	plusw1,indf2
  6389                           
  6390                           ;stkvar	_n @ sp[(-4)+-6]
  6391  002F92  0EF6               	movlw	-10
  6392  002F94  006F FF8C  F03E    	movff	plusw1,btemp
  6393  002F9A  0E01               	movlw	1
  6394  002F9C  5E3E               	subwf	btemp,f,c
  6395  002F9E  0EF6               	movlw	-10
  6396  002FA0  0060  F0FB  FFE3   	movff	btemp,plusw1
  6397  002FA6  0EF7               	movlw	-9
  6398  002FA8  006F FF8C  F03E    	movff	plusw1,btemp
  6399  002FAE  0E00               	movlw	0
  6400  002FB0  5A3E               	subwfb	btemp,f,c
  6401  002FB2  0EF7               	movlw	-9
  6402  002FB4  0060  F0FB  FFE3   	movff	btemp,plusw1
  6403                           
  6404                           ;stkvar	_s @ sp[(-4)+0]
  6405  002FBA  0EFC               	movlw	-4
  6406  002FBC  50E3               	movf	plusw1,w,c
  6407  002FBE  0F01               	addlw	1
  6408  002FC0  6E3E               	movwf	btemp,c
  6409  002FC2  0EFC               	movlw	-4
  6410  002FC4  0060  F0FB  FFE3   	movff	btemp,plusw1
  6411  002FCA  6A3E               	clrf	btemp,c
  6412  002FCC  0EFD               	movlw	-3
  6413  002FCE  50E3               	movf	plusw1,w,c
  6414  002FD0  203E               	addwfc	btemp,w,c
  6415  002FD2  6E3E               	movwf	btemp,c
  6416  002FD4  0EFD               	movlw	-3
  6417  002FD6                     L14:
  6418  002FD6  0060  F0FB  FFE3   	movff	btemp,plusw1
  6419                           
  6420                           ;stkvar	_n @ sp[(-4)+-6]
  6421  002FDC  0EF6               	movlw	-10
  6422  002FDE  006F FF8C  F03E    	movff	plusw1,btemp
  6423  002FE4  0EF7               	movlw	-9
  6424  002FE6  50E3               	movf	plusw1,w,c
  6425  002FE8  103E               	iorwf	btemp,w,c
  6426  002FEA  A4D8               	btfss	status,2,c
  6427  002FEC  D7C6               	goto	l6571
  6428  002FEE                     u3760:
  6429                           
  6430                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6431  002FEE  0EF6               	movlw	246
  6432  002FF0  26E1               	addwf	fsr1l,f,c
  6433  002FF2  0EFF               	movlw	255
  6434  002FF4  22E2               	addwfc	fsr1h,f,c
  6435  002FF6  0012               	return		;funcret
  6436  002FF8                     __end_of_memset:
  6437                           	opt callstack 0
  6438                           
  6439 ;; *************** function _printf *****************
  6440 ;; Defined at:
  6441 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  fmt             1  [STACK] PTR const unsigned char 
  6444 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;  ap              2  [STACK] PTR void [1]
  6447 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6448 ;;  ret             2    0        int 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  2  [STACK] int 
  6451 ;; Registers used:
  6452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6453 ;; Tracked objects:
  6454 ;;		On entry : 3F/3B
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:   11
  6465 ;; This function calls:
  6466 ;;		_vfprintf
  6467 ;; This function is called by:
  6468 ;;		_eaDogM_WriteString
  6469 ;;		_send_lcd_cmd_dma
  6470 ;; This function uses a reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text31
  6474  004E5C                     __ptext31:
  6475                           	opt callstack 0
  6476  004E5C                     _printf:
  6477                           	opt callstack 0
  6478                           
  6479                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6480  004E5C  52E6               	movf	postinc1,f,c
  6481  004E5E  52E6               	movf	postinc1,f,c
  6482                           
  6483                           ;stkvar	?_printf @ sp[(-2)+-3]
  6484                           
  6485                           ;incstack = 0
  6486  004E60  0EFB               	movlw	251
  6487  004E62  24E1               	addwf	fsr1l,w,c
  6488  004E64  6E48               	movwf	btemp+10,c
  6489  004E66  0EFF               	movlw	255
  6490  004E68  20E2               	addwfc	fsr1h,w,c
  6491  004E6A  6E49               	movwf	btemp+11,c
  6492  004E6C  0E01               	movlw	1
  6493  004E6E  2648               	addwf	btemp+10,f,c
  6494  004E70  0E00               	movlw	0
  6495  004E72  2249               	addwfc	btemp+11,f,c
  6496                           
  6497                           ;stkvar	_ap @ sp[(-2)+0]
  6498  004E74  0EFF               	movlw	-1
  6499  004E76  0060  F127  FFE3   	movff	btemp+11,plusw1
  6500  004E7C  0EFE               	movlw	-2
  6501  004E7E  0060  F123  FFE3   	movff	btemp+10,plusw1
  6502                           
  6503                           ;stkvar	_ap @ sp[(-2)+0]
  6504  004E84  0EFE               	movlw	254
  6505  004E86  24E1               	addwf	fsr1l,w,c
  6506  004E88  6E3E               	movwf	btemp,c
  6507  004E8A  0EFF               	movlw	255
  6508  004E8C  20E2               	addwfc	fsr1h,w,c
  6509  004E8E  6E3F               	movwf	btemp+1,c
  6510  004E90  0060  F0FB  FFE6   	movff	btemp,postinc1
  6511  004E96  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  6512                           
  6513                           ;stkvar	_fmt @ sp[(-4)+-2]
  6514  004E9C  0EFA               	movlw	-6
  6515  004E9E  50E3               	movf	plusw1,w,c
  6516  004EA0  6EE6               	movwf	postinc1,c
  6517  004EA2  0E00               	movlw	0
  6518  004EA4  6EE6               	movwf	postinc1,c
  6519  004EA6  0E00               	movlw	0
  6520  004EA8  6EE6               	movwf	postinc1,c
  6521  004EAA  EC85  F025         	call	_vfprintf	;wreg free
  6522                           
  6523                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6524  004EAE  52E5               	movf	postdec1,f,c
  6525  004EB0  52E5               	movf	postdec1,f,c
  6526  004EB2  52E5               	movf	postdec1,f,c
  6527  004EB4  50E7               	movf	indf1,w,c
  6528  004EB6  5EE1               	subwf	fsr1l,f,c
  6529  004EB8  0E00               	movlw	0
  6530  004EBA  5AE2               	subwfb	fsr1h,f,c
  6531  004EBC  0012               	return		;funcret
  6532  004EBE                     __end_of_printf:
  6533                           	opt callstack 0
  6534                           
  6535 ;; *************** function _vfprintf *****************
  6536 ;; Defined at:
  6537 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6540 ;;		 -> f(5), NULL(0), 
  6541 ;;  fmt             1  [STACK] PTR const unsigned char 
  6542 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6543 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  6544 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6545 ;;		 -> STR_1(17), 
  6546 ;;  ap              2  [STACK] PTR PTR void 
  6547 ;;		 -> ap(2), ap(2), 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  cfmt            1  [STACK] PTR unsigned char 
  6550 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6551 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  6552 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6553 ;;		 -> STR_1(17), 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  2  [STACK] int 
  6556 ;; Registers used:
  6557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6567 ;;Total ram usage:        0 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:   10
  6570 ;; This function calls:
  6571 ;;		_vfpfcnvrt
  6572 ;; This function is called by:
  6573 ;;		_sprintf
  6574 ;;		_printf
  6575 ;; This function uses a reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text32
  6579  004B0A                     __ptext32:
  6580                           	opt callstack 0
  6581  004B0A                     _vfprintf:
  6582                           	opt callstack 0
  6583                           
  6584                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6585  004B0A  52E6               	movf	postinc1,f,c
  6586                           
  6587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6588                           ;stkvar	_fmt @ sp[(-1)+-3]
  6589                           
  6590                           ;incstack = 0
  6591  004B0C  0EFC               	movlw	-4
  6592  004B0E  006F FF8C  F049    	movff	plusw1,btemp+11
  6593                           
  6594                           ;stkvar	_cfmt @ sp[(-1)+0]
  6595  004B14  0EFF               	movlw	-1
  6596  004B16  0060  F127  FFE3   	movff	btemp+11,plusw1
  6597                           
  6598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6599  004B1C  6A22               	clrf	_nout,c
  6600  004B1E  6A23               	clrf	_nout+1,c
  6601                           
  6602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6603  004B20  D020               	goto	l6585
  6604  004B22                     l6583:
  6605                           
  6606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6607                           ;stkvar	_ap @ sp[(-1)+-5]
  6608  004B22  0EFA               	movlw	-6
  6609  004B24  006F FF8F FFE6     	movff	plusw1,postinc1
  6610  004B2A  006F FF8F FFE6     	movff	plusw1,postinc1
  6611                           
  6612                           ;stkvar	_cfmt @ sp[(-3)+0]
  6613  004B30  0EFD               	movlw	253
  6614  004B32  24E1               	addwf	fsr1l,w,c
  6615  004B34  6E3E               	movwf	btemp,c
  6616  004B36  0EFF               	movlw	255
  6617  004B38  20E2               	addwfc	fsr1h,w,c
  6618  004B3A  6E3F               	movwf	btemp+1,c
  6619  004B3C  0060  F0FB  FFE6   	movff	btemp,postinc1
  6620  004B42  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  6621                           
  6622                           ;stkvar	_fp @ sp[(-5)+-2]
  6623  004B48  0EF9               	movlw	-7
  6624  004B4A  006F FF8F FFE6     	movff	plusw1,postinc1
  6625  004B50  006F FF8F FFE6     	movff	plusw1,postinc1
  6626  004B56  EC59  F010         	call	_vfpfcnvrt	;wreg free
  6627  004B5A  503E               	movf	btemp,w,c
  6628  004B5C  2622               	addwf	_nout,f,c
  6629  004B5E  503F               	movf	btemp+1,w,c
  6630  004B60  2223               	addwfc	_nout+1,f,c
  6631  004B62                     l6585:
  6632                           
  6633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6634                           ;stkvar	_cfmt @ sp[(-1)+0]
  6635  004B62  50E1               	movf	fsr1l,w,c
  6636  004B64  0FFF               	addlw	-1
  6637  004B66  6ED9               	movwf	fsr2l,c
  6638  004B68  50E2               	movf	fsr1h,w,c
  6639  004B6A  6EDA               	movwf	fsr2h,c
  6640  004B6C  0EFF               	movlw	255
  6641  004B6E  22DA               	addwfc	fsr2h,f,c
  6642  004B70  006F FF7F FFF6     	movff	indf2,tblptrl
  6643  004B76                     	if	1	;There is more than 1 active tblptr byte
  6644  004B76  0E20               	movlw	high __smallconst
  6645  004B78  6EF7               	movwf	tblptrh,c
  6646  004B7A                     	endif
  6647  004B7A                     	if	0	;tblptru may be non-zero
  6648  004B7A                     	endif
  6649  004B7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6650  004B7A  0E00               	movlw	low (__smallconst shr (0+16))
  6651  004B7C  6EF8               	movwf	tblptru,c
  6652  004B7E                     	endif
  6653  004B7E  0008               	tblrd		*
  6654  004B80  50F5               	movf	tablat,w,c
  6655  004B82  0900               	iorlw	0
  6656  004B84  A4D8               	btfss	status,2,c
  6657  004B86  D7CD               	goto	l6583
  6658                           
  6659                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6660  004B88  0060  F088  F03E   	movff	_nout,btemp
  6661  004B8E  0060  F08C  F03F   	movff	_nout+1,btemp+1
  6662                           
  6663                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6664  004B94  0EFA               	movlw	250
  6665  004B96  26E1               	addwf	fsr1l,f,c
  6666  004B98  0EFF               	movlw	255
  6667  004B9A  22E2               	addwfc	fsr1h,f,c
  6668  004B9C  0012               	return		;funcret
  6669  004B9E                     __end_of_vfprintf:
  6670                           	opt callstack 0
  6671                           
  6672 ;; *************** function _vfpfcnvrt *****************
  6673 ;; Defined at:
  6674 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6677 ;;		 -> f(5), NULL(0), 
  6678 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6679 ;;		 -> cfmt(1), 
  6680 ;;  ap              2  [STACK] PTR PTR void 
  6681 ;;		 -> ap(2), ap(2), 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  ll              8  [STACK] long long 
  6684 ;;  llu             8    0        unsigned long long 
  6685 ;;  f               4    0        unsigned long long 
  6686 ;;  vp              3    0        PTR void 
  6687 ;;  ct              3    0        unsigned char [3]
  6688 ;;  cp              2  [STACK] PTR unsigned char 
  6689 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(5), V(85), 
  6690 ;;  i               2    0        int 
  6691 ;;  done            2    0        int 
  6692 ;;  c               1  [STACK] unsigned char 
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  2  [STACK] int 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6706 ;;Total ram usage:        0 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; Hardware stack levels required when called:    9
  6709 ;; This function calls:
  6710 ;;		_ctoa
  6711 ;;		_dtoa
  6712 ;;		_fputc
  6713 ;;		_stoa
  6714 ;;		_strncmp
  6715 ;; This function is called by:
  6716 ;;		_vfprintf
  6717 ;; This function uses a reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text33
  6721  0020B2                     __ptext33:
  6722                           	opt callstack 0
  6723  0020B2                     _vfpfcnvrt:
  6724                           	opt callstack 0
  6725                           
  6726                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6727  0020B2  0E0B               	movlw	11
  6728  0020B4  26E1               	addwf	fsr1l,f,c
  6729  0020B6  0E00               	movlw	0
  6730  0020B8  22E2               	addwfc	fsr1h,f,c
  6731                           
  6732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6733                           ;stkvar	_fmt @ sp[(-11)+-4]
  6734                           
  6735                           ;incstack = 0
  6736  0020BA  0EF1               	movlw	-15
  6737  0020BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6738  0020C2  0EF2               	movlw	-14
  6739  0020C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6740  0020CA  006F FF7F FFF6     	movff	indf2,tblptrl
  6741  0020D0                     	if	1	;There is more than 1 active tblptr byte
  6742  0020D0  0E20               	movlw	high __smallconst
  6743  0020D2  6EF7               	movwf	tblptrh,c
  6744  0020D4                     	endif
  6745  0020D4                     	if	0	;tblptru may be non-zero
  6746  0020D4                     	endif
  6747  0020D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6748  0020D4  0E00               	movlw	low (__smallconst shr (0+16))
  6749  0020D6  6EF8               	movwf	tblptru,c
  6750  0020D8                     	endif
  6751  0020D8  0008               	tblrd		*
  6752  0020DA  50F5               	movf	tablat,w,c
  6753  0020DC  0A25               	xorlw	37
  6754  0020DE  A4D8               	btfss	status,2,c
  6755  0020E0  D213               	goto	l6529
  6756                           
  6757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6758                           ;stkvar	_fmt @ sp[(-11)+-4]
  6759  0020E2  0EF1               	movlw	-15
  6760  0020E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6761  0020EA  0EF2               	movlw	-14
  6762  0020EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6763  0020F2  2ADF               	incf	indf2,f,c
  6764                           
  6765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6766  0020F4  6A24               	clrf	_width,c
  6767  0020F6  6A25               	clrf	_width+1,c
  6768  0020F8  6A28               	clrf	_flags,c
  6769  0020FA  6A29               	clrf	_flags+1,c
  6770                           
  6771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6772  0020FC  6826               	setf	_prec,c
  6773  0020FE  6827               	setf	_prec+1,c
  6774                           
  6775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6776                           ;stkvar	_fmt @ sp[(-11)+-4]
  6777  002100  0EF1               	movlw	-15
  6778  002102  006F FF8F FFD9     	movff	plusw1,fsr2l
  6779  002108  0EF2               	movlw	-14
  6780  00210A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6781  002110  006F FF7F FFF6     	movff	indf2,tblptrl
  6782  002116                     	if	1	;There is more than 1 active tblptr byte
  6783  002116  0E20               	movlw	high __smallconst
  6784  002118  6EF7               	movwf	tblptrh,c
  6785  00211A                     	endif
  6786  00211A                     	if	0	;tblptru may be non-zero
  6787  00211A                     	endif
  6788  00211A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6789  00211A  0E00               	movlw	low (__smallconst shr (0+16))
  6790  00211C  6EF8               	movwf	tblptru,c
  6791  00211E                     	endif
  6792  00211E  0008               	tblrd		*
  6793  002120  50F5               	movf	tablat,w,c
  6794  002122  0A63               	xorlw	99
  6795  002124  A4D8               	btfss	status,2,c
  6796  002126  D034               	goto	l6479
  6797                           
  6798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6799                           ;stkvar	_fmt @ sp[(-11)+-4]
  6800  002128  0EF1               	movlw	-15
  6801  00212A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6802  002130  0EF2               	movlw	-14
  6803  002132  006F FF8F FFDA     	movff	plusw1,fsr2h
  6804  002138  2ADF               	incf	indf2,f,c
  6805                           
  6806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6807                           ;stkvar	_ap @ sp[(-11)+-6]
  6808  00213A  0EEF               	movlw	-17
  6809  00213C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6810  002142  0EF0               	movlw	-16
  6811  002144  006F FF8F FFDA     	movff	plusw1,fsr2h
  6812  00214A  0E02               	movlw	2
  6813  00214C  5EDE               	subwf	postinc2,f,c
  6814  00214E  0E00               	movlw	0
  6815  002150  5ADD               	subwfb	postdec2,f,c
  6816  002152  006F FF78  F048    	movff	postinc2,btemp+10
  6817  002158  006F FF74  F049    	movff	postdec2,btemp+11
  6818  00215E  0060  F123  FFD9   	movff	btemp+10,fsr2l
  6819  002164  0060  F127  FFDA   	movff	btemp+11,fsr2h
  6820  00216A  50DF               	movf	indf2,w,c
  6821  00216C  6E49               	movwf	btemp+11,c
  6822                           
  6823                           ;stkvar	_c @ sp[(-11)+10]
  6824  00216E  0EFF               	movlw	-1
  6825  002170  0060  F127  FFE3   	movff	btemp+11,plusw1
  6826                           
  6827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6828                           ;stkvar	_c @ sp[(-11)+10]
  6829  002176  0EFF               	movlw	-1
  6830  002178  50E3               	movf	plusw1,w,c
  6831  00217A  6EE6               	movwf	postinc1,c
  6832                           
  6833                           ;stkvar	_fp @ sp[(-12)+-2]
  6834  00217C  0EF2               	movlw	-14
  6835  00217E  006F FF8F FFE6     	movff	plusw1,postinc1
  6836  002184  006F FF8F FFE6     	movff	plusw1,postinc1
  6837  00218A  EC18  F026         	call	_ctoa	;wreg free
  6838  00218E  D1E3               	goto	l1729
  6839  002190                     l6479:
  6840                           
  6841                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6842                           ;stkvar	_fmt @ sp[(-11)+-4]
  6843  002190  0EF1               	movlw	-15
  6844  002192  006F FF8F FFD9     	movff	plusw1,fsr2l
  6845  002198  0EF2               	movlw	-14
  6846  00219A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6847  0021A0  006F FF7F FFF6     	movff	indf2,tblptrl
  6848  0021A6                     	if	1	;There is more than 1 active tblptr byte
  6849  0021A6  0E20               	movlw	high __smallconst
  6850  0021A8  6EF7               	movwf	tblptrh,c
  6851  0021AA                     	endif
  6852  0021AA                     	if	0	;tblptru may be non-zero
  6853  0021AA                     	endif
  6854  0021AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6855  0021AA  0E00               	movlw	low (__smallconst shr (0+16))
  6856  0021AC  6EF8               	movwf	tblptru,c
  6857  0021AE                     	endif
  6858  0021AE  0008               	tblrd		*
  6859  0021B0  50F5               	movf	tablat,w,c
  6860  0021B2  0A64               	xorlw	100
  6861  0021B4  B4D8               	btfsc	status,2,c
  6862  0021B6  D014               	goto	u3670
  6863                           
  6864                           ;stkvar	_fmt @ sp[(-11)+-4]
  6865  0021B8  0EF1               	movlw	-15
  6866  0021BA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6867  0021C0  0EF2               	movlw	-14
  6868  0021C2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6869  0021C8  006F FF7F FFF6     	movff	indf2,tblptrl
  6870  0021CE                     	if	1	;There is more than 1 active tblptr byte
  6871  0021CE  0E20               	movlw	high __smallconst
  6872  0021D0  6EF7               	movwf	tblptrh,c
  6873  0021D2                     	endif
  6874  0021D2                     	if	0	;tblptru may be non-zero
  6875  0021D2                     	endif
  6876  0021D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6877  0021D2  0E00               	movlw	low (__smallconst shr (0+16))
  6878  0021D4  6EF8               	movwf	tblptru,c
  6879  0021D6                     	endif
  6880  0021D6  0008               	tblrd		*
  6881  0021D8  50F5               	movf	tablat,w,c
  6882  0021DA  0A69               	xorlw	105
  6883  0021DC  A4D8               	btfss	status,2,c
  6884  0021DE  D073               	goto	l6491
  6885  0021E0                     u3670:
  6886                           
  6887                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6888                           ;stkvar	_fmt @ sp[(-11)+-4]
  6889  0021E0  0EF1               	movlw	-15
  6890  0021E2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6891  0021E8  0EF2               	movlw	-14
  6892  0021EA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6893  0021F0  2ADF               	incf	indf2,f,c
  6894                           
  6895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6896                           ;stkvar	_ap @ sp[(-11)+-6]
  6897  0021F2  0EEF               	movlw	-17
  6898  0021F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6899  0021FA  0EF0               	movlw	-16
  6900  0021FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6901  002202  0E02               	movlw	2
  6902  002204  5EDE               	subwf	postinc2,f,c
  6903  002206  0E00               	movlw	0
  6904  002208  5ADD               	subwfb	postdec2,f,c
  6905  00220A  006F FF78  F048    	movff	postinc2,btemp+10
  6906  002210  006F FF74  F049    	movff	postdec2,btemp+11
  6907  002216  0060  F123  FFD9   	movff	btemp+10,fsr2l
  6908  00221C  0060  F127  FFDA   	movff	btemp+11,fsr2h
  6909  002222  006F FF78  F048    	movff	postinc2,btemp+10
  6910  002228  006F FF74  F049    	movff	postdec2,btemp+11
  6911                           
  6912                           ;stkvar	_ll @ sp[(-11)+0]
  6913  00222E  0EF5               	movlw	-11
  6914  002230  0060  F123  FFE3   	movff	btemp+10,plusw1
  6915  002236  0EF6               	movlw	-10
  6916  002238  0060  F127  FFE3   	movff	btemp+11,plusw1
  6917  00223E  6A3E               	clrf	btemp,c
  6918  002240  BEE3               	btfsc	plusw1,7,c
  6919  002242  683E               	setf	btemp,c
  6920  002244  0EF7               	movlw	-9
  6921  002246  0060  F0FB  FFE3   	movff	btemp,plusw1
  6922  00224C  0EF8               	movlw	-8
  6923  00224E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6924  002254  0EF9               	movlw	-7
  6925  002256  0060  F0FB  FFE3   	movff	btemp,plusw1
  6926  00225C  0EFA               	movlw	-6
  6927  00225E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6928  002264  0EFB               	movlw	-5
  6929  002266  0060  F0FB  FFE3   	movff	btemp,plusw1
  6930  00226C  0EFC               	movlw	-4
  6931  00226E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6932  002274                     l6487:
  6933                           
  6934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6935                           ;stkvar	_ll @ sp[(-11)+0]
  6936  002274  50E1               	movf	fsr1l,w,c
  6937  002276  0FF5               	addlw	-11
  6938  002278  6ED9               	movwf	fsr2l,c
  6939  00227A  50E2               	movf	fsr1h,w,c
  6940  00227C  6EDA               	movwf	fsr2h,c
  6941  00227E  0EFF               	movlw	255
  6942  002280  22DA               	addwfc	fsr2h,f,c
  6943  002282  006F FF7B FFE6     	movff	postinc2,postinc1
  6944  002288  006F FF7B FFE6     	movff	postinc2,postinc1
  6945  00228E  006F FF7B FFE6     	movff	postinc2,postinc1
  6946  002294  006F FF7B FFE6     	movff	postinc2,postinc1
  6947  00229A  006F FF7B FFE6     	movff	postinc2,postinc1
  6948  0022A0  006F FF7B FFE6     	movff	postinc2,postinc1
  6949  0022A6  006F FF7B FFE6     	movff	postinc2,postinc1
  6950  0022AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6951                           
  6952                           ;stkvar	_fp @ sp[(-19)+-2]
  6953  0022B2  0EEB               	movlw	-21
  6954  0022B4  006F FF8F FFE6     	movff	plusw1,postinc1
  6955  0022BA  006F FF8F FFE6     	movff	plusw1,postinc1
  6956  0022C0  ECB0  F012         	call	_dtoa	;wreg free
  6957  0022C4  D148               	goto	l1729
  6958  0022C6                     l6491:
  6959                           
  6960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  6961  0022C6  0E02               	movlw	2
  6962  0022C8  6EE6               	movwf	postinc1,c
  6963  0022CA  0E00               	movlw	0
  6964  0022CC  6EE6               	movwf	postinc1,c
  6965  0022CE  0EA7               	movlw	STR_15& (0+255)
  6966  0022D0  6EE6               	movwf	postinc1,c
  6967                           
  6968                           ;stkvar	_fmt @ sp[(-14)+-4]
  6969  0022D2  0EEE               	movlw	-18
  6970  0022D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6971  0022DA  0EEF               	movlw	-17
  6972  0022DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6973  0022E2  50DF               	movf	indf2,w,c
  6974  0022E4  6EE6               	movwf	postinc1,c
  6975  0022E6  EC11  F020         	call	_strncmp	;wreg free
  6976  0022EA  503E               	movf	btemp,w,c
  6977  0022EC  103F               	iorwf	btemp+1,w,c
  6978  0022EE  B4D8               	btfsc	status,2,c
  6979  0022F0  D016               	goto	u3690
  6980  0022F2  0E02               	movlw	2
  6981  0022F4  6EE6               	movwf	postinc1,c
  6982  0022F6  0E00               	movlw	0
  6983  0022F8  6EE6               	movwf	postinc1,c
  6984  0022FA  0EAA               	movlw	STR_19& (0+255)
  6985  0022FC  6EE6               	movwf	postinc1,c
  6986                           
  6987                           ;stkvar	_fmt @ sp[(-14)+-4]
  6988  0022FE  0EEE               	movlw	-18
  6989  002300  006F FF8F FFD9     	movff	plusw1,fsr2l
  6990  002306  0EEF               	movlw	-17
  6991  002308  006F FF8F FFDA     	movff	plusw1,fsr2h
  6992  00230E  50DF               	movf	indf2,w,c
  6993  002310  6EE6               	movwf	postinc1,c
  6994  002312  EC11  F020         	call	_strncmp	;wreg free
  6995  002316  503E               	movf	btemp,w,c
  6996  002318  103F               	iorwf	btemp+1,w,c
  6997  00231A  A4D8               	btfss	status,2,c
  6998  00231C  D067               	goto	l6503
  6999  00231E                     u3690:
  7000                           
  7001                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7002                           ;stkvar	_fmt @ sp[(-11)+-4]
  7003  00231E  0EF1               	movlw	-15
  7004  002320  006F FF8F FFD9     	movff	plusw1,fsr2l
  7005  002326  0EF2               	movlw	-14
  7006  002328  006F FF8F FFDA     	movff	plusw1,fsr2h
  7007  00232E  0E02               	movlw	2
  7008  002330  26DF               	addwf	indf2,f,c
  7009                           
  7010                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7011                           ;stkvar	_ap @ sp[(-11)+-6]
  7012  002332  0EEF               	movlw	-17
  7013  002334  006F FF8F FFD9     	movff	plusw1,fsr2l
  7014  00233A  0EF0               	movlw	-16
  7015  00233C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7016  002342  0E04               	movlw	4
  7017  002344  5EDE               	subwf	postinc2,f,c
  7018  002346  0E00               	movlw	0
  7019  002348  5ADD               	subwfb	postdec2,f,c
  7020  00234A  006F FF78  F048    	movff	postinc2,btemp+10
  7021  002350  006F FF74  F049    	movff	postdec2,btemp+11
  7022  002356  0060  F123  FFD9   	movff	btemp+10,fsr2l
  7023  00235C  0060  F127  FFDA   	movff	btemp+11,fsr2h
  7024  002362  006F FF78  F046    	movff	postinc2,btemp+8
  7025  002368  006F FF78  F047    	movff	postinc2,btemp+9
  7026  00236E  006F FF78  F048    	movff	postinc2,btemp+10
  7027  002374  006F FF78  F049    	movff	postinc2,btemp+11
  7028  00237A  0060  F118  F04E   	movff	btemp+8,btemp+16
  7029  002380  0060  F11C  F04F   	movff	btemp+9,btemp+17
  7030  002386  0060  F120  F050   	movff	btemp+10,btemp+18
  7031  00238C  0060  F124  F051   	movff	btemp+11,btemp+19
  7032  002392  6A52               	clrf	btemp+20,c
  7033  002394  BE51               	btfsc	btemp+19,7,c
  7034  002396  6852               	setf	btemp+20,c
  7035  002398  0060  F148  F053   	movff	btemp+20,btemp+21
  7036  00239E  0060  F148  F054   	movff	btemp+20,btemp+22
  7037  0023A4  0060  F148  F055   	movff	btemp+20,btemp+23
  7038                           
  7039                           ;stkvar	_ll @ sp[(-11)+0]
  7040  0023AA  0EF5               	movlw	-11
  7041  0023AC  0060  F13B  FFE3   	movff	btemp+16,plusw1
  7042  0023B2  0EF6               	movlw	-10
  7043  0023B4  0060  F13F  FFE3   	movff	btemp+17,plusw1
  7044  0023BA  0EF7               	movlw	-9
  7045  0023BC  0060  F143  FFE3   	movff	btemp+18,plusw1
  7046  0023C2  0EF8               	movlw	-8
  7047  0023C4  0060  F147  FFE3   	movff	btemp+19,plusw1
  7048  0023CA  0EF9               	movlw	-7
  7049  0023CC  0060  F14B  FFE3   	movff	btemp+20,plusw1
  7050  0023D2  0EFA               	movlw	-6
  7051  0023D4  0060  F14F  FFE3   	movff	btemp+21,plusw1
  7052  0023DA  0EFB               	movlw	-5
  7053  0023DC  0060  F153  FFE3   	movff	btemp+22,plusw1
  7054  0023E2  0EFC               	movlw	-4
  7055  0023E4  0060  F157  FFE3   	movff	btemp+23,plusw1
  7056  0023EA  D744               	goto	l6487
  7057  0023EC                     l6503:
  7058                           
  7059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7060                           ;stkvar	_fmt @ sp[(-11)+-4]
  7061  0023EC  0EF1               	movlw	-15
  7062  0023EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7063  0023F4  0EF2               	movlw	-14
  7064  0023F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7065  0023FC  006F FF7F FFF6     	movff	indf2,tblptrl
  7066  002402                     	if	1	;There is more than 1 active tblptr byte
  7067  002402  0E20               	movlw	high __smallconst
  7068  002404  6EF7               	movwf	tblptrh,c
  7069  002406                     	endif
  7070  002406                     	if	0	;tblptru may be non-zero
  7071  002406                     	endif
  7072  002406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7073  002406  0E00               	movlw	low (__smallconst shr (0+16))
  7074  002408  6EF8               	movwf	tblptru,c
  7075  00240A                     	endif
  7076  00240A  0008               	tblrd		*
  7077  00240C  50F5               	movf	tablat,w,c
  7078  00240E  0A73               	xorlw	115
  7079  002410  A4D8               	btfss	status,2,c
  7080  002412  D040               	goto	l6513
  7081                           
  7082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7083                           ;stkvar	_fmt @ sp[(-11)+-4]
  7084  002414  0EF1               	movlw	-15
  7085  002416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7086  00241C  0EF2               	movlw	-14
  7087  00241E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7088  002424  2ADF               	incf	indf2,f,c
  7089                           
  7090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7091                           ;stkvar	_ap @ sp[(-11)+-6]
  7092  002426  0EEF               	movlw	-17
  7093  002428  006F FF8F FFD9     	movff	plusw1,fsr2l
  7094  00242E  0EF0               	movlw	-16
  7095  002430  006F FF8F FFDA     	movff	plusw1,fsr2h
  7096  002436  0E02               	movlw	2
  7097  002438  5EDE               	subwf	postinc2,f,c
  7098  00243A  0E00               	movlw	0
  7099  00243C  5ADD               	subwfb	postdec2,f,c
  7100  00243E  006F FF78  F048    	movff	postinc2,btemp+10
  7101  002444  006F FF74  F049    	movff	postdec2,btemp+11
  7102  00244A  0060  F123  FFD9   	movff	btemp+10,fsr2l
  7103  002450  0060  F127  FFDA   	movff	btemp+11,fsr2h
  7104  002456  006F FF78  F048    	movff	postinc2,btemp+10
  7105  00245C  006F FF74  F049    	movff	postdec2,btemp+11
  7106                           
  7107                           ;stkvar	_cp @ sp[(-11)+8]
  7108  002462  0EFE               	movlw	-2
  7109  002464  0060  F127  FFE3   	movff	btemp+11,plusw1
  7110  00246A  0EFD               	movlw	-3
  7111  00246C  0060  F123  FFE3   	movff	btemp+10,plusw1
  7112                           
  7113                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7114                           ;stkvar	_cp @ sp[(-11)+8]
  7115  002472  0EFD               	movlw	-3
  7116  002474  006F FF8F FFE6     	movff	plusw1,postinc1
  7117  00247A  006F FF8F FFE6     	movff	plusw1,postinc1
  7118                           
  7119                           ;stkvar	_fp @ sp[(-13)+-2]
  7120  002480  0EF1               	movlw	-15
  7121  002482  006F FF8F FFE6     	movff	plusw1,postinc1
  7122  002488  006F FF8F FFE6     	movff	plusw1,postinc1
  7123  00248E  EC68  F019         	call	_stoa	;wreg free
  7124  002492  D061               	goto	l1729
  7125  002494                     l6513:
  7126                           
  7127                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7128                           ;stkvar	_fmt @ sp[(-11)+-4]
  7129  002494  0EF1               	movlw	-15
  7130  002496  006F FF8F FFD9     	movff	plusw1,fsr2l
  7131  00249C  0EF2               	movlw	-14
  7132  00249E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7133  0024A4  006F FF7F FFF6     	movff	indf2,tblptrl
  7134  0024AA                     	if	1	;There is more than 1 active tblptr byte
  7135  0024AA  0E20               	movlw	high __smallconst
  7136  0024AC  6EF7               	movwf	tblptrh,c
  7137  0024AE                     	endif
  7138  0024AE                     	if	0	;tblptru may be non-zero
  7139  0024AE                     	endif
  7140  0024AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7141  0024AE  0E00               	movlw	low (__smallconst shr (0+16))
  7142  0024B0  6EF8               	movwf	tblptru,c
  7143  0024B2                     	endif
  7144  0024B2  0008               	tblrd		*
  7145  0024B4  50F5               	movf	tablat,w,c
  7146  0024B6  0A25               	xorlw	37
  7147  0024B8  A4D8               	btfss	status,2,c
  7148  0024BA  D018               	goto	l6523
  7149                           
  7150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7151                           ;stkvar	_fmt @ sp[(-11)+-4]
  7152  0024BC  0EF1               	movlw	-15
  7153  0024BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7154  0024C4  0EF2               	movlw	-14
  7155  0024C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7156  0024CC  2ADF               	incf	indf2,f,c
  7157                           
  7158                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7159                           ;stkvar	_fp @ sp[(-11)+-2]
  7160  0024CE  0EF3               	movlw	-13
  7161  0024D0  006F FF8F FFE6     	movff	plusw1,postinc1
  7162  0024D6  006F FF8F FFE6     	movff	plusw1,postinc1
  7163  0024DC  0E25               	movlw	37
  7164  0024DE  6EE6               	movwf	postinc1,c
  7165  0024E0  0E00               	movlw	0
  7166  0024E2  6EE6               	movwf	postinc1,c
  7167  0024E4  EC63  F021         	call	_fputc	;wreg free
  7168  0024E8                     l6519:
  7169                           
  7170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7171  0024E8  0E01               	movlw	1
  7172  0024EA  D00A               	goto	L15
  7173  0024EC                     l6523:
  7174                           
  7175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7176                           ;stkvar	_fmt @ sp[(-11)+-4]
  7177  0024EC  0EF1               	movlw	-15
  7178  0024EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7179  0024F4  0EF2               	movlw	-14
  7180  0024F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7181  0024FC  2ADF               	incf	indf2,f,c
  7182                           
  7183                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7184  0024FE  0E00               	movlw	0
  7185  002500                     L15:
  7186  002500  6E3E               	movwf	btemp,c
  7187  002502  0E00               	movlw	0
  7188  002504  6E3F               	movwf	btemp+1,c
  7189  002506  D027               	goto	l1729
  7190  002508                     l6529:
  7191                           
  7192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7193                           ;stkvar	_fp @ sp[(-11)+-2]
  7194  002508  0EF3               	movlw	-13
  7195  00250A  006F FF8F FFE6     	movff	plusw1,postinc1
  7196  002510  006F FF8F FFE6     	movff	plusw1,postinc1
  7197                           
  7198                           ;stkvar	_fmt @ sp[(-13)+-4]
  7199  002516  0EEF               	movlw	-17
  7200  002518  006F FF8F FFD9     	movff	plusw1,fsr2l
  7201  00251E  0EF0               	movlw	-16
  7202  002520  006F FF8F FFDA     	movff	plusw1,fsr2h
  7203  002526  006F FF7F FFF6     	movff	indf2,tblptrl
  7204  00252C                     	if	1	;There is more than 1 active tblptr byte
  7205  00252C  0E20               	movlw	high __smallconst
  7206  00252E  6EF7               	movwf	tblptrh,c
  7207  002530                     	endif
  7208  002530                     	if	0	;tblptru may be non-zero
  7209  002530                     	endif
  7210  002530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7211  002530  0E00               	movlw	low (__smallconst shr (0+16))
  7212  002532  6EF8               	movwf	tblptru,c
  7213  002534                     	endif
  7214  002534  0008               	tblrd		*
  7215  002536  50F5               	movf	tablat,w,c
  7216  002538  6EE6               	movwf	postinc1,c
  7217  00253A  0E00               	movlw	0
  7218  00253C  6EE6               	movwf	postinc1,c
  7219  00253E  EC63  F021         	call	_fputc	;wreg free
  7220                           
  7221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7222                           ;stkvar	_fmt @ sp[(-11)+-4]
  7223  002542  0EF1               	movlw	-15
  7224  002544  006F FF8F FFD9     	movff	plusw1,fsr2l
  7225  00254A  0EF2               	movlw	-14
  7226  00254C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7227  002552  2ADF               	incf	indf2,f,c
  7228  002554  D7C9               	goto	l6519
  7229  002556                     l1729:
  7230                           
  7231                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7232  002556  0EEF               	movlw	239
  7233  002558  26E1               	addwf	fsr1l,f,c
  7234  00255A  0EFF               	movlw	255
  7235  00255C  22E2               	addwfc	fsr1h,f,c
  7236  00255E  0012               	return		;funcret
  7237  002560                     __end_of_vfpfcnvrt:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _strncmp *****************
  7241 ;; Defined at:
  7242 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  _l              1  [STACK] PTR const unsigned char 
  7245 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7246 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  7247 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7248 ;;		 -> STR_1(17), 
  7249 ;;  _r              1  [STACK] PTR const unsigned char 
  7250 ;;		 -> STR_21(3), STR_17(3), 
  7251 ;;  n               2  [STACK] unsigned int 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  r               1  [STACK] PTR const unsigned char 
  7254 ;;		 -> STR_21(3), STR_17(3), 
  7255 ;;  l               1  [STACK] PTR const unsigned char 
  7256 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7257 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  7258 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7259 ;;		 -> STR_1(17), 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  2  [STACK] int 
  7262 ;; Registers used:
  7263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7273 ;;Total ram usage:        0 bytes
  7274 ;; Hardware stack levels used:    1
  7275 ;; Hardware stack levels required when called:    3
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		_vfpfcnvrt
  7280 ;; This function uses a reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text34
  7284  004022                     __ptext34:
  7285                           	opt callstack 0
  7286  004022                     _strncmp:
  7287                           	opt callstack 0
  7288                           
  7289                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7290  004022  52E6               	movf	postinc1,f,c
  7291  004024  52E6               	movf	postinc1,f,c
  7292                           
  7293                           ;stkvar	__l @ sp[(-2)+-1]
  7294                           
  7295                           ;incstack = 0
  7296  004026  0EFD               	movlw	-3
  7297  004028  006F FF8C  F049    	movff	plusw1,btemp+11
  7298                           
  7299                           ;stkvar	_l @ sp[(-2)+1]
  7300  00402E  0EFF               	movlw	-1
  7301  004030  0060  F127  FFE3   	movff	btemp+11,plusw1
  7302                           
  7303                           ;stkvar	__r @ sp[(-2)+-2]
  7304  004036  0EFC               	movlw	-4
  7305  004038  006F FF8C  F049    	movff	plusw1,btemp+11
  7306                           
  7307                           ;stkvar	_r @ sp[(-2)+0]
  7308  00403E  0EFE               	movlw	-2
  7309  004040  0060  F127  FFE3   	movff	btemp+11,plusw1
  7310                           
  7311                           ;stkvar	_n @ sp[(-2)+-4]
  7312  004046  0EFA               	movlw	-6
  7313  004048  006F FF8C  F03E    	movff	plusw1,btemp
  7314  00404E  0E01               	movlw	1
  7315  004050  5E3E               	subwf	btemp,f,c
  7316  004052  0EFA               	movlw	-6
  7317  004054  0060  F0FB  FFE3   	movff	btemp,plusw1
  7318  00405A  0EFB               	movlw	-5
  7319  00405C  006F FF8C  F03E    	movff	plusw1,btemp
  7320  004062  0E00               	movlw	0
  7321  004064  5A3E               	subwfb	btemp,f,c
  7322  004066  0EFB               	movlw	-5
  7323  004068  0060  F0FB  FFE3   	movff	btemp,plusw1
  7324  00406E  0EFA               	movlw	-6
  7325  004070  28E3               	incf	plusw1,w,c
  7326  004072  E121               	bnz	l4853
  7327  004074  0EFB               	movlw	-5
  7328  004076  28E3               	incf	plusw1,w,c
  7329  004078  A4D8               	btfss	status,2,c
  7330  00407A  D01D               	goto	l4853
  7331  00407C  0E00               	movlw	0
  7332  00407E  6E3E               	movwf	btemp,c
  7333  004080  0E00               	movlw	0
  7334  004082  6E3F               	movwf	btemp+1,c
  7335  004084  D091               	goto	l2478
  7336  004086                     l4849:
  7337                           
  7338                           ;stkvar	_l @ sp[(-2)+1]
  7339  004086  0EFF               	movlw	-1
  7340  004088  2AE3               	incf	plusw1,f,c
  7341                           
  7342                           ;stkvar	_r @ sp[(-2)+0]
  7343  00408A  0EFE               	movlw	-2
  7344  00408C  2AE3               	incf	plusw1,f,c
  7345                           
  7346                           ;stkvar	_n @ sp[(-2)+-4]
  7347  00408E  0EFA               	movlw	-6
  7348  004090  006F FF8C  F03E    	movff	plusw1,btemp
  7349  004096  0E01               	movlw	1
  7350  004098  5E3E               	subwf	btemp,f,c
  7351  00409A  0EFA               	movlw	-6
  7352  00409C  0060  F0FB  FFE3   	movff	btemp,plusw1
  7353  0040A2  0EFB               	movlw	-5
  7354  0040A4  006F FF8C  F03E    	movff	plusw1,btemp
  7355  0040AA  0E00               	movlw	0
  7356  0040AC  5A3E               	subwfb	btemp,f,c
  7357  0040AE  0EFB               	movlw	-5
  7358  0040B0  0060  F0FB  FFE3   	movff	btemp,plusw1
  7359  0040B6                     l4853:
  7360                           
  7361                           ;stkvar	_l @ sp[(-2)+1]
  7362  0040B6  50E1               	movf	fsr1l,w,c
  7363  0040B8  0FFF               	addlw	-1
  7364  0040BA  6ED9               	movwf	fsr2l,c
  7365  0040BC  50E2               	movf	fsr1h,w,c
  7366  0040BE  6EDA               	movwf	fsr2h,c
  7367  0040C0  0EFF               	movlw	255
  7368  0040C2  22DA               	addwfc	fsr2h,f,c
  7369  0040C4  006F FF7F FFF6     	movff	indf2,tblptrl
  7370  0040CA                     	if	1	;There is more than 1 active tblptr byte
  7371  0040CA  0E20               	movlw	high __smallconst
  7372  0040CC  6EF7               	movwf	tblptrh,c
  7373  0040CE                     	endif
  7374  0040CE                     	if	0	;tblptru may be non-zero
  7375  0040CE                     	endif
  7376  0040CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7377  0040CE  0E00               	movlw	low (__smallconst shr (0+16))
  7378  0040D0  6EF8               	movwf	tblptru,c
  7379  0040D2                     	endif
  7380  0040D2  0008               	tblrd		*
  7381  0040D4  50F5               	movf	tablat,w,c
  7382  0040D6  0900               	iorlw	0
  7383  0040D8  B4D8               	btfsc	status,2,c
  7384  0040DA  D041               	goto	u2400
  7385                           
  7386                           ;stkvar	_r @ sp[(-2)+0]
  7387  0040DC  50E1               	movf	fsr1l,w,c
  7388  0040DE  0FFE               	addlw	-2
  7389  0040E0  6ED9               	movwf	fsr2l,c
  7390  0040E2  50E2               	movf	fsr1h,w,c
  7391  0040E4  6EDA               	movwf	fsr2h,c
  7392  0040E6  0EFF               	movlw	255
  7393  0040E8  22DA               	addwfc	fsr2h,f,c
  7394  0040EA  006F FF7F FFF6     	movff	indf2,tblptrl
  7395  0040F0                     	if	1	;There is more than 1 active tblptr byte
  7396  0040F0  0E20               	movlw	high __smallconst
  7397  0040F2  6EF7               	movwf	tblptrh,c
  7398  0040F4                     	endif
  7399  0040F4                     	if	0	;tblptru may be non-zero
  7400  0040F4                     	endif
  7401  0040F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7402  0040F4  0E00               	movlw	low (__smallconst shr (0+16))
  7403  0040F6  6EF8               	movwf	tblptru,c
  7404  0040F8                     	endif
  7405  0040F8  0008               	tblrd		*
  7406  0040FA  50F5               	movf	tablat,w,c
  7407  0040FC  0900               	iorlw	0
  7408  0040FE  B4D8               	btfsc	status,2,c
  7409  004100  D02E               	goto	u2400
  7410                           
  7411                           ;stkvar	_n @ sp[(-2)+-4]
  7412  004102  0EFA               	movlw	-6
  7413  004104  006F FF8C  F03E    	movff	plusw1,btemp
  7414  00410A  0EFB               	movlw	-5
  7415  00410C  50E3               	movf	plusw1,w,c
  7416  00410E  103E               	iorwf	btemp,w,c
  7417  004110  B4D8               	btfsc	status,2,c
  7418  004112  D025               	goto	u2400
  7419                           
  7420                           ;stkvar	_l @ sp[(-2)+1]
  7421  004114  50E1               	movf	fsr1l,w,c
  7422  004116  0FFF               	addlw	-1
  7423  004118  6ED9               	movwf	fsr2l,c
  7424  00411A  50E2               	movf	fsr1h,w,c
  7425  00411C  6EDA               	movwf	fsr2h,c
  7426  00411E  0EFF               	movlw	255
  7427  004120  22DA               	addwfc	fsr2h,f,c
  7428  004122  006F FF7F FFF6     	movff	indf2,tblptrl
  7429  004128                     	if	1	;There is more than 1 active tblptr byte
  7430  004128  0E20               	movlw	high __smallconst
  7431  00412A  6EF7               	movwf	tblptrh,c
  7432  00412C                     	endif
  7433  00412C                     	if	0	;tblptru may be non-zero
  7434  00412C                     	endif
  7435  00412C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7436  00412C  0E00               	movlw	low (__smallconst shr (0+16))
  7437  00412E  6EF8               	movwf	tblptru,c
  7438  004130                     	endif
  7439  004130  0008               	tblrd		*
  7440  004132  006F FFD4  F049    	movff	tablat,btemp+11
  7441                           
  7442                           ;stkvar	_r @ sp[(-2)+0]
  7443  004138  50E1               	movf	fsr1l,w,c
  7444  00413A  0FFE               	addlw	-2
  7445  00413C  6ED9               	movwf	fsr2l,c
  7446  00413E  50E2               	movf	fsr1h,w,c
  7447  004140  6EDA               	movwf	fsr2h,c
  7448  004142  0EFF               	movlw	255
  7449  004144  22DA               	addwfc	fsr2h,f,c
  7450  004146  006F FF7F FFF6     	movff	indf2,tblptrl
  7451  00414C                     	if	1	;There is more than 1 active tblptr byte
  7452  00414C  0E20               	movlw	high __smallconst
  7453  00414E  6EF7               	movwf	tblptrh,c
  7454  004150                     	endif
  7455  004150                     	if	0	;tblptru may be non-zero
  7456  004150                     	endif
  7457  004150                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7458  004150  0E00               	movlw	low (__smallconst shr (0+16))
  7459  004152  6EF8               	movwf	tblptru,c
  7460  004154                     	endif
  7461  004154  0008               	tblrd		*
  7462  004156  50F5               	movf	tablat,w,c
  7463  004158  1849               	xorwf	btemp+11,w,c
  7464  00415A  B4D8               	btfsc	status,2,c
  7465  00415C  D794               	goto	l4849
  7466  00415E                     u2400:
  7467                           
  7468                           ;stkvar	_l @ sp[(-2)+1]
  7469  00415E  50E1               	movf	fsr1l,w,c
  7470  004160  0FFF               	addlw	-1
  7471  004162  6ED9               	movwf	fsr2l,c
  7472  004164  50E2               	movf	fsr1h,w,c
  7473  004166  6EDA               	movwf	fsr2h,c
  7474  004168  0EFF               	movlw	255
  7475  00416A  22DA               	addwfc	fsr2h,f,c
  7476  00416C  006F FF7F FFF6     	movff	indf2,tblptrl
  7477  004172                     	if	1	;There is more than 1 active tblptr byte
  7478  004172  0E20               	movlw	high __smallconst
  7479  004174  6EF7               	movwf	tblptrh,c
  7480  004176                     	endif
  7481  004176                     	if	0	;tblptru may be non-zero
  7482  004176                     	endif
  7483  004176                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7484  004176  0E00               	movlw	low (__smallconst shr (0+16))
  7485  004178  6EF8               	movwf	tblptru,c
  7486  00417A                     	endif
  7487  00417A  0008               	tblrd		*
  7488  00417C  50F5               	movf	tablat,w,c
  7489  00417E  6E3E               	movwf	btemp,c
  7490  004180  6A3F               	clrf	btemp+1,c
  7491                           
  7492                           ;stkvar	_r @ sp[(-2)+0]
  7493  004182  50E1               	movf	fsr1l,w,c
  7494  004184  0FFE               	addlw	-2
  7495  004186  6ED9               	movwf	fsr2l,c
  7496  004188  50E2               	movf	fsr1h,w,c
  7497  00418A  6EDA               	movwf	fsr2h,c
  7498  00418C  0EFF               	movlw	255
  7499  00418E  22DA               	addwfc	fsr2h,f,c
  7500  004190  006F FF7F FFF6     	movff	indf2,tblptrl
  7501  004196                     	if	1	;There is more than 1 active tblptr byte
  7502  004196  0E20               	movlw	high __smallconst
  7503  004198  6EF7               	movwf	tblptrh,c
  7504  00419A                     	endif
  7505  00419A                     	if	0	;tblptru may be non-zero
  7506  00419A                     	endif
  7507  00419A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7508  00419A  0E00               	movlw	low (__smallconst shr (0+16))
  7509  00419C  6EF8               	movwf	tblptru,c
  7510  00419E                     	endif
  7511  00419E  0008               	tblrd		*
  7512  0041A0  50F5               	movf	tablat,w,c
  7513  0041A2  5E3E               	subwf	btemp,f,c
  7514  0041A4  0E00               	movlw	0
  7515  0041A6  5A3F               	subwfb	btemp+1,f,c
  7516  0041A8                     l2478:
  7517                           
  7518                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  7519  0041A8  0EFA               	movlw	250
  7520  0041AA  26E1               	addwf	fsr1l,f,c
  7521  0041AC  0EFF               	movlw	255
  7522  0041AE  22E2               	addwfc	fsr1h,f,c
  7523  0041B0  0012               	return		;funcret
  7524  0041B2                     __end_of_strncmp:
  7525                           	opt callstack 0
  7526                           
  7527 ;; *************** function _stoa *****************
  7528 ;; Defined at:
  7529 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7532 ;;		 -> f(5), NULL(0), 
  7533 ;;  s               2  [STACK] PTR unsigned char 
  7534 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(5), V(85), 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  nuls            7  [STACK] unsigned char [7]
  7537 ;;  l               2  [STACK] int 
  7538 ;;  p               2  [STACK] int 
  7539 ;;  cp              2  [STACK] PTR unsigned char 
  7540 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(5), 
  7541 ;;		 -> V(85), 
  7542 ;;  w               2  [STACK] int 
  7543 ;;  i               2  [STACK] int 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  2  [STACK] int 
  7546 ;; Registers used:
  7547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7557 ;;Total ram usage:        0 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    6
  7560 ;; This function calls:
  7561 ;;		_fputc
  7562 ;;		_strlen
  7563 ;; This function is called by:
  7564 ;;		_vfpfcnvrt
  7565 ;; This function uses a reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text35
  7569  0032D0                     __ptext35:
  7570                           	opt callstack 0
  7571  0032D0                     _stoa:
  7572                           	opt callstack 0
  7573                           
  7574                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7575  0032D0  0E11               	movlw	17
  7576  0032D2  26E1               	addwf	fsr1l,f,c
  7577  0032D4  0E00               	movlw	0
  7578  0032D6  22E2               	addwfc	fsr1h,f,c
  7579                           
  7580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7581                           
  7582                           ;incstack = 0
  7583  0032D8  EE20  F0DE         	lfsr	2,stoa@F1142
  7584                           
  7585                           ;stkvar	_nuls @ sp[(-17)+0]
  7586  0032DC  0E07               	movlw	7
  7587  0032DE  6E3E               	movwf	btemp,c
  7588  0032E0  0EEF               	movlw	-17
  7589  0032E2                     us354999:
  7590  0032E2  006F FF7B FFE3     	movff	postinc2,plusw1
  7591  0032E8  28E8               	incf	wreg,w,c
  7592  0032EA  2E3E               	decfsz	btemp,f,c
  7593  0032EC  D7FA               	bra	us354999
  7594                           
  7595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7596                           ;stkvar	_s @ sp[(-17)+-4]
  7597  0032EE  0EEB               	movlw	-21
  7598  0032F0  006F FF8C  F048    	movff	plusw1,btemp+10
  7599  0032F6  0EEC               	movlw	-20
  7600  0032F8  006F FF8C  F049    	movff	plusw1,btemp+11
  7601                           
  7602                           ;stkvar	_cp @ sp[(-17)+11]
  7603  0032FE  0EFB               	movlw	-5
  7604  003300  0060  F127  FFE3   	movff	btemp+11,plusw1
  7605  003306  0EFA               	movlw	-6
  7606  003308  0060  F123  FFE3   	movff	btemp+10,plusw1
  7607                           
  7608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7609                           ;stkvar	_cp @ sp[(-17)+11]
  7610  00330E  0EFA               	movlw	-6
  7611  003310  006F FF8C  F03E    	movff	plusw1,btemp
  7612  003316  0EFB               	movlw	-5
  7613  003318  50E3               	movf	plusw1,w,c
  7614  00331A  103E               	iorwf	btemp,w,c
  7615  00331C  A4D8               	btfss	status,2,c
  7616  00331E  D00E               	goto	l6417
  7617                           
  7618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7619                           ;stkvar	_nuls @ sp[(-17)+0]
  7620  003320  0EEF               	movlw	239
  7621  003322  24E1               	addwf	fsr1l,w,c
  7622  003324  6E48               	movwf	btemp+10,c
  7623  003326  0EFF               	movlw	255
  7624  003328  20E2               	addwfc	fsr1h,w,c
  7625  00332A  6E49               	movwf	btemp+11,c
  7626                           
  7627                           ;stkvar	_cp @ sp[(-17)+11]
  7628  00332C  0EFB               	movlw	-5
  7629  00332E  0060  F127  FFE3   	movff	btemp+11,plusw1
  7630  003334  0EFA               	movlw	-6
  7631  003336  0060  F123  FFE3   	movff	btemp+10,plusw1
  7632  00333C                     l6417:
  7633                           
  7634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7635                           ;stkvar	_cp @ sp[(-17)+11]
  7636  00333C  0EFA               	movlw	-6
  7637  00333E  006F FF8F FFE6     	movff	plusw1,postinc1
  7638  003344  006F FF8F FFE6     	movff	plusw1,postinc1
  7639  00334A  EC4A  F024         	call	_strlen	;wreg free
  7640                           
  7641                           ;stkvar	_l @ sp[(-17)+7]
  7642  00334E  0EF6               	movlw	-10
  7643  003350  0060  F0FB  FFE3   	movff	btemp,plusw1
  7644  003356  0EF7               	movlw	-9
  7645  003358  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  7646                           
  7647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7648                           ;stkvar	_p @ sp[(-17)+9]
  7649  00335E  0EF8               	movlw	-8
  7650  003360  0060  F09B  FFE3   	movff	_prec,plusw1
  7651  003366  0EF9               	movlw	-7
  7652  003368  0060  F09F  FFE3   	movff	_prec+1,plusw1
  7653                           
  7654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7655                           ;stkvar	_p @ sp[(-17)+9]
  7656  00336E  0EF9               	movlw	-7
  7657  003370  BEE3               	btfsc	plusw1,7,c
  7658  003372  D023               	goto	l1710
  7659                           
  7660                           ;stkvar	_l @ sp[(-17)+7]
  7661                           ;stkvar	_p @ sp[(-17)+9]
  7662  003374  50E1               	movf	fsr1l,w,c
  7663  003376  0FF8               	addlw	-8
  7664  003378  6ED9               	movwf	fsr2l,c
  7665  00337A  50E2               	movf	fsr1h,w,c
  7666  00337C  6EDA               	movwf	fsr2h,c
  7667  00337E  0EFF               	movlw	255
  7668  003380  22DA               	addwfc	fsr2h,f,c
  7669  003382  0EF6               	movlw	-10
  7670  003384  50E3               	movf	plusw1,w,c
  7671  003386  5CDE               	subwf	postinc2,w,c
  7672  003388  50DE               	movf	postinc2,w,c
  7673  00338A  0A80               	xorlw	128
  7674  00338C  6E3E               	movwf	btemp,c
  7675  00338E  0EF7               	movlw	-9
  7676  003390  50E3               	movf	plusw1,w,c
  7677  003392  0A80               	xorlw	128
  7678  003394  583E               	subwfb	btemp,w,c
  7679  003396  B0D8               	btfsc	status,0,c
  7680  003398  D010               	goto	l1710
  7681                           
  7682                           ;stkvar	_p @ sp[(-17)+9]
  7683                           ;stkvar	_l @ sp[(-17)+7]
  7684  00339A  0EF8               	movlw	-8
  7685  00339C  006F FF8C  F03E    	movff	plusw1,btemp
  7686  0033A2  0EF6               	movlw	-10
  7687  0033A4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7688  0033AA  0EF9               	movlw	-7
  7689  0033AC  006F FF8C  F03E    	movff	plusw1,btemp
  7690  0033B2  0EF7               	movlw	-9
  7691  0033B4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7692  0033BA                     l1710:
  7693                           
  7694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7695                           ;stkvar	_l @ sp[(-17)+7]
  7696                           ;stkvar	_p @ sp[(-17)+9]
  7697  0033BA  0EF6               	movlw	-10
  7698  0033BC  006F FF8C  F03E    	movff	plusw1,btemp
  7699  0033C2  0EF8               	movlw	-8
  7700  0033C4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7701  0033CA  0EF7               	movlw	-9
  7702  0033CC  006F FF8C  F03E    	movff	plusw1,btemp
  7703  0033D2  0EF9               	movlw	-7
  7704  0033D4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7705                           
  7706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7707                           ;stkvar	_w @ sp[(-17)+13]
  7708  0033DA  0EFC               	movlw	-4
  7709  0033DC  0060  F093  FFE3   	movff	_width,plusw1
  7710  0033E2  0EFD               	movlw	-3
  7711  0033E4  0060  F097  FFE3   	movff	_width+1,plusw1
  7712                           
  7713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7714  0033EA  A028               	btfss	_flags,0,c
  7715  0033EC  D01F               	goto	l6437
  7716  0033EE  D031               	goto	u3590
  7717  0033F0                     l6433:
  7718                           
  7719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7720                           ;stkvar	_fp @ sp[(-17)+-2]
  7721  0033F0  0EED               	movlw	-19
  7722  0033F2  006F FF8F FFE6     	movff	plusw1,postinc1
  7723  0033F8  006F FF8F FFE6     	movff	plusw1,postinc1
  7724  0033FE  0E20               	movlw	32
  7725  003400  6EE6               	movwf	postinc1,c
  7726  003402  0E00               	movlw	0
  7727  003404  6EE6               	movwf	postinc1,c
  7728  003406  EC63  F021         	call	_fputc	;wreg free
  7729                           
  7730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7731                           ;stkvar	_l @ sp[(-17)+7]
  7732  00340A  0EF6               	movlw	-10
  7733  00340C  50E3               	movf	plusw1,w,c
  7734  00340E  0F01               	addlw	1
  7735  003410  6E3E               	movwf	btemp,c
  7736  003412  0EF6               	movlw	-10
  7737  003414  0060  F0FB  FFE3   	movff	btemp,plusw1
  7738  00341A  6A3E               	clrf	btemp,c
  7739  00341C  0EF7               	movlw	-9
  7740  00341E  50E3               	movf	plusw1,w,c
  7741  003420  203E               	addwfc	btemp,w,c
  7742  003422  6E3E               	movwf	btemp,c
  7743  003424  0EF7               	movlw	-9
  7744  003426  0060  F0FB  FFE3   	movff	btemp,plusw1
  7745  00342C                     l6437:
  7746                           
  7747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7748                           ;stkvar	_w @ sp[(-17)+13]
  7749                           ;stkvar	_l @ sp[(-17)+7]
  7750  00342C  50E1               	movf	fsr1l,w,c
  7751  00342E  0FF6               	addlw	-10
  7752  003430  6ED9               	movwf	fsr2l,c
  7753  003432  50E2               	movf	fsr1h,w,c
  7754  003434  6EDA               	movwf	fsr2h,c
  7755  003436  0EFF               	movlw	255
  7756  003438  22DA               	addwfc	fsr2h,f,c
  7757  00343A  0EFC               	movlw	-4
  7758  00343C  50E3               	movf	plusw1,w,c
  7759  00343E  5CDE               	subwf	postinc2,w,c
  7760  003440  50DE               	movf	postinc2,w,c
  7761  003442  0A80               	xorlw	128
  7762  003444  6E3E               	movwf	btemp,c
  7763  003446  0EFD               	movlw	-3
  7764  003448  50E3               	movf	plusw1,w,c
  7765  00344A  0A80               	xorlw	128
  7766  00344C  583E               	subwfb	btemp,w,c
  7767  00344E  A0D8               	btfss	status,0,c
  7768  003450  D7CF               	goto	l6433
  7769  003452                     u3590:
  7770                           
  7771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7772                           ;stkvar	_i @ sp[(-17)+15]
  7773  003452  0EFE               	movlw	-2
  7774  003454  6AE3               	clrf	plusw1,c
  7775  003456  0EFF               	movlw	-1
  7776  003458  6AE3               	clrf	plusw1,c
  7777                           
  7778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7779  00345A  D045               	goto	l6447
  7780  00345C                     l6441:
  7781                           
  7782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7783                           ;stkvar	_fp @ sp[(-17)+-2]
  7784  00345C  0EED               	movlw	-19
  7785  00345E  006F FF8F FFE6     	movff	plusw1,postinc1
  7786  003464  006F FF8F FFE6     	movff	plusw1,postinc1
  7787                           
  7788                           ;stkvar	_cp @ sp[(-19)+11]
  7789  00346A  0EF8               	movlw	-8
  7790  00346C  006F FF8F FFF6     	movff	plusw1,tblptrl
  7791  003472  0EF9               	movlw	-7
  7792  003474  006F FF8F FFF7     	movff	plusw1,tblptrh
  7793  00347A  0E00               	movlw	low (__smallconst shr (0+16))
  7794  00347C  6EF8               	movwf	tblptru,c
  7795  00347E  0E1F               	movlw	(high __ramtop+-1)
  7796  003480  64F7               	cpfsgt	tblptrh,c
  7797  003482  D003               	bra	u3607
  7798  003484  0008               	tblrd		*
  7799  003486  50F5               	movf	tablat,w,c
  7800  003488  D007               	bra	u3600
  7801  00348A                     u3607:
  7802  00348A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7803  003490  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7804  003496  50EF               	movf	indf0,w,c
  7805  003498                     u3600:
  7806  003498  6EE6               	movwf	postinc1,c
  7807  00349A  0E00               	movlw	0
  7808  00349C  6EE6               	movwf	postinc1,c
  7809  00349E  EC63  F021         	call	_fputc	;wreg free
  7810                           
  7811                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7812                           ;stkvar	_cp @ sp[(-17)+11]
  7813  0034A2  0EFA               	movlw	-6
  7814  0034A4  50E3               	movf	plusw1,w,c
  7815  0034A6  0F01               	addlw	1
  7816  0034A8  6E3E               	movwf	btemp,c
  7817  0034AA  0EFA               	movlw	-6
  7818  0034AC  0060  F0FB  FFE3   	movff	btemp,plusw1
  7819  0034B2  6A3E               	clrf	btemp,c
  7820  0034B4  0EFB               	movlw	-5
  7821  0034B6  50E3               	movf	plusw1,w,c
  7822  0034B8  203E               	addwfc	btemp,w,c
  7823  0034BA  6E3E               	movwf	btemp,c
  7824  0034BC  0EFB               	movlw	-5
  7825  0034BE  0060  F0FB  FFE3   	movff	btemp,plusw1
  7826                           
  7827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7828                           ;stkvar	_i @ sp[(-17)+15]
  7829  0034C4  0EFE               	movlw	-2
  7830  0034C6  50E3               	movf	plusw1,w,c
  7831  0034C8  0F01               	addlw	1
  7832  0034CA  6E3E               	movwf	btemp,c
  7833  0034CC  0EFE               	movlw	-2
  7834  0034CE  0060  F0FB  FFE3   	movff	btemp,plusw1
  7835  0034D4  6A3E               	clrf	btemp,c
  7836  0034D6  0EFF               	movlw	-1
  7837  0034D8  50E3               	movf	plusw1,w,c
  7838  0034DA  203E               	addwfc	btemp,w,c
  7839  0034DC  6E3E               	movwf	btemp,c
  7840  0034DE  0EFF               	movlw	-1
  7841  0034E0  0060  F0FB  FFE3   	movff	btemp,plusw1
  7842  0034E6                     l6447:
  7843                           
  7844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7845                           ;stkvar	_p @ sp[(-17)+9]
  7846                           ;stkvar	_i @ sp[(-17)+15]
  7847  0034E6  50E1               	movf	fsr1l,w,c
  7848  0034E8  0FFE               	addlw	-2
  7849  0034EA  6ED9               	movwf	fsr2l,c
  7850  0034EC  50E2               	movf	fsr1h,w,c
  7851  0034EE  6EDA               	movwf	fsr2h,c
  7852  0034F0  0EFF               	movlw	255
  7853  0034F2  22DA               	addwfc	fsr2h,f,c
  7854  0034F4  0EF8               	movlw	-8
  7855  0034F6  50E3               	movf	plusw1,w,c
  7856  0034F8  5CDE               	subwf	postinc2,w,c
  7857  0034FA  50DE               	movf	postinc2,w,c
  7858  0034FC  0A80               	xorlw	128
  7859  0034FE  6E3E               	movwf	btemp,c
  7860  003500  0EF9               	movlw	-7
  7861  003502  50E3               	movf	plusw1,w,c
  7862  003504  0A80               	xorlw	128
  7863  003506  583E               	subwfb	btemp,w,c
  7864  003508  A0D8               	btfss	status,0,c
  7865  00350A  D7A8               	goto	l6441
  7866                           
  7867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7868  00350C  B028               	btfsc	_flags,0,c
  7869  00350E  D01F               	goto	l6455
  7870  003510  D031               	goto	u3630
  7871  003512                     l6451:
  7872                           
  7873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7874                           ;stkvar	_fp @ sp[(-17)+-2]
  7875  003512  0EED               	movlw	-19
  7876  003514  006F FF8F FFE6     	movff	plusw1,postinc1
  7877  00351A  006F FF8F FFE6     	movff	plusw1,postinc1
  7878  003520  0E20               	movlw	32
  7879  003522  6EE6               	movwf	postinc1,c
  7880  003524  0E00               	movlw	0
  7881  003526  6EE6               	movwf	postinc1,c
  7882  003528  EC63  F021         	call	_fputc	;wreg free
  7883                           
  7884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7885                           ;stkvar	_l @ sp[(-17)+7]
  7886  00352C  0EF6               	movlw	-10
  7887  00352E  50E3               	movf	plusw1,w,c
  7888  003530  0F01               	addlw	1
  7889  003532  6E3E               	movwf	btemp,c
  7890  003534  0EF6               	movlw	-10
  7891  003536  0060  F0FB  FFE3   	movff	btemp,plusw1
  7892  00353C  6A3E               	clrf	btemp,c
  7893  00353E  0EF7               	movlw	-9
  7894  003540  50E3               	movf	plusw1,w,c
  7895  003542  203E               	addwfc	btemp,w,c
  7896  003544  6E3E               	movwf	btemp,c
  7897  003546  0EF7               	movlw	-9
  7898  003548  0060  F0FB  FFE3   	movff	btemp,plusw1
  7899  00354E                     l6455:
  7900                           
  7901                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7902                           ;stkvar	_w @ sp[(-17)+13]
  7903                           ;stkvar	_l @ sp[(-17)+7]
  7904  00354E  50E1               	movf	fsr1l,w,c
  7905  003550  0FF6               	addlw	-10
  7906  003552  6ED9               	movwf	fsr2l,c
  7907  003554  50E2               	movf	fsr1h,w,c
  7908  003556  6EDA               	movwf	fsr2h,c
  7909  003558  0EFF               	movlw	255
  7910  00355A  22DA               	addwfc	fsr2h,f,c
  7911  00355C  0EFC               	movlw	-4
  7912  00355E  50E3               	movf	plusw1,w,c
  7913  003560  5CDE               	subwf	postinc2,w,c
  7914  003562  50DE               	movf	postinc2,w,c
  7915  003564  0A80               	xorlw	128
  7916  003566  6E3E               	movwf	btemp,c
  7917  003568  0EFD               	movlw	-3
  7918  00356A  50E3               	movf	plusw1,w,c
  7919  00356C  0A80               	xorlw	128
  7920  00356E  583E               	subwfb	btemp,w,c
  7921  003570  A0D8               	btfss	status,0,c
  7922  003572  D7CF               	goto	l6451
  7923  003574                     u3630:
  7924                           
  7925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  7926                           ;stkvar	_l @ sp[(-17)+7]
  7927  003574  0EF6               	movlw	-10
  7928  003576  006F FF8C  F03E    	movff	plusw1,btemp
  7929  00357C  0EF7               	movlw	-9
  7930  00357E  006F FF8C  F03F    	movff	plusw1,btemp+1
  7931                           
  7932                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  7933  003584  0EEB               	movlw	235
  7934  003586  26E1               	addwf	fsr1l,f,c
  7935  003588  0EFF               	movlw	255
  7936  00358A  22E2               	addwfc	fsr1h,f,c
  7937  00358C  0012               	return		;funcret
  7938  00358E                     __end_of_stoa:
  7939                           	opt callstack 0
  7940                           
  7941 ;; *************** function _dtoa *****************
  7942 ;; Defined at:
  7943 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7946 ;;		 -> f(5), NULL(0), 
  7947 ;;  d               8  [STACK] long long 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  n               8  [STACK] long long 
  7950 ;;  i               2  [STACK] int 
  7951 ;;  s               2  [STACK] int 
  7952 ;;  w               2  [STACK] int 
  7953 ;;  p               2  [STACK] int 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  2  [STACK] int 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7967 ;;Total ram usage:        0 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    8
  7970 ;; This function calls:
  7971 ;;		___aodiv
  7972 ;;		___aomod
  7973 ;;		_abs
  7974 ;;		_pad
  7975 ;; This function is called by:
  7976 ;;		_vfpfcnvrt
  7977 ;; This function uses a reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text36
  7981  002560                     __ptext36:
  7982                           	opt callstack 0
  7983  002560                     _dtoa:
  7984                           	opt callstack 0
  7985                           
  7986                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7987  002560  0E12               	movlw	18
  7988  002562  26E1               	addwf	fsr1l,f,c
  7989  002564  0E00               	movlw	0
  7990  002566  22E2               	addwfc	fsr1h,f,c
  7991                           
  7992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7993                           ;stkvar	_d @ sp[(-18)+-10]
  7994                           
  7995                           ;incstack = 0
  7996  002568  0EE4               	movlw	228
  7997  00256A  24E1               	addwf	fsr1l,w,c
  7998  00256C  6ED9               	movwf	fsr2l,c
  7999  00256E  0EFF               	movlw	255
  8000  002570  20E2               	addwfc	fsr1h,w,c
  8001  002572  6EDA               	movwf	fsr2h,c
  8002                           
  8003                           ;stkvar	_n @ sp[(-18)+2]
  8004  002574  0E08               	movlw	8
  8005  002576  6E3E               	movwf	btemp,c
  8006  002578  0EF0               	movlw	-16
  8007  00257A                     us337999:
  8008  00257A  006F FF7B FFE3     	movff	postinc2,plusw1
  8009  002580  28E8               	incf	wreg,w,c
  8010  002582  2E3E               	decfsz	btemp,f,c
  8011  002584  D7FA               	bra	us337999
  8012                           
  8013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8014                           ;stkvar	_n @ sp[(-18)+2]
  8015  002586  0EF7               	movlw	-9
  8016  002588  AEE3               	btfss	plusw1,7,c
  8017  00258A  D002               	goto	u3380
  8018  00258C  0E01               	movlw	1
  8019  00258E  D001               	goto	u3390
  8020  002590                     u3380:
  8021  002590  0E00               	movlw	0
  8022  002592                     u3390:
  8023  002592  6E48               	movwf	btemp+10,c
  8024  002594  6A49               	clrf	btemp+11,c
  8025                           
  8026                           ;stkvar	_s @ sp[(-18)+12]
  8027  002596  0EFA               	movlw	-6
  8028  002598  0060  F123  FFE3   	movff	btemp+10,plusw1
  8029  00259E  0EFB               	movlw	-5
  8030  0025A0  0060  F127  FFE3   	movff	btemp+11,plusw1
  8031                           
  8032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8033                           ;stkvar	_s @ sp[(-18)+12]
  8034  0025A6  0EFA               	movlw	-6
  8035  0025A8  006F FF8C  F03E    	movff	plusw1,btemp
  8036  0025AE  0EFB               	movlw	-5
  8037  0025B0  50E3               	movf	plusw1,w,c
  8038  0025B2  103E               	iorwf	btemp,w,c
  8039  0025B4  B4D8               	btfsc	status,2,c
  8040  0025B6  D025               	goto	u3410
  8041                           
  8042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8043                           ;stkvar	_n @ sp[(-18)+2]
  8044                           ;stkvar	_n @ sp[(-18)+2]
  8045  0025B8  0EF0               	movlw	-16
  8046  0025BA  6CE3               	negf	plusw1,c
  8047  0025BC  0EF1               	movlw	-15
  8048  0025BE  1EE3               	comf	plusw1,f,c
  8049  0025C0  0EF2               	movlw	-14
  8050  0025C2  1EE3               	comf	plusw1,f,c
  8051  0025C4  0EF3               	movlw	-13
  8052  0025C6  1EE3               	comf	plusw1,f,c
  8053  0025C8  0EF4               	movlw	-12
  8054  0025CA  1EE3               	comf	plusw1,f,c
  8055  0025CC  0EF5               	movlw	-11
  8056  0025CE  1EE3               	comf	plusw1,f,c
  8057  0025D0  0EF6               	movlw	-10
  8058  0025D2  1EE3               	comf	plusw1,f,c
  8059  0025D4  0EF7               	movlw	-9
  8060  0025D6  1EE3               	comf	plusw1,f,c
  8061  0025D8  E314               	bnc	u3410
  8062  0025DA  0EF1               	movlw	-15
  8063  0025DC  2AE3               	incf	plusw1,f,c
  8064  0025DE  E311               	bnc	u3410
  8065  0025E0  0EF2               	movlw	-14
  8066  0025E2  2AE3               	incf	plusw1,f,c
  8067  0025E4  E30E               	bnc	u3410
  8068  0025E6  0EF3               	movlw	-13
  8069  0025E8  2AE3               	incf	plusw1,f,c
  8070  0025EA  E30B               	bnc	u3410
  8071  0025EC  0EF4               	movlw	-12
  8072  0025EE  2AE3               	incf	plusw1,f,c
  8073  0025F0  E308               	bnc	u3410
  8074  0025F2  0EF5               	movlw	-11
  8075  0025F4  2AE3               	incf	plusw1,f,c
  8076  0025F6  E305               	bnc	u3410
  8077  0025F8  0EF6               	movlw	-10
  8078  0025FA  2AE3               	incf	plusw1,f,c
  8079  0025FC  E302               	bnc	u3410
  8080  0025FE  0EF7               	movlw	-9
  8081  002600  2AE3               	incf	plusw1,f,c
  8082  002602                     u3410:
  8083                           
  8084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8085  002602  AE27               	btfss	_prec+1,7,c
  8086                           
  8087                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8088  002604  9228               	bcf	_flags,1,c
  8089                           
  8090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8091  002606  BE27               	btfsc	_prec+1,7,c
  8092  002608  D005               	goto	u3430
  8093  00260A  5027               	movf	_prec+1,w,c
  8094  00260C  E110               	bnz	l6359
  8095  00260E  0426               	decf	_prec,w,c
  8096  002610  B0D8               	btfsc	status,0,c
  8097  002612  D00D               	goto	l6359
  8098  002614                     u3430:
  8099  002614  0E01               	movlw	1
  8100  002616  6E48               	movwf	btemp+10,c
  8101  002618  0E00               	movlw	0
  8102  00261A  6E49               	movwf	btemp+11,c
  8103                           
  8104                           ;stkvar	_p @ sp[(-18)+16]
  8105  00261C  0EFE               	movlw	-2
  8106  00261E  0060  F123  FFE3   	movff	btemp+10,plusw1
  8107  002624  0EFF               	movlw	-1
  8108  002626  0060  F127  FFE3   	movff	btemp+11,plusw1
  8109  00262C  D008               	goto	l1683
  8110  00262E                     l6359:
  8111                           
  8112                           ;stkvar	_p @ sp[(-18)+16]
  8113  00262E  0EFE               	movlw	-2
  8114  002630  0060  F09B  FFE3   	movff	_prec,plusw1
  8115  002636  0EFF               	movlw	-1
  8116  002638  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8117  00263E                     l1683:
  8118                           
  8119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8120                           ;stkvar	_w @ sp[(-18)+14]
  8121  00263E  0EFC               	movlw	-4
  8122  002640  0060  F093  FFE3   	movff	_width,plusw1
  8123  002646  0EFD               	movlw	-3
  8124  002648  0060  F097  FFE3   	movff	_width+1,plusw1
  8125                           
  8126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8127                           ;stkvar	_s @ sp[(-18)+12]
  8128  00264E  0EFA               	movlw	-6
  8129  002650  006F FF8C  F03E    	movff	plusw1,btemp
  8130  002656  0EFB               	movlw	-5
  8131  002658  50E3               	movf	plusw1,w,c
  8132  00265A  103E               	iorwf	btemp,w,c
  8133  00265C  A4D8               	btfss	status,2,c
  8134  00265E  D002               	goto	u3450
  8135  002660  A428               	btfss	_flags,2,c
  8136  002662  D00A               	goto	l6367
  8137  002664                     u3450:
  8138                           
  8139                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8140                           ;stkvar	_w @ sp[(-18)+14]
  8141  002664  50E1               	movf	fsr1l,w,c
  8142  002666  0FFC               	addlw	-4
  8143  002668  6ED9               	movwf	fsr2l,c
  8144  00266A  50E2               	movf	fsr1h,w,c
  8145  00266C  6EDA               	movwf	fsr2h,c
  8146  00266E  0EFF               	movlw	255
  8147  002670  22DA               	addwfc	fsr2h,f,c
  8148  002672  06DE               	decf	postinc2,f,c
  8149  002674  0E00               	movlw	0
  8150  002676  5ADD               	subwfb	postdec2,f,c
  8151  002678                     l6367:
  8152                           
  8153                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8154  002678  0E1F               	movlw	31
  8155  00267A  6E48               	movwf	btemp+10,c
  8156  00267C  0E00               	movlw	0
  8157  00267E  6E49               	movwf	btemp+11,c
  8158                           
  8159                           ;stkvar	_i @ sp[(-18)+10]
  8160  002680  0EF8               	movlw	-8
  8161  002682  0060  F123  FFE3   	movff	btemp+10,plusw1
  8162  002688  0EF9               	movlw	-7
  8163  00268A  0060  F127  FFE3   	movff	btemp+11,plusw1
  8164                           
  8165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8166  002690  0101               	movlb	1	; () banked
  8167  002692  6BE3               	clrf	(_dbuf+31)& (0+255),b
  8168                           
  8169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8170  002694  D109               	goto	l6381
  8171  002696                     l6371:
  8172                           
  8173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8174                           ;stkvar	_i @ sp[(-18)+10]
  8175  002696  50E1               	movf	fsr1l,w,c
  8176  002698  0FF8               	addlw	-8
  8177  00269A  6ED9               	movwf	fsr2l,c
  8178  00269C  50E2               	movf	fsr1h,w,c
  8179  00269E  6EDA               	movwf	fsr2h,c
  8180  0026A0  0EFF               	movlw	255
  8181  0026A2  22DA               	addwfc	fsr2h,f,c
  8182  0026A4  06DE               	decf	postinc2,f,c
  8183  0026A6  0E00               	movlw	0
  8184  0026A8  5ADD               	subwfb	postdec2,f,c
  8185                           
  8186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8187  0026AA  0E0A               	movlw	10
  8188  0026AC  6EE6               	movwf	postinc1,c
  8189  0026AE  0E00               	movlw	0
  8190  0026B0  6EE6               	movwf	postinc1,c
  8191  0026B2  0E00               	movlw	0
  8192  0026B4  6EE6               	movwf	postinc1,c
  8193  0026B6  0E00               	movlw	0
  8194  0026B8  6EE6               	movwf	postinc1,c
  8195  0026BA  0E00               	movlw	0
  8196  0026BC  6EE6               	movwf	postinc1,c
  8197  0026BE  0E00               	movlw	0
  8198  0026C0  6EE6               	movwf	postinc1,c
  8199  0026C2  0E00               	movlw	0
  8200  0026C4  6EE6               	movwf	postinc1,c
  8201  0026C6  0E00               	movlw	0
  8202  0026C8  6EE6               	movwf	postinc1,c
  8203                           
  8204                           ;stkvar	_n @ sp[(-26)+2]
  8205  0026CA  50E1               	movf	fsr1l,w,c
  8206  0026CC  0FE8               	addlw	-24
  8207  0026CE  6ED9               	movwf	fsr2l,c
  8208  0026D0  50E2               	movf	fsr1h,w,c
  8209  0026D2  6EDA               	movwf	fsr2h,c
  8210  0026D4  0EFF               	movlw	255
  8211  0026D6  22DA               	addwfc	fsr2h,f,c
  8212  0026D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8213  0026DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8214  0026E4  006F FF7B FFE6     	movff	postinc2,postinc1
  8215  0026EA  006F FF7B FFE6     	movff	postinc2,postinc1
  8216  0026F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8217  0026F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8218  0026FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8219  002702  006F FF7B FFE6     	movff	postinc2,postinc1
  8220  002708  EC07  F01C         	call	___aomod	;wreg free
  8221  00270C  52E5               	movf	postdec1,f,c
  8222  00270E  006F FF9C  F055    	movff	indf1,btemp+23
  8223  002714  52E5               	movf	postdec1,f,c
  8224  002716  006F FF9C  F054    	movff	indf1,btemp+22
  8225  00271C  52E5               	movf	postdec1,f,c
  8226  00271E  006F FF9C  F053    	movff	indf1,btemp+21
  8227  002724  52E5               	movf	postdec1,f,c
  8228  002726  006F FF9C  F052    	movff	indf1,btemp+20
  8229  00272C  52E5               	movf	postdec1,f,c
  8230  00272E  006F FF9C  F051    	movff	indf1,btemp+19
  8231  002734  52E5               	movf	postdec1,f,c
  8232  002736  006F FF9C  F050    	movff	indf1,btemp+18
  8233  00273C  52E5               	movf	postdec1,f,c
  8234  00273E  006F FF9C  F04F    	movff	indf1,btemp+17
  8235  002744  52E5               	movf	postdec1,f,c
  8236  002746  006F FF9C  F04E    	movff	indf1,btemp+16
  8237  00274C  0EF8               	movlw	248
  8238  00274E  26E1               	addwf	fsr1l,f,c
  8239  002750  0EFF               	movlw	255
  8240  002752  22E2               	addwfc	fsr1h,f,c
  8241  002754  0060  F138  F048   	movff	btemp+16,btemp+10
  8242  00275A  0060  F13C  F049   	movff	btemp+17,btemp+11
  8243  002760  0060  F123  FFE6   	movff	btemp+10,postinc1
  8244  002766  0060  F127  FFE6   	movff	btemp+11,postinc1
  8245  00276C  EC2E  F028         	call	_abs	;wreg free
  8246  002770  0E30               	movlw	48
  8247  002772  263E               	addwf	btemp,f,c
  8248                           
  8249                           ;stkvar	_i @ sp[(-18)+10]
  8250  002774  0EF8               	movlw	-8
  8251  002776  006F FF8C  F048    	movff	plusw1,btemp+10
  8252  00277C  0EF9               	movlw	-7
  8253  00277E  006F FF8C  F049    	movff	plusw1,btemp+11
  8254  002784  0EC4               	movlw	low _dbuf
  8255  002786  2448               	addwf	btemp+10,w,c
  8256  002788  6ED9               	movwf	fsr2l,c
  8257  00278A  0E01               	movlw	high _dbuf
  8258  00278C  2049               	addwfc	btemp+11,w,c
  8259  00278E  6EDA               	movwf	fsr2h,c
  8260  002790  0060  F0FB  FFDF   	movff	btemp,indf2
  8261                           
  8262                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8263                           ;stkvar	_p @ sp[(-18)+16]
  8264  002796  50E1               	movf	fsr1l,w,c
  8265  002798  0FFE               	addlw	-2
  8266  00279A  6ED9               	movwf	fsr2l,c
  8267  00279C  50E2               	movf	fsr1h,w,c
  8268  00279E  6EDA               	movwf	fsr2h,c
  8269  0027A0  0EFF               	movlw	255
  8270  0027A2  22DA               	addwfc	fsr2h,f,c
  8271  0027A4  06DE               	decf	postinc2,f,c
  8272  0027A6  0E00               	movlw	0
  8273  0027A8  5ADD               	subwfb	postdec2,f,c
  8274                           
  8275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8276                           ;stkvar	_w @ sp[(-18)+14]
  8277  0027AA  50E1               	movf	fsr1l,w,c
  8278  0027AC  0FFC               	addlw	-4
  8279  0027AE  6ED9               	movwf	fsr2l,c
  8280  0027B0  50E2               	movf	fsr1h,w,c
  8281  0027B2  6EDA               	movwf	fsr2h,c
  8282  0027B4  0EFF               	movlw	255
  8283  0027B6  22DA               	addwfc	fsr2h,f,c
  8284  0027B8  06DE               	decf	postinc2,f,c
  8285  0027BA  0E00               	movlw	0
  8286  0027BC  5ADD               	subwfb	postdec2,f,c
  8287                           
  8288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8289  0027BE  0E0A               	movlw	10
  8290  0027C0  6EE6               	movwf	postinc1,c
  8291  0027C2  0E00               	movlw	0
  8292  0027C4  6EE6               	movwf	postinc1,c
  8293  0027C6  0E00               	movlw	0
  8294  0027C8  6EE6               	movwf	postinc1,c
  8295  0027CA  0E00               	movlw	0
  8296  0027CC  6EE6               	movwf	postinc1,c
  8297  0027CE  0E00               	movlw	0
  8298  0027D0  6EE6               	movwf	postinc1,c
  8299  0027D2  0E00               	movlw	0
  8300  0027D4  6EE6               	movwf	postinc1,c
  8301  0027D6  0E00               	movlw	0
  8302  0027D8  6EE6               	movwf	postinc1,c
  8303  0027DA  0E00               	movlw	0
  8304  0027DC  6EE6               	movwf	postinc1,c
  8305                           
  8306                           ;stkvar	_n @ sp[(-26)+2]
  8307  0027DE  50E1               	movf	fsr1l,w,c
  8308  0027E0  0FE8               	addlw	-24
  8309  0027E2  6ED9               	movwf	fsr2l,c
  8310  0027E4  50E2               	movf	fsr1h,w,c
  8311  0027E6  6EDA               	movwf	fsr2h,c
  8312  0027E8  0EFF               	movlw	255
  8313  0027EA  22DA               	addwfc	fsr2h,f,c
  8314  0027EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8315  0027F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8316  0027F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8317  0027FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8318  002804  006F FF7B FFE6     	movff	postinc2,postinc1
  8319  00280A  006F FF7B FFE6     	movff	postinc2,postinc1
  8320  002810  006F FF7B FFE6     	movff	postinc2,postinc1
  8321  002816  006F FF7B FFE6     	movff	postinc2,postinc1
  8322  00281C  ECC7  F01A         	call	___aodiv	;wreg free
  8323  002820  52E5               	movf	postdec1,f,c
  8324  002822  006F FF9C  F055    	movff	indf1,btemp+23
  8325  002828  52E5               	movf	postdec1,f,c
  8326  00282A  006F FF9C  F054    	movff	indf1,btemp+22
  8327  002830  52E5               	movf	postdec1,f,c
  8328  002832  006F FF9C  F053    	movff	indf1,btemp+21
  8329  002838  52E5               	movf	postdec1,f,c
  8330  00283A  006F FF9C  F052    	movff	indf1,btemp+20
  8331  002840  52E5               	movf	postdec1,f,c
  8332  002842  006F FF9C  F051    	movff	indf1,btemp+19
  8333  002848  52E5               	movf	postdec1,f,c
  8334  00284A  006F FF9C  F050    	movff	indf1,btemp+18
  8335  002850  52E5               	movf	postdec1,f,c
  8336  002852  006F FF9C  F04F    	movff	indf1,btemp+17
  8337  002858  52E5               	movf	postdec1,f,c
  8338  00285A  006F FF9C  F04E    	movff	indf1,btemp+16
  8339  002860  0EF8               	movlw	248
  8340  002862  26E1               	addwf	fsr1l,f,c
  8341  002864  0EFF               	movlw	255
  8342  002866  22E2               	addwfc	fsr1h,f,c
  8343                           
  8344                           ;stkvar	_n @ sp[(-18)+2]
  8345  002868  0EF0               	movlw	-16
  8346  00286A  0060  F13B  FFE3   	movff	btemp+16,plusw1
  8347  002870  0EF1               	movlw	-15
  8348  002872  0060  F13F  FFE3   	movff	btemp+17,plusw1
  8349  002878  0EF2               	movlw	-14
  8350  00287A  0060  F143  FFE3   	movff	btemp+18,plusw1
  8351  002880  0EF3               	movlw	-13
  8352  002882  0060  F147  FFE3   	movff	btemp+19,plusw1
  8353  002888  0EF4               	movlw	-12
  8354  00288A  0060  F14B  FFE3   	movff	btemp+20,plusw1
  8355  002890  0EF5               	movlw	-11
  8356  002892  0060  F14F  FFE3   	movff	btemp+21,plusw1
  8357  002898  0EF6               	movlw	-10
  8358  00289A  0060  F153  FFE3   	movff	btemp+22,plusw1
  8359  0028A0  0EF7               	movlw	-9
  8360  0028A2  0060  F157  FFE3   	movff	btemp+23,plusw1
  8361  0028A8                     l6381:
  8362                           
  8363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8364                           ;stkvar	_i @ sp[(-18)+10]
  8365  0028A8  0EF9               	movlw	-7
  8366  0028AA  BEE3               	btfsc	plusw1,7,c
  8367  0028AC  D036               	goto	u3500
  8368  0028AE  0EF9               	movlw	-7
  8369  0028B0  50E3               	movf	plusw1,w,c
  8370  0028B2  E104               	bnz	u3460
  8371  0028B4  0EF8               	movlw	-8
  8372  0028B6  04E3               	decf	plusw1,w,c
  8373  0028B8  A0D8               	btfss	status,0,c
  8374  0028BA  D02F               	goto	u3500
  8375  0028BC                     u3460:
  8376                           
  8377                           ;stkvar	_n @ sp[(-18)+2]
  8378  0028BC  0EF0               	movlw	-16
  8379  0028BE  50E3               	movf	plusw1,w,c
  8380  0028C0  E115               	bnz	u3471
  8381  0028C2  0EF1               	movlw	-15
  8382  0028C4  50E3               	movf	plusw1,w,c
  8383  0028C6  E112               	bnz	u3471
  8384  0028C8  0EF2               	movlw	-14
  8385  0028CA  50E3               	movf	plusw1,w,c
  8386  0028CC  E10F               	bnz	u3471
  8387  0028CE  0EF3               	movlw	-13
  8388  0028D0  50E3               	movf	plusw1,w,c
  8389  0028D2  E10C               	bnz	u3471
  8390  0028D4  0EF4               	movlw	-12
  8391  0028D6  50E3               	movf	plusw1,w,c
  8392  0028D8  E109               	bnz	u3471
  8393  0028DA  0EF5               	movlw	-11
  8394  0028DC  50E3               	movf	plusw1,w,c
  8395  0028DE  E106               	bnz	u3471
  8396  0028E0  0EF6               	movlw	-10
  8397  0028E2  50E3               	movf	plusw1,w,c
  8398  0028E4  E103               	bnz	u3471
  8399  0028E6  0EF7               	movlw	-9
  8400  0028E8  50E3               	movf	plusw1,w,c
  8401  0028EA  A4D8               	btfss	status,2,c
  8402  0028EC                     u3471:
  8403  0028EC  D6D4               	goto	l6371
  8404                           
  8405                           ;stkvar	_p @ sp[(-18)+16]
  8406  0028EE  0EFF               	movlw	-1
  8407  0028F0  BEE3               	btfsc	plusw1,7,c
  8408  0028F2  D007               	goto	u3480
  8409  0028F4  0EFF               	movlw	-1
  8410  0028F6  50E3               	movf	plusw1,w,c
  8411  0028F8  E103               	bnz	u3481
  8412  0028FA  0EFE               	movlw	-2
  8413  0028FC  04E3               	decf	plusw1,w,c
  8414  0028FE  B0D8               	btfsc	status,0,c
  8415  002900                     u3481:
  8416  002900  D6CA               	goto	l6371
  8417  002902                     u3480:
  8418                           
  8419                           ;stkvar	_w @ sp[(-18)+14]
  8420  002902  0EFD               	movlw	-3
  8421  002904  BEE3               	btfsc	plusw1,7,c
  8422  002906  D009               	goto	u3500
  8423  002908  0EFD               	movlw	-3
  8424  00290A  50E3               	movf	plusw1,w,c
  8425  00290C  E104               	bnz	u3490
  8426  00290E  0EFC               	movlw	-4
  8427  002910  04E3               	decf	plusw1,w,c
  8428  002912  A0D8               	btfss	status,0,c
  8429  002914  D002               	goto	u3500
  8430  002916                     u3490:
  8431  002916  B228               	btfsc	_flags,1,c
  8432  002918  D6BE               	goto	l6371
  8433  00291A                     u3500:
  8434                           
  8435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8436                           ;stkvar	_s @ sp[(-18)+12]
  8437  00291A  0EFA               	movlw	-6
  8438  00291C  006F FF8C  F03E    	movff	plusw1,btemp
  8439  002922  0EFB               	movlw	-5
  8440  002924  50E3               	movf	plusw1,w,c
  8441  002926  103E               	iorwf	btemp,w,c
  8442  002928  A4D8               	btfss	status,2,c
  8443  00292A  D002               	goto	u3520
  8444  00292C  A428               	btfss	_flags,2,c
  8445  00292E  D033               	goto	l6405
  8446  002930                     u3520:
  8447                           
  8448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8449                           ;stkvar	_i @ sp[(-18)+10]
  8450  002930  50E1               	movf	fsr1l,w,c
  8451  002932  0FF8               	addlw	-8
  8452  002934  6ED9               	movwf	fsr2l,c
  8453  002936  50E2               	movf	fsr1h,w,c
  8454  002938  6EDA               	movwf	fsr2h,c
  8455  00293A  0EFF               	movlw	255
  8456  00293C  22DA               	addwfc	fsr2h,f,c
  8457  00293E  06DE               	decf	postinc2,f,c
  8458  002940  0E00               	movlw	0
  8459  002942  5ADD               	subwfb	postdec2,f,c
  8460                           
  8461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8462                           ;stkvar	_s @ sp[(-18)+12]
  8463  002944  0EFA               	movlw	-6
  8464  002946  006F FF8C  F03E    	movff	plusw1,btemp
  8465  00294C  0EFB               	movlw	-5
  8466  00294E  50E3               	movf	plusw1,w,c
  8467  002950  103E               	iorwf	btemp,w,c
  8468  002952  A4D8               	btfss	status,2,c
  8469  002954  D002               	goto	l6401
  8470  002956  0E2B               	movlw	43
  8471  002958  D001               	goto	L16
  8472  00295A                     l6401:
  8473  00295A  0E2D               	movlw	45
  8474  00295C                     L16:
  8475  00295C  6E48               	movwf	btemp+10,c
  8476  00295E  0E00               	movlw	0
  8477  002960  6E49               	movwf	btemp+11,c
  8478                           
  8479                           ;stkvar	_dtoa$3821 @ sp[(-18)+0]
  8480  002962  0EEE               	movlw	-18
  8481  002964  0060  F123  FFE3   	movff	btemp+10,plusw1
  8482  00296A  0EEF               	movlw	-17
  8483  00296C  0060  F127  FFE3   	movff	btemp+11,plusw1
  8484                           
  8485                           ;stkvar	_dtoa$3821 @ sp[(-18)+0]
  8486                           ;stkvar	_i @ sp[(-18)+10]
  8487  002972  0EF8               	movlw	-8
  8488  002974  006F FF8C  F048    	movff	plusw1,btemp+10
  8489  00297A  0EF9               	movlw	-7
  8490  00297C  006F FF8C  F049    	movff	plusw1,btemp+11
  8491  002982  0EC4               	movlw	low _dbuf
  8492  002984  2448               	addwf	btemp+10,w,c
  8493  002986  6ED9               	movwf	fsr2l,c
  8494  002988  0E01               	movlw	high _dbuf
  8495  00298A  2049               	addwfc	btemp+11,w,c
  8496  00298C  6EDA               	movwf	fsr2h,c
  8497  00298E  0EEE               	movlw	-18
  8498  002990  006F FF8F FFDF     	movff	plusw1,indf2
  8499  002996                     l6405:
  8500                           
  8501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8502                           ;stkvar	_w @ sp[(-18)+14]
  8503  002996  0EFC               	movlw	-4
  8504  002998  006F FF8F FFE6     	movff	plusw1,postinc1
  8505  00299E  006F FF8F FFE6     	movff	plusw1,postinc1
  8506                           
  8507                           ;stkvar	_i @ sp[(-20)+10]
  8508  0029A4  0EC4               	movlw	low _dbuf
  8509  0029A6  6E48               	movwf	btemp+10,c
  8510  0029A8  0E01               	movlw	high _dbuf
  8511  0029AA  6E49               	movwf	btemp+11,c
  8512  0029AC  0EF6               	movlw	-10
  8513  0029AE  50E3               	movf	plusw1,w,c
  8514  0029B0  2648               	addwf	btemp+10,f,c
  8515  0029B2  0EF7               	movlw	-9
  8516  0029B4  50E3               	movf	plusw1,w,c
  8517  0029B6  2249               	addwfc	btemp+11,f,c
  8518  0029B8  0060  F123  FFE6   	movff	btemp+10,postinc1
  8519  0029BE  0060  F127  FFE6   	movff	btemp+11,postinc1
  8520                           
  8521                           ;stkvar	_fp @ sp[(-22)+-2]
  8522  0029C4  0EE8               	movlw	-24
  8523  0029C6  006F FF8F FFE6     	movff	plusw1,postinc1
  8524  0029CC  006F FF8F FFE6     	movff	plusw1,postinc1
  8525  0029D2  ECD9  F020         	call	_pad	;wreg free
  8526                           
  8527                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8528  0029D6  0EE4               	movlw	228
  8529  0029D8  26E1               	addwf	fsr1l,f,c
  8530  0029DA  0EFF               	movlw	255
  8531  0029DC  22E2               	addwfc	fsr1h,f,c
  8532  0029DE  0012               	return		;funcret
  8533  0029E0                     __end_of_dtoa:
  8534                           	opt callstack 0
  8535                           
  8536 ;; *************** function _abs *****************
  8537 ;; Defined at:
  8538 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  a               2  [STACK] int 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  2  [STACK] int 
  8545 ;; Registers used:
  8546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/1
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8556 ;;Total ram usage:        0 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; Hardware stack levels required when called:    3
  8559 ;; This function calls:
  8560 ;;		Nothing
  8561 ;; This function is called by:
  8562 ;;		_dtoa
  8563 ;; This function uses a reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text37
  8567  00505C                     __ptext37:
  8568                           	opt callstack 0
  8569  00505C                     _abs:
  8570                           	opt callstack 23
  8571                           
  8572                           ;stkvar	_a @ sp[(0)+-2]
  8573                           
  8574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8575                           ;incstack = 0
  8576  00505C  0EFF               	movlw	-1
  8577  00505E  BEE3               	btfsc	plusw1,7,c
  8578  005060  D007               	goto	u1840
  8579  005062  0EFF               	movlw	-1
  8580  005064  50E3               	movf	plusw1,w,c
  8581  005066  E112               	bnz	l4625
  8582  005068  0EFE               	movlw	-2
  8583  00506A  04E3               	decf	plusw1,w,c
  8584  00506C  B0D8               	btfsc	status,0,c
  8585  00506E  D00E               	goto	l4625
  8586  005070                     u1840:
  8587                           
  8588                           ;stkvar	_a @ sp[(0)+-2]
  8589  005070  0EFE               	movlw	-2
  8590  005072  006F FF8C  F03E    	movff	plusw1,btemp
  8591  005078  1E3E               	comf	btemp,f,c
  8592  00507A  0EFF               	movlw	-1
  8593  00507C  006F FF8C  F03F    	movff	plusw1,btemp+1
  8594  005082  1E3F               	comf	btemp+1,f,c
  8595  005084  2A3E               	incf	btemp,f,c
  8596  005086  B4D8               	btfsc	status,2,c
  8597  005088  2A3F               	incf	btemp+1,f,c
  8598  00508A  D008               	goto	l2424
  8599  00508C                     l4625:
  8600                           
  8601                           ;stkvar	_a @ sp[(0)+-2]
  8602  00508C  0EFE               	movlw	-2
  8603  00508E  006F FF8C  F03E    	movff	plusw1,btemp
  8604  005094  0EFF               	movlw	-1
  8605  005096  006F FF8C  F03F    	movff	plusw1,btemp+1
  8606  00509C                     l2424:
  8607                           
  8608                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  8609  00509C  52E5               	movf	postdec1,f,c
  8610  00509E  52E5               	movf	postdec1,f,c
  8611  0050A0  0012               	return		;funcret
  8612  0050A2                     __end_of_abs:
  8613                           	opt callstack 0
  8614                           
  8615 ;; *************** function ___aomod *****************
  8616 ;; Defined at:
  8617 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  dividend        8  [STACK] long long 
  8620 ;;  divisor         8  [STACK] long long 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  sign            1  [STACK] unsigned char 
  8623 ;;  counter         1  [STACK] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  8  [STACK] long long 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/1
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    3
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_dtoa
  8644 ;; This function uses a reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text38
  8648  00380E                     __ptext38:
  8649                           	opt callstack 0
  8650  00380E                     ___aomod:
  8651                           	opt callstack 0
  8652                           
  8653                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  8654  00380E  52E6               	movf	postinc1,f,c
  8655  003810  52E6               	movf	postinc1,f,c
  8656                           
  8657                           ;stkvar	_sign @ sp[(-2)+0]
  8658                           
  8659                           ;incstack = 0
  8660  003812  0EFE               	movlw	-2
  8661  003814  6AE3               	clrf	plusw1,c
  8662                           
  8663                           ;stkvar	_dividend @ sp[(-2)+-8]
  8664  003816  0EFD               	movlw	-3
  8665  003818  AEE3               	btfss	plusw1,7,c
  8666  00381A  D028               	goto	l4681
  8667                           
  8668                           ;stkvar	_dividend @ sp[(-2)+-8]
  8669                           ;stkvar	_dividend @ sp[(-2)+-8]
  8670  00381C  0EF6               	movlw	-10
  8671  00381E  6CE3               	negf	plusw1,c
  8672  003820  0EF7               	movlw	-9
  8673  003822  1EE3               	comf	plusw1,f,c
  8674  003824  0EF8               	movlw	-8
  8675  003826  1EE3               	comf	plusw1,f,c
  8676  003828  0EF9               	movlw	-7
  8677  00382A  1EE3               	comf	plusw1,f,c
  8678  00382C  0EFA               	movlw	-6
  8679  00382E  1EE3               	comf	plusw1,f,c
  8680  003830  0EFB               	movlw	-5
  8681  003832  1EE3               	comf	plusw1,f,c
  8682  003834  0EFC               	movlw	-4
  8683  003836  1EE3               	comf	plusw1,f,c
  8684  003838  0EFD               	movlw	-3
  8685  00383A  1EE3               	comf	plusw1,f,c
  8686  00383C  E314               	bnc	u1980
  8687  00383E  0EF7               	movlw	-9
  8688  003840  2AE3               	incf	plusw1,f,c
  8689  003842  E311               	bnc	u1980
  8690  003844  0EF8               	movlw	-8
  8691  003846  2AE3               	incf	plusw1,f,c
  8692  003848  E30E               	bnc	u1980
  8693  00384A  0EF9               	movlw	-7
  8694  00384C  2AE3               	incf	plusw1,f,c
  8695  00384E  E30B               	bnc	u1980
  8696  003850  0EFA               	movlw	-6
  8697  003852  2AE3               	incf	plusw1,f,c
  8698  003854  E308               	bnc	u1980
  8699  003856  0EFB               	movlw	-5
  8700  003858  2AE3               	incf	plusw1,f,c
  8701  00385A  E305               	bnc	u1980
  8702  00385C  0EFC               	movlw	-4
  8703  00385E  2AE3               	incf	plusw1,f,c
  8704  003860  E302               	bnc	u1980
  8705  003862  0EFD               	movlw	-3
  8706  003864  2AE3               	incf	plusw1,f,c
  8707  003866                     u1980:
  8708                           
  8709                           ;stkvar	_sign @ sp[(-2)+0]
  8710  003866  0EFE               	movlw	-2
  8711  003868  6AE3               	clrf	plusw1,c
  8712  00386A  2AE3               	incf	plusw1,f,c
  8713  00386C                     l4681:
  8714                           
  8715                           ;stkvar	_divisor @ sp[(-2)+-16]
  8716  00386C  0EF5               	movlw	-11
  8717  00386E  AEE3               	btfss	plusw1,7,c
  8718  003870  D025               	goto	u2000
  8719                           
  8720                           ;stkvar	_divisor @ sp[(-2)+-16]
  8721                           ;stkvar	_divisor @ sp[(-2)+-16]
  8722  003872  0EEE               	movlw	-18
  8723  003874  6CE3               	negf	plusw1,c
  8724  003876  0EEF               	movlw	-17
  8725  003878  1EE3               	comf	plusw1,f,c
  8726  00387A  0EF0               	movlw	-16
  8727  00387C  1EE3               	comf	plusw1,f,c
  8728  00387E  0EF1               	movlw	-15
  8729  003880  1EE3               	comf	plusw1,f,c
  8730  003882  0EF2               	movlw	-14
  8731  003884  1EE3               	comf	plusw1,f,c
  8732  003886  0EF3               	movlw	-13
  8733  003888  1EE3               	comf	plusw1,f,c
  8734  00388A  0EF4               	movlw	-12
  8735  00388C  1EE3               	comf	plusw1,f,c
  8736  00388E  0EF5               	movlw	-11
  8737  003890  1EE3               	comf	plusw1,f,c
  8738  003892  E314               	bnc	u2000
  8739  003894  0EEF               	movlw	-17
  8740  003896  2AE3               	incf	plusw1,f,c
  8741  003898  E311               	bnc	u2000
  8742  00389A  0EF0               	movlw	-16
  8743  00389C  2AE3               	incf	plusw1,f,c
  8744  00389E  E30E               	bnc	u2000
  8745  0038A0  0EF1               	movlw	-15
  8746  0038A2  2AE3               	incf	plusw1,f,c
  8747  0038A4  E30B               	bnc	u2000
  8748  0038A6  0EF2               	movlw	-14
  8749  0038A8  2AE3               	incf	plusw1,f,c
  8750  0038AA  E308               	bnc	u2000
  8751  0038AC  0EF3               	movlw	-13
  8752  0038AE  2AE3               	incf	plusw1,f,c
  8753  0038B0  E305               	bnc	u2000
  8754  0038B2  0EF4               	movlw	-12
  8755  0038B4  2AE3               	incf	plusw1,f,c
  8756  0038B6  E302               	bnc	u2000
  8757  0038B8  0EF5               	movlw	-11
  8758  0038BA  2AE3               	incf	plusw1,f,c
  8759  0038BC                     u2000:
  8760                           
  8761                           ;stkvar	_divisor @ sp[(-2)+-16]
  8762  0038BC  0EEE               	movlw	-18
  8763  0038BE  50E3               	movf	plusw1,w,c
  8764  0038C0  E116               	bnz	u2010
  8765  0038C2  0EEF               	movlw	-17
  8766  0038C4  50E3               	movf	plusw1,w,c
  8767  0038C6  E113               	bnz	u2010
  8768  0038C8  0EF0               	movlw	-16
  8769  0038CA  50E3               	movf	plusw1,w,c
  8770  0038CC  E110               	bnz	u2010
  8771  0038CE  0EF1               	movlw	-15
  8772  0038D0  50E3               	movf	plusw1,w,c
  8773  0038D2  E10D               	bnz	u2010
  8774  0038D4  0EF2               	movlw	-14
  8775  0038D6  50E3               	movf	plusw1,w,c
  8776  0038D8  E10A               	bnz	u2010
  8777  0038DA  0EF3               	movlw	-13
  8778  0038DC  50E3               	movf	plusw1,w,c
  8779  0038DE  E107               	bnz	u2010
  8780  0038E0  0EF4               	movlw	-12
  8781  0038E2  50E3               	movf	plusw1,w,c
  8782  0038E4  E104               	bnz	u2010
  8783  0038E6  0EF5               	movlw	-11
  8784  0038E8  50E3               	movf	plusw1,w,c
  8785  0038EA  B4D8               	btfsc	status,2,c
  8786  0038EC  D075               	goto	u2040
  8787  0038EE                     u2010:
  8788                           
  8789                           ;stkvar	_counter @ sp[(-2)+1]
  8790  0038EE  0EFF               	movlw	-1
  8791  0038F0  6AE3               	clrf	plusw1,c
  8792  0038F2  D012               	goto	L17
  8793  0038F4                     l4689:
  8794                           
  8795                           ;stkvar	_divisor @ sp[(-2)+-16]
  8796  0038F4  90D8               	bcf	status,0,c
  8797  0038F6  0EEE               	movlw	-18
  8798  0038F8  36E3               	rlcf	plusw1,f,c
  8799  0038FA  0EEF               	movlw	-17
  8800  0038FC  36E3               	rlcf	plusw1,f,c
  8801  0038FE  0EF0               	movlw	-16
  8802  003900  36E3               	rlcf	plusw1,f,c
  8803  003902  0EF1               	movlw	-15
  8804  003904  36E3               	rlcf	plusw1,f,c
  8805  003906  0EF2               	movlw	-14
  8806  003908  36E3               	rlcf	plusw1,f,c
  8807  00390A  0EF3               	movlw	-13
  8808  00390C  36E3               	rlcf	plusw1,f,c
  8809  00390E  0EF4               	movlw	-12
  8810  003910  36E3               	rlcf	plusw1,f,c
  8811  003912  0EF5               	movlw	-11
  8812  003914  36E3               	rlcf	plusw1,f,c
  8813                           
  8814                           ;stkvar	_counter @ sp[(-2)+1]
  8815  003916  0EFF               	movlw	-1
  8816  003918                     L17:
  8817  003918  2AE3               	incf	plusw1,f,c
  8818                           
  8819                           ;stkvar	_divisor @ sp[(-2)+-16]
  8820  00391A  0EF5               	movlw	-11
  8821  00391C  AEE3               	btfss	plusw1,7,c
  8822  00391E  D7EA               	goto	l4689
  8823  003920                     u2020:
  8824                           
  8825                           ;stkvar	_divisor @ sp[(-2)+-16]
  8826                           ;stkvar	_dividend @ sp[(-2)+-8]
  8827  003920  50E1               	movf	fsr1l,w,c
  8828  003922  0FF6               	addlw	-10
  8829  003924  6ED9               	movwf	fsr2l,c
  8830  003926  50E2               	movf	fsr1h,w,c
  8831  003928  6EDA               	movwf	fsr2h,c
  8832  00392A  0EFF               	movlw	255
  8833  00392C  22DA               	addwfc	fsr2h,f,c
  8834  00392E  0EEE               	movlw	-18
  8835  003930  50E3               	movf	plusw1,w,c
  8836  003932  5CDE               	subwf	postinc2,w,c
  8837  003934  0EEF               	movlw	-17
  8838  003936  50E3               	movf	plusw1,w,c
  8839  003938  58DE               	subwfb	postinc2,w,c
  8840  00393A  0EF0               	movlw	-16
  8841  00393C  50E3               	movf	plusw1,w,c
  8842  00393E  58DE               	subwfb	postinc2,w,c
  8843  003940  0EF1               	movlw	-15
  8844  003942  50E3               	movf	plusw1,w,c
  8845  003944  58DE               	subwfb	postinc2,w,c
  8846  003946  0EF2               	movlw	-14
  8847  003948  50E3               	movf	plusw1,w,c
  8848  00394A  58DE               	subwfb	postinc2,w,c
  8849  00394C  0EF3               	movlw	-13
  8850  00394E  50E3               	movf	plusw1,w,c
  8851  003950  58DE               	subwfb	postinc2,w,c
  8852  003952  0EF4               	movlw	-12
  8853  003954  50E3               	movf	plusw1,w,c
  8854  003956  58DE               	subwfb	postinc2,w,c
  8855  003958  0EF5               	movlw	-11
  8856  00395A  50E3               	movf	plusw1,w,c
  8857  00395C  58DE               	subwfb	postinc2,w,c
  8858  00395E  A0D8               	btfss	status,0,c
  8859  003960  D01F               	goto	l4697
  8860                           
  8861                           ;stkvar	_divisor @ sp[(-2)+-16]
  8862                           ;stkvar	_dividend @ sp[(-2)+-8]
  8863  003962  50E1               	movf	fsr1l,w,c
  8864  003964  0FF6               	addlw	-10
  8865  003966  6ED9               	movwf	fsr2l,c
  8866  003968  50E2               	movf	fsr1h,w,c
  8867  00396A  6EDA               	movwf	fsr2h,c
  8868  00396C  0EFF               	movlw	255
  8869  00396E  22DA               	addwfc	fsr2h,f,c
  8870  003970  0EEE               	movlw	-18
  8871  003972  50E3               	movf	plusw1,w,c
  8872  003974  5EDE               	subwf	postinc2,f,c
  8873  003976  0EEF               	movlw	-17
  8874  003978  50E3               	movf	plusw1,w,c
  8875  00397A  5ADE               	subwfb	postinc2,f,c
  8876  00397C  0EF0               	movlw	-16
  8877  00397E  50E3               	movf	plusw1,w,c
  8878  003980  5ADE               	subwfb	postinc2,f,c
  8879  003982  0EF1               	movlw	-15
  8880  003984  50E3               	movf	plusw1,w,c
  8881  003986  5ADE               	subwfb	postinc2,f,c
  8882  003988  0EF2               	movlw	-14
  8883  00398A  50E3               	movf	plusw1,w,c
  8884  00398C  5ADE               	subwfb	postinc2,f,c
  8885  00398E  0EF3               	movlw	-13
  8886  003990  50E3               	movf	plusw1,w,c
  8887  003992  5ADE               	subwfb	postinc2,f,c
  8888  003994  0EF4               	movlw	-12
  8889  003996  50E3               	movf	plusw1,w,c
  8890  003998  5ADE               	subwfb	postinc2,f,c
  8891  00399A  0EF5               	movlw	-11
  8892  00399C  50E3               	movf	plusw1,w,c
  8893  00399E  5ADE               	subwfb	postinc2,f,c
  8894  0039A0                     l4697:
  8895                           
  8896                           ;stkvar	_divisor @ sp[(-2)+-16]
  8897  0039A0  90D8               	bcf	status,0,c
  8898  0039A2  0EF5               	movlw	-11
  8899  0039A4  32E3               	rrcf	plusw1,f,c
  8900  0039A6  0EF4               	movlw	-12
  8901  0039A8  32E3               	rrcf	plusw1,f,c
  8902  0039AA  0EF3               	movlw	-13
  8903  0039AC  32E3               	rrcf	plusw1,f,c
  8904  0039AE  0EF2               	movlw	-14
  8905  0039B0  32E3               	rrcf	plusw1,f,c
  8906  0039B2  0EF1               	movlw	-15
  8907  0039B4  32E3               	rrcf	plusw1,f,c
  8908  0039B6  0EF0               	movlw	-16
  8909  0039B8  32E3               	rrcf	plusw1,f,c
  8910  0039BA  0EEF               	movlw	-17
  8911  0039BC  32E3               	rrcf	plusw1,f,c
  8912  0039BE  0EEE               	movlw	-18
  8913  0039C0  32E3               	rrcf	plusw1,f,c
  8914                           
  8915                           ;stkvar	_counter @ sp[(-2)+1]
  8916  0039C2  0EFF               	movlw	-1
  8917  0039C4  50E3               	movf	plusw1,w,c
  8918  0039C6  6E3E               	movwf	btemp,c
  8919  0039C8  0E01               	movlw	1
  8920  0039CA  5E3E               	subwf	btemp,f,c
  8921  0039CC  0EFF               	movlw	-1
  8922  0039CE  0060  F0FB  FFE3   	movff	btemp,plusw1
  8923  0039D4  A4D8               	btfss	status,2,c
  8924  0039D6  D7A4               	goto	u2020
  8925  0039D8                     u2040:
  8926                           
  8927                           ;stkvar	_sign @ sp[(-2)+0]
  8928  0039D8  0EFE               	movlw	-2
  8929  0039DA  50E3               	movf	plusw1,w,c
  8930  0039DC  B4D8               	btfsc	status,2,c
  8931  0039DE  D025               	goto	u2060
  8932                           
  8933                           ;stkvar	_dividend @ sp[(-2)+-8]
  8934                           ;stkvar	_dividend @ sp[(-2)+-8]
  8935  0039E0  0EF6               	movlw	-10
  8936  0039E2  6CE3               	negf	plusw1,c
  8937  0039E4  0EF7               	movlw	-9
  8938  0039E6  1EE3               	comf	plusw1,f,c
  8939  0039E8  0EF8               	movlw	-8
  8940  0039EA  1EE3               	comf	plusw1,f,c
  8941  0039EC  0EF9               	movlw	-7
  8942  0039EE  1EE3               	comf	plusw1,f,c
  8943  0039F0  0EFA               	movlw	-6
  8944  0039F2  1EE3               	comf	plusw1,f,c
  8945  0039F4  0EFB               	movlw	-5
  8946  0039F6  1EE3               	comf	plusw1,f,c
  8947  0039F8  0EFC               	movlw	-4
  8948  0039FA  1EE3               	comf	plusw1,f,c
  8949  0039FC  0EFD               	movlw	-3
  8950  0039FE  1EE3               	comf	plusw1,f,c
  8951  003A00  E314               	bnc	u2060
  8952  003A02  0EF7               	movlw	-9
  8953  003A04  2AE3               	incf	plusw1,f,c
  8954  003A06  E311               	bnc	u2060
  8955  003A08  0EF8               	movlw	-8
  8956  003A0A  2AE3               	incf	plusw1,f,c
  8957  003A0C  E30E               	bnc	u2060
  8958  003A0E  0EF9               	movlw	-7
  8959  003A10  2AE3               	incf	plusw1,f,c
  8960  003A12  E30B               	bnc	u2060
  8961  003A14  0EFA               	movlw	-6
  8962  003A16  2AE3               	incf	plusw1,f,c
  8963  003A18  E308               	bnc	u2060
  8964  003A1A  0EFB               	movlw	-5
  8965  003A1C  2AE3               	incf	plusw1,f,c
  8966  003A1E  E305               	bnc	u2060
  8967  003A20  0EFC               	movlw	-4
  8968  003A22  2AE3               	incf	plusw1,f,c
  8969  003A24  E302               	bnc	u2060
  8970  003A26  0EFD               	movlw	-3
  8971  003A28  2AE3               	incf	plusw1,f,c
  8972  003A2A                     u2060:
  8973                           
  8974                           ;stkvar	_dividend @ sp[(-2)+-8]
  8975  003A2A  0EF6               	movlw	246
  8976  003A2C  24E1               	addwf	fsr1l,w,c
  8977  003A2E  6ED9               	movwf	fsr2l,c
  8978  003A30  0EFF               	movlw	255
  8979  003A32  20E2               	addwfc	fsr1h,w,c
  8980  003A34  6EDA               	movwf	fsr2h,c
  8981                           
  8982                           ;stkvar	?___aomod @ sp[(-2)+-8]
  8983  003A36  0E08               	movlw	8
  8984  003A38  6E3E               	movwf	btemp,c
  8985  003A3A  0EF6               	movlw	-10
  8986  003A3C                     us207999:
  8987  003A3C  006F FF7B FFE3     	movff	postinc2,plusw1
  8988  003A42  28E8               	incf	wreg,w,c
  8989  003A44  2E3E               	decfsz	btemp,f,c
  8990  003A46  D7FA               	bra	us207999
  8991                           
  8992                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  8993  003A48  52E5               	movf	postdec1,f,c
  8994  003A4A  52E5               	movf	postdec1,f,c
  8995  003A4C  0012               	return		;funcret
  8996  003A4E                     __end_of___aomod:
  8997                           	opt callstack 0
  8998                           
  8999 ;; *************** function ___aodiv *****************
  9000 ;; Defined at:
  9001 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  dividend        8  [STACK] long long 
  9004 ;;  divisor         8  [STACK] long long 
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;  quotient        8  [STACK] long long 
  9007 ;;  sign            1  [STACK] unsigned char 
  9008 ;;  counter         1  [STACK] unsigned char 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  8  [STACK] long long 
  9011 ;; Registers used:
  9012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/1
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9022 ;;Total ram usage:        0 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:    3
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_dtoa
  9029 ;; This function uses a reentrant model
  9030 ;;
  9031                           
  9032                           	psect	text39
  9033  00358E                     __ptext39:
  9034                           	opt callstack 0
  9035  00358E                     ___aodiv:
  9036                           	opt callstack 0
  9037                           
  9038                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9039  00358E  0E0A               	movlw	10
  9040  003590  26E1               	addwf	fsr1l,f,c
  9041  003592  0E00               	movlw	0
  9042  003594  22E2               	addwfc	fsr1h,f,c
  9043                           
  9044                           ;stkvar	_sign @ sp[(-10)+8]
  9045                           
  9046                           ;incstack = 0
  9047  003596  0EFE               	movlw	-2
  9048  003598  6AE3               	clrf	plusw1,c
  9049                           
  9050                           ;stkvar	_divisor @ sp[(-10)+-16]
  9051  00359A  0EED               	movlw	-19
  9052  00359C  AEE3               	btfss	plusw1,7,c
  9053  00359E  D028               	goto	l4637
  9054                           
  9055                           ;stkvar	_divisor @ sp[(-10)+-16]
  9056                           ;stkvar	_divisor @ sp[(-10)+-16]
  9057  0035A0  0EE6               	movlw	-26
  9058  0035A2  6CE3               	negf	plusw1,c
  9059  0035A4  0EE7               	movlw	-25
  9060  0035A6  1EE3               	comf	plusw1,f,c
  9061  0035A8  0EE8               	movlw	-24
  9062  0035AA  1EE3               	comf	plusw1,f,c
  9063  0035AC  0EE9               	movlw	-23
  9064  0035AE  1EE3               	comf	plusw1,f,c
  9065  0035B0  0EEA               	movlw	-22
  9066  0035B2  1EE3               	comf	plusw1,f,c
  9067  0035B4  0EEB               	movlw	-21
  9068  0035B6  1EE3               	comf	plusw1,f,c
  9069  0035B8  0EEC               	movlw	-20
  9070  0035BA  1EE3               	comf	plusw1,f,c
  9071  0035BC  0EED               	movlw	-19
  9072  0035BE  1EE3               	comf	plusw1,f,c
  9073  0035C0  E314               	bnc	u1860
  9074  0035C2  0EE7               	movlw	-25
  9075  0035C4  2AE3               	incf	plusw1,f,c
  9076  0035C6  E311               	bnc	u1860
  9077  0035C8  0EE8               	movlw	-24
  9078  0035CA  2AE3               	incf	plusw1,f,c
  9079  0035CC  E30E               	bnc	u1860
  9080  0035CE  0EE9               	movlw	-23
  9081  0035D0  2AE3               	incf	plusw1,f,c
  9082  0035D2  E30B               	bnc	u1860
  9083  0035D4  0EEA               	movlw	-22
  9084  0035D6  2AE3               	incf	plusw1,f,c
  9085  0035D8  E308               	bnc	u1860
  9086  0035DA  0EEB               	movlw	-21
  9087  0035DC  2AE3               	incf	plusw1,f,c
  9088  0035DE  E305               	bnc	u1860
  9089  0035E0  0EEC               	movlw	-20
  9090  0035E2  2AE3               	incf	plusw1,f,c
  9091  0035E4  E302               	bnc	u1860
  9092  0035E6  0EED               	movlw	-19
  9093  0035E8  2AE3               	incf	plusw1,f,c
  9094  0035EA                     u1860:
  9095                           
  9096                           ;stkvar	_sign @ sp[(-10)+8]
  9097  0035EA  0EFE               	movlw	-2
  9098  0035EC  6AE3               	clrf	plusw1,c
  9099  0035EE  2AE3               	incf	plusw1,f,c
  9100  0035F0                     l4637:
  9101                           
  9102                           ;stkvar	_dividend @ sp[(-10)+-8]
  9103  0035F0  0EF5               	movlw	-11
  9104  0035F2  AEE3               	btfss	plusw1,7,c
  9105  0035F4  D027               	goto	l4643
  9106                           
  9107                           ;stkvar	_dividend @ sp[(-10)+-8]
  9108                           ;stkvar	_dividend @ sp[(-10)+-8]
  9109  0035F6  0EEE               	movlw	-18
  9110  0035F8  6CE3               	negf	plusw1,c
  9111  0035FA  0EEF               	movlw	-17
  9112  0035FC  1EE3               	comf	plusw1,f,c
  9113  0035FE  0EF0               	movlw	-16
  9114  003600  1EE3               	comf	plusw1,f,c
  9115  003602  0EF1               	movlw	-15
  9116  003604  1EE3               	comf	plusw1,f,c
  9117  003606  0EF2               	movlw	-14
  9118  003608  1EE3               	comf	plusw1,f,c
  9119  00360A  0EF3               	movlw	-13
  9120  00360C  1EE3               	comf	plusw1,f,c
  9121  00360E  0EF4               	movlw	-12
  9122  003610  1EE3               	comf	plusw1,f,c
  9123  003612  0EF5               	movlw	-11
  9124  003614  1EE3               	comf	plusw1,f,c
  9125  003616  E314               	bnc	u1880
  9126  003618  0EEF               	movlw	-17
  9127  00361A  2AE3               	incf	plusw1,f,c
  9128  00361C  E311               	bnc	u1880
  9129  00361E  0EF0               	movlw	-16
  9130  003620  2AE3               	incf	plusw1,f,c
  9131  003622  E30E               	bnc	u1880
  9132  003624  0EF1               	movlw	-15
  9133  003626  2AE3               	incf	plusw1,f,c
  9134  003628  E30B               	bnc	u1880
  9135  00362A  0EF2               	movlw	-14
  9136  00362C  2AE3               	incf	plusw1,f,c
  9137  00362E  E308               	bnc	u1880
  9138  003630  0EF3               	movlw	-13
  9139  003632  2AE3               	incf	plusw1,f,c
  9140  003634  E305               	bnc	u1880
  9141  003636  0EF4               	movlw	-12
  9142  003638  2AE3               	incf	plusw1,f,c
  9143  00363A  E302               	bnc	u1880
  9144  00363C  0EF5               	movlw	-11
  9145  00363E  2AE3               	incf	plusw1,f,c
  9146  003640                     u1880:
  9147                           
  9148                           ;stkvar	_sign @ sp[(-10)+8]
  9149  003640  0EFE               	movlw	-2
  9150  003642  70E3               	btg	plusw1,0,c
  9151  003644                     l4643:
  9152                           
  9153                           ;stkvar	_quotient @ sp[(-10)+0]
  9154  003644  0E07               	movlw	7
  9155  003646  6E3E               	movwf	btemp,c
  9156  003648  0EF6               	movlw	-10
  9157  00364A                     u1891:
  9158  00364A  6AE3               	clrf	plusw1,c
  9159  00364C  2AE8               	incf	wreg,f,c
  9160  00364E  063E               	decf	btemp,f,c
  9161  003650  E2FC               	bc	u1891
  9162                           
  9163                           ;stkvar	_divisor @ sp[(-10)+-16]
  9164  003652  0EE6               	movlw	-26
  9165  003654  50E3               	movf	plusw1,w,c
  9166  003656  E116               	bnz	u1900
  9167  003658  0EE7               	movlw	-25
  9168  00365A  50E3               	movf	plusw1,w,c
  9169  00365C  E113               	bnz	u1900
  9170  00365E  0EE8               	movlw	-24
  9171  003660  50E3               	movf	plusw1,w,c
  9172  003662  E110               	bnz	u1900
  9173  003664  0EE9               	movlw	-23
  9174  003666  50E3               	movf	plusw1,w,c
  9175  003668  E10D               	bnz	u1900
  9176  00366A  0EEA               	movlw	-22
  9177  00366C  50E3               	movf	plusw1,w,c
  9178  00366E  E10A               	bnz	u1900
  9179  003670  0EEB               	movlw	-21
  9180  003672  50E3               	movf	plusw1,w,c
  9181  003674  E107               	bnz	u1900
  9182  003676  0EEC               	movlw	-20
  9183  003678  50E3               	movf	plusw1,w,c
  9184  00367A  E104               	bnz	u1900
  9185  00367C  0EED               	movlw	-19
  9186  00367E  50E3               	movf	plusw1,w,c
  9187  003680  B4D8               	btfsc	status,2,c
  9188  003682  D088               	goto	u1930
  9189  003684                     u1900:
  9190                           
  9191                           ;stkvar	_counter @ sp[(-10)+9]
  9192  003684  0EFF               	movlw	-1
  9193  003686  6AE3               	clrf	plusw1,c
  9194  003688  D012               	goto	L18
  9195  00368A                     l4649:
  9196                           
  9197                           ;stkvar	_divisor @ sp[(-10)+-16]
  9198  00368A  90D8               	bcf	status,0,c
  9199  00368C  0EE6               	movlw	-26
  9200  00368E  36E3               	rlcf	plusw1,f,c
  9201  003690  0EE7               	movlw	-25
  9202  003692  36E3               	rlcf	plusw1,f,c
  9203  003694  0EE8               	movlw	-24
  9204  003696  36E3               	rlcf	plusw1,f,c
  9205  003698  0EE9               	movlw	-23
  9206  00369A  36E3               	rlcf	plusw1,f,c
  9207  00369C  0EEA               	movlw	-22
  9208  00369E  36E3               	rlcf	plusw1,f,c
  9209  0036A0  0EEB               	movlw	-21
  9210  0036A2  36E3               	rlcf	plusw1,f,c
  9211  0036A4  0EEC               	movlw	-20
  9212  0036A6  36E3               	rlcf	plusw1,f,c
  9213  0036A8  0EED               	movlw	-19
  9214  0036AA  36E3               	rlcf	plusw1,f,c
  9215                           
  9216                           ;stkvar	_counter @ sp[(-10)+9]
  9217  0036AC  0EFF               	movlw	-1
  9218  0036AE                     L18:
  9219  0036AE  2AE3               	incf	plusw1,f,c
  9220                           
  9221                           ;stkvar	_divisor @ sp[(-10)+-16]
  9222  0036B0  0EED               	movlw	-19
  9223  0036B2  AEE3               	btfss	plusw1,7,c
  9224  0036B4  D7EA               	goto	l4649
  9225  0036B6                     u1910:
  9226                           
  9227                           ;stkvar	_quotient @ sp[(-10)+0]
  9228  0036B6  90D8               	bcf	status,0,c
  9229  0036B8  0EF6               	movlw	-10
  9230  0036BA  36E3               	rlcf	plusw1,f,c
  9231  0036BC  0EF7               	movlw	-9
  9232  0036BE  36E3               	rlcf	plusw1,f,c
  9233  0036C0  0EF8               	movlw	-8
  9234  0036C2  36E3               	rlcf	plusw1,f,c
  9235  0036C4  0EF9               	movlw	-7
  9236  0036C6  36E3               	rlcf	plusw1,f,c
  9237  0036C8  0EFA               	movlw	-6
  9238  0036CA  36E3               	rlcf	plusw1,f,c
  9239  0036CC  0EFB               	movlw	-5
  9240  0036CE  36E3               	rlcf	plusw1,f,c
  9241  0036D0  0EFC               	movlw	-4
  9242  0036D2  36E3               	rlcf	plusw1,f,c
  9243  0036D4  0EFD               	movlw	-3
  9244  0036D6  36E3               	rlcf	plusw1,f,c
  9245                           
  9246                           ;stkvar	_divisor @ sp[(-10)+-16]
  9247                           ;stkvar	_dividend @ sp[(-10)+-8]
  9248  0036D8  50E1               	movf	fsr1l,w,c
  9249  0036DA  0FEE               	addlw	-18
  9250  0036DC  6ED9               	movwf	fsr2l,c
  9251  0036DE  50E2               	movf	fsr1h,w,c
  9252  0036E0  6EDA               	movwf	fsr2h,c
  9253  0036E2  0EFF               	movlw	255
  9254  0036E4  22DA               	addwfc	fsr2h,f,c
  9255  0036E6  0EE6               	movlw	-26
  9256  0036E8  50E3               	movf	plusw1,w,c
  9257  0036EA  5CDE               	subwf	postinc2,w,c
  9258  0036EC  0EE7               	movlw	-25
  9259  0036EE  50E3               	movf	plusw1,w,c
  9260  0036F0  58DE               	subwfb	postinc2,w,c
  9261  0036F2  0EE8               	movlw	-24
  9262  0036F4  50E3               	movf	plusw1,w,c
  9263  0036F6  58DE               	subwfb	postinc2,w,c
  9264  0036F8  0EE9               	movlw	-23
  9265  0036FA  50E3               	movf	plusw1,w,c
  9266  0036FC  58DE               	subwfb	postinc2,w,c
  9267  0036FE  0EEA               	movlw	-22
  9268  003700  50E3               	movf	plusw1,w,c
  9269  003702  58DE               	subwfb	postinc2,w,c
  9270  003704  0EEB               	movlw	-21
  9271  003706  50E3               	movf	plusw1,w,c
  9272  003708  58DE               	subwfb	postinc2,w,c
  9273  00370A  0EEC               	movlw	-20
  9274  00370C  50E3               	movf	plusw1,w,c
  9275  00370E  58DE               	subwfb	postinc2,w,c
  9276  003710  0EED               	movlw	-19
  9277  003712  50E3               	movf	plusw1,w,c
  9278  003714  58DE               	subwfb	postinc2,w,c
  9279  003716  A0D8               	btfss	status,0,c
  9280  003718  D021               	goto	l4661
  9281                           
  9282                           ;stkvar	_divisor @ sp[(-10)+-16]
  9283                           ;stkvar	_dividend @ sp[(-10)+-8]
  9284  00371A  50E1               	movf	fsr1l,w,c
  9285  00371C  0FEE               	addlw	-18
  9286  00371E  6ED9               	movwf	fsr2l,c
  9287  003720  50E2               	movf	fsr1h,w,c
  9288  003722  6EDA               	movwf	fsr2h,c
  9289  003724  0EFF               	movlw	255
  9290  003726  22DA               	addwfc	fsr2h,f,c
  9291  003728  0EE6               	movlw	-26
  9292  00372A  50E3               	movf	plusw1,w,c
  9293  00372C  5EDE               	subwf	postinc2,f,c
  9294  00372E  0EE7               	movlw	-25
  9295  003730  50E3               	movf	plusw1,w,c
  9296  003732  5ADE               	subwfb	postinc2,f,c
  9297  003734  0EE8               	movlw	-24
  9298  003736  50E3               	movf	plusw1,w,c
  9299  003738  5ADE               	subwfb	postinc2,f,c
  9300  00373A  0EE9               	movlw	-23
  9301  00373C  50E3               	movf	plusw1,w,c
  9302  00373E  5ADE               	subwfb	postinc2,f,c
  9303  003740  0EEA               	movlw	-22
  9304  003742  50E3               	movf	plusw1,w,c
  9305  003744  5ADE               	subwfb	postinc2,f,c
  9306  003746  0EEB               	movlw	-21
  9307  003748  50E3               	movf	plusw1,w,c
  9308  00374A  5ADE               	subwfb	postinc2,f,c
  9309  00374C  0EEC               	movlw	-20
  9310  00374E  50E3               	movf	plusw1,w,c
  9311  003750  5ADE               	subwfb	postinc2,f,c
  9312  003752  0EED               	movlw	-19
  9313  003754  50E3               	movf	plusw1,w,c
  9314  003756  5ADE               	subwfb	postinc2,f,c
  9315                           
  9316                           ;stkvar	_quotient @ sp[(-10)+0]
  9317  003758  0EF6               	movlw	-10
  9318  00375A  80E3               	bsf	plusw1,0,c
  9319  00375C                     l4661:
  9320                           
  9321                           ;stkvar	_divisor @ sp[(-10)+-16]
  9322  00375C  90D8               	bcf	status,0,c
  9323  00375E  0EED               	movlw	-19
  9324  003760  32E3               	rrcf	plusw1,f,c
  9325  003762  0EEC               	movlw	-20
  9326  003764  32E3               	rrcf	plusw1,f,c
  9327  003766  0EEB               	movlw	-21
  9328  003768  32E3               	rrcf	plusw1,f,c
  9329  00376A  0EEA               	movlw	-22
  9330  00376C  32E3               	rrcf	plusw1,f,c
  9331  00376E  0EE9               	movlw	-23
  9332  003770  32E3               	rrcf	plusw1,f,c
  9333  003772  0EE8               	movlw	-24
  9334  003774  32E3               	rrcf	plusw1,f,c
  9335  003776  0EE7               	movlw	-25
  9336  003778  32E3               	rrcf	plusw1,f,c
  9337  00377A  0EE6               	movlw	-26
  9338  00377C  32E3               	rrcf	plusw1,f,c
  9339                           
  9340                           ;stkvar	_counter @ sp[(-10)+9]
  9341  00377E  0EFF               	movlw	-1
  9342  003780  50E3               	movf	plusw1,w,c
  9343  003782  6E3E               	movwf	btemp,c
  9344  003784  0E01               	movlw	1
  9345  003786  5E3E               	subwf	btemp,f,c
  9346  003788  0EFF               	movlw	-1
  9347  00378A  0060  F0FB  FFE3   	movff	btemp,plusw1
  9348  003790  A4D8               	btfss	status,2,c
  9349  003792  D791               	goto	u1910
  9350  003794                     u1930:
  9351                           
  9352                           ;stkvar	_sign @ sp[(-10)+8]
  9353  003794  0EFE               	movlw	-2
  9354  003796  50E3               	movf	plusw1,w,c
  9355  003798  B4D8               	btfsc	status,2,c
  9356  00379A  D025               	goto	u1950
  9357                           
  9358                           ;stkvar	_quotient @ sp[(-10)+0]
  9359                           ;stkvar	_quotient @ sp[(-10)+0]
  9360  00379C  0EF6               	movlw	-10
  9361  00379E  6CE3               	negf	plusw1,c
  9362  0037A0  0EF7               	movlw	-9
  9363  0037A2  1EE3               	comf	plusw1,f,c
  9364  0037A4  0EF8               	movlw	-8
  9365  0037A6  1EE3               	comf	plusw1,f,c
  9366  0037A8  0EF9               	movlw	-7
  9367  0037AA  1EE3               	comf	plusw1,f,c
  9368  0037AC  0EFA               	movlw	-6
  9369  0037AE  1EE3               	comf	plusw1,f,c
  9370  0037B0  0EFB               	movlw	-5
  9371  0037B2  1EE3               	comf	plusw1,f,c
  9372  0037B4  0EFC               	movlw	-4
  9373  0037B6  1EE3               	comf	plusw1,f,c
  9374  0037B8  0EFD               	movlw	-3
  9375  0037BA  1EE3               	comf	plusw1,f,c
  9376  0037BC  E314               	bnc	u1950
  9377  0037BE  0EF7               	movlw	-9
  9378  0037C0  2AE3               	incf	plusw1,f,c
  9379  0037C2  E311               	bnc	u1950
  9380  0037C4  0EF8               	movlw	-8
  9381  0037C6  2AE3               	incf	plusw1,f,c
  9382  0037C8  E30E               	bnc	u1950
  9383  0037CA  0EF9               	movlw	-7
  9384  0037CC  2AE3               	incf	plusw1,f,c
  9385  0037CE  E30B               	bnc	u1950
  9386  0037D0  0EFA               	movlw	-6
  9387  0037D2  2AE3               	incf	plusw1,f,c
  9388  0037D4  E308               	bnc	u1950
  9389  0037D6  0EFB               	movlw	-5
  9390  0037D8  2AE3               	incf	plusw1,f,c
  9391  0037DA  E305               	bnc	u1950
  9392  0037DC  0EFC               	movlw	-4
  9393  0037DE  2AE3               	incf	plusw1,f,c
  9394  0037E0  E302               	bnc	u1950
  9395  0037E2  0EFD               	movlw	-3
  9396  0037E4  2AE3               	incf	plusw1,f,c
  9397  0037E6                     u1950:
  9398                           
  9399                           ;stkvar	_quotient @ sp[(-10)+0]
  9400  0037E6  0EF6               	movlw	246
  9401  0037E8  24E1               	addwf	fsr1l,w,c
  9402  0037EA  6ED9               	movwf	fsr2l,c
  9403  0037EC  0EFF               	movlw	255
  9404  0037EE  20E2               	addwfc	fsr1h,w,c
  9405  0037F0  6EDA               	movwf	fsr2h,c
  9406                           
  9407                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9408  0037F2  0E08               	movlw	8
  9409  0037F4  6E3E               	movwf	btemp,c
  9410  0037F6  0EEE               	movlw	-18
  9411  0037F8                     us196999:
  9412  0037F8  006F FF7B FFE3     	movff	postinc2,plusw1
  9413  0037FE  28E8               	incf	wreg,w,c
  9414  003800  2E3E               	decfsz	btemp,f,c
  9415  003802  D7FA               	bra	us196999
  9416                           
  9417                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9418  003804  0EF6               	movlw	246
  9419  003806  26E1               	addwf	fsr1l,f,c
  9420  003808  0EFF               	movlw	255
  9421  00380A  22E2               	addwfc	fsr1h,f,c
  9422  00380C  0012               	return		;funcret
  9423  00380E                     __end_of___aodiv:
  9424                           	opt callstack 0
  9425                           
  9426 ;; *************** function _ctoa *****************
  9427 ;; Defined at:
  9428 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9431 ;;		 -> f(5), NULL(0), 
  9432 ;;  c               1  [STACK] unsigned char 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  w               2  [STACK] int 
  9435 ;;  l               2    0        int 
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  2  [STACK] int 
  9438 ;; Registers used:
  9439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9449 ;;Total ram usage:        0 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; Hardware stack levels required when called:    8
  9452 ;; This function calls:
  9453 ;;		_pad
  9454 ;; This function is called by:
  9455 ;;		_vfpfcnvrt
  9456 ;; This function uses a reentrant model
  9457 ;;
  9458                           
  9459                           	psect	text40
  9460  004C30                     __ptext40:
  9461                           	opt callstack 0
  9462  004C30                     _ctoa:
  9463                           	opt callstack 0
  9464                           
  9465                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9466  004C30  52E6               	movf	postinc1,f,c
  9467  004C32  52E6               	movf	postinc1,f,c
  9468                           
  9469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9470                           
  9471                           ;incstack = 0
  9472  004C34  5024               	movf	_width,w,c
  9473  004C36  1025               	iorwf	_width+1,w,c
  9474  004C38  A4D8               	btfss	status,2,c
  9475  004C3A  D009               	goto	l6333
  9476                           
  9477                           ;stkvar	_w @ sp[(-2)+0]
  9478  004C3C  0EFE               	movlw	-2
  9479  004C3E  0060  F093  FFE3   	movff	_width,plusw1
  9480  004C44  0EFF               	movlw	-1
  9481  004C46  0060  F097  FFE3   	movff	_width+1,plusw1
  9482  004C4C  D016               	goto	l6335
  9483  004C4E                     l6333:
  9484  004C4E  0EFF               	movlw	255
  9485  004C50  6E48               	movwf	btemp+10,c
  9486  004C52  0EFF               	movlw	255
  9487  004C54  6E49               	movwf	btemp+11,c
  9488  004C56  0060  F090  F046   	movff	_width,btemp+8
  9489  004C5C  0060  F094  F047   	movff	_width+1,btemp+9
  9490  004C62  5048               	movf	btemp+10,w,c
  9491  004C64  2646               	addwf	btemp+8,f,c
  9492  004C66  5049               	movf	btemp+11,w,c
  9493  004C68  2247               	addwfc	btemp+9,f,c
  9494                           
  9495                           ;stkvar	_w @ sp[(-2)+0]
  9496  004C6A  0EFE               	movlw	-2
  9497  004C6C  0060  F11B  FFE3   	movff	btemp+8,plusw1
  9498  004C72  0EFF               	movlw	-1
  9499  004C74  0060  F11F  FFE3   	movff	btemp+9,plusw1
  9500  004C7A                     l6335:
  9501                           
  9502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9503                           ;stkvar	_c @ sp[(-2)+-3]
  9504  004C7A  0EFB               	movlw	-5
  9505  004C7C  006F FF8C  F1C4    	movff	plusw1,_dbuf
  9506                           
  9507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9508  004C82  0101               	movlb	1	; () banked
  9509  004C84  6BC5               	clrf	(_dbuf+1)& (0+255),b
  9510                           
  9511                           ; BSR set to: 1
  9512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9513                           ;stkvar	_w @ sp[(-2)+0]
  9514  004C86  0EFE               	movlw	-2
  9515  004C88  006F FF8F FFE6     	movff	plusw1,postinc1
  9516  004C8E  006F FF8F FFE6     	movff	plusw1,postinc1
  9517  004C94  0EC4               	movlw	low _dbuf
  9518  004C96  6EE6               	movwf	postinc1,c
  9519  004C98  0E01               	movlw	high _dbuf
  9520  004C9A  6EE6               	movwf	postinc1,c
  9521                           
  9522                           ;stkvar	_fp @ sp[(-6)+-2]
  9523  004C9C  0EF8               	movlw	-8
  9524  004C9E  006F FF8F FFE6     	movff	plusw1,postinc1
  9525  004CA4  006F FF8F FFE6     	movff	plusw1,postinc1
  9526  004CAA  ECD9  F020         	call	_pad	;wreg free
  9527                           
  9528                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  9529  004CAE  0EFB               	movlw	251
  9530  004CB0  26E1               	addwf	fsr1l,f,c
  9531  004CB2  0EFF               	movlw	255
  9532  004CB4  22E2               	addwfc	fsr1h,f,c
  9533  004CB6  0012               	return		;funcret
  9534  004CB8                     __end_of_ctoa:
  9535                           	opt callstack 0
  9536                           
  9537 ;; *************** function _pad *****************
  9538 ;; Defined at:
  9539 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9542 ;;		 -> f(5), NULL(0), 
  9543 ;;  buf             2  [STACK] PTR unsigned char 
  9544 ;;		 -> dbuf(32), 
  9545 ;;  p               2  [STACK] int 
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;  w               2  [STACK] int 
  9548 ;;  i               2  [STACK] int 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  2  [STACK] int 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/1
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9562 ;;Total ram usage:        0 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    7
  9565 ;; This function calls:
  9566 ;;		_fputc
  9567 ;;		_fputs
  9568 ;;		_strlen
  9569 ;; This function is called by:
  9570 ;;		_ctoa
  9571 ;;		_dtoa
  9572 ;; This function uses a reentrant model
  9573 ;;
  9574                           
  9575                           	psect	text41
  9576  0041B2                     __ptext41:
  9577                           	opt callstack 0
  9578  0041B2                     _pad:
  9579                           	opt callstack 0
  9580                           
  9581                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9582  0041B2  52E6               	movf	postinc1,f,c
  9583  0041B4  52E6               	movf	postinc1,f,c
  9584  0041B6  52E6               	movf	postinc1,f,c
  9585  0041B8  52E6               	movf	postinc1,f,c
  9586                           
  9587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9588                           
  9589                           ;incstack = 0
  9590  0041BA  A028               	btfss	_flags,0,c
  9591  0041BC  D010               	goto	l6311
  9592                           
  9593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9594                           ;stkvar	_fp @ sp[(-4)+-2]
  9595  0041BE  0EFA               	movlw	-6
  9596  0041C0  006F FF8F FFE6     	movff	plusw1,postinc1
  9597  0041C6  006F FF8F FFE6     	movff	plusw1,postinc1
  9598                           
  9599                           ;stkvar	_buf @ sp[(-6)+-4]
  9600  0041CC  0EF6               	movlw	-10
  9601  0041CE  006F FF8F FFE6     	movff	plusw1,postinc1
  9602  0041D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9603  0041DA  EC39  F025         	call	_fputs	;wreg free
  9604  0041DE                     l6311:
  9605                           
  9606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9607                           ;stkvar	_p @ sp[(-4)+-6]
  9608  0041DE  0EF7               	movlw	-9
  9609  0041E0  BEE3               	btfsc	plusw1,7,c
  9610  0041E2  D011               	goto	l6315
  9611                           
  9612                           ;stkvar	_p @ sp[(-4)+-6]
  9613                           ;stkvar	_w @ sp[(-4)+0]
  9614  0041E4  0EF6               	movlw	-10
  9615  0041E6  006F FF8C  F03E    	movff	plusw1,btemp
  9616  0041EC  0EFC               	movlw	-4
  9617  0041EE  0060  F0FB  FFE3   	movff	btemp,plusw1
  9618  0041F4  0EF7               	movlw	-9
  9619  0041F6  006F FF8C  F03E    	movff	plusw1,btemp
  9620  0041FC  0EFD               	movlw	-3
  9621  0041FE  0060  F0FB  FFE3   	movff	btemp,plusw1
  9622  004204  D004               	goto	l1663
  9623  004206                     l6315:
  9624                           
  9625                           ;stkvar	_w @ sp[(-4)+0]
  9626  004206  0EFC               	movlw	-4
  9627  004208  6AE3               	clrf	plusw1,c
  9628  00420A  0EFD               	movlw	-3
  9629  00420C  6AE3               	clrf	plusw1,c
  9630  00420E                     l1663:
  9631                           
  9632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9633                           ;stkvar	_i @ sp[(-4)+2]
  9634  00420E  0EFE               	movlw	-2
  9635  004210  6AE3               	clrf	plusw1,c
  9636  004212  0EFF               	movlw	-1
  9637  004214  6AE3               	clrf	plusw1,c
  9638                           
  9639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9640  004216  D01E               	goto	l6321
  9641  004218                     l6317:
  9642                           
  9643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9644                           ;stkvar	_fp @ sp[(-4)+-2]
  9645  004218  0EFA               	movlw	-6
  9646  00421A  006F FF8F FFE6     	movff	plusw1,postinc1
  9647  004220  006F FF8F FFE6     	movff	plusw1,postinc1
  9648  004226  0E20               	movlw	32
  9649  004228  6EE6               	movwf	postinc1,c
  9650  00422A  0E00               	movlw	0
  9651  00422C  6EE6               	movwf	postinc1,c
  9652  00422E  EC63  F021         	call	_fputc	;wreg free
  9653                           
  9654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9655                           ;stkvar	_i @ sp[(-4)+2]
  9656  004232  0EFE               	movlw	-2
  9657  004234  50E3               	movf	plusw1,w,c
  9658  004236  0F01               	addlw	1
  9659  004238  6E3E               	movwf	btemp,c
  9660  00423A  0EFE               	movlw	-2
  9661  00423C  0060  F0FB  FFE3   	movff	btemp,plusw1
  9662  004242  6A3E               	clrf	btemp,c
  9663  004244  0EFF               	movlw	-1
  9664  004246  50E3               	movf	plusw1,w,c
  9665  004248  203E               	addwfc	btemp,w,c
  9666  00424A  6E3E               	movwf	btemp,c
  9667  00424C  0EFF               	movlw	-1
  9668  00424E  0060  F0FB  FFE3   	movff	btemp,plusw1
  9669  004254                     l6321:
  9670                           
  9671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9672                           ;stkvar	_w @ sp[(-4)+0]
  9673                           ;stkvar	_i @ sp[(-4)+2]
  9674  004254  50E1               	movf	fsr1l,w,c
  9675  004256  0FFE               	addlw	-2
  9676  004258  6ED9               	movwf	fsr2l,c
  9677  00425A  50E2               	movf	fsr1h,w,c
  9678  00425C  6EDA               	movwf	fsr2h,c
  9679  00425E  0EFF               	movlw	255
  9680  004260  22DA               	addwfc	fsr2h,f,c
  9681  004262  0EFC               	movlw	-4
  9682  004264  50E3               	movf	plusw1,w,c
  9683  004266  5CDE               	subwf	postinc2,w,c
  9684  004268  50DE               	movf	postinc2,w,c
  9685  00426A  0A80               	xorlw	128
  9686  00426C  6E3E               	movwf	btemp,c
  9687  00426E  0EFD               	movlw	-3
  9688  004270  50E3               	movf	plusw1,w,c
  9689  004272  0A80               	xorlw	128
  9690  004274  583E               	subwfb	btemp,w,c
  9691  004276  A0D8               	btfss	status,0,c
  9692  004278  D7CF               	goto	l6317
  9693                           
  9694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9695  00427A  B028               	btfsc	_flags,0,c
  9696  00427C  D010               	goto	l6325
  9697                           
  9698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9699                           ;stkvar	_fp @ sp[(-4)+-2]
  9700  00427E  0EFA               	movlw	-6
  9701  004280  006F FF8F FFE6     	movff	plusw1,postinc1
  9702  004286  006F FF8F FFE6     	movff	plusw1,postinc1
  9703                           
  9704                           ;stkvar	_buf @ sp[(-6)+-4]
  9705  00428C  0EF6               	movlw	-10
  9706  00428E  006F FF8F FFE6     	movff	plusw1,postinc1
  9707  004294  006F FF8F FFE6     	movff	plusw1,postinc1
  9708  00429A  EC39  F025         	call	_fputs	;wreg free
  9709  00429E                     l6325:
  9710                           
  9711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9712                           ;stkvar	_w @ sp[(-4)+0]
  9713                           ;stkvar	_buf @ sp[(-4)+-4]
  9714  00429E  0EF8               	movlw	-8
  9715  0042A0  006F FF8F FFE6     	movff	plusw1,postinc1
  9716  0042A6  006F FF8F FFE6     	movff	plusw1,postinc1
  9717  0042AC  EC4A  F024         	call	_strlen	;wreg free
  9718  0042B0  0EFC               	movlw	-4
  9719  0042B2  50E3               	movf	plusw1,w,c
  9720  0042B4  263E               	addwf	btemp,f,c
  9721  0042B6  0EFD               	movlw	-3
  9722  0042B8  50E3               	movf	plusw1,w,c
  9723  0042BA  223F               	addwfc	btemp+1,f,c
  9724                           
  9725                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
  9726  0042BC  0EF6               	movlw	246
  9727  0042BE  26E1               	addwf	fsr1l,f,c
  9728  0042C0  0EFF               	movlw	255
  9729  0042C2  22E2               	addwfc	fsr1h,f,c
  9730  0042C4  0012               	return		;funcret
  9731  0042C6                     __end_of_pad:
  9732                           	opt callstack 0
  9733                           
  9734 ;; *************** function _strlen *****************
  9735 ;; Defined at:
  9736 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;  s               2  [STACK] PTR const unsigned char 
  9739 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9740 ;;		 -> STR_3(5), V(85), 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;  a               2  [STACK] PTR const unsigned char 
  9743 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9744 ;;		 -> STR_3(5), V(85), 
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  2  [STACK] unsigned int 
  9747 ;; Registers used:
  9748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used:    1
  9760 ;; Hardware stack levels required when called:    3
  9761 ;; This function calls:
  9762 ;;		Nothing
  9763 ;; This function is called by:
  9764 ;;		_eaDogM_WriteString
  9765 ;;		_pad
  9766 ;;		_stoa
  9767 ;; This function uses a reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text42
  9771  004894                     __ptext42:
  9772                           	opt callstack 0
  9773  004894                     _strlen:
  9774                           	opt callstack 0
  9775                           
  9776                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9777  004894  52E6               	movf	postinc1,f,c
  9778  004896  52E6               	movf	postinc1,f,c
  9779                           
  9780                           ;stkvar	_s @ sp[(-2)+-2]
  9781                           
  9782                           ;incstack = 0
  9783  004898  0EFC               	movlw	-4
  9784  00489A  006F FF8C  F048    	movff	plusw1,btemp+10
  9785  0048A0  0EFD               	movlw	-3
  9786  0048A2  006F FF8C  F049    	movff	plusw1,btemp+11
  9787                           
  9788                           ;stkvar	_a @ sp[(-2)+0]
  9789  0048A8  0EFF               	movlw	-1
  9790  0048AA  0060  F127  FFE3   	movff	btemp+11,plusw1
  9791  0048B0  0EFE               	movlw	-2
  9792  0048B2  0060  F123  FFE3   	movff	btemp+10,plusw1
  9793  0048B8  D011               	goto	l4585
  9794  0048BA                     l4583:
  9795                           
  9796                           ;stkvar	_s @ sp[(-2)+-2]
  9797  0048BA  0EFC               	movlw	-4
  9798  0048BC  50E3               	movf	plusw1,w,c
  9799  0048BE  0F01               	addlw	1
  9800  0048C0  6E3E               	movwf	btemp,c
  9801  0048C2  0EFC               	movlw	-4
  9802  0048C4  0060  F0FB  FFE3   	movff	btemp,plusw1
  9803  0048CA  6A3E               	clrf	btemp,c
  9804  0048CC  0EFD               	movlw	-3
  9805  0048CE  50E3               	movf	plusw1,w,c
  9806  0048D0  203E               	addwfc	btemp,w,c
  9807  0048D2  6E3E               	movwf	btemp,c
  9808  0048D4  0EFD               	movlw	-3
  9809  0048D6  0060  F0FB  FFE3   	movff	btemp,plusw1
  9810  0048DC                     l4585:
  9811                           
  9812                           ;stkvar	_s @ sp[(-2)+-2]
  9813  0048DC  0EFC               	movlw	-4
  9814  0048DE  006F FF8F FFF6     	movff	plusw1,tblptrl
  9815  0048E4  0EFD               	movlw	-3
  9816  0048E6  006F FF8F FFF7     	movff	plusw1,tblptrh
  9817  0048EC  0E00               	movlw	low (__smallconst shr (0+16))
  9818  0048EE  6EF8               	movwf	tblptru,c
  9819  0048F0  0E1F               	movlw	(high __ramtop+-1)
  9820  0048F2  64F7               	cpfsgt	tblptrh,c
  9821  0048F4  D003               	bra	u1777
  9822  0048F6  0008               	tblrd		*
  9823  0048F8  50F5               	movf	tablat,w,c
  9824  0048FA  D007               	bra	u1770
  9825  0048FC                     u1777:
  9826  0048FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9827  004902  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9828  004908  50EF               	movf	indf0,w,c
  9829  00490A                     u1770:
  9830  00490A  0900               	iorlw	0
  9831  00490C  A4D8               	btfss	status,2,c
  9832  00490E  D7D5               	goto	l4583
  9833                           
  9834                           ;stkvar	_a @ sp[(-2)+0]
  9835                           ;stkvar	_s @ sp[(-2)+-2]
  9836  004910  0EFC               	movlw	-4
  9837  004912  006F FF8C  F03E    	movff	plusw1,btemp
  9838  004918  0EFD               	movlw	-3
  9839  00491A  006F FF8C  F03F    	movff	plusw1,btemp+1
  9840  004920  0EFE               	movlw	-2
  9841  004922  50E3               	movf	plusw1,w,c
  9842  004924  5E3E               	subwf	btemp,f,c
  9843  004926  0EFF               	movlw	-1
  9844  004928  50E3               	movf	plusw1,w,c
  9845  00492A  5A3F               	subwfb	btemp+1,f,c
  9846                           
  9847                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9848  00492C  52E5               	movf	postdec1,f,c
  9849  00492E  52E5               	movf	postdec1,f,c
  9850  004930  52E5               	movf	postdec1,f,c
  9851  004932  52E5               	movf	postdec1,f,c
  9852  004934  0012               	return		;funcret
  9853  004936                     __end_of_strlen:
  9854                           	opt callstack 0
  9855                           
  9856 ;; *************** function _fputs *****************
  9857 ;; Defined at:
  9858 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  s               2  [STACK] PTR const unsigned char 
  9861 ;;		 -> dbuf(32), 
  9862 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9863 ;;		 -> f(5), NULL(0), 
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  i               2  [STACK] int 
  9866 ;;  c               1  [STACK] unsigned char 
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  2  [STACK] int 
  9869 ;; Registers used:
  9870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/1
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9880 ;;Total ram usage:        0 bytes
  9881 ;; Hardware stack levels used:    1
  9882 ;; Hardware stack levels required when called:    6
  9883 ;; This function calls:
  9884 ;;		_fputc
  9885 ;; This function is called by:
  9886 ;;		_pad
  9887 ;; This function uses a reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text43
  9891  004A72                     __ptext43:
  9892                           	opt callstack 0
  9893  004A72                     _fputs:
  9894                           	opt callstack 0
  9895                           
  9896                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9897  004A72  52E6               	movf	postinc1,f,c
  9898  004A74  52E6               	movf	postinc1,f,c
  9899  004A76  52E6               	movf	postinc1,f,c
  9900                           
  9901                           ;stkvar	_i @ sp[(-3)+0]
  9902                           
  9903                           ;incstack = 0
  9904  004A78  0EFD               	movlw	-3
  9905  004A7A  6AE3               	clrf	plusw1,c
  9906  004A7C  0EFE               	movlw	-2
  9907  004A7E  6AE3               	clrf	plusw1,c
  9908  004A80  D01F               	goto	l6305
  9909  004A82                     l6301:
  9910                           
  9911                           ;stkvar	_fp @ sp[(-3)+-4]
  9912  004A82  0EF9               	movlw	-7
  9913  004A84  006F FF8F FFE6     	movff	plusw1,postinc1
  9914  004A8A  006F FF8F FFE6     	movff	plusw1,postinc1
  9915                           
  9916                           ;stkvar	_c @ sp[(-5)+2]
  9917  004A90  0EFD               	movlw	-3
  9918  004A92  50E3               	movf	plusw1,w,c
  9919  004A94  6EE6               	movwf	postinc1,c
  9920  004A96  0E00               	movlw	0
  9921  004A98  6EE6               	movwf	postinc1,c
  9922  004A9A  EC63  F021         	call	_fputc	;wreg free
  9923                           
  9924                           ;stkvar	_i @ sp[(-3)+0]
  9925  004A9E  0EFD               	movlw	-3
  9926  004AA0  50E3               	movf	plusw1,w,c
  9927  004AA2  0F01               	addlw	1
  9928  004AA4  6E3E               	movwf	btemp,c
  9929  004AA6  0EFD               	movlw	-3
  9930  004AA8  0060  F0FB  FFE3   	movff	btemp,plusw1
  9931  004AAE  6A3E               	clrf	btemp,c
  9932  004AB0  0EFE               	movlw	-2
  9933  004AB2  50E3               	movf	plusw1,w,c
  9934  004AB4  203E               	addwfc	btemp,w,c
  9935  004AB6  6E3E               	movwf	btemp,c
  9936  004AB8  0EFE               	movlw	-2
  9937  004ABA  0060  F0FB  FFE3   	movff	btemp,plusw1
  9938  004AC0                     l6305:
  9939                           
  9940                           ;stkvar	_i @ sp[(-3)+0]
  9941  004AC0  0EFD               	movlw	-3
  9942  004AC2  006F FF8C  F048    	movff	plusw1,btemp+10
  9943  004AC8  0EFE               	movlw	-2
  9944  004ACA  006F FF8C  F049    	movff	plusw1,btemp+11
  9945                           
  9946                           ;stkvar	_s @ sp[(-3)+-2]
  9947  004AD0  0EFB               	movlw	-5
  9948  004AD2  006F FF8C  F046    	movff	plusw1,btemp+8
  9949  004AD8  0EFC               	movlw	-4
  9950  004ADA  006F FF8C  F047    	movff	plusw1,btemp+9
  9951  004AE0  5048               	movf	btemp+10,w,c
  9952  004AE2  2446               	addwf	btemp+8,w,c
  9953  004AE4  6ED9               	movwf	fsr2l,c
  9954  004AE6  5049               	movf	btemp+11,w,c
  9955  004AE8  2047               	addwfc	btemp+9,w,c
  9956  004AEA  6EDA               	movwf	fsr2h,c
  9957  004AEC  50DF               	movf	indf2,w,c
  9958  004AEE  6E49               	movwf	btemp+11,c
  9959                           
  9960                           ;stkvar	_c @ sp[(-3)+2]
  9961  004AF0  0EFF               	movlw	-1
  9962  004AF2  0060  F127  FFE3   	movff	btemp+11,plusw1
  9963  004AF8  0EFF               	movlw	-1
  9964  004AFA  50E3               	movf	plusw1,w,c
  9965  004AFC  A4D8               	btfss	status,2,c
  9966  004AFE  D7C1               	goto	l6301
  9967                           
  9968                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9969  004B00  0EF9               	movlw	249
  9970  004B02  26E1               	addwf	fsr1l,f,c
  9971  004B04  0EFF               	movlw	255
  9972  004B06  22E2               	addwfc	fsr1h,f,c
  9973  004B08  0012               	return		;funcret
  9974  004B0A                     __end_of_fputs:
  9975                           	opt callstack 0
  9976                           
  9977 ;; *************** function _fputc *****************
  9978 ;; Defined at:
  9979 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;  c               2  [STACK] int 
  9982 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9983 ;;		 -> f(5), NULL(0), 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;		None
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  2  [STACK] int 
  9988 ;; Registers used:
  9989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9999 ;;Total ram usage:        0 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    5
 10002 ;; This function calls:
 10003 ;;		_putch
 10004 ;; This function is called by:
 10005 ;;		_pad
 10006 ;;		_stoa
 10007 ;;		_vfpfcnvrt
 10008 ;;		_fputs
 10009 ;; This function uses a reentrant model
 10010 ;;
 10011                           
 10012                           	psect	text44
 10013  0042C6                     __ptext44:
 10014                           	opt callstack 0
 10015  0042C6                     _fputc:
 10016                           	opt callstack 21
 10017                           
 10018                           ;stkvar	_fp @ sp[(0)+-4]
 10019                           
 10020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10021                           ;incstack = 0
 10022  0042C6  0EFC               	movlw	-4
 10023  0042C8  006F FF8C  F03E    	movff	plusw1,btemp
 10024  0042CE  0EFD               	movlw	-3
 10025  0042D0  50E3               	movf	plusw1,w,c
 10026  0042D2  103E               	iorwf	btemp,w,c
 10027  0042D4  B4D8               	btfsc	status,2,c
 10028  0042D6  D009               	goto	u3280
 10029                           
 10030                           ;stkvar	_fp @ sp[(0)+-4]
 10031  0042D8  0EFC               	movlw	-4
 10032  0042DA  006F FF8C  F03E    	movff	plusw1,btemp
 10033  0042E0  0EFD               	movlw	-3
 10034  0042E2  50E3               	movf	plusw1,w,c
 10035  0042E4  103E               	iorwf	btemp,w,c
 10036  0042E6  A4D8               	btfss	status,2,c
 10037  0042E8  D006               	goto	l6291
 10038  0042EA                     u3280:
 10039                           
 10040                           ;stkvar	_c @ sp[(0)+-2]
 10041  0042EA  0EFE               	movlw	-2
 10042  0042EC  50E3               	movf	plusw1,w,c
 10043  0042EE  6EE6               	movwf	postinc1,c
 10044  0042F0  EC21  F02C         	call	_putch	;wreg free
 10045  0042F4  D069               	goto	l2446
 10046  0042F6                     l6291:
 10047                           
 10048                           ;stkvar	_fp @ sp[(0)+-4]
 10049  0042F6  0EFC               	movlw	-4
 10050  0042F8  006F FF8C  F048    	movff	plusw1,btemp+10
 10051  0042FE  0EFD               	movlw	-3
 10052  004300  006F FF8C  F049    	movff	plusw1,btemp+11
 10053  004306  0E03               	movlw	3
 10054  004308  2448               	addwf	btemp+10,w,c
 10055  00430A  6ED9               	movwf	fsr2l,c
 10056  00430C  0E00               	movlw	0
 10057  00430E  2049               	addwfc	btemp+11,w,c
 10058  004310  6EDA               	movwf	fsr2h,c
 10059  004312  50DE               	movf	postinc2,w,c
 10060  004314  10DE               	iorwf	postinc2,w,c
 10061  004316  B4D8               	btfsc	status,2,c
 10062  004318  D026               	goto	u3300
 10063                           
 10064                           ;stkvar	_fp @ sp[(0)+-4]
 10065  00431A  0EFC               	movlw	-4
 10066  00431C  006F FF8C  F048    	movff	plusw1,btemp+10
 10067  004322  0EFD               	movlw	-3
 10068  004324  006F FF8C  F049    	movff	plusw1,btemp+11
 10069  00432A  0E03               	movlw	3
 10070  00432C  2448               	addwf	btemp+10,w,c
 10071  00432E  6ED9               	movwf	fsr2l,c
 10072  004330  0E00               	movlw	0
 10073  004332  2049               	addwfc	btemp+11,w,c
 10074  004334  6EDA               	movwf	fsr2h,c
 10075                           
 10076                           ;stkvar	_fp @ sp[(0)+-4]
 10077  004336  0EFC               	movlw	-4
 10078  004338  006F FF8C  F048    	movff	plusw1,btemp+10
 10079  00433E  0EFD               	movlw	-3
 10080  004340  006F FF8C  F049    	movff	plusw1,btemp+11
 10081  004346  0E01               	movlw	1
 10082  004348  2448               	addwf	btemp+10,w,c
 10083  00434A  6EE9               	movwf	fsr0l,c
 10084  00434C  0E00               	movlw	0
 10085  00434E  2049               	addwfc	btemp+11,w,c
 10086  004350  6EEA               	movwf	fsr0h,c
 10087  004352  50DE               	movf	postinc2,w,c
 10088  004354  5CEE               	subwf	postinc0,w,c
 10089  004356  50EE               	movf	postinc0,w,c
 10090  004358  0A80               	xorlw	128
 10091  00435A  6E3E               	movwf	btemp,c
 10092  00435C  50DE               	movf	postinc2,w,c
 10093  00435E  0A80               	xorlw	128
 10094  004360  583E               	subwfb	btemp,w,c
 10095  004362  B0D8               	btfsc	status,0,c
 10096  004364  D031               	goto	l2446
 10097  004366                     u3300:
 10098                           
 10099                           ;stkvar	_c @ sp[(0)+-2]
 10100                           ;stkvar	_fp @ sp[(0)+-4]
 10101  004366  0EFC               	movlw	-4
 10102  004368  006F FF8C  F048    	movff	plusw1,btemp+10
 10103  00436E  0EFD               	movlw	-3
 10104  004370  006F FF8C  F049    	movff	plusw1,btemp+11
 10105  004376  0E01               	movlw	1
 10106  004378  2448               	addwf	btemp+10,w,c
 10107  00437A  6ED9               	movwf	fsr2l,c
 10108  00437C  0E00               	movlw	0
 10109  00437E  2049               	addwfc	btemp+11,w,c
 10110  004380  6EDA               	movwf	fsr2h,c
 10111  004382  50DF               	movf	indf2,w,c
 10112  004384  6E49               	movwf	btemp+11,c
 10113                           
 10114                           ;stkvar	_fp @ sp[(0)+-4]
 10115  004386  0EFC               	movlw	-4
 10116  004388  006F FF8F FFD9     	movff	plusw1,fsr2l
 10117  00438E  0EFD               	movlw	-3
 10118  004390  006F FF8F FFDA     	movff	plusw1,fsr2h
 10119  004396  50DF               	movf	indf2,w,c
 10120  004398  2449               	addwf	btemp+11,w,c
 10121  00439A  6ED9               	movwf	fsr2l,c
 10122  00439C  6ADA               	clrf	fsr2h,c
 10123  00439E  0EFE               	movlw	-2
 10124  0043A0  006F FF8F FFDF     	movff	plusw1,indf2
 10125                           
 10126                           ;stkvar	_fp @ sp[(0)+-4]
 10127  0043A6  0EFC               	movlw	-4
 10128  0043A8  006F FF8C  F048    	movff	plusw1,btemp+10
 10129  0043AE  0EFD               	movlw	-3
 10130  0043B0  006F FF8C  F049    	movff	plusw1,btemp+11
 10131  0043B6  0E01               	movlw	1
 10132  0043B8  2448               	addwf	btemp+10,w,c
 10133  0043BA  6ED9               	movwf	fsr2l,c
 10134  0043BC  0E00               	movlw	0
 10135  0043BE  2049               	addwfc	btemp+11,w,c
 10136  0043C0  6EDA               	movwf	fsr2h,c
 10137  0043C2  2ADE               	incf	postinc2,f,c
 10138  0043C4  0E00               	movlw	0
 10139  0043C6  22DD               	addwfc	postdec2,f,c
 10140  0043C8                     l2446:
 10141                           
 10142                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10143  0043C8  52E5               	movf	postdec1,f,c
 10144  0043CA  52E5               	movf	postdec1,f,c
 10145  0043CC  52E5               	movf	postdec1,f,c
 10146  0043CE  52E5               	movf	postdec1,f,c
 10147  0043D0  0012               	return		;funcret
 10148  0043D2                     __end_of_fputc:
 10149                           	opt callstack 0
 10150                           
 10151 ;; *************** function _putch *****************
 10152 ;; Defined at:
 10153 ;;		line 138 in file "eadog.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;  c               1  [STACK] unsigned char 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;		None
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  1  [STACK] void 
 10160 ;; Registers used:
 10161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10171 ;;Total ram usage:        0 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:    4
 10174 ;; This function calls:
 10175 ;;		_ringBufS_put_dma
 10176 ;; This function is called by:
 10177 ;;		_fputc
 10178 ;; This function uses a reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text45
 10182  005842                     __ptext45:
 10183                           	opt callstack 0
 10184  005842                     _putch:
 10185                           	opt callstack 21
 10186                           
 10187                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10188                           ;stkvar	_c @ sp[(0)+-1]
 10189                           
 10190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10191                           ;incstack = 0
 10192  005842  0EFF               	movlw	-1
 10193  005844  50E3               	movf	plusw1,w,c
 10194  005846  6EE6               	movwf	postinc1,c
 10195  005848  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10196  00584E  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10197  005854  ECF5  F023         	call	_ringBufS_put_dma	;wreg free
 10198                           
 10199                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10200  005858  52E5               	movf	postdec1,f,c
 10201  00585A  0012               	return		;funcret
 10202  00585C                     __end_of_putch:
 10203                           	opt callstack 0
 10204                           
 10205 ;; *************** function _ringBufS_put_dma *****************
 10206 ;; Defined at:
 10207 ;;		line 67 in file "ringbufs.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10210 ;;		 -> ring_buf1(67), 
 10211 ;;  c               1  [STACK] const unsigned char 
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;		None
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1  [STACK] void 
 10216 ;; Registers used:
 10217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10227 ;;Total ram usage:        0 bytes
 10228 ;; Hardware stack levels used:    1
 10229 ;; Hardware stack levels required when called:    3
 10230 ;; This function calls:
 10231 ;;		Nothing
 10232 ;; This function is called by:
 10233 ;;		_putch
 10234 ;; This function uses a reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text46
 10238  0047EA                     __ptext46:
 10239                           	opt callstack 0
 10240  0047EA                     _ringBufS_put_dma:
 10241                           	opt callstack 21
 10242                           
 10243                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10244                           ;stkvar	__this @ sp[(0)+-2]
 10245                           
 10246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10247                           ;incstack = 0
 10248  0047EA  0EFE               	movlw	-2
 10249  0047EC  006F FF8C  F048    	movff	plusw1,btemp+10
 10250  0047F2  0EFF               	movlw	-1
 10251  0047F4  006F FF8C  F049    	movff	plusw1,btemp+11
 10252  0047FA  0E42               	movlw	66
 10253  0047FC  2448               	addwf	btemp+10,w,c
 10254  0047FE  6ED9               	movwf	fsr2l,c
 10255  004800  0E00               	movlw	0
 10256  004802  2049               	addwfc	btemp+11,w,c
 10257  004804  6EDA               	movwf	fsr2h,c
 10258  004806  0E40               	movlw	64
 10259  004808  60DF               	cpfslt	indf2,c
 10260  00480A  D040               	goto	l1439
 10261                           
 10262                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10263                           ;stkvar	_c @ sp[(0)+-3]
 10264                           ;stkvar	__this @ sp[(0)+-2]
 10265  00480C  0EFE               	movlw	-2
 10266  00480E  006F FF8C  F048    	movff	plusw1,btemp+10
 10267  004814  0EFF               	movlw	-1
 10268  004816  006F FF8C  F049    	movff	plusw1,btemp+11
 10269  00481C  0E40               	movlw	64
 10270  00481E  2448               	addwf	btemp+10,w,c
 10271  004820  6ED9               	movwf	fsr2l,c
 10272  004822  0E00               	movlw	0
 10273  004824  2049               	addwfc	btemp+11,w,c
 10274  004826  6EDA               	movwf	fsr2h,c
 10275  004828  50DF               	movf	indf2,w,c
 10276  00482A  6E49               	movwf	btemp+11,c
 10277                           
 10278                           ;stkvar	__this @ sp[(0)+-2]
 10279  00482C  0EFE               	movlw	-2
 10280  00482E  006F FF8C  F046    	movff	plusw1,btemp+8
 10281  004834  0EFF               	movlw	-1
 10282  004836  006F FF8C  F047    	movff	plusw1,btemp+9
 10283  00483C  5049               	movf	btemp+11,w,c
 10284  00483E  2446               	addwf	btemp+8,w,c
 10285  004840  6ED9               	movwf	fsr2l,c
 10286  004842  0E00               	movlw	0
 10287  004844  2047               	addwfc	btemp+9,w,c
 10288  004846  6EDA               	movwf	fsr2h,c
 10289  004848  0EFD               	movlw	-3
 10290  00484A  006F FF8F FFDF     	movff	plusw1,indf2
 10291                           
 10292                           ;ringbufs.c: 71:   ++_this->head;
 10293                           ;stkvar	__this @ sp[(0)+-2]
 10294  004850  0EFE               	movlw	-2
 10295  004852  006F FF8C  F048    	movff	plusw1,btemp+10
 10296  004858  0EFF               	movlw	-1
 10297  00485A  006F FF8C  F049    	movff	plusw1,btemp+11
 10298  004860  0E40               	movlw	64
 10299  004862  2448               	addwf	btemp+10,w,c
 10300  004864  6ED9               	movwf	fsr2l,c
 10301  004866  0E00               	movlw	0
 10302  004868  2049               	addwfc	btemp+11,w,c
 10303  00486A  6EDA               	movwf	fsr2h,c
 10304  00486C  2ADF               	incf	indf2,f,c
 10305                           
 10306                           ;ringbufs.c: 72:   ++_this->count;
 10307                           ;stkvar	__this @ sp[(0)+-2]
 10308  00486E  0EFE               	movlw	-2
 10309  004870  006F FF8C  F048    	movff	plusw1,btemp+10
 10310  004876  0EFF               	movlw	-1
 10311  004878  006F FF8C  F049    	movff	plusw1,btemp+11
 10312  00487E  0E42               	movlw	66
 10313  004880  2448               	addwf	btemp+10,w,c
 10314  004882  6ED9               	movwf	fsr2l,c
 10315  004884  0E00               	movlw	0
 10316  004886  2049               	addwfc	btemp+11,w,c
 10317  004888  6EDA               	movwf	fsr2h,c
 10318  00488A  2ADF               	incf	indf2,f,c
 10319  00488C                     l1439:
 10320                           
 10321                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10322  00488C  52E5               	movf	postdec1,f,c
 10323  00488E  52E5               	movf	postdec1,f,c
 10324  004890  52E5               	movf	postdec1,f,c
 10325  004892  0012               	return		;funcret
 10326  004894                     __end_of_ringBufS_put_dma:
 10327                           	opt callstack 0
 10328                           
 10329 ;; *************** function _SYSTEM_Initialize *****************
 10330 ;; Defined at:
 10331 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;		None
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1  [STACK] void 
 10338 ;; Registers used:
 10339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 3F/3C
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10349 ;;Total ram usage:        0 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    5
 10352 ;; This function calls:
 10353 ;;		_ADCC_Initialize
 10354 ;;		_CLC1_Initialize
 10355 ;;		_CLKREF_Initialize
 10356 ;;		_DMA1_Initialize
 10357 ;;		_DSM_Initialize
 10358 ;;		_EXT_INT_Initialize
 10359 ;;		_INTERRUPT_Initialize
 10360 ;;		_NCO1_Initialize
 10361 ;;		_OSCILLATOR_Initialize
 10362 ;;		_PIN_MANAGER_Initialize
 10363 ;;		_PMD_Initialize
 10364 ;;		_SPI1_Initialize
 10365 ;;		_TMR5_Initialize
 10366 ;;		_TMR6_Initialize
 10367 ;;		_UART1_Initialize
 10368 ;;		_UART2_Initialize
 10369 ;; This function is called by:
 10370 ;;		_main
 10371 ;; This function uses a reentrant model
 10372 ;;
 10373                           
 10374                           	psect	text47
 10375  00512E                     __ptext47:
 10376                           	opt callstack 0
 10377  00512E                     _SYSTEM_Initialize:
 10378                           	opt callstack 25
 10379                           
 10380                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10381                           
 10382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10383                           ;incstack = 0
 10384  00512E  ECC9  F026         	call	_INTERRUPT_Initialize	;wreg free
 10385                           
 10386                           ; BSR set to: 57
 10387                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10388  005132  EC69  F02C         	call	_PMD_Initialize	;wreg free
 10389                           
 10390                           ; BSR set to: 57
 10391                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10392  005136  EC9B  F024         	call	_PIN_MANAGER_Initialize	;wreg free
 10393                           
 10394                           ; BSR set to: 58
 10395                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10396  00513A  EC5E  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 10397                           
 10398                           ; BSR set to: 57
 10399                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10400  00513E  EC09  F028         	call	_ADCC_Initialize	;wreg free
 10401                           
 10402                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 10403  005142  EC05  F02C         	call	_NCO1_Initialize	;wreg free
 10404                           
 10405                           ; BSR set to: 63
 10406                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 10407  005146  ECE3  F027         	call	_EXT_INT_Initialize	;wreg free
 10408                           
 10409                           ; BSR set to: 57
 10410                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 10411  00514A  EC75  F02A         	call	_TMR6_Initialize	;wreg free
 10412                           
 10413                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 10414  00514E  EC62  F02B         	call	_CLC1_Initialize	;wreg free
 10415                           
 10416                           ; BSR set to: 60
 10417                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 10418  005152  EC51  F028         	call	_TMR5_Initialize	;wreg free
 10419                           
 10420                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 10421  005156  EC13  F02C         	call	_DSM_Initialize	;wreg free
 10422                           
 10423                           ; BSR set to: 60
 10424                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10425  00515A  ECFC  F026         	call	_UART1_Initialize	;wreg free
 10426                           
 10427                           ; BSR set to: 57
 10428                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10429  00515E  EC5F  F027         	call	_UART2_Initialize	;wreg free
 10430                           
 10431                           ; BSR set to: 57
 10432                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10433  005162  EC53  F02C         	call	_SPI1_Initialize	;wreg free
 10434                           
 10435                           ; BSR set to: 61
 10436                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 10437  005166  EC94  F026         	call	_DMA1_Initialize	;wreg free
 10438                           
 10439                           ; BSR set to: 59
 10440                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 10441  00516A  EC99  F02C         	call	_CLKREF_Initialize	;wreg free
 10442                           
 10443                           ; BSR set to: 60
 10444                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10445  00516E  0012               	return		;funcret
 10446  005170                     __end_of_SYSTEM_Initialize:
 10447                           	opt callstack 0
 10448                           
 10449 ;; *************** function _UART2_Initialize *****************
 10450 ;; Defined at:
 10451 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;		None
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;		None
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1  [STACK] void 
 10458 ;; Registers used:
 10459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10460 ;; Tracked objects:
 10461 ;;		On entry : 3F/39
 10462 ;;		On exit  : 3F/39
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10469 ;;Total ram usage:        0 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    4
 10472 ;; This function calls:
 10473 ;;		_UART2_SetRxInterruptHandler
 10474 ;;		_UART2_SetTxInterruptHandler
 10475 ;; This function is called by:
 10476 ;;		_SYSTEM_Initialize
 10477 ;; This function uses a reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text48
 10481  004EBE                     __ptext48:
 10482                           	opt callstack 0
 10483  004EBE                     _UART2_Initialize:
 10484                           	opt callstack 25
 10485                           
 10486                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10487                           
 10488                           ; BSR set to: 60
 10489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10490                           ;incstack = 0
 10491  004EBE  0139               	movlb	57	; () banked
 10492  004EC0  9596               	bcf	150,2,b	;volatile
 10493                           
 10494                           ; BSR set to: 57
 10495                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10496  004EC2  0EB0               	movlw	low _UART2_Receive_ISR
 10497  004EC4  6EE6               	movwf	postinc1,c
 10498  004EC6  0E57               	movlw	high _UART2_Receive_ISR
 10499  004EC8  6EE6               	movwf	postinc1,c
 10500  004ECA  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10501  004ECC  6EE6               	movwf	postinc1,c
 10502  004ECE  EC39  F02A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10503                           
 10504                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10505  004ED2  0139               	movlb	57	; () banked
 10506  004ED4  9796               	bcf	150,3,b	;volatile
 10507                           
 10508                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10509  004ED6  0EFE               	movlw	low _UART2_Transmit_ISR
 10510  004ED8  6EE6               	movwf	postinc1,c
 10511  004EDA  0E52               	movlw	high _UART2_Transmit_ISR
 10512  004EDC  6EE6               	movwf	postinc1,c
 10513  004EDE  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10514  004EE0  6EE6               	movwf	postinc1,c
 10515  004EE2  EC25  F02A         	call	_UART2_SetTxInterruptHandler	;wreg free
 10516                           
 10517                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10518  004EE6  013D               	movlb	61	; () banked
 10519  004EE8  6BD4               	clrf	212,b	;volatile
 10520                           
 10521                           ; BSR set to: 61
 10522                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10523  004EEA  6BD6               	clrf	214,b	;volatile
 10524                           
 10525                           ; BSR set to: 61
 10526                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10527  004EEC  6BD8               	clrf	216,b	;volatile
 10528                           
 10529                           ; BSR set to: 61
 10530                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10531  004EEE  0EB0               	movlw	176
 10532  004EF0  6FDA               	movwf	218,b	;volatile
 10533                           
 10534                           ; BSR set to: 61
 10535                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10536  004EF2  0E80               	movlw	128
 10537  004EF4  6FDB               	movwf	219,b	;volatile
 10538                           
 10539                           ; BSR set to: 61
 10540                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10541  004EF6  6BDC               	clrf	220,b	;volatile
 10542                           
 10543                           ; BSR set to: 61
 10544                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10545  004EF8  0E82               	movlw	130
 10546  004EFA  6FDD               	movwf	221,b	;volatile
 10547                           
 10548                           ; BSR set to: 61
 10549                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10550  004EFC  0E06               	movlw	6
 10551  004EFE  6FDE               	movwf	222,b	;volatile
 10552                           
 10553                           ; BSR set to: 61
 10554                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10555  004F00  6BDF               	clrf	223,b	;volatile
 10556                           
 10557                           ; BSR set to: 61
 10558                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10559  004F02  6BE0               	clrf	224,b	;volatile
 10560                           
 10561                           ; BSR set to: 61
 10562                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10563  004F04  6BE1               	clrf	225,b	;volatile
 10564                           
 10565                           ; BSR set to: 61
 10566                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10567  004F06  6BE2               	clrf	226,b	;volatile
 10568                           
 10569                           ; BSR set to: 61
 10570                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10571  004F08  6A37               	clrf	_uart2TxHead,c	;volatile
 10572                           
 10573                           ; BSR set to: 61
 10574                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10575  004F0A  6A36               	clrf	_uart2TxTail,c	;volatile
 10576                           
 10577                           ; BSR set to: 61
 10578                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10579  004F0C  0E40               	movlw	64
 10580  004F0E  6E35               	movwf	_uart2TxBufferRemaining,c	;volatile
 10581                           
 10582                           ; BSR set to: 61
 10583                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10584  004F10  6A34               	clrf	_uart2RxHead,c	;volatile
 10585                           
 10586                           ; BSR set to: 61
 10587                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10588  004F12  6A33               	clrf	_uart2RxTail,c	;volatile
 10589                           
 10590                           ; BSR set to: 61
 10591                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10592  004F14  6A32               	clrf	_uart2RxCount,c	;volatile
 10593                           
 10594                           ; BSR set to: 61
 10595                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10596  004F16  0139               	movlb	57	; () banked
 10597  004F18  8596               	bsf	150,2,b	;volatile
 10598                           
 10599                           ; BSR set to: 57
 10600                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10601  004F1A  0012               	return		;funcret
 10602  004F1C                     __end_of_UART2_Initialize:
 10603                           	opt callstack 0
 10604                           
 10605 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10606 ;; Defined at:
 10607 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10610 ;;		 -> UART2_Transmit_ISR(1), 
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;		None
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1  [STACK] void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10617 ;; Tracked objects:
 10618 ;;		On entry : 3F/39
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10626 ;;Total ram usage:        0 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:    3
 10629 ;; This function calls:
 10630 ;;		Nothing
 10631 ;; This function is called by:
 10632 ;;		_UART2_Initialize
 10633 ;; This function uses a reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text49
 10637  00544A                     __ptext49:
 10638                           	opt callstack 0
 10639  00544A                     _UART2_SetTxInterruptHandler:
 10640                           	opt callstack 25
 10641                           
 10642                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10643                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10644                           
 10645                           ; BSR set to: 57
 10646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10647                           ;incstack = 0
 10648  00544A  50E1               	movf	fsr1l,w,c
 10649  00544C  0FFD               	addlw	-3
 10650  00544E  6ED9               	movwf	fsr2l,c
 10651  005450  50E2               	movf	fsr1h,w,c
 10652  005452  6EDA               	movwf	fsr2h,c
 10653  005454  0EFF               	movlw	255
 10654  005456  22DA               	addwfc	fsr2h,f,c
 10655  005458  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 10656  00545E  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 10657  005464  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 10658                           
 10659                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10660  00546A  52E5               	movf	postdec1,f,c
 10661  00546C  52E5               	movf	postdec1,f,c
 10662  00546E  52E5               	movf	postdec1,f,c
 10663  005470  0012               	return		;funcret
 10664  005472                     __end_of_UART2_SetTxInterruptHandler:
 10665                           	opt callstack 0
 10666                           
 10667 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10668 ;; Defined at:
 10669 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10672 ;;		 -> UART2_Receive_ISR(1), 
 10673 ;; Auto vars:     Size  Location     Type
 10674 ;;		None
 10675 ;; Return value:  Size  Location     Type
 10676 ;;                  1  [STACK] void 
 10677 ;; Registers used:
 10678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10679 ;; Tracked objects:
 10680 ;;		On entry : 3F/39
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10688 ;;Total ram usage:        0 bytes
 10689 ;; Hardware stack levels used:    1
 10690 ;; Hardware stack levels required when called:    3
 10691 ;; This function calls:
 10692 ;;		Nothing
 10693 ;; This function is called by:
 10694 ;;		_UART2_Initialize
 10695 ;; This function uses a reentrant model
 10696 ;;
 10697                           
 10698                           	psect	text50
 10699  005472                     __ptext50:
 10700                           	opt callstack 0
 10701  005472                     _UART2_SetRxInterruptHandler:
 10702                           	opt callstack 25
 10703                           
 10704                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10705                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10706                           
 10707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10708                           ;incstack = 0
 10709  005472  50E1               	movf	fsr1l,w,c
 10710  005474  0FFD               	addlw	-3
 10711  005476  6ED9               	movwf	fsr2l,c
 10712  005478  50E2               	movf	fsr1h,w,c
 10713  00547A  6EDA               	movwf	fsr2h,c
 10714  00547C  0EFF               	movlw	255
 10715  00547E  22DA               	addwfc	fsr2h,f,c
 10716  005480  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 10717  005486  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 10718  00548C  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 10719                           
 10720                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10721  005492  52E5               	movf	postdec1,f,c
 10722  005494  52E5               	movf	postdec1,f,c
 10723  005496  52E5               	movf	postdec1,f,c
 10724  005498  0012               	return		;funcret
 10725  00549A                     __end_of_UART2_SetRxInterruptHandler:
 10726                           	opt callstack 0
 10727                           
 10728 ;; *************** function _UART1_Initialize *****************
 10729 ;; Defined at:
 10730 ;;		line 78 in file "mcc_generated_files/uart1.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;		None
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;		None
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  1  [STACK] void 
 10737 ;; Registers used:
 10738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10739 ;; Tracked objects:
 10740 ;;		On entry : 3F/3C
 10741 ;;		On exit  : 3F/39
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10748 ;;Total ram usage:        0 bytes
 10749 ;; Hardware stack levels used:    1
 10750 ;; Hardware stack levels required when called:    4
 10751 ;; This function calls:
 10752 ;;		_UART1_SetRxInterruptHandler
 10753 ;;		_UART1_SetTxInterruptHandler
 10754 ;; This function is called by:
 10755 ;;		_SYSTEM_Initialize
 10756 ;; This function uses a reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text51
 10760  004DF8                     __ptext51:
 10761                           	opt callstack 0
 10762  004DF8                     _UART1_Initialize:
 10763                           	opt callstack 25
 10764                           
 10765                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 10766                           
 10767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10768                           ;incstack = 0
 10769  004DF8  0139               	movlb	57	; () banked
 10770  004DFA  9793               	bcf	147,3,b	;volatile
 10771                           
 10772                           ; BSR set to: 57
 10773                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10774  004DFC  0E90               	movlw	low _UART1_Receive_ISR
 10775  004DFE  6EE6               	movwf	postinc1,c
 10776  004E00  0E57               	movlw	high _UART1_Receive_ISR
 10777  004E02  6EE6               	movwf	postinc1,c
 10778  004E04  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10779  004E06  6EE6               	movwf	postinc1,c
 10780  004E08  EC61  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
 10781                           
 10782                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 10783  004E0C  0139               	movlb	57	; () banked
 10784  004E0E  9993               	bcf	147,4,b	;volatile
 10785                           
 10786                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10787  004E10  0ED2               	movlw	low _UART1_Transmit_ISR
 10788  004E12  6EE6               	movwf	postinc1,c
 10789  004E14  0E52               	movlw	high _UART1_Transmit_ISR
 10790  004E16  6EE6               	movwf	postinc1,c
 10791  004E18  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10792  004E1A  6EE6               	movwf	postinc1,c
 10793  004E1C  EC4D  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
 10794                           
 10795                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 10796  004E20  013D               	movlb	61	; () banked
 10797  004E22  6BEC               	clrf	236,b	;volatile
 10798                           
 10799                           ; BSR set to: 61
 10800                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 10801  004E24  6BED               	clrf	237,b	;volatile
 10802                           
 10803                           ; BSR set to: 61
 10804                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 10805  004E26  6BEE               	clrf	238,b	;volatile
 10806                           
 10807                           ; BSR set to: 61
 10808                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 10809  004E28  6BEF               	clrf	239,b	;volatile
 10810                           
 10811                           ; BSR set to: 61
 10812                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 10813  004E2A  6BF0               	clrf	240,b	;volatile
 10814                           
 10815                           ; BSR set to: 61
 10816                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 10817  004E2C  6BF1               	clrf	241,b	;volatile
 10818                           
 10819                           ; BSR set to: 61
 10820                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 10821  004E2E  0EB0               	movlw	176
 10822  004E30  6FF2               	movwf	242,b	;volatile
 10823                           
 10824                           ; BSR set to: 61
 10825                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 10826  004E32  0E80               	movlw	128
 10827  004E34  6FF3               	movwf	243,b	;volatile
 10828                           
 10829                           ; BSR set to: 61
 10830                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 10831  004E36  6BF4               	clrf	244,b	;volatile
 10832                           
 10833                           ; BSR set to: 61
 10834                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 10835  004E38  0E82               	movlw	130
 10836  004E3A  6FF5               	movwf	245,b	;volatile
 10837                           
 10838                           ; BSR set to: 61
 10839                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 10840  004E3C  0E06               	movlw	6
 10841  004E3E  6FF6               	movwf	246,b	;volatile
 10842                           
 10843                           ; BSR set to: 61
 10844                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 10845  004E40  6BF7               	clrf	247,b	;volatile
 10846                           
 10847                           ; BSR set to: 61
 10848                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 10849  004E42  6BF8               	clrf	248,b	;volatile
 10850                           
 10851                           ; BSR set to: 61
 10852                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 10853  004E44  6BF9               	clrf	249,b	;volatile
 10854                           
 10855                           ; BSR set to: 61
 10856                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 10857  004E46  6BFA               	clrf	250,b	;volatile
 10858                           
 10859                           ; BSR set to: 61
 10860                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 10861  004E48  6A3D               	clrf	_uart1TxHead,c	;volatile
 10862                           
 10863                           ; BSR set to: 61
 10864                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 10865  004E4A  6A3C               	clrf	_uart1TxTail,c	;volatile
 10866                           
 10867                           ; BSR set to: 61
 10868                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10869  004E4C  0E40               	movlw	64
 10870  004E4E  6E3B               	movwf	_uart1TxBufferRemaining,c	;volatile
 10871                           
 10872                           ; BSR set to: 61
 10873                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 10874  004E50  6A3A               	clrf	_uart1RxHead,c	;volatile
 10875                           
 10876                           ; BSR set to: 61
 10877                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 10878  004E52  6A39               	clrf	_uart1RxTail,c	;volatile
 10879                           
 10880                           ; BSR set to: 61
 10881                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 10882  004E54  6A38               	clrf	_uart1RxCount,c	;volatile
 10883                           
 10884                           ; BSR set to: 61
 10885                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 10886  004E56  0139               	movlb	57	; () banked
 10887  004E58  8793               	bsf	147,3,b	;volatile
 10888                           
 10889                           ; BSR set to: 57
 10890                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10891  004E5A  0012               	return		;funcret
 10892  004E5C                     __end_of_UART1_Initialize:
 10893                           	opt callstack 0
 10894                           
 10895 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10896 ;; Defined at:
 10897 ;;		line 244 in file "mcc_generated_files/uart1.c"
 10898 ;; Parameters:    Size  Location     Type
 10899 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10900 ;;		 -> UART1_Transmit_ISR(1), 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1  [STACK] void 
 10905 ;; Registers used:
 10906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10907 ;; Tracked objects:
 10908 ;;		On entry : 3F/39
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10916 ;;Total ram usage:        0 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    3
 10919 ;; This function calls:
 10920 ;;		Nothing
 10921 ;; This function is called by:
 10922 ;;		_UART1_Initialize
 10923 ;; This function uses a reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text52
 10927  00549A                     __ptext52:
 10928                           	opt callstack 0
 10929  00549A                     _UART1_SetTxInterruptHandler:
 10930                           	opt callstack 25
 10931                           
 10932                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10933                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10934                           
 10935                           ; BSR set to: 57
 10936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10937                           ;incstack = 0
 10938  00549A  50E1               	movf	fsr1l,w,c
 10939  00549C  0FFD               	addlw	-3
 10940  00549E  6ED9               	movwf	fsr2l,c
 10941  0054A0  50E2               	movf	fsr1h,w,c
 10942  0054A2  6EDA               	movwf	fsr2h,c
 10943  0054A4  0EFF               	movlw	255
 10944  0054A6  22DA               	addwfc	fsr2h,f,c
 10945  0054A8  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 10946  0054AE  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 10947  0054B4  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 10948                           
 10949                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10950  0054BA  52E5               	movf	postdec1,f,c
 10951  0054BC  52E5               	movf	postdec1,f,c
 10952  0054BE  52E5               	movf	postdec1,f,c
 10953  0054C0  0012               	return		;funcret
 10954  0054C2                     __end_of_UART1_SetTxInterruptHandler:
 10955                           	opt callstack 0
 10956                           
 10957 ;; *************** function _UART1_SetRxInterruptHandler *****************
 10958 ;; Defined at:
 10959 ;;		line 239 in file "mcc_generated_files/uart1.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10962 ;;		 -> UART1_Receive_ISR(1), 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;		None
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1  [STACK] void 
 10967 ;; Registers used:
 10968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10969 ;; Tracked objects:
 10970 ;;		On entry : 3F/39
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10978 ;;Total ram usage:        0 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:    3
 10981 ;; This function calls:
 10982 ;;		Nothing
 10983 ;; This function is called by:
 10984 ;;		_UART1_Initialize
 10985 ;; This function uses a reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text53
 10989  0054C2                     __ptext53:
 10990                           	opt callstack 0
 10991  0054C2                     _UART1_SetRxInterruptHandler:
 10992                           	opt callstack 25
 10993                           
 10994                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 10995                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10996                           
 10997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10998                           ;incstack = 0
 10999  0054C2  50E1               	movf	fsr1l,w,c
 11000  0054C4  0FFD               	addlw	-3
 11001  0054C6  6ED9               	movwf	fsr2l,c
 11002  0054C8  50E2               	movf	fsr1h,w,c
 11003  0054CA  6EDA               	movwf	fsr2h,c
 11004  0054CC  0EFF               	movlw	255
 11005  0054CE  22DA               	addwfc	fsr2h,f,c
 11006  0054D0  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 11007  0054D6  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 11008  0054DC  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 11009                           
 11010                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11011  0054E2  52E5               	movf	postdec1,f,c
 11012  0054E4  52E5               	movf	postdec1,f,c
 11013  0054E6  52E5               	movf	postdec1,f,c
 11014  0054E8  0012               	return		;funcret
 11015  0054EA                     __end_of_UART1_SetRxInterruptHandler:
 11016                           	opt callstack 0
 11017                           
 11018 ;; *************** function _TMR6_Initialize *****************
 11019 ;; Defined at:
 11020 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;		None
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;		None
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1  [STACK] void 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11029 ;; Tracked objects:
 11030 ;;		On entry : 3F/39
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11038 ;;Total ram usage:        0 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    4
 11041 ;; This function calls:
 11042 ;;		_TMR6_SetInterruptHandler
 11043 ;; This function is called by:
 11044 ;;		_SYSTEM_Initialize
 11045 ;; This function uses a reentrant model
 11046 ;;
 11047                           
 11048                           	psect	text54
 11049  0054EA                     __ptext54:
 11050                           	opt callstack 0
 11051  0054EA                     _TMR6_Initialize:
 11052                           	opt callstack 25
 11053                           
 11054                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 11055                           
 11056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11057                           ;incstack = 0
 11058  0054EA  0E01               	movlw	1
 11059  0054EC  6E96               	movwf	16278,c	;volatile
 11060                           
 11061                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 11062  0054EE  6A95               	clrf	16277,c	;volatile
 11063                           
 11064                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 11065  0054F0  6A97               	clrf	16279,c	;volatile
 11066                           
 11067                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 11068  0054F2  0E03               	movlw	3
 11069  0054F4  6E93               	movwf	16275,c	;volatile
 11070                           
 11071                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 11072  0054F6  6A92               	clrf	16274,c	;volatile
 11073                           
 11074                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 11075  0054F8  0139               	movlb	57	; () banked
 11076  0054FA  91A9               	bcf	169,0,b	;volatile
 11077                           
 11078                           ; BSR set to: 57
 11079                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 11080  0054FC  8199               	bsf	153,0,b	;volatile
 11081                           
 11082                           ; BSR set to: 57
 11083                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 11084  0054FE  0EE8               	movlw	low _TMR6_DefaultInterruptHandler
 11085  005500  6EE6               	movwf	postinc1,c
 11086  005502  0E50               	movlw	high _TMR6_DefaultInterruptHandler
 11087  005504  6EE6               	movwf	postinc1,c
 11088  005506  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11089  005508  6EE6               	movwf	postinc1,c
 11090  00550A  EC89  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
 11091                           
 11092                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 11093  00550E  6894               	setf	16276,c	;volatile
 11094                           
 11095                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11096  005510  0012               	return		;funcret
 11097  005512                     __end_of_TMR6_Initialize:
 11098                           	opt callstack 0
 11099                           
 11100 ;; *************** function _TMR6_SetInterruptHandler *****************
 11101 ;; Defined at:
 11102 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11105 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1  [STACK] void 
 11110 ;; Registers used:
 11111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11112 ;; Tracked objects:
 11113 ;;		On entry : 3F/39
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11121 ;;Total ram usage:        0 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    3
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_TMR6_Initialize
 11128 ;; This function uses a reentrant model
 11129 ;;
 11130                           
 11131                           	psect	text55
 11132  005512                     __ptext55:
 11133                           	opt callstack 0
 11134  005512                     _TMR6_SetInterruptHandler:
 11135                           	opt callstack 25
 11136                           
 11137                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 11138                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11139                           
 11140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11141                           ;incstack = 0
 11142  005512  50E1               	movf	fsr1l,w,c
 11143  005514  0FFD               	addlw	-3
 11144  005516  6ED9               	movwf	fsr2l,c
 11145  005518  50E2               	movf	fsr1h,w,c
 11146  00551A  6EDA               	movwf	fsr2h,c
 11147  00551C  0EFF               	movlw	255
 11148  00551E  22DA               	addwfc	fsr2h,f,c
 11149  005520  006F FF78  F007    	movff	postinc2,_TMR6_InterruptHandler
 11150  005526  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler+1
 11151  00552C  006F FF74  F009    	movff	postdec2,_TMR6_InterruptHandler+2
 11152                           
 11153                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11154  005532  52E5               	movf	postdec1,f,c
 11155  005534  52E5               	movf	postdec1,f,c
 11156  005536  52E5               	movf	postdec1,f,c
 11157  005538  0012               	return		;funcret
 11158  00553A                     __end_of_TMR6_SetInterruptHandler:
 11159                           	opt callstack 0
 11160                           
 11161 ;; *************** function _TMR5_Initialize *****************
 11162 ;; Defined at:
 11163 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;		None
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;		None
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  1  [STACK] void 
 11170 ;; Registers used:
 11171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11172 ;; Tracked objects:
 11173 ;;		On entry : 3F/3C
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11181 ;;Total ram usage:        0 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:    4
 11184 ;; This function calls:
 11185 ;;		_TMR5_SetInterruptHandler
 11186 ;; This function is called by:
 11187 ;;		_SYSTEM_Initialize
 11188 ;; This function uses a reentrant model
 11189 ;;
 11190                           
 11191                           	psect	text56
 11192  0050A2                     __ptext56:
 11193                           	opt callstack 0
 11194  0050A2                     _TMR5_Initialize:
 11195                           	opt callstack 25
 11196                           
 11197                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 11198                           
 11199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11200                           ;incstack = 0
 11201  0050A2  6A9B               	clrf	16283,c	;volatile
 11202                           
 11203                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 11204  0050A4  6A9C               	clrf	16284,c	;volatile
 11205                           
 11206                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 11207  0050A6  0E01               	movlw	1
 11208  0050A8  6E9D               	movwf	16285,c	;volatile
 11209                           
 11210                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 11211  0050AA  0E63               	movlw	99
 11212  0050AC  6E99               	movwf	16281,c	;volatile
 11213                           
 11214                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 11215  0050AE  0EC0               	movlw	192
 11216  0050B0  6E98               	movwf	16280,c	;volatile
 11217                           
 11218                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 11219  0050B2  5098               	movf	16280,w,c	;volatile
 11220  0050B4  006F FE64  F03E    	movff	16281,btemp	;volatile
 11221  0050BA  6A3F               	clrf	btemp+1,c
 11222  0050BC  0060  F0F8  F03F   	movff	btemp,btemp+1
 11223  0050C2  6A3E               	clrf	btemp,c
 11224  0050C4  103E               	iorwf	btemp,w,c
 11225  0050C6  6E2E               	movwf	_timer5ReloadVal,c	;volatile
 11226  0050C8  503F               	movf	btemp+1,w,c
 11227  0050CA  6E2F               	movwf	_timer5ReloadVal+1,c	;volatile
 11228                           
 11229                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 11230  0050CC  0139               	movlb	57	; () banked
 11231  0050CE  9DA8               	bcf	168,6,b	;volatile
 11232                           
 11233                           ; BSR set to: 57
 11234                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 11235  0050D0  8D98               	bsf	152,6,b	;volatile
 11236                           
 11237                           ; BSR set to: 57
 11238                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 11239  0050D2  0E76               	movlw	low _TMR5_DefaultInterruptHandler
 11240  0050D4  6EE6               	movwf	postinc1,c
 11241  0050D6  0E58               	movlw	high _TMR5_DefaultInterruptHandler
 11242  0050D8  6EE6               	movwf	postinc1,c
 11243  0050DA  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 11244  0050DC  6EE6               	movwf	postinc1,c
 11245  0050DE  EC9D  F02A         	call	_TMR5_SetInterruptHandler	;wreg free
 11246                           
 11247                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 11248  0050E2  0E31               	movlw	49
 11249  0050E4  6E9A               	movwf	16282,c	;volatile
 11250                           
 11251                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11252  0050E6  0012               	return		;funcret
 11253  0050E8                     __end_of_TMR5_Initialize:
 11254                           	opt callstack 0
 11255                           
 11256 ;; *************** function _TMR5_SetInterruptHandler *****************
 11257 ;; Defined at:
 11258 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11261 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1  [STACK] void 
 11266 ;; Registers used:
 11267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11268 ;; Tracked objects:
 11269 ;;		On entry : 3F/39
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11277 ;;Total ram usage:        0 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:    3
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_TMR5_Initialize
 11284 ;; This function uses a reentrant model
 11285 ;;
 11286                           
 11287                           	psect	text57
 11288  00553A                     __ptext57:
 11289                           	opt callstack 0
 11290  00553A                     _TMR5_SetInterruptHandler:
 11291                           	opt callstack 25
 11292                           
 11293                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 11294                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11295                           
 11296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11297                           ;incstack = 0
 11298  00553A  50E1               	movf	fsr1l,w,c
 11299  00553C  0FFD               	addlw	-3
 11300  00553E  6ED9               	movwf	fsr2l,c
 11301  005540  50E2               	movf	fsr1h,w,c
 11302  005542  6EDA               	movwf	fsr2h,c
 11303  005544  0EFF               	movlw	255
 11304  005546  22DA               	addwfc	fsr2h,f,c
 11305  005548  006F FF78  F004    	movff	postinc2,_TMR5_InterruptHandler
 11306  00554E  006F FF78  F005    	movff	postinc2,_TMR5_InterruptHandler+1
 11307  005554  006F FF74  F006    	movff	postdec2,_TMR5_InterruptHandler+2
 11308                           
 11309                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11310  00555A  52E5               	movf	postdec1,f,c
 11311  00555C  52E5               	movf	postdec1,f,c
 11312  00555E  52E5               	movf	postdec1,f,c
 11313  005560  0012               	return		;funcret
 11314  005562                     __end_of_TMR5_SetInterruptHandler:
 11315                           	opt callstack 0
 11316                           
 11317 ;; *************** function _SPI1_Initialize *****************
 11318 ;; Defined at:
 11319 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;		None
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  1  [STACK] void 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2
 11328 ;; Tracked objects:
 11329 ;;		On entry : 3F/39
 11330 ;;		On exit  : 3F/3D
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11337 ;;Total ram usage:        0 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    3
 11340 ;; This function calls:
 11341 ;;		Nothing
 11342 ;; This function is called by:
 11343 ;;		_SYSTEM_Initialize
 11344 ;; This function uses a reentrant model
 11345 ;;
 11346                           
 11347                           	psect	text58
 11348  0058A6                     __ptext58:
 11349                           	opt callstack 0
 11350  0058A6                     _SPI1_Initialize:
 11351                           	opt callstack 26
 11352                           
 11353                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11354                           
 11355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11356                           ;incstack = 0
 11357  0058A6  0E40               	movlw	64
 11358  0058A8  013D               	movlb	61	; () banked
 11359  0058AA  6F15               	movwf	21,b	;volatile
 11360                           
 11361                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11362  0058AC  0E03               	movlw	3
 11363  0058AE  6F16               	movwf	22,b	;volatile
 11364                           
 11365                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11366  0058B0  0E4F               	movlw	79
 11367  0058B2  6F19               	movwf	25,b	;volatile
 11368                           
 11369                           ; BSR set to: 61
 11370                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11371  0058B4  6B1C               	clrf	28,b	;volatile
 11372                           
 11373                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11374  0058B6  0E83               	movlw	131
 11375  0058B8  6F14               	movwf	20,b	;volatile
 11376                           
 11377                           ; BSR set to: 61
 11378                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11379  0058BA  0012               	return		;funcret
 11380  0058BC                     __end_of_SPI1_Initialize:
 11381                           	opt callstack 0
 11382                           
 11383 ;; *************** function _PMD_Initialize *****************
 11384 ;; Defined at:
 11385 ;;		line 88 in file "mcc_generated_files/mcc.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;		None
 11388 ;; Auto vars:     Size  Location     Type
 11389 ;;		None
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  1  [STACK] void 
 11392 ;; Registers used:
 11393 ;;		None
 11394 ;; Tracked objects:
 11395 ;;		On entry : 3F/39
 11396 ;;		On exit  : 3F/39
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11403 ;;Total ram usage:        0 bytes
 11404 ;; Hardware stack levels used:    1
 11405 ;; Hardware stack levels required when called:    3
 11406 ;; This function calls:
 11407 ;;		Nothing
 11408 ;; This function is called by:
 11409 ;;		_SYSTEM_Initialize
 11410 ;; This function uses a reentrant model
 11411 ;;
 11412                           
 11413                           	psect	text59
 11414  0058D2                     __ptext59:
 11415                           	opt callstack 0
 11416  0058D2                     _PMD_Initialize:
 11417                           	opt callstack 26
 11418                           
 11419                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 11420                           
 11421                           ; BSR set to: 61
 11422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11423                           ;incstack = 0
 11424  0058D2  0139               	movlb	57	; () banked
 11425  0058D4  6BC0               	clrf	192,b	;volatile
 11426                           
 11427                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 11428  0058D6  6BC1               	clrf	193,b	;volatile
 11429                           
 11430                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 11431  0058D8  6BC2               	clrf	194,b	;volatile
 11432                           
 11433                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 11434  0058DA  6BC3               	clrf	195,b	;volatile
 11435                           
 11436                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 11437  0058DC  6BC4               	clrf	196,b	;volatile
 11438                           
 11439                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 11440  0058DE  6BC5               	clrf	197,b	;volatile
 11441                           
 11442                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 11443  0058E0  6BC6               	clrf	198,b	;volatile
 11444                           
 11445                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 11446  0058E2  6BC7               	clrf	199,b	;volatile
 11447                           
 11448                           ; BSR set to: 57
 11449                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11450  0058E4  0012               	return		;funcret
 11451  0058E6                     __end_of_PMD_Initialize:
 11452                           	opt callstack 0
 11453                           
 11454 ;; *************** function _PIN_MANAGER_Initialize *****************
 11455 ;; Defined at:
 11456 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;		None
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;		None
 11461 ;; Return value:  Size  Location     Type
 11462 ;;                  1  [STACK] void 
 11463 ;; Registers used:
 11464 ;;		wreg, status,2
 11465 ;; Tracked objects:
 11466 ;;		On entry : 3F/39
 11467 ;;		On exit  : 3F/3A
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11474 ;;Total ram usage:        0 bytes
 11475 ;; Hardware stack levels used:    1
 11476 ;; Hardware stack levels required when called:    3
 11477 ;; This function calls:
 11478 ;;		Nothing
 11479 ;; This function is called by:
 11480 ;;		_SYSTEM_Initialize
 11481 ;; This function uses a reentrant model
 11482 ;;
 11483                           
 11484                           	psect	text60
 11485  004936                     __ptext60:
 11486                           	opt callstack 0
 11487  004936                     _PIN_MANAGER_Initialize:
 11488                           	opt callstack 26
 11489                           
 11490                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11491                           
 11492                           ; BSR set to: 57
 11493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11494                           ;incstack = 0
 11495  004936  0E07               	movlw	7
 11496  004938  6EBE               	movwf	16318,c	;volatile
 11497                           
 11498                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11499  00493A  6ABD               	clrf	16317,c	;volatile
 11500                           
 11501                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11502  00493C  6ABA               	clrf	16314,c	;volatile
 11503                           
 11504                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11505  00493E  6ABF               	clrf	16319,c	;volatile
 11506                           
 11507                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11508  004940  6ABB               	clrf	16315,c	;volatile
 11509                           
 11510                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 11511  004942  0E06               	movlw	6
 11512  004944  6EBC               	movwf	16316,c	;volatile
 11513                           
 11514                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11515  004946  6AC6               	clrf	16326,c	;volatile
 11516                           
 11517                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 11518  004948  68C7               	setf	16327,c	;volatile
 11519                           
 11520                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 11521  00494A  0E8F               	movlw	143
 11522  00494C  6EC2               	movwf	16322,c	;volatile
 11523                           
 11524                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11525  00494E  0EBF               	movlw	191
 11526  004950  6EC3               	movwf	16323,c	;volatile
 11527                           
 11528                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 11529  004952  0E91               	movlw	145
 11530  004954  6EC4               	movwf	16324,c	;volatile
 11531                           
 11532                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 11533  004956  0EFC               	movlw	252
 11534  004958  6EC5               	movwf	16325,c	;volatile
 11535                           
 11536                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 11537  00495A  0EF0               	movlw	240
 11538  00495C  013A               	movlb	58	; () banked
 11539  00495E  6F70               	movwf	112,b	;volatile
 11540                           
 11541                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 11542  004960  0E01               	movlw	1
 11543  004962  6F60               	movwf	96,b	;volatile
 11544                           
 11545                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 11546  004964  0E38               	movlw	56
 11547  004966  6F50               	movwf	80,b	;volatile
 11548                           
 11549                           ; BSR set to: 58
 11550                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11551  004968  6B80               	clrf	128,b	;volatile
 11552                           
 11553                           ; BSR set to: 58
 11554                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 11555  00496A  6990               	setf	144,b	;volatile
 11556                           
 11557                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 11558  00496C  0E8F               	movlw	143
 11559  00496E  6F40               	movwf	64,b	;volatile
 11560                           
 11561                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11562  004970  0E0C               	movlw	12
 11563  004972  6F71               	movwf	113,b	;volatile
 11564                           
 11565                           ; BSR set to: 58
 11566                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 11567  004974  6B91               	clrf	145,b	;volatile
 11568                           
 11569                           ; BSR set to: 58
 11570                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11571  004976  6B81               	clrf	129,b	;volatile
 11572                           
 11573                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11574  004978  0E87               	movlw	135
 11575  00497A  6F51               	movwf	81,b	;volatile
 11576                           
 11577                           ; BSR set to: 58
 11578                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11579  00497C  6B41               	clrf	65,b	;volatile
 11580                           
 11581                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 11582  00497E  0E90               	movlw	144
 11583  004980  6F61               	movwf	97,b	;volatile
 11584                           
 11585                           ; BSR set to: 58
 11586                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11587  004982  6B82               	clrf	130,b	;volatile
 11588                           
 11589                           ; BSR set to: 58
 11590                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11591  004984  6B92               	clrf	146,b	;volatile
 11592                           
 11593                           ; BSR set to: 58
 11594                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11595  004986  6B42               	clrf	66,b	;volatile
 11596                           
 11597                           ; BSR set to: 58
 11598                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11599  004988  6B52               	clrf	82,b	;volatile
 11600                           
 11601                           ; BSR set to: 58
 11602                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11603  00498A  6B62               	clrf	98,b	;volatile
 11604                           
 11605                           ; BSR set to: 58
 11606                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11607  00498C  6B72               	clrf	114,b	;volatile
 11608                           
 11609                           ; BSR set to: 58
 11610                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11611  00498E  6943               	setf	67,b	;volatile
 11612                           
 11613                           ; BSR set to: 58
 11614                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11615  004990  6953               	setf	83,b	;volatile
 11616                           
 11617                           ; BSR set to: 58
 11618                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11619  004992  6963               	setf	99,b	;volatile
 11620                           
 11621                           ; BSR set to: 58
 11622                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11623  004994  6973               	setf	115,b	;volatile
 11624                           
 11625                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11626  004996  0E07               	movlw	7
 11627  004998  6F83               	movwf	131,b	;volatile
 11628                           
 11629                           ; BSR set to: 58
 11630                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11631  00499A  6993               	setf	147,b	;volatile
 11632                           
 11633                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11634  00499C  0E0F               	movlw	15
 11635  00499E  6FE8               	movwf	232,b	;volatile
 11636                           
 11637                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 11638  0049A0  0E16               	movlw	22
 11639  0049A2  6F0E               	movwf	14,b	;volatile
 11640                           
 11641                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 11642  0049A4  0E1E               	movlw	30
 11643  0049A6  6F13               	movwf	19,b	;volatile
 11644                           
 11645                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 11646  0049A8  0E08               	movlw	8
 11647  0049AA  6FC0               	movwf	192,b	;volatile
 11648                           
 11649                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 11650  0049AC  0E0A               	movlw	10
 11651  0049AE  6FC2               	movwf	194,b	;volatile
 11652                           
 11653                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 11654  0049B0  0E09               	movlw	9
 11655  0049B2  6FC1               	movwf	193,b	;volatile
 11656                           
 11657                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 11658  0049B4  0E17               	movlw	23
 11659  0049B6  6FE5               	movwf	229,b	;volatile
 11660                           
 11661                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 11662  0049B8  0E13               	movlw	19
 11663  0049BA  6FDE               	movwf	222,b	;volatile
 11664                           
 11665                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 11666  0049BC  0E01               	movlw	1
 11667  0049BE  6F04               	movwf	4,b	;volatile
 11668                           
 11669                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 11670  0049C0  0E26               	movlw	38
 11671  0049C2  6F05               	movwf	5,b	;volatile
 11672                           
 11673                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 11674  0049C4  0E28               	movlw	40
 11675  0049C6  6F06               	movwf	6,b	;volatile
 11676                           
 11677                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 11678  0049C8  0E1F               	movlw	31
 11679  0049CA  6F15               	movwf	21,b	;volatile
 11680                           
 11681                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 11682  0049CC  0E13               	movlw	19
 11683  0049CE  6F16               	movwf	22,b	;volatile
 11684                           
 11685                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 11686  0049D0  0E14               	movlw	20
 11687  0049D2  6FDF               	movwf	223,b	;volatile
 11688                           
 11689                           ; BSR set to: 58
 11690                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11691  0049D4  0012               	return		;funcret
 11692  0049D6                     __end_of_PIN_MANAGER_Initialize:
 11693                           	opt callstack 0
 11694                           
 11695 ;; *************** function _OSCILLATOR_Initialize *****************
 11696 ;; Defined at:
 11697 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;		None
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;		None
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1  [STACK] void 
 11704 ;; Registers used:
 11705 ;;		wreg, status,2
 11706 ;; Tracked objects:
 11707 ;;		On entry : 3F/3A
 11708 ;;		On exit  : 3F/39
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11715 ;;Total ram usage:        0 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; Hardware stack levels required when called:    3
 11718 ;; This function calls:
 11719 ;;		Nothing
 11720 ;; This function is called by:
 11721 ;;		_SYSTEM_Initialize
 11722 ;; This function uses a reentrant model
 11723 ;;
 11724                           
 11725                           	psect	text61
 11726  0058BC                     __ptext61:
 11727                           	opt callstack 0
 11728  0058BC                     _OSCILLATOR_Initialize:
 11729                           	opt callstack 26
 11730                           
 11731                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 11732                           
 11733                           ; BSR set to: 58
 11734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11735                           ;incstack = 0
 11736  0058BC  0E20               	movlw	32
 11737  0058BE  0139               	movlb	57	; () banked
 11738  0058C0  6FD9               	movwf	217,b	;volatile
 11739                           
 11740                           ; BSR set to: 57
 11741                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 11742  0058C2  6BDB               	clrf	219,b	;volatile
 11743                           
 11744                           ; BSR set to: 57
 11745                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 11746  0058C4  6BDD               	clrf	221,b	;volatile
 11747                           
 11748                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 11749  0058C6  0E02               	movlw	2
 11750  0058C8  6FDF               	movwf	223,b	;volatile
 11751                           
 11752                           ; BSR set to: 57
 11753                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 11754  0058CA  6BDE               	clrf	222,b	;volatile
 11755  0058CC                     l194:
 11756                           
 11757                           ; BSR set to: 57
 11758                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 11759  0058CC  B1DC               	btfsc	220,0,b	;volatile
 11760  0058CE  0012               	return	
 11761  0058D0  D7FD               	goto	l194
 11762  0058D2                     __end_of_OSCILLATOR_Initialize:
 11763                           	opt callstack 0
 11764                           
 11765 ;; *************** function _NCO1_Initialize *****************
 11766 ;; Defined at:
 11767 ;;		line 58 in file "mcc_generated_files/nco1.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;		None
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;		None
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  1  [STACK] void 
 11774 ;; Registers used:
 11775 ;;		wreg, status,2
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/39
 11778 ;;		On exit  : 3F/3F
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11785 ;;Total ram usage:        0 bytes
 11786 ;; Hardware stack levels used:    1
 11787 ;; Hardware stack levels required when called:    3
 11788 ;; This function calls:
 11789 ;;		Nothing
 11790 ;; This function is called by:
 11791 ;;		_SYSTEM_Initialize
 11792 ;; This function uses a reentrant model
 11793 ;;
 11794                           
 11795                           	psect	text62
 11796  00580A                     __ptext62:
 11797                           	opt callstack 0
 11798  00580A                     _NCO1_Initialize:
 11799                           	opt callstack 26
 11800                           
 11801                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 11802                           
 11803                           ; BSR set to: 57
 11804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11805                           ;incstack = 0
 11806  00580A  013F               	movlb	63	; () banked
 11807  00580C  6B3E               	clrf	62,b	;volatile
 11808                           
 11809                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 11810  00580E  6B3F               	clrf	63,b	;volatile
 11811                           
 11812                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 11813  005810  6B3A               	clrf	58,b	;volatile
 11814                           
 11815                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 11816  005812  6B39               	clrf	57,b	;volatile
 11817                           
 11818                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 11819  005814  6B38               	clrf	56,b	;volatile
 11820                           
 11821                           ; BSR set to: 63
 11822                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 11823  005816  0E06               	movlw	6
 11824  005818  6F3D               	movwf	61,b	;volatile
 11825                           
 11826                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 11827  00581A  0EC7               	movlw	199
 11828  00581C  6F3C               	movwf	60,b	;volatile
 11829                           
 11830                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 11831  00581E  0EAE               	movlw	174
 11832  005820  6F3B               	movwf	59,b	;volatile
 11833                           
 11834                           ; BSR set to: 63
 11835                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 11836  005822  8F3E               	bsf	62,7,b	;volatile
 11837                           
 11838                           ; BSR set to: 63
 11839                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11840  005824  0012               	return		;funcret
 11841  005826                     __end_of_NCO1_Initialize:
 11842                           	opt callstack 0
 11843                           
 11844 ;; *************** function _INTERRUPT_Initialize *****************
 11845 ;; Defined at:
 11846 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;		None
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  state           1  [STACK] _Bool 
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  1  [STACK] void 
 11853 ;; Registers used:
 11854 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 3F/39
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11864 ;;Total ram usage:        0 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; Hardware stack levels required when called:    3
 11867 ;; This function calls:
 11868 ;;		Nothing
 11869 ;; This function is called by:
 11870 ;;		_SYSTEM_Initialize
 11871 ;; This function uses a reentrant model
 11872 ;;
 11873                           
 11874                           	psect	text63
 11875  004D92                     __ptext63:
 11876                           	opt callstack 0
 11877  004D92                     _INTERRUPT_Initialize:
 11878                           	opt callstack 0
 11879                           
 11880                           ; BSR set to: 63
 11881                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11882  004D92  52E6               	movf	postinc1,f,c
 11883                           
 11884                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11885                           
 11886                           ;incstack = 0
 11887  004D94  8AD2               	bsf	16338,5,c	;volatile
 11888                           
 11889                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11890  004D96  AED2               	btfss	16338,7,c	;volatile
 11891  004D98  D003               	goto	u940
 11892  004D9A  6A49               	clrf	btemp+11,c
 11893  004D9C  2A49               	incf	btemp+11,f,c
 11894  004D9E  D001               	goto	u958
 11895  004DA0                     u940:
 11896  004DA0  6A49               	clrf	btemp+11,c
 11897  004DA2                     u958:
 11898                           
 11899                           ;stkvar	_state @ sp[(-1)+0]
 11900  004DA2  0EFF               	movlw	-1
 11901  004DA4  0060  F127  FFE3   	movff	btemp+11,plusw1
 11902                           
 11903                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11904  004DAA  9ED2               	bcf	16338,7,c	;volatile
 11905                           
 11906                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11907  004DAC  0E55               	movlw	85
 11908  004DAE  6ED4               	movwf	16340,c	;volatile
 11909                           
 11910                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11911  004DB0  0EAA               	movlw	170
 11912  004DB2  6ED4               	movwf	16340,c	;volatile
 11913                           
 11914                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11915  004DB4  90D4               	bcf	16340,0,c	;volatile
 11916                           
 11917                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11918  004DB6  0138               	movlb	56	; () banked
 11919  004DB8  6B9F               	clrf	159,b	;volatile
 11920                           
 11921                           ; BSR set to: 56
 11922                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11923  004DBA  6B9E               	clrf	158,b	;volatile
 11924                           
 11925                           ; BSR set to: 56
 11926                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11927  004DBC  0E08               	movlw	8
 11928  004DBE  6F9D               	movwf	157,b	;volatile
 11929                           
 11930                           ; BSR set to: 56
 11931                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11932  004DC0  0E55               	movlw	85
 11933  004DC2  6ED4               	movwf	16340,c	;volatile
 11934                           
 11935                           ; BSR set to: 56
 11936                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11937  004DC4  0EAA               	movlw	170
 11938  004DC6  6ED4               	movwf	16340,c	;volatile
 11939                           
 11940                           ; BSR set to: 56
 11941                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11942  004DC8  80D4               	bsf	16340,0,c	;volatile
 11943                           
 11944                           ; BSR set to: 56
 11945                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11946                           ;stkvar	_state @ sp[(-1)+0]
 11947  004DCA  0EFF               	movlw	-1
 11948  004DCC  B0E3               	btfsc	plusw1,0,c
 11949  004DCE  D002               	bra	u965
 11950  004DD0  9ED2               	bcf	16338,7,c	;volatile
 11951  004DD2  D001               	bra	u966
 11952  004DD4                     u965:
 11953  004DD4  8ED2               	bsf	16338,7,c	;volatile
 11954  004DD6                     u966:
 11955                           
 11956                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 11957  004DD6  0139               	movlb	57	; () banked
 11958  004DD8  8782               	bsf	130,3,b	;volatile
 11959                           
 11960                           ; BSR set to: 57
 11961                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 11962  004DDA  8382               	bsf	130,1,b	;volatile
 11963                           
 11964                           ; BSR set to: 57
 11965                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 11966  004DDC  8182               	bsf	130,0,b	;volatile
 11967                           
 11968                           ; BSR set to: 57
 11969                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 11970  004DDE  8582               	bsf	130,2,b	;volatile
 11971                           
 11972                           ; BSR set to: 57
 11973                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 11974  004DE0  8786               	bsf	134,3,b	;volatile
 11975                           
 11976                           ; BSR set to: 57
 11977                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 11978  004DE2  8586               	bsf	134,2,b	;volatile
 11979                           
 11980                           ; BSR set to: 57
 11981                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 11982  004DE4  8983               	bsf	131,4,b	;volatile
 11983                           
 11984                           ; BSR set to: 57
 11985                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 11986  004DE6  8783               	bsf	131,3,b	;volatile
 11987                           
 11988                           ; BSR set to: 57
 11989                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 11990  004DE8  8181               	bsf	129,0,b	;volatile
 11991                           
 11992                           ; BSR set to: 57
 11993                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 11994  004DEA  8185               	bsf	133,0,b	;volatile
 11995                           
 11996                           ; BSR set to: 57
 11997                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 11998  004DEC  8B87               	bsf	135,5,b	;volatile
 11999                           
 12000                           ; BSR set to: 57
 12001                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 12002  004DEE  8189               	bsf	137,0,b	;volatile
 12003                           
 12004                           ; BSR set to: 57
 12005                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 12006  004DF0  8D88               	bsf	136,6,b	;volatile
 12007                           
 12008                           ; BSR set to: 57
 12009                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 12010  004DF2  8581               	bsf	129,2,b	;volatile
 12011                           
 12012                           ; BSR set to: 57
 12013                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12014  004DF4  52E5               	movf	postdec1,f,c
 12015  004DF6  0012               	return		;funcret
 12016  004DF8                     __end_of_INTERRUPT_Initialize:
 12017                           	opt callstack 0
 12018                           
 12019 ;; *************** function _EXT_INT_Initialize *****************
 12020 ;; Defined at:
 12021 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;		None
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;		None
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1  [STACK] void 
 12028 ;; Registers used:
 12029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12030 ;; Tracked objects:
 12031 ;;		On entry : 3F/3F
 12032 ;;		On exit  : 3F/39
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12039 ;;Total ram usage:        0 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; Hardware stack levels required when called:    4
 12042 ;; This function calls:
 12043 ;;		_INT0_SetInterruptHandler
 12044 ;;		_INT1_SetInterruptHandler
 12045 ;;		_INT2_SetInterruptHandler
 12046 ;; This function is called by:
 12047 ;;		_SYSTEM_Initialize
 12048 ;; This function uses a reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text64
 12052  004FC6                     __ptext64:
 12053                           	opt callstack 0
 12054  004FC6                     _EXT_INT_Initialize:
 12055                           	opt callstack 25
 12056                           
 12057                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 12058                           
 12059                           ; BSR set to: 57
 12060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12061                           ;incstack = 0
 12062  004FC6  0139               	movlb	57	; () banked
 12063  004FC8  91A1               	bcf	161,0,b	;volatile
 12064                           
 12065                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 12066  004FCA  90D2               	bcf	16338,0,c	;volatile
 12067                           
 12068                           ; BSR set to: 57
 12069                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 12070  004FCC  0E82               	movlw	low _INT0_DefaultInterruptHandler
 12071  004FCE  6EE6               	movwf	postinc1,c
 12072  004FD0  0E59               	movlw	high _INT0_DefaultInterruptHandler
 12073  004FD2  6EE6               	movwf	postinc1,c
 12074  004FD4  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 12075  004FD6  6EE6               	movwf	postinc1,c
 12076  004FD8  ECD9  F02A         	call	_INT0_SetInterruptHandler	;wreg free
 12077                           
 12078                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 12079  004FDC  0139               	movlb	57	; () banked
 12080  004FDE  8191               	bsf	145,0,b	;volatile
 12081                           
 12082                           ; BSR set to: 57
 12083                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 12084  004FE0  91A5               	bcf	165,0,b	;volatile
 12085                           
 12086                           ; BSR set to: 57
 12087                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 12088  004FE2  92D2               	bcf	16338,1,c	;volatile
 12089                           
 12090                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 12091  004FE4  0E84               	movlw	low _INT1_DefaultInterruptHandler
 12092  004FE6  6EE6               	movwf	postinc1,c
 12093  004FE8  0E59               	movlw	high _INT1_DefaultInterruptHandler
 12094  004FEA  6EE6               	movwf	postinc1,c
 12095  004FEC  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 12096  004FEE  6EE6               	movwf	postinc1,c
 12097  004FF0  ECC5  F02A         	call	_INT1_SetInterruptHandler	;wreg free
 12098                           
 12099                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 12100  004FF4  0139               	movlb	57	; () banked
 12101  004FF6  8195               	bsf	149,0,b	;volatile
 12102                           
 12103                           ; BSR set to: 57
 12104                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 12105  004FF8  9BA7               	bcf	167,5,b	;volatile
 12106                           
 12107                           ; BSR set to: 57
 12108                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 12109  004FFA  94D2               	bcf	16338,2,c	;volatile
 12110                           
 12111                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 12112  004FFC  0E86               	movlw	low _INT2_DefaultInterruptHandler
 12113  004FFE  6EE6               	movwf	postinc1,c
 12114  005000  0E59               	movlw	high _INT2_DefaultInterruptHandler
 12115  005002  6EE6               	movwf	postinc1,c
 12116  005004  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 12117  005006  6EE6               	movwf	postinc1,c
 12118  005008  ECB1  F02A         	call	_INT2_SetInterruptHandler	;wreg free
 12119                           
 12120                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 12121  00500C  0139               	movlb	57	; () banked
 12122  00500E  8B97               	bsf	151,5,b	;volatile
 12123                           
 12124                           ; BSR set to: 57
 12125                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12126  005010  0012               	return		;funcret
 12127  005012                     __end_of_EXT_INT_Initialize:
 12128                           	opt callstack 0
 12129                           
 12130 ;; *************** function _INT2_SetInterruptHandler *****************
 12131 ;; Defined at:
 12132 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 12133 ;; Parameters:    Size  Location     Type
 12134 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12135 ;;		 -> INT2_DefaultInterruptHandler(1), 
 12136 ;; Auto vars:     Size  Location     Type
 12137 ;;		None
 12138 ;; Return value:  Size  Location     Type
 12139 ;;                  1  [STACK] void 
 12140 ;; Registers used:
 12141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12142 ;; Tracked objects:
 12143 ;;		On entry : 3F/39
 12144 ;;		On exit  : 0/0
 12145 ;;		Unchanged: 0/0
 12146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12151 ;;Total ram usage:        0 bytes
 12152 ;; Hardware stack levels used:    1
 12153 ;; Hardware stack levels required when called:    3
 12154 ;; This function calls:
 12155 ;;		Nothing
 12156 ;; This function is called by:
 12157 ;;		_EXT_INT_Initialize
 12158 ;; This function uses a reentrant model
 12159 ;;
 12160                           
 12161                           	psect	text65
 12162  005562                     __ptext65:
 12163                           	opt callstack 0
 12164  005562                     _INT2_SetInterruptHandler:
 12165                           	opt callstack 25
 12166                           
 12167                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 12168                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12169                           
 12170                           ; BSR set to: 57
 12171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12172                           ;incstack = 0
 12173  005562  50E1               	movf	fsr1l,w,c
 12174  005564  0FFD               	addlw	-3
 12175  005566  6ED9               	movwf	fsr2l,c
 12176  005568  50E2               	movf	fsr1h,w,c
 12177  00556A  6EDA               	movwf	fsr2h,c
 12178  00556C  0EFF               	movlw	255
 12179  00556E  22DA               	addwfc	fsr2h,f,c
 12180  005570  006F FF78  F019    	movff	postinc2,_INT2_InterruptHandler
 12181  005576  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler+1
 12182  00557C  006F FF74  F01B    	movff	postdec2,_INT2_InterruptHandler+2
 12183                           
 12184                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12185  005582  52E5               	movf	postdec1,f,c
 12186  005584  52E5               	movf	postdec1,f,c
 12187  005586  52E5               	movf	postdec1,f,c
 12188  005588  0012               	return		;funcret
 12189  00558A                     __end_of_INT2_SetInterruptHandler:
 12190                           	opt callstack 0
 12191                           
 12192 ;; *************** function _INT1_SetInterruptHandler *****************
 12193 ;; Defined at:
 12194 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12197 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;		None
 12200 ;; Return value:  Size  Location     Type
 12201 ;;                  1  [STACK] void 
 12202 ;; Registers used:
 12203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12204 ;; Tracked objects:
 12205 ;;		On entry : 3F/39
 12206 ;;		On exit  : 0/0
 12207 ;;		Unchanged: 0/0
 12208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12213 ;;Total ram usage:        0 bytes
 12214 ;; Hardware stack levels used:    1
 12215 ;; Hardware stack levels required when called:    3
 12216 ;; This function calls:
 12217 ;;		Nothing
 12218 ;; This function is called by:
 12219 ;;		_EXT_INT_Initialize
 12220 ;; This function uses a reentrant model
 12221 ;;
 12222                           
 12223                           	psect	text66
 12224  00558A                     __ptext66:
 12225                           	opt callstack 0
 12226  00558A                     _INT1_SetInterruptHandler:
 12227                           	opt callstack 25
 12228                           
 12229                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 12230                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12231                           
 12232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12233                           ;incstack = 0
 12234  00558A  50E1               	movf	fsr1l,w,c
 12235  00558C  0FFD               	addlw	-3
 12236  00558E  6ED9               	movwf	fsr2l,c
 12237  005590  50E2               	movf	fsr1h,w,c
 12238  005592  6EDA               	movwf	fsr2h,c
 12239  005594  0EFF               	movlw	255
 12240  005596  22DA               	addwfc	fsr2h,f,c
 12241  005598  006F FF78  F01C    	movff	postinc2,_INT1_InterruptHandler
 12242  00559E  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler+1
 12243  0055A4  006F FF74  F01E    	movff	postdec2,_INT1_InterruptHandler+2
 12244                           
 12245                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12246  0055AA  52E5               	movf	postdec1,f,c
 12247  0055AC  52E5               	movf	postdec1,f,c
 12248  0055AE  52E5               	movf	postdec1,f,c
 12249  0055B0  0012               	return		;funcret
 12250  0055B2                     __end_of_INT1_SetInterruptHandler:
 12251                           	opt callstack 0
 12252                           
 12253 ;; *************** function _INT0_SetInterruptHandler *****************
 12254 ;; Defined at:
 12255 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 12256 ;; Parameters:    Size  Location     Type
 12257 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12258 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12259 ;; Auto vars:     Size  Location     Type
 12260 ;;		None
 12261 ;; Return value:  Size  Location     Type
 12262 ;;                  1  [STACK] void 
 12263 ;; Registers used:
 12264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12265 ;; Tracked objects:
 12266 ;;		On entry : 3F/39
 12267 ;;		On exit  : 0/0
 12268 ;;		Unchanged: 0/0
 12269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12274 ;;Total ram usage:        0 bytes
 12275 ;; Hardware stack levels used:    1
 12276 ;; Hardware stack levels required when called:    3
 12277 ;; This function calls:
 12278 ;;		Nothing
 12279 ;; This function is called by:
 12280 ;;		_EXT_INT_Initialize
 12281 ;; This function uses a reentrant model
 12282 ;;
 12283                           
 12284                           	psect	text67
 12285  0055B2                     __ptext67:
 12286                           	opt callstack 0
 12287  0055B2                     _INT0_SetInterruptHandler:
 12288                           	opt callstack 25
 12289                           
 12290                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 12291                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12292                           
 12293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12294                           ;incstack = 0
 12295  0055B2  50E1               	movf	fsr1l,w,c
 12296  0055B4  0FFD               	addlw	-3
 12297  0055B6  6ED9               	movwf	fsr2l,c
 12298  0055B8  50E2               	movf	fsr1h,w,c
 12299  0055BA  6EDA               	movwf	fsr2h,c
 12300  0055BC  0EFF               	movlw	255
 12301  0055BE  22DA               	addwfc	fsr2h,f,c
 12302  0055C0  006F FF78  F01F    	movff	postinc2,_INT0_InterruptHandler
 12303  0055C6  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler+1
 12304  0055CC  006F FF74  F021    	movff	postdec2,_INT0_InterruptHandler+2
 12305                           
 12306                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12307  0055D2  52E5               	movf	postdec1,f,c
 12308  0055D4  52E5               	movf	postdec1,f,c
 12309  0055D6  52E5               	movf	postdec1,f,c
 12310  0055D8  0012               	return		;funcret
 12311  0055DA                     __end_of_INT0_SetInterruptHandler:
 12312                           	opt callstack 0
 12313                           
 12314 ;; *************** function _DSM_Initialize *****************
 12315 ;; Defined at:
 12316 ;;		line 58 in file "mcc_generated_files/dsm.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;		None
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1  [STACK] void 
 12323 ;; Registers used:
 12324 ;;		wreg, status,2
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/3C
 12327 ;;		On exit  : 3F/3C
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12334 ;;Total ram usage:        0 bytes
 12335 ;; Hardware stack levels used:    1
 12336 ;; Hardware stack levels required when called:    3
 12337 ;; This function calls:
 12338 ;;		Nothing
 12339 ;; This function is called by:
 12340 ;;		_SYSTEM_Initialize
 12341 ;; This function uses a reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text68
 12345  005826                     __ptext68:
 12346                           	opt callstack 0
 12347  005826                     _DSM_Initialize:
 12348                           	opt callstack 26
 12349                           
 12350                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 12351                           
 12352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12353                           ;incstack = 0
 12354  005826  013C               	movlb	60	; () banked
 12355  005828  99FA               	bcf	250,4,b	;volatile
 12356                           
 12357                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 12358  00582A  81FB               	bsf	251,0,b	;volatile
 12359                           
 12360                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 12361  00582C  93FB               	bcf	251,1,b	;volatile
 12362                           
 12363                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 12364  00582E  89FB               	bsf	251,4,b	;volatile
 12365                           
 12366                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 12367  005830  9BFB               	bcf	251,5,b	;volatile
 12368                           
 12369                           ; BSR set to: 60
 12370                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 12371  005832  0E13               	movlw	19
 12372  005834  6FFC               	movwf	252,b	;volatile
 12373                           
 12374                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 12375  005836  0E0E               	movlw	14
 12376  005838  6FFE               	movwf	254,b	;volatile
 12377                           
 12378                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 12379  00583A  0E04               	movlw	4
 12380  00583C  6FFD               	movwf	253,b	;volatile
 12381                           
 12382                           ; BSR set to: 60
 12383                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 12384  00583E  8FFA               	bsf	250,7,b	;volatile
 12385                           
 12386                           ; BSR set to: 60
 12387                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12388  005840  0012               	return		;funcret
 12389  005842                     __end_of_DSM_Initialize:
 12390                           	opt callstack 0
 12391                           
 12392 ;; *************** function _DMA1_Initialize *****************
 12393 ;; Defined at:
 12394 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;		None
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;		None
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1  [STACK] void 
 12401 ;; Registers used:
 12402 ;;		wreg, status,2
 12403 ;; Tracked objects:
 12404 ;;		On entry : 3F/3D
 12405 ;;		On exit  : 3F/3B
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12412 ;;Total ram usage:        0 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:    3
 12415 ;; This function calls:
 12416 ;;		Nothing
 12417 ;; This function is called by:
 12418 ;;		_SYSTEM_Initialize
 12419 ;; This function uses a reentrant model
 12420 ;;
 12421                           
 12422                           	psect	text69
 12423  004D28                     __ptext69:
 12424                           	opt callstack 0
 12425  004D28                     _DMA1_Initialize:
 12426                           	opt callstack 26
 12427                           
 12428                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12429                           
 12430                           ; BSR set to: 60
 12431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12432                           ;incstack = 0
 12433  004D28  0E00               	movlw	0
 12434  004D2A  013B               	movlb	59	; () banked
 12435  004D2C  6FF9               	movwf	249,b	;volatile
 12436  004D2E  0E10               	movlw	16
 12437  004D30  6FFA               	movwf	250,b	;volatile
 12438  004D32  0E00               	movlw	0
 12439  004D34  6FFB               	movwf	251,b	;volatile
 12440                           
 12441                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12442  004D36  0E3D               	movlw	61
 12443  004D38  6FF1               	movwf	241,b	;volatile
 12444  004D3A  0E11               	movlw	17
 12445  004D3C  6FF0               	movwf	240,b	;volatile
 12446                           
 12447                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12448  004D3E  0E03               	movlw	3
 12449  004D40  6FFD               	movwf	253,b	;volatile
 12450                           
 12451                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12452  004D42  0E00               	movlw	0
 12453  004D44  6FF8               	movwf	248,b	;volatile
 12454  004D46  0E01               	movlw	1
 12455  004D48  6FF7               	movwf	247,b	;volatile
 12456                           
 12457                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12458  004D4A  0E00               	movlw	0
 12459  004D4C  6FEF               	movwf	239,b	;volatile
 12460  004D4E  0E01               	movlw	1
 12461  004D50  6FEE               	movwf	238,b	;volatile
 12462                           
 12463                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12464  004D52  0E15               	movlw	21
 12465  004D54  6FFF               	movwf	255,b	;volatile
 12466                           
 12467                           ; BSR set to: 59
 12468                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12469  004D56  6BFE               	clrf	254,b	;volatile
 12470                           
 12471                           ; BSR set to: 59
 12472                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12473  004D58  0139               	movlb	57	; () banked
 12474  004D5A  93A2               	bcf	162,1,b	;volatile
 12475                           
 12476                           ; BSR set to: 57
 12477                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12478  004D5C  91A2               	bcf	162,0,b	;volatile
 12479                           
 12480                           ; BSR set to: 57
 12481                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12482  004D5E  97A2               	bcf	162,3,b	;volatile
 12483                           
 12484                           ; BSR set to: 57
 12485                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12486  004D60  95A2               	bcf	162,2,b	;volatile
 12487                           
 12488                           ; BSR set to: 57
 12489                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12490  004D62  8392               	bsf	146,1,b	;volatile
 12491                           
 12492                           ; BSR set to: 57
 12493                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12494  004D64  8192               	bsf	146,0,b	;volatile
 12495                           
 12496                           ; BSR set to: 57
 12497                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12498  004D66  8792               	bsf	146,3,b	;volatile
 12499                           
 12500                           ; BSR set to: 57
 12501                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12502  004D68  8592               	bsf	146,2,b	;volatile
 12503                           
 12504                           ; BSR set to: 57
 12505                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12506  004D6A  6BF1               	clrf	241,b	;volatile
 12507                           
 12508                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12509  004D6C  0E01               	movlw	1
 12510  004D6E  6FF2               	movwf	242,b	;volatile
 12511                           
 12512                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12513  004D70  0E04               	movlw	4
 12514  004D72  6FF3               	movwf	243,b	;volatile
 12515                           
 12516                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12517  004D74  0E02               	movlw	2
 12518  004D76  6FF4               	movwf	244,b	;volatile
 12519                           
 12520                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12521  004D78  0E03               	movlw	3
 12522  004D7A  6FF7               	movwf	247,b	;volatile
 12523  004D7C  9ED2               	bcf	16338,7,c	;# 
 12524  004D7E  0139               	banksel	14831	;# 
 12525  004D80  0E55               	movlw	85	;# 
 12526  004D82  6FEF               	movwf	14831,b	;# 
 12527  004D84  0EAA               	movlw	170	;# 
 12528  004D86  6FEF               	movwf	14831,b	;# 
 12529  004D88  81EF               	bsf	14831,0,b	;# 
 12530  004D8A  8ED2               	bsf	16338,7,c	;# 
 12531                           
 12532                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12533  004D8C  013B               	movlb	59	; () banked
 12534  004D8E  6BFC               	clrf	252,b	;volatile
 12535                           
 12536                           ; BSR set to: 59
 12537                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12538  004D90  0012               	return		;funcret
 12539  004D92                     __end_of_DMA1_Initialize:
 12540                           	opt callstack 0
 12541                           
 12542 ;; *************** function _CLKREF_Initialize *****************
 12543 ;; Defined at:
 12544 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12545 ;; Parameters:    Size  Location     Type
 12546 ;;		None
 12547 ;; Auto vars:     Size  Location     Type
 12548 ;;		None
 12549 ;; Return value:  Size  Location     Type
 12550 ;;                  1  [STACK] void 
 12551 ;; Registers used:
 12552 ;;		wreg, status,2
 12553 ;; Tracked objects:
 12554 ;;		On entry : 3F/3B
 12555 ;;		On exit  : 3F/3C
 12556 ;;		Unchanged: 0/0
 12557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12562 ;;Total ram usage:        0 bytes
 12563 ;; Hardware stack levels used:    1
 12564 ;; Hardware stack levels required when called:    3
 12565 ;; This function calls:
 12566 ;;		Nothing
 12567 ;; This function is called by:
 12568 ;;		_SYSTEM_Initialize
 12569 ;; This function uses a reentrant model
 12570 ;;
 12571                           
 12572                           	psect	text70
 12573  005932                     __ptext70:
 12574                           	opt callstack 0
 12575  005932                     _CLKREF_Initialize:
 12576                           	opt callstack 26
 12577                           
 12578                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12579                           
 12580                           ; BSR set to: 59
 12581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12582                           ;incstack = 0
 12583  005932  013C               	movlb	60	; () banked
 12584  005934  6BE6               	clrf	230,b	;volatile
 12585                           
 12586                           ; BSR set to: 60
 12587                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12588  005936  0E94               	movlw	148
 12589  005938  6FE5               	movwf	229,b	;volatile
 12590                           
 12591                           ; BSR set to: 60
 12592                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12593  00593A  0012               	return		;funcret
 12594  00593C                     __end_of_CLKREF_Initialize:
 12595                           	opt callstack 0
 12596                           
 12597 ;; *************** function _CLC1_Initialize *****************
 12598 ;; Defined at:
 12599 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12600 ;; Parameters:    Size  Location     Type
 12601 ;;		None
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;		None
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1  [STACK] void 
 12606 ;; Registers used:
 12607 ;;		wreg, status,2
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/39
 12610 ;;		On exit  : 3F/3C
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12617 ;;Total ram usage:        0 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; Hardware stack levels required when called:    3
 12620 ;; This function calls:
 12621 ;;		Nothing
 12622 ;; This function is called by:
 12623 ;;		_SYSTEM_Initialize
 12624 ;; This function uses a reentrant model
 12625 ;;
 12626                           
 12627                           	psect	text71
 12628  0056C4                     __ptext71:
 12629                           	opt callstack 0
 12630  0056C4                     _CLC1_Initialize:
 12631                           	opt callstack 26
 12632                           
 12633                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 12634                           
 12635                           ; BSR set to: 60
 12636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12637                           ;incstack = 0
 12638  0056C4  013C               	movlb	60	; () banked
 12639  0056C6  6B75               	clrf	117,b	;volatile
 12640                           
 12641                           ; BSR set to: 60
 12642                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 12643  0056C8  0E04               	movlw	4
 12644  0056CA  6F76               	movwf	118,b	;volatile
 12645                           
 12646                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 12647  0056CC  0E04               	movlw	4
 12648  0056CE  6F77               	movwf	119,b	;volatile
 12649                           
 12650                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 12651  0056D0  0E04               	movlw	4
 12652  0056D2  6F78               	movwf	120,b	;volatile
 12653                           
 12654                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 12655  0056D4  0E04               	movlw	4
 12656  0056D6  6F79               	movwf	121,b	;volatile
 12657                           
 12658                           ; BSR set to: 60
 12659                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 12660  0056D8  6B7A               	clrf	122,b	;volatile
 12661                           
 12662                           ; BSR set to: 60
 12663                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 12664  0056DA  6B7B               	clrf	123,b	;volatile
 12665                           
 12666                           ; BSR set to: 60
 12667                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 12668  0056DC  6B7C               	clrf	124,b	;volatile
 12669                           
 12670                           ; BSR set to: 60
 12671                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 12672  0056DE  6B7D               	clrf	125,b	;volatile
 12673                           
 12674                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 12675  0056E0  0E81               	movlw	129
 12676  0056E2  6F74               	movwf	116,b	;volatile
 12677                           
 12678                           ; BSR set to: 60
 12679                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12680  0056E4  0012               	return		;funcret
 12681  0056E6                     __end_of_CLC1_Initialize:
 12682                           	opt callstack 0
 12683                           
 12684 ;; *************** function _ADCC_Initialize *****************
 12685 ;; Defined at:
 12686 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12687 ;; Parameters:    Size  Location     Type
 12688 ;;		None
 12689 ;; Auto vars:     Size  Location     Type
 12690 ;;		None
 12691 ;; Return value:  Size  Location     Type
 12692 ;;                  1  [STACK] void 
 12693 ;; Registers used:
 12694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12695 ;; Tracked objects:
 12696 ;;		On entry : 3F/39
 12697 ;;		On exit  : 0/0
 12698 ;;		Unchanged: 0/0
 12699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12704 ;;Total ram usage:        0 bytes
 12705 ;; Hardware stack levels used:    1
 12706 ;; Hardware stack levels required when called:    4
 12707 ;; This function calls:
 12708 ;;		_ADCC_SetADIInterruptHandler
 12709 ;; This function is called by:
 12710 ;;		_SYSTEM_Initialize
 12711 ;; This function uses a reentrant model
 12712 ;;
 12713                           
 12714                           	psect	text72
 12715  005012                     __ptext72:
 12716                           	opt callstack 0
 12717  005012                     _ADCC_Initialize:
 12718                           	opt callstack 25
 12719                           
 12720                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12721                           
 12722                           ; BSR set to: 60
 12723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12724                           ;incstack = 0
 12725  005012  013E               	movlb	62	; () banked
 12726  005014  6BDE               	clrf	222,b	;volatile
 12727                           
 12728                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12729  005016  6BDF               	clrf	223,b	;volatile
 12730                           
 12731                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12732  005018  6BE0               	clrf	224,b	;volatile
 12733                           
 12734                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12735  00501A  6BE1               	clrf	225,b	;volatile
 12736                           
 12737                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12738  00501C  6BE4               	clrf	228,b	;volatile
 12739                           
 12740                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12741  00501E  6BE5               	clrf	229,b	;volatile
 12742                           
 12743                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12744  005020  6BEA               	clrf	234,b	;volatile
 12745                           
 12746                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12747  005022  6BEC               	clrf	236,b	;volatile
 12748                           
 12749                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12750  005024  6BF1               	clrf	241,b	;volatile
 12751                           
 12752                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12753  005026  6BF3               	clrf	243,b	;volatile
 12754                           
 12755                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12756  005028  6BF4               	clrf	244,b	;volatile
 12757                           
 12758                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12759  00502A  6BF5               	clrf	245,b	;volatile
 12760                           
 12761                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12762  00502C  6BF6               	clrf	246,b	;volatile
 12763                           
 12764                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12765  00502E  6BF7               	clrf	247,b	;volatile
 12766                           
 12767                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12768  005030  6BF9               	clrf	249,b	;volatile
 12769                           
 12770                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12771  005032  6BFA               	clrf	250,b	;volatile
 12772                           
 12773                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12774  005034  6BFB               	clrf	251,b	;volatile
 12775                           
 12776                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12777  005036  6BFC               	clrf	252,b	;volatile
 12778                           
 12779                           ; BSR set to: 62
 12780                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 12781  005038  0E02               	movlw	2
 12782  00503A  6FFD               	movwf	253,b	;volatile
 12783                           
 12784                           ; BSR set to: 62
 12785                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12786  00503C  6BFE               	clrf	254,b	;volatile
 12787                           
 12788                           ; BSR set to: 62
 12789                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12790  00503E  6BFF               	clrf	255,b	;volatile
 12791                           
 12792                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 12793  005040  0E94               	movlw	148
 12794  005042  6FF8               	movwf	248,b	;volatile
 12795                           
 12796                           ; BSR set to: 62
 12797                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 12798  005044  0139               	movlb	57	; () banked
 12799  005046  95A1               	bcf	161,2,b	;volatile
 12800                           
 12801                           ; BSR set to: 57
 12802                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 12803  005048  8591               	bsf	145,2,b	;volatile
 12804                           
 12805                           ; BSR set to: 57
 12806                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12807  00504A  0E88               	movlw	low _ADCC_DefaultInterruptHandler
 12808  00504C  6EE6               	movwf	postinc1,c
 12809  00504E  0E59               	movlw	high _ADCC_DefaultInterruptHandler
 12810  005050  6EE6               	movwf	postinc1,c
 12811  005052  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12812  005054  6EE6               	movwf	postinc1,c
 12813  005056  ECED  F02A         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12814                           
 12815                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12816  00505A  0012               	return		;funcret
 12817  00505C                     __end_of_ADCC_Initialize:
 12818                           	opt callstack 0
 12819                           
 12820 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12821 ;; Defined at:
 12822 ;;		line 316 in file "mcc_generated_files/adcc.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12825 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;		None
 12828 ;; Return value:  Size  Location     Type
 12829 ;;                  1  [STACK] void 
 12830 ;; Registers used:
 12831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12832 ;; Tracked objects:
 12833 ;;		On entry : 3F/39
 12834 ;;		On exit  : 0/0
 12835 ;;		Unchanged: 0/0
 12836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12841 ;;Total ram usage:        0 bytes
 12842 ;; Hardware stack levels used:    1
 12843 ;; Hardware stack levels required when called:    3
 12844 ;; This function calls:
 12845 ;;		Nothing
 12846 ;; This function is called by:
 12847 ;;		_ADCC_Initialize
 12848 ;; This function uses a reentrant model
 12849 ;;
 12850                           
 12851                           	psect	text73
 12852  0055DA                     __ptext73:
 12853                           	opt callstack 0
 12854  0055DA                     _ADCC_SetADIInterruptHandler:
 12855                           	opt callstack 25
 12856                           
 12857                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12858                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12859                           
 12860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12861                           ;incstack = 0
 12862  0055DA  50E1               	movf	fsr1l,w,c
 12863  0055DC  0FFD               	addlw	-3
 12864  0055DE  6ED9               	movwf	fsr2l,c
 12865  0055E0  50E2               	movf	fsr1h,w,c
 12866  0055E2  6EDA               	movwf	fsr2h,c
 12867  0055E4  0EFF               	movlw	255
 12868  0055E6  22DA               	addwfc	fsr2h,f,c
 12869  0055E8  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12870  0055EE  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12871  0055F4  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12872                           
 12873                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12874  0055FA  52E5               	movf	postdec1,f,c
 12875  0055FC  52E5               	movf	postdec1,f,c
 12876  0055FE  52E5               	movf	postdec1,f,c
 12877  005600  0012               	return		;funcret
 12878  005602                     __end_of_ADCC_SetADIInterruptHandler:
 12879                           	opt callstack 0
 12880                           
 12881 ;; *************** function _INT0_ISR *****************
 12882 ;; Defined at:
 12883 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;		None
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;		None
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1    wreg      void 
 12890 ;; Registers used:
 12891 ;;		wreg, status,2, status,0, pclath, tosl
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12901 ;;Total ram usage:        0 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:    2
 12904 ;; This function calls:
 12905 ;;		_INT0_CallBack
 12906 ;; This function is called by:
 12907 ;;		Interrupt level 2
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           	psect	text74
 12912  0058F4                     __ptext74:
 12913                           	opt callstack 0
 12914  0058F4                     _INT0_ISR:
 12915                           	opt callstack 17
 12916                           
 12917                           ;incstack = 0
 12918  0058F4  EE13  F150         	lfsr	1,___inthi_sp
 12919                           
 12920                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 12921  0058F8  0139               	movlb	57	; () banked
 12922  0058FA  91A1               	bcf	161,0,b	;volatile
 12923                           
 12924                           ; BSR set to: 57
 12925                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 12926  0058FC  EC73  F02B         	call	_INT0_CallBack	;wreg free
 12927  005900  0011               	retfie		f
 12928  005902                     __end_of_INT0_ISR:
 12929                           	opt callstack 0
 12930                           
 12931 ;; *************** function _INT0_CallBack *****************
 12932 ;; Defined at:
 12933 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  1  [STACK] void 
 12940 ;; Registers used:
 12941 ;;		wreg, status,2, status,0, pclath, tosl
 12942 ;; Tracked objects:
 12943 ;;		On entry : 3F/39
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12951 ;;Total ram usage:        0 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    1
 12954 ;; This function calls:
 12955 ;;		Absolute function
 12956 ;;		_INT0_DefaultInterruptHandler
 12957 ;; This function is called by:
 12958 ;;		_INT0_ISR
 12959 ;; This function uses a reentrant model
 12960 ;;
 12961                           
 12962                           	psect	text75
 12963  0056E6                     __ptext75:
 12964                           	opt callstack 0
 12965  0056E6                     _INT0_CallBack:
 12966                           	opt callstack 17
 12967                           
 12968                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 12969                           
 12970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12971                           ;incstack = 0
 12972  0056E6  501F               	movf	_INT0_InterruptHandler,w,c
 12973  0056E8  1020               	iorwf	_INT0_InterruptHandler+1,w,c
 12974  0056EA  1021               	iorwf	_INT0_InterruptHandler+2,w,c
 12975  0056EC  B4D8               	btfsc	status,2,c
 12976  0056EE  0012               	return	
 12977                           
 12978                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 12979  0056F0  D801               	call	u111_48
 12980  0056F2  0012               	return	
 12981  0056F4                     u111_48:
 12982  0056F4  0005               	push	
 12983  0056F6  6EFA               	movwf	pclath,c
 12984  0056F8  501F               	movf	_INT0_InterruptHandler,w,c
 12985  0056FA  6EFD               	movwf	tosl,c
 12986  0056FC  5020               	movf	_INT0_InterruptHandler+1,w,c
 12987  0056FE  6EFE               	movwf	tosh,c
 12988  005700  5021               	movf	_INT0_InterruptHandler+2,w,c
 12989  005702  6EFF               	movwf	tosu,c
 12990  005704  50FA               	movf	pclath,w,c
 12991  005706  0012               	return		;indir
 12992  005708                     __end_of_INT0_CallBack:
 12993                           	opt callstack 0
 12994                           
 12995 ;; *************** function _INT0_DefaultInterruptHandler *****************
 12996 ;; Defined at:
 12997 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;		None
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;		None
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1  [STACK] void 
 13004 ;; Registers used:
 13005 ;;		None
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/39
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13015 ;;Total ram usage:        0 bytes
 13016 ;; Hardware stack levels used:    1
 13017 ;; This function calls:
 13018 ;;		Nothing
 13019 ;; This function is called by:
 13020 ;;		_EXT_INT_Initialize
 13021 ;;		_INT0_CallBack
 13022 ;; This function uses a reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text76
 13026  005982                     __ptext76:
 13027                           	opt callstack 0
 13028  005982                     _INT0_DefaultInterruptHandler:
 13029                           	opt callstack 17
 13030                           
 13031                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13032                           
 13033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13034                           ;incstack = 0
 13035  005982  0012               	return		;funcret
 13036  005984                     __end_of_INT0_DefaultInterruptHandler:
 13037                           	opt callstack 0
 13038                           
 13039 ;; *************** function _INT1_ISR *****************
 13040 ;; Defined at:
 13041 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;		None
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;		None
 13046 ;; Return value:  Size  Location     Type
 13047 ;;                  1    wreg      void 
 13048 ;; Registers used:
 13049 ;;		wreg, status,2, status,0, pclath, tosl
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;Total ram usage:        0 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; Hardware stack levels required when called:    2
 13062 ;; This function calls:
 13063 ;;		_INT1_CallBack
 13064 ;; This function is called by:
 13065 ;;		Interrupt level 2
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069                           	psect	text77
 13070  005904                     __ptext77:
 13071                           	opt callstack 0
 13072  005904                     _INT1_ISR:
 13073                           	opt callstack 17
 13074                           
 13075                           ;incstack = 0
 13076  005904  EE13  F150         	lfsr	1,___inthi_sp
 13077                           
 13078                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 13079  005908  0139               	movlb	57	; () banked
 13080  00590A  91A5               	bcf	165,0,b	;volatile
 13081                           
 13082                           ; BSR set to: 57
 13083                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 13084  00590C  EC84  F02B         	call	_INT1_CallBack	;wreg free
 13085  005910  0011               	retfie		f
 13086  005912                     __end_of_INT1_ISR:
 13087                           	opt callstack 0
 13088                           
 13089 ;; *************** function _INT1_CallBack *****************
 13090 ;; Defined at:
 13091 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;		None
 13094 ;; Auto vars:     Size  Location     Type
 13095 ;;		None
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  1  [STACK] void 
 13098 ;; Registers used:
 13099 ;;		wreg, status,2, status,0, pclath, tosl
 13100 ;; Tracked objects:
 13101 ;;		On entry : 3F/39
 13102 ;;		On exit  : 0/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13109 ;;Total ram usage:        0 bytes
 13110 ;; Hardware stack levels used:    1
 13111 ;; Hardware stack levels required when called:    1
 13112 ;; This function calls:
 13113 ;;		Absolute function
 13114 ;;		_INT1_DefaultInterruptHandler
 13115 ;; This function is called by:
 13116 ;;		_INT1_ISR
 13117 ;; This function uses a reentrant model
 13118 ;;
 13119                           
 13120                           	psect	text78
 13121  005708                     __ptext78:
 13122                           	opt callstack 0
 13123  005708                     _INT1_CallBack:
 13124                           	opt callstack 17
 13125                           
 13126                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 13127                           
 13128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13129                           ;incstack = 0
 13130  005708  501C               	movf	_INT1_InterruptHandler,w,c
 13131  00570A  101D               	iorwf	_INT1_InterruptHandler+1,w,c
 13132  00570C  101E               	iorwf	_INT1_InterruptHandler+2,w,c
 13133  00570E  B4D8               	btfsc	status,2,c
 13134  005710  0012               	return	
 13135                           
 13136                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 13137  005712  D801               	call	u113_48
 13138  005714  0012               	return	
 13139  005716                     u113_48:
 13140  005716  0005               	push	
 13141  005718  6EFA               	movwf	pclath,c
 13142  00571A  501C               	movf	_INT1_InterruptHandler,w,c
 13143  00571C  6EFD               	movwf	tosl,c
 13144  00571E  501D               	movf	_INT1_InterruptHandler+1,w,c
 13145  005720  6EFE               	movwf	tosh,c
 13146  005722  501E               	movf	_INT1_InterruptHandler+2,w,c
 13147  005724  6EFF               	movwf	tosu,c
 13148  005726  50FA               	movf	pclath,w,c
 13149  005728  0012               	return		;indir
 13150  00572A                     __end_of_INT1_CallBack:
 13151                           	opt callstack 0
 13152                           
 13153 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13154 ;; Defined at:
 13155 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;		None
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;		None
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1  [STACK] void 
 13162 ;; Registers used:
 13163 ;;		None
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/39
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13173 ;;Total ram usage:        0 bytes
 13174 ;; Hardware stack levels used:    1
 13175 ;; This function calls:
 13176 ;;		Nothing
 13177 ;; This function is called by:
 13178 ;;		_EXT_INT_Initialize
 13179 ;;		_INT1_CallBack
 13180 ;; This function uses a reentrant model
 13181 ;;
 13182                           
 13183                           	psect	text79
 13184  005984                     __ptext79:
 13185                           	opt callstack 0
 13186  005984                     _INT1_DefaultInterruptHandler:
 13187                           	opt callstack 17
 13188                           
 13189                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13190                           
 13191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13192                           ;incstack = 0
 13193  005984  0012               	return		;funcret
 13194  005986                     __end_of_INT1_DefaultInterruptHandler:
 13195                           	opt callstack 0
 13196                           
 13197 ;; *************** function _INT2_ISR *****************
 13198 ;; Defined at:
 13199 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 13200 ;; Parameters:    Size  Location     Type
 13201 ;;		None
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;		None
 13204 ;; Return value:  Size  Location     Type
 13205 ;;                  1    wreg      void 
 13206 ;; Registers used:
 13207 ;;		wreg, status,2, status,0, pclath, tosl
 13208 ;; Tracked objects:
 13209 ;;		On entry : 0/0
 13210 ;;		On exit  : 0/0
 13211 ;;		Unchanged: 0/0
 13212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13217 ;;Total ram usage:        0 bytes
 13218 ;; Hardware stack levels used:    1
 13219 ;; Hardware stack levels required when called:    2
 13220 ;; This function calls:
 13221 ;;		_INT2_CallBack
 13222 ;; This function is called by:
 13223 ;;		Interrupt level 2
 13224 ;; This function uses a non-reentrant model
 13225 ;;
 13226                           
 13227                           	psect	text80
 13228  005914                     __ptext80:
 13229                           	opt callstack 0
 13230  005914                     _INT2_ISR:
 13231                           	opt callstack 17
 13232                           
 13233                           ;incstack = 0
 13234  005914  EE13  F150         	lfsr	1,___inthi_sp
 13235                           
 13236                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 13237  005918  0139               	movlb	57	; () banked
 13238  00591A  9BA7               	bcf	167,5,b	;volatile
 13239                           
 13240                           ; BSR set to: 57
 13241                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 13242  00591C  EC95  F02B         	call	_INT2_CallBack	;wreg free
 13243  005920  0011               	retfie		f
 13244  005922                     __end_of_INT2_ISR:
 13245                           	opt callstack 0
 13246                           
 13247 ;; *************** function _INT2_CallBack *****************
 13248 ;; Defined at:
 13249 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 13250 ;; Parameters:    Size  Location     Type
 13251 ;;		None
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;		None
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  1  [STACK] void 
 13256 ;; Registers used:
 13257 ;;		wreg, status,2, status,0, pclath, tosl
 13258 ;; Tracked objects:
 13259 ;;		On entry : 3F/39
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13267 ;;Total ram usage:        0 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    1
 13270 ;; This function calls:
 13271 ;;		Absolute function
 13272 ;;		_INT2_DefaultInterruptHandler
 13273 ;; This function is called by:
 13274 ;;		_INT2_ISR
 13275 ;; This function uses a reentrant model
 13276 ;;
 13277                           
 13278                           	psect	text81
 13279  00572A                     __ptext81:
 13280                           	opt callstack 0
 13281  00572A                     _INT2_CallBack:
 13282                           	opt callstack 17
 13283                           
 13284                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 13285                           
 13286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13287                           ;incstack = 0
 13288  00572A  5019               	movf	_INT2_InterruptHandler,w,c
 13289  00572C  101A               	iorwf	_INT2_InterruptHandler+1,w,c
 13290  00572E  101B               	iorwf	_INT2_InterruptHandler+2,w,c
 13291  005730  B4D8               	btfsc	status,2,c
 13292  005732  0012               	return	
 13293                           
 13294                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 13295  005734  D801               	call	u115_48
 13296  005736  0012               	return	
 13297  005738                     u115_48:
 13298  005738  0005               	push	
 13299  00573A  6EFA               	movwf	pclath,c
 13300  00573C  5019               	movf	_INT2_InterruptHandler,w,c
 13301  00573E  6EFD               	movwf	tosl,c
 13302  005740  501A               	movf	_INT2_InterruptHandler+1,w,c
 13303  005742  6EFE               	movwf	tosh,c
 13304  005744  501B               	movf	_INT2_InterruptHandler+2,w,c
 13305  005746  6EFF               	movwf	tosu,c
 13306  005748  50FA               	movf	pclath,w,c
 13307  00574A  0012               	return		;indir
 13308  00574C                     __end_of_INT2_CallBack:
 13309                           	opt callstack 0
 13310                           
 13311 ;; *************** function _INT2_DefaultInterruptHandler *****************
 13312 ;; Defined at:
 13313 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;		None
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1  [STACK] void 
 13320 ;; Registers used:
 13321 ;;		None
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/39
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13331 ;;Total ram usage:        0 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; This function calls:
 13334 ;;		Nothing
 13335 ;; This function is called by:
 13336 ;;		_EXT_INT_Initialize
 13337 ;;		_INT2_CallBack
 13338 ;; This function uses a reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text82
 13342  005986                     __ptext82:
 13343                           	opt callstack 0
 13344  005986                     _INT2_DefaultInterruptHandler:
 13345                           	opt callstack 17
 13346                           
 13347                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13348                           
 13349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13350                           ;incstack = 0
 13351  005986  0012               	return		;funcret
 13352  005988                     __end_of_INT2_DefaultInterruptHandler:
 13353                           	opt callstack 0
 13354                           
 13355 ;; *************** function _Default_ISR *****************
 13356 ;; Defined at:
 13357 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;		None
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;		None
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  1    wreg      void 
 13364 ;; Registers used:
 13365 ;;		None
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13375 ;;Total ram usage:        0 bytes
 13376 ;; Hardware stack levels used:    1
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		Interrupt level 2
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           	psect	text83
 13385  00597C                     __ptext83:
 13386                           	opt callstack 0
 13387  00597C                     _Default_ISR:
 13388                           	opt callstack 19
 13389                           
 13390                           ;incstack = 0
 13391  00597C  EE13  F150         	lfsr	1,___inthi_sp
 13392  005980  0011               	retfie		f
 13393  005982                     __end_of_Default_ISR:
 13394                           	opt callstack 0
 13395                           
 13396 ;; *************** function _ADCC_ISR *****************
 13397 ;; Defined at:
 13398 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;		None
 13401 ;; Auto vars:     Size  Location     Type
 13402 ;;		None
 13403 ;; Return value:  Size  Location     Type
 13404 ;;                  1    wreg      void 
 13405 ;; Registers used:
 13406 ;;		wreg, status,2, status,0, pclath, tosl
 13407 ;; Tracked objects:
 13408 ;;		On entry : 0/0
 13409 ;;		On exit  : 0/0
 13410 ;;		Unchanged: 0/0
 13411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13416 ;;Total ram usage:        0 bytes
 13417 ;; Hardware stack levels used:    1
 13418 ;; Hardware stack levels required when called:    1
 13419 ;; This function calls:
 13420 ;;		Absolute function
 13421 ;;		_ADCC_DefaultInterruptHandler
 13422 ;; This function is called by:
 13423 ;;		Interrupt level 2
 13424 ;; This function uses a non-reentrant model
 13425 ;;
 13426                           
 13427                           	psect	text84
 13428  005380                     __ptext84:
 13429                           	opt callstack 0
 13430  005380                     _ADCC_ISR:
 13431                           	opt callstack 18
 13432                           
 13433                           ;incstack = 0
 13434  005380  EE13  F150         	lfsr	1,___inthi_sp
 13435                           
 13436                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13437  005384  0139               	movlb	57	; () banked
 13438  005386  95A1               	bcf	161,2,b	;volatile
 13439                           
 13440                           ; BSR set to: 57
 13441                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13442  005388  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 13443  00538A  100B               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 13444  00538C  100C               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 13445  00538E  B4D8               	btfsc	status,2,c
 13446  005390  0011               	retfie		f
 13447                           
 13448                           ; BSR set to: 57
 13449                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13450  005392  D801               	call	i2u156_48
 13451  005394  0011               	retfie		f
 13452  005396                     i2u156_48:
 13453  005396  0005               	push	
 13454  005398  6EFA               	movwf	pclath,c
 13455  00539A  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 13456  00539C  6EFD               	movwf	tosl,c
 13457  00539E  500B               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 13458  0053A0  6EFE               	movwf	tosh,c
 13459  0053A2  500C               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 13460  0053A4  6EFF               	movwf	tosu,c
 13461  0053A6  50FA               	movf	pclath,w,c
 13462  0053A8  0012               	return		;indir
 13463  0053AA                     __end_of_ADCC_ISR:
 13464                           	opt callstack 0
 13465                           
 13466 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13467 ;; Defined at:
 13468 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;		None
 13471 ;; Auto vars:     Size  Location     Type
 13472 ;;		None
 13473 ;; Return value:  Size  Location     Type
 13474 ;;                  1  [STACK] void 
 13475 ;; Registers used:
 13476 ;;		None
 13477 ;; Tracked objects:
 13478 ;;		On entry : 3F/39
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13486 ;;Total ram usage:        0 bytes
 13487 ;; Hardware stack levels used:    1
 13488 ;; This function calls:
 13489 ;;		Nothing
 13490 ;; This function is called by:
 13491 ;;		_ADCC_Initialize
 13492 ;;		_ADCC_ISR
 13493 ;; This function uses a reentrant model
 13494 ;;
 13495                           
 13496                           	psect	text85
 13497  005988                     __ptext85:
 13498                           	opt callstack 0
 13499  005988                     _ADCC_DefaultInterruptHandler:
 13500                           	opt callstack 18
 13501                           
 13502                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13503                           
 13504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13505                           ;incstack = 0
 13506  005988  0012               	return		;funcret
 13507  00598A                     __end_of_ADCC_DefaultInterruptHandler:
 13508                           	opt callstack 0
 13509                           
 13510 ;; *************** function _UART1_tx_vect_isr *****************
 13511 ;; Defined at:
 13512 ;;		line 197 in file "mcc_generated_files/uart1.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;		None
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;		None
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  1    wreg      void 
 13519 ;; Registers used:
 13520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;Total ram usage:        0 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    1
 13533 ;; This function calls:
 13534 ;;		Absolute function
 13535 ;;		_UART1_Transmit_ISR
 13536 ;; This function is called by:
 13537 ;;		Interrupt level 2
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           	psect	text86
 13542  005604                     __ptext86:
 13543                           	opt callstack 0
 13544  005604                     _UART1_tx_vect_isr:
 13545                           	opt callstack 18
 13546                           
 13547                           ;incstack = 0
 13548  005604  EE13  F150         	lfsr	1,___inthi_sp
 13549                           
 13550                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 13551  005608  500D               	movf	_UART1_TxInterruptHandler,w,c
 13552  00560A  100E               	iorwf	_UART1_TxInterruptHandler+1,w,c
 13553  00560C  100F               	iorwf	_UART1_TxInterruptHandler+2,w,c
 13554  00560E  B4D8               	btfsc	status,2,c
 13555  005610  0011               	retfie		f
 13556                           
 13557                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 13558  005612  D801               	call	i2u313_48
 13559  005614  0011               	retfie		f
 13560  005616                     i2u313_48:
 13561  005616  0005               	push	
 13562  005618  6EFA               	movwf	pclath,c
 13563  00561A  500D               	movf	_UART1_TxInterruptHandler,w,c
 13564  00561C  6EFD               	movwf	tosl,c
 13565  00561E  500E               	movf	_UART1_TxInterruptHandler+1,w,c
 13566  005620  6EFE               	movwf	tosh,c
 13567  005622  500F               	movf	_UART1_TxInterruptHandler+2,w,c
 13568  005624  6EFF               	movwf	tosu,c
 13569  005626  50FA               	movf	pclath,w,c
 13570  005628  0012               	return		;indir
 13571  00562A                     __end_of_UART1_tx_vect_isr:
 13572                           	opt callstack 0
 13573                           
 13574 ;; *************** function _UART1_Transmit_ISR *****************
 13575 ;; Defined at:
 13576 ;;		line 211 in file "mcc_generated_files/uart1.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;		None
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;		None
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  1  [STACK] void 
 13583 ;; Registers used:
 13584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 3B/39
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13594 ;;Total ram usage:        0 bytes
 13595 ;; Hardware stack levels used:    1
 13596 ;; This function calls:
 13597 ;;		Nothing
 13598 ;; This function is called by:
 13599 ;;		_UART1_Initialize
 13600 ;;		_UART1_tx_vect_isr
 13601 ;; This function uses a reentrant model
 13602 ;;
 13603                           
 13604                           	psect	text87
 13605  0052D2                     __ptext87:
 13606                           	opt callstack 0
 13607  0052D2                     _UART1_Transmit_ISR:
 13608                           	opt callstack 18
 13609                           
 13610                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13611                           
 13612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13613                           ;incstack = 0
 13614  0052D2  0E40               	movlw	64
 13615  0052D4  603B               	cpfslt	_uart1TxBufferRemaining,c
 13616  0052D6  D010               	goto	l597
 13617                           
 13618                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13619  0052D8  0EC0               	movlw	low _uart1TxBuffer
 13620  0052DA  243C               	addwf	_uart1TxTail,w,c	;volatile
 13621  0052DC  6ED9               	movwf	fsr2l,c
 13622  0052DE  6ADA               	clrf	fsr2h,c
 13623  0052E0  0E02               	movlw	high _uart1TxBuffer
 13624  0052E2  22DA               	addwfc	fsr2h,f,c
 13625  0052E4  50DF               	movf	indf2,w,c
 13626  0052E6  013D               	movlb	61	; () banked
 13627  0052E8  6FEA               	movwf	234,b	;volatile
 13628                           
 13629                           ; BSR set to: 61
 13630  0052EA  2A3C               	incf	_uart1TxTail,f,c	;volatile
 13631                           
 13632                           ; BSR set to: 61
 13633                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13634  0052EC  0E3F               	movlw	63
 13635  0052EE  643C               	cpfsgt	_uart1TxTail,c
 13636  0052F0  D001               	goto	l5525
 13637                           
 13638                           ; BSR set to: 61
 13639                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 13640  0052F2  6A3C               	clrf	_uart1TxTail,c	;volatile
 13641  0052F4                     l5525:
 13642                           
 13643                           ; BSR set to: 61
 13644                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 13645  0052F4  2A3B               	incf	_uart1TxBufferRemaining,f,c	;volatile
 13646                           
 13647                           ;mcc_generated_files/uart1.c: 220:  } else {
 13648  0052F6  0012               	return	
 13649  0052F8                     l597:
 13650                           
 13651                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 13652  0052F8  0139               	movlb	57	; () banked
 13653  0052FA  9993               	bcf	147,4,b	;volatile
 13654                           
 13655                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13656  0052FC  0012               	return		;funcret
 13657  0052FE                     __end_of_UART1_Transmit_ISR:
 13658                           	opt callstack 0
 13659                           
 13660 ;; *************** function _UART1_rx_vect_isr *****************
 13661 ;; Defined at:
 13662 ;;		line 204 in file "mcc_generated_files/uart1.c"
 13663 ;; Parameters:    Size  Location     Type
 13664 ;;		None
 13665 ;; Auto vars:     Size  Location     Type
 13666 ;;		None
 13667 ;; Return value:  Size  Location     Type
 13668 ;;                  1    wreg      void 
 13669 ;; Registers used:
 13670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13671 ;; Tracked objects:
 13672 ;;		On entry : 0/0
 13673 ;;		On exit  : 0/0
 13674 ;;		Unchanged: 0/0
 13675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13680 ;;Total ram usage:        0 bytes
 13681 ;; Hardware stack levels used:    1
 13682 ;; Hardware stack levels required when called:    1
 13683 ;; This function calls:
 13684 ;;		Absolute function
 13685 ;;		_UART1_Receive_ISR
 13686 ;; This function is called by:
 13687 ;;		Interrupt level 2
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690                           
 13691                           	psect	text88
 13692  00562C                     __ptext88:
 13693                           	opt callstack 0
 13694  00562C                     _UART1_rx_vect_isr:
 13695                           	opt callstack 18
 13696                           
 13697                           ;incstack = 0
 13698  00562C  EE13  F150         	lfsr	1,___inthi_sp
 13699                           
 13700                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 13701  005630  5010               	movf	_UART1_RxInterruptHandler,w,c
 13702  005632  1011               	iorwf	_UART1_RxInterruptHandler+1,w,c
 13703  005634  1012               	iorwf	_UART1_RxInterruptHandler+2,w,c
 13704  005636  B4D8               	btfsc	status,2,c
 13705  005638  0011               	retfie		f
 13706                           
 13707                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 13708  00563A  D801               	call	i2u315_48
 13709  00563C  0011               	retfie		f
 13710  00563E                     i2u315_48:
 13711  00563E  0005               	push	
 13712  005640  6EFA               	movwf	pclath,c
 13713  005642  5010               	movf	_UART1_RxInterruptHandler,w,c
 13714  005644  6EFD               	movwf	tosl,c
 13715  005646  5011               	movf	_UART1_RxInterruptHandler+1,w,c
 13716  005648  6EFE               	movwf	tosh,c
 13717  00564A  5012               	movf	_UART1_RxInterruptHandler+2,w,c
 13718  00564C  6EFF               	movwf	tosu,c
 13719  00564E  50FA               	movf	pclath,w,c
 13720  005650  0012               	return		;indir
 13721  005652                     __end_of_UART1_rx_vect_isr:
 13722                           	opt callstack 0
 13723                           
 13724 ;; *************** function _UART1_Receive_ISR *****************
 13725 ;; Defined at:
 13726 ;;		line 227 in file "mcc_generated_files/uart1.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;		None
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;		None
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1  [STACK] void 
 13733 ;; Registers used:
 13734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13744 ;;Total ram usage:        0 bytes
 13745 ;; Hardware stack levels used:    1
 13746 ;; This function calls:
 13747 ;;		Nothing
 13748 ;; This function is called by:
 13749 ;;		_UART1_Initialize
 13750 ;;		_UART1_rx_vect_isr
 13751 ;; This function uses a reentrant model
 13752 ;;
 13753                           
 13754                           	psect	text89
 13755  005790                     __ptext89:
 13756                           	opt callstack 0
 13757  005790                     _UART1_Receive_ISR:
 13758                           	opt callstack 18
 13759                           
 13760                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13761                           
 13762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13763                           ;incstack = 0
 13764  005790  0E80               	movlw	low _uart1RxBuffer
 13765  005792  243A               	addwf	_uart1RxHead,w,c	;volatile
 13766  005794  6ED9               	movwf	fsr2l,c
 13767  005796  6ADA               	clrf	fsr2h,c
 13768  005798  0E02               	movlw	high _uart1RxBuffer
 13769  00579A  22DA               	addwfc	fsr2h,f,c
 13770  00579C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13771  0057A2  2A3A               	incf	_uart1RxHead,f,c	;volatile
 13772                           
 13773                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13774  0057A4  0E3F               	movlw	63
 13775  0057A6  643A               	cpfsgt	_uart1RxHead,c
 13776  0057A8  D001               	goto	l5535
 13777                           
 13778                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 13779  0057AA  6A3A               	clrf	_uart1RxHead,c	;volatile
 13780  0057AC                     l5535:
 13781                           
 13782                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 13783  0057AC  2A38               	incf	_uart1RxCount,f,c	;volatile
 13784                           
 13785                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13786  0057AE  0012               	return		;funcret
 13787  0057B0                     __end_of_UART1_Receive_ISR:
 13788                           	opt callstack 0
 13789                           
 13790 ;; *************** function _UART2_tx_vect_isr *****************
 13791 ;; Defined at:
 13792 ;;		line 195 in file "mcc_generated_files/uart2.c"
 13793 ;; Parameters:    Size  Location     Type
 13794 ;;		None
 13795 ;; Auto vars:     Size  Location     Type
 13796 ;;		None
 13797 ;; Return value:  Size  Location     Type
 13798 ;;                  1    wreg      void 
 13799 ;; Registers used:
 13800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13801 ;; Tracked objects:
 13802 ;;		On entry : 0/0
 13803 ;;		On exit  : 0/0
 13804 ;;		Unchanged: 0/0
 13805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13810 ;;Total ram usage:        0 bytes
 13811 ;; Hardware stack levels used:    1
 13812 ;; Hardware stack levels required when called:    1
 13813 ;; This function calls:
 13814 ;;		Absolute function
 13815 ;;		_UART2_Transmit_ISR
 13816 ;; This function is called by:
 13817 ;;		Interrupt level 2
 13818 ;; This function uses a non-reentrant model
 13819 ;;
 13820                           
 13821                           	psect	text90
 13822  005654                     __ptext90:
 13823                           	opt callstack 0
 13824  005654                     _UART2_tx_vect_isr:
 13825                           	opt callstack 18
 13826                           
 13827                           ;incstack = 0
 13828  005654  EE13  F150         	lfsr	1,___inthi_sp
 13829                           
 13830                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 13831  005658  5013               	movf	_UART2_TxInterruptHandler,w,c
 13832  00565A  1014               	iorwf	_UART2_TxInterruptHandler+1,w,c
 13833  00565C  1015               	iorwf	_UART2_TxInterruptHandler+2,w,c
 13834  00565E  B4D8               	btfsc	status,2,c
 13835  005660  0011               	retfie		f
 13836                           
 13837                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 13838  005662  D801               	call	i2u317_48
 13839  005664  0011               	retfie		f
 13840  005666                     i2u317_48:
 13841  005666  0005               	push	
 13842  005668  6EFA               	movwf	pclath,c
 13843  00566A  5013               	movf	_UART2_TxInterruptHandler,w,c
 13844  00566C  6EFD               	movwf	tosl,c
 13845  00566E  5014               	movf	_UART2_TxInterruptHandler+1,w,c
 13846  005670  6EFE               	movwf	tosh,c
 13847  005672  5015               	movf	_UART2_TxInterruptHandler+2,w,c
 13848  005674  6EFF               	movwf	tosu,c
 13849  005676  50FA               	movf	pclath,w,c
 13850  005678  0012               	return		;indir
 13851  00567A                     __end_of_UART2_tx_vect_isr:
 13852                           	opt callstack 0
 13853                           
 13854 ;; *************** function _UART2_Transmit_ISR *****************
 13855 ;; Defined at:
 13856 ;;		line 213 in file "mcc_generated_files/uart2.c"
 13857 ;; Parameters:    Size  Location     Type
 13858 ;;		None
 13859 ;; Auto vars:     Size  Location     Type
 13860 ;;		None
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1  [STACK] void 
 13863 ;; Registers used:
 13864 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 3B/39
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13874 ;;Total ram usage:        0 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; This function calls:
 13877 ;;		Nothing
 13878 ;; This function is called by:
 13879 ;;		_UART2_Initialize
 13880 ;;		_UART2_tx_vect_isr
 13881 ;; This function uses a reentrant model
 13882 ;;
 13883                           
 13884                           	psect	text91
 13885  0052FE                     __ptext91:
 13886                           	opt callstack 0
 13887  0052FE                     _UART2_Transmit_ISR:
 13888                           	opt callstack 18
 13889                           
 13890                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 13891                           
 13892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13893                           ;incstack = 0
 13894  0052FE  0E40               	movlw	64
 13895  005300  6035               	cpfslt	_uart2TxBufferRemaining,c
 13896  005302  D010               	goto	l717
 13897                           
 13898                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 13899  005304  0E40               	movlw	low _uart2TxBuffer
 13900  005306  2436               	addwf	_uart2TxTail,w,c	;volatile
 13901  005308  6ED9               	movwf	fsr2l,c
 13902  00530A  6ADA               	clrf	fsr2h,c
 13903  00530C  0E02               	movlw	high _uart2TxBuffer
 13904  00530E  22DA               	addwfc	fsr2h,f,c
 13905  005310  50DF               	movf	indf2,w,c
 13906  005312  013D               	movlb	61	; () banked
 13907  005314  6FD2               	movwf	210,b	;volatile
 13908                           
 13909                           ; BSR set to: 61
 13910  005316  2A36               	incf	_uart2TxTail,f,c	;volatile
 13911                           
 13912                           ; BSR set to: 61
 13913                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 13914  005318  0E3F               	movlw	63
 13915  00531A  6436               	cpfsgt	_uart2TxTail,c
 13916  00531C  D001               	goto	l5547
 13917                           
 13918                           ; BSR set to: 61
 13919                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 13920  00531E  6A36               	clrf	_uart2TxTail,c	;volatile
 13921  005320                     l5547:
 13922                           
 13923                           ; BSR set to: 61
 13924                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 13925  005320  2A35               	incf	_uart2TxBufferRemaining,f,c	;volatile
 13926                           
 13927                           ;mcc_generated_files/uart2.c: 224:     }
 13928  005322  0012               	return	
 13929  005324                     l717:
 13930                           
 13931                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 13932  005324  0139               	movlb	57	; () banked
 13933  005326  9796               	bcf	150,3,b	;volatile
 13934                           
 13935                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13936  005328  0012               	return		;funcret
 13937  00532A                     __end_of_UART2_Transmit_ISR:
 13938                           	opt callstack 0
 13939                           
 13940 ;; *************** function _UART2_rx_vect_isr *****************
 13941 ;; Defined at:
 13942 ;;		line 203 in file "mcc_generated_files/uart2.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;		None
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;		None
 13947 ;; Return value:  Size  Location     Type
 13948 ;;                  1    wreg      void 
 13949 ;; Registers used:
 13950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13951 ;; Tracked objects:
 13952 ;;		On entry : 0/0
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13960 ;;Total ram usage:        0 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:    1
 13963 ;; This function calls:
 13964 ;;		Absolute function
 13965 ;;		_UART2_Receive_ISR
 13966 ;; This function is called by:
 13967 ;;		Interrupt level 2
 13968 ;; This function uses a non-reentrant model
 13969 ;;
 13970                           
 13971                           	psect	text92
 13972  00567C                     __ptext92:
 13973                           	opt callstack 0
 13974  00567C                     _UART2_rx_vect_isr:
 13975                           	opt callstack 18
 13976                           
 13977                           ;incstack = 0
 13978  00567C  EE13  F150         	lfsr	1,___inthi_sp
 13979                           
 13980                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 13981  005680  5016               	movf	_UART2_RxInterruptHandler,w,c
 13982  005682  1017               	iorwf	_UART2_RxInterruptHandler+1,w,c
 13983  005684  1018               	iorwf	_UART2_RxInterruptHandler+2,w,c
 13984  005686  B4D8               	btfsc	status,2,c
 13985  005688  0011               	retfie		f
 13986                           
 13987                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 13988  00568A  D801               	call	i2u319_48
 13989  00568C  0011               	retfie		f
 13990  00568E                     i2u319_48:
 13991  00568E  0005               	push	
 13992  005690  6EFA               	movwf	pclath,c
 13993  005692  5016               	movf	_UART2_RxInterruptHandler,w,c
 13994  005694  6EFD               	movwf	tosl,c
 13995  005696  5017               	movf	_UART2_RxInterruptHandler+1,w,c
 13996  005698  6EFE               	movwf	tosh,c
 13997  00569A  5018               	movf	_UART2_RxInterruptHandler+2,w,c
 13998  00569C  6EFF               	movwf	tosu,c
 13999  00569E  50FA               	movf	pclath,w,c
 14000  0056A0  0012               	return		;indir
 14001  0056A2                     __end_of_UART2_rx_vect_isr:
 14002                           	opt callstack 0
 14003                           
 14004 ;; *************** function _UART2_Receive_ISR *****************
 14005 ;; Defined at:
 14006 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;		None
 14009 ;; Auto vars:     Size  Location     Type
 14010 ;;		None
 14011 ;; Return value:  Size  Location     Type
 14012 ;;                  1  [STACK] void 
 14013 ;; Registers used:
 14014 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14015 ;; Tracked objects:
 14016 ;;		On entry : 0/0
 14017 ;;		On exit  : 0/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14024 ;;Total ram usage:        0 bytes
 14025 ;; Hardware stack levels used:    1
 14026 ;; This function calls:
 14027 ;;		Nothing
 14028 ;; This function is called by:
 14029 ;;		_UART2_Initialize
 14030 ;;		_UART2_rx_vect_isr
 14031 ;; This function uses a reentrant model
 14032 ;;
 14033                           
 14034                           	psect	text93
 14035  0057B0                     __ptext93:
 14036                           	opt callstack 0
 14037  0057B0                     _UART2_Receive_ISR:
 14038                           	opt callstack 18
 14039                           
 14040                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 14041                           
 14042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14043                           ;incstack = 0
 14044  0057B0  0E00               	movlw	low _uart2RxBuffer
 14045  0057B2  2434               	addwf	_uart2RxHead,w,c	;volatile
 14046  0057B4  6ED9               	movwf	fsr2l,c
 14047  0057B6  6ADA               	clrf	fsr2h,c
 14048  0057B8  0E02               	movlw	high _uart2RxBuffer
 14049  0057BA  22DA               	addwfc	fsr2h,f,c
 14050  0057BC  006F F743 FFDF     	movff	15824,indf2	;volatile
 14051  0057C2  2A34               	incf	_uart2RxHead,f,c	;volatile
 14052                           
 14053                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 14054  0057C4  0E3F               	movlw	63
 14055  0057C6  6434               	cpfsgt	_uart2RxHead,c
 14056  0057C8  D001               	goto	l5557
 14057                           
 14058                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 14059  0057CA  6A34               	clrf	_uart2RxHead,c	;volatile
 14060  0057CC                     l5557:
 14061                           
 14062                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 14063  0057CC  2A32               	incf	_uart2RxCount,f,c	;volatile
 14064                           
 14065                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14066  0057CE  0012               	return		;funcret
 14067  0057D0                     __end_of_UART2_Receive_ISR:
 14068                           	opt callstack 0
 14069                           
 14070 ;; *************** function _TMR6_ISR *****************
 14071 ;; Defined at:
 14072 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 14073 ;; Parameters:    Size  Location     Type
 14074 ;;		None
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;		None
 14077 ;; Return value:  Size  Location     Type
 14078 ;;                  1    wreg      void 
 14079 ;; Registers used:
 14080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14081 ;; Tracked objects:
 14082 ;;		On entry : 0/0
 14083 ;;		On exit  : 0/0
 14084 ;;		Unchanged: 0/0
 14085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14090 ;;Total ram usage:        1 bytes
 14091 ;; Hardware stack levels used:    1
 14092 ;; Hardware stack levels required when called:    2
 14093 ;; This function calls:
 14094 ;;		_TMR6_CallBack
 14095 ;; This function is called by:
 14096 ;;		Interrupt level 2
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text94
 14101  00585C                     __ptext94:
 14102                           	opt callstack 0
 14103  00585C                     _TMR6_ISR:
 14104                           	opt callstack 17
 14105                           
 14106                           ;incstack = 0
 14107  00585C  0060  F0F8  F05F   	movff	btemp,??_TMR6_ISR
 14108  005862  EE13  F150         	lfsr	1,___inthi_sp
 14109                           
 14110                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 14111  005866  0139               	movlb	57	; () banked
 14112  005868  91A9               	bcf	169,0,b	;volatile
 14113                           
 14114                           ; BSR set to: 57
 14115                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 14116  00586A  ECA6  F02B         	call	_TMR6_CallBack	;wreg free
 14117  00586E  0060  F17C  F03E   	movff	??_TMR6_ISR,btemp
 14118  005874  0011               	retfie		f
 14119  005876                     __end_of_TMR6_ISR:
 14120                           	opt callstack 0
 14121                           
 14122 ;; *************** function _TMR6_CallBack *****************
 14123 ;; Defined at:
 14124 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;		None
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1  [STACK] void 
 14131 ;; Registers used:
 14132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14133 ;; Tracked objects:
 14134 ;;		On entry : 3F/39
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14142 ;;Total ram usage:        0 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:    1
 14145 ;; This function calls:
 14146 ;;		Absolute function
 14147 ;;		_TMR6_DefaultInterruptHandler
 14148 ;; This function is called by:
 14149 ;;		_TMR6_ISR
 14150 ;; This function uses a reentrant model
 14151 ;;
 14152                           
 14153                           	psect	text95
 14154  00574C                     __ptext95:
 14155                           	opt callstack 0
 14156  00574C                     _TMR6_CallBack:
 14157                           	opt callstack 17
 14158                           
 14159                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 14160                           
 14161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14162                           ;incstack = 0
 14163  00574C  5007               	movf	_TMR6_InterruptHandler,w,c
 14164  00574E  1008               	iorwf	_TMR6_InterruptHandler+1,w,c
 14165  005750  1009               	iorwf	_TMR6_InterruptHandler+2,w,c
 14166  005752  B4D8               	btfsc	status,2,c
 14167  005754  0012               	return	
 14168                           
 14169                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 14170  005756  D801               	call	u283_48
 14171  005758  0012               	return	
 14172  00575A                     u283_48:
 14173  00575A  0005               	push	
 14174  00575C  6EFA               	movwf	pclath,c
 14175  00575E  5007               	movf	_TMR6_InterruptHandler,w,c
 14176  005760  6EFD               	movwf	tosl,c
 14177  005762  5008               	movf	_TMR6_InterruptHandler+1,w,c
 14178  005764  6EFE               	movwf	tosh,c
 14179  005766  5009               	movf	_TMR6_InterruptHandler+2,w,c
 14180  005768  6EFF               	movwf	tosu,c
 14181  00576A  50FA               	movf	pclath,w,c
 14182  00576C  0012               	return		;indir
 14183  00576E                     __end_of_TMR6_CallBack:
 14184                           	opt callstack 0
 14185                           
 14186 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14187 ;; Defined at:
 14188 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;		None
 14191 ;; Auto vars:     Size  Location     Type
 14192 ;;  i               1  [STACK] unsigned char 
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  1  [STACK] void 
 14195 ;; Registers used:
 14196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 14197 ;; Tracked objects:
 14198 ;;		On entry : 0/39
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14206 ;;Total ram usage:        0 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; This function calls:
 14209 ;;		Nothing
 14210 ;; This function is called by:
 14211 ;;		_TMR6_Initialize
 14212 ;;		_TMR6_CallBack
 14213 ;; This function uses a reentrant model
 14214 ;;
 14215                           
 14216                           	psect	text96
 14217  0050E8                     __ptext96:
 14218                           	opt callstack 0
 14219  0050E8                     _TMR6_DefaultInterruptHandler:
 14220                           	opt callstack 0
 14221                           
 14222                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14223  0050E8  52E6               	movf	postinc1,f,c
 14224                           
 14225                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 14226                           ;stkvar	_i @ sp[(-1)+0]
 14227                           
 14228                           ;incstack = 0
 14229  0050EA  0EFF               	movlw	-1
 14230  0050EC  6AE3               	clrf	plusw1,c
 14231  0050EE                     l5229:
 14232                           
 14233                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 14234                           ;stkvar	_i @ sp[(-1)+0]
 14235  0050EE  0EFF               	movlw	-1
 14236  0050F0  50E3               	movf	plusw1,w,c
 14237  0050F2  0D02               	mullw	2
 14238  0050F4  50F3               	movf	prodl,w,c
 14239  0050F6  0F79               	addlw	low _tickCount
 14240  0050F8  6ED9               	movwf	fsr2l,c
 14241  0050FA  6ADA               	clrf	fsr2h,c
 14242  0050FC  50DE               	movf	postinc2,w,c
 14243  0050FE  10DE               	iorwf	postinc2,w,c
 14244  005100  B4D8               	btfsc	status,2,c
 14245  005102  D00A               	goto	l5233
 14246                           
 14247                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 14248                           ;stkvar	_i @ sp[(-1)+0]
 14249  005104  0EFF               	movlw	-1
 14250  005106  50E3               	movf	plusw1,w,c
 14251  005108  0D02               	mullw	2
 14252  00510A  50F3               	movf	prodl,w,c
 14253  00510C  0F79               	addlw	low _tickCount
 14254  00510E  6ED9               	movwf	fsr2l,c
 14255  005110  6ADA               	clrf	fsr2h,c
 14256  005112  06DE               	decf	postinc2,f,c
 14257  005114  0E00               	movlw	0
 14258  005116  5ADD               	subwfb	postdec2,f,c
 14259  005118                     l5233:
 14260                           
 14261                           ;mcc_generated_files/tmr6.c: 207:  }
 14262                           ;stkvar	_i @ sp[(-1)+0]
 14263  005118  0EFF               	movlw	-1
 14264  00511A  2AE3               	incf	plusw1,f,c
 14265                           
 14266                           ;stkvar	_i @ sp[(-1)+0]
 14267  00511C  0EFF               	movlw	-1
 14268  00511E  006F FF8C  F03E    	movff	plusw1,btemp
 14269  005124  0E05               	movlw	5
 14270  005126  643E               	cpfsgt	btemp,c
 14271  005128  D7E2               	goto	l5229
 14272                           
 14273                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14274  00512A  52E5               	movf	postdec1,f,c
 14275  00512C  0012               	return		;funcret
 14276  00512E                     __end_of_TMR6_DefaultInterruptHandler:
 14277                           	opt callstack 0
 14278                           
 14279 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14280 ;; Defined at:
 14281 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14282 ;; Parameters:    Size  Location     Type
 14283 ;;		None
 14284 ;; Auto vars:     Size  Location     Type
 14285 ;;		None
 14286 ;; Return value:  Size  Location     Type
 14287 ;;                  1    wreg      void 
 14288 ;; Registers used:
 14289 ;;		None
 14290 ;; Tracked objects:
 14291 ;;		On entry : 0/0
 14292 ;;		On exit  : 3F/0
 14293 ;;		Unchanged: 0/0
 14294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14299 ;;Total ram usage:        0 bytes
 14300 ;; Hardware stack levels used:    1
 14301 ;; This function calls:
 14302 ;;		Nothing
 14303 ;; This function is called by:
 14304 ;;		Interrupt level 2
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308                           	psect	text97
 14309  005924                     __ptext97:
 14310                           	opt callstack 0
 14311  005924                     _DMA1_DMASCNT_ISR:
 14312                           	opt callstack 19
 14313                           
 14314                           ;incstack = 0
 14315  005924  EE13  F150         	lfsr	1,___inthi_sp
 14316                           
 14317                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14318  005928  0139               	movlb	57	; () banked
 14319  00592A  91A2               	bcf	162,0,b	;volatile
 14320                           
 14321                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14322  00592C  0100               	movlb	0	; () banked
 14323  00592E  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 14324                           
 14325                           ; BSR set to: 0
 14326  005930  0011               	retfie		f
 14327  005932                     __end_of_DMA1_DMASCNT_ISR:
 14328                           	opt callstack 0
 14329                           
 14330 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14331 ;; Defined at:
 14332 ;;		line 133 in file "mcc_generated_files/dma1.c"
 14333 ;; Parameters:    Size  Location     Type
 14334 ;;		None
 14335 ;; Auto vars:     Size  Location     Type
 14336 ;;		None
 14337 ;; Return value:  Size  Location     Type
 14338 ;;                  1    wreg      void 
 14339 ;; Registers used:
 14340 ;;		None
 14341 ;; Tracked objects:
 14342 ;;		On entry : 0/0
 14343 ;;		On exit  : 3F/39
 14344 ;;		Unchanged: 0/0
 14345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14350 ;;Total ram usage:        0 bytes
 14351 ;; Hardware stack levels used:    1
 14352 ;; This function calls:
 14353 ;;		Nothing
 14354 ;; This function is called by:
 14355 ;;		Interrupt level 2
 14356 ;; This function uses a non-reentrant model
 14357 ;;
 14358                           
 14359                           	psect	text98
 14360  00593C                     __ptext98:
 14361                           	opt callstack 0
 14362  00593C                     _DMA1_DMADCNT_ISR:
 14363                           	opt callstack 19
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;incstack = 0
 14367  00593C  EE13  F150         	lfsr	1,___inthi_sp
 14368                           
 14369                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 14370  005940  0139               	movlb	57	; () banked
 14371  005942  93A2               	bcf	162,1,b	;volatile
 14372                           
 14373                           ; BSR set to: 57
 14374  005944  0011               	retfie		f
 14375  005946                     __end_of_DMA1_DMADCNT_ISR:
 14376                           	opt callstack 0
 14377                           
 14378 ;; *************** function _DMA1_DMAA_ISR *****************
 14379 ;; Defined at:
 14380 ;;		line 143 in file "mcc_generated_files/dma1.c"
 14381 ;; Parameters:    Size  Location     Type
 14382 ;;		None
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;		None
 14385 ;; Return value:  Size  Location     Type
 14386 ;;                  1    wreg      void 
 14387 ;; Registers used:
 14388 ;;		None
 14389 ;; Tracked objects:
 14390 ;;		On entry : 0/0
 14391 ;;		On exit  : 3F/39
 14392 ;;		Unchanged: 0/0
 14393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14398 ;;Total ram usage:        0 bytes
 14399 ;; Hardware stack levels used:    1
 14400 ;; This function calls:
 14401 ;;		Nothing
 14402 ;; This function is called by:
 14403 ;;		Interrupt level 2
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           	psect	text99
 14408  005948                     __ptext99:
 14409                           	opt callstack 0
 14410  005948                     _DMA1_DMAA_ISR:
 14411                           	opt callstack 19
 14412                           
 14413                           ; BSR set to: 57
 14414                           ;incstack = 0
 14415  005948  EE13  F150         	lfsr	1,___inthi_sp
 14416                           
 14417                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 14418  00594C  0139               	movlb	57	; () banked
 14419  00594E  97A2               	bcf	162,3,b	;volatile
 14420                           
 14421                           ; BSR set to: 57
 14422  005950  0011               	retfie		f
 14423  005952                     __end_of_DMA1_DMAA_ISR:
 14424                           	opt callstack 0
 14425                           
 14426 ;; *************** function _DMA1_DMAOR_ISR *****************
 14427 ;; Defined at:
 14428 ;;		line 154 in file "mcc_generated_files/dma1.c"
 14429 ;; Parameters:    Size  Location     Type
 14430 ;;		None
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;		None
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  1    wreg      void 
 14435 ;; Registers used:
 14436 ;;		None
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 3F/39
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14446 ;;Total ram usage:        0 bytes
 14447 ;; Hardware stack levels used:    1
 14448 ;; This function calls:
 14449 ;;		Nothing
 14450 ;; This function is called by:
 14451 ;;		Interrupt level 2
 14452 ;; This function uses a non-reentrant model
 14453 ;;
 14454                           
 14455                           	psect	text100
 14456  005954                     __ptext100:
 14457                           	opt callstack 0
 14458  005954                     _DMA1_DMAOR_ISR:
 14459                           	opt callstack 19
 14460                           
 14461                           ; BSR set to: 57
 14462                           ;incstack = 0
 14463  005954  EE13  F150         	lfsr	1,___inthi_sp
 14464                           
 14465                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 14466  005958  0139               	movlb	57	; () banked
 14467  00595A  95A2               	bcf	162,2,b	;volatile
 14468                           
 14469                           ; BSR set to: 57
 14470  00595C  0011               	retfie		f
 14471  00595E                     __end_of_DMA1_DMAOR_ISR:
 14472                           	opt callstack 0
 14473                           
 14474 ;; *************** function _TMR5_ISR *****************
 14475 ;; Defined at:
 14476 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;		None
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;		None
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  1    wreg      void 
 14483 ;; Registers used:
 14484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 14485 ;; Tracked objects:
 14486 ;;		On entry : 0/0
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14493 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14494 ;;Total ram usage:        1 bytes
 14495 ;; Hardware stack levels used:    1
 14496 ;; Hardware stack levels required when called:    2
 14497 ;; This function calls:
 14498 ;;		_TMR5_CallBack
 14499 ;;		_TMR5_WriteTimer
 14500 ;; This function is called by:
 14501 ;;		Interrupt level 2
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text101
 14506  00522C                     __ptext101:
 14507                           	opt callstack 0
 14508  00522C                     _TMR5_ISR:
 14509                           	opt callstack 17
 14510                           
 14511                           ; BSR set to: 57
 14512                           ;incstack = 0
 14513  00522C  0060  F124  F0F4   	movff	btemp+11,??_TMR5_ISR
 14514  005232  EE13  F150         	lfsr	1,___inthi_sp
 14515                           
 14516                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 14517  005236  0139               	movlb	57	; () banked
 14518  005238  9DA8               	bcf	168,6,b	;volatile
 14519                           
 14520                           ; BSR set to: 57
 14521                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 14522  00523A  0060  F0BB  FFE6   	movff	_timer5ReloadVal,postinc1
 14523  005240  0060  F0BF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 14524  005246  ECB8  F028         	call	_TMR5_WriteTimer	;wreg free
 14525                           
 14526                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 14527  00524A  4A2C               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 14528  00524C  2A2D               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 14529  00524E  502D               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 14530  005250  E104               	bnz	i2u396_40
 14531  005252  0E32               	movlw	50
 14532  005254  5C2C               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 14533  005256  A0D8               	btfss	status,0,c
 14534  005258  D004               	goto	i2l1135
 14535  00525A                     i2u396_40:
 14536                           
 14537                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 14538  00525A  ECB7  F02B         	call	_TMR5_CallBack	;wreg free
 14539                           
 14540                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 14541  00525E  6A2C               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 14542  005260  6A2D               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 14543  005262                     i2l1135:
 14544  005262  0060  F3D0  F049   	movff	??_TMR5_ISR,btemp+11
 14545  005268  0011               	retfie		f
 14546  00526A                     __end_of_TMR5_ISR:
 14547                           	opt callstack 0
 14548                           
 14549 ;; *************** function _TMR5_WriteTimer *****************
 14550 ;; Defined at:
 14551 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  timerVal        2  [STACK] unsigned short 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;		None
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1  [STACK] void 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14560 ;; Tracked objects:
 14561 ;;		On entry : 3F/39
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14569 ;;Total ram usage:        0 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; This function calls:
 14572 ;;		Nothing
 14573 ;; This function is called by:
 14574 ;;		_TMR5_ISR
 14575 ;; This function uses a reentrant model
 14576 ;;
 14577                           
 14578                           	psect	text102
 14579  005170                     __ptext102:
 14580                           	opt callstack 0
 14581  005170                     _TMR5_WriteTimer:
 14582                           	opt callstack 18
 14583                           
 14584                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 14585                           
 14586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14587                           ;incstack = 0
 14588  005170  A49A               	btfss	16282,2,c	;volatile
 14589  005172  D00F               	goto	l3763
 14590                           
 14591                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 14592  005174  909A               	bcf	16282,0,c	;volatile
 14593                           
 14594                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 14595                           ;stkvar	_timerVal @ sp[(0)+-2]
 14596  005176  0EFF               	movlw	255
 14597  005178  24E1               	addwf	fsr1l,w,c
 14598  00517A  6ED9               	movwf	fsr2l,c
 14599  00517C  0EFF               	movlw	255
 14600  00517E  20E2               	addwfc	fsr1h,w,c
 14601  005180  6EDA               	movwf	fsr2h,c
 14602  005182  50DF               	movf	indf2,w,c
 14603  005184  6E99               	movwf	16281,c	;volatile
 14604                           
 14605                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 14606                           ;stkvar	_timerVal @ sp[(0)+-2]
 14607  005186  0EFE               	movlw	-2
 14608  005188  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14609                           
 14610                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 14611  00518E  809A               	bsf	16282,0,c	;volatile
 14612                           
 14613                           ;mcc_generated_files/tmr5.c: 141:  } else {
 14614  005190  D00C               	goto	l1118
 14615  005192                     l3763:
 14616                           
 14617                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 14618                           ;stkvar	_timerVal @ sp[(0)+-2]
 14619  005192  0EFF               	movlw	255
 14620  005194  24E1               	addwf	fsr1l,w,c
 14621  005196  6ED9               	movwf	fsr2l,c
 14622  005198  0EFF               	movlw	255
 14623  00519A  20E2               	addwfc	fsr1h,w,c
 14624  00519C  6EDA               	movwf	fsr2h,c
 14625  00519E  50DF               	movf	indf2,w,c
 14626  0051A0  6E99               	movwf	16281,c	;volatile
 14627                           
 14628                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 14629                           ;stkvar	_timerVal @ sp[(0)+-2]
 14630  0051A2  0EFE               	movlw	-2
 14631  0051A4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14632  0051AA                     l1118:
 14633                           
 14634                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 14635  0051AA  52E5               	movf	postdec1,f,c
 14636  0051AC  52E5               	movf	postdec1,f,c
 14637  0051AE  0012               	return		;funcret
 14638  0051B0                     __end_of_TMR5_WriteTimer:
 14639                           	opt callstack 0
 14640                           
 14641 ;; *************** function _TMR5_CallBack *****************
 14642 ;; Defined at:
 14643 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;		None
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;		None
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  1  [STACK] void 
 14650 ;; Registers used:
 14651 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/39
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14661 ;;Total ram usage:        0 bytes
 14662 ;; Hardware stack levels used:    1
 14663 ;; Hardware stack levels required when called:    1
 14664 ;; This function calls:
 14665 ;;		Absolute function
 14666 ;;		_TMR5_DefaultInterruptHandler
 14667 ;; This function is called by:
 14668 ;;		_TMR5_ISR
 14669 ;; This function uses a reentrant model
 14670 ;;
 14671                           
 14672                           	psect	text103
 14673  00576E                     __ptext103:
 14674                           	opt callstack 0
 14675  00576E                     _TMR5_CallBack:
 14676                           	opt callstack 17
 14677                           
 14678                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 14679                           
 14680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14681                           ;incstack = 0
 14682  00576E  5004               	movf	_TMR5_InterruptHandler,w,c
 14683  005770  1005               	iorwf	_TMR5_InterruptHandler+1,w,c
 14684  005772  1006               	iorwf	_TMR5_InterruptHandler+2,w,c
 14685  005774  B4D8               	btfsc	status,2,c
 14686  005776  0012               	return	
 14687                           
 14688                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 14689  005778  D801               	call	u126_48
 14690  00577A  0012               	return	
 14691  00577C                     u126_48:
 14692  00577C  0005               	push	
 14693  00577E  6EFA               	movwf	pclath,c
 14694  005780  5004               	movf	_TMR5_InterruptHandler,w,c
 14695  005782  6EFD               	movwf	tosl,c
 14696  005784  5005               	movf	_TMR5_InterruptHandler+1,w,c
 14697  005786  6EFE               	movwf	tosh,c
 14698  005788  5006               	movf	_TMR5_InterruptHandler+2,w,c
 14699  00578A  6EFF               	movwf	tosu,c
 14700  00578C  50FA               	movf	pclath,w,c
 14701  00578E  0012               	return		;indir
 14702  005790                     __end_of_TMR5_CallBack:
 14703                           	opt callstack 0
 14704                           
 14705 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 14706 ;; Defined at:
 14707 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 14708 ;; Parameters:    Size  Location     Type
 14709 ;;		None
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;		None
 14712 ;; Return value:  Size  Location     Type
 14713 ;;                  1  [STACK] void 
 14714 ;; Registers used:
 14715 ;;		wreg, status,2, status,0, btemp+11
 14716 ;; Tracked objects:
 14717 ;;		On entry : 0/39
 14718 ;;		On exit  : 0/0
 14719 ;;		Unchanged: 0/0
 14720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14725 ;;Total ram usage:        0 bytes
 14726 ;; Hardware stack levels used:    1
 14727 ;; This function calls:
 14728 ;;		Nothing
 14729 ;; This function is called by:
 14730 ;;		_TMR5_Initialize
 14731 ;;		_TMR5_CallBack
 14732 ;; This function uses a reentrant model
 14733 ;;
 14734                           
 14735                           	psect	text104
 14736  005876                     __ptext104:
 14737                           	opt callstack 0
 14738  005876                     _TMR5_DefaultInterruptHandler:
 14739                           	opt callstack 17
 14740                           
 14741                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 14742                           
 14743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14744                           ;incstack = 0
 14745  005876  A0BE               	btfss	16318,0,c	;volatile
 14746  005878  D002               	goto	u102_40
 14747  00587A  0E01               	movlw	1
 14748  00587C  D001               	goto	u102_46
 14749  00587E                     u102_40:
 14750  00587E  0E00               	movlw	0
 14751  005880                     u102_46:
 14752  005880  0AFF               	xorlw	255
 14753  005882  6E49               	movwf	btemp+11,c
 14754  005884  50BE               	movf	16318,w,c	;volatile
 14755  005886  1849               	xorwf	btemp+11,w,c
 14756  005888  0BFE               	andlw	-2
 14757  00588A  1849               	xorwf	btemp+11,w,c
 14758  00588C  6EBE               	movwf	16318,c	;volatile
 14759                           
 14760                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14761  00588E  0012               	return		;funcret
 14762  005890                     __end_of_TMR5_DefaultInterruptHandler:
 14763                           	opt callstack 0
 14764                           
 14765                           ;
 14766                           ; Interrupt Vector Table @ 0x8
 14767                           ;
 14768                           
 14769                           	psect	ivt0x8
 14770  000008                     __pivt0x8:
 14771                           	opt callstack 0
 14772  000008                     ivt0x8_base:
 14773                           	opt callstack 0
 14774                           
 14775                           ; Vector 0 : SWINT
 14776  000008  165F               	dw	_Default_ISR shr (0+2)
 14777                           
 14778                           ; Vector 1 : HLVD
 14779  00000A  165F               	dw	_Default_ISR shr (0+2)
 14780                           
 14781                           ; Vector 2 : OSF
 14782  00000C  165F               	dw	_Default_ISR shr (0+2)
 14783                           
 14784                           ; Vector 3 : CSW
 14785  00000E  165F               	dw	_Default_ISR shr (0+2)
 14786                           
 14787                           ; Vector 4 : NVM
 14788  000010  165F               	dw	_Default_ISR shr (0+2)
 14789                           
 14790                           ; Vector 5 : SCAN
 14791  000012  165F               	dw	_Default_ISR shr (0+2)
 14792                           
 14793                           ; Vector 6 : CRC
 14794  000014  165F               	dw	_Default_ISR shr (0+2)
 14795                           
 14796                           ; Vector 7 : IOC
 14797  000016  165F               	dw	_Default_ISR shr (0+2)
 14798                           
 14799                           ; Vector 8 : INT0
 14800  000018  163D               	dw	_INT0_ISR shr (0+2)
 14801                           
 14802                           ; Vector 9 : ZCD
 14803  00001A  165F               	dw	_Default_ISR shr (0+2)
 14804                           
 14805                           ; Vector 10 : AD
 14806  00001C  14E0               	dw	_ADCC_ISR shr (0+2)
 14807                           
 14808                           ; Vector 11 : ADT
 14809  00001E  165F               	dw	_Default_ISR shr (0+2)
 14810                           
 14811                           ; Vector 12 : CMP1
 14812  000020  165F               	dw	_Default_ISR shr (0+2)
 14813                           
 14814                           ; Vector 13 : SMT1
 14815  000022  165F               	dw	_Default_ISR shr (0+2)
 14816                           
 14817                           ; Vector 14 : SMT1PRA
 14818  000024  165F               	dw	_Default_ISR shr (0+2)
 14819                           
 14820                           ; Vector 15 : SMT1PRW
 14821  000026  165F               	dw	_Default_ISR shr (0+2)
 14822                           
 14823                           ; Vector 16 : DMA1SCNT
 14824  000028  1649               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 14825                           
 14826                           ; Vector 17 : DMA1DCNT
 14827  00002A  164F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 14828                           
 14829                           ; Vector 18 : DMA1OR
 14830  00002C  1655               	dw	_DMA1_DMAOR_ISR shr (0+2)
 14831                           
 14832                           ; Vector 19 : DMA1A
 14833  00002E  1652               	dw	_DMA1_DMAA_ISR shr (0+2)
 14834                           
 14835                           ; Vector 20 : SPI1RX
 14836  000030  165F               	dw	_Default_ISR shr (0+2)
 14837                           
 14838                           ; Vector 21 : SPI1TX
 14839  000032  165F               	dw	_Default_ISR shr (0+2)
 14840                           
 14841                           ; Vector 22 : SPI1
 14842  000034  165F               	dw	_Default_ISR shr (0+2)
 14843                           
 14844                           ; Vector 23 : I2C1RX
 14845  000036  165F               	dw	_Default_ISR shr (0+2)
 14846                           
 14847                           ; Vector 24 : I2C1TX
 14848  000038  165F               	dw	_Default_ISR shr (0+2)
 14849                           
 14850                           ; Vector 25 : I2C1
 14851  00003A  165F               	dw	_Default_ISR shr (0+2)
 14852                           
 14853                           ; Vector 26 : I2C1E
 14854  00003C  165F               	dw	_Default_ISR shr (0+2)
 14855                           
 14856                           ; Vector 27 : U1RX
 14857  00003E  158B               	dw	_UART1_rx_vect_isr shr (0+2)
 14858                           
 14859                           ; Vector 28 : U1TX
 14860  000040  1581               	dw	_UART1_tx_vect_isr shr (0+2)
 14861                           
 14862                           ; Vector 29 : U1E
 14863  000042  165F               	dw	_Default_ISR shr (0+2)
 14864                           
 14865                           ; Vector 30 : U1
 14866  000044  165F               	dw	_Default_ISR shr (0+2)
 14867                           
 14868                           ; Vector 31 : TMR0
 14869  000046  165F               	dw	_Default_ISR shr (0+2)
 14870                           
 14871                           ; Vector 32 : TMR1
 14872  000048  165F               	dw	_Default_ISR shr (0+2)
 14873                           
 14874                           ; Vector 33 : TMR1G
 14875  00004A  165F               	dw	_Default_ISR shr (0+2)
 14876                           
 14877                           ; Vector 34 : TMR2
 14878  00004C  165F               	dw	_Default_ISR shr (0+2)
 14879                           
 14880                           ; Vector 35 : CCP1
 14881  00004E  165F               	dw	_Default_ISR shr (0+2)
 14882                           
 14883                           ; Vector 36 : Undefined
 14884  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 14885                           
 14886                           ; Vector 37 : NCO1
 14887  000052  165F               	dw	_Default_ISR shr (0+2)
 14888                           
 14889                           ; Vector 38 : CWG1
 14890  000054  165F               	dw	_Default_ISR shr (0+2)
 14891                           
 14892                           ; Vector 39 : CLC1
 14893  000056  165F               	dw	_Default_ISR shr (0+2)
 14894                           
 14895                           ; Vector 40 : INT1
 14896  000058  1641               	dw	_INT1_ISR shr (0+2)
 14897                           
 14898                           ; Vector 41 : CMP2
 14899  00005A  165F               	dw	_Default_ISR shr (0+2)
 14900                           
 14901                           ; Vector 42 : DMA2SCNT
 14902  00005C  165F               	dw	_Default_ISR shr (0+2)
 14903                           
 14904                           ; Vector 43 : DMA2DCNT
 14905  00005E  165F               	dw	_Default_ISR shr (0+2)
 14906                           
 14907                           ; Vector 44 : DMA2OR
 14908  000060  165F               	dw	_Default_ISR shr (0+2)
 14909                           
 14910                           ; Vector 45 : DMA2A
 14911  000062  165F               	dw	_Default_ISR shr (0+2)
 14912                           
 14913                           ; Vector 46 : I2C2RX
 14914  000064  165F               	dw	_Default_ISR shr (0+2)
 14915                           
 14916                           ; Vector 47 : I2C2TX
 14917  000066  165F               	dw	_Default_ISR shr (0+2)
 14918                           
 14919                           ; Vector 48 : I2C2
 14920  000068  165F               	dw	_Default_ISR shr (0+2)
 14921                           
 14922                           ; Vector 49 : I2C2E
 14923  00006A  165F               	dw	_Default_ISR shr (0+2)
 14924                           
 14925                           ; Vector 50 : U2RX
 14926  00006C  159F               	dw	_UART2_rx_vect_isr shr (0+2)
 14927                           
 14928                           ; Vector 51 : U2TX
 14929  00006E  1595               	dw	_UART2_tx_vect_isr shr (0+2)
 14930                           
 14931                           ; Vector 52 : U2E
 14932  000070  165F               	dw	_Default_ISR shr (0+2)
 14933                           
 14934                           ; Vector 53 : U2
 14935  000072  165F               	dw	_Default_ISR shr (0+2)
 14936                           
 14937                           ; Vector 54 : TMR3
 14938  000074  165F               	dw	_Default_ISR shr (0+2)
 14939                           
 14940                           ; Vector 55 : TMR3G
 14941  000076  165F               	dw	_Default_ISR shr (0+2)
 14942                           
 14943                           ; Vector 56 : TMR4
 14944  000078  165F               	dw	_Default_ISR shr (0+2)
 14945                           
 14946                           ; Vector 57 : CCP2
 14947  00007A  165F               	dw	_Default_ISR shr (0+2)
 14948                           
 14949                           ; Vector 58 : Undefined
 14950  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 14951                           
 14952                           ; Vector 59 : CWG2
 14953  00007E  165F               	dw	_Default_ISR shr (0+2)
 14954                           
 14955                           ; Vector 60 : CLC2
 14956  000080  165F               	dw	_Default_ISR shr (0+2)
 14957                           
 14958                           ; Vector 61 : INT2
 14959  000082  1645               	dw	_INT2_ISR shr (0+2)
 14960                           
 14961                           ; Vector 62 : Undefined
 14962  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 14963                           
 14964                           ; Vector 63 : Undefined
 14965  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 14966                           
 14967                           ; Vector 64 : Undefined
 14968  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 14969                           
 14970                           ; Vector 65 : Undefined
 14971  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 14972                           
 14973                           ; Vector 66 : Undefined
 14974  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 14975                           
 14976                           ; Vector 67 : Undefined
 14977  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 14978                           
 14979                           ; Vector 68 : Undefined
 14980  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 14981                           
 14982                           ; Vector 69 : Undefined
 14983  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 14984                           
 14985                           ; Vector 70 : TMR5
 14986  000094  148B               	dw	_TMR5_ISR shr (0+2)
 14987                           
 14988                           ; Vector 71 : TMR5G
 14989  000096  165F               	dw	_Default_ISR shr (0+2)
 14990                           
 14991                           ; Vector 72 : TMR6
 14992  000098  1617               	dw	_TMR6_ISR shr (0+2)
 14993                           
 14994                           ; Vector 73 : CCP3
 14995  00009A  165F               	dw	_Default_ISR shr (0+2)
 14996                           
 14997                           ; Vector 74 : CWG3
 14998  00009C  165F               	dw	_Default_ISR shr (0+2)
 14999                           
 15000                           ; Vector 75 : CLC3
 15001  00009E  165F               	dw	_Default_ISR shr (0+2)
 15002                           
 15003                           ; Vector 76 : Undefined
 15004  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15005                           
 15006                           ; Vector 77 : Undefined
 15007  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15008                           
 15009                           ; Vector 78 : Undefined
 15010  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15011                           
 15012                           ; Vector 79 : Undefined
 15013  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15014                           
 15015                           ; Vector 80 : CCP4
 15016  0000A8  165F               	dw	_Default_ISR shr (0+2)
 15017                           
 15018                           ; Vector 81 : CLC4
 15019  0000AA  165F               	dw	_Default_ISR shr (0+2)
 15020  0000AC                     ivt0x8_undefint:
 15021                           	opt callstack 0
 15022  0000AC  00FF               	reset	
 15023                           
 15024                           	psect	text105
 15025  000000                     __ptext105:
 15026                           	opt callstack 0
 15027                           
 15028                           	psect	rparam
 15029  0000                     
 15030                           	psect	temp
 15031  00003E                     btemp:
 15032                           	opt callstack 0
 15033  00003E                     	ds	32
 15034  0000                     wtemp0	set	btemp
 15035  0000                     wtemp1	set	btemp+2
 15036  0000                     wtemp2	set	btemp+4
 15037  0000                     wtemp3	set	btemp+6
 15038  0000                     wtemp4	set	btemp+8
 15039  0000                     wtemp5	set	btemp+10
 15040  0000                     wtemp8	set	btemp+1
 15041  0000                     ttemp0	set	btemp
 15042  0000                     ttemp1	set	btemp+3
 15043  0000                     ttemp2	set	btemp+6
 15044  0000                     ttemp3	set	btemp+9
 15045  0000                     ttemp5	set	btemp+1
 15046  0000                     ttemp6	set	btemp+4
 15047  0000                     ttemp7	set	btemp+8
 15048  0000                     ltemp0	set	btemp
 15049  0000                     ltemp1	set	btemp+4
 15050  0000                     ltemp2	set	btemp+8
 15051  0000                     lltemp0	set	btemp
 15052  0000                     lltemp1	set	btemp+8
 15053  0000                     lltemp2	set	btemp+16
 15054  0000                     lltemp3	set	btemp+24
 15055                           tosu	equ	0x3FFF
 15056                           tosh	equ	0x3FFE
 15057                           tosl	equ	0x3FFD
 15058                           stkptr	equ	0x3FFC
 15059                           pclatu	equ	0x3FFB
 15060                           pclath	equ	0x3FFA
 15061                           pcl	equ	0x3FF9
 15062                           tblptru	equ	0x3FF8
 15063                           tblptrh	equ	0x3FF7
 15064                           tblptrl	equ	0x3FF6
 15065                           tablat	equ	0x3FF5
 15066                           prodh	equ	0x3FF4
 15067                           prodl	equ	0x3FF3
 15068                           indf0	equ	0x3FEF
 15069                           postinc0	equ	0x3FEE
 15070                           postdec0	equ	0x3FED
 15071                           preinc0	equ	0x3FEC
 15072                           plusw0	equ	0x3FEB
 15073                           fsr0h	equ	0x3FEA
 15074                           fsr0l	equ	0x3FE9
 15075                           wreg	equ	0x3FE8
 15076                           indf1	equ	0x3FE7
 15077                           postinc1	equ	0x3FE6
 15078                           postdec1	equ	0x3FE5
 15079                           preinc1	equ	0x3FE4
 15080                           plusw1	equ	0x3FE3
 15081                           fsr1h	equ	0x3FE2
 15082                           fsr1l	equ	0x3FE1
 15083                           bsr	equ	0x3FE0
 15084                           indf2	equ	0x3FDF
 15085                           postinc2	equ	0x3FDE
 15086                           postdec2	equ	0x3FDD
 15087                           preinc2	equ	0x3FDC
 15088                           plusw2	equ	0x3FDB
 15089                           fsr2h	equ	0x3FDA
 15090                           fsr2l	equ	0x3FD9
 15091                           status	equ	0x3FD8


Data Sizes:
    Strings     175
    Constant    0
    Data        331
    BSS         609
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      63
    BANK0           160      1     149
    BANK1           256      0     228
    BANK2           256      0     256
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[5]), V(BANK0[85]), 

    a	PTR const unsigned char  size(2) Largest target is 85
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[5]), V(BANK0[85]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_11(CODE[21]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), 
		 -> STR_7(CODE[23]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4309_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[5]), V(BANK0[85]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[5]), V(BANK0[85]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[5]), 
		 -> V(BANK0[85]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16603.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    t_link	PTR enum E16163 size(1) Largest target is 85
		 -> V(BANK0[85]), 

    S3636response_type$header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    block.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    r_link	PTR enum E16163 size(1) Largest target is 85
		 -> V(BANK0[85]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), H12(BANK0[15]), 
		 -> H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    strPtr	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   40412
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           5     4      1    1722
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      2     0      2      88
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     643
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     165
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      15
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      15
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              0 BANK0      1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E4       7       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      95       5       93.1%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3AE      58        0.0%
DATA                 0      0     3AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 10 23:57:59 2019

                    _SPI1_Exchange8bit 57D0                                      _V 0089  
     __end_of_TMR5_SetInterruptHandler 5562                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 00E5  
                                  _H13 01B4                                    _H14 01A3  
                                  _H24 015F                                    _H17 018F  
                                  _H18 017A                                    _H27 0141  
                                  _H53 0386                                    l194 58CC  
                                  l572 5218                                    l717 5324  
                                  l579 51C6                                    l597 52F8  
                                  l847 57DE                                    _GIE 01FE97  
                                  u940 4DA0                                    u965 4DD4  
                                  u966 4DD6                                    u958 4DA2  
                                  _abs 505C                                    _pad 41B2  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 56E6  
                         _run_checksum 53AA                     _UART1_Transmit_ISR 52D2  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5708  
                         __CFG_ZCD$OFF 000000                                   l1118 51AA  
                                 l1240 2B8C                                   l1307 4F28  
                                 l1219 2AC2                                   l1244 2C78  
                                 l1236 2B86                                   l1237 2B88  
                                 l1245 2CA8                                   l1443 4C28  
                                 l1710 33BA                                   l1439 488C  
                                 l1519 3032                                   l2424 509C  
                                 l1544 3276                                   l1552 3A58  
                                 l1539 324C                                   l1572 3BFC  
                                 l5021 51E8                                   l2446 43C8  
                                 l1663 420E                                   l1583 4018  
                                 l1729 2556                                   l5033 534C  
                                 l1577 3C1A                                   l1683 263E  
                                 l5203 51F0                                   l5019 51E6  
                                 l5301 53B6                                   l2478 41A8  
                                 l5233 5118                                   l5321 3CC6  
                                 l5315 3CA8                                   l5411 3E52  
                                 l5229 50EE                                   l6301 4A82  
                                 l5085 56BC                                   l5333 3D02  
                                 l5309 3C8C                                   l6311 41DE  
                                 l5239 536A                                   l5327 3CE4  
                                 l6305 4AC0                                   l6321 4254  
                                 l4625 508C                                   l6401 295A  
                                 l5345 3D3E                                   l5409 3E2C  
                                 l3763 5192                                   l6315 4206  
                                 l4643 3644                                   l5355 3D60  
                                 l5339 3D20                                   l5525 52F4  
                                 l6325 429E                                   l6317 4218  
                                 l6333 4C4E                                   l4661 375C  
                                 l4637 35F0                                   l6405 2996  
                                 l5381 3DEE                                   l5373 3DB6  
                                 l5357 3D98                                   l5535 57AC  
                                 l4583 48BA                                   l6335 4C7A  
                                 l6503 23EC                                   l5375 3DD0  
                                 l4585 48DC                                   l4649 368A  
                                 l4681 386C                                   l6441 345C  
                                 l6433 33F0                                   l6417 333C  
                                 l6513 2494                                   l5547 5320  
                                 l6291 42F6                                   l6371 2696  
                                 l6451 3512                                   l6523 24EC  
                                 l5707 31C6                                   l5557 57CC  
                                 l6381 28A8                                   l6437 342C  
                                 l4853 40B6                                   l5741 326A  
                                 l5717 31E4                                   l5709 31CA  
                                 l5661 3058                                   l5645 2FFC  
                                 l5397 3E0C                                   l6605 44D6  
                                 l6367 2678                                   l6359 262E  
                                 l6455 354E                                   l6447 34E6  
                                 l6519 24E8                                   l6551 2DA4  
                                 l5671 308C                                   l5751 32BE  
                                 l4697 39A0                                   l4689 38F4  
                                 l4849 4086                                   l6529 2508  
                                 l4945 4F3A                                   l6609 4548  
                                 l6491 22C6                                   l6571 2F7A  
                                 l6563 2ECC                                   l5739 3266  
                                 l5691 311A                                   l5683 30C0  
                                 l6811 3B24                                   l6557 2E62  
                                 l5669 3080                                   l5749 327C  
                                 l6805 3B00                                   l6487 2274  
                                 l6479 2190                                   l6583 4B22  
                                 l5695 3148                                   l5687 30F6  
                                 l6585 4B62                                   l6649 4A22  
                                 l6681 3FB0                                   l6833 3BD0  
                                 l6817 3B78                                   l6809 3B18  
                                 l5699 3178                                   l6691 4012  
                                 l6827 3BBE                                   l6819 3B84  
                                 l6923 2ACC                                   l6677 3F96  
                                 l6669 3EE8                                   l6845 3C0E  
                                 l6853 3C2E                                   l6847 3C12  
                                 l6855 3C70                                   l6943 2B46  
                                 l6935 2B24                                   l6689 3FEA  
                                 l6849 3C20                                   l6793 3AAC  
                                 l6785 3A84                                   l6795 3ABE  
                                 l6947 2B56                                   l6939 2B2C  
                                 l6883 29F0                                   l6965 2BD8  
                                 l6983 2C64                                   l6975 2C50  
                                 l6967 2C0A                                   l6895 2A22  
                                 l6969 2C34                                   l6993 2C7C  
                                 STR_1 2062                                   STR_2 2090  
                                 STR_3 20A2                                   STR_4 2073  
                                 STR_5 2082                                   STR_6 209C  
                                 STR_7 2001                                   STR_8 202D  
                                 STR_9 2051                                   u2000 38BC  
                                 u2010 38EE                                   u2020 3920  
                                 u2040 39D8                                   u2060 3A2A  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   u2400 415E  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u3300 4366  
                                 u3410 2602                                   u1900 3684  
                                 u3500 291A                                   u1910 36B6  
                                 u3430 2614                                   u3280 42EA  
                                 u1840 5070                                   u3520 2930  
                                 u3600 3498                                   u1770 490A  
                                 u1930 3794                                   u3450 2664  
                                 u1860 35EA                                   u3460 28BC  
                                 u3380 2590                                   u1950 37E6  
                                 u3390 2592                                   u3630 3574  
                                 u3471 28EC                                   u3607 348A  
                                 u1880 3640                                   u3480 2902  
                                 u3800 4A12                                   u1777 48FC  
                                 u3481 2900                                   u3490 2916  
                                 u3810 3EE2                                   _T6PR 003F93  
                                 u1891 364A                                   u1980 3866  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u3590 3452                                   u3670 21E0  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u3760 2FEE                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u3690 231E  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u2975 320E                                   u2985 321E  
                                 u2977 3212                                   u3970 2A08  
                                 u2995 322E                                   u2987 3222  
                                 u2997 3232                                   u3978 2A0A  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 572A  
                     __end_of_ADCC_ISR 53AA                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01C4                                   _ctoa 4C30  
                                 _main 29E0                                   _dtoa 2560  
                                 _prec 0026                                   _nout 0022  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 32D0  
                                 btemp 003E      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 002E              __end_of_SPI1_Exchange8bit 57EE  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 562C  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005F             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 5902                       __end_of_INT1_ISR 5912  
                     __end_of_INT2_ISR 5922         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 4894          __end_of_OSCILLATOR_Initialize 58D2  
                                PRLOCK 0039EF                        __end_of___aodiv 380E  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 3A4E  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 2040                                  STR_11 2018  
                                STR_12 2099                                  STR_21 20AA  
                                STR_13 20AD                                  STR_15 20A7  
                                STR_17 20A7                          __CFG_WDTE$OFF 000000  
                                STR_19 20AA                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005F                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 597C  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 5604  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 526A  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 5876  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 0031  
                                _flags 0028                                  _fputc 42C6  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 4A72  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005F  
                                _width 0024                                  _putch 5842  
             _INT1_SetInterruptHandler 558A                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003E                                  ltemp1 0042  
                                ltemp2 0046               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 003E  
                                ttemp1 0041                                  ttemp2 0044  
                                ttemp3 0047                                  ttemp5 003F  
                                ttemp6 0042                                  ttemp7 0046  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 54EA  
          _UART1_SetRxInterruptHandler 54C2                                  wtemp0 003E  
                                wtemp1 0040                                  wtemp2 0042  
                                wtemp3 0044                                  wtemp4 0046  
                                wtemp5 0048                                  wtemp8 003F  
                      __end_of_sprintf 4726                        __end_of_strncmp 41B2  
                  ??_UART1_tx_vect_isr 005F              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 5652               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 50A2                  __end_of_ringBufS_init 544A  
                      __initialization 458E                      _UART2_rx_vect_isr 567C  
                         __end_of_ctoa 4CB8                           __end_of_main 2D0C  
                         __end_of_dtoa 29E0                           __end_of_stoa 358E  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005F  
             _TMR5_SetInterruptHandler 553A                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005F              __end_of_UART1_tx_vect_isr 562A  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 54EA  
                     _UART1_Initialize 4DF8                      _UART2_tx_vect_isr 5654  
                   _UART2_Transmit_ISR 52FE                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005F  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               u102_40 587E                                 u102_46 5880  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 u111_48 56F4  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 u113_48 5716  
                               i2l1135 5262                         __CFG_WDTCCS$SC 000000  
                               u115_48 5738                                 u126_48 577C  
                               _SCANPR 0039F7                                 u283_48 575A  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 4FC6  
                  ??_UART2_tx_vect_isr 005F              __end_of_UART2_rx_vect_isr 56A2  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 5932  
                     _UART2_Initialize 4EBE                                 _WaitMs 5354  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4B9E                                 _memset 2D0C  
                               clear_0 460E                                 clear_1 461C  
                               clear_2 462E                                 clear_3 463A  
                               clear_4 4646                                 _printf 4E5C  
                   _eaDogM_WriteString 49D6                              ?_ADCC_ISR 005F  
                               _strlen 4894                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 5012                         _PMD_Initialize 58D2  
 __end_of_INT2_DefaultInterruptHandler 5988  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 5986                           __pdataCOMRAM 005E  
            __end_of_UART2_tx_vect_isr 567A                                 lltemp0 003E  
                               lltemp1 0046                                 lltemp2 004E  
                               lltemp3 0056                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 4F78  
                     __end_of_vfprintf 4B9E                             _StartTimer 526A  
                      _CLC1_Initialize 56C4          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 50E8                      _SYSTEM_Initialize 512E  
                           __accesstop 0060                __end_of__initialization 4658  
                            ?_INT0_ISR 005F                              ?_INT1_ISR 005F  
                            ?_INT2_ISR 005F              __end_of_CLKREF_Initialize 593C  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 5170                 __end_of_ringBufS_flush 4C30  
                       __pcstackCOMRAM 005F                             ___inthi_sp 0D50  
                         __pidataBANK0 5890                           __pidataBANK1 4726  
                         __pidataBANK3 4CB8                              ?_TMR5_ISR 005F  
                            ?_TMR6_ISR 005F                         ivt0x8_undefint 00AC  
                        __end_of_fputc 43D2                          __end_of_fputs 4B0A  
                __end_of_TMR5_CallBack 5790                          __end_of_putch 585C  
              __end_of_TMR6_Initialize 5512                 __end_of_PMD_Initialize 58E6  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005F  
                __end_of_TMR6_CallBack 576E            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 5948  
     __end_of_INT2_SetInterruptHandler 558A               _UART2_RxInterruptHandler 0016  
            __end_of_SYSTEM_Initialize 5170                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 5826  
                           __pbssBANK0 0060                             __pbssBANK1 01C4  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 001F                             ??_INT0_ISR 005F  
                           ??_INT1_ISR 005F                             ??_INT2_ISR 005F  
                    __end_of_TimerDone 56C4                       _DMA1_DMADCNT_ISR 593C  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 580A  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 553A  
              __end_of_ADCC_Initialize 505C                             ??_TMR5_ISR 00F4  
                           ??_TMR6_ISR 005F                     __size_of_secs_send 01B8  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 5790                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005F                       _DMA1_DMASCNT_ISR 5924  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 56E6  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005F                   __size_of_UART1_Write 003E  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 5842  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 51B0  
                   __end_of_UART1_Read 522C      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 4E5C                        __size_of_WaitMs 002A  
                              ___aodiv 358E                                ___aomod 380E  
            __end_of_UART1_Receive_ISR 57B0                           __psmallconst 2000  
                 __end_of_init_display 44BC                                __pcinit 458E  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 58E6  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 29E0  
                              __ptext1 3A4E                                __ptext2 3E6A  
                              __ptext3 44BC                                __ptext4 532A  
                              __ptext5 595E                                __ptext6 3C86  
                              __ptext7 465E                                __ptext8 2FF8  
                              __ptext9 53AA                      _UART2_Receive_ISR 57B0  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us207999 3A3C  
                              us337999 257A                                us354999 32E2  
                _OSCILLATOR_Initialize 58BC                                us196999 37F8  
                         __size_of_abs 0046                                _r_block 0060  
                         __size_of_pad 0114                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 4F1C  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 465E  
                              _strncmp 4022                   end_of_initialization 4658  
                    __end_of_secs_send 4022               _INT2_SetInterruptHandler 5562  
             __size_of_secs_II_message 01E4                             _r_protocol 2FF8  
  __end_of_UART1_SetTxInterruptHandler 54C2            _UART1_SetTxInterruptHandler 549A  
  __end_of_UART2_SetRxInterruptHandler 549A            _UART2_SetRxInterruptHandler 5472  
                           _t_protocol 3A4E                      __end_of_vfpfcnvrt 2560  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 597A  
            __end_of_UART2_Receive_ISR 57D0                         wdtdelay@dcount 0085  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00F4  
                       _block_checksum 44BC                  _INT1_InterruptHandler 001C  
                            _PORTDbits 003FCD               _TMR6_SetInterruptHandler 5512  
                _TMR5_InterruptHandler 0004   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 5602  
          _ADCC_SetADIInterruptHandler 55DA                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 4D28  
                      _SPI1_Initialize 58A6                       _UART1_put_buffer 532A  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 537E  
         __end_of_INTERRUPT_Initialize 4DF8                 __end_of_block_checksum 458E  
 __end_of_INT0_DefaultInterruptHandler 5984  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 5982             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 598A                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 2FF8                         __end_of_printf 4EBE  
             __end_of_DMA1_DMADCNT_ISR 5946                  __end_of_INT0_CallBack 5708  
                       __end_of_strlen 4936                    start_initialization 458E  
 __end_of_TMR5_DefaultInterruptHandler 5890  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 5876        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 50A2                  __end_of_INT1_CallBack 572A  
                          __end_of_pad 42C6                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5422                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 574C                   secs_II_message@block 0001  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 5932  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 5954  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 56A2  
                        _ringBufS_init 5422                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00DE  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 5012  
                      run_checksum@sum 002A        __end_of_eaDogM_WriteStringAtPos 52D2  
              __end_of_DMA1_Initialize 4D92                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 55DA                          __pcstackBANK0 00F4  
              __end_of_SPI1_Initialize 58BC               _UART1_RxInterruptHandler 0010  
             _UART2_TxInterruptHandler 0013              __size_of_ringBufS_put_dma 00AA  
                         _init_display 43D2                 __end_of_DMA1_DMAOR_ISR 595E  
               __size_of_TMR5_CallBack 0022                  _INT2_InterruptHandler 0019  
                _TMR6_InterruptHandler 0007                 __size_of_TMR6_CallBack 0022  
               _PIN_MANAGER_Initialize 4936                   __end_of_wait_lcd_set 5974  
                            __ptext100 5954                              __ptext101 522C  
                            __ptext102 5170                              __ptext103 576E  
                            __ptext104 5876                              __ptext105 0000  
                   __end_of_StartTimer 52A6                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0094                               _ADCC_ISR 5380  
                  __size_of_r_protocol 02D8                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 0238                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 4D92                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005F  
                             _INT0_ISR 58F4                               _INT1_ISR 5904  
                             _INT2_ISR 5914                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 3E6A  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0079  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                             i2u313_48 5616                              _ring_buf1 0343  
                            _ring_buf2 0300                               i2u315_48 563E  
                             i2u156_48 5396                               i2u317_48 5666  
                             i2u319_48 568E                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             i2u396_40 525A                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 52FE  
                             _TMR5_ISR 522C                               _TMR6_ISR 585C  
                            _vfpfcnvrt 20B2                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 576E                              _start_lcd 5974  
            __size_of_send_lcd_cmd_dma 004E                          _TMR6_CallBack 574C  
             __end_of_UART1_put_buffer 5354                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 51EE  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 45A2                              copy_data1 45C4  
                            copy_data2 45E6               _INT0_SetInterruptHandler 55B2  
               _uart1TxBufferRemaining 003B    __end_of_UART2_SetTxInterruptHandler 5472  
          _UART2_SetTxInterruptHandler 544A                           _uart1RxCount 0038  
                         _uart2RxCount 0032                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 53D2                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 57EE  
                         _send_lcd_cmd 53FA                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 580A  
                __end_of_DMA1_DMAA_ISR 5952   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005F               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 58F4                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 00F4                               __ptext10 5354  
                             __ptext11 56A2                               __ptext20 5422  
                             __ptext12 526A                               __ptext21 52A6  
                             __ptext13 5966                               __ptext30 2D0C  
                             __ptext22 49D6                               __ptext14 51B0  
                             __ptext31 4E5C                               __ptext23 58E6  
                             __ptext15 51EE                               __ptext40 4C30  
                             __ptext32 4B0A                               __ptext24 4F78  
                             __ptext16 43D2                               __ptext41 41B2  
                             __ptext33 20B2                               __ptext25 596E  
                             __ptext17 53D2                               __ptext50 5472  
                             __ptext42 4894                               __ptext34 4022  
                             __ptext26 57EE                               __ptext18 53FA  
                             __ptext51 4DF8                               __ptext43 4A72  
                             __ptext35 32D0                               __ptext27 4F1C  
                             __ptext19 57D0                               __ptext60 4936  
                             __ptext52 549A                               __ptext44 42C6  
                             __ptext36 2560                               __ptext28 5974  
                             __ptext61 58BC                               __ptext53 54C2  
                             __ptext45 5842                               __ptext37 505C  
                             __ptext29 4B9E                               __ptext70 5932  
                             __ptext62 580A                               __ptext54 54EA  
                             __ptext46 47EA                               __ptext38 380E  
                             __ptext71 56C4                               __ptext63 4D92  
                             __ptext55 5512                               __ptext47 512E  
                             __ptext39 358E                               __ptext80 5914  
                             __ptext72 5012                               __ptext64 4FC6  
                             __ptext56 50A2                               __ptext48 4EBE  
                             __ptext81 572A                               __ptext73 55DA  
                             __ptext65 5562                               __ptext57 553A  
                             __ptext49 544A                               __ptext90 5654  
                             __ptext82 5986                               __ptext74 58F4  
                             __ptext66 558A                               __ptext58 58A6  
                             __ptext91 52FE                               __ptext83 597C  
                             __ptext75 56E6                               __ptext67 55B2  
                             __ptext59 58D2                               __ptext92 567C  
                             __ptext84 5380                               __ptext76 5982  
                             __ptext68 5826                               __ptext93 57B0  
                             __ptext85 5988                               __ptext77 5904  
                             __ptext69 4D28                               __ptext94 585C  
                             __ptext86 5604                               __ptext78 5708  
                             __ptext95 574C                               __ptext87 52D2  
                             __ptext79 5984                               __ptext96 50E8  
                             __ptext88 562C                               __ptext97 5924  
                             __ptext89 5790                               __ptext98 593C  
                             __ptext99 5948                        _secs_II_message 3C86  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 47EA  
                        __size_of_ctoa 0088                          __size_of_main 032C  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005F                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 000A  
                            stoa@F1142 00DE                     ??_DMA1_DMASCNT_ISR 00F4  
                             _spi_link 006D                               _wdtdelay 4F1C  
           __end_of_UART2_Transmit_ISR 532A                               _vfprintf 4B0A  
                    _UART1_is_rx_ready 5966                            _UART1_Write 51B0  
 __end_of_INT1_DefaultInterruptHandler 5986  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 5984                      _UART1_is_tx_ready 595E  
                      r_protocol@retry 005E                          ??_Default_ISR 005F  
                   __end_of_r_protocol 32D0                            _uart1RxHead 003A  
                          _uart1TxHead 003D                            _uart2RxHead 0034  
                          _uart1RxTail 0039                            _uart2TxHead 0037  
                          _uart1TxTail 003C                            _uart2RxTail 0033  
                          _uart2TxTail 0036                           _wait_lcd_set 596E  
                   _EXT_INT_Initialize 4FC6   __end_of_TMR6_DefaultInterruptHandler 512E  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 50E8  
                   __end_of_t_protocol 3C86   __end_of_ADCC_DefaultInterruptHandler 598A  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 5988  
                             intlevel2 0000                      _send_lcd_cmd_long 53D2  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 4A72  
              __end_of_NCO1_Initialize 5826                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 596E                             _UART1_Read 51EE  
               __size_of_INT1_CallBack 0022              __end_of_UART1_is_tx_ready 5966  
               __size_of_INT2_CallBack 0022                 _uart2TxBufferRemaining 0035  
                     _send_lcd_cmd_dma 4F78                  TMR5_ISR@CountCallBack 002C  
              __end_of_secs_II_message 3E6A       __end_of_INT1_SetInterruptHandler 55B2  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 00F4  
             _UART1_TxInterruptHandler 000D                        t_protocol@retry 0030  
            __end_of_send_lcd_cmd_long 53FA                    __end_of_Default_ISR 5982  
       __end_of_PIN_MANAGER_Initialize 49D6                  __size_of_run_checksum 0028  
              _eaDogM_WriteStringAtPos 52A6              __size_of_UART2_Initialize 005E  
